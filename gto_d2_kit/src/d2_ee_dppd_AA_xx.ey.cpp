/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49738 = 0 * ae;
    const double C49737 = ae * be;
    const double C49736 = 0 * be;
    const double C49735 = xA - xB;
    const double C49734 = ae + be;
    const double C49733 = 0 * be;
    const double C49839 = p + q;
    const double C49838 = p * q;
    const double C49844 = xP - xQ;
    const double C49843 = bs[2];
    const double C49851 = std::pow(ae, 2);
    const double C49849 = bs[3];
    const double C49862 = bs[4];
    const double C49883 = bs[5];
    const double C49916 = bs[6];
    const double C49962 = bs[7];
    const double C50017 = yP - yQ;
    const double C50076 = zP - zQ;
    const double C125 = bs[0];
    const double C50550 = ce + de;
    const double C50549 = ce * de;
    const double C50548 = xC - xD;
    const double C50572 = yC - yD;
    const double C50588 = zC - zD;
    const double C50676 = yA - yB;
    const double C50681 = zA - zB;
    const double C49744 = 2 * C49737;
    const double C49741 = -2 * C49736;
    const double C49743 = C49737 * C49735;
    const double C49742 = C49735 * C49736;
    const double C50523 = C49735 * be;
    const double C50522 = C49735 * ae;
    const double C50521 = std::pow(C49735, 2);
    const double C49745 = C49738 / C49734;
    const double C49740 = 2 * C49734;
    const double C49739 = std::pow(C49734, 2);
    const double C49840 = 2 * C49838;
    const double C49852 = C49844 * ae;
    const double C49848 = std::pow(C49844, 2);
    const double C50030 = std::pow(C50017, 2);
    const double C50089 = std::pow(C50076, 2);
    const double C50552 = 2 * C50550;
    const double C50562 = std::pow(C50550, 2);
    const double C50554 = C50548 * de;
    const double C50553 = C50548 * ce;
    const double C50551 = std::pow(C50548, 2);
    const double C50573 = std::pow(C50572, 2);
    const double C50625 = C50572 * de;
    const double C50624 = C50572 * ce;
    const double C50589 = std::pow(C50588, 2);
    const double C50653 = C50588 * de;
    const double C50652 = C50588 * ce;
    const double C50690 = std::pow(C50676, 2);
    const double C50704 = C50676 * be;
    const double C50703 = C50676 * ae;
    const double C50716 = std::pow(C50681, 2);
    const double C50728 = C50681 * be;
    const double C50727 = C50681 * ae;
    const double C49747 = ae * C49741;
    const double C49748 = C49742 / C49734;
    const double C50524 = C50521 * C49737;
    const double C50531 = std::pow(C49740, -1);
    const double C50816 = std::pow(C49740, -2);
    const double C49749 = 2 * C49739;
    const double C49746 = C49739 * C49740;
    const double C50795 = 4 * C49739;
    const double C49842 = C49840 / C49839;
    const double C139 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C49840 / C49839, 2) -
          (bs[1] * C49840) / C49839) *
         std::pow(ae, 2)) /
        C49739;
    const double C126 = -(C49844 * bs[1] * C49840) / C49839;
    const double C268 = -(C50017 * bs[1] * C49840) / C49839;
    const double C415 = -(C50076 * bs[1] * C49840) / C49839;
    const double C49854 = C49849 * C49852;
    const double C49865 = C49862 * C49852;
    const double C49888 = C49883 * C49852;
    const double C49924 = C49916 * C49852;
    const double C49973 = C49962 * C49852;
    const double C132 = (-(bs[1] * C49852 * C49840) / C49839) / C49734;
    const double C49864 = C49848 * C49862;
    const double C49887 = C49848 * C49883;
    const double C49923 = C49848 * C49916;
    const double C49972 = C49848 * C49962;
    const double C50563 = std::pow(C50552, -1);
    const double C50804 = std::pow(C50552, -2);
    const double C50567 = 2 * C50562;
    const double C50802 = 4 * C50562;
    const double C50555 = C50551 * C50549;
    const double C50574 = C50573 * C50549;
    const double C50590 = C50589 * C50549;
    const double C50691 = C50690 * C49737;
    const double C50717 = C50716 * C49737;
    const double C49751 = 0 - C49748;
    const double C50525 = C50524 / C49734;
    const double C49755 = C49736 / C49749;
    const double C49752 = C49733 / C49749;
    const double C49845 = std::pow(C49842, 2);
    const double C49850 = -C49842;
    const double C49863 = std::pow(C49842, 4);
    const double C49917 = std::pow(C49842, 6);
    const double C50556 = C50555 / C50550;
    const double C50575 = C50574 / C50550;
    const double C50591 = C50590 / C50550;
    const double C50692 = C50691 / C49734;
    const double C50718 = C50717 / C49734;
    const double C49757 = C49751 * ae;
    const double C50526 = -C50525;
    const double C49847 = C49843 * C49845;
    const double C140 = (2 * ae * C49845 * C49843 * C49844 * ae +
                         C49844 *
                             (C49843 * C49845 + std::pow(C49844, 2) * bs[3] *
                                                    std::pow(-C49842, 3)) *
                             std::pow(ae, 2)) /
                        C49739;
    const double C133 = (C49844 * C49845 * C49843 * C49852) / C49734 -
                        (ae * bs[1] * C49840) / (C49839 * C49734);
    const double C278 = (C50017 * C49845 * C49843 * C49852) / C49734;
    const double C425 = (C50076 * C49845 * C49843 * C49852) / C49734;
    const double C49853 = std::pow(C49850, 3);
    const double C49884 = std::pow(C49850, 5);
    const double C49963 = std::pow(C49850, 7);
    const double C49869 = C49863 * C49865;
    const double C49868 = C49864 * C49863;
    const double C49882 = C49862 * C49863;
    const double C49929 = C49917 * C49924;
    const double C49928 = C49923 * C49917;
    const double C49961 = C49916 * C49917;
    const double C50557 = -C50556;
    const double C50576 = -C50575;
    const double C50592 = -C50591;
    const double C50693 = -C50692;
    const double C50719 = -C50718;
    const double C49761 = C49757 / C49734;
    const double C50527 = std::exp(C50526);
    const double C49855 = C49847 * ae;
    const double C127 = C49847 * C49848 - (bs[1] * C49840) / C49839;
    const double C267 = C50017 * C49844 * C49847;
    const double C269 = C49847 * C50030 - (bs[1] * C49840) / C49839;
    const double C414 = C50076 * C49844 * C49847;
    const double C416 = C49847 * C50089 - (bs[1] * C49840) / C49839;
    const double C805 = C50076 * C50017 * C49847;
    const double C49856 = C49853 * C49854;
    const double C49861 = C49849 * C49853;
    const double C288 =
        (C50017 * (C49847 + C49848 * C49849 * C49853) * C49851) / C49739;
    const double C435 =
        (C50076 * (C49847 + C49848 * C49849 * C49853) * C49851) / C49739;
    const double C49893 = C49884 * C49888;
    const double C49892 = C49887 * C49884;
    const double C49915 = C49883 * C49884;
    const double C49979 = C49963 * C49973;
    const double C49978 = C49972 * C49963;
    const double C49872 = C49844 * C49869;
    const double C49881 = ae * C49869;
    const double C50373 = C50017 * C49869;
    const double C49891 = C49882 * C49848;
    const double C49890 = C49844 * C49882;
    const double C49889 = C49882 * ae;
    const double C50480 = C49882 * C50030;
    const double C50489 = C50017 * C49882;
    const double C50506 = C49882 * C50089;
    const double C50513 = C50076 * C49882;
    const double C49933 = C49844 * C49929;
    const double C49960 = ae * C49929;
    const double C50058 = C49929 * C50030;
    const double C50117 = C49929 * C50089;
    const double C50136 = C50017 * C49929;
    const double C50155 = C50076 * C49929;
    const double C49976 = C49961 * C49848;
    const double C49975 = C49844 * C49961;
    const double C49974 = C49961 * ae;
    const double C50558 = std::exp(C50557);
    const double C50577 = std::exp(C50576);
    const double C50593 = std::exp(C50592);
    const double C50694 = std::exp(C50693);
    const double C50720 = std::exp(C50719);
    const double C49763 = C49761 - C49752;
    const double C49750 = C49743 * C50527;
    const double C50528 = C50527 * C50522;
    const double C50532 = C50531 * C50527;
    const double C50791 = C50527 / C49740;
    const double C50790 = C50527 * C50523;
    const double C2192 = C50816 * C50527;
    const double C49857 = C49844 * C49856;
    const double C279 = (C49845 * C49843 * C49852 + C49856 * C50030) / C49734;
    const double C426 = (C49845 * C49843 * C49852 + C49856 * C50089) / C49734;
    const double C810 = (C50076 * C50017 * C49856) / C49734;
    const double C1009 =
        (2 * C50017 * C49856 + C50017 * (C49856 + C49869 * C50030)) / C49734;
    const double C1123 = (C50017 * C49856 + C50017 * C49869 * C50089) / C49734;
    const double C1470 = (C50076 * (C49856 + C49869 * C50030)) / C49734;
    const double C1754 =
        (2 * C50076 * C49856 + C50076 * (C49856 + C49869 * C50089)) / C49734;
    const double C49867 = C49844 * C49861;
    const double C49866 = C49861 * ae;
    const double C49871 = C49861 + C49868;
    const double C50472 = C50017 * C49861;
    const double C128 =
        2 * C49844 * C49847 + C49844 * (C49847 + C49861 * C49848);
    const double C266 = C50017 * (C49847 + C49861 * C49848);
    const double C413 = C50076 * (C49847 + C49861 * C49848);
    const double C1005 =
        2 * C50017 * C49847 + C50017 * (C49847 + C49861 * C50030);
    const double C1119 = C50017 * C49847 + C50017 * C49861 * C50089;
    const double C1466 = C50076 * (C49847 + C49861 * C50030);
    const double C1750 =
        2 * C50076 * C49847 + C50076 * (C49847 + C49861 * C50089);
    const double C3405 =
        3 * (C49847 + C49861 * C50030) +
        C50017 * (2 * C50017 * C49861 + C50017 * (C49861 + C49882 * C50030));
    const double C3578 =
        C49847 + C49861 * C50030 + (C49861 + C49882 * C50030) * C50089;
    const double C4091 =
        C50076 * (2 * C50017 * C49861 + C50017 * (C49861 + C49882 * C50030));
    const double C7237 =
        3 * (C49847 + C49861 * C50089) +
        C50076 * (2 * C50076 * C49861 + C50076 * (C49861 + C49882 * C50089));
    const double C10846 = C50527 * C288;
    const double C13031 = C50527 * C435;
    const double C49897 = C49844 * C49893;
    const double C49914 = ae * C49893;
    const double C50045 = C50017 * C49893;
    const double C50104 = C50076 * C49893;
    const double C50379 = C49893 * C50030;
    const double C50399 = C49893 * C50089;
    const double C3408 =
        (3 * (C49856 + C49869 * C50030) +
         C50017 * (2 * C50017 * C49869 + C50017 * (C49869 + C49893 * C50030))) /
        C49734;
    const double C3581 =
        (C49856 + C49869 * C50030 + (C49869 + C49893 * C50030) * C50089) /
        C49734;
    const double C4094 =
        (C50076 * (2 * C50017 * C49869 + C50017 * (C49869 + C49893 * C50030))) /
        C49734;
    const double C7240 =
        (3 * (C49856 + C49869 * C50089) +
         C50076 * (2 * C50076 * C49869 + C50076 * (C49869 + C49893 * C50089))) /
        C49734;
    const double C49896 = C49882 + C49892;
    const double C49927 = C49915 * C49848;
    const double C49926 = C49844 * C49915;
    const double C49925 = C49915 * ae;
    const double C49932 = C49915 + C49928;
    const double C50490 = C49915 * C50030;
    const double C50509 = C50017 * C49915;
    const double C50514 = C49915 * C50089;
    const double C49983 = C49844 * C49979;
    const double C49982 = C49961 + C49978;
    const double C49886 = 2 * C49881;
    const double C49895 = C49861 + C49891;
    const double C49894 = C49890 * ae;
    const double C49920 = 2 * C49890;
    const double C50470 = C50017 * C49890;
    const double C50481 = C49861 + C50480;
    const double C50491 = 2 * C50489;
    const double C50507 = C49861 + C50506;
    const double C50515 = 2 * C50513;
    const double C49971 = 2 * C49960;
    const double C50063 = C49893 + C50058;
    const double C50122 = C49893 + C50117;
    const double C50143 = ae * C50136;
    const double C50184 = C50076 * C50136;
    const double C50402 = C50136 * C50089;
    const double C50162 = ae * C50155;
    const double C49981 = C49915 + C49976;
    const double C49980 = C49975 * ae;
    const double C50559 = C50558 * C50553;
    const double C50564 = C50563 * C50558;
    const double C50799 = C50558 * C50554;
    const double C50796 = C50558 / C50552;
    const double C930 = C50804 * C50558;
    const double C50626 = C50577 * C50624;
    const double C50629 = C50563 * C50577;
    const double C50808 = C50577 * C50625;
    const double C50803 = C50577 / C50552;
    const double C262 = C50804 * C50577;
    const double C50654 = C50593 * C50652;
    const double C50657 = C50563 * C50593;
    const double C50812 = C50593 * C50653;
    const double C50805 = C50593 / C50552;
    const double C411 = C50804 * C50593;
    const double C50705 = C50694 * C50703;
    const double C50708 = C50531 * C50694;
    const double C50820 = C50694 * C50704;
    const double C50819 = C50694 / C49740;
    const double C7850 = C50816 * C50694;
    const double C50729 = C50720 * C50727;
    const double C50732 = C50531 * C50720;
    const double C50825 = C50720 * C50728;
    const double C50824 = C50720 / C49740;
    const double C15464 = C50816 * C50720;
    const double C49756 = C49750 / C49739;
    const double C49754 = 2 * C49750;
    const double C49753 = -4 * C49750;
    const double C50793 = C50528 / C49749;
    const double C50792 = C50528 * C50523;
    const double C50789 = C50528 / C49734;
    const double C50535 = C50532 * C50523;
    const double C108 = C50532 / C50795;
    const double C22729 = C50532 / C49740;
    const double C2190 = (C50527 * std::pow(C50523, 2)) / C49739 + C50791;
    const double C50829 = C50790 / C49734;
    const double C2191 = (-2 * C50531 * C50790) / C49734;
    const double C49858 = C49857 + C49855;
    const double C49870 = C49867 * ae;
    const double C270 = C49844 * C49847 + C49867 * C50030;
    const double C417 = C49844 * C49847 + C49867 * C50089;
    const double C806 = C50076 * C50017 * C49867;
    const double C1004 =
        2 * C50017 * C49867 + C50017 * (C49867 + C49890 * C50030);
    const double C1118 = C50017 * C49867 + C50017 * C49890 * C50089;
    const double C1465 = C50076 * (C49867 + C49890 * C50030);
    const double C1749 =
        2 * C50076 * C49867 + C50076 * (C49867 + C49890 * C50089);
    const double C49874 = C49872 + C49866;
    const double C49873 = C49871 * C49851;
    const double C4508 =
        2 * C50076 * C50472 + C50076 * (C50472 + C50017 * C49882 * C50089);
    const double C14865 =
        3 * (C50472 + C50489 * C50089) +
        C50076 * (2 * C50076 * C50489 +
                  C50076 * (C50489 + C50017 * C49915 * C50089));
    const double C49900 = C49897 + C49889;
    const double C49922 = 2 * C49914;
    const double C50050 = ae * C50045;
    const double C50388 = 2 * C50045;
    const double C4511 =
        (2 * C50076 * C50373 + C50076 * (C50373 + C50045 * C50089)) / C49734;
    const double C14867 =
        (3 * (C50373 + C50045 * C50089) +
         C50076 * (2 * C50076 * C50045 + C50076 * (C50045 + C50136 * C50089))) /
        C49734;
    const double C50109 = ae * C50104;
    const double C50405 = 2 * C50104;
    const double C50380 = C49869 + C50379;
    const double C50400 = C49869 + C50399;
    const double C49899 = C49896 * C49851;
    const double C49931 = C49882 + C49927;
    const double C49930 = C49926 * ae;
    const double C49967 = 2 * C49926;
    const double C50477 = C49926 * C50030;
    const double C50501 = C50017 * C49926;
    const double C50503 = C49926 * C50089;
    const double C3404 =
        3 * (C49867 + C49890 * C50030) +
        C50017 * (2 * C50017 * C49890 + C50017 * (C49890 + C49926 * C50030));
    const double C3577 =
        C49867 + C49890 * C50030 + (C49890 + C49926 * C50030) * C50089;
    const double C4090 =
        C50076 * (2 * C50017 * C49890 + C50017 * (C49890 + C49926 * C50030));
    const double C7236 =
        3 * (C49867 + C49890 * C50089) +
        C50076 * (2 * C50076 * C49890 + C50076 * (C49890 + C49926 * C50089));
    const double C49937 = C49933 + C49925;
    const double C49936 = C49932 * C49851;
    const double C50492 = C49882 + C50490;
    const double C50510 = C50509 * C50089;
    const double C50516 = C49882 + C50514;
    const double C49987 = C49983 + C49974;
    const double C49986 = C49982 * C49851;
    const double C49898 = C49895 * ae;
    const double C129 = 3 * (C49847 + C49861 * C49848) +
                        C49844 * (2 * C49867 + C49844 * C49895);
    const double C265 = C50017 * (2 * C49867 + C49844 * C49895);
    const double C271 = C49847 + C49861 * C49848 + C49895 * C50030;
    const double C412 = C50076 * (2 * C49867 + C49844 * C49895);
    const double C418 = C49847 + C49861 * C49848 + C49895 * C50089;
    const double C807 = C50076 * C50017 * C49895;
    const double C4507 =
        2 * C50076 * C50470 + C50076 * (C50470 + C50017 * C49926 * C50089);
    const double C9070 =
        4 * (2 * C50472 + C50017 * C50481) +
        C50017 * (3 * C50481 + C50017 * (2 * C50017 * C49882 +
                                         C50017 * (C49882 + C49915 * C50030)));
    const double C9236 =
        2 * C50472 + C50017 * C50481 +
        (2 * C50017 * C49882 + C50017 * (C49882 + C49915 * C50030)) * C50089;
    const double C9750 =
        C50076 * (3 * C50481 + C50017 * (2 * C50017 * C49882 +
                                         C50017 * (C49882 + C49915 * C50030)));
    const double C10160 =
        2 * C50076 * C50481 +
        C50076 * (C50481 + (C49882 + C49915 * C50030) * C50089);
    const double C17636 =
        4 * (2 * C50076 * C49861 + C50076 * C50507) +
        C50076 * (3 * C50507 + C50076 * (2 * C50076 * C49882 +
                                         C50076 * (C49882 + C49915 * C50089)));
    const double C50068 = ae * C50063;
    const double C50389 = C50017 * C50063;
    const double C50127 = ae * C50122;
    const double C50406 = C50076 * C50122;
    const double C50149 = 2 * C50143;
    const double C50189 = ae * C50184;
    const double C50403 = C50045 + C50402;
    const double C50168 = 2 * C50162;
    const double C49985 = C49844 * C49981;
    const double C49984 = C49981 * ae;
    const double C50800 = C50559 / C50567;
    const double C50798 = C50559 / C50550;
    const double C50797 = C50559 * C50554;
    const double C929 = (2 * C50563 * C50559) / C50550;
    const double C50801 = C50564 * C50554;
    const double C116 = C50564 / C50802;
    const double C560 = C50564 / C50552;
    const double C50833 = C50799 / C50550;
    const double C928 = (C50558 * std::pow(C50553, 2)) / C50562 + C50796;
    const double C50810 = C50626 / C50567;
    const double C50809 = C50626 * C50625;
    const double C50806 = C50626 / C50550;
    const double C261 = (2 * C50563 * C50626) / C50550;
    const double C50811 = C50629 * C50625;
    const double C1000 = C50629 / C50802;
    const double C1232 = C50629 / C50552;
    const double C50835 = C50808 / C50550;
    const double C260 = (C50577 * std::pow(C50624, 2)) / C50562 + C50803;
    const double C50814 = C50654 / C50567;
    const double C50813 = C50654 * C50653;
    const double C50807 = C50654 / C50550;
    const double C410 = (2 * C50563 * C50654) / C50550;
    const double C50815 = C50657 * C50653;
    const double C1746 = C50657 / C50802;
    const double C1993 = C50657 / C50552;
    const double C50838 = C50812 / C50550;
    const double C409 = (C50593 * std::pow(C50652, 2)) / C50562 + C50805;
    const double C50822 = C50705 / C49749;
    const double C50821 = C50705 * C50704;
    const double C50817 = C50705 / C49734;
    const double C50711 = C50708 * C50704;
    const double C10727 = C50708 / C50795;
    const double C25610 = C50708 / C49740;
    const double C50841 = C50820 / C49734;
    const double C7849 = (-2 * C50531 * C50820) / C49734;
    const double C7848 = (C50694 * std::pow(C50704, 2)) / C49739 + C50819;
    const double C50827 = C50729 / C49749;
    const double C50826 = C50729 * C50728;
    const double C50818 = C50729 / C49734;
    const double C50735 = C50732 * C50728;
    const double C20908 = C50732 / C50795;
    const double C38322 = C50732 / C49740;
    const double C50844 = C50825 / C49734;
    const double C15463 = (-2 * C50531 * C50825) / C49734;
    const double C15462 = (C50720 * std::pow(C50728, 2)) / C49739 + C50824;
    const double C49760 = C49745 - C49756;
    const double C49759 = C49735 * C49754;
    const double C2200 =
        ((-C49754 / C49734) / C49740 - (0 * be) / C49734) / C49740 -
        (0 * be) / C49734;
    const double C10729 = -C49754 / C49734;
    const double C25614 = (-C49754 / C49734) / C49740 - (0 * be) / C49734;
    const double C49758 = C49753 / C49734;
    const double C50830 = C50792 / C49739;
    const double C8027 = C50789 * C288;
    const double C15765 = C50789 * C435;
    const double C50794 = C50535 / C49734;
    const double C2373 = C2190 * C288;
    const double C5404 = C2190 * C435;
    const double C25606 = -C50829;
    const double C49859 = ae * C49858;
    const double C134 =
        (C49845 * C49843 * C49852 + C49844 * C49858 + C49844 * C49847 * ae) /
        C49734;
    const double C277 = (C50017 * C49858) / C49734;
    const double C424 = (C50076 * C49858) / C49734;
    const double C49876 = ae * C49874;
    const double C49875 = C49844 * C49874;
    const double C49885 = 2 * C49874;
    const double C50024 = C50017 * C49874;
    const double C50083 = C50076 * C49874;
    const double C280 = (C49858 + C49874 * C50030) / C49734;
    const double C427 = (C49858 + C49874 * C50089) / C49734;
    const double C287 =
        (2 * ae * C50017 * C49856 + C49844 * C50017 * C49873) / C49739;
    const double C289 = ((C49847 + C49848 * C49849 * C49853) * C49851 +
                         C49873 * std::pow(C50017, 2)) /
                        C49739;
    const double C434 =
        (2 * ae * C50076 * C49856 + C49844 * C50076 * C49873) / C49739;
    const double C436 = ((C49847 + C49848 * C49849 * C49853) * C49851 +
                         C49873 * std::pow(C50076, 2)) /
                        C49739;
    const double C815 = (C50076 * C50017 * C49873) / C49739;
    const double C49903 = ae * C49900;
    const double C49902 = C49844 * C49900;
    const double C49919 = 2 * C49900;
    const double C50020 = C50017 * C49900;
    const double C50032 = C49900 * C50030;
    const double C50079 = C50076 * C49900;
    const double C50091 = C49900 * C50089;
    const double C50055 = 2 * C50050;
    const double C50114 = 2 * C50109;
    const double C9072 =
        (4 * (2 * C50373 + C50017 * C50380) +
         C50017 * (3 * C50380 + C50017 * (2 * C50045 + C50017 * C50063))) /
        C49734;
    const double C9238 = (2 * C50373 + C50017 * C50380 +
                          (2 * C50045 + C50017 * C50063) * C50089) /
                         C49734;
    const double C9752 =
        (C50076 * (3 * C50380 + C50017 * (2 * C50045 + C50017 * C50063))) /
        C49734;
    const double C10162 =
        (2 * C50076 * C50380 + C50076 * (C50380 + C50063 * C50089)) / C49734;
    const double C14866 =
        (3 * (C50380 + C50063 * C50089) +
         C50076 * (2 * C50076 * C50063 +
                   C50076 * (C50063 + (C49929 + C49979 * C50030) * C50089))) /
        C49734;
    const double C17638 =
        (4 * (2 * C50076 * C49869 + C50076 * C50400) +
         C50076 * (3 * C50400 + C50076 * (2 * C50104 + C50076 * C50122))) /
        C49734;
    const double C49901 = C49844 * C49899;
    const double C50018 = C50017 * C49899;
    const double C50077 = C50076 * C49899;
    const double C290 = (2 * ae * (C49856 + C49869 * C50030) +
                         C49844 * (C49873 + C49899 * C50030)) /
                        C49739;
    const double C437 = (2 * ae * (C49856 + C49869 * C50089) +
                         C49844 * (C49873 + C49899 * C50089)) /
                        C49739;
    const double C1013 =
        (2 * C50017 * C49873 + C50017 * (C49873 + C49899 * C50030)) / C49739;
    const double C1474 = (C50076 * (C49873 + C49899 * C50030)) / C49739;
    const double C1758 =
        (2 * C50076 * C49873 + C50076 * (C49873 + C49899 * C50089)) / C49739;
    const double C49935 = C49844 * C49931;
    const double C49934 = C49931 * ae;
    const double C49968 = 3 * C49931;
    const double C50468 = C50017 * C49931;
    const double C1003 =
        2 * C50017 * C49895 + C50017 * (C49895 + C49931 * C50030);
    const double C1117 = C50017 * C49895 + C50017 * C49931 * C50089;
    const double C1464 = C50076 * (C49895 + C49931 * C50030);
    const double C1748 =
        2 * C50076 * C49895 + C50076 * (C49895 + C49931 * C50089);
    const double C3403 =
        3 * (C49895 + C49931 * C50030) +
        C50017 * (2 * C50017 * C49931 + C50017 * (C49931 + C49981 * C50030));
    const double C3576 =
        C49895 + C49931 * C50030 + (C49931 + C49981 * C50030) * C50089;
    const double C4089 =
        C50076 * (2 * C50017 * C49931 + C50017 * (C49931 + C49981 * C50030));
    const double C7235 =
        3 * (C49895 + C49931 * C50089) +
        C50076 * (2 * C50076 * C49931 + C50076 * (C49931 + C49981 * C50089));
    const double C50478 = C49890 + C50477;
    const double C16743 =
        3 * (C50470 + C50501 * C50089) +
        C50076 * (2 * C50076 * C50501 +
                  C50076 * (C50501 + C50017 * C49975 * C50089));
    const double C50504 = C49890 + C50503;
    const double C49942 = ae * C49937;
    const double C49940 = C49844 * C49937;
    const double C49966 = 2 * C49937;
    const double C50038 = C49937 * C50030;
    const double C50049 = C50017 * C49937;
    const double C50097 = C49937 * C50089;
    const double C50108 = C50076 * C49937;
    const double C49939 = C49844 * C49936;
    const double C50036 = C49936 * C50030;
    const double C50046 = C50017 * C49936;
    const double C50095 = C49936 * C50089;
    const double C50105 = C50076 * C49936;
    const double C50493 = C50017 * C50492;
    const double C14864 =
        3 * (C50481 + C50492 * C50089) +
        C50076 * (2 * C50076 * C50492 +
                  C50076 * (C50492 + (C49915 + C49961 * C50030) * C50089));
    const double C50511 = C50489 + C50510;
    const double C50517 = C50076 * C50516;
    const double C49993 = ae * C49987;
    const double C49990 = C49844 * C49987;
    const double C50062 = C49987 * C50030;
    const double C50121 = C49987 * C50089;
    const double C50141 = C50017 * C49987;
    const double C50160 = C50076 * C49987;
    const double C49989 = C49844 * C49986;
    const double C50059 = C49986 * C50030;
    const double C50118 = C49986 * C50089;
    const double C50137 = C50017 * C49986;
    const double C50156 = C50076 * C49986;
    const double C50073 = 2 * C50068;
    const double C50390 = C50388 + C50389;
    const double C50132 = 2 * C50127;
    const double C50407 = C50405 + C50406;
    const double C50194 = 2 * C50189;
    const double C20344 =
        (4 * (2 * C50076 * C50045 + C50076 * C50403) +
         C50076 * (3 * C50403 +
                   C50076 * (2 * C50184 +
                             C50076 * (C50136 + C50017 * C49979 * C50089)))) /
        C49734;
    const double C49988 = C49967 + C49985;
    const double C50832 = C50797 / C50562;
    const double C50834 = C50801 / C50550;
    const double C263 = -C50833;
    const double C50836 = C50809 / C50562;
    const double C50837 = C50811 / C50550;
    const double C926 = -C50835;
    const double C50839 = C50813 / C50562;
    const double C50840 = C50815 / C50550;
    const double C1577 = -C50838;
    const double C50842 = C50821 / C49739;
    const double C50823 = C50711 / C49734;
    const double C22730 = -C50841;
    const double C50845 = C50826 / C49739;
    const double C50828 = C50735 / C49734;
    const double C32096 = -C50844;
    const double C7857 = C49760 * C133;
    const double C124 =
        (C49760 / C49740 - (0 * be) / C49734) / C49740 - (0 * be) / C49734;
    const double C22737 = C49760 / C49740 - (0 * be) / C49734;
    const double C49762 = C49759 / C49734;
    const double C10738 = C10729 * C133;
    const double C10734 = C10729 * C1009;
    const double C10733 = C10729 * C279;
    const double C10732 = C10729 * C278;
    const double C10731 = C10729 * C132;
    const double C10852 = C10729 * C3408;
    const double C11001 = C10729 * C3581;
    const double C11000 = C10729 * C1123;
    const double C10999 = C10729 * C426;
    const double C10998 = C10729 * C425;
    const double C10997 = C10729 * C810;
    const double C10996 = C10729 * C1470;
    const double C10995 = C10729 * C4094;
    const double C12296 = C10729 * C1754;
    const double C12295 = C10729 * C4511;
    const double C14875 = C10729 * C7240;
    const double C14874 = C10729 * C14867;
    const double C25617 = C25614 * C133;
    const double C50847 = C50791 - C50830;
    const double C50831 = C50793 - C50794;
    const double C25787 = C25606 * C288;
    const double C28917 = C25606 * C435;
    const double C141 =
        ((C49847 + C49848 * C49849 * C49853) * C49851 + C49859 + C49859 +
         C49844 *
             (2 * ae * C49856 +
              C49844 *
                  (C49849 * C49853 + C49848 * bs[4] * std::pow(C49842, 4)) *
                  C49851)) /
        C49739;
    const double C2204 = C2200 * C134;
    const double C7866 = C49760 * C134;
    const double C10739 = C10729 * C134;
    const double C25626 = C25614 * C134;
    const double C7859 = C49760 * C277;
    const double C10737 = C10729 * C277;
    const double C25619 = C25614 * C277;
    const double C8248 = C49760 * C424;
    const double C11003 = C10729 * C424;
    const double C26008 = C25614 * C424;
    const double C49877 = C49856 + C49875;
    const double C50025 = ae * C50024;
    const double C811 = (C50076 * C50024) / C49734;
    const double C50084 = ae * C50083;
    const double C7861 = C49760 * C280;
    const double C10736 = C10729 * C280;
    const double C25621 = C25614 * C280;
    const double C8251 = C49760 * C427;
    const double C11010 = C10729 * C427;
    const double C26011 = C25614 * C427;
    const double C2391 = C2190 * C287;
    const double C2375 = C2191 * C287;
    const double C8043 = C50789 * C287;
    const double C8029 = C50532 * C287;
    const double C10856 = C50527 * C287;
    const double C25803 = C25606 * C287;
    const double C25789 = C50532 * C287;
    const double C2386 = C2190 * C289;
    const double C8031 = C50789 * C289;
    const double C10848 = C50527 * C289;
    const double C25791 = C25606 * C289;
    const double C5416 = C2190 * C434;
    const double C5406 = C2191 * C434;
    const double C13035 = C50527 * C434;
    const double C15779 = C50789 * C434;
    const double C15767 = C50532 * C434;
    const double C28925 = C25606 * C434;
    const double C28919 = C50532 * C434;
    const double C5414 = C2190 * C436;
    const double C13033 = C50527 * C436;
    const double C15769 = C50789 * C436;
    const double C28923 = C25606 * C436;
    const double C3129 = C2190 * C815;
    const double C8789 = C50789 * C815;
    const double C11365 = C50527 * C815;
    const double C26549 = C25606 * C815;
    const double C49913 = C49899 + C49903;
    const double C49905 = C49869 + C49902;
    const double C50022 = ae * C50020;
    const double C50175 = C50076 * C50020;
    const double C50209 = 2 * C50020;
    const double C1122 = (C50024 + C50020 * C50089) / C49734;
    const double C50033 = C49874 + C50032;
    const double C50081 = ae * C50079;
    const double C50254 = 2 * C50079;
    const double C50092 = C49874 + C50091;
    const double C10854 = C10729 * C9072;
    const double C11002 = C10729 * C9238;
    const double C11366 = C10729 * C9752;
    const double C12294 = C10729 * C10162;
    const double C14873 = C10729 * C14866;
    const double C20350 = C10729 * C17638;
    const double C49904 = C49886 + C49901;
    const double C816 =
        (2 * ae * C50076 * C50017 * C49869 + C49844 * C50076 * C50018) / C49739;
    const double C1127 = (C50017 * C49873 + C50018 * C50089) / C49739;
    const double C2398 = C2190 * C290;
    const double C2383 = C2191 * C290;
    const double C8047 = C50789 * C290;
    const double C8033 = C50532 * C290;
    const double C10858 = C50527 * C290;
    const double C25807 = C25606 * C290;
    const double C25793 = C50532 * C290;
    const double C5422 = C2190 * C437;
    const double C5412 = C2191 * C437;
    const double C13037 = C50527 * C437;
    const double C15783 = C50789 * C437;
    const double C15771 = C50532 * C437;
    const double C28929 = C25606 * C437;
    const double C28921 = C50532 * C437;
    const double C3414 = C2190 * C1013;
    const double C8039 = C50789 * C1013;
    const double C10850 = C50527 * C1013;
    const double C25799 = C25606 * C1013;
    const double C4100 = C2190 * C1474;
    const double C8785 = C50789 * C1474;
    const double C11363 = C50527 * C1474;
    const double C26545 = C25606 * C1474;
    const double C7246 = C2190 * C1758;
    const double C14872 = C50527 * C1758;
    const double C15775 = C50789 * C1758;
    const double C31340 = C25606 * C1758;
    const double C49938 = C49920 + C49935;
    const double C4506 =
        2 * C50076 * C50468 + C50076 * (C50468 + C50017 * C49981 * C50089);
    const double C9069 =
        4 * (2 * C50470 + C50017 * C50478) +
        C50017 * (3 * C50478 + C50017 * (2 * C50017 * C49926 +
                                         C50017 * (C49926 + C49975 * C50030)));
    const double C9235 =
        2 * C50470 + C50017 * C50478 +
        (2 * C50017 * C49926 + C50017 * (C49926 + C49975 * C50030)) * C50089;
    const double C9749 =
        C50076 * (3 * C50478 + C50017 * (2 * C50017 * C49926 +
                                         C50017 * (C49926 + C49975 * C50030)));
    const double C10159 =
        2 * C50076 * C50478 +
        C50076 * (C50478 + (C49926 + C49975 * C50030) * C50089);
    const double C17635 =
        4 * (2 * C50076 * C49890 + C50076 * C50504) +
        C50076 * (3 * C50504 + C50076 * (2 * C50076 * C49926 +
                                         C50076 * (C49926 + C49975 * C50089)));
    const double C49959 = C49936 + C49942;
    const double C49944 = C49893 + C49940;
    const double C50041 = C49900 + C50038;
    const double C50054 = ae * C50049;
    const double C50180 = C50076 * C50049;
    const double C50201 = 2 * C50049;
    const double C50225 = C50049 * C50089;
    const double C50100 = C49900 + C50097;
    const double C50113 = ae * C50108;
    const double C50246 = 2 * C50108;
    const double C49943 = C49922 + C49939;
    const double C50039 = C49899 + C50036;
    const double C50051 = C49844 * C50046;
    const double C50178 = C50076 * C50046;
    const double C50197 = 2 * C50046;
    const double C1126 = (2 * ae * (C50017 * C49869 + C50045 * C50089) +
                          C49844 * (C50018 + C50046 * C50089)) /
                         C49739;
    const double C4514 =
        (2 * C50076 * C50018 + C50076 * (C50018 + C50046 * C50089)) / C49739;
    const double C50098 = C49899 + C50095;
    const double C50110 = C49844 * C50105;
    const double C50242 = 2 * C50105;
    const double C50494 = C50491 + C50493;
    const double C20343 =
        4 * (2 * C50076 * C50489 + C50076 * C50511) +
        C50076 * (3 * C50511 +
                  C50076 * (2 * C50076 * C50509 +
                            C50076 * (C50509 + C50017 * C49961 * C50089)));
    const double C50518 = C50515 + C50517;
    const double C49995 = C49929 + C49990;
    const double C50067 = C49937 + C50062;
    const double C50126 = C49937 + C50121;
    const double C50148 = ae * C50141;
    const double C50188 = C50076 * C50141;
    const double C50218 = C50141 * C50089;
    const double C50167 = ae * C50160;
    const double C49994 = C49971 + C49989;
    const double C50064 = C49936 + C50059;
    const double C50123 = C49936 + C50118;
    const double C50144 = C49844 * C50137;
    const double C50185 = C50076 * C50137;
    const double C50216 = C50137 * C50089;
    const double C50163 = C49844 * C50156;
    const double C11562 =
        (5 * (3 * C50380 + C50017 * C50390) +
         C50017 * (4 * C50390 +
                   C50017 * (3 * C50063 +
                             C50017 * (2 * C50136 +
                                       C50017 * (C49929 + C49979 * C50030))))) /
        C49734;
    const double C11670 =
        (3 * C50380 + C50017 * C50390 +
         (3 * C50063 +
          C50017 * (2 * C50136 + C50017 * (C49929 + C49979 * C50030))) *
             C50089) /
        C49734;
    const double C12018 =
        (C50076 * (4 * C50390 +
                   C50017 * (3 * C50063 +
                             C50017 * (2 * C50136 +
                                       C50017 * (C49929 + C49979 * C50030))))) /
        C49734;
    const double C12290 =
        (2 * C50076 * C50390 +
         C50076 * (C50390 + (2 * C50136 + C50017 * (C49929 + C49979 * C50030)) *
                                C50089)) /
        C49734;
    const double C22295 =
        (5 * (3 * C50400 + C50076 * C50407) +
         C50076 * (4 * C50407 +
                   C50076 * (3 * C50122 +
                             C50076 * (2 * C50155 +
                                       C50076 * (C49929 + C49979 * C50089))))) /
        C49734;
    const double C20349 = C10729 * C20344;
    const double C49992 = C49844 * C49988;
    const double C49991 = C49988 * ae;
    const double C50848 = C50796 - C50832;
    const double C50849 = C50800 - C50834;
    const double C50850 = C50803 - C50836;
    const double C50851 = C50810 - C50837;
    const double C50852 = C50805 - C50839;
    const double C50853 = C50814 - C50840;
    const double C50854 = C50819 - C50842;
    const double C50843 = C50822 - C50823;
    const double C50855 = C50824 - C50845;
    const double C50846 = C50827 - C50828;
    const double C22741 = C22737 * C134;
    const double C49764 = C50527 - C49762;
    const double C22935 = C50847 * C290;
    const double C22928 = C50847 * C287;
    const double C22923 = C50847 * C289;
    const double C22910 = C50847 * C288;
    const double C23666 = C50847 * C815;
    const double C23942 = C50847 * C1013;
    const double C24610 = C50847 * C1474;
    const double C32413 = C50847 * C437;
    const double C32407 = C50847 * C434;
    const double C32405 = C50847 * C436;
    const double C32395 = C50847 * C435;
    const double C34228 = C50847 * C1758;
    const double C105 = (C50789 - C50829) / C49740 - (C50847 * C50523) / C49734;
    const double C22920 = C50831 * C290;
    const double C22912 = C50831 * C287;
    const double C32403 = C50831 * C437;
    const double C32397 = C50831 * C434;
    const double C106 =
        (2 * C50532 + C50847) / C49740 - (C50831 * C50523) / C49734;
    const double C107 = C50831 / C49740 - C50535 / C49749;
    const double C49878 = C49877 + C49870;
    const double C286 =
        (C50017 * C49873 + C50025 + C50025 +
         C49844 * (2 * ae * C50017 * C49869 + C49844 * C50018)) /
        C49739;
    const double C8246 = C49760 * C811;
    const double C11004 = C10729 * C811;
    const double C26006 = C25614 * C811;
    const double C433 =
        (C50076 * C49873 + C50084 + C50084 +
         C49844 * (2 * ae * C50076 * C49869 + C49844 * C50077)) /
        C49739;
    const double C49921 = C49913 + C49903;
    const double C49906 = C49905 + C49894;
    const double C50176 = ae * C50175;
    const double C8253 = C49760 * C1122;
    const double C11009 = C10729 * C1122;
    const double C26013 = C25614 * C1122;
    const double C50034 = ae * C50033;
    const double C1008 = (2 * C50024 + C50017 * C50033) / C49734;
    const double C1469 = (C50076 * C50033) / C49734;
    const double C50093 = ae * C50092;
    const double C1753 = (2 * C50083 + C50076 * C50092) / C49734;
    const double C3134 = C2190 * C816;
    const double C3127 = C2191 * C816;
    const double C8793 = C50789 * C816;
    const double C8787 = C50532 * C816;
    const double C11368 = C50527 * C816;
    const double C23671 = C50847 * C816;
    const double C23664 = C50831 * C816;
    const double C26553 = C25606 * C816;
    const double C26547 = C50532 * C816;
    const double C3587 = C2190 * C1127;
    const double C9243 = C50789 * C1127;
    const double C11674 = C50527 * C1127;
    const double C24106 = C50847 * C1127;
    const double C26991 = C25606 * C1127;
    const double C49941 = C49938 * ae;
    const double C130 = 4 * (2 * C49867 + C49844 * C49895) +
                        C49844 * (3 * C49895 + C49844 * C49938);
    const double C272 = 2 * C49867 + C49844 * C49895 + C49938 * C50030;
    const double C273 = C50017 * (3 * C49895 + C49844 * C49938);
    const double C419 = 2 * C49867 + C49844 * C49895 + C49938 * C50089;
    const double C420 = C50076 * (3 * C49895 + C49844 * C49938);
    const double C808 = C50076 * C50017 * C49938;
    const double C1002 =
        2 * C50017 * C49938 + C50017 * (C49938 + C49988 * C50030);
    const double C1116 = C50017 * C49938 + C50017 * C49988 * C50089;
    const double C1463 = C50076 * (C49938 + C49988 * C50030);
    const double C1747 =
        2 * C50076 * C49938 + C50076 * (C49938 + C49988 * C50089);
    const double C49970 = C49959 + C49942;
    const double C49946 = C49944 + C49930;
    const double C50043 = ae * C50041;
    const double C50210 = C50017 * C50041;
    const double C50237 = C50076 * C50041;
    const double C50261 = 3 * C50041;
    const double C3580 = (C50033 + C50041 * C50089) / C49734;
    const double C50135 = C50046 + C50054;
    const double C50182 = ae * C50180;
    const double C50279 = 2 * C50180;
    const double C50226 = C50020 + C50225;
    const double C50102 = ae * C50100;
    const double C50255 = C50076 * C50100;
    const double C50286 = 3 * C50100;
    const double C50154 = C50105 + C50113;
    const double C49945 = C49844 * C49943;
    const double C49958 = 2 * C49943;
    const double C1012 =
        (2 * ae * (2 * C50017 * C49869 + C50017 * (C49869 + C49893 * C50030)) +
         C49844 * (2 * C50018 + C50017 * C50039)) /
        C49739;
    const double C1473 = (2 * ae * C50076 * (C49869 + C49893 * C50030) +
                          C49844 * C50076 * C50039) /
                         C49739;
    const double C3411 = (3 * (C49873 + C49899 * C50030) +
                          C50017 * (2 * C50018 + C50017 * C50039)) /
                         C49739;
    const double C3584 = (C49873 + C49899 * C50030 + C50039 * C50089) / C49739;
    const double C4097 = (C50076 * (2 * C50018 + C50017 * C50039)) / C49739;
    const double C50056 = C50055 + C50051;
    const double C3589 = C2191 * C1126;
    const double C9245 = C50532 * C1126;
    const double C13039 = C50527 * C1126;
    const double C16343 = C50789 * C1126;
    const double C24108 = C50831 * C1126;
    const double C26993 = C50532 * C1126;
    const double C28933 = C25606 * C1126;
    const double C13974 = C50527 * C4514;
    const double C16748 = C50789 * C4514;
    const double C30165 = C25606 * C4514;
    const double C1757 =
        (2 * ae * (2 * C50076 * C49869 + C50076 * (C49869 + C49893 * C50089)) +
         C49844 * (2 * C50077 + C50076 * C50098)) /
        C49739;
    const double C7243 = (3 * (C49873 + C49899 * C50089) +
                          C50076 * (2 * C50077 + C50076 * C50098)) /
                         C49739;
    const double C50115 = C50114 + C50110;
    const double C11561 =
        5 * (3 * C50481 + C50017 * C50494) +
        C50017 * (4 * C50494 +
                  C50017 * (3 * C50492 +
                            C50017 * (2 * C50017 * C49915 +
                                      C50017 * (C49915 + C49961 * C50030))));
    const double C11669 =
        3 * C50481 + C50017 * C50494 +
        (3 * C50492 +
         C50017 * (2 * C50017 * C49915 + C50017 * (C49915 + C49961 * C50030))) *
            C50089;
    const double C12017 =
        C50076 * (4 * C50494 +
                  C50017 * (3 * C50492 +
                            C50017 * (2 * C50017 * C49915 +
                                      C50017 * (C49915 + C49961 * C50030))));
    const double C12289 =
        2 * C50076 * C50494 +
        C50076 * (C50494 +
                  (2 * C50017 * C49915 + C50017 * (C49915 + C49961 * C50030)) *
                      C50089);
    const double C22294 =
        5 * (3 * C50507 + C50076 * C50518) +
        C50076 * (4 * C50518 +
                  C50076 * (3 * C50516 +
                            C50076 * (2 * C50076 * C49915 +
                                      C50076 * (C49915 + C49961 * C50089))));
    const double C49998 = C49995 + C49980;
    const double C50072 = ae * C50067;
    const double C50202 = C50017 * C50067;
    const double C50233 = C50076 * C50067;
    const double C50268 = C50067 * C50089;
    const double C50131 = ae * C50126;
    const double C50247 = C50076 * C50126;
    const double C50193 = ae * C50188;
    const double C50221 = C50049 + C50218;
    const double C49997 = C49844 * C49994;
    const double C50069 = C49844 * C50064;
    const double C50198 = C50017 * C50064;
    const double C50231 = C50076 * C50064;
    const double C3583 =
        (2 * ae * (C49869 + C49893 * C50030 + C50063 * C50089) +
         C49844 * (C50039 + C50064 * C50089)) /
        C49739;
    const double C9753 =
        (2 * ae * C50076 *
             (3 * C50063 +
              C50017 * (2 * C50136 + C50017 * (C49929 + C49979 * C50030))) +
         C49844 * C50076 *
             (3 * C50064 +
              C50017 *
                  (2 * C50137 +
                   C50017 * (C49986 + (C49962 * C49963 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49851 * C50030)))) /
        C49739;
    const double C10164 =
        (2 * C50076 * C50039 + C50076 * (C50039 + C50064 * C50089)) / C49739;
    const double C50128 = C49844 * C50123;
    const double C50243 = C50076 * C50123;
    const double C50150 = C50149 + C50144;
    const double C50190 = C49844 * C50185;
    const double C50219 = C50046 + C50216;
    const double C50169 = C50168 + C50163;
    const double C11567 = C10729 * C11562;
    const double C11679 = C10729 * C11670;
    const double C12023 = C10729 * C12018;
    const double C12293 = C10729 * C12290;
    const double C22300 = C10729 * C22295;
    const double C49996 = C49968 + C49992;
    const double C113 = (C50848 * C50553) / C50550 + (C50798 - C50833) / C50552;
    const double C114 =
        (C50849 * C50553) / C50550 + (2 * C50564 + C50848) / C50552;
    const double C115 = (C50553 * C50564) / C50567 + C50849 / C50552;
    const double C997 = (C50850 * C50624) / C50550 + (C50806 - C50835) / C50552;
    const double C998 =
        (C50851 * C50624) / C50550 + (2 * C50629 + C50850) / C50552;
    const double C999 = (C50624 * C50629) / C50567 + C50851 / C50552;
    const double C1743 =
        (C50852 * C50652) / C50550 + (C50807 - C50838) / C50552;
    const double C1744 =
        (C50853 * C50652) / C50550 + (2 * C50657 + C50852) / C50552;
    const double C1745 = (C50652 * C50657) / C50567 + C50853 / C50552;
    const double C10724 =
        (C50817 - C50841) / C49740 - (C50854 * C50704) / C49734;
    const double C10725 =
        (2 * C50708 + C50854) / C49740 - (C50843 * C50704) / C49734;
    const double C10726 = C50843 / C49740 - C50711 / C49749;
    const double C20905 =
        (C50818 - C50844) / C49740 - (C50855 * C50728) / C49734;
    const double C20906 =
        (2 * C50732 + C50855) / C49740 - (C50846 * C50728) / C49734;
    const double C20907 = C50846 / C49740 - C50735 / C49749;
    const double C49766 = C49764 * ae;
    const double C49765 = C49764 * C49744;
    const double C2196 =
        ((-C49733 / C49734) / C49740 - (C49751 * be) / C49734) / C49740 -
        ((C49735 * ((-C49736 / C49734) / C49740 - (C49764 * be) / C49734) +
          C25606) *
         be) /
            C49734 +
        (-C49754 / C49734) / C49740 - (0 * be) / C49734;
    const double C2198 =
        ((-C49736 / C49734) / C49740 - (C49764 * be) / C49734) / C49740 -
        ((C49735 * ((-C49754 / C49734) / C49740 - (0 * be) / C49734) + C50532) *
         be) /
            C49734;
    const double C25612 = (-C49736 / C49734) / C49740 - (C49764 * be) / C49734;
    const double C49879 = ae * C49878;
    const double C135 =
        (2 * C49858 + C49844 * C49878 + (C49847 + C49861 * C49848) * ae) /
        C49734;
    const double C276 = (C50017 * C49878) / C49734;
    const double C423 = (C50076 * C49878) / C49734;
    const double C2393 = C2191 * C286;
    const double C2377 = C2192 * C286;
    const double C2761 = C2190 * C286;
    const double C8045 = C50532 * C286;
    const double C8415 = C50789 * C286;
    const double C11110 = C50527 * C286;
    const double C22930 = C50831 * C286;
    const double C22914 = C22729 * C286;
    const double C23298 = C50847 * C286;
    const double C25805 = C50532 * C286;
    const double C26175 = C25606 * C286;
    const double C5418 = C2191 * C433;
    const double C5408 = C2192 * C433;
    const double C5759 = C2190 * C433;
    const double C13370 = C50527 * C433;
    const double C15781 = C50532 * C433;
    const double C16127 = C50789 * C433;
    const double C28927 = C50532 * C433;
    const double C29369 = C25606 * C433;
    const double C32409 = C50831 * C433;
    const double C32399 = C22729 * C433;
    const double C32750 = C50847 * C433;
    const double C49908 = ae * C49906;
    const double C49907 = C49844 * C49906;
    const double C49918 = 3 * C49906;
    const double C50019 = C50017 * C49906;
    const double C50078 = C50076 * C49906;
    const double C281 = (C49878 + C49906 * C50030) / C49734;
    const double C428 = (C49878 + C49906 * C50089) / C49734;
    const double C817 =
        (C50076 * C50018 + C50176 + C50176 +
         C49844 * (2 * ae * C50076 * C50045 + C49844 * C50076 * C50046)) /
        C49739;
    const double C291 = (C49873 + C49899 * C50030 + C50034 + C50034 +
                         C49844 * (2 * ae * (C49869 + C49893 * C50030) +
                                   C49844 * (C49899 + C49936 * C50030))) /
                        C49739;
    const double C8035 = C49760 * C1008;
    const double C10735 = C10729 * C1008;
    const double C25795 = C25614 * C1008;
    const double C8244 = C49760 * C1469;
    const double C11005 = C10729 * C1469;
    const double C26004 = C25614 * C1469;
    const double C438 = (C49873 + C49899 * C50089 + C50093 + C50093 +
                         C49844 * (2 * ae * (C49869 + C49893 * C50089) +
                                   C49844 * (C49899 + C49936 * C50089))) /
                        C49739;
    const double C10170 = C49760 * C1753;
    const double C13044 = C10729 * C1753;
    const double C27906 = C25614 * C1753;
    const double C49949 = ae * C49946;
    const double C49948 = C49844 * C49946;
    const double C49965 = 3 * C49946;
    const double C50037 = C49946 * C50030;
    const double C50048 = C50017 * C49946;
    const double C50096 = C49946 * C50089;
    const double C50107 = C50076 * C49946;
    const double C50211 = C50209 + C50210;
    const double C50238 = ae * C50237;
    const double C8255 = C49760 * C3580;
    const double C11008 = C10729 * C3580;
    const double C26015 = C25614 * C3580;
    const double C50142 = C50135 + C50054;
    const double C50227 = ae * C50226;
    const double C4510 = (2 * C50175 + C50076 * C50226) / C49734;
    const double C50256 = C50254 + C50255;
    const double C50161 = C50154 + C50113;
    const double C49947 = C49921 + C49945;
    const double C3416 = C2191 * C1012;
    const double C8052 = C50789 * C1012;
    const double C8036 = C50532 * C1012;
    const double C10860 = C50527 * C1012;
    const double C23944 = C50831 * C1012;
    const double C25812 = C25606 * C1012;
    const double C25796 = C50532 * C1012;
    const double C4102 = C2191 * C1473;
    const double C8797 = C50789 * C1473;
    const double C8783 = C50532 * C1473;
    const double C11370 = C50527 * C1473;
    const double C24612 = C50831 * C1473;
    const double C26557 = C25606 * C1473;
    const double C26543 = C50532 * C1473;
    const double C9078 = C50789 * C3411;
    const double C10853 = C50527 * C3411;
    const double C26832 = C25606 * C3411;
    const double C9247 = C50789 * C3584;
    const double C11676 = C50527 * C3584;
    const double C26995 = C25606 * C3584;
    const double C9758 = C50789 * C4097;
    const double C11361 = C50527 * C4097;
    const double C27500 = C25606 * C4097;
    const double C7248 = C2191 * C1757;
    const double C15788 = C50789 * C1757;
    const double C15773 = C50532 * C1757;
    const double C18546 = C50527 * C1757;
    const double C31342 = C50532 * C1757;
    const double C34230 = C50831 * C1757;
    const double C38620 = C25606 * C1757;
    const double C17644 = C50789 * C7243;
    const double C20348 = C50527 * C7243;
    const double C40398 = C25606 * C7243;
    const double C50002 = ae * C49998;
    const double C50001 = C49844 * C49998;
    const double C50061 = C49998 * C50030;
    const double C50120 = C49998 * C50089;
    const double C50140 = C50017 * C49998;
    const double C50159 = C50076 * C49998;
    const double C50205 = C50201 + C50202;
    const double C50235 = ae * C50233;
    const double C50269 = C50041 + C50268;
    const double C50250 = C50246 + C50247;
    const double C50223 = ae * C50221;
    const double C50280 = C50076 * C50221;
    const double C50000 = C49970 + C49997;
    const double C50074 = C50073 + C50069;
    const double C50203 = C50197 + C50198;
    const double C10163 =
        (2 * ae *
             (2 * C50076 * C50063 +
              C50076 * (C50063 + (C49929 + C49979 * C50030) * C50089)) +
         C49844 * (2 * C50231 +
                   C50076 * (C50064 +
                             (C49986 + (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030) *
                                 C50089))) /
        C49739;
    const double C14868 =
        (3 * (C50039 + C50064 * C50089) +
         C50076 * (2 * C50231 +
                   C50076 * (C50064 +
                             (C49986 + (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030) *
                                 C50089))) /
        C49739;
    const double C9249 = C50532 * C3583;
    const double C13041 = C50527 * C3583;
    const double C26997 = C50532 * C3583;
    const double C13977 = C50527 * C10164;
    const double C50133 = C50132 + C50128;
    const double C50248 = C50242 + C50243;
    const double C50151 = C49844 * C50150;
    const double C50195 = C50194 + C50190;
    const double C4513 =
        (2 * ae * (2 * C50076 * C50045 + C50076 * (C50045 + C50136 * C50089)) +
         C49844 * (2 * C50178 + C50076 * C50219)) /
        C49739;
    const double C14869 = (3 * (C50018 + C50046 * C50089) +
                           C50076 * (2 * C50178 + C50076 * C50219)) /
                          C49739;
    const double C16745 =
        (2 * ae *
             (3 * (C50045 + C50136 * C50089) +
              C50076 *
                  (2 * C50184 + C50076 * (C50136 + C50017 * C49979 * C50089))) +
         C49844 * (3 * C50219 +
                   C50076 * (2 * C50185 +
                             C50076 * (C50137 + C50017 *
                                                    (C49962 * C49963 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49851 * C50089)))) /
        C49739;
    const double C20345 =
        (4 * (2 * C50178 + C50076 * C50219) +
         C50076 * (3 * C50219 +
                   C50076 * (2 * C50185 +
                             C50076 * (C50137 + C50017 *
                                                    (C49962 * C49963 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49851 * C50089)))) /
        C49739;
    const double C50170 = C49844 * C50169;
    const double C49999 = C49996 * ae;
    const double C131 = 5 * (3 * C49895 + C49844 * C49938) +
                        C49844 * (4 * C49938 + C49844 * C49996);
    const double C274 = 3 * C49895 + C49844 * C49938 + C49996 * C50030;
    const double C421 = 3 * C49895 + C49844 * C49938 + C49996 * C50089;
    const double C561 = C50017 * (4 * C49938 + C49844 * C49996);
    const double C668 = C50076 * (4 * C49938 + C49844 * C49996);
    const double C809 = C50076 * C50017 * C49996;
    const double C49768 = C49766 / C49734;
    const double C49767 = C49735 * C49765;
    const double C123 = (-C49765 / C49734) / (4 * C49746);
    const double C2199 = (-C49765 / C49734) / (4 * C49739);
    const double C7853 = (-C49765 / C49734) / C49740;
    const double C10728 = -C49765 / C49734;
    const double C22736 = (-C49765 / C49734) / (4 * C49739);
    const double C25613 = (-C49765 / C49734) / C49740;
    const double C2214 = C2196 * C134;
    const double C2213 = C2196 * C133;
    const double C2210 = C2196 * C277;
    const double C2205 = C2196 * C278;
    const double C2202 = C2196 * C132;
    const double C2407 = C2196 * C1008;
    const double C2397 = C2196 * C280;
    const double C2387 = C2196 * C1009;
    const double C2385 = C2196 * C279;
    const double C2613 = C2196 * C427;
    const double C2610 = C2196 * C1122;
    const double C2605 = C2196 * C811;
    const double C2602 = C2196 * C424;
    const double C2599 = C2196 * C1123;
    const double C2596 = C2196 * C426;
    const double C2595 = C2196 * C425;
    const double C2592 = C2196 * C810;
    const double C3141 = C2196 * C1469;
    const double C3130 = C2196 * C1470;
    const double C3421 = C2196 * C3408;
    const double C3594 = C2196 * C3581;
    const double C4107 = C2196 * C4094;
    const double C4521 = C2196 * C1754;
    const double C4518 = C2196 * C4511;
    const double C5429 = C2196 * C1753;
    const double C7253 = C2196 * C7240;
    const double C2212 = C2198 * C134;
    const double C2206 = C2198 * C277;
    const double C2203 = C2198 * C133;
    const double C2388 = C2198 * C1008;
    const double C2382 = C2198 * C280;
    const double C2600 = C2198 * C1122;
    const double C2597 = C2198 * C427;
    const double C2594 = C2198 * C424;
    const double C2591 = C2198 * C811;
    const double C3131 = C2198 * C1469;
    const double C3593 = C2198 * C3580;
    const double C4520 = C2198 * C1753;
    const double C25628 = C25612 * C134;
    const double C25627 = C25612 * C133;
    const double C25625 = C25612 * C277;
    const double C25623 = C25612 * C280;
    const double C25620 = C25612 * C279;
    const double C25618 = C25612 * C278;
    const double C25616 = C25612 * C132;
    const double C25811 = C25612 * C1008;
    const double C25800 = C25612 * C3408;
    const double C25798 = C25612 * C1009;
    const double C26027 = C25612 * C427;
    const double C26025 = C25612 * C1122;
    const double C26023 = C25612 * C3580;
    const double C26020 = C25612 * C1469;
    const double C26018 = C25612 * C811;
    const double C26016 = C25612 * C424;
    const double C26014 = C25612 * C3581;
    const double C26012 = C25612 * C1123;
    const double C26010 = C25612 * C426;
    const double C26009 = C25612 * C425;
    const double C26007 = C25612 * C810;
    const double C26005 = C25612 * C1470;
    const double C26550 = C25612 * C4094;
    const double C26836 = C25612 * C9072;
    const double C26999 = C25612 * C9238;
    const double C27504 = C25612 * C9752;
    const double C27907 = C25612 * C1754;
    const double C27905 = C25612 * C4511;
    const double C27903 = C25612 * C10162;
    const double C28939 = C25612 * C1753;
    const double C31346 = C25612 * C7240;
    const double C31344 = C25612 * C14867;
    const double C40402 = C25612 * C17638;
    const double C142 =
        (2 * (2 * ae * C49856 + C49844 * C49873) + C49879 + C49879 +
         C49844 * (C49873 + C49876 + C49876 +
                   C49844 * (2 * ae * C49869 +
                             C49844 *
                                 (C49862 * C49863 +
                                  C49848 * bs[5] * std::pow(C49850, 5)) *
                                 C49851))) /
        C49739;
    const double C150 = C124 * C135;
    const double C2225 = C2196 * C135;
    const double C2215 = C2198 * C135;
    const double C2211 = C2200 * C135;
    const double C7869 = C49760 * C135;
    const double C10746 = C10729 * C135;
    const double C22748 = C22737 * C135;
    const double C25639 = C25612 * C135;
    const double C25629 = C25614 * C135;
    const double C2217 = C2196 * C276;
    const double C2209 = C2198 * C276;
    const double C2207 = C2200 * C276;
    const double C7864 = C49760 * C276;
    const double C10740 = C10729 * C276;
    const double C22744 = C22737 * C276;
    const double C25630 = C25612 * C276;
    const double C25624 = C25614 * C276;
    const double C2603 = C2198 * C423;
    const double C2593 = C2200 * C423;
    const double C2929 = C2196 * C423;
    const double C8257 = C49760 * C423;
    const double C11229 = C10729 * C423;
    const double C23130 = C22737 * C423;
    const double C26017 = C25614 * C423;
    const double C26347 = C25612 * C423;
    const double C49909 = C49885 + C49907;
    const double C50021 = ae * C50019;
    const double C812 = (C50076 * C50019) / C49734;
    const double C50080 = ae * C50078;
    const double C2400 = C2198 * C281;
    const double C2379 = C2200 * C281;
    const double C2768 = C2196 * C281;
    const double C7862 = C49760 * C281;
    const double C10741 = C10729 * C281;
    const double C22916 = C22737 * C281;
    const double C25632 = C25612 * C281;
    const double C25622 = C25614 * C281;
    const double C2612 = C2198 * C428;
    const double C2598 = C2200 * C428;
    const double C5766 = C2196 * C428;
    const double C8266 = C49760 * C428;
    const double C13373 = C10729 * C428;
    const double C23135 = C22737 * C428;
    const double C26026 = C25614 * C428;
    const double C29375 = C25612 * C428;
    const double C3136 = C2191 * C817;
    const double C3125 = C2192 * C817;
    const double C8795 = C50532 * C817;
    const double C13211 = C50527 * C817;
    const double C23673 = C50831 * C817;
    const double C23662 = C22729 * C817;
    const double C26555 = C50532 * C817;
    const double C29165 = C25606 * C817;
    const double C41610 = C50789 * C817;
    const double C2401 = C2191 * C291;
    const double C2380 = C2192 * C291;
    const double C8049 = C50532 * C291;
    const double C8419 = C50789 * C291;
    const double C11112 = C50527 * C291;
    const double C22938 = C50831 * C291;
    const double C22917 = C22729 * C291;
    const double C25809 = C50532 * C291;
    const double C26179 = C25606 * C291;
    const double C5424 = C2191 * C438;
    const double C5410 = C2192 * C438;
    const double C15785 = C50532 * C438;
    const double C16131 = C50789 * C438;
    const double C18858 = C50527 * C438;
    const double C28931 = C50532 * C438;
    const double C32415 = C50831 * C438;
    const double C32401 = C22729 * C438;
    const double C38925 = C25606 * C438;
    const double C49969 = C49958 + C49949;
    const double C49950 = C49919 + C49948;
    const double C50040 = C49906 + C50037;
    const double C50053 = ae * C50048;
    const double C50179 = C50076 * C50048;
    const double C50199 = 2 * C50048;
    const double C1121 = (C50019 + C50048 * C50089) / C49734;
    const double C50099 = C49906 + C50096;
    const double C50112 = ae * C50107;
    const double C50244 = 2 * C50107;
    const double C50212 = ae * C50211;
    const double C3407 = (3 * C50033 + C50017 * C50211) / C49734;
    const double C4093 = (C50076 * C50211) / C49734;
    const double C1472 =
        (C50076 * C50039 + C50238 + C50238 +
         C49844 * (2 * ae * C50076 * C50063 + C49844 * C50231)) /
        C49739;
    const double C1125 =
        (C50018 + C50046 * C50089 + C50227 + C50227 +
         C49844 * (2 * ae * (C50045 + C50136 * C50089) + C49844 * C50219)) /
        C49739;
    const double C4517 = C2198 * C4510;
    const double C10168 = C49760 * C4510;
    const double C13043 = C10729 * C4510;
    const double C27904 = C25614 * C4510;
    const double C28937 = C25612 * C4510;
    const double C50257 = ae * C50256;
    const double C7239 = (3 * C50092 + C50076 * C50256) / C49734;
    const double C50004 = C49966 + C50001;
    const double C50066 = C49946 + C50061;
    const double C50125 = C49946 + C50120;
    const double C50147 = ae * C50140;
    const double C50187 = C50076 * C50140;
    const double C50217 = C50140 * C50089;
    const double C50166 = ae * C50159;
    const double C50207 = ae * C50205;
    const double C50262 = C50017 * C50205;
    const double C50274 = C50076 * C50205;
    const double C9237 = (C50211 + C50205 * C50089) / C49734;
    const double C50270 = ae * C50269;
    const double C10161 = (2 * C50237 + C50076 * C50269) / C49734;
    const double C50252 = ae * C50250;
    const double C50287 = C50076 * C50250;
    const double C50281 = C50279 + C50280;
    const double C50003 = C49844 * C50000;
    const double C3410 = (2 * ae *
                              (3 * (C49869 + C49893 * C50030) +
                               C50017 * (2 * C50045 + C50017 * C50063)) +
                          C49844 * (3 * C50039 + C50017 * C50203)) /
                         C49739;
    const double C4096 = (2 * ae * C50076 * (2 * C50045 + C50017 * C50063) +
                          C49844 * C50076 * C50203) /
                         C49739;
    const double C9073 =
        (2 * ae *
             (4 * (2 * C50045 + C50017 * C50063) +
              C50017 * (3 * C50063 +
                        C50017 * (2 * C50136 +
                                  C50017 * (C49929 + C49979 * C50030)))) +
         C49844 *
             (4 * C50203 +
              C50017 * (3 * C50064 +
                        C50017 * (2 * C50137 +
                                  C50017 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50030))))) /
        C49739;
    const double C9074 = (4 * (2 * C50018 + C50017 * C50039) +
                          C50017 * (3 * C50039 + C50017 * C50203)) /
                         C49739;
    const double C9239 =
        (2 * ae *
             (2 * C50045 + C50017 * C50063 +
              (2 * C50136 + C50017 * (C49929 + C49979 * C50030)) * C50089) +
         C49844 * (C50203 +
                   (2 * C50137 +
                    C50017 * (C49986 + (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030)) *
                       C50089)) /
        C49739;
    const double C9240 =
        (2 * C50018 + C50017 * C50039 + C50203 * C50089) / C49739;
    const double C9754 = (C50076 * (3 * C50039 + C50017 * C50203)) / C49739;
    const double C11563 =
        (5 * (3 * C50039 + C50017 * C50203) +
         C50017 *
             (4 * C50203 +
              C50017 * (3 * C50064 +
                        C50017 * (2 * C50137 +
                                  C50017 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50030))))) /
        C49739;
    const double C11671 =
        (3 * C50039 + C50017 * C50203 +
         (3 * C50064 +
          C50017 * (2 * C50137 +
                    C50017 * (C49986 + (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030))) *
             C50089) /
        C49739;
    const double C12019 =
        (C50076 *
         (4 * C50203 +
          C50017 * (3 * C50064 +
                    C50017 * (2 * C50137 +
                              C50017 * (C49986 +
                                        (C49962 * C49963 +
                                         C49848 * bs[8] * std::pow(C49842, 8)) *
                                            C49851 * C50030))))) /
        C49739;
    const double C12291 =
        (2 * C50076 * C50203 +
         C50076 * (C50203 +
                   (2 * C50137 +
                    C50017 * (C49986 + (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030)) *
                       C50089)) /
        C49739;
    const double C7242 = (2 * ae *
                              (3 * (C49869 + C49893 * C50089) +
                               C50076 * (2 * C50104 + C50076 * C50122)) +
                          C49844 * (3 * C50098 + C50076 * C50248)) /
                         C49739;
    const double C17639 =
        (2 * ae *
             (4 * (2 * C50104 + C50076 * C50122) +
              C50076 * (3 * C50122 +
                        C50076 * (2 * C50155 +
                                  C50076 * (C49929 + C49979 * C50089)))) +
         C49844 *
             (4 * C50248 +
              C50076 * (3 * C50123 +
                        C50076 * (2 * C50156 +
                                  C50076 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50089))))) /
        C49739;
    const double C17640 = (4 * (2 * C50077 + C50076 * C50098) +
                           C50076 * (3 * C50098 + C50076 * C50248)) /
                          C49739;
    const double C22296 =
        (5 * (3 * C50098 + C50076 * C50248) +
         C50076 *
             (4 * C50248 +
              C50076 * (3 * C50123 +
                        C50076 * (2 * C50156 +
                                  C50076 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50089))))) /
        C49739;
    const double C50152 = C50142 + C50151;
    const double C16750 = C50532 * C4513;
    const double C18548 = C50527 * C4513;
    const double C30167 = C50532 * C4513;
    const double C19460 = C50527 * C14869;
    const double C50171 = C50161 + C50170;
    const double C49770 = C49768 - C49755;
    const double C49769 = C49767 / C49734;
    const double C2402 = C2199 * C272;
    const double C2394 = C2199 * C265;
    const double C2378 = C2199 * C271;
    const double C2376 = C2199 * C266;
    const double C2764 = C2199 * C273;
    const double C3137 = C2199 * C808;
    const double C3124 = C2199 * C807;
    const double C3417 = C2199 * C1003;
    const double C3590 = C2199 * C1117;
    const double C4103 = C2199 * C1464;
    const double C5425 = C2199 * C419;
    const double C5419 = C2199 * C412;
    const double C5409 = C2199 * C418;
    const double C5407 = C2199 * C413;
    const double C5762 = C2199 * C420;
    const double C7249 = C2199 * C1748;
    const double C8053 = C7853 * C1003;
    const double C8048 = C7853 * C271;
    const double C8044 = C7853 * C266;
    const double C8034 = C7853 * C1004;
    const double C8032 = C7853 * C270;
    const double C8028 = C7853 * C267;
    const double C8420 = C7853 * C272;
    const double C8416 = C7853 * C265;
    const double C8798 = C7853 * C1464;
    const double C8794 = C7853 * C807;
    const double C8786 = C7853 * C806;
    const double C8782 = C7853 * C1465;
    const double C9079 = C7853 * C3404;
    const double C9248 = C7853 * C3577;
    const double C9244 = C7853 * C1118;
    const double C9759 = C7853 * C4090;
    const double C15789 = C7853 * C1748;
    const double C15784 = C7853 * C418;
    const double C15780 = C7853 * C413;
    const double C15772 = C7853 * C1749;
    const double C15770 = C7853 * C417;
    const double C15766 = C7853 * C414;
    const double C16132 = C7853 * C419;
    const double C16128 = C7853 * C412;
    const double C16344 = C7853 * C1117;
    const double C16749 = C7853 * C4507;
    const double C17645 = C7853 * C7236;
    const double C41611 = C7853 * C808;
    const double C10861 = C10728 * C3404;
    const double C10859 = C10728 * C1004;
    const double C10857 = C10728 * C270;
    const double C10855 = C10728 * C267;
    const double C10851 = C10728 * C3405;
    const double C10849 = C10728 * C1005;
    const double C10847 = C10728 * C269;
    const double C10845 = C10728 * C268;
    const double C11113 = C10728 * C1003;
    const double C11111 = C10728 * C271;
    const double C11109 = C10728 * C266;
    const double C11371 = C10728 * C4090;
    const double C11369 = C10728 * C1465;
    const double C11367 = C10728 * C806;
    const double C11364 = C10728 * C805;
    const double C11362 = C10728 * C1466;
    const double C11360 = C10728 * C4091;
    const double C11565 = C10728 * C9070;
    const double C11677 = C10728 * C9236;
    const double C11675 = C10728 * C3578;
    const double C11673 = C10728 * C1119;
    const double C12021 = C10728 * C9750;
    const double C13040 = C10728 * C3577;
    const double C13038 = C10728 * C1118;
    const double C13036 = C10728 * C417;
    const double C13034 = C10728 * C414;
    const double C13032 = C10728 * C416;
    const double C13030 = C10728 * C415;
    const double C13213 = C10728 * C1464;
    const double C13210 = C10728 * C807;
    const double C13369 = C10728 * C413;
    const double C13976 = C10728 * C10160;
    const double C13973 = C10728 * C4508;
    const double C14871 = C10728 * C1750;
    const double C18547 = C10728 * C4507;
    const double C18545 = C10728 * C1749;
    const double C18705 = C10728 * C1117;
    const double C18857 = C10728 * C418;
    const double C19459 = C10728 * C14865;
    const double C20347 = C10728 * C7237;
    const double C21107 = C10728 * C7236;
    const double C21309 = C10728 * C1748;
    const double C22298 = C10728 * C17636;
    const double C22939 = C22736 * C272;
    const double C22931 = C22736 * C265;
    const double C22915 = C22736 * C271;
    const double C22913 = C22736 * C266;
    const double C23301 = C22736 * C273;
    const double C23674 = C22736 * C808;
    const double C23661 = C22736 * C807;
    const double C23945 = C22736 * C1003;
    const double C24109 = C22736 * C1117;
    const double C24613 = C22736 * C1464;
    const double C32416 = C22736 * C419;
    const double C32410 = C22736 * C412;
    const double C32400 = C22736 * C418;
    const double C32398 = C22736 * C413;
    const double C32753 = C22736 * C420;
    const double C34231 = C22736 * C1748;
    const double C25813 = C25613 * C1003;
    const double C25808 = C25613 * C271;
    const double C25804 = C25613 * C266;
    const double C25794 = C25613 * C1004;
    const double C25792 = C25613 * C270;
    const double C25788 = C25613 * C267;
    const double C26180 = C25613 * C272;
    const double C26176 = C25613 * C265;
    const double C26558 = C25613 * C1464;
    const double C26554 = C25613 * C807;
    const double C26546 = C25613 * C806;
    const double C26542 = C25613 * C1465;
    const double C26833 = C25613 * C3404;
    const double C26996 = C25613 * C3577;
    const double C26992 = C25613 * C1118;
    const double C27501 = C25613 * C4090;
    const double C28934 = C25613 * C1117;
    const double C28930 = C25613 * C418;
    const double C28926 = C25613 * C413;
    const double C28920 = C25613 * C417;
    const double C28918 = C25613 * C414;
    const double C29166 = C25613 * C808;
    const double C29370 = C25613 * C412;
    const double C30166 = C25613 * C4507;
    const double C31341 = C25613 * C1749;
    const double C38621 = C25613 * C1748;
    const double C38926 = C25613 * C419;
    const double C40399 = C25613 * C7236;
    const double C49910 = C49909 + C49898;
    const double C285 =
        (2 * (2 * ae * C50017 * C49869 + C49844 * C50018) + C50021 + C50021 +
         C49844 *
             (C50018 + C50022 + C50022 +
              C49844 * (2 * ae * C50017 * C49893 + C49844 * C50017 * C49936))) /
        C49739;
    const double C2606 = C2198 * C812;
    const double C2590 = C2200 * C812;
    const double C2926 = C2196 * C812;
    const double C8259 = C49760 * C812;
    const double C11228 = C10729 * C812;
    const double C23127 = C22737 * C812;
    const double C26019 = C25614 * C812;
    const double C26345 = C25612 * C812;
    const double C432 =
        (2 * (2 * ae * C50076 * C49869 + C49844 * C50077) + C50080 + C50080 +
         C49844 *
             (C50077 + C50081 + C50081 +
              C49844 * (2 * ae * C50076 * C49893 + C49844 * C50076 * C49936))) /
        C49739;
    const double C49977 = C49969 + C49949;
    const double C49951 = C49950 + C49934;
    const double C50042 = ae * C50040;
    const double C1007 = (2 * C50019 + C50017 * C50040) / C49734;
    const double C1468 = (C50076 * C50040) / C49734;
    const double C50181 = ae * C50179;
    const double C2609 = C2198 * C1121;
    const double C2601 = C2200 * C1121;
    const double C8264 = C49760 * C1121;
    const double C13372 = C10729 * C1121;
    const double C23138 = C22737 * C1121;
    const double C26024 = C25614 * C1121;
    const double C29373 = C25612 * C1121;
    const double C50101 = ae * C50099;
    const double C1752 = (2 * C50078 + C50076 * C50099) / C49734;
    const double C1011 =
        (2 * C50018 + C50017 * C50039 + C50212 + C50212 +
         C49844 * (2 * ae * (2 * C50045 + C50017 * C50063) + C49844 * C50203)) /
        C49739;
    const double C3420 = C2198 * C3407;
    const double C8041 = C49760 * C3407;
    const double C10862 = C10729 * C3407;
    const double C25817 = C25612 * C3407;
    const double C25801 = C25614 * C3407;
    const double C4106 = C2198 * C4093;
    const double C8791 = C49760 * C4093;
    const double C11006 = C10729 * C4093;
    const double C26561 = C25612 * C4093;
    const double C26551 = C25614 * C4093;
    const double C4104 = C2192 * C1472;
    const double C8799 = C50532 * C1472;
    const double C13214 = C50527 * C1472;
    const double C24614 = C22729 * C1472;
    const double C26559 = C50532 * C1472;
    const double C3591 = C2192 * C1125;
    const double C16345 = C50532 * C1125;
    const double C18706 = C50527 * C1125;
    const double C24110 = C22729 * C1125;
    const double C28935 = C50532 * C1125;
    const double C1756 =
        (2 * C50077 + C50076 * C50098 + C50257 + C50257 +
         C49844 * (2 * ae * (2 * C50104 + C50076 * C50122) + C49844 * C50248)) /
        C49739;
    const double C7252 = C2198 * C7239;
    const double C15777 = C49760 * C7239;
    const double C18550 = C10729 * C7239;
    const double C31345 = C25614 * C7239;
    const double C38625 = C25612 * C7239;
    const double C50006 = C50004 + C49984;
    const double C50071 = ae * C50066;
    const double C50200 = C50017 * C50066;
    const double C50232 = C50076 * C50066;
    const double C3579 = (C50040 + C50066 * C50089) / C49734;
    const double C50130 = ae * C50125;
    const double C50245 = C50076 * C50125;
    const double C50192 = ae * C50187;
    const double C50220 = C50048 + C50217;
    const double C50263 = C50261 + C50262;
    const double C50275 = ae * C50274;
    const double C9250 = C49760 * C9237;
    const double C11007 = C10729 * C9237;
    const double C26998 = C25614 * C9237;
    const double C3582 =
        (C50039 + C50064 * C50089 + C50270 + C50270 +
         C49844 * (2 * ae * (C50063 + (C49929 + C49979 * C50030) * C50089) +
                   C49844 * (C50064 +
                             (C49986 + (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030) *
                                 C50089))) /
        C49739;
    const double C10166 = C49760 * C10161;
    const double C13042 = C10729 * C10161;
    const double C27902 = C25614 * C10161;
    const double C50288 = C50286 + C50287;
    const double C50282 = ae * C50281;
    const double C16744 = (3 * C50226 + C50076 * C50281) / C49734;
    const double C9080 = C50532 * C3410;
    const double C10863 = C50527 * C3410;
    const double C26834 = C50532 * C3410;
    const double C9760 = C50532 * C4096;
    const double C11372 = C50527 * C4096;
    const double C27502 = C50532 * C4096;
    const double C11566 = C50527 * C9074;
    const double C11678 = C50527 * C9240;
    const double C12022 = C50527 * C9754;
    const double C17646 = C50532 * C7242;
    const double C21108 = C50527 * C7242;
    const double C40400 = C50532 * C7242;
    const double C22299 = C50527 * C17640;
    const double C7879 = C49770 * C135;
    const double C7872 = C49770 * C281;
    const double C7870 = C49770 * C276;
    const double C7868 = C49770 * C134;
    const double C7867 = C49770 * C133;
    const double C7865 = C49770 * C277;
    const double C7863 = C49770 * C280;
    const double C7860 = C49770 * C279;
    const double C7858 = C49770 * C278;
    const double C7856 = C49770 * C132;
    const double C8057 = C49770 * C3407;
    const double C8051 = C49770 * C1008;
    const double C8040 = C49770 * C3408;
    const double C8038 = C49770 * C1009;
    const double C8267 = C49770 * C427;
    const double C8265 = C49770 * C1122;
    const double C8263 = C49770 * C3580;
    const double C8260 = C49770 * C1469;
    const double C8258 = C49770 * C811;
    const double C8256 = C49770 * C424;
    const double C8254 = C49770 * C3581;
    const double C8252 = C49770 * C1123;
    const double C8250 = C49770 * C426;
    const double C8249 = C49770 * C425;
    const double C8247 = C49770 * C810;
    const double C8245 = C49770 * C1470;
    const double C8587 = C49770 * C423;
    const double C8585 = C49770 * C812;
    const double C8801 = C49770 * C4093;
    const double C8790 = C49770 * C4094;
    const double C9082 = C49770 * C9072;
    const double C9251 = C49770 * C9238;
    const double C9762 = C49770 * C9752;
    const double C10171 = C49770 * C1754;
    const double C10169 = C49770 * C4511;
    const double C10167 = C49770 * C10162;
    const double C15466 = C49770 * C428;
    const double C15793 = C49770 * C7239;
    const double C15787 = C49770 * C1753;
    const double C15776 = C49770 * C7240;
    const double C15979 = C49770 * C1121;
    const double C16347 = C49770 * C4510;
    const double C16753 = C49770 * C14867;
    const double C17648 = C49770 * C17638;
    const double C118 =
        ((((0 - (C49735 * C49733) / C49734) * ae) / C49734 - (0 * be) / C49749 +
          C49736 / C49734) /
             C49740 -
         ((C49735 * C49763 + 0) * be) / C49734) /
            C49740 -
        ((C49735 * (C49763 / C49740 -
                    ((C49735 * C49770 + C50789) * be) / C49734 + C49760) +
          C50847) *
         be) /
            C49734 +
        C49770 / C49740 - ((C49735 * C49760 + C50532) * be) / C49734;
    const double C120 =
        (C49763 / C49740 - ((C49735 * C49770 + C50789) * be) / C49734 +
         C49760) /
            C49740 -
        ((C49735 *
              (C49770 / C49740 - ((C49735 * C49760 + C50532) * be) / C49734) +
          C50831) *
         be) /
            C49734 +
        2 * (C49760 / C49740 - (0 * be) / C49734);
    const double C122 =
        (C49770 / C49740 - ((C49735 * C49760 + C50532) * be) / C49734) /
            C49740 -
        ((C49735 * (C49760 / C49740 - (0 * be) / C49734) + C22729) * be) /
            C49734;
    const double C22733 =
        C49763 / C49740 - ((C49735 * C49770 + C50789) * be) / C49734 + C49760;
    const double C22735 =
        C49770 / C49740 - ((C49735 * C49760 + C50532) * be) / C49734;
    const double C49771 = C49758 - C49769;
    const double C2411 = C2378 + C2379;
    const double C2410 = C2376 + C2207;
    const double C5433 = C5409 + C2598;
    const double C5432 = C5407 + C2593;
    const double C8067 = C8048 + C7862;
    const double C8065 = C8044 + C7864;
    const double C8062 = C8034 + C8035;
    const double C8061 = C8032 + C7861;
    const double C8059 = C8028 + C7859;
    const double C8804 = C8786 + C8246;
    const double C8802 = C8782 + C8244;
    const double C9255 = C9248 + C8255;
    const double C9253 = C9244 + C8253;
    const double C15803 = C15784 + C8266;
    const double C15801 = C15780 + C8257;
    const double C15798 = C15772 + C10170;
    const double C15797 = C15770 + C8251;
    const double C15795 = C15766 + C8248;
    const double C16755 = C16749 + C10168;
    const double C10871 = C10859 + C10735;
    const double C10870 = C10857 + C10736;
    const double C10869 = C10855 + C10737;
    const double C10868 = C10851 + C10852;
    const double C10867 = C10849 + C10734;
    const double C10866 = C10847 + C10733;
    const double C10865 = C10845 + C10732;
    const double C11117 = C11111 + C10741;
    const double C11116 = C11109 + C10740;
    const double C11378 = C11369 + C11005;
    const double C11377 = C11367 + C11004;
    const double C11376 = C11364 + C10997;
    const double C11375 = C11362 + C10996;
    const double C11374 = C11360 + C10995;
    const double C11568 = C11565 + C10854;
    const double C11682 = C11677 + C11002;
    const double C11681 = C11675 + C11001;
    const double C11680 = C11673 + C11000;
    const double C12024 = C12021 + C11366;
    const double C13050 = C13040 + C11008;
    const double C13049 = C13038 + C11009;
    const double C13048 = C13036 + C11010;
    const double C13047 = C13034 + C11003;
    const double C13046 = C13032 + C10999;
    const double C13045 = C13030 + C10998;
    const double C13374 = C13369 + C11229;
    const double C13979 = C13976 + C12294;
    const double C13978 = C13973 + C12295;
    const double C14876 = C14871 + C12296;
    const double C18552 = C18547 + C13043;
    const double C18551 = C18545 + C13044;
    const double C18861 = C18857 + C13373;
    const double C19461 = C19459 + C14874;
    const double C20351 = C20347 + C14875;
    const double C22301 = C22298 + C20350;
    const double C22948 = C22915 + C22916;
    const double C22947 = C22913 + C22744;
    const double C32424 = C32400 + C23135;
    const double C32423 = C32398 + C23130;
    const double C25827 = C25808 + C25622;
    const double C25825 = C25804 + C25624;
    const double C25822 = C25794 + C25795;
    const double C25821 = C25792 + C25621;
    const double C25819 = C25788 + C25619;
    const double C26564 = C26546 + C26006;
    const double C26562 = C26542 + C26004;
    const double C27003 = C26996 + C26015;
    const double C27001 = C26992 + C26013;
    const double C28947 = C28930 + C26026;
    const double C28945 = C28926 + C26017;
    const double C28942 = C28920 + C26011;
    const double C28941 = C28918 + C26008;
    const double C30169 = C30166 + C27904;
    const double C31348 = C31341 + C27906;
    const double C49911 = ae * C49910;
    const double C136 =
        (3 * C49878 + C49844 * C49910 + (2 * C49867 + C49844 * C49895) * ae) /
        C49734;
    const double C275 = (C50017 * C49910) / C49734;
    const double C422 = (C50076 * C49910) / C49734;
    const double C2395 = C2192 * C285;
    const double C2763 = C2191 * C285;
    const double C8417 = C50532 * C285;
    const double C22932 = C22729 * C285;
    const double C23300 = C50831 * C285;
    const double C26177 = C50532 * C285;
    const double C3142 = C3124 + C2590;
    const double C8807 = C8794 + C8259;
    const double C13215 = C13210 + C11228;
    const double C23679 = C23661 + C23127;
    const double C26567 = C26554 + C26019;
    const double C5420 = C2192 * C432;
    const double C5761 = C2191 * C432;
    const double C16129 = C50532 * C432;
    const double C29371 = C50532 * C432;
    const double C32411 = C22729 * C432;
    const double C32752 = C50831 * C432;
    const double C50005 = C49977 + C50003;
    const double C49953 = ae * C49951;
    const double C49952 = C49844 * C49951;
    const double C49964 = 4 * C49951;
    const double C50047 = C50017 * C49951;
    const double C50106 = C50076 * C49951;
    const double C282 = (C49910 + C49951 * C50030) / C49734;
    const double C429 = (C49910 + C49951 * C50089) / C49734;
    const double C292 =
        (2 * (2 * ae * (C49869 + C49893 * C50030) + C49844 * C50039) + C50042 +
         C50042 +
         C49844 * (C50039 + C50043 + C50043 +
                   C49844 * (2 * ae * (C49893 + C49929 * C50030) +
                             C49844 * (C49936 + C49986 * C50030)))) /
        C49739;
    const double C2406 = C2198 * C1007;
    const double C2389 = C2200 * C1007;
    const double C8054 = C49760 * C1007;
    const double C8423 = C49770 * C1007;
    const double C10742 = C10729 * C1007;
    const double C22926 = C22737 * C1007;
    const double C25814 = C25614 * C1007;
    const double C26183 = C25612 * C1007;
    const double C3140 = C2198 * C1468;
    const double C3132 = C2200 * C1468;
    const double C8261 = C49760 * C1468;
    const double C8583 = C49770 * C1468;
    const double C11227 = C10729 * C1468;
    const double C23669 = C22737 * C1468;
    const double C26021 = C25614 * C1468;
    const double C26343 = C25612 * C1468;
    const double C818 =
        (2 * (2 * ae * C50076 * C50045 + C49844 * C50178) + C50181 + C50181 +
         C49844 *
             (C50178 + C50182 + C50182 +
              C49844 * (2 * ae * C50076 * C50136 + C49844 * C50076 * C50137))) /
        C49739;
    const double C3597 = C3590 + C2601;
    const double C16349 = C16344 + C8264;
    const double C18707 = C18705 + C13372;
    const double C24116 = C24109 + C23138;
    const double C28949 = C28934 + C26024;
    const double C439 =
        (2 * (2 * ae * (C49869 + C49893 * C50089) + C49844 * C50098) + C50101 +
         C50101 +
         C49844 * (C50098 + C50102 + C50102 +
                   C49844 * (2 * ae * (C49893 + C49929 * C50089) +
                             C49844 * (C49936 + C49986 * C50089)))) /
        C49739;
    const double C4519 = C2200 * C1752;
    const double C5428 = C2198 * C1752;
    const double C15790 = C49760 * C1752;
    const double C16135 = C49770 * C1752;
    const double C18860 = C10729 * C1752;
    const double C25020 = C22737 * C1752;
    const double C28938 = C25614 * C1752;
    const double C38929 = C25612 * C1752;
    const double C3418 = C2192 * C1011;
    const double C8055 = C50532 * C1011;
    const double C11114 = C50527 * C1011;
    const double C23946 = C22729 * C1011;
    const double C25815 = C50532 * C1011;
    const double C9085 = C9079 + C8041;
    const double C10872 = C10861 + C10862;
    const double C26839 = C26833 + C25801;
    const double C9765 = C9759 + C8791;
    const double C11379 = C11371 + C11006;
    const double C27507 = C27501 + C26551;
    const double C7250 = C2192 * C1756;
    const double C15791 = C50532 * C1756;
    const double C21310 = C50527 * C1756;
    const double C34232 = C22729 * C1756;
    const double C38622 = C50532 * C1756;
    const double C17650 = C17645 + C15777;
    const double C21110 = C21107 + C18550;
    const double C40404 = C40399 + C31345;
    const double C50008 = ae * C50006;
    const double C50007 = C49844 * C50006;
    const double C50060 = C50006 * C50030;
    const double C50119 = C50006 * C50089;
    const double C50139 = C50017 * C50006;
    const double C50158 = C50076 * C50006;
    const double C50204 = C50199 + C50200;
    const double C50234 = ae * C50232;
    const double C3592 = C2200 * C3579;
    const double C8262 = C49760 * C3579;
    const double C13371 = C10729 * C3579;
    const double C24111 = C22737 * C3579;
    const double C26022 = C25614 * C3579;
    const double C50249 = C50244 + C50245;
    const double C50222 = ae * C50220;
    const double C4509 = (2 * C50179 + C50076 * C50220) / C49734;
    const double C50264 = ae * C50263;
    const double C9071 = (4 * C50211 + C50017 * C50263) / C49734;
    const double C9751 = (C50076 * C50263) / C49734;
    const double C4095 =
        (C50076 * C50203 + C50275 + C50275 +
         C49844 *
             (2 * ae * C50076 *
                  (2 * C50136 + C50017 * (C49929 + C49979 * C50030)) +
              C49844 * C50076 *
                  (2 * C50137 +
                   C50017 * (C49986 + (C49962 * C49963 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49851 * C50030)))) /
        C49739;
    const double C50289 = ae * C50288;
    const double C17637 = (4 * C50256 + C50076 * C50288) / C49734;
    const double C4512 =
        (2 * C50178 + C50076 * C50219 + C50282 + C50282 +
         C49844 *
             (2 * ae *
                  (2 * C50184 + C50076 * (C50136 + C50017 * C49979 * C50089)) +
              C49844 * (2 * C50185 +
                        C50076 * (C50137 +
                                  C50017 *
                                      (C49962 * C49963 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                      C49851 * C50089)))) /
        C49739;
    const double C16752 = C49760 * C16744;
    const double C18549 = C10729 * C16744;
    const double C31343 = C25614 * C16744;
    const double C162 = C118 * C135;
    const double C155 = C118 * C134;
    const double C154 = C118 * C133;
    const double C147 = C118 * C132;
    const double C311 = C118 * C280;
    const double C304 = C118 * C277;
    const double C300 = C118 * C279;
    const double C299 = C118 * C278;
    const double C458 = C118 * C427;
    const double C451 = C118 * C424;
    const double C447 = C118 * C426;
    const double C446 = C118 * C425;
    const double C568 = C118 * C276;
    const double C675 = C118 * C423;
    const double C828 = C118 * C811;
    const double C821 = C118 * C810;
    const double C1018 = C118 * C1009;
    const double C1132 = C118 * C1123;
    const double C1479 = C118 * C1470;
    const double C1763 = C118 * C1754;
    const double C156 = C120 * C135;
    const double C153 = C120 * C134;
    const double C148 = C120 * C133;
    const double C310 = C120 * C281;
    const double C305 = C120 * C276;
    const double C301 = C120 * C280;
    const double C298 = C120 * C277;
    const double C457 = C120 * C428;
    const double C452 = C120 * C423;
    const double C448 = C120 * C427;
    const double C445 = C120 * C424;
    const double C827 = C120 * C812;
    const double C822 = C120 * C811;
    const double C1017 = C120 * C1008;
    const double C1131 = C120 * C1122;
    const double C1478 = C120 * C1469;
    const double C1762 = C120 * C1753;
    const double C152 = C122 * C135;
    const double C149 = C122 * C134;
    const double C302 = C122 * C281;
    const double C297 = C122 * C276;
    const double C449 = C122 * C428;
    const double C444 = C122 * C423;
    const double C823 = C122 * C812;
    const double C1016 = C122 * C1007;
    const double C1130 = C122 * C1121;
    const double C1477 = C122 * C1468;
    const double C1761 = C122 * C1752;
    const double C22762 = C22733 * C135;
    const double C22754 = C22733 * C276;
    const double C22751 = C22733 * C134;
    const double C22750 = C22733 * C133;
    const double C22747 = C22733 * C277;
    const double C22742 = C22733 * C278;
    const double C22739 = C22733 * C132;
    const double C22944 = C22733 * C1008;
    const double C22934 = C22733 * C280;
    const double C22924 = C22733 * C1009;
    const double C22922 = C22733 * C279;
    const double C23150 = C22733 * C427;
    const double C23147 = C22733 * C1122;
    const double C23142 = C22733 * C811;
    const double C23139 = C22733 * C424;
    const double C23136 = C22733 * C1123;
    const double C23133 = C22733 * C426;
    const double C23132 = C22733 * C425;
    const double C23129 = C22733 * C810;
    const double C23305 = C22733 * C281;
    const double C23466 = C22733 * C423;
    const double C23463 = C22733 * C812;
    const double C23678 = C22733 * C1469;
    const double C23667 = C22733 * C1470;
    const double C23949 = C22733 * C3408;
    const double C24113 = C22733 * C3581;
    const double C24617 = C22733 * C4094;
    const double C25022 = C22733 * C1754;
    const double C25019 = C22733 * C4511;
    const double C32420 = C22733 * C1753;
    const double C32757 = C22733 * C428;
    const double C34235 = C22733 * C7240;
    const double C22752 = C22735 * C135;
    const double C22749 = C22735 * C134;
    const double C22746 = C22735 * C276;
    const double C22743 = C22735 * C277;
    const double C22740 = C22735 * C133;
    const double C22943 = C22735 * C1007;
    const double C22937 = C22735 * C281;
    const double C22925 = C22735 * C1008;
    const double C22919 = C22735 * C280;
    const double C23149 = C22735 * C428;
    const double C23146 = C22735 * C1121;
    const double C23143 = C22735 * C812;
    const double C23140 = C22735 * C423;
    const double C23137 = C22735 * C1122;
    const double C23134 = C22735 * C427;
    const double C23131 = C22735 * C424;
    const double C23128 = C22735 * C811;
    const double C23677 = C22735 * C1468;
    const double C23668 = C22735 * C1469;
    const double C23948 = C22735 * C3407;
    const double C24112 = C22735 * C3580;
    const double C24616 = C22735 * C4093;
    const double C25021 = C22735 * C1753;
    const double C25018 = C22735 * C4510;
    const double C32419 = C22735 * C1752;
    const double C34234 = C22735 * C7239;
    const double C49772 = C49771 * ae;
    const double C2195 =
        (-(be * C49741) / C49739) / C49740 -
        ((2 * ((-C49736 / C49734) / C49740 - (C49764 * be) / C49734) -
          (C49735 * C49771 * be) / C49734) *
         be) /
            C49734 -
        C49765 / C49749;
    const double C2197 =
        (-(C49771 * be) / C49734) / C49740 -
        ((2 * ((-C49754 / C49734) / C49740 - (0 * be) / C49734) -
          C49767 / C49749) *
         be) /
            C49734;
    const double C25611 = -(C49771 * be) / C49734;
    const double C2423 = C2411 + C2379;
    const double C2422 = C2410 + C2207;
    const double C5445 = C5433 + C2598;
    const double C5444 = C5432 + C2593;
    const double C8079 = C8067 + C7862;
    const double C8077 = C8065 + C7864;
    const double C8074 = C8062 + C8035;
    const double C8073 = C8061 + C7861;
    const double C8071 = C8059 + C7859;
    const double C8812 = C8804 + C8246;
    const double C8810 = C8802 + C8244;
    const double C9259 = C9255 + C8255;
    const double C9257 = C9253 + C8253;
    const double C15815 = C15803 + C8266;
    const double C15813 = C15801 + C8257;
    const double C15810 = C15798 + C10170;
    const double C15809 = C15797 + C8251;
    const double C15807 = C15795 + C8248;
    const double C16757 = C16755 + C10168;
    const double C10879 = C10871 + C10735;
    const double C10878 = C10870 + C10736;
    const double C10877 = C10869 + C10737;
    const double C10876 = C10868 + C10852;
    const double C10875 = C10867 + C10734;
    const double C10874 = C10866 + C10733;
    const double C10873 = C10865 + C10732;
    const double C11120 = C11117 + C10741;
    const double C11119 = C11116 + C10740;
    const double C11384 = C11378 + C11005;
    const double C11383 = C11377 + C11004;
    const double C11382 = C11376 + C10997;
    const double C11381 = C11375 + C10996;
    const double C11380 = C11374 + C10995;
    const double C11569 = C11568 + C10854;
    const double C11685 = C11682 + C11002;
    const double C11684 = C11681 + C11001;
    const double C11683 = C11680 + C11000;
    const double C12025 = C12024 + C11366;
    const double C13056 = C13050 + C11008;
    const double C13055 = C13049 + C11009;
    const double C13054 = C13048 + C11010;
    const double C13053 = C13047 + C11003;
    const double C13052 = C13046 + C10999;
    const double C13051 = C13045 + C10998;
    const double C13375 = C13374 + C11229;
    const double C13981 = C13979 + C12294;
    const double C13980 = C13978 + C12295;
    const double C14877 = C14876 + C12296;
    const double C18554 = C18552 + C13043;
    const double C18553 = C18551 + C13044;
    const double C18862 = C18861 + C13373;
    const double C19462 = C19461 + C14874;
    const double C20352 = C20351 + C14875;
    const double C22302 = C22301 + C20350;
    const double C22960 = C22948 + C22916;
    const double C22959 = C22947 + C22744;
    const double C32436 = C32424 + C23135;
    const double C32435 = C32423 + C23130;
    const double C25839 = C25827 + C25622;
    const double C25837 = C25825 + C25624;
    const double C25834 = C25822 + C25795;
    const double C25833 = C25821 + C25621;
    const double C25831 = C25819 + C25619;
    const double C26572 = C26564 + C26006;
    const double C26570 = C26562 + C26004;
    const double C27007 = C27003 + C26015;
    const double C27005 = C27001 + C26013;
    const double C28957 = C28947 + C26026;
    const double C28955 = C28945 + C26017;
    const double C28952 = C28942 + C26011;
    const double C28951 = C28941 + C26008;
    const double C30171 = C30169 + C27904;
    const double C31350 = C31348 + C27906;
    const double C143 =
        (3 * (C49873 + C49876 + C49876 + C49844 * C49904) + C49911 + C49911 +
         C49844 *
             (2 * C49904 + C49908 + C49908 +
              C49844 * (C49899 + C49903 + C49903 +
                        C49844 * (2 * ae * C49893 +
                                  C49844 *
                                      (C49883 * C49884 +
                                       C49848 * bs[6] * std::pow(C49842, 6)) *
                                      C49851)))) /
        C49739;
    const double C161 = C120 * C136;
    const double C157 = C122 * C136;
    const double C151 = C124 * C136;
    const double C2224 = C2198 * C136;
    const double C2216 = C2200 * C136;
    const double C7878 = C49760 * C136;
    const double C22761 = C22735 * C136;
    const double C22753 = C22737 * C136;
    const double C25638 = C25614 * C136;
    const double C306 = C122 * C275;
    const double C296 = C124 * C275;
    const double C567 = C120 * C275;
    const double C2222 = C2196 * C275;
    const double C2218 = C2198 * C275;
    const double C2208 = C2200 * C275;
    const double C7877 = C49770 * C275;
    const double C7871 = C49760 * C275;
    const double C10745 = C10729 * C275;
    const double C22759 = C22733 * C275;
    const double C22755 = C22735 * C275;
    const double C22745 = C22737 * C275;
    const double C25637 = C25612 * C275;
    const double C25631 = C25614 * C275;
    const double C453 = C122 * C422;
    const double C443 = C124 * C422;
    const double C674 = C120 * C422;
    const double C2604 = C2200 * C422;
    const double C2928 = C2198 * C422;
    const double C5110 = C2196 * C422;
    const double C8586 = C49760 * C422;
    const double C12723 = C10729 * C422;
    const double C15471 = C49770 * C422;
    const double C23141 = C22737 * C422;
    const double C23465 = C22735 * C422;
    const double C26346 = C25614 * C422;
    const double C28527 = C25612 * C422;
    const double C32101 = C22733 * C422;
    const double C3148 = C3142 + C2590;
    const double C8815 = C8807 + C8259;
    const double C13217 = C13215 + C11228;
    const double C23685 = C23679 + C23127;
    const double C26575 = C26567 + C26019;
    const double C49954 = C49918 + C49952;
    const double C50052 = ae * C50047;
    const double C813 = (C50076 * C50047) / C49734;
    const double C50111 = ae * C50106;
    const double C309 = C122 * C282;
    const double C303 = C124 * C282;
    const double C2403 = C2200 * C282;
    const double C2767 = C2198 * C282;
    const double C7875 = C49770 * C282;
    const double C7873 = C49760 * C282;
    const double C10744 = C10729 * C282;
    const double C22940 = C22737 * C282;
    const double C23304 = C22735 * C282;
    const double C25635 = C25612 * C282;
    const double C25633 = C25614 * C282;
    const double C456 = C122 * C429;
    const double C450 = C124 * C429;
    const double C2611 = C2200 * C429;
    const double C5765 = C2198 * C429;
    const double C15469 = C49770 * C429;
    const double C15467 = C49760 * C429;
    const double C18240 = C10729 * C429;
    const double C23148 = C22737 * C429;
    const double C29374 = C25614 * C429;
    const double C32756 = C22735 * C429;
    const double C38325 = C25612 * C429;
    const double C2404 = C2192 * C292;
    const double C8421 = C50532 * C292;
    const double C22941 = C22729 * C292;
    const double C26181 = C50532 * C292;
    const double C3424 = C3417 + C2389;
    const double C8069 = C8053 + C8054;
    const double C11118 = C11113 + C10742;
    const double C23952 = C23945 + C22926;
    const double C25829 = C25813 + C25814;
    const double C4110 = C4103 + C3132;
    const double C8809 = C8798 + C8261;
    const double C13216 = C13213 + C11227;
    const double C24620 = C24613 + C23669;
    const double C26569 = C26558 + C26021;
    const double C3138 = C2192 * C818;
    const double C23675 = C22729 * C818;
    const double C29167 = C50532 * C818;
    const double C41612 = C50532 * C818;
    const double C3600 = C3597 + C2601;
    const double C16351 = C16349 + C8264;
    const double C18708 = C18707 + C13372;
    const double C24119 = C24116 + C23138;
    const double C28959 = C28949 + C26024;
    const double C5426 = C2192 * C439;
    const double C16133 = C50532 * C439;
    const double C32417 = C22729 * C439;
    const double C38927 = C50532 * C439;
    const double C7256 = C7249 + C4519;
    const double C15805 = C15789 + C15790;
    const double C21312 = C21309 + C18860;
    const double C34238 = C34231 + C25020;
    const double C38627 = C38621 + C28938;
    const double C9087 = C9085 + C8041;
    const double C10880 = C10872 + C10862;
    const double C26841 = C26839 + C25801;
    const double C9767 = C9765 + C8791;
    const double C11385 = C11379 + C11006;
    const double C27509 = C27507 + C26551;
    const double C17652 = C17650 + C15777;
    const double C21111 = C21110 + C18550;
    const double C40406 = C40404 + C31345;
    const double C50009 = C49965 + C50007;
    const double C50065 = C49951 + C50060;
    const double C50124 = C49951 + C50119;
    const double C50146 = ae * C50139;
    const double C50186 = C50076 * C50139;
    const double C1120 = (C50047 + C50139 * C50089) / C49734;
    const double C50165 = ae * C50158;
    const double C50206 = ae * C50204;
    const double C3406 = (3 * C50040 + C50017 * C50204) / C49734;
    const double C4092 = (C50076 * C50204) / C49734;
    const double C1471 =
        (2 * (2 * ae * C50076 * C50063 + C49844 * C50231) + C50234 + C50234 +
         C49844 *
             (C50231 + C50235 + C50235 +
              C49844 * (2 * ae * C50076 * (C49929 + C49979 * C50030) +
                        C49844 * C50076 *
                            (C49986 + (C49962 * C49963 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49851 * C50030)))) /
        C49739;
    const double C50251 = ae * C50249;
    const double C7238 = (3 * C50099 + C50076 * C50249) / C49734;
    const double C1124 =
        (2 * (2 * ae * (C50045 + C50136 * C50089) + C49844 * C50219) + C50222 +
         C50222 +
         C49844 * (C50219 + C50223 + C50223 +
                   C49844 * (2 * ae * (C50136 + C50017 * C49979 * C50089) +
                             C49844 * (C50137 + C50017 *
                                                    (C49962 * C49963 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49851 * C50089)))) /
        C49739;
    const double C4516 = C2200 * C4509;
    const double C16346 = C49760 * C4509;
    const double C18859 = C10729 * C4509;
    const double C25017 = C22737 * C4509;
    const double C28936 = C25614 * C4509;
    const double C3409 =
        (3 * C50039 + C50017 * C50203 + C50264 + C50264 +
         C49844 *
             (2 * ae *
                  (3 * C50063 +
                   C50017 *
                       (2 * C50136 + C50017 * (C49929 + C49979 * C50030))) +
              C49844 * (3 * C50064 +
                        C50017 * (2 * C50137 +
                                  C50017 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50030))))) /
        C49739;
    const double C9081 = C49760 * C9071;
    const double C10864 = C10729 * C9071;
    const double C26835 = C25614 * C9071;
    const double C9761 = C49760 * C9751;
    const double C11373 = C10729 * C9751;
    const double C27503 = C25614 * C9751;
    const double C7241 =
        (3 * C50098 + C50076 * C50248 + C50289 + C50289 +
         C49844 *
             (2 * ae *
                  (3 * C50122 +
                   C50076 *
                       (2 * C50155 + C50076 * (C49929 + C49979 * C50089))) +
              C49844 * (3 * C50123 +
                        C50076 * (2 * C50156 +
                                  C50076 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50089))))) /
        C49739;
    const double C17647 = C49760 * C17637;
    const double C21109 = C10729 * C17637;
    const double C40401 = C25614 * C17637;
    const double C117 =
        ((ae * -2 * C49733) / C49746 -
         (((C49735 * C49747) / C49739 + 2 * C49763) * be) / C49734) /
            C49740 -
        ((C49735 * (C49747 / C49746 -
                    (((C49735 * C49772) / C49734 + 2 * C49770) * be) / C49734 -
                    C49765 / C49749) +
          2 * (C49763 / C49740 - ((C49735 * C49770 + C50789) * be) / C49734 +
               C49760)) *
         be) /
            C49734 +
        C49772 / C49749 - ((2 * C49760 - C49767 / C49749) * be) / C49734;
    const double C119 =
        (C49747 / C49746 -
         (((C49735 * C49772) / C49734 + 2 * C49770) * be) / C49734 -
         C49765 / C49749) /
            C49740 -
        ((C49735 * (C49772 / C49749 -
                    ((2 * C49760 - C49767 / C49749) * be) / C49734) +
          2 * (C49770 / C49740 - ((C49735 * C49760 + C50532) * be) / C49734)) *
         be) /
            C49734 +
        (-2 * C49765) / (C49734 * 4 * C49739);
    const double C121 =
        (C49772 / C49749 - ((2 * C49760 - C49767 / C49749) * be) / C49734) /
            C49740 -
        ((2 * (C49760 / C49740 - (0 * be) / C49734) -
          C49767 / (C49734 * 4 * C49739)) *
         be) /
            C49734;
    const double C7851 = C49772 / C49734;
    const double C22732 =
        C49747 / C49746 -
        (((C49735 * C49772) / C49734 + 2 * C49770) * be) / C49734 -
        C49765 / C49749;
    const double C22734 =
        C49772 / C49749 - ((2 * C49760 - C49767 / C49749) * be) / C49734;
    const double C2396 = C2195 * C270;
    const double C2390 = C2195 * C267;
    const double C2384 = C2195 * C269;
    const double C2372 = C2195 * C268;
    const double C2760 = C2195 * C266;
    const double C3133 = C2195 * C806;
    const double C3128 = C2195 * C805;
    const double C3413 = C2195 * C1005;
    const double C3586 = C2195 * C1119;
    const double C4099 = C2195 * C1466;
    const double C5421 = C2195 * C417;
    const double C5415 = C2195 * C414;
    const double C5413 = C2195 * C416;
    const double C5403 = C2195 * C415;
    const double C5758 = C2195 * C413;
    const double C7245 = C2195 * C1750;
    const double C2399 = C2197 * C271;
    const double C2392 = C2197 * C266;
    const double C2381 = C2197 * C270;
    const double C2374 = C2197 * C267;
    const double C2762 = C2197 * C265;
    const double C3135 = C2197 * C807;
    const double C3126 = C2197 * C806;
    const double C3415 = C2197 * C1004;
    const double C3588 = C2197 * C1118;
    const double C4101 = C2197 * C1465;
    const double C5423 = C2197 * C418;
    const double C5417 = C2197 * C413;
    const double C5411 = C2197 * C417;
    const double C5405 = C2197 * C414;
    const double C5760 = C2197 * C412;
    const double C7247 = C2197 * C1749;
    const double C25810 = C25611 * C1004;
    const double C25806 = C25611 * C270;
    const double C25802 = C25611 * C267;
    const double C25797 = C25611 * C1005;
    const double C25790 = C25611 * C269;
    const double C25786 = C25611 * C268;
    const double C26178 = C25611 * C271;
    const double C26174 = C25611 * C266;
    const double C26556 = C25611 * C1465;
    const double C26552 = C25611 * C806;
    const double C26548 = C25611 * C805;
    const double C26544 = C25611 * C1466;
    const double C26831 = C25611 * C3405;
    const double C26994 = C25611 * C3578;
    const double C26990 = C25611 * C1119;
    const double C27499 = C25611 * C4091;
    const double C28932 = C25611 * C1118;
    const double C28928 = C25611 * C417;
    const double C28924 = C25611 * C414;
    const double C28922 = C25611 * C416;
    const double C28916 = C25611 * C415;
    const double C29164 = C25611 * C807;
    const double C29368 = C25611 * C413;
    const double C30164 = C25611 * C4508;
    const double C31339 = C25611 * C1750;
    const double C38619 = C25611 * C1749;
    const double C38924 = C25611 * C418;
    const double C40397 = C25611 * C7237;
    const double C2435 = C2423 + C2380;
    const double C2434 = C2422 + C2377;
    const double C5457 = C5445 + C5410;
    const double C5456 = C5444 + C5408;
    const double C8091 = C8079 + C8049;
    const double C8089 = C8077 + C8045;
    const double C8086 = C8074 + C8036;
    const double C8085 = C8073 + C8033;
    const double C8083 = C8071 + C8029;
    const double C8820 = C8812 + C8787;
    const double C8818 = C8810 + C8783;
    const double C9263 = C9259 + C9249;
    const double C9261 = C9257 + C9245;
    const double C15827 = C15815 + C15785;
    const double C15825 = C15813 + C15781;
    const double C15822 = C15810 + C15773;
    const double C15821 = C15809 + C15771;
    const double C15819 = C15807 + C15767;
    const double C16759 = C16757 + C16750;
    const double C10887 = C10879 + C10860;
    const double C10886 = C10878 + C10858;
    const double C10885 = C10877 + C10856;
    const double C10884 = C10876 + C10853;
    const double C10883 = C10875 + C10850;
    const double C10882 = C10874 + C10848;
    const double C10881 = C10873 + C10846;
    const double C11123 = C11120 + C11112;
    const double C11122 = C11119 + C11110;
    const double C11390 = C11384 + C11370;
    const double C11389 = C11383 + C11368;
    const double C11388 = C11382 + C11365;
    const double C11387 = C11381 + C11363;
    const double C11386 = C11380 + C11361;
    const double C11570 = C11569 + C11566;
    const double C11688 = C11685 + C11678;
    const double C11687 = C11684 + C11676;
    const double C11686 = C11683 + C11674;
    const double C12026 = C12025 + C12022;
    const double C13062 = C13056 + C13041;
    const double C13061 = C13055 + C13039;
    const double C13060 = C13054 + C13037;
    const double C13059 = C13053 + C13035;
    const double C13058 = C13052 + C13033;
    const double C13057 = C13051 + C13031;
    const double C13376 = C13375 + C13370;
    const double C13983 = C13981 + C13977;
    const double C13982 = C13980 + C13974;
    const double C14878 = C14877 + C14872;
    const double C18556 = C18554 + C18548;
    const double C18555 = C18553 + C18546;
    const double C18863 = C18862 + C18858;
    const double C19463 = C19462 + C19460;
    const double C20353 = C20352 + C20348;
    const double C22303 = C22302 + C22299;
    const double C22972 = C22960 + C22917;
    const double C22971 = C22959 + C22914;
    const double C32448 = C32436 + C32401;
    const double C32447 = C32435 + C32399;
    const double C25851 = C25839 + C25809;
    const double C25849 = C25837 + C25805;
    const double C25846 = C25834 + C25796;
    const double C25845 = C25833 + C25793;
    const double C25843 = C25831 + C25789;
    const double C26580 = C26572 + C26547;
    const double C26578 = C26570 + C26543;
    const double C27011 = C27007 + C26997;
    const double C27009 = C27005 + C26993;
    const double C28967 = C28957 + C28931;
    const double C28965 = C28955 + C28927;
    const double C28962 = C28952 + C28921;
    const double C28961 = C28951 + C28919;
    const double C30173 = C30171 + C30167;
    const double C31352 = C31350 + C31342;
    const double C2416 = C2394 + C2208;
    const double C8425 = C8416 + C7871;
    const double C22953 = C22931 + C22745;
    const double C26185 = C26176 + C25631;
    const double C5438 = C5419 + C2604;
    const double C16137 = C16128 + C8586;
    const double C32429 = C32410 + C23141;
    const double C29377 = C29370 + C26346;
    const double C3154 = C3148 + C3125;
    const double C8823 = C8815 + C8795;
    const double C13219 = C13217 + C13211;
    const double C23691 = C23685 + C23662;
    const double C26583 = C26575 + C26555;
    const double C49955 = C49954 + C49941;
    const double C293 =
        (3 * (C50018 + C50022 + C50022 + C49844 * C50056) + C50052 + C50052 +
         C49844 * (2 * C50056 + C50053 + C50053 +
                   C49844 * (C50046 + C50054 + C50054 +
                             C49844 * (2 * ae * C50017 * C49929 +
                                       C49844 * C50017 * C49986)))) /
        C49739;
    const double C826 = C122 * C813;
    const double C824 = C124 * C813;
    const double C2607 = C2200 * C813;
    const double C2925 = C2198 * C813;
    const double C8584 = C49760 * C813;
    const double C12722 = C10729 * C813;
    const double C23144 = C22737 * C813;
    const double C23462 = C22735 * C813;
    const double C26344 = C25614 * C813;
    const double C28525 = C25612 * C813;
    const double C41026 = C49770 * C813;
    const double C440 =
        (3 * (C50077 + C50081 + C50081 + C49844 * C50115) + C50111 + C50111 +
         C49844 * (2 * C50115 + C50112 + C50112 +
                   C49844 * (C50105 + C50113 + C50113 +
                             C49844 * (2 * ae * C50076 * C49929 +
                                       C49844 * C50076 * C49986)))) /
        C49739;
    const double C2419 = C2402 + C2403;
    const double C8427 = C8420 + C7873;
    const double C22956 = C22939 + C22940;
    const double C26187 = C26180 + C25633;
    const double C5441 = C5425 + C2611;
    const double C16139 = C16132 + C15467;
    const double C32432 = C32416 + C23148;
    const double C38931 = C38926 + C29374;
    const double C3427 = C3424 + C2389;
    const double C8081 = C8069 + C8054;
    const double C11121 = C11118 + C10742;
    const double C23955 = C23952 + C22926;
    const double C25841 = C25829 + C25814;
    const double C4113 = C4110 + C3132;
    const double C8817 = C8809 + C8261;
    const double C13218 = C13216 + C11227;
    const double C24623 = C24620 + C23669;
    const double C26577 = C26569 + C26021;
    const double C3603 = C3600 + C3591;
    const double C16353 = C16351 + C16345;
    const double C18709 = C18708 + C18706;
    const double C24122 = C24119 + C24110;
    const double C28969 = C28959 + C28935;
    const double C7259 = C7256 + C4519;
    const double C15817 = C15805 + C15790;
    const double C21313 = C21312 + C18860;
    const double C34241 = C34238 + C25020;
    const double C38629 = C38627 + C28938;
    const double C9089 = C9087 + C9080;
    const double C10888 = C10880 + C10863;
    const double C26843 = C26841 + C26834;
    const double C9769 = C9767 + C9760;
    const double C11391 = C11385 + C11372;
    const double C27511 = C27509 + C27502;
    const double C17654 = C17652 + C17646;
    const double C21112 = C21111 + C21108;
    const double C40408 = C40406 + C40400;
    const double C50010 = C50009 + C49991;
    const double C50070 = ae * C50065;
    const double C1006 = (2 * C50047 + C50017 * C50065) / C49734;
    const double C1467 = (C50076 * C50065) / C49734;
    const double C50129 = ae * C50124;
    const double C1751 = (2 * C50106 + C50076 * C50124) / C49734;
    const double C50191 = ae * C50186;
    const double C1129 = C124 * C1120;
    const double C2608 = C2200 * C1120;
    const double C15978 = C49760 * C1120;
    const double C18239 = C10729 * C1120;
    const double C23145 = C22737 * C1120;
    const double C29372 = C25614 * C1120;
    const double C1010 =
        (2 * (2 * ae * (2 * C50045 + C50017 * C50063) + C49844 * C50203) +
         C50206 + C50206 +
         C49844 *
             (C50203 + C50207 + C50207 +
              C49844 *
                  (2 * ae * (2 * C50136 + C50017 * (C49929 + C49979 * C50030)) +
                   C49844 * (2 * C50137 +
                             C50017 * (C49986 +
                                       (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50030))))) /
        C49739;
    const double C3419 = C2200 * C3406;
    const double C8056 = C49760 * C3406;
    const double C11115 = C10729 * C3406;
    const double C23947 = C22737 * C3406;
    const double C25816 = C25614 * C3406;
    const double C4105 = C2200 * C4092;
    const double C8800 = C49760 * C4092;
    const double C11226 = C10729 * C4092;
    const double C24615 = C22737 * C4092;
    const double C26560 = C25614 * C4092;
    const double C1755 =
        (2 * (2 * ae * (2 * C50104 + C50076 * C50122) + C49844 * C50248) +
         C50251 + C50251 +
         C49844 *
             (C50248 + C50252 + C50252 +
              C49844 *
                  (2 * ae * (2 * C50155 + C50076 * (C49929 + C49979 * C50089)) +
                   C49844 * (2 * C50156 +
                             C50076 * (C49986 +
                                       (C49962 * C49963 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49851 * C50089))))) /
        C49739;
    const double C7251 = C2200 * C7238;
    const double C15792 = C49760 * C7238;
    const double C21311 = C10729 * C7238;
    const double C34233 = C22737 * C7238;
    const double C38624 = C25614 * C7238;
    const double C8050 = C7851 * C1004;
    const double C8046 = C7851 * C270;
    const double C8042 = C7851 * C267;
    const double C8037 = C7851 * C1005;
    const double C8030 = C7851 * C269;
    const double C8026 = C7851 * C268;
    const double C8418 = C7851 * C271;
    const double C8414 = C7851 * C266;
    const double C8796 = C7851 * C1465;
    const double C8792 = C7851 * C806;
    const double C8788 = C7851 * C805;
    const double C8784 = C7851 * C1466;
    const double C9077 = C7851 * C3405;
    const double C9246 = C7851 * C3578;
    const double C9242 = C7851 * C1119;
    const double C9757 = C7851 * C4091;
    const double C15786 = C7851 * C1749;
    const double C15782 = C7851 * C417;
    const double C15778 = C7851 * C414;
    const double C15774 = C7851 * C1750;
    const double C15768 = C7851 * C416;
    const double C15764 = C7851 * C415;
    const double C16130 = C7851 * C418;
    const double C16126 = C7851 * C413;
    const double C16342 = C7851 * C1118;
    const double C16747 = C7851 * C4508;
    const double C17643 = C7851 * C7237;
    const double C41609 = C7851 * C807;
    const double C22933 = C22732 * C270;
    const double C22927 = C22732 * C267;
    const double C22921 = C22732 * C269;
    const double C22909 = C22732 * C268;
    const double C23297 = C22732 * C266;
    const double C23670 = C22732 * C806;
    const double C23665 = C22732 * C805;
    const double C23941 = C22732 * C1005;
    const double C24105 = C22732 * C1119;
    const double C24609 = C22732 * C1466;
    const double C32412 = C22732 * C417;
    const double C32406 = C22732 * C414;
    const double C32404 = C22732 * C416;
    const double C32394 = C22732 * C415;
    const double C32749 = C22732 * C413;
    const double C34227 = C22732 * C1750;
    const double C22936 = C22734 * C271;
    const double C22929 = C22734 * C266;
    const double C22918 = C22734 * C270;
    const double C22911 = C22734 * C267;
    const double C23299 = C22734 * C265;
    const double C23672 = C22734 * C807;
    const double C23663 = C22734 * C806;
    const double C23943 = C22734 * C1004;
    const double C24107 = C22734 * C1118;
    const double C24611 = C22734 * C1465;
    const double C32414 = C22734 * C418;
    const double C32408 = C22734 * C413;
    const double C32402 = C22734 * C417;
    const double C32396 = C22734 * C414;
    const double C32751 = C22734 * C412;
    const double C34229 = C22734 * C1749;
    const double C2417 = C2396 + C2397;
    const double C2414 = C2390 + C2210;
    const double C2413 = C2384 + C2385;
    const double C2408 = C2372 + C2205;
    const double C2769 = C2760 + C2217;
    const double C3145 = C3133 + C2605;
    const double C3144 = C3128 + C2592;
    const double C3422 = C3413 + C2387;
    const double C3595 = C3586 + C2599;
    const double C4108 = C4099 + C3130;
    const double C5439 = C5421 + C2613;
    const double C5436 = C5415 + C2602;
    const double C5435 = C5413 + C2596;
    const double C5430 = C5403 + C2595;
    const double C5767 = C5758 + C2929;
    const double C7254 = C7245 + C4521;
    const double C2418 = C2399 + C2400;
    const double C2415 = C2392 + C2209;
    const double C2412 = C2381 + C2382;
    const double C2409 = C2374 + C2206;
    const double C2770 = C2762 + C2218;
    const double C3146 = C3135 + C2606;
    const double C3143 = C3126 + C2591;
    const double C3423 = C3415 + C2388;
    const double C3596 = C3588 + C2600;
    const double C4109 = C4101 + C3131;
    const double C5440 = C5423 + C2612;
    const double C5437 = C5417 + C2603;
    const double C5434 = C5411 + C2597;
    const double C5431 = C5405 + C2594;
    const double C5768 = C5760 + C2928;
    const double C7255 = C7247 + C4520;
    const double C25828 = C25810 + C25811;
    const double C25826 = C25806 + C25623;
    const double C25824 = C25802 + C25625;
    const double C25823 = C25797 + C25798;
    const double C25820 = C25790 + C25620;
    const double C25818 = C25786 + C25618;
    const double C26186 = C26178 + C25632;
    const double C26184 = C26174 + C25630;
    const double C26568 = C26556 + C26020;
    const double C26566 = C26552 + C26018;
    const double C26565 = C26548 + C26007;
    const double C26563 = C26544 + C26005;
    const double C26838 = C26831 + C25800;
    const double C27002 = C26994 + C26014;
    const double C27000 = C26990 + C26012;
    const double C27506 = C27499 + C26550;
    const double C28948 = C28932 + C26025;
    const double C28946 = C28928 + C26027;
    const double C28944 = C28924 + C26016;
    const double C28943 = C28922 + C26010;
    const double C28940 = C28916 + C26009;
    const double C29168 = C29164 + C26345;
    const double C29376 = C29368 + C26347;
    const double C30168 = C30164 + C27905;
    const double C31347 = C31339 + C27907;
    const double C38626 = C38619 + C28939;
    const double C38930 = C38924 + C29375;
    const double C40403 = C40397 + C31346;
    const double C10895 = C10887 * C50720;
    const double C12880 = C10887 * C50818;
    const double C44659 = C10887 * C32096;
    const double C10894 = C10886 * C50720;
    const double C12878 = C10886 * C50818;
    const double C18396 = C10886 * C15462;
    const double C44657 = C10886 * C32096;
    const double C47322 = C10886 * C50855;
    const double C10893 = C10885 * C50720;
    const double C12876 = C10885 * C50818;
    const double C18393 = C10885 * C15462;
    const double C44655 = C10885 * C32096;
    const double C47319 = C10885 * C50855;
    const double C10892 = C10884 * C50720;
    const double C13824 = C10884 * C50818;
    const double C45552 = C10884 * C32096;
    const double C10891 = C10883 * C50720;
    const double C12875 = C10883 * C50818;
    const double C19308 = C10883 * C15462;
    const double C44654 = C10883 * C32096;
    const double C48210 = C10883 * C50855;
    const double C10890 = C10882 * C50720;
    const double C12872 = C10882 * C50818;
    const double C18392 = C10882 * C15462;
    const double C44651 = C10882 * C32096;
    const double C47318 = C10882 * C50855;
    const double C10889 = C10881 * C50720;
    const double C12870 = C10881 * C50818;
    const double C18387 = C10881 * C15462;
    const double C44649 = C10881 * C32096;
    const double C47313 = C10881 * C50855;
    const double C11126 = C11123 * C50720;
    const double C13212 = C11123 * C50818;
    const double C44957 = C11123 * C32096;
    const double C11125 = C11122 * C50720;
    const double C13209 = C11122 * C50818;
    const double C18703 = C11122 * C15462;
    const double C44955 = C11122 * C32096;
    const double C47617 = C11122 * C50855;
    const double C11396 = C11390 * C50720;
    const double C12879 = C11390 * C50732;
    const double C13577 = C11390 * C50818;
    const double C18397 = C11390 * C15463;
    const double C44658 = C11390 * C50732;
    const double C45305 = C11390 * C32096;
    const double C47323 = C11390 * C50846;
    const double C11395 = C11389 * C50720;
    const double C12877 = C11389 * C50732;
    const double C13575 = C11389 * C50818;
    const double C18394 = C11389 * C15463;
    const double C19061 = C11389 * C15462;
    const double C44656 = C11389 * C50732;
    const double C45303 = C11389 * C32096;
    const double C47320 = C11389 * C50846;
    const double C47963 = C11389 * C50855;
    const double C11394 = C11388 * C50720;
    const double C12871 = C11388 * C50732;
    const double C13574 = C11388 * C50818;
    const double C18388 = C11388 * C15463;
    const double C19060 = C11388 * C15462;
    const double C44650 = C11388 * C50732;
    const double C45302 = C11388 * C32096;
    const double C47314 = C11388 * C50846;
    const double C47962 = C11388 * C50855;
    const double C11393 = C11387 * C50720;
    const double C12873 = C11387 * C50732;
    const double C13572 = C11387 * C50818;
    const double C18391 = C11387 * C15463;
    const double C19951 = C11387 * C15462;
    const double C44652 = C11387 * C50732;
    const double C45300 = C11387 * C32096;
    const double C47317 = C11387 * C50846;
    const double C48848 = C11387 * C50855;
    const double C11392 = C11386 * C50720;
    const double C12874 = C11386 * C50732;
    const double C14473 = C11386 * C50818;
    const double C19309 = C11386 * C15463;
    const double C44653 = C11386 * C50732;
    const double C46191 = C11386 * C32096;
    const double C48211 = C11386 * C50846;
    const double C11571 = C11570 * C50720;
    const double C11691 = C11688 * C50720;
    const double C14474 = C11688 * C50732;
    const double C19310 = C11688 * C15464;
    const double C46192 = C11688 * C50732;
    const double C48212 = C11688 * C38322;
    const double C11690 = C11687 * C50720;
    const double C13571 = C11687 * C50732;
    const double C13975 = C11687 * C50818;
    const double C18390 = C11687 * C15464;
    const double C19952 = C11687 * C15463;
    const double C45299 = C11687 * C50732;
    const double C45702 = C11687 * C32096;
    const double C47316 = C11687 * C38322;
    const double C48849 = C11687 * C50846;
    const double C11689 = C11686 * C50720;
    const double C13573 = C11686 * C50732;
    const double C13972 = C11686 * C50818;
    const double C18389 = C11686 * C15464;
    const double C19059 = C11686 * C15463;
    const double C19457 = C11686 * C15462;
    const double C45301 = C11686 * C50732;
    const double C45700 = C11686 * C32096;
    const double C47315 = C11686 * C38322;
    const double C47961 = C11686 * C50846;
    const double C48359 = C11686 * C50855;
    const double C12027 = C12026 * C50720;
    const double C13825 = C12026 * C50732;
    const double C45553 = C12026 * C50732;
    const double C13578 = C13062 * C50732;
    const double C18398 = C13062 * C15464;
    const double C45306 = C13062 * C50732;
    const double C47324 = C13062 * C38322;
    const double C13576 = C13061 * C50732;
    const double C18395 = C13061 * C15464;
    const double C19062 = C13061 * C15463;
    const double C45304 = C13061 * C50732;
    const double C47321 = C13061 * C38322;
    const double C47964 = C13061 * C50846;
    const double C13985 = C13983 * C50732;
    const double C19953 = C13983 * C15464;
    const double C45703 = C13983 * C50732;
    const double C48850 = C13983 * C38322;
    const double C13984 = C13982 * C50732;
    const double C19058 = C13982 * C15464;
    const double C19458 = C13982 * C15463;
    const double C45701 = C13982 * C50732;
    const double C47960 = C13982 * C38322;
    const double C48360 = C13982 * C50846;
    const double C19063 = C18556 * C15464;
    const double C47965 = C18556 * C38322;
    const double C19464 = C19463 * C15464;
    const double C48361 = C19463 * C38322;
    const double C2428 = C2416 + C2208;
    const double C8429 = C8425 + C7871;
    const double C22965 = C22953 + C22745;
    const double C26189 = C26185 + C25631;
    const double C5450 = C5438 + C2604;
    const double C16141 = C16137 + C8586;
    const double C32441 = C32429 + C23141;
    const double C29379 = C29377 + C26346;
    const double C13221 = C13219 * C50732;
    const double C18704 = C13219 * C15463;
    const double C44956 = C13219 * C50732;
    const double C47618 = C13219 * C50846;
    const double C49956 = ae * C49955;
    const double C137 =
        (4 * C49910 + C49844 * C49955 + (3 * C49895 + C49844 * C49938) * ae) /
        C49734;
    const double C283 = (C50017 * C49955) / C49734;
    const double C430 = (C50076 * C49955) / C49734;
    const double C2765 = C2192 * C293;
    const double C23302 = C22729 * C293;
    const double C3147 = C3137 + C2607;
    const double C41614 = C41611 + C8584;
    const double C23684 = C23674 + C23144;
    const double C29169 = C29166 + C26344;
    const double C5763 = C2192 * C440;
    const double C32754 = C22729 * C440;
    const double C2431 = C2419 + C2403;
    const double C8431 = C8427 + C7873;
    const double C22968 = C22956 + C22940;
    const double C26191 = C26187 + C25633;
    const double C5453 = C5441 + C2611;
    const double C16143 = C16139 + C15467;
    const double C32444 = C32432 + C23148;
    const double C38933 = C38931 + C29374;
    const double C3430 = C3427 + C3418;
    const double C8093 = C8081 + C8055;
    const double C11124 = C11121 + C11114;
    const double C23958 = C23955 + C23946;
    const double C25853 = C25841 + C25815;
    const double C4116 = C4113 + C4104;
    const double C8825 = C8817 + C8799;
    const double C13220 = C13218 + C13214;
    const double C24626 = C24623 + C24614;
    const double C26585 = C26577 + C26559;
    const double C18710 = C18709 * C15464;
    const double C47619 = C18709 * C38322;
    const double C7262 = C7259 + C7250;
    const double C15829 = C15817 + C15791;
    const double C21314 = C21313 + C21310;
    const double C34244 = C34241 + C34232;
    const double C38631 = C38629 + C38622;
    const double C10896 = C10888 * C50720;
    const double C11397 = C11391 * C50720;
    const double C12881 = C11391 * C50732;
    const double C44660 = C11391 * C50732;
    const double C50012 = ae * C50010;
    const double C50011 = C49844 * C50010;
    const double C50138 = C50017 * C50010;
    const double C50157 = C50076 * C50010;
    const double C284 = (C49955 + C50010 * C50030) / C49734;
    const double C431 = (C49955 + C50010 * C50089) / C49734;
    const double C294 =
        (3 * (C50039 + C50043 + C50043 + C49844 * C50074) + C50070 + C50070 +
         C49844 *
             (2 * C50074 + C50071 + C50071 +
              C49844 * (C50064 + C50072 + C50072 +
                        C49844 * (2 * ae * (C49929 + C49979 * C50030) +
                                  C49844 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50030))))) /
        C49739;
    const double C1015 = C124 * C1006;
    const double C2405 = C2200 * C1006;
    const double C8422 = C49760 * C1006;
    const double C10743 = C10729 * C1006;
    const double C22942 = C22737 * C1006;
    const double C26182 = C25614 * C1006;
    const double C1476 = C124 * C1467;
    const double C3139 = C2200 * C1467;
    const double C8582 = C49760 * C1467;
    const double C12721 = C10729 * C1467;
    const double C23676 = C22737 * C1467;
    const double C26342 = C25614 * C1467;
    const double C441 =
        (3 * (C50098 + C50102 + C50102 + C49844 * C50133) + C50129 + C50129 +
         C49844 *
             (2 * C50133 + C50130 + C50130 +
              C49844 * (C50123 + C50131 + C50131 +
                        C49844 * (2 * ae * (C49929 + C49979 * C50089) +
                                  C49844 * (C49986 + (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49851 * C50089))))) /
        C49739;
    const double C1760 = C124 * C1751;
    const double C5427 = C2200 * C1751;
    const double C16134 = C49760 * C1751;
    const double C20910 = C10729 * C1751;
    const double C32418 = C22737 * C1751;
    const double C38928 = C25614 * C1751;
    const double C819 =
        (3 * (C50178 + C50182 + C50182 + C49844 * C50195) + C50191 + C50191 +
         C49844 *
             (2 * C50195 + C50192 + C50192 +
              C49844 * (C50185 + C50193 + C50193 +
                        C49844 * (2 * ae * C50076 * C50017 * C49979 +
                                  C49844 * C50076 * C50017 *
                                      (C49962 * C49963 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                      C49851)))) /
        C49739;
    const double C8068 = C8050 + C8051;
    const double C8066 = C8046 + C7863;
    const double C8064 = C8042 + C7865;
    const double C8063 = C8037 + C8038;
    const double C8060 = C8030 + C7860;
    const double C8058 = C8026 + C7858;
    const double C8426 = C8418 + C7872;
    const double C8424 = C8414 + C7870;
    const double C8808 = C8796 + C8260;
    const double C8806 = C8792 + C8258;
    const double C8805 = C8788 + C8247;
    const double C8803 = C8784 + C8245;
    const double C9084 = C9077 + C8040;
    const double C9254 = C9246 + C8254;
    const double C9252 = C9242 + C8252;
    const double C9764 = C9757 + C8790;
    const double C15804 = C15786 + C15787;
    const double C15802 = C15782 + C8267;
    const double C15800 = C15778 + C8256;
    const double C15799 = C15774 + C10171;
    const double C15796 = C15768 + C8250;
    const double C15794 = C15764 + C8249;
    const double C16138 = C16130 + C15466;
    const double C16136 = C16126 + C8587;
    const double C16348 = C16342 + C8265;
    const double C16754 = C16747 + C10169;
    const double C17649 = C17643 + C15776;
    const double C41613 = C41609 + C8585;
    const double C22954 = C22933 + C22934;
    const double C22951 = C22927 + C22747;
    const double C22950 = C22921 + C22922;
    const double C22945 = C22909 + C22742;
    const double C23306 = C23297 + C22754;
    const double C23682 = C23670 + C23142;
    const double C23681 = C23665 + C23129;
    const double C23950 = C23941 + C22924;
    const double C24114 = C24105 + C23136;
    const double C24618 = C24609 + C23667;
    const double C32430 = C32412 + C23150;
    const double C32427 = C32406 + C23139;
    const double C32426 = C32404 + C23133;
    const double C32421 = C32394 + C23132;
    const double C32758 = C32749 + C23466;
    const double C34236 = C34227 + C25022;
    const double C22955 = C22936 + C22937;
    const double C22952 = C22929 + C22746;
    const double C22949 = C22918 + C22919;
    const double C22946 = C22911 + C22743;
    const double C23307 = C23299 + C22755;
    const double C23683 = C23672 + C23143;
    const double C23680 = C23663 + C23128;
    const double C23951 = C23943 + C22925;
    const double C24115 = C24107 + C23137;
    const double C24619 = C24611 + C23668;
    const double C32431 = C32414 + C23149;
    const double C32428 = C32408 + C23140;
    const double C32425 = C32402 + C23134;
    const double C32422 = C32396 + C23131;
    const double C32759 = C32751 + C23465;
    const double C34237 = C34229 + C25021;
    const double C2429 = C2417 + C2397;
    const double C2426 = C2414 + C2210;
    const double C2425 = C2413 + C2385;
    const double C2420 = C2408 + C2205;
    const double C2772 = C2769 + C2217;
    const double C3151 = C3145 + C2605;
    const double C3150 = C3144 + C2592;
    const double C3425 = C3422 + C2387;
    const double C3598 = C3595 + C2599;
    const double C4111 = C4108 + C3130;
    const double C5451 = C5439 + C2613;
    const double C5448 = C5436 + C2602;
    const double C5447 = C5435 + C2596;
    const double C5442 = C5430 + C2595;
    const double C5770 = C5767 + C2929;
    const double C7257 = C7254 + C4521;
    const double C2430 = C2418 + C2400;
    const double C2427 = C2415 + C2209;
    const double C2424 = C2412 + C2382;
    const double C2421 = C2409 + C2206;
    const double C2773 = C2770 + C2218;
    const double C3152 = C3146 + C2606;
    const double C3149 = C3143 + C2591;
    const double C3426 = C3423 + C2388;
    const double C3599 = C3596 + C2600;
    const double C4112 = C4109 + C3131;
    const double C5452 = C5440 + C2612;
    const double C5449 = C5437 + C2603;
    const double C5446 = C5434 + C2597;
    const double C5443 = C5431 + C2594;
    const double C5771 = C5768 + C2928;
    const double C7258 = C7255 + C4520;
    const double C25840 = C25828 + C25811;
    const double C25838 = C25826 + C25623;
    const double C25836 = C25824 + C25625;
    const double C25835 = C25823 + C25798;
    const double C25832 = C25820 + C25620;
    const double C25830 = C25818 + C25618;
    const double C26190 = C26186 + C25632;
    const double C26188 = C26184 + C25630;
    const double C26576 = C26568 + C26020;
    const double C26574 = C26566 + C26018;
    const double C26573 = C26565 + C26007;
    const double C26571 = C26563 + C26005;
    const double C26840 = C26838 + C25800;
    const double C27006 = C27002 + C26014;
    const double C27004 = C27000 + C26012;
    const double C27508 = C27506 + C26550;
    const double C28958 = C28948 + C26025;
    const double C28956 = C28946 + C26027;
    const double C28954 = C28944 + C26016;
    const double C28953 = C28943 + C26010;
    const double C28950 = C28940 + C26009;
    const double C29170 = C29168 + C26345;
    const double C29378 = C29376 + C26347;
    const double C30170 = C30168 + C27905;
    const double C31349 = C31347 + C27907;
    const double C38628 = C38626 + C28939;
    const double C38932 = C38930 + C29375;
    const double C40405 = C40403 + C31346;
    const double C12883 = C12879 + C12878;
    const double C44662 = C44658 + C44657;
    const double C12882 = C12872 + C12873;
    const double C44661 = C44651 + C44652;
    const double C13823 = C12874 + C12875;
    const double C45551 = C44653 + C44654;
    const double C14472 = C13571 + C13572;
    const double C46190 = C45299 + C45300;
    const double C2440 = C2428 + C2395;
    const double C8433 = C8429 + C8417;
    const double C22977 = C22965 + C22932;
    const double C26193 = C26189 + C26177;
    const double C5462 = C5450 + C5420;
    const double C16145 = C16141 + C16129;
    const double C32453 = C32441 + C32411;
    const double C29381 = C29379 + C29371;
    const double C144 =
        (4 * (2 * C49904 + C49908 + C49908 + C49844 * C49947) + C49956 +
         C49956 +
         C49844 * (3 * C49947 + C49953 + C49953 +
                   C49844 * (2 * C49943 + C49949 + C49949 +
                             C49844 * (C49936 + C49942 + C49942 +
                                       C49844 * (2 * ae * C49929 +
                                                 C49844 *
                                                     (C49916 * C49917 +
                                                      C49848 * bs[7] *
                                                          std::pow(C49850, 7)) *
                                                     C49851))))) /
        C49739;
    const double C160 = C122 * C137;
    const double C158 = C124 * C137;
    const double C2223 = C2200 * C137;
    const double C22760 = C22737 * C137;
    const double C307 = C124 * C283;
    const double C566 = C122 * C283;
    const double C2221 = C2198 * C283;
    const double C2219 = C2200 * C283;
    const double C7876 = C49760 * C283;
    const double C22758 = C22735 * C283;
    const double C22756 = C22737 * C283;
    const double C25636 = C25614 * C283;
    const double C454 = C124 * C430;
    const double C673 = C122 * C430;
    const double C2927 = C2200 * C430;
    const double C5109 = C2198 * C430;
    const double C15470 = C49760 * C430;
    const double C23464 = C22737 * C430;
    const double C28526 = C25614 * C430;
    const double C32100 = C22735 * C430;
    const double C3153 = C3147 + C2607;
    const double C41616 = C41614 + C8584;
    const double C23690 = C23684 + C23144;
    const double C29171 = C29169 + C26344;
    const double C2443 = C2431 + C2404;
    const double C8435 = C8431 + C8421;
    const double C22980 = C22968 + C22941;
    const double C26195 = C26191 + C26181;
    const double C5465 = C5453 + C5426;
    const double C16147 = C16143 + C16133;
    const double C32456 = C32444 + C32417;
    const double C38935 = C38933 + C38927;
    const double C11127 = C11124 * C50720;
    const double C13222 = C13220 * C50732;
    const double C44958 = C13220 * C50732;
    const double C50013 = C49964 + C50011;
    const double C50145 = ae * C50138;
    const double C814 = (C50076 * C50138) / C49734;
    const double C50164 = ae * C50157;
    const double C308 = C124 * C284;
    const double C2766 = C2200 * C284;
    const double C7874 = C49760 * C284;
    const double C23303 = C22737 * C284;
    const double C25634 = C25614 * C284;
    const double C455 = C124 * C431;
    const double C5764 = C2200 * C431;
    const double C15468 = C49760 * C431;
    const double C32755 = C22737 * C431;
    const double C38324 = C25614 * C431;
    const double C8080 = C8068 + C8051;
    const double C8078 = C8066 + C7863;
    const double C8076 = C8064 + C7865;
    const double C8075 = C8063 + C8038;
    const double C8072 = C8060 + C7860;
    const double C8070 = C8058 + C7858;
    const double C8430 = C8426 + C7872;
    const double C8428 = C8424 + C7870;
    const double C8816 = C8808 + C8260;
    const double C8814 = C8806 + C8258;
    const double C8813 = C8805 + C8247;
    const double C8811 = C8803 + C8245;
    const double C9086 = C9084 + C8040;
    const double C9258 = C9254 + C8254;
    const double C9256 = C9252 + C8252;
    const double C9766 = C9764 + C8790;
    const double C15816 = C15804 + C15787;
    const double C15814 = C15802 + C8267;
    const double C15812 = C15800 + C8256;
    const double C15811 = C15799 + C10171;
    const double C15808 = C15796 + C8250;
    const double C15806 = C15794 + C8249;
    const double C16142 = C16138 + C15466;
    const double C16140 = C16136 + C8587;
    const double C16350 = C16348 + C8265;
    const double C16756 = C16754 + C10169;
    const double C17651 = C17649 + C15776;
    const double C41615 = C41613 + C8585;
    const double C22966 = C22954 + C22934;
    const double C22963 = C22951 + C22747;
    const double C22962 = C22950 + C22922;
    const double C22957 = C22945 + C22742;
    const double C23309 = C23306 + C22754;
    const double C23688 = C23682 + C23142;
    const double C23687 = C23681 + C23129;
    const double C23953 = C23950 + C22924;
    const double C24117 = C24114 + C23136;
    const double C24621 = C24618 + C23667;
    const double C32442 = C32430 + C23150;
    const double C32439 = C32427 + C23139;
    const double C32438 = C32426 + C23133;
    const double C32433 = C32421 + C23132;
    const double C32761 = C32758 + C23466;
    const double C34239 = C34236 + C25022;
    const double C22967 = C22955 + C22937;
    const double C22964 = C22952 + C22746;
    const double C22961 = C22949 + C22919;
    const double C22958 = C22946 + C22743;
    const double C23310 = C23307 + C22755;
    const double C23689 = C23683 + C23143;
    const double C23686 = C23680 + C23128;
    const double C23954 = C23951 + C22925;
    const double C24118 = C24115 + C23137;
    const double C24622 = C24619 + C23668;
    const double C32443 = C32431 + C23149;
    const double C32440 = C32428 + C23140;
    const double C32437 = C32425 + C23134;
    const double C32434 = C32422 + C23131;
    const double C32762 = C32759 + C23465;
    const double C34240 = C34237 + C25021;
    const double C2441 = C2429 + C2398;
    const double C2438 = C2426 + C2391;
    const double C2437 = C2425 + C2386;
    const double C2432 = C2420 + C2373;
    const double C2775 = C2772 + C2761;
    const double C3157 = C3151 + C3134;
    const double C3156 = C3150 + C3129;
    const double C3428 = C3425 + C3414;
    const double C3601 = C3598 + C3587;
    const double C4114 = C4111 + C4100;
    const double C5463 = C5451 + C5422;
    const double C5460 = C5448 + C5416;
    const double C5459 = C5447 + C5414;
    const double C5454 = C5442 + C5404;
    const double C5773 = C5770 + C5759;
    const double C7260 = C7257 + C7246;
    const double C2442 = C2430 + C2401;
    const double C2439 = C2427 + C2393;
    const double C2436 = C2424 + C2383;
    const double C2433 = C2421 + C2375;
    const double C2776 = C2773 + C2763;
    const double C3158 = C3152 + C3136;
    const double C3155 = C3149 + C3127;
    const double C3429 = C3426 + C3416;
    const double C3602 = C3599 + C3589;
    const double C4115 = C4112 + C4102;
    const double C5464 = C5452 + C5424;
    const double C5461 = C5449 + C5418;
    const double C5458 = C5446 + C5412;
    const double C5455 = C5443 + C5406;
    const double C5774 = C5771 + C5761;
    const double C7261 = C7258 + C7248;
    const double C25852 = C25840 + C25812;
    const double C25850 = C25838 + C25807;
    const double C25848 = C25836 + C25803;
    const double C25847 = C25835 + C25799;
    const double C25844 = C25832 + C25791;
    const double C25842 = C25830 + C25787;
    const double C26194 = C26190 + C26179;
    const double C26192 = C26188 + C26175;
    const double C26584 = C26576 + C26557;
    const double C26582 = C26574 + C26553;
    const double C26581 = C26573 + C26549;
    const double C26579 = C26571 + C26545;
    const double C26842 = C26840 + C26832;
    const double C27010 = C27006 + C26995;
    const double C27008 = C27004 + C26991;
    const double C27510 = C27508 + C27500;
    const double C28968 = C28958 + C28933;
    const double C28966 = C28956 + C28929;
    const double C28964 = C28954 + C28925;
    const double C28963 = C28953 + C28923;
    const double C28960 = C28950 + C28917;
    const double C29172 = C29170 + C29165;
    const double C29380 = C29378 + C29369;
    const double C30172 = C30170 + C30165;
    const double C31351 = C31349 + C31340;
    const double C38630 = C38628 + C38620;
    const double C38934 = C38932 + C38925;
    const double C40407 = C40405 + C40398;
    const double C2771 = C2764 + C2219;
    const double C23308 = C23301 + C22756;
    const double C5769 = C5762 + C2927;
    const double C32760 = C32753 + C23464;
    const double C3159 = C3153 + C3138;
    const double C41618 = C41616 + C41612;
    const double C23696 = C23690 + C23675;
    const double C29173 = C29171 + C29167;
    const double C50014 = C50013 + C49999;
    const double C563 =
        (4 * (2 * C50056 + C50053 + C50053 + C49844 * C50152) + C50145 +
         C50145 +
         C49844 * (3 * C50152 + C50146 + C50146 +
                   C49844 * (2 * C50150 + C50147 + C50147 +
                             C49844 * (C50137 + C50148 + C50148 +
                                       C49844 * (2 * ae * C50017 * C49979 +
                                                 C49844 * C50017 *
                                                     (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49851))))) /
        C49739;
    const double C825 = C124 * C814;
    const double C2924 = C2200 * C814;
    const double C23461 = C22737 * C814;
    const double C28524 = C25614 * C814;
    const double C41025 = C49760 * C814;
    const double C670 =
        (4 * (2 * C50115 + C50112 + C50112 + C49844 * C50171) + C50164 +
         C50164 +
         C49844 * (3 * C50171 + C50165 + C50165 +
                   C49844 * (2 * C50169 + C50166 + C50166 +
                             C49844 * (C50156 + C50167 + C50167 +
                                       C49844 * (2 * ae * C50076 * C49979 +
                                                 C49844 * C50076 *
                                                     (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49851))))) /
        C49739;
    const double C8092 = C8080 + C8052;
    const double C8090 = C8078 + C8047;
    const double C8088 = C8076 + C8043;
    const double C8087 = C8075 + C8039;
    const double C8084 = C8072 + C8031;
    const double C8082 = C8070 + C8027;
    const double C8434 = C8430 + C8419;
    const double C8432 = C8428 + C8415;
    const double C8824 = C8816 + C8797;
    const double C8822 = C8814 + C8793;
    const double C8821 = C8813 + C8789;
    const double C8819 = C8811 + C8785;
    const double C9088 = C9086 + C9078;
    const double C9262 = C9258 + C9247;
    const double C9260 = C9256 + C9243;
    const double C9768 = C9766 + C9758;
    const double C15828 = C15816 + C15788;
    const double C15826 = C15814 + C15783;
    const double C15824 = C15812 + C15779;
    const double C15823 = C15811 + C15775;
    const double C15820 = C15808 + C15769;
    const double C15818 = C15806 + C15765;
    const double C16146 = C16142 + C16131;
    const double C16144 = C16140 + C16127;
    const double C16352 = C16350 + C16343;
    const double C16758 = C16756 + C16748;
    const double C17653 = C17651 + C17644;
    const double C41617 = C41615 + C41610;
    const double C22978 = C22966 + C22935;
    const double C22975 = C22963 + C22928;
    const double C22974 = C22962 + C22923;
    const double C22969 = C22957 + C22910;
    const double C23312 = C23309 + C23298;
    const double C23694 = C23688 + C23671;
    const double C23693 = C23687 + C23666;
    const double C23956 = C23953 + C23942;
    const double C24120 = C24117 + C24106;
    const double C24624 = C24621 + C24610;
    const double C32454 = C32442 + C32413;
    const double C32451 = C32439 + C32407;
    const double C32450 = C32438 + C32405;
    const double C32445 = C32433 + C32395;
    const double C32764 = C32761 + C32750;
    const double C34242 = C34239 + C34228;
    const double C22979 = C22967 + C22938;
    const double C22976 = C22964 + C22930;
    const double C22973 = C22961 + C22920;
    const double C22970 = C22958 + C22912;
    const double C23313 = C23310 + C23300;
    const double C23695 = C23689 + C23673;
    const double C23692 = C23686 + C23664;
    const double C23957 = C23954 + C23944;
    const double C24121 = C24118 + C24108;
    const double C24625 = C24622 + C24612;
    const double C32455 = C32443 + C32415;
    const double C32452 = C32440 + C32409;
    const double C32449 = C32437 + C32403;
    const double C32446 = C32434 + C32397;
    const double C32765 = C32762 + C32752;
    const double C34243 = C34240 + C34230;
    const double C25855 = C25851 + C25850;
    const double C26830 = C25846 + C25847;
    const double C25854 = C25844 + C25845;
    const double C29643 = C26583 + C26582;
    const double C29642 = C26582 + C26583;
    const double C29641 = C26580 + C26581;
    const double C29640 = C26581 + C26580;
    const double C27498 = C26578 + C26579;
    const double C30820 = C26579 + C26578;
    const double C30163 = C27008 + C27009;
    const double C30162 = C27009 + C27008;
    const double C38623 = C28967 + C28966;
    const double C38618 = C28963 + C28962;
    const double C40396 = C31352 + C31351;
    const double C2774 = C2771 + C2219;
    const double C23311 = C23308 + C22756;
    const double C5772 = C5769 + C2927;
    const double C32763 = C32760 + C23464;
    const double C50015 = ae * C50014;
    const double C138 =
        (5 * C49955 + C49844 * C50014 + (4 * C49938 + C49844 * C49996) * ae) /
        C49734;
    const double C562 = (C50017 * C50014) / C49734;
    const double C669 = (C50076 * C50014) / C49734;
    const double C8095 = C8091 + C8090;
    const double C9076 = C8086 + C8087;
    const double C8094 = C8084 + C8085;
    const double C42074 = C8823 + C8822;
    const double C42073 = C8822 + C8823;
    const double C42072 = C8820 + C8821;
    const double C42071 = C8821 + C8820;
    const double C9756 = C8818 + C8819;
    const double C43240 = C8819 + C8818;
    const double C16751 = C9261 + C9260;
    const double C42593 = C9260 + C9261;
    const double C15831 = C15827 + C15826;
    const double C17642 = C15822 + C15823;
    const double C15830 = C15820 + C15821;
    const double C25857 = C25855 * C50720;
    const double C26837 = C26830 * C50720;
    const double C25856 = C25854 * C50720;
    const double C27505 = C27498 * C50720;
    const double C2777 = C2774 + C2765;
    const double C23314 = C23311 + C23302;
    const double C5775 = C5772 + C5763;
    const double C32766 = C32763 + C32754;
    const double C145 =
        (5 * (3 * C49947 + C49953 + C49953 + C49844 * C50005) + C50015 +
         C50015 +
         C49844 *
             (4 * C50005 + C50012 + C50012 +
              C49844 *
                  (3 * C50000 + C50008 + C50008 +
                   C49844 * (2 * C49994 + C50002 + C50002 +
                             C49844 * (C49986 + C49993 + C49993 +
                                       C49844 * (2 * ae * C49979 +
                                                 C49844 *
                                                     (C49962 * C49963 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49851)))))) /
        C49739;
    const double C159 = C124 * C138;
    const double C565 = C124 * C562;
    const double C2220 = C2200 * C562;
    const double C22757 = C22737 * C562;
    const double C672 = C124 * C669;
    const double C5108 = C2200 * C669;
    const double C32099 = C22737 * C669;
    const double C8097 = C8095 * C50720;
    const double C9083 = C9076 * C50720;
    const double C8096 = C8094 * C50720;
    const double C9763 = C9756 * C50720;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50593 * C50806 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50593 * C50629) *
                     C50848 +
                 (((C22975 + C22976 + C22977) * C50720 * C22730 +
                   (C22978 + C22979 + C22980) * C50720 * C50708) *
                      C50593 * C50629 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50593 * C50806) *
                     C50849 +
                 (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                    C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                    C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                       C50720 * C22730 +
                   (C23312 + C23313 + C23314) * C50720 * C50708) *
                      C50593 * C50806 -
                  ((C22736 * C274 + C23303 + C23303 + C22729 * C294 +
                    C22734 * C272 + C23304 + C23304 + C50831 * C292 +
                    C22732 * C271 + C23305 + C23305 + C50847 * C291) *
                       C50720 * C50708 +
                   (C23314 + C23313 + C23312) * C50720 * C22730) *
                      C50593 * C50629) *
                     C560)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C50807 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50657) *
                      C50806 +
                  (((C23693 + C23692 + C23691) * C50720 * C22730 +
                    (C22732 * C1466 + C23667 + C23667 + C50847 * C1474 +
                     C22734 * C1465 + C23668 + C23668 + C50831 * C1473 +
                     C22736 * C1464 + C23669 + C23669 + C22729 * C1472) *
                        C50720 * C50708) *
                       C50657 -
                   ((C22972 + C22973 + C22974) * C50720 * C50708 +
                    (C22971 + C22970 + C22969) * C50720 * C22730) *
                       C50807) *
                      C50629) *
                     C263 +
                 ((((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                        C50720 * C22730 +
                    (C23694 + C23695 + C23696) * C50720 * C50708) *
                       C50657 -
                   ((C22977 + C22976 + C22975) * C50720 * C50708 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C50720 * C22730) *
                       C50807) *
                      C50806 +
                  (((C22975 + C22976 + C22977) * C50720 * C22730 +
                    (C22978 + C22979 + C22980) * C50720 * C50708) *
                       C50807 -
                   ((C22736 * C1463 + C23676 + C23676 + C22729 * C1471 +
                     C22734 * C1464 + C23677 + C23677 + C50831 * C1472 +
                     C22732 * C1465 + C23678 + C23678 + C50847 * C1473) *
                        C50720 * C50708 +
                    (C23696 + C23695 + C23694) * C50720 * C22730) *
                       C50657) *
                      C50629) *
                     C50564)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50593 * C260 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50593 * C261 +
                  ((C22974 + C22973 + C22972) * C50720 * C22730 +
                   (C22732 * C1005 + C22924 + C22924 + C50847 * C1013 +
                    C22734 * C1004 + C22925 + C22925 + C50831 * C1012 +
                    C22736 * C1003 + C22926 + C22926 + C22729 * C1011) *
                       C50720 * C50708) *
                      C50593 * C262) *
                     C263 +
                 (((C22975 + C22976 + C22977) * C50720 * C22730 +
                   (C22978 + C22979 + C22980) * C50720 * C50708) *
                      C50593 * C261 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50593 * C260 -
                  ((C22736 * C1002 + C22942 + C22942 + C22729 * C1010 +
                    C22734 * C1003 + C22943 + C22943 + C50831 * C1011 +
                    C22732 * C1004 + C22944 + C22944 + C50847 * C1012) *
                       C50720 * C50708 +
                   (C22980 + C22979 + C22978) * C50720 * C22730) *
                      C50593 * C262) *
                     C50564)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                   C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                   C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                      C50720 * C22730 +
                  (C22732 * C268 + C22742 + C22742 + C50847 * C288 +
                   C22734 * C267 + C22743 + C22743 + C50831 * C287 +
                   C22736 * C266 + C22744 + C22744 + C22729 * C286) *
                      C50720 * C50708) *
                     C50593 * C50577 * C113 -
                 ((C22736 * C265 + C22745 + C22745 + C22729 * C285 +
                   C22734 * C266 + C22746 + C22746 + C50831 * C286 +
                   C22732 * C267 + C22747 + C22747 + C50847 * C287) *
                      C50720 * C50708 +
                  (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                   C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                   C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                      C50720 * C22730) *
                     C50593 * C50577 * C114 +
                 ((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                   C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                   C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                      C50720 * C22730 +
                  (C22732 * C266 + C22754 + C22754 + C50847 * C286 +
                   C22734 * C265 + C22755 + C22755 + C50831 * C285 +
                   C22736 * C273 + C22756 + C22756 + C22729 * C293) *
                      C50720 * C50708) *
                     C50593 * C50577 * C115 -
                 ((C22736 * C561 + C22757 + C22757 + C22729 * C563 +
                   C22734 * C273 + C22758 + C22758 + C50831 * C293 +
                   C22732 * C265 + C22759 + C22759 + C50847 * C285) *
                      C50720 * C50708 +
                  (C22736 * C130 + C22760 + C22760 + C22729 * C144 +
                   C22734 * C129 + C22761 + C22761 + C50831 * C143 +
                   C22732 * C128 + C22762 + C22762 + C50847 * C142) *
                      C50720 * C22730) *
                     C50593 * C50577 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C409 -
                  ((C22736 * C807 + C23127 + C23127 + C22729 * C817 +
                    C22734 * C806 + C23128 + C23128 + C50831 * C816 +
                    C22732 * C805 + C23129 + C23129 + C50847 * C815) *
                       C50720 * C50708 +
                   (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                    C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                    C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                       C50720 * C22730) *
                      C410 +
                  ((C22732 * C416 + C23133 + C23133 + C50847 * C436 +
                    C22734 * C417 + C23134 + C23134 + C50831 * C437 +
                    C22736 * C418 + C23135 + C23135 + C22729 * C438) *
                       C50720 * C22730 +
                   (C22732 * C1119 + C23136 + C23136 + C50847 * C1127 +
                    C22734 * C1118 + C23137 + C23137 + C50831 * C1126 +
                    C22736 * C1117 + C23138 + C23138 + C22729 * C1125) *
                       C50720 * C50708) *
                      C411) *
                     C50577 * C263 +
                 (((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                    C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                    C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                       C50720 * C22730 +
                   (C22732 * C806 + C23142 + C23142 + C50847 * C816 +
                    C22734 * C807 + C23143 + C23143 + C50831 * C817 +
                    C22736 * C808 + C23144 + C23144 + C22729 * C818) *
                       C50720 * C50708) *
                      C410 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C409 -
                  ((C22736 * C1116 + C23145 + C23145 + C22729 * C1124 +
                    C22734 * C1117 + C23146 + C23146 + C50831 * C1125 +
                    C22732 * C1118 + C23147 + C23147 + C50847 * C1126) *
                       C50720 * C50708 +
                   (C22736 * C419 + C23148 + C23148 + C22729 * C439 +
                    C22734 * C418 + C23149 + C23149 + C50831 * C438 +
                    C22732 * C417 + C23150 + C23150 + C50847 * C437) *
                       C50720 * C22730) *
                      C411) *
                     C50577 * C50564)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50807 -
                  ((C22736 * C807 + C23127 + C23127 + C22729 * C817 +
                    C22734 * C806 + C23128 + C23128 + C50831 * C816 +
                    C22732 * C805 + C23129 + C23129 + C50847 * C815) *
                       C50720 * C50708 +
                   (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                    C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                    C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                       C50720 * C22730) *
                      C50657) *
                     C50577 * C50848 +
                 (((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                    C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                    C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                       C50720 * C22730 +
                   (C22732 * C806 + C23142 + C23142 + C50847 * C816 +
                    C22734 * C807 + C23143 + C23143 + C50831 * C817 +
                    C22736 * C808 + C23144 + C23144 + C22729 * C818) *
                       C50720 * C50708) *
                      C50657 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50807) *
                     C50577 * C50849 +
                 (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                    C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                    C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                       C50720 * C22730 +
                   (C23312 + C23313 + C23314) * C50720 * C50708) *
                      C50807 -
                  ((C22736 * C809 + C23461 + C23461 + C22729 * C819 +
                    C22734 * C808 + C23462 + C23462 + C50831 * C818 +
                    C22732 * C807 + C23463 + C23463 + C50847 * C817) *
                       C50720 * C50708 +
                   (C22736 * C420 + C23464 + C23464 + C22729 * C440 +
                    C22734 * C412 + C23465 + C23465 + C50831 * C432 +
                    C22732 * C413 + C23466 + C23466 + C50847 * C433) *
                       C50720 * C22730) *
                      C50657) *
                     C50577 * C560)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                   C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                   C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                      C50720 * C22730 +
                  (C22732 * C268 + C22742 + C22742 + C50847 * C288 +
                   C22734 * C267 + C22743 + C22743 + C50831 * C287 +
                   C22736 * C266 + C22744 + C22744 + C22729 * C286) *
                      C50720 * C50708) *
                     C50593 * C50577 * C113 -
                 ((C22736 * C265 + C22745 + C22745 + C22729 * C285 +
                   C22734 * C266 + C22746 + C22746 + C50831 * C286 +
                   C22732 * C267 + C22747 + C22747 + C50847 * C287) *
                      C50720 * C50708 +
                  (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                   C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                   C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                      C50720 * C22730) *
                     C50593 * C50577 * C114 +
                 ((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                   C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                   C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                      C50720 * C22730 +
                  (C22732 * C266 + C22754 + C22754 + C50847 * C286 +
                   C22734 * C265 + C22755 + C22755 + C50831 * C285 +
                   C22736 * C273 + C22756 + C22756 + C22729 * C293) *
                      C50720 * C50708) *
                     C50593 * C50577 * C115 -
                 ((C22736 * C561 + C22757 + C22757 + C22729 * C563 +
                   C22734 * C273 + C22758 + C22758 + C50831 * C293 +
                   C22732 * C265 + C22759 + C22759 + C50847 * C285) *
                      C50720 * C50708 +
                  (C22736 * C130 + C22760 + C22760 + C22729 * C144 +
                   C22734 * C129 + C22761 + C22761 + C50831 * C143 +
                   C22732 * C128 + C22762 + C22762 + C50847 * C142) *
                      C50720 * C22730) *
                     C50593 * C50577 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50593 * C260 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50593 * C261 +
                  ((C22974 + C22973 + C22972) * C50720 * C22730 +
                   (C22732 * C1005 + C22924 + C22924 + C50847 * C1013 +
                    C22734 * C1004 + C22925 + C22925 + C50831 * C1012 +
                    C22736 * C1003 + C22926 + C22926 + C22729 * C1011) *
                       C50720 * C50708) *
                      C50593 * C262) *
                     C263 +
                 (((C22975 + C22976 + C22977) * C50720 * C22730 +
                   (C22978 + C22979 + C22980) * C50720 * C50708) *
                      C50593 * C261 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50593 * C260 -
                  ((C22736 * C1002 + C22942 + C22942 + C22729 * C1010 +
                    C22734 * C1003 + C22943 + C22943 + C50831 * C1011 +
                    C22732 * C1004 + C22944 + C22944 + C50847 * C1012) *
                       C50720 * C50708 +
                   (C22980 + C22979 + C22978) * C50720 * C22730) *
                      C50593 * C262) *
                     C50564)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50593 * C50850 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50593 * C50851 +
                  ((C22974 + C22973 + C22972) * C50720 * C22730 +
                   (C23956 + C23957 + C23958) * C50720 * C50708) *
                      C50593 * C1232) *
                     C50798 +
                 (((C22975 + C22976 + C22977) * C50720 * C22730 +
                   (C22978 + C22979 + C22980) * C50720 * C50708) *
                      C50593 * C50851 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50593 * C50850 -
                  ((C22736 * C1002 + C22942 + C22942 + C22729 * C1010 +
                    C22734 * C1003 + C22943 + C22943 + C50831 * C1011 +
                    C22732 * C1004 + C22944 + C22944 + C50847 * C1012) *
                       C50720 * C50708 +
                   (C22980 + C22979 + C22978) * C50720 * C22730) *
                      C50593 * C1232) *
                     C50564)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50807 -
                  ((C23691 + C23692 + C23693) * C50720 * C50708 +
                   (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                    C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                    C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                       C50720 * C22730) *
                      C50657) *
                     C50850 +
                 (((C23693 + C23692 + C23691) * C50720 * C22730 +
                   (C24624 + C24625 + C24626) * C50720 * C50708) *
                      C50657 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50807) *
                     C50851 +
                 (((C22974 + C22973 + C22972) * C50720 * C22730 +
                   (C23956 + C23957 + C23958) * C50720 * C50708) *
                      C50807 -
                  ((C22736 * C4089 + C24615 + C24615 + C22729 * C4095 +
                    C22734 * C4090 + C24616 + C24616 + C50831 * C4096 +
                    C22732 * C4091 + C24617 + C24617 + C50847 * C4097) *
                       C50720 * C50708 +
                   (C24626 + C24625 + C24624) * C50720 * C22730) *
                      C50657) *
                     C1232) *
                C50558) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                   C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                   C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                      C50720 * C22730 +
                  (C22969 + C22970 + C22971) * C50720 * C50708) *
                     C50593 * C997 -
                 ((C22972 + C22973 + C22974) * C50720 * C50708 +
                  (C22971 + C22970 + C22969) * C50720 * C22730) *
                     C50593 * C998 +
                 ((C22974 + C22973 + C22972) * C50720 * C22730 +
                  (C23956 + C23957 + C23958) * C50720 * C50708) *
                     C50593 * C999 -
                 ((C22736 * C3403 + C23947 + C23947 + C22729 * C3409 +
                   C22734 * C3404 + C23948 + C23948 + C50831 * C3410 +
                   C22732 * C3405 + C23949 + C23949 + C50847 * C3411) *
                      C50720 * C50708 +
                  (C23958 + C23957 + C23956) * C50720 * C22730) *
                     C50593 * C1000) *
                C50558) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50593 * C926 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50593 * C50629) *
                     C928 +
                 (((C22975 + C22976 + C22977) * C50720 * C22730 +
                   (C22978 + C22979 + C22980) * C50720 * C50708) *
                      C50593 * C50629 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50593 * C926) *
                     C929 +
                 (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                    C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                    C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                       C50720 * C22730 +
                   (C23312 + C23313 + C23314) * C50720 * C50708) *
                      C50593 * C926 -
                  ((C22736 * C274 + C23303 + C23303 + C22729 * C294 +
                    C22734 * C272 + C23304 + C23304 + C50831 * C292 +
                    C22732 * C271 + C23305 + C23305 + C50847 * C291) *
                       C50720 * C50708 +
                   (C23314 + C23313 + C23312) * C50720 * C22730) *
                      C50593 * C50629) *
                     C930)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C409 -
                  ((C23691 + C23692 + C23693) * C50720 * C50708 +
                   (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                    C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                    C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                       C50720 * C22730) *
                      C410 +
                  ((C22732 * C416 + C23133 + C23133 + C50847 * C436 +
                    C22734 * C417 + C23134 + C23134 + C50831 * C437 +
                    C22736 * C418 + C23135 + C23135 + C22729 * C438) *
                       C50720 * C22730 +
                   (C24120 + C24121 + C24122) * C50720 * C50708) *
                      C411) *
                     C926 +
                 (((C23693 + C23692 + C23691) * C50720 * C22730 +
                   (C22732 * C1466 + C23667 + C23667 + C50847 * C1474 +
                    C22734 * C1465 + C23668 + C23668 + C50831 * C1473 +
                    C22736 * C1464 + C23669 + C23669 + C22729 * C1472) *
                       C50720 * C50708) *
                      C410 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C409 -
                  ((C22736 * C3576 + C24111 + C24111 + C22729 * C3582 +
                    C22734 * C3577 + C24112 + C24112 + C50831 * C3583 +
                    C22732 * C3578 + C24113 + C24113 + C50847 * C3584) *
                       C50720 * C50708 +
                   (C24122 + C24121 + C24120) * C50720 * C22730) *
                      C411) *
                     C50629) *
                C50558) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C50807 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50657) *
                      C926 +
                  (((C23693 + C23692 + C23691) * C50720 * C22730 +
                    (C22732 * C1466 + C23667 + C23667 + C50847 * C1474 +
                     C22734 * C1465 + C23668 + C23668 + C50831 * C1473 +
                     C22736 * C1464 + C23669 + C23669 + C22729 * C1472) *
                        C50720 * C50708) *
                       C50657 -
                   ((C22972 + C22973 + C22974) * C50720 * C50708 +
                    (C22971 + C22970 + C22969) * C50720 * C22730) *
                       C50807) *
                      C50629) *
                     C50798 +
                 ((((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                        C50720 * C22730 +
                    (C23694 + C23695 + C23696) * C50720 * C50708) *
                       C50657 -
                   ((C22977 + C22976 + C22975) * C50720 * C50708 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C50720 * C22730) *
                       C50807) *
                      C926 +
                  (((C22975 + C22976 + C22977) * C50720 * C22730 +
                    (C22978 + C22979 + C22980) * C50720 * C50708) *
                       C50807 -
                   ((C22736 * C1463 + C23676 + C23676 + C22729 * C1471 +
                     C22734 * C1464 + C23677 + C23677 + C50831 * C1472 +
                     C22732 * C1465 + C23678 + C23678 + C50847 * C1473) *
                        C50720 * C50708 +
                    (C23696 + C23695 + C23694) * C50720 * C22730) *
                       C50657) *
                      C50629) *
                     C50564)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C50593 * C926 -
                  ((C22972 + C22973 + C22974) * C50720 * C50708 +
                   (C22971 + C22970 + C22969) * C50720 * C22730) *
                      C50593 * C50629) *
                     C928 +
                 (((C22975 + C22976 + C22977) * C50720 * C22730 +
                   (C22978 + C22979 + C22980) * C50720 * C50708) *
                      C50593 * C50629 -
                  ((C22977 + C22976 + C22975) * C50720 * C50708 +
                   (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                    C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                    C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                       C50720 * C22730) *
                      C50593 * C926) *
                     C929 +
                 (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                    C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                    C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                       C50720 * C22730 +
                   (C23312 + C23313 + C23314) * C50720 * C50708) *
                      C50593 * C926 -
                  ((C22736 * C274 + C23303 + C23303 + C22729 * C294 +
                    C22734 * C272 + C23304 + C23304 + C50831 * C292 +
                    C22732 * C271 + C23305 + C23305 + C50847 * C291) *
                       C50720 * C50708 +
                   (C23314 + C23313 + C23312) * C50720 * C22730) *
                      C50593 * C50629) *
                     C930)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                   C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                   C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                      C50720 * C22730 +
                  (C22969 + C22970 + C22971) * C50720 * C50708) *
                     C50593 * C997 -
                 ((C22972 + C22973 + C22974) * C50720 * C50708 +
                  (C22971 + C22970 + C22969) * C50720 * C22730) *
                     C50593 * C998 +
                 ((C22974 + C22973 + C22972) * C50720 * C22730 +
                  (C23956 + C23957 + C23958) * C50720 * C50708) *
                     C50593 * C999 -
                 ((C22736 * C3403 + C23947 + C23947 + C22729 * C3409 +
                   C22734 * C3404 + C23948 + C23948 + C50831 * C3410 +
                   C22732 * C3405 + C23949 + C23949 + C50847 * C3411) *
                      C50720 * C50708 +
                  (C23958 + C23957 + C23956) * C50720 * C22730) *
                     C50593 * C1000) *
                C50558) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C50720 * C22730 +
                     (C22969 + C22970 + C22971) * C50720 * C50708) *
                        C1577 -
                    ((C23691 + C23692 + C23693) * C50720 * C50708 +
                     (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                      C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                      C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                         C50720 * C22730) *
                        C50657) *
                       C50806 +
                   (((C23693 + C23692 + C23691) * C50720 * C22730 +
                     (C24624 + C24625 + C24626) * C50720 * C50708) *
                        C50657 -
                    ((C22972 + C22973 + C22974) * C50720 * C50708 +
                     (C22971 + C22970 + C22969) * C50720 * C22730) *
                        C1577) *
                       C50629) *
                      C50798 +
                  ((((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                      C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                      C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                         C50720 * C22730 +
                     (C23694 + C23695 + C23696) * C50720 * C50708) *
                        C50657 -
                    ((C22977 + C22976 + C22975) * C50720 * C50708 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C50720 * C22730) *
                        C1577) *
                       C50806 +
                   (((C22975 + C22976 + C22977) * C50720 * C22730 +
                     (C22978 + C22979 + C22980) * C50720 * C50708) *
                        C1577 -
                    ((C22736 * C1463 + C23676 + C23676 + C22729 * C1471 +
                      C22734 * C1464 + C23677 + C23677 + C50831 * C1472 +
                      C22732 * C1465 + C23678 + C23678 + C50847 * C1473) *
                         C50720 * C50708 +
                     (C23696 + C23695 + C23694) * C50720 * C22730) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C50852 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50853 +
                   ((C22732 * C416 + C23133 + C23133 + C50847 * C436 +
                     C22734 * C417 + C23134 + C23134 + C50831 * C437 +
                     C22736 * C418 + C23135 + C23135 + C22729 * C438) *
                        C50720 * C22730 +
                    (C24120 + C24121 + C24122) * C50720 * C50708) *
                       C1993) *
                      C50806 +
                  (((C23693 + C23692 + C23691) * C50720 * C22730 +
                    (C24624 + C24625 + C24626) * C50720 * C50708) *
                       C50853 -
                   ((C22972 + C22973 + C22974) * C50720 * C50708 +
                    (C22971 + C22970 + C22969) * C50720 * C22730) *
                       C50852 -
                   ((C22736 * C3576 + C24111 + C24111 + C22729 * C3582 +
                     C22734 * C3577 + C24112 + C24112 + C50831 * C3583 +
                     C22732 * C3578 + C24113 + C24113 + C50847 * C3584) *
                        C50720 * C50708 +
                    (C24122 + C24121 + C24120) * C50720 * C22730) *
                       C1993) *
                      C50629) *
                 C50558) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C1577 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50657) *
                      C260 +
                  (((C23693 + C23692 + C23691) * C50720 * C22730 +
                    (C24624 + C24625 + C24626) * C50720 * C50708) *
                       C50657 -
                   ((C22972 + C22973 + C22974) * C50720 * C50708 +
                    (C22971 + C22970 + C22969) * C50720 * C22730) *
                       C1577) *
                      C261 +
                  (((C22974 + C22973 + C22972) * C50720 * C22730 +
                    (C23956 + C23957 + C23958) * C50720 * C50708) *
                       C1577 -
                   ((C22736 * C4089 + C24615 + C24615 + C22729 * C4095 +
                     C22734 * C4090 + C24616 + C24616 + C50831 * C4096 +
                     C22732 * C4091 + C24617 + C24617 + C50847 * C4097) *
                        C50720 * C50708 +
                    (C24626 + C24625 + C24624) * C50720 * C22730) *
                       C50657) *
                      C262) *
                 C50558) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C1577 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50657) *
                      C50577 * C928 +
                  (((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                        C50720 * C22730 +
                    (C23694 + C23695 + C23696) * C50720 * C50708) *
                       C50657 -
                   ((C22977 + C22976 + C22975) * C50720 * C50708 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C50720 * C22730) *
                       C1577) *
                      C50577 * C929 +
                  (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                     C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                     C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                        C50720 * C22730 +
                    (C23312 + C23313 + C23314) * C50720 * C50708) *
                       C1577 -
                   ((C22736 * C809 + C23461 + C23461 + C22729 * C819 +
                     C22734 * C808 + C23462 + C23462 + C50831 * C818 +
                     C22732 * C807 + C23463 + C23463 + C50847 * C817) *
                        C50720 * C50708 +
                    (C22736 * C420 + C23464 + C23464 + C22729 * C440 +
                     C22734 * C412 + C23465 + C23465 + C50831 * C432 +
                     C22732 * C413 + C23466 + C23466 + C50847 * C433) *
                        C50720 * C22730) *
                       C50657) *
                      C50577 * C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                    C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                    C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                       C50720 * C22730 +
                   (C22969 + C22970 + C22971) * C50720 * C50708) *
                      C1743 -
                  ((C23691 + C23692 + C23693) * C50720 * C50708 +
                   (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                    C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                    C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                       C50720 * C22730) *
                      C1744 +
                  ((C22732 * C416 + C23133 + C23133 + C50847 * C436 +
                    C22734 * C417 + C23134 + C23134 + C50831 * C437 +
                    C22736 * C418 + C23135 + C23135 + C22729 * C438) *
                       C50720 * C22730 +
                   (C24120 + C24121 + C24122) * C50720 * C50708) *
                      C1745 -
                  ((C22736 * C4506 + C25017 + C25017 + C22729 * C4512 +
                    C22734 * C4507 + C25018 + C25018 + C50831 * C4513 +
                    C22732 * C4508 + C25019 + C25019 + C50847 * C4514) *
                       C50720 * C50708 +
                   (C22736 * C1748 + C25020 + C25020 + C22729 * C1756 +
                    C22734 * C1749 + C25021 + C25021 + C50831 * C1757 +
                    C22732 * C1750 + C25022 + C25022 + C50847 * C1758) *
                       C50720 * C22730) *
                      C1746) *
                 C50577 * C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C50852 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50853 +
                   ((C22732 * C416 + C23133 + C23133 + C50847 * C436 +
                     C22734 * C417 + C23134 + C23134 + C50831 * C437 +
                     C22736 * C418 + C23135 + C23135 + C22729 * C438) *
                        C50720 * C22730 +
                    (C24120 + C24121 + C24122) * C50720 * C50708) *
                       C1993) *
                      C50577 * C50798 +
                  (((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                        C50720 * C22730 +
                    (C23694 + C23695 + C23696) * C50720 * C50708) *
                       C50853 -
                   ((C22977 + C22976 + C22975) * C50720 * C50708 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C50720 * C22730) *
                       C50852 -
                   ((C22736 * C1116 + C23145 + C23145 + C22729 * C1124 +
                     C22734 * C1117 + C23146 + C23146 + C50831 * C1125 +
                     C22732 * C1118 + C23147 + C23147 + C50847 * C1126) *
                        C50720 * C50708 +
                    (C22736 * C419 + C23148 + C23148 + C22729 * C439 +
                     C22734 * C418 + C23149 + C23149 + C50831 * C438 +
                     C22732 * C417 + C23150 + C23150 + C50847 * C437) *
                        C50720 * C22730) *
                       C1993) *
                      C50577 * C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C1577 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50657) *
                      C50577 * C928 +
                  (((C22732 * C414 + C23139 + C23139 + C50847 * C434 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22736 * C412 + C23141 + C23141 + C22729 * C432) *
                        C50720 * C22730 +
                    (C23694 + C23695 + C23696) * C50720 * C50708) *
                       C50657 -
                   ((C22977 + C22976 + C22975) * C50720 * C50708 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C50720 * C22730) *
                       C1577) *
                      C50577 * C929 +
                  (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                     C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                     C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                        C50720 * C22730 +
                    (C23312 + C23313 + C23314) * C50720 * C50708) *
                       C1577 -
                   ((C22736 * C809 + C23461 + C23461 + C22729 * C819 +
                     C22734 * C808 + C23462 + C23462 + C50831 * C818 +
                     C22732 * C807 + C23463 + C23463 + C50847 * C817) *
                        C50720 * C50708 +
                    (C22736 * C420 + C23464 + C23464 + C22729 * C440 +
                     C22734 * C412 + C23465 + C23465 + C50831 * C432 +
                     C22732 * C413 + C23466 + C23466 + C50847 * C433) *
                        C50720 * C22730) *
                       C50657) *
                      C50577 * C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C50720 * C22730 +
                    (C22969 + C22970 + C22971) * C50720 * C50708) *
                       C1577 -
                   ((C23691 + C23692 + C23693) * C50720 * C50708 +
                    (C22736 * C413 + C23130 + C23130 + C22729 * C433 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22732 * C415 + C23132 + C23132 + C50847 * C435) *
                        C50720 * C22730) *
                       C50657) *
                      C260 +
                  (((C23693 + C23692 + C23691) * C50720 * C22730 +
                    (C24624 + C24625 + C24626) * C50720 * C50708) *
                       C50657 -
                   ((C22972 + C22973 + C22974) * C50720 * C50708 +
                    (C22971 + C22970 + C22969) * C50720 * C22730) *
                       C1577) *
                      C261 +
                  (((C22974 + C22973 + C22972) * C50720 * C22730 +
                    (C23956 + C23957 + C23958) * C50720 * C50708) *
                       C1577 -
                   ((C22736 * C4089 + C24615 + C24615 + C22729 * C4095 +
                     C22734 * C4090 + C24616 + C24616 + C50831 * C4096 +
                     C22732 * C4091 + C24617 + C24617 + C50847 * C4097) *
                        C50720 * C50708 +
                    (C24626 + C24625 + C24624) * C50720 * C22730) *
                       C50657) *
                      C262) *
                 C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50593 * C50806 -
                   ((C25846 + C25847) * C50720 * C25610 +
                    (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50593 * C50629) *
                      C50848 +
                  (((C25848 + C25849) * C50720 * C50854 +
                    (C25850 + C25851) * C50720 * C50843 +
                    (C25852 + C25853) * C50720 * C25610) *
                       C50593 * C50629 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50593 * C50806) *
                      C50849 +
                  (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                     C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                        C50720 * C50854 +
                    (C26192 + C26193) * C50720 * C50843 +
                    (C26194 + C26195) * C50720 * C25610) *
                       C50593 * C50806 -
                   ((C25613 * C1002 + C26182 + C26182 + C50532 * C1010 +
                     C25611 * C1003 + C26183 + C26183 + C25606 * C1011) *
                        C50720 * C25610 +
                    (C26195 + C26194) * C50720 * C50843 +
                    (C26193 + C26192) * C50720 * C50854) *
                       C50593 * C50629) *
                      C560)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50720 * C50854 +
                     (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                        C50807 -
                    ((C26578 + C26579) * C50720 * C25610 +
                     (C26580 + C26581) * C50720 * C50843 +
                     (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                      C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                         C50720 * C50854) *
                        C50657) *
                       C50806 +
                   (((C26581 + C26580) * C50720 * C50854 +
                     (C26579 + C26578) * C50720 * C50843 +
                     (C25611 * C4091 + C26550 + C26550 + C25606 * C4097 +
                      C25613 * C4090 + C26551 + C26551 + C50532 * C4096) *
                         C50720 * C25610) *
                        C50657 -
                    ((C25846 + C25847) * C50720 * C25610 +
                     (C25845 + C25844) * C50720 * C50843 +
                     (C25843 + C25842) * C50720 * C50854) *
                        C50807) *
                       C50629) *
                      C263 +
                  ((((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                      C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                         C50720 * C50854 +
                     (C26582 + C26583) * C50720 * C50843 +
                     (C26584 + C26585) * C50720 * C25610) *
                        C50657 -
                    (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                     (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                      C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                         C50720 * C50854) *
                        C50807) *
                       C50806 +
                   (((C25848 + C25849) * C50720 * C50854 +
                     (C25850 + C25851) * C50720 * C50843 +
                     (C25852 + C25853) * C50720 * C25610) *
                        C50807 -
                    ((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
                      C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                         C50720 * C25610 +
                     (C26585 + C26584) * C50720 * C50843 +
                     (C26583 + C26582) * C50720 * C50854) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50593 * C260 -
                   ((C25846 + C25847) * C50720 * C25610 +
                    (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50593 * C261 +
                   (C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                    (C25611 * C3405 + C25800 + C25800 + C25606 * C3411 +
                     C25613 * C3404 + C25801 + C25801 + C50532 * C3410) *
                        C50720 * C25610) *
                       C50593 * C262) *
                      C263 +
                  (((C25848 + C25849) * C50720 * C50854 +
                    (C25850 + C25851) * C50720 * C50843 +
                    (C25852 + C25853) * C50720 * C25610) *
                       C50593 * C261 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50593 * C260 -
                   ((C25613 * C3403 + C25816 + C25816 + C50532 * C3409 +
                     C25611 * C3404 + C25817 + C25817 + C25606 * C3410) *
                        C50720 * C25610 +
                    (C25853 + C25852) * C50720 * C50843 + C25857 * C50854) *
                       C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                    C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                       C50720 * C50854 +
                   (C25611 * C268 + C25618 + C25618 + C25606 * C288 +
                    C25613 * C267 + C25619 + C25619 + C50532 * C287) *
                       C50720 * C50843 +
                   (C25611 * C269 + C25620 + C25620 + C25606 * C289 +
                    C25613 * C270 + C25621 + C25621 + C50532 * C290) *
                       C50720 * C25610) *
                      C50593 * C50577 * C113 -
                  ((C25613 * C271 + C25622 + C25622 + C50532 * C291 +
                    C25611 * C270 + C25623 + C25623 + C25606 * C290) *
                       C50720 * C25610 +
                   (C25613 * C266 + C25624 + C25624 + C50532 * C286 +
                    C25611 * C267 + C25625 + C25625 + C25606 * C287) *
                       C50720 * C50843 +
                   (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                    C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                       C50720 * C50854) *
                      C50593 * C50577 * C114 +
                  ((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                    C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                       C50720 * C50854 +
                   (C25611 * C266 + C25630 + C25630 + C25606 * C286 +
                    C25613 * C265 + C25631 + C25631 + C50532 * C285) *
                       C50720 * C50843 +
                   (C25611 * C271 + C25632 + C25632 + C25606 * C291 +
                    C25613 * C272 + C25633 + C25633 + C50532 * C292) *
                       C50720 * C25610) *
                      C50593 * C50577 * C115 -
                  ((C25613 * C274 + C25634 + C25634 + C50532 * C294 +
                    C25611 * C272 + C25635 + C25635 + C25606 * C292) *
                       C50720 * C25610 +
                   (C25613 * C273 + C25636 + C25636 + C50532 * C293 +
                    C25611 * C265 + C25637 + C25637 + C25606 * C285) *
                       C50720 * C50843 +
                   (C25613 * C129 + C25638 + C25638 + C50532 * C143 +
                    C25611 * C128 + C25639 + C25639 + C25606 * C142) *
                       C50720 * C50854) *
                      C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C409 -
                   ((C25613 * C1465 + C26004 + C26004 + C50532 * C1473 +
                     C25611 * C1466 + C26005 + C26005 + C25606 * C1474) *
                        C50720 * C25610 +
                    (C25613 * C806 + C26006 + C26006 + C50532 * C816 +
                     C25611 * C805 + C26007 + C26007 + C25606 * C815) *
                        C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C410 +
                   ((C25611 * C416 + C26010 + C26010 + C25606 * C436 +
                     C25613 * C417 + C26011 + C26011 + C50532 * C437) *
                        C50720 * C50854 +
                    (C25611 * C1119 + C26012 + C26012 + C25606 * C1127 +
                     C25613 * C1118 + C26013 + C26013 + C50532 * C1126) *
                        C50720 * C50843 +
                    (C25611 * C3578 + C26014 + C26014 + C25606 * C3584 +
                     C25613 * C3577 + C26015 + C26015 + C50532 * C3583) *
                        C50720 * C25610) *
                       C411) *
                      C50577 * C263 +
                  (((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                     C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                        C50720 * C50854 +
                    (C25611 * C806 + C26018 + C26018 + C25606 * C816 +
                     C25613 * C807 + C26019 + C26019 + C50532 * C817) *
                        C50720 * C50843 +
                    (C25611 * C1465 + C26020 + C26020 + C25606 * C1473 +
                     C25613 * C1464 + C26021 + C26021 + C50532 * C1472) *
                        C50720 * C25610) *
                       C410 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C409 -
                   ((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
                     C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                        C50720 * C25610 +
                    (C25613 * C1117 + C26024 + C26024 + C50532 * C1125 +
                     C25611 * C1118 + C26025 + C26025 + C25606 * C1126) *
                        C50720 * C50843 +
                    (C25613 * C418 + C26026 + C26026 + C50532 * C438 +
                     C25611 * C417 + C26027 + C26027 + C25606 * C437) *
                        C50720 * C50854) *
                       C411) *
                      C50577 * C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50807 -
                   ((C25613 * C1465 + C26004 + C26004 + C50532 * C1473 +
                     C25611 * C1466 + C26005 + C26005 + C25606 * C1474) *
                        C50720 * C25610 +
                    (C25613 * C806 + C26006 + C26006 + C50532 * C816 +
                     C25611 * C805 + C26007 + C26007 + C25606 * C815) *
                        C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50657) *
                      C50577 * C50848 +
                  (((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                     C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                        C50720 * C50854 +
                    (C25611 * C806 + C26018 + C26018 + C25606 * C816 +
                     C25613 * C807 + C26019 + C26019 + C50532 * C817) *
                        C50720 * C50843 +
                    (C25611 * C1465 + C26020 + C26020 + C25606 * C1473 +
                     C25613 * C1464 + C26021 + C26021 + C50532 * C1472) *
                        C50720 * C25610) *
                       C50657 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50807) *
                      C50577 * C50849 +
                  (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                     C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                        C50720 * C50854 +
                    (C26192 + C26193) * C50720 * C50843 +
                    (C26194 + C26195) * C50720 * C25610) *
                       C50807 -
                   ((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
                     C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                        C50720 * C25610 +
                    (C25613 * C808 + C26344 + C26344 + C50532 * C818 +
                     C25611 * C807 + C26345 + C26345 + C25606 * C817) *
                        C50720 * C50843 +
                    (C25613 * C412 + C26346 + C26346 + C50532 * C432 +
                     C25611 * C413 + C26347 + C26347 + C25606 * C433) *
                        C50720 * C50854) *
                       C50657) *
                      C50577 * C560)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                    C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                       C50720 * C50854 +
                   (C25611 * C268 + C25618 + C25618 + C25606 * C288 +
                    C25613 * C267 + C25619 + C25619 + C50532 * C287) *
                       C50720 * C50843 +
                   (C25611 * C269 + C25620 + C25620 + C25606 * C289 +
                    C25613 * C270 + C25621 + C25621 + C50532 * C290) *
                       C50720 * C25610) *
                      C50593 * C50577 * C113 -
                  ((C25613 * C271 + C25622 + C25622 + C50532 * C291 +
                    C25611 * C270 + C25623 + C25623 + C25606 * C290) *
                       C50720 * C25610 +
                   (C25613 * C266 + C25624 + C25624 + C50532 * C286 +
                    C25611 * C267 + C25625 + C25625 + C25606 * C287) *
                       C50720 * C50843 +
                   (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                    C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                       C50720 * C50854) *
                      C50593 * C50577 * C114 +
                  ((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                    C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                       C50720 * C50854 +
                   (C25611 * C266 + C25630 + C25630 + C25606 * C286 +
                    C25613 * C265 + C25631 + C25631 + C50532 * C285) *
                       C50720 * C50843 +
                   (C25611 * C271 + C25632 + C25632 + C25606 * C291 +
                    C25613 * C272 + C25633 + C25633 + C50532 * C292) *
                       C50720 * C25610) *
                      C50593 * C50577 * C115 -
                  ((C25613 * C274 + C25634 + C25634 + C50532 * C294 +
                    C25611 * C272 + C25635 + C25635 + C25606 * C292) *
                       C50720 * C25610 +
                   (C25613 * C273 + C25636 + C25636 + C50532 * C293 +
                    C25611 * C265 + C25637 + C25637 + C25606 * C285) *
                       C50720 * C50843 +
                   (C25613 * C129 + C25638 + C25638 + C50532 * C143 +
                    C25611 * C128 + C25639 + C25639 + C25606 * C142) *
                       C50720 * C50854) *
                      C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50593 * C260 -
                   ((C25846 + C25847) * C50720 * C25610 +
                    (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50593 * C261 +
                   (C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                    (C25611 * C3405 + C25800 + C25800 + C25606 * C3411 +
                     C25613 * C3404 + C25801 + C25801 + C50532 * C3410) *
                        C50720 * C25610) *
                       C50593 * C262) *
                      C263 +
                  (((C25848 + C25849) * C50720 * C50854 +
                    (C25850 + C25851) * C50720 * C50843 +
                    (C25852 + C25853) * C50720 * C25610) *
                       C50593 * C261 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50593 * C260 -
                   ((C25613 * C3403 + C25816 + C25816 + C50532 * C3409 +
                     C25611 * C3404 + C25817 + C25817 + C25606 * C3410) *
                        C50720 * C25610 +
                    (C25853 + C25852) * C50720 * C50843 + C25857 * C50854) *
                       C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50593 * C50850 -
                   (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50593 * C50851 +
                   (C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                    (C26842 + C26843) * C50720 * C25610) *
                       C50593 * C1232) *
                      C50798 +
                  (((C25848 + C25849) * C50720 * C50854 +
                    (C25850 + C25851) * C50720 * C50843 +
                    (C25852 + C25853) * C50720 * C25610) *
                       C50593 * C50851 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50593 * C50850 -
                   ((C25613 * C3403 + C25816 + C25816 + C50532 * C3409 +
                     C25611 * C3404 + C25817 + C25817 + C25606 * C3410) *
                        C50720 * C25610 +
                    (C25853 + C25852) * C50720 * C50843 + C25857 * C50854) *
                       C50593 * C1232) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50807 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50657) *
                      C50850 +
                  (((C26581 + C26580) * C50720 * C50854 +
                    (C26579 + C26578) * C50720 * C50843 +
                    (C27510 + C27511) * C50720 * C25610) *
                       C50657 -
                   (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50807) *
                      C50851 +
                  ((C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                    (C26842 + C26843) * C50720 * C25610) *
                       C50807 -
                   ((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
                     C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                        C50720 * C25610 +
                    (C27511 + C27510) * C50720 * C50843 + C27505 * C50854) *
                       C50657) *
                      C1232) *
                 C50558) /
                (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                    C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                       C50720 * C50854 +
                   (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                      C50593 * C997 -
                  (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                   (C25843 + C25842) * C50720 * C50854) *
                      C50593 * C998 +
                  (C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                   (C26842 + C26843) * C50720 * C25610) *
                      C50593 * C999 -
                  ((C25613 * C9069 + C26835 + C26835 + C50532 * C9073 +
                    C25611 * C9070 + C26836 + C26836 + C25606 * C9074) *
                       C50720 * C25610 +
                   (C26843 + C26842) * C50720 * C50843 + C26837 * C50854) *
                      C50593 * C1000) *
                 C50558) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50593 * C926 -
                   ((C25846 + C25847) * C50720 * C25610 +
                    (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50593 * C50629) *
                      C928 +
                  (((C25848 + C25849) * C50720 * C50854 +
                    (C25850 + C25851) * C50720 * C50843 +
                    (C25852 + C25853) * C50720 * C25610) *
                       C50593 * C50629 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50593 * C926) *
                      C929 +
                  (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                     C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                        C50720 * C50854 +
                    (C26192 + C26193) * C50720 * C50843 +
                    (C26194 + C26195) * C50720 * C25610) *
                       C50593 * C926 -
                   ((C25613 * C1002 + C26182 + C26182 + C50532 * C1010 +
                     C25611 * C1003 + C26183 + C26183 + C25606 * C1011) *
                        C50720 * C25610 +
                    (C26195 + C26194) * C50720 * C50843 +
                    (C26193 + C26192) * C50720 * C50854) *
                       C50593 * C50629) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C409 -
                   ((C26578 + C26579) * C50720 * C25610 +
                    (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C410 +
                   ((C25611 * C416 + C26010 + C26010 + C25606 * C436 +
                     C25613 * C417 + C26011 + C26011 + C50532 * C437) *
                        C50720 * C50854 +
                    (C27008 + C27009) * C50720 * C50843 +
                    (C27010 + C27011) * C50720 * C25610) *
                       C411) *
                      C926 +
                  (((C26581 + C26580) * C50720 * C50854 +
                    (C26579 + C26578) * C50720 * C50843 +
                    (C25611 * C4091 + C26550 + C26550 + C25606 * C4097 +
                     C25613 * C4090 + C26551 + C26551 + C50532 * C4096) *
                        C50720 * C25610) *
                       C410 -
                   (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C409 -
                   ((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
                     C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                        C50720 * C25610 +
                    (C27011 + C27010) * C50720 * C50843 +
                    (C27009 + C27008) * C50720 * C50854) *
                       C411) *
                      C50629) *
                 C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50720 * C50854 +
                     (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                        C50807 -
                    ((C26578 + C26579) * C50720 * C25610 +
                     (C26580 + C26581) * C50720 * C50843 +
                     (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                      C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                         C50720 * C50854) *
                        C50657) *
                       C926 +
                   (((C26581 + C26580) * C50720 * C50854 +
                     (C26579 + C26578) * C50720 * C50843 +
                     (C25611 * C4091 + C26550 + C26550 + C25606 * C4097 +
                      C25613 * C4090 + C26551 + C26551 + C50532 * C4096) *
                         C50720 * C25610) *
                        C50657 -
                    (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                     (C25843 + C25842) * C50720 * C50854) *
                        C50807) *
                       C50629) *
                      C50798 +
                  ((((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                      C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                         C50720 * C50854 +
                     (C26582 + C26583) * C50720 * C50843 +
                     (C26584 + C26585) * C50720 * C25610) *
                        C50657 -
                    (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                     (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                      C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                         C50720 * C50854) *
                        C50807) *
                       C926 +
                   (((C25848 + C25849) * C50720 * C50854 +
                     (C25850 + C25851) * C50720 * C50843 +
                     (C25852 + C25853) * C50720 * C25610) *
                        C50807 -
                    ((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
                      C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                         C50720 * C25610 +
                     (C26585 + C26584) * C50720 * C50843 +
                     (C26583 + C26582) * C50720 * C50854) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50593 * C926 -
                   ((C25846 + C25847) * C50720 * C25610 +
                    (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50593 * C50629) *
                      C928 +
                  (((C25848 + C25849) * C50720 * C50854 +
                    (C25850 + C25851) * C50720 * C50843 +
                    (C25852 + C25853) * C50720 * C25610) *
                       C50593 * C50629 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50593 * C926) *
                      C929 +
                  (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                     C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                        C50720 * C50854 +
                    (C26192 + C26193) * C50720 * C50843 +
                    (C26194 + C26195) * C50720 * C25610) *
                       C50593 * C926 -
                   ((C25613 * C1002 + C26182 + C26182 + C50532 * C1010 +
                     C25611 * C1003 + C26183 + C26183 + C25606 * C1011) *
                        C50720 * C25610 +
                    (C26195 + C26194) * C50720 * C50843 +
                    (C26193 + C26192) * C50720 * C50854) *
                       C50593 * C50629) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                    C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                       C50720 * C50854 +
                   (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                      C50593 * C997 -
                  (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                   (C25843 + C25842) * C50720 * C50854) *
                      C50593 * C998 +
                  (C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                   (C26842 + C26843) * C50720 * C25610) *
                      C50593 * C999 -
                  ((C25613 * C9069 + C26835 + C26835 + C50532 * C9073 +
                    C25611 * C9070 + C26836 + C26836 + C25606 * C9074) *
                       C50720 * C25610 +
                   (C26843 + C26842) * C50720 * C50843 + C26837 * C50854) *
                      C50593 * C1000) *
                 C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50720 * C50854 +
                     (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                        C1577 -
                    (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                     (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                      C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                         C50720 * C50854) *
                        C50657) *
                       C50806 +
                   (((C26581 + C26580) * C50720 * C50854 +
                     (C26579 + C26578) * C50720 * C50843 +
                     (C27510 + C27511) * C50720 * C25610) *
                        C50657 -
                    (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                     (C25843 + C25842) * C50720 * C50854) *
                        C1577) *
                       C50629) *
                      C50798 +
                  ((((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                      C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                         C50720 * C50854 +
                     (C26582 + C26583) * C50720 * C50843 +
                     (C26584 + C26585) * C50720 * C25610) *
                        C50657 -
                    (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                     (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                      C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                         C50720 * C50854) *
                        C1577) *
                       C50806 +
                   (((C25848 + C25849) * C50720 * C50854 +
                     (C25850 + C25851) * C50720 * C50843 +
                     (C25852 + C25853) * C50720 * C25610) *
                        C1577 -
                    ((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
                      C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                         C50720 * C25610 +
                     (C26585 + C26584) * C50720 * C50843 +
                     (C26583 + C26582) * C50720 * C50854) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50852 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50853 +
                   ((C25611 * C416 + C26010 + C26010 + C25606 * C436 +
                     C25613 * C417 + C26011 + C26011 + C50532 * C437) *
                        C50720 * C50854 +
                    (C27008 + C27009) * C50720 * C50843 +
                    (C27010 + C27011) * C50720 * C25610) *
                       C1993) *
                      C50806 +
                  (((C26581 + C26580) * C50720 * C50854 +
                    (C26579 + C26578) * C50720 * C50843 +
                    (C27510 + C27511) * C50720 * C25610) *
                       C50853 -
                   (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C50852 -
                   ((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
                     C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                        C50720 * C25610 +
                    (C27011 + C27010) * C50720 * C50843 +
                    (C27009 + C27008) * C50720 * C50854) *
                       C1993) *
                      C50629) *
                 C50558) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C1577 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50657) *
                      C260 +
                  (((C26581 + C26580) * C50720 * C50854 +
                    (C26579 + C26578) * C50720 * C50843 +
                    (C27510 + C27511) * C50720 * C25610) *
                       C50657 -
                   (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C1577) *
                      C261 +
                  ((C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                    (C26842 + C26843) * C50720 * C25610) *
                       C1577 -
                   ((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
                     C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                        C50720 * C25610 +
                    (C27511 + C27510) * C50720 * C50843 + C27505 * C50854) *
                       C50657) *
                      C262) *
                 C50558) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C1577 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50657) *
                      C50577 * C928 +
                  (((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                     C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                        C50720 * C50854 +
                    (C26582 + C26583) * C50720 * C50843 +
                    (C26584 + C26585) * C50720 * C25610) *
                       C50657 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C1577) *
                      C50577 * C929 +
                  (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                     C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                        C50720 * C50854 +
                    (C26192 + C26193) * C50720 * C50843 +
                    (C26194 + C26195) * C50720 * C25610) *
                       C1577 -
                   ((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
                     C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                        C50720 * C25610 +
                    (C25613 * C808 + C26344 + C26344 + C50532 * C818 +
                     C25611 * C807 + C26345 + C26345 + C25606 * C817) *
                        C50720 * C50843 +
                    (C25613 * C412 + C26346 + C26346 + C50532 * C432 +
                     C25611 * C413 + C26347 + C26347 + C25606 * C433) *
                        C50720 * C50854) *
                       C50657) *
                      C50577 * C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                    C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                       C50720 * C50854 +
                   (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                      C1743 -
                  (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                   (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                    C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                       C50720 * C50854) *
                      C1744 +
                  ((C25611 * C416 + C26010 + C26010 + C25606 * C436 +
                    C25613 * C417 + C26011 + C26011 + C50532 * C437) *
                       C50720 * C50854 +
                   (C27008 + C27009) * C50720 * C50843 +
                   (C27010 + C27011) * C50720 * C25610) *
                      C1745 -
                  ((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
                    C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                       C50720 * C25610 +
                   (C25613 * C4507 + C27904 + C27904 + C50532 * C4513 +
                    C25611 * C4508 + C27905 + C27905 + C25606 * C4514) *
                       C50720 * C50843 +
                   (C25613 * C1749 + C27906 + C27906 + C50532 * C1757 +
                    C25611 * C1750 + C27907 + C27907 + C25606 * C1758) *
                       C50720 * C50854) *
                      C1746) *
                 C50577 * C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C50852 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50853 +
                   ((C25611 * C416 + C26010 + C26010 + C25606 * C436 +
                     C25613 * C417 + C26011 + C26011 + C50532 * C437) *
                        C50720 * C50854 +
                    (C27008 + C27009) * C50720 * C50843 +
                    (C27010 + C27011) * C50720 * C25610) *
                       C1993) *
                      C50577 * C50798 +
                  (((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                     C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                        C50720 * C50854 +
                    (C26582 + C26583) * C50720 * C50843 +
                    (C26584 + C26585) * C50720 * C25610) *
                       C50853 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C50852 -
                   ((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
                     C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                        C50720 * C25610 +
                    (C25613 * C1117 + C26024 + C26024 + C50532 * C1125 +
                     C25611 * C1118 + C26025 + C26025 + C25606 * C1126) *
                        C50720 * C50843 +
                    (C25613 * C418 + C26026 + C26026 + C50532 * C438 +
                     C25611 * C417 + C26027 + C26027 + C25606 * C437) *
                        C50720 * C50854) *
                       C1993) *
                      C50577 * C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C1577 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50657) *
                      C50577 * C928 +
                  (((C25611 * C414 + C26016 + C26016 + C25606 * C434 +
                     C25613 * C413 + C26017 + C26017 + C50532 * C433) *
                        C50720 * C50854 +
                    (C26582 + C26583) * C50720 * C50843 +
                    (C26584 + C26585) * C50720 * C25610) *
                       C50657 -
                   (C25857 * C25610 + (C25849 + C25848) * C50720 * C50843 +
                    (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                     C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                        C50720 * C50854) *
                       C1577) *
                      C50577 * C929 +
                  (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                     C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                        C50720 * C50854 +
                    (C26192 + C26193) * C50720 * C50843 +
                    (C26194 + C26195) * C50720 * C25610) *
                       C1577 -
                   ((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
                     C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                        C50720 * C25610 +
                    (C25613 * C808 + C26344 + C26344 + C50532 * C818 +
                     C25611 * C807 + C26345 + C26345 + C25606 * C817) *
                        C50720 * C50843 +
                    (C25613 * C412 + C26346 + C26346 + C50532 * C432 +
                     C25611 * C413 + C26347 + C26347 + C25606 * C433) *
                        C50720 * C50854) *
                       C50657) *
                      C50577 * C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                     C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                        C50720 * C50854 +
                    (C25842 + C25843) * C50720 * C50843 + C25856 * C25610) *
                       C1577 -
                   (C27505 * C25610 + (C26580 + C26581) * C50720 * C50843 +
                    (C25613 * C414 + C26008 + C26008 + C50532 * C434 +
                     C25611 * C415 + C26009 + C26009 + C25606 * C435) *
                        C50720 * C50854) *
                       C50657) *
                      C260 +
                  (((C26581 + C26580) * C50720 * C50854 +
                    (C26579 + C26578) * C50720 * C50843 +
                    (C27510 + C27511) * C50720 * C25610) *
                       C50657 -
                   (C26837 * C25610 + (C25845 + C25844) * C50720 * C50843 +
                    (C25843 + C25842) * C50720 * C50854) *
                       C1577) *
                      C261 +
                  ((C25856 * C50854 + (C25847 + C25846) * C50720 * C50843 +
                    (C26842 + C26843) * C50720 * C25610) *
                       C1577 -
                   ((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
                     C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                        C50720 * C25610 +
                    (C27511 + C27510) * C50720 * C50843 + C27505 * C50854) *
                       C50657) *
                      C262) *
                 C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) *
                C50708) *
               C50593 * C50806 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            ((C26580 + C26581) * C50732 + (C25843 + C25842) * C50818) *
                C22730) *
               C50593 * C50629) *
              C50848 +
          ((((C25848 + C25849) * C50818 + (C26582 + C26583) * C50732) * C22730 +
            ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C50629 -
           (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50593 * C50806) *
              C50849 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C50818 +
             (C25611 * C413 + C26347 + C26347 + C25606 * C433 + C25613 * C412 +
              C26346 + C26346 + C50532 * C432) *
                 C50732) *
                C22730 +
            ((C26192 + C26193) * C50818 + (C29172 + C29173) * C50732) *
                C50708) *
               C50593 * C50806 -
           (((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
              C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                 C50732 +
             (C26195 + C26194) * C50818) *
                C50708 +
            ((C29173 + C29172) * C50732 + (C26193 + C26192) * C50818) *
                C22730) *
               C50593 * C50629) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                       C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                          C50818 +
                      (C28960 + C28961) * C50732) *
                         C22730 +
                     ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
                        C50807 -
                    (((C27009 + C27008) * C50732 + C29641 * C50818) * C50708 +
                     ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                         C22730) *
                        C50657) *
                       C50806 +
                   (((C29640 * C50818 + (C27008 + C27009) * C50732) * C22730 +
                     ((C26579 + C26578) * C50818 + (C27010 + C27011) * C50732) *
                         C50708) *
                        C50657 -
                    ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
                     (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
                        C50807) *
                       C50629) *
                      C263 +
                  (((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) *
                         C22730 +
                     (C29642 * C50818 + (C28968 + C28969) * C50732) * C50708) *
                        C50657 -
                    ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
                     ((C28965 + C28964) * C50732 +
                      (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                       C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                          C50818) *
                         C22730) *
                        C50807) *
                       C50806 +
                   ((((C25848 + C25849) * C50818 + C29642 * C50732) * C22730 +
                     ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                         C50708) *
                        C50807 -
                    (((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
                       C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                          C50732 +
                      (C26585 + C26584) * C50818) *
                         C50708 +
                     ((C28969 + C28968) * C50732 + C29643 * C50818) * C22730) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C25611 * C415 + C26009 + C26009 + C25606 * C435 + C25613 * C414 +
              C26008 + C26008 + C50532 * C434) *
                 C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) *
                C50708) *
               C50593 * C260 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            ((C26580 + C26581) * C50732 + (C25843 + C25842) * C50818) *
                C22730) *
               C50593 * C261 +
           ((C25854 * C50818 + (C26579 + C26578) * C50732) * C22730 +
            ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) *
                C50708) *
               C50593 * C262) *
              C263 +
          ((((C25848 + C25849) * C50818 + (C26582 + C26583) * C50732) * C22730 +
            ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C261 -
           (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C25613 * C413 + C26017 + C26017 + C50532 * C433 + C25611 * C414 +
              C26016 + C26016 + C25606 * C434) *
                 C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50593 * C260 -
           (((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
              C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                 C50732 +
             (C25853 + C25852) * C50818) *
                C50708 +
            ((C26585 + C26584) * C50732 + C25855 * C50818) * C22730) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50818 +
            (C25611 * C415 + C26009 + C26009 + C25606 * C435 + C25613 * C414 +
             C26008 + C26008 + C50532 * C434) *
                C50732) *
               C22730 +
           ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) * C50708) *
              C50593 * C50577 * C113 -
          (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
           ((C25613 * C413 + C26017 + C26017 + C50532 * C433 + C25611 * C414 +
             C26016 + C26016 + C25606 * C434) *
                C50732 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50818) *
               C22730) *
              C50593 * C50577 * C114 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50818 +
            (C25611 * C413 + C26347 + C26347 + C25606 * C433 + C25613 * C412 +
             C26346 + C26346 + C50532 * C432) *
                C50732) *
               C22730 +
           ((C26192 + C26193) * C50818 +
            (C25611 * C807 + C26345 + C26345 + C25606 * C817 + C25613 * C808 +
             C26344 + C26344 + C50532 * C818) *
                C50732) *
               C50708) *
              C50593 * C50577 * C115 -
          (((C25613 * C809 + C28524 + C28524 + C50532 * C819 + C25611 * C808 +
             C28525 + C28525 + C25606 * C818) *
                C50732 +
            (C25613 * C273 + C25636 + C25636 + C50532 * C293 + C25611 * C265 +
             C25637 + C25637 + C25606 * C285) *
                C50818) *
               C50708 +
           ((C25613 * C420 + C28526 + C28526 + C50532 * C440 + C25611 * C412 +
             C28527 + C28527 + C25606 * C432) *
                C50732 +
            (C25613 * C129 + C25638 + C25638 + C50532 * C143 + C25611 * C128 +
             C25639 + C25639 + C25606 * C142) *
                C50818) *
               C22730) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) *
                C50708) *
               C409 -
           (((C27009 + C27008) * C50732 + (C26580 + C26581) * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C410 +
           (((C28963 + C28962) * C50818 +
             (C25611 * C1750 + C27907 + C27907 + C25606 * C1758 +
              C25613 * C1749 + C27906 + C27906 + C50532 * C1757) *
                 C50732) *
                C22730 +
            ((C27008 + C27009) * C50818 +
             (C25611 * C4508 + C27905 + C27905 + C25606 * C4514 +
              C25613 * C4507 + C27904 + C27904 + C50532 * C4513) *
                 C50732) *
                C50708) *
               C411) *
              C50577 * C263 +
          ((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) * C22730 +
            ((C26582 + C26583) * C50818 + (C28968 + C28969) * C50732) *
                C50708) *
               C410 -
           (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C409 -
           (((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C50732 +
             (C28969 + C28968) * C50818) *
                C50708 +
            ((C25613 * C1748 + C28938 + C28938 + C50532 * C1756 +
              C25611 * C1749 + C28939 + C28939 + C25606 * C1757) *
                 C50732 +
             (C28967 + C28966) * C50818) *
                C22730) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) *
                C50708) *
               C50807 -
           (((C27009 + C27008) * C50732 + (C26580 + C26581) * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50657) *
              C50577 * C50848 +
          ((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) * C22730 +
            ((C26582 + C26583) * C50818 + (C28968 + C28969) * C50732) *
                C50708) *
               C50657 -
           (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50807) *
              C50577 * C50849 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C50818 +
             (C29380 + C29381) * C50732) *
                C22730 +
            ((C26192 + C26193) * C50818 + (C29172 + C29173) * C50732) *
                C50708) *
               C50807 -
           (((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
              C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                 C50732 +
             (C29173 + C29172) * C50818) *
                C50708 +
            ((C25613 * C419 + C29374 + C29374 + C50532 * C439 + C25611 * C418 +
              C29375 + C29375 + C25606 * C438) *
                 C50732 +
             (C29381 + C29380) * C50818) *
                C22730) *
               C50657) *
              C50577 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50818 +
            (C25611 * C415 + C26009 + C26009 + C25606 * C435 + C25613 * C414 +
             C26008 + C26008 + C50532 * C434) *
                C50732) *
               C22730 +
           ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) * C50708) *
              C50593 * C50577 * C113 -
          (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
           ((C25613 * C413 + C26017 + C26017 + C50532 * C433 + C25611 * C414 +
             C26016 + C26016 + C25606 * C434) *
                C50732 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50818) *
               C22730) *
              C50593 * C50577 * C114 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50818 +
            (C25611 * C413 + C26347 + C26347 + C25606 * C433 + C25613 * C412 +
             C26346 + C26346 + C50532 * C432) *
                C50732) *
               C22730 +
           ((C26192 + C26193) * C50818 +
            (C25611 * C807 + C26345 + C26345 + C25606 * C817 + C25613 * C808 +
             C26344 + C26344 + C50532 * C818) *
                C50732) *
               C50708) *
              C50593 * C50577 * C115 -
          (((C25613 * C809 + C28524 + C28524 + C50532 * C819 + C25611 * C808 +
             C28525 + C28525 + C25606 * C818) *
                C50732 +
            (C25613 * C273 + C25636 + C25636 + C50532 * C293 + C25611 * C265 +
             C25637 + C25637 + C25606 * C285) *
                C50818) *
               C50708 +
           ((C25613 * C420 + C28526 + C28526 + C50532 * C440 + C25611 * C412 +
             C28527 + C28527 + C25606 * C432) *
                C50732 +
            (C25613 * C129 + C25638 + C25638 + C50532 * C143 + C25611 * C128 +
             C25639 + C25639 + C25606 * C142) *
                C50818) *
               C22730) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C25611 * C415 + C26009 + C26009 + C25606 * C435 + C25613 * C414 +
              C26008 + C26008 + C50532 * C434) *
                 C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + (C26581 + C26580) * C50732) *
                C50708) *
               C50593 * C260 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            ((C26580 + C26581) * C50732 + (C25843 + C25842) * C50818) *
                C22730) *
               C50593 * C261 +
           ((C25854 * C50818 + (C26579 + C26578) * C50732) * C22730 +
            ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) *
                C50708) *
               C50593 * C262) *
              C263 +
          ((((C25848 + C25849) * C50818 + (C26582 + C26583) * C50732) * C22730 +
            ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C261 -
           (((C26583 + C26582) * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C25613 * C413 + C26017 + C26017 + C50532 * C433 + C25611 * C414 +
              C26016 + C26016 + C25606 * C434) *
                 C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50593 * C260 -
           (((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
              C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                 C50732 +
             (C25853 + C25852) * C50818) *
                C50708 +
            ((C26585 + C26584) * C50732 + C25855 * C50818) * C22730) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50818 +
                     (C28960 + C28961) * C50732) *
                        C22730 +
                    ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
                       C50593 * C50850 -
                   ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
                    (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
                       C50593 * C50851 +
                   ((C25854 * C50818 + (C26579 + C26578) * C50732) * C22730 +
                    ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) *
                        C50708) *
                       C50593 * C1232) *
                      C50798 +
                  ((((C25848 + C25849) * C50818 + C29642 * C50732) * C22730 +
                    ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                        C50708) *
                       C50593 * C50851 -
                   ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
                    ((C28965 + C28964) * C50732 +
                     (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                      C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                         C50818) *
                        C22730) *
                       C50593 * C50850 -
                   (((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
                      C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                         C50732 +
                     (C25853 + C25852) * C50818) *
                        C50708 +
                    ((C26585 + C26584) * C50732 + C25855 * C50818) * C22730) *
                       C50593 * C1232) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[36] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50818 +
                     (C28960 + C28961) * C50732) *
                        C22730 +
                    ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
                       C50807 -
                   ((C30162 * C50732 + C29641 * C50818) * C50708 +
                    ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                        C22730) *
                       C50657) *
                      C50850 +
                  (((C29640 * C50818 + C30163 * C50732) * C22730 +
                    (C30820 * C50818 + (C27010 + C27011) * C50732) * C50708) *
                       C50657 -
                   ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
                    (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
                       C50807) *
                      C50851 +
                  (((C25854 * C50818 + C30820 * C50732) * C22730 +
                    ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) *
                        C50708) *
                       C50807 -
                   (((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
                      C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                         C50732 +
                     (C27511 + C27510) * C50818) *
                        C50708 +
                    ((C27011 + C27010) * C50732 + C27498 * C50818) * C22730) *
                       C50657) *
                      C1232) *
                 C50558) /
                (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50818 +
            (C28960 + C28961) * C50732) *
               C22730 +
           ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
              C50593 * C997 -
          ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
           (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
              C50593 * C998 +
          ((C25854 * C50818 + (C26579 + C26578) * C50732) * C22730 +
           ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) * C50708) *
              C50593 * C999 -
          (((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
             C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                C50732 +
            (C26843 + C26842) * C50818) *
               C50708 +
           ((C27511 + C27510) * C50732 + C26830 * C50818) * C22730) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C50593 * C926 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
               C50593 * C50629) *
              C928 +
          ((((C25848 + C25849) * C50818 + C29642 * C50732) * C22730 +
            ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C50629 -
           ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50593 * C926) *
              C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C50818 +
             (C29380 + C29381) * C50732) *
                C22730 +
            ((C26192 + C26193) * C50818 + (C29172 + C29173) * C50732) *
                C50708) *
               C50593 * C926 -
           (((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
              C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                 C50732 +
             (C26195 + C26194) * C50818) *
                C50708 +
            ((C29173 + C29172) * C50732 + (C26193 + C26192) * C50818) *
                C22730) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C409 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C410 +
           (((C28963 + C28962) * C50818 +
             (C25611 * C1750 + C27907 + C27907 + C25606 * C1758 +
              C25613 * C1749 + C27906 + C27906 + C50532 * C1757) *
                 C50732) *
                C22730 +
            (C30163 * C50818 + (C30172 + C30173) * C50732) * C50708) *
               C411) *
              C926 +
          (((C29640 * C50818 + C30163 * C50732) * C22730 +
            ((C26579 + C26578) * C50818 + (C27010 + C27011) * C50732) *
                C50708) *
               C410 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
               C409 -
           (((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
              C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                 C50732 +
             (C27011 + C27010) * C50818) *
                C50708 +
            ((C30173 + C30172) * C50732 + C30162 * C50818) * C22730) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                       C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                          C50818 +
                      (C28960 + C28961) * C50732) *
                         C22730 +
                     ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
                        C50807 -
                    ((C30162 * C50732 + C29641 * C50818) * C50708 +
                     ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                         C22730) *
                        C50657) *
                       C926 +
                   (((C29640 * C50818 + C30163 * C50732) * C22730 +
                     ((C26579 + C26578) * C50818 + (C27010 + C27011) * C50732) *
                         C50708) *
                        C50657 -
                    ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
                     (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
                        C50807) *
                       C50629) *
                      C50798 +
                  (((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) *
                         C22730 +
                     (C29642 * C50818 + (C28968 + C28969) * C50732) * C50708) *
                        C50657 -
                    ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
                     ((C28965 + C28964) * C50732 +
                      (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                       C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                          C50818) *
                         C22730) *
                        C50807) *
                       C926 +
                   ((((C25848 + C25849) * C50818 + C29642 * C50732) * C22730 +
                     ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                         C50708) *
                        C50807 -
                    (((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
                       C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                          C50732 +
                      (C26585 + C26584) * C50818) *
                         C50708 +
                     ((C28969 + C28968) * C50732 + C29643 * C50818) * C22730) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C50593 * C926 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
               C50593 * C50629) *
              C928 +
          ((((C25848 + C25849) * C50818 + C29642 * C50732) * C22730 +
            ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C50629 -
           ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50593 * C926) *
              C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C50818 +
             (C29380 + C29381) * C50732) *
                C22730 +
            ((C26192 + C26193) * C50818 + (C29172 + C29173) * C50732) *
                C50708) *
               C50593 * C926 -
           (((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
              C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                 C50732 +
             (C26195 + C26194) * C50818) *
                C50708 +
            ((C29173 + C29172) * C50732 + (C26193 + C26192) * C50818) *
                C22730) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50818 +
            (C28960 + C28961) * C50732) *
               C22730 +
           ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
              C50593 * C997 -
          ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
           (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
              C50593 * C998 +
          ((C25854 * C50818 + (C26579 + C26578) * C50732) * C22730 +
           ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) * C50708) *
              C50593 * C999 -
          (((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
             C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                C50732 +
            (C26843 + C26842) * C50818) *
               C50708 +
           ((C27511 + C27510) * C50732 + C26830 * C50818) * C22730) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                       C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                          C50818 +
                      (C28960 + C28961) * C50732) *
                         C22730 +
                     ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
                        C1577 -
                    ((C30162 * C50732 + C29641 * C50818) * C50708 +
                     ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                         C22730) *
                        C50657) *
                       C50806 +
                   (((C29640 * C50818 + C30163 * C50732) * C22730 +
                     (C30820 * C50818 + (C27010 + C27011) * C50732) * C50708) *
                        C50657 -
                    ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
                     (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
                        C1577) *
                       C50629) *
                      C50798 +
                  (((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) *
                         C22730 +
                     (C29642 * C50818 + (C28968 + C28969) * C50732) * C50708) *
                        C50657 -
                    ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
                     ((C28965 + C28964) * C50732 +
                      (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                       C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                          C50818) *
                         C22730) *
                        C1577) *
                       C50806 +
                   ((((C25848 + C25849) * C50818 + C29642 * C50732) * C22730 +
                     ((C25850 + C25851) * C50818 + (C26584 + C26585) * C50732) *
                         C50708) *
                        C1577 -
                    (((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
                       C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                          C50732 +
                      (C26585 + C26584) * C50818) *
                         C50708 +
                     ((C28969 + C28968) * C50732 + C29643 * C50818) * C22730) *
                        C50657) *
                       C50629) *
                      C50564)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C50852 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50853 +
           (((C28963 + C28962) * C50818 + (C31351 + C31352) * C50732) * C22730 +
            (C30163 * C50818 + (C30172 + C30173) * C50732) * C50708) *
               C1993) *
              C50806 +
          (((C29640 * C50818 + C30163 * C50732) * C22730 +
            (C30820 * C50818 + (C27010 + C27011) * C50732) * C50708) *
               C50853 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
               C50852 -
           (((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
              C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                 C50732 +
             (C27011 + C27010) * C50818) *
                C50708 +
            ((C30173 + C30172) * C50732 + C30162 * C50818) * C22730) *
               C1993) *
              C50629) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50657) *
              C260 +
          (((C29640 * C50818 + C30163 * C50732) * C22730 +
            (C30820 * C50818 + (C27010 + C27011) * C50732) * C50708) *
               C50657 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
               C1577) *
              C261 +
          (((C25854 * C50818 + C30820 * C50732) * C22730 +
            ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
              C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                 C50732 +
             (C27511 + C27510) * C50818) *
                C50708 +
            ((C27011 + C27010) * C50732 + C27498 * C50818) * C22730) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50657) *
              C50577 * C928 +
          ((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) * C22730 +
            (C29642 * C50818 + (C28968 + C28969) * C50732) * C50708) *
               C50657 -
           ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C1577) *
              C50577 * C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C50818 +
             (C29380 + C29381) * C50732) *
                C22730 +
            ((C26192 + C26193) * C50818 + (C29172 + C29173) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
              C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                 C50732 +
             (C29173 + C29172) * C50818) *
                C50708 +
            ((C25613 * C419 + C29374 + C29374 + C50532 * C439 + C25611 * C418 +
              C29375 + C29375 + C25606 * C438) *
                 C50732 +
             (C29381 + C29380) * C50818) *
                C22730) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50818 +
            (C28960 + C28961) * C50732) *
               C22730 +
           ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
              C1743 -
          ((C30162 * C50732 + C29641 * C50818) * C50708 +
           ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) * C22730) *
              C1744 +
          (((C28963 + C28962) * C50818 + (C31351 + C31352) * C50732) * C22730 +
           (C30163 * C50818 + (C30172 + C30173) * C50732) * C50708) *
              C1745 -
          (((C25613 * C16743 + C31343 + C31343 + C50532 * C16745 +
             C25611 * C14865 + C31344 + C31344 + C25606 * C14869) *
                C50732 +
            (C30173 + C30172) * C50818) *
               C50708 +
           ((C25613 * C7236 + C31345 + C31345 + C50532 * C7242 +
             C25611 * C7237 + C31346 + C31346 + C25606 * C7243) *
                C50732 +
            (C31352 + C31351) * C50818) *
               C22730) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C50852 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50853 +
           (((C28963 + C28962) * C50818 + (C31351 + C31352) * C50732) * C22730 +
            (C30163 * C50818 + (C30172 + C30173) * C50732) * C50708) *
               C1993) *
              C50577 * C50798 +
          ((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) * C22730 +
            (C29642 * C50818 + (C28968 + C28969) * C50732) * C50708) *
               C50853 -
           ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C50852 -
           (((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C50732 +
             (C28969 + C28968) * C50818) *
                C50708 +
            ((C25613 * C1748 + C28938 + C28938 + C50532 * C1756 +
              C25611 * C1749 + C28939 + C28939 + C25606 * C1757) *
                 C50732 +
             (C28967 + C28966) * C50818) *
                C22730) *
               C1993) *
              C50577 * C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50657) *
              C50577 * C928 +
          ((((C28964 + C28965) * C50818 + (C28966 + C28967) * C50732) * C22730 +
            (C29642 * C50818 + (C28968 + C28969) * C50732) * C50708) *
               C50657 -
           ((C29643 * C50732 + (C25849 + C25848) * C50818) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50818) *
                C22730) *
               C1577) *
              C50577 * C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C50818 +
             (C29380 + C29381) * C50732) *
                C22730 +
            ((C26192 + C26193) * C50818 + (C29172 + C29173) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
              C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                 C50732 +
             (C29173 + C29172) * C50818) *
                C50708 +
            ((C25613 * C419 + C29374 + C29374 + C50532 * C439 + C25611 * C418 +
              C29375 + C29375 + C25606 * C438) *
                 C50732 +
             (C29381 + C29380) * C50818) *
                C22730) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50818 +
             (C28960 + C28961) * C50732) *
                C22730 +
            ((C25842 + C25843) * C50818 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C50818) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C50818) *
                C22730) *
               C50657) *
              C260 +
          (((C29640 * C50818 + C30163 * C50732) * C22730 +
            (C30820 * C50818 + (C27010 + C27011) * C50732) * C50708) *
               C50657 -
           ((C27498 * C50732 + (C25845 + C25844) * C50818) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C50818) * C22730) *
               C1577) *
              C261 +
          (((C25854 * C50818 + C30820 * C50732) * C22730 +
            ((C25847 + C25846) * C50818 + (C27510 + C27511) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
              C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                 C50732 +
             (C27511 + C27510) * C50818) *
                C50708 +
            ((C27011 + C27010) * C50732 + C27498 * C50818) * C22730) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
               C50593 * C50806 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            ((C8820 + C8821) * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50593 * C50629) *
              C50848 +
          ((((C8088 + C8089) * C32096 + (C8822 + C8823) * C50732) * C22730 +
            ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
               C50593 * C50629 -
           (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50593 * C50806) *
              C50849 +
          ((((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
              C7869 + C7869 + C50532 * C142) *
                 C32096 +
             (C16144 + C16145) * C50732) *
                C22730 +
            ((C8432 + C8433) * C32096 + (C41617 + C41618) * C50732) * C50708) *
               C50593 * C50806 -
           (((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
              C8583 + C8583 + C50789 * C1472) *
                 C50732 +
             (C8435 + C8434) * C32096) *
                C50708 +
            ((C41618 + C41617) * C50732 + (C8433 + C8432) * C32096) * C22730) *
               C50593 * C50629) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
               C7857 + C7857 + C50532 * C140) *
                  C32096 +
              (C15818 + C15819) * C50732) *
                 C22730 +
             ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
                C50807 -
            ((C16751 * C50732 + C42072 * C32096) * C50708 +
             ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                 C22730) *
                C50657) *
               C50806 +
           (((C42071 * C32096 + (C9260 + C9261) * C50732) * C22730 +
             ((C8819 + C8818) * C32096 + (C9262 + C9263) * C50732) * C50708) *
                C50657 -
            ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
             (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
                C50807) *
               C50629) *
              C263 +
          (((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) *
                 C22730 +
             (C42073 * C32096 + (C16352 + C16353) * C50732) * C50708) *
                C50657 -
            ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
             ((C15825 + C15824) * C50732 +
              (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
               C7867 + C7867 + C50789 * C140) *
                  C32096) *
                 C22730) *
                C50807) *
               C50806 +
           ((((C8088 + C8089) * C32096 + C42073 * C50732) * C22730 +
             ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
                C50807 -
            (((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 + C7851 * C3577 +
               C8263 + C8263 + C50789 * C3583) *
                  C50732 +
              (C8825 + C8824) * C32096) *
                 C50708 +
             ((C16353 + C16352) * C50732 + C42074 * C32096) * C22730) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
               C50593 * C260 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            ((C8820 + C8821) * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50593 * C261 +
           ((C8094 * C32096 + (C8819 + C8818) * C50732) * C22730 +
            ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
               C50593 * C262) *
              C263 +
          ((((C8088 + C8089) * C32096 + (C8822 + C8823) * C50732) * C22730 +
            ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
               C50593 * C261 -
           (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50593 * C260 -
           (((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 + C7851 * C4090 +
              C8801 + C8801 + C50789 * C4096) *
                 C50732 +
             (C8093 + C8092) * C32096) *
                C50708 +
            ((C8825 + C8824) * C50732 + C8095 * C32096) * C22730) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C32096 +
            (C15818 + C15819) * C50732) *
               C22730 +
           ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
              C50593 * C50577 * C113 -
          (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
           ((C15825 + C15824) * C50732 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C32096) *
               C22730) *
              C50593 * C50577 * C114 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C32096 +
            (C16144 + C16145) * C50732) *
               C22730 +
           ((C8432 + C8433) * C32096 +
            (C7851 * C807 + C8585 + C8585 + C50789 * C817 + C7853 * C808 +
             C8584 + C8584 + C50532 * C818) *
                C50732) *
               C50708) *
              C50593 * C50577 * C115 -
          (((C7853 * C809 + C41025 + C41025 + C50532 * C819 + C7851 * C808 +
             C41026 + C41026 + C50789 * C818) *
                C50732 +
            (C7853 * C273 + C7876 + C7876 + C50532 * C293 + C7851 * C265 +
             C7877 + C7877 + C50789 * C285) *
                C32096) *
               C50708 +
           ((C7853 * C420 + C15470 + C15470 + C50532 * C440 + C7851 * C412 +
             C15471 + C15471 + C50789 * C432) *
                C50732 +
            (C7853 * C129 + C7878 + C7878 + C50532 * C143 + C7851 * C128 +
             C7879 + C7879 + C50789 * C142) *
                C32096) *
               C22730) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
               C409 -
           ((C16751 * C50732 + (C8820 + C8821) * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C410 +
           ((C15830 * C32096 + (C15823 + C15822) * C50732) * C22730 +
            ((C9260 + C9261) * C32096 + (C16758 + C16759) * C50732) * C50708) *
               C411) *
              C50577 * C263 +
          ((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) * C22730 +
            ((C8822 + C8823) * C32096 + (C16352 + C16353) * C50732) * C50708) *
               C410 -
           (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C409 -
           (((C7853 * C4506 + C16346 + C16346 + C50532 * C4512 + C7851 * C4507 +
              C16347 + C16347 + C50789 * C4513) *
                 C50732 +
             (C16353 + C16352) * C32096) *
                C50708 +
            ((C15829 + C15828) * C50732 + C15831 * C32096) * C22730) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
               C50807 -
           ((C16751 * C50732 + (C8820 + C8821) * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50657) *
              C50577 * C50848 +
          ((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) * C22730 +
            ((C8822 + C8823) * C32096 + (C16352 + C16353) * C50732) * C50708) *
               C50657 -
           (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50807) *
              C50577 * C50849 +
          ((((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
              C7869 + C7869 + C50532 * C142) *
                 C32096 +
             (C16144 + C16145) * C50732) *
                C22730 +
            ((C8432 + C8433) * C32096 + (C41617 + C41618) * C50732) * C50708) *
               C50807 -
           (((C7853 * C1116 + C15978 + C15978 + C50532 * C1124 + C7851 * C1117 +
              C15979 + C15979 + C50789 * C1125) *
                 C50732 +
             (C41618 + C41617) * C32096) *
                C50708 +
            ((C16147 + C16146) * C50732 + (C16145 + C16144) * C32096) *
                C22730) *
               C50657) *
              C50577 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C32096 +
            (C15818 + C15819) * C50732) *
               C22730 +
           ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
              C50593 * C50577 * C113 -
          (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
           ((C15825 + C15824) * C50732 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C32096) *
               C22730) *
              C50593 * C50577 * C114 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C32096 +
            (C16144 + C16145) * C50732) *
               C22730 +
           ((C8432 + C8433) * C32096 +
            (C7851 * C807 + C8585 + C8585 + C50789 * C817 + C7853 * C808 +
             C8584 + C8584 + C50532 * C818) *
                C50732) *
               C50708) *
              C50593 * C50577 * C115 -
          (((C7853 * C809 + C41025 + C41025 + C50532 * C819 + C7851 * C808 +
             C41026 + C41026 + C50789 * C818) *
                C50732 +
            (C7853 * C273 + C7876 + C7876 + C50532 * C293 + C7851 * C265 +
             C7877 + C7877 + C50789 * C285) *
                C32096) *
               C50708 +
           ((C7853 * C420 + C15470 + C15470 + C50532 * C440 + C7851 * C412 +
             C15471 + C15471 + C50789 * C432) *
                C50732 +
            (C7853 * C129 + C7878 + C7878 + C50532 * C143 + C7851 * C128 +
             C7879 + C7879 + C50789 * C142) *
                C32096) *
               C22730) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + (C8821 + C8820) * C50732) * C50708) *
               C50593 * C260 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            ((C8820 + C8821) * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50593 * C261 +
           ((C8094 * C32096 + (C8819 + C8818) * C50732) * C22730 +
            ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
               C50593 * C262) *
              C263 +
          ((((C8088 + C8089) * C32096 + (C8822 + C8823) * C50732) * C22730 +
            ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
               C50593 * C261 -
           (((C8823 + C8822) * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50593 * C260 -
           (((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 + C7851 * C4090 +
              C8801 + C8801 + C50789 * C4096) *
                 C50732 +
             (C8093 + C8092) * C32096) *
                C50708 +
            ((C8825 + C8824) * C50732 + C8095 * C32096) * C22730) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C50593 * C50850 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50593 * C50851 +
           ((C8094 * C32096 + (C8819 + C8818) * C50732) * C22730 +
            ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
               C50593 * C1232) *
              C50798 +
          ((((C8088 + C8089) * C32096 + C42073 * C50732) * C22730 +
            ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
               C50593 * C50851 -
           ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50593 * C50850 -
           (((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 + C7851 * C4090 +
              C8801 + C8801 + C50789 * C4096) *
                 C50732 +
             (C8093 + C8092) * C32096) *
                C50708 +
            ((C8825 + C8824) * C50732 + C8095 * C32096) * C22730) *
               C50593 * C1232) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C50807 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50657) *
              C50850 +
          (((C42071 * C32096 + C42593 * C50732) * C22730 +
            (C43240 * C32096 + (C9262 + C9263) * C50732) * C50708) *
               C50657 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50807) *
              C50851 +
          (((C8094 * C32096 + C43240 * C50732) * C22730 +
            ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
               C50807 -
           (((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
              C9251 + C9251 + C50789 * C9240) *
                 C50732 +
             (C9769 + C9768) * C32096) *
                C50708 +
            ((C9263 + C9262) * C50732 + C9756 * C32096) * C22730) *
               C50657) *
              C1232) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C32096 +
            (C15818 + C15819) * C50732) *
               C22730 +
           ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
              C50593 * C997 -
          ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
           (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
              C50593 * C998 +
          ((C8094 * C32096 + (C8819 + C8818) * C50732) * C22730 +
           ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
              C50593 * C999 -
          (((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50732 +
            (C9089 + C9088) * C32096) *
               C50708 +
           ((C9769 + C9768) * C50732 + C9076 * C32096) * C22730) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C50593 * C926 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50593 * C50629) *
              C928 +
          ((((C8088 + C8089) * C32096 + C42073 * C50732) * C22730 +
            ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
               C50593 * C50629 -
           ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50593 * C926) *
              C929 +
          ((((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
              C7869 + C7869 + C50532 * C142) *
                 C32096 +
             (C16144 + C16145) * C50732) *
                C22730 +
            ((C8432 + C8433) * C32096 + (C41617 + C41618) * C50732) * C50708) *
               C50593 * C926 -
           (((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
              C8583 + C8583 + C50789 * C1472) *
                 C50732 +
             (C8435 + C8434) * C32096) *
                C50708 +
            ((C41618 + C41617) * C50732 + (C8433 + C8432) * C32096) * C22730) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C409 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C410 +
           ((C15830 * C32096 + (C15823 + C15822) * C50732) * C22730 +
            (C42593 * C32096 + (C16758 + C16759) * C50732) * C50708) *
               C411) *
              C926 +
          (((C42071 * C32096 + C42593 * C50732) * C22730 +
            ((C8819 + C8818) * C32096 + (C9262 + C9263) * C50732) * C50708) *
               C410 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C409 -
           (((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
              C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
                 C50732 +
             (C9263 + C9262) * C32096) *
                C50708 +
            ((C16759 + C16758) * C50732 + C16751 * C32096) * C22730) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
               C7857 + C7857 + C50532 * C140) *
                  C32096 +
              (C15818 + C15819) * C50732) *
                 C22730 +
             ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
                C50807 -
            ((C16751 * C50732 + C42072 * C32096) * C50708 +
             ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                 C22730) *
                C50657) *
               C926 +
           (((C42071 * C32096 + C42593 * C50732) * C22730 +
             ((C8819 + C8818) * C32096 + (C9262 + C9263) * C50732) * C50708) *
                C50657 -
            ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
             (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
                C50807) *
               C50629) *
              C50798 +
          (((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) *
                 C22730 +
             (C42073 * C32096 + (C16352 + C16353) * C50732) * C50708) *
                C50657 -
            ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
             ((C15825 + C15824) * C50732 +
              (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
               C7867 + C7867 + C50789 * C140) *
                  C32096) *
                 C22730) *
                C50807) *
               C926 +
           ((((C8088 + C8089) * C32096 + C42073 * C50732) * C22730 +
             ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
                C50807 -
            (((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 + C7851 * C3577 +
               C8263 + C8263 + C50789 * C3583) *
                  C50732 +
              (C8825 + C8824) * C32096) *
                 C50708 +
             ((C16353 + C16352) * C50732 + C42074 * C32096) * C22730) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C50593 * C926 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C50593 * C50629) *
              C928 +
          ((((C8088 + C8089) * C32096 + C42073 * C50732) * C22730 +
            ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
               C50593 * C50629 -
           ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50593 * C926) *
              C929 +
          ((((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
              C7869 + C7869 + C50532 * C142) *
                 C32096 +
             (C16144 + C16145) * C50732) *
                C22730 +
            ((C8432 + C8433) * C32096 + (C41617 + C41618) * C50732) * C50708) *
               C50593 * C926 -
           (((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
              C8583 + C8583 + C50789 * C1472) *
                 C50732 +
             (C8435 + C8434) * C32096) *
                C50708 +
            ((C41618 + C41617) * C50732 + (C8433 + C8432) * C32096) * C22730) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C32096 +
            (C15818 + C15819) * C50732) *
               C22730 +
           ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
              C50593 * C997 -
          ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
           (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
              C50593 * C998 +
          ((C8094 * C32096 + (C8819 + C8818) * C50732) * C22730 +
           ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
              C50593 * C999 -
          (((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50732 +
            (C9089 + C9088) * C32096) *
               C50708 +
           ((C9769 + C9768) * C50732 + C9076 * C32096) * C22730) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
               C7857 + C7857 + C50532 * C140) *
                  C32096 +
              (C15818 + C15819) * C50732) *
                 C22730 +
             ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
                C1577 -
            ((C16751 * C50732 + C42072 * C32096) * C50708 +
             ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                 C22730) *
                C50657) *
               C50806 +
           (((C42071 * C32096 + C42593 * C50732) * C22730 +
             (C43240 * C32096 + (C9262 + C9263) * C50732) * C50708) *
                C50657 -
            ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
             (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
                C1577) *
               C50629) *
              C50798 +
          (((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) *
                 C22730 +
             (C42073 * C32096 + (C16352 + C16353) * C50732) * C50708) *
                C50657 -
            ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
             ((C15825 + C15824) * C50732 +
              (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
               C7867 + C7867 + C50789 * C140) *
                  C32096) *
                 C22730) *
                C1577) *
               C50806 +
           ((((C8088 + C8089) * C32096 + C42073 * C50732) * C22730 +
             ((C8090 + C8091) * C32096 + (C8824 + C8825) * C50732) * C50708) *
                C1577 -
            (((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 + C7851 * C3577 +
               C8263 + C8263 + C50789 * C3583) *
                  C50732 +
              (C8825 + C8824) * C32096) *
                 C50708 +
             ((C16353 + C16352) * C50732 + C42074 * C32096) * C22730) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C32096 +
                     (C15818 + C15819) * C50732) *
                        C22730 +
                    ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
                       C50852 -
                   ((C16751 * C50732 + C42072 * C32096) * C50708 +
                    ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                        C22730) *
                       C50853 +
                   ((C15830 * C32096 + (C15823 + C15822) * C50732) * C22730 +
                    (C42593 * C32096 + (C16758 + C16759) * C50732) * C50708) *
                       C1993) *
                      C50806 +
                  (((C42071 * C32096 + C42593 * C50732) * C22730 +
                    (C43240 * C32096 + (C9262 + C9263) * C50732) * C50708) *
                       C50853 -
                   ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
                    (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
                       C50852 -
                   (((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
                      C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
                         C50732 +
                     (C9263 + C9262) * C32096) *
                        C50708 +
                    ((C16759 + C16758) * C50732 + C16751 * C32096) * C22730) *
                       C1993) *
                      C50629) *
                 C50558) /
                (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C1577 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50657) *
              C260 +
          (((C42071 * C32096 + C42593 * C50732) * C22730 +
            (C43240 * C32096 + (C9262 + C9263) * C50732) * C50708) *
               C50657 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C1577) *
              C261 +
          (((C8094 * C32096 + C43240 * C50732) * C22730 +
            ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
               C1577 -
           (((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
              C9251 + C9251 + C50789 * C9240) *
                 C50732 +
             (C9769 + C9768) * C32096) *
                C50708 +
            ((C9263 + C9262) * C50732 + C9756 * C32096) * C22730) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C1577 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50657) *
              C50577 * C928 +
          ((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) * C22730 +
            (C42073 * C32096 + (C16352 + C16353) * C50732) * C50708) *
               C50657 -
           ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C1577) *
              C50577 * C929 +
          ((((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
              C7869 + C7869 + C50532 * C142) *
                 C32096 +
             (C16144 + C16145) * C50732) *
                C22730 +
            ((C8432 + C8433) * C32096 + (C41617 + C41618) * C50732) * C50708) *
               C1577 -
           (((C7853 * C1116 + C15978 + C15978 + C50532 * C1124 + C7851 * C1117 +
              C15979 + C15979 + C50789 * C1125) *
                 C50732 +
             (C41618 + C41617) * C32096) *
                C50708 +
            ((C16147 + C16146) * C50732 + (C16145 + C16144) * C32096) *
                C22730) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C32096 +
            (C15818 + C15819) * C50732) *
               C22730 +
           ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
              C1743 -
          ((C16751 * C50732 + C42072 * C32096) * C50708 +
           ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) * C22730) *
              C1744 +
          ((C15830 * C32096 + (C15823 + C15822) * C50732) * C22730 +
           (C42593 * C32096 + (C16758 + C16759) * C50732) * C50708) *
              C1745 -
          (((C7853 * C16743 + C16752 + C16752 + C50532 * C16745 +
             C7851 * C14865 + C16753 + C16753 + C50789 * C14869) *
                C50732 +
            (C16759 + C16758) * C32096) *
               C50708 +
           ((C17654 + C17653) * C50732 + C17642 * C32096) * C22730) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C50852 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50853 +
           ((C15830 * C32096 + (C15823 + C15822) * C50732) * C22730 +
            (C42593 * C32096 + (C16758 + C16759) * C50732) * C50708) *
               C1993) *
              C50577 * C50798 +
          ((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) * C22730 +
            (C42073 * C32096 + (C16352 + C16353) * C50732) * C50708) *
               C50853 -
           ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C50852 -
           (((C7853 * C4506 + C16346 + C16346 + C50532 * C4512 + C7851 * C4507 +
              C16347 + C16347 + C50789 * C4513) *
                 C50732 +
             (C16353 + C16352) * C32096) *
                C50708 +
            ((C15829 + C15828) * C50732 + C15831 * C32096) * C22730) *
               C1993) *
              C50577 * C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C1577 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50657) *
              C50577 * C928 +
          ((((C15824 + C15825) * C32096 + (C15826 + C15827) * C50732) * C22730 +
            (C42073 * C32096 + (C16352 + C16353) * C50732) * C50708) *
               C50657 -
           ((C42074 * C50732 + (C8089 + C8088) * C32096) * C50708 +
            ((C15825 + C15824) * C50732 +
             (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
              C7867 + C7867 + C50789 * C140) *
                 C32096) *
                C22730) *
               C1577) *
              C50577 * C929 +
          ((((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
              C7869 + C7869 + C50532 * C142) *
                 C32096 +
             (C16144 + C16145) * C50732) *
                C22730 +
            ((C8432 + C8433) * C32096 + (C41617 + C41618) * C50732) * C50708) *
               C1577 -
           (((C7853 * C1116 + C15978 + C15978 + C50532 * C1124 + C7851 * C1117 +
              C15979 + C15979 + C50789 * C1125) *
                 C50732 +
             (C41618 + C41617) * C32096) *
                C50708 +
            ((C16147 + C16146) * C50732 + (C16145 + C16144) * C32096) *
                C22730) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
              C7857 + C7857 + C50532 * C140) *
                 C32096 +
             (C15818 + C15819) * C50732) *
                C22730 +
            ((C8082 + C8083) * C32096 + C42071 * C50732) * C50708) *
               C1577 -
           ((C16751 * C50732 + C42072 * C32096) * C50708 +
            ((C15821 + C15820) * C50732 + (C15819 + C15818) * C32096) *
                C22730) *
               C50657) *
              C260 +
          (((C42071 * C32096 + C42593 * C50732) * C22730 +
            (C43240 * C32096 + (C9262 + C9263) * C50732) * C50708) *
               C50657 -
           ((C9756 * C50732 + (C8085 + C8084) * C32096) * C50708 +
            (C42072 * C50732 + (C8083 + C8082) * C32096) * C22730) *
               C1577) *
              C261 +
          (((C8094 * C32096 + C43240 * C50732) * C22730 +
            ((C8087 + C8086) * C32096 + (C9768 + C9769) * C50732) * C50708) *
               C1577 -
           (((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
              C9251 + C9251 + C50789 * C9240) *
                 C50732 +
             (C9769 + C9768) * C32096) *
                C50708 +
            ((C9263 + C9262) * C50732 + C9756 * C32096) * C22730) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50593 * C50806 -
           ((C44653 + C44654) * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50593 * C50629) *
              C50848 +
          (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
            (C44659 + C44660) * C25610) *
               C50593 * C50629 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50593 * C50806) *
              C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
             C13376 * C50732) *
                C50854 +
            (C44955 + C44956) * C50843 + (C44957 + C44958) * C25610) *
               C50593 * C50806 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C32096) *
                C25610 +
            (C44958 + C44957) * C50843 + (C44956 + C44955) * C50854) *
               C50593 * C50629) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
              C13057 * C50732) *
                 C50854 +
             (C44649 + C44650) * C50843 + C44661 * C25610) *
                C50807 -
            ((C45299 + C45300) * C25610 + (C45301 + C45302) * C50843 +
             (C13058 * C50732 + C13057 * C32096) * C50854) *
                C50657) *
               C50806 +
           (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
             (C11386 * C32096 + C11688 * C50732) * C25610) *
                C50657 -
            ((C44653 + C44654) * C25610 + (C44652 + C44651) * C50843 +
             (C44650 + C44649) * C50854) *
                C50807) *
               C50629) *
              C263 +
          ((((C13059 * C32096 + C13060 * C50732) * C50854 +
             (C45303 + C45304) * C50843 + (C45305 + C45306) * C25610) *
                C50657 -
            (C44662 * C25610 + (C44656 + C44655) * C50843 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                 C50854) *
                C50807) *
               C50806 +
           (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
             (C44659 + C44660) * C25610) *
                C50807 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C32096) *
                 C25610 +
             (C45306 + C45305) * C50843 + (C45304 + C45303) * C50854) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50593 * C260 -
           ((C44653 + C44654) * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50593 * C261 +
           (C44661 * C50854 + (C44654 + C44653) * C50843 +
            (C10884 * C32096 + C12026 * C50732) * C25610) *
               C50593 * C262) *
              C263 +
          (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
            (C44659 + C44660) * C25610) *
               C50593 * C261 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50593 * C260 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C32096) *
                C25610 +
            (C44660 + C44659) * C50843 + C44662 * C50854) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
            C13057 * C50732) *
               C50854 +
           (C10881 * C32096 + C11388 * C50732) * C50843 +
           (C10882 * C32096 + C11387 * C50732) * C25610) *
              C50593 * C50577 * C113 -
          ((C11390 * C50732 + C10886 * C32096) * C25610 +
           (C11389 * C50732 + C10885 * C32096) * C50843 +
           (C13059 * C50732 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
               C50854) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
            C13376 * C50732) *
               C50854 +
           (C11122 * C32096 + C13219 * C50732) * C50843 +
           (C11123 * C32096 + C13220 * C50732) * C25610) *
              C50593 * C50577 * C115 -
          (((C10728 * C1463 + C12721 + C12721 + C50527 * C1471) * C50732 +
            (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C32096) *
               C25610 +
           ((C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50732 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C32096) *
               C50843 +
           ((C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50732 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C32096) *
               C50854) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C409 -
           ((C11687 * C50732 + C11387 * C32096) * C25610 +
            (C11686 * C50732 + C11388 * C32096) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C410 +
           ((C13058 * C32096 + C14878 * C50732) * C50854 +
            (C11686 * C32096 + C13982 * C50732) * C50843 +
            (C11687 * C32096 + C13983 * C50732) * C25610) *
               C411) *
              C50577 * C263 +
          (((C13059 * C32096 + C13060 * C50732) * C50854 +
            (C11389 * C32096 + C13061 * C50732) * C50843 +
            (C11390 * C32096 + C13062 * C50732) * C25610) *
               C410 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C409 -
           (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C50732 +
             C13062 * C32096) *
                C25610 +
            (C18556 * C50732 + C13061 * C32096) * C50843 +
            (C18555 * C50732 + C13060 * C32096) * C50854) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50807 -
           ((C11687 * C50732 + C11387 * C32096) * C25610 +
            (C11686 * C50732 + C11388 * C32096) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50657) *
              C50577 * C50848 +
          (((C13059 * C32096 + C13060 * C50732) * C50854 +
            (C11389 * C32096 + C13061 * C50732) * C50843 +
            (C11390 * C32096 + C13062 * C50732) * C25610) *
               C50657 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50807) *
              C50577 * C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
             C13376 * C50732) *
                C50854 +
            (C44955 + C44956) * C50843 + (C44957 + C44958) * C25610) *
               C50807 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C32096) *
                C25610 +
            (C18709 * C50732 + C13219 * C32096) * C50843 +
            (C18863 * C50732 + C13376 * C32096) * C50854) *
               C50657) *
              C50577 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
            C13057 * C50732) *
               C50854 +
           (C10881 * C32096 + C11388 * C50732) * C50843 +
           (C10882 * C32096 + C11387 * C50732) * C25610) *
              C50593 * C50577 * C113 -
          ((C11390 * C50732 + C10886 * C32096) * C25610 +
           (C11389 * C50732 + C10885 * C32096) * C50843 +
           (C13059 * C50732 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
               C50854) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
            C13376 * C50732) *
               C50854 +
           (C11122 * C32096 + C13219 * C50732) * C50843 +
           (C11123 * C32096 + C13220 * C50732) * C25610) *
              C50593 * C50577 * C115 -
          (((C10728 * C1463 + C12721 + C12721 + C50527 * C1471) * C50732 +
            (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C32096) *
               C25610 +
           ((C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50732 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C32096) *
               C50843 +
           ((C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50732 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C32096) *
               C50854) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50593 * C260 -
           ((C44653 + C44654) * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50593 * C261 +
           (C44661 * C50854 + (C44654 + C44653) * C50843 +
            (C10884 * C32096 + C12026 * C50732) * C25610) *
               C50593 * C262) *
              C263 +
          (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
            (C44659 + C44660) * C25610) *
               C50593 * C261 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50593 * C260 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C32096) *
                C25610 +
            (C44660 + C44659) * C50843 + C44662 * C50854) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50593 * C50850 -
           (C45551 * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50593 * C50851 +
           (C44661 * C50854 + (C44654 + C44653) * C50843 +
            (C45552 + C45553) * C25610) *
               C50593 * C1232) *
              C50798 +
          (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
            (C44659 + C44660) * C25610) *
               C50593 * C50851 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50593 * C50850 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C32096) *
                C25610 +
            (C44660 + C44659) * C50843 + C44662 * C50854) *
               C50593 * C1232) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50807 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50657) *
              C50850 +
          (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
            (C46191 + C46192) * C25610) *
               C50657 -
           (C45551 * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50807) *
              C50851 +
          ((C44661 * C50854 + (C44654 + C44653) * C50843 +
            (C45552 + C45553) * C25610) *
               C50807 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C32096) *
                C25610 +
            (C46192 + C46191) * C50843 + C46190 * C50854) *
               C50657) *
              C1232) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
            C13057 * C50732) *
               C50854 +
           (C44649 + C44650) * C50843 + C44661 * C25610) *
              C50593 * C997 -
          (C45551 * C25610 + (C44652 + C44651) * C50843 +
           (C44650 + C44649) * C50854) *
              C50593 * C998 +
          (C44661 * C50854 + (C44654 + C44653) * C50843 +
           (C45552 + C45553) * C25610) *
              C50593 * C999 -
          (((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50732 +
            C11570 * C32096) *
               C25610 +
           (C45553 + C45552) * C50843 + C45551 * C50854) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50593 * C926 -
           ((C44653 + C44654) * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50593 * C50629) *
              C928 +
          (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
            (C44659 + C44660) * C25610) *
               C50593 * C50629 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
             C13376 * C50732) *
                C50854 +
            (C44955 + C44956) * C50843 + (C44957 + C44958) * C25610) *
               C50593 * C926 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C32096) *
                C25610 +
            (C44958 + C44957) * C50843 + (C44956 + C44955) * C50854) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C409 -
           ((C45299 + C45300) * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C410 +
           ((C13058 * C32096 + C14878 * C50732) * C50854 +
            (C45700 + C45701) * C50843 + (C45702 + C45703) * C25610) *
               C411) *
              C926 +
          (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
            (C11386 * C32096 + C11688 * C50732) * C25610) *
               C410 -
           (C45551 * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C409 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50732 +
             C11688 * C32096) *
                C25610 +
            (C45703 + C45702) * C50843 + (C45701 + C45700) * C50854) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
              C13057 * C50732) *
                 C50854 +
             (C44649 + C44650) * C50843 + C44661 * C25610) *
                C50807 -
            ((C45299 + C45300) * C25610 + (C45301 + C45302) * C50843 +
             (C13058 * C50732 + C13057 * C32096) * C50854) *
                C50657) *
               C926 +
           (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
             (C11386 * C32096 + C11688 * C50732) * C25610) *
                C50657 -
            (C45551 * C25610 + (C44652 + C44651) * C50843 +
             (C44650 + C44649) * C50854) *
                C50807) *
               C50629) *
              C50798 +
          ((((C13059 * C32096 + C13060 * C50732) * C50854 +
             (C45303 + C45304) * C50843 + (C45305 + C45306) * C25610) *
                C50657 -
            (C44662 * C25610 + (C44656 + C44655) * C50843 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                 C50854) *
                C50807) *
               C926 +
           (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
             (C44659 + C44660) * C25610) *
                C50807 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C32096) *
                 C25610 +
             (C45306 + C45305) * C50843 + (C45304 + C45303) * C50854) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50593 * C926 -
           ((C44653 + C44654) * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50593 * C50629) *
              C928 +
          (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
            (C44659 + C44660) * C25610) *
               C50593 * C50629 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
             C13376 * C50732) *
                C50854 +
            (C44955 + C44956) * C50843 + (C44957 + C44958) * C25610) *
               C50593 * C926 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C32096) *
                C25610 +
            (C44958 + C44957) * C50843 + (C44956 + C44955) * C50854) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
            C13057 * C50732) *
               C50854 +
           (C44649 + C44650) * C50843 + C44661 * C25610) *
              C50593 * C997 -
          (C45551 * C25610 + (C44652 + C44651) * C50843 +
           (C44650 + C44649) * C50854) *
              C50593 * C998 +
          (C44661 * C50854 + (C44654 + C44653) * C50843 +
           (C45552 + C45553) * C25610) *
              C50593 * C999 -
          (((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50732 +
            C11570 * C32096) *
               C25610 +
           (C45553 + C45552) * C50843 + C45551 * C50854) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
              C13057 * C50732) *
                 C50854 +
             (C44649 + C44650) * C50843 + C44661 * C25610) *
                C1577 -
            (C46190 * C25610 + (C45301 + C45302) * C50843 +
             (C13058 * C50732 + C13057 * C32096) * C50854) *
                C50657) *
               C50806 +
           (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
             (C46191 + C46192) * C25610) *
                C50657 -
            (C45551 * C25610 + (C44652 + C44651) * C50843 +
             (C44650 + C44649) * C50854) *
                C1577) *
               C50629) *
              C50798 +
          ((((C13059 * C32096 + C13060 * C50732) * C50854 +
             (C45303 + C45304) * C50843 + (C45305 + C45306) * C25610) *
                C50657 -
            (C44662 * C25610 + (C44656 + C44655) * C50843 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                 C50854) *
                C1577) *
               C50806 +
           (((C44655 + C44656) * C50854 + (C44657 + C44658) * C50843 +
             (C44659 + C44660) * C25610) *
                C1577 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C32096) *
                 C25610 +
             (C45306 + C45305) * C50843 + (C45304 + C45303) * C50854) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50852 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50853 +
           ((C13058 * C32096 + C14878 * C50732) * C50854 +
            (C45700 + C45701) * C50843 + (C45702 + C45703) * C25610) *
               C1993) *
              C50806 +
          (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
            (C46191 + C46192) * C25610) *
               C50853 -
           (C45551 * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C50852 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50732 +
             C11688 * C32096) *
                C25610 +
            (C45703 + C45702) * C50843 + (C45701 + C45700) * C50854) *
               C1993) *
              C50629) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C1577 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50657) *
              C260 +
          (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
            (C46191 + C46192) * C25610) *
               C50657 -
           (C45551 * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C1577) *
              C261 +
          ((C44661 * C50854 + (C44654 + C44653) * C50843 +
            (C45552 + C45553) * C25610) *
               C1577 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C32096) *
                C25610 +
            (C46192 + C46191) * C50843 + C46190 * C50854) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C1577 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C32096 + C13060 * C50732) * C50854 +
            (C45303 + C45304) * C50843 + (C45305 + C45306) * C25610) *
               C50657 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
             C13376 * C50732) *
                C50854 +
            (C44955 + C44956) * C50843 + (C44957 + C44958) * C25610) *
               C1577 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C32096) *
                C25610 +
            (C18709 * C50732 + C13219 * C32096) * C50843 +
            (C18863 * C50732 + C13376 * C32096) * C50854) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
            C13057 * C50732) *
               C50854 +
           (C44649 + C44650) * C50843 + C44661 * C25610) *
              C1743 -
          (C46190 * C25610 + (C45301 + C45302) * C50843 +
           (C13058 * C50732 + C13057 * C32096) * C50854) *
              C1744 +
          ((C13058 * C32096 + C14878 * C50732) * C50854 +
           (C45700 + C45701) * C50843 + (C45702 + C45703) * C25610) *
              C1745 -
          (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C50732 +
            C13983 * C32096) *
               C25610 +
           (C19463 * C50732 + C13982 * C32096) * C50843 +
           (C20353 * C50732 + C14878 * C32096) * C50854) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C50852 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50853 +
           ((C13058 * C32096 + C14878 * C50732) * C50854 +
            (C45700 + C45701) * C50843 + (C45702 + C45703) * C25610) *
               C1993) *
              C50577 * C50798 +
          (((C13059 * C32096 + C13060 * C50732) * C50854 +
            (C45303 + C45304) * C50843 + (C45305 + C45306) * C25610) *
               C50853 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C50852 -
           (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C50732 +
             C13062 * C32096) *
                C25610 +
            (C18556 * C50732 + C13061 * C32096) * C50843 +
            (C18555 * C50732 + C13060 * C32096) * C50854) *
               C1993) *
              C50577 * C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C1577 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C32096 + C13060 * C50732) * C50854 +
            (C45303 + C45304) * C50843 + (C45305 + C45306) * C25610) *
               C50657 -
           (C44662 * C25610 + (C44656 + C44655) * C50843 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C32096) *
                C50854) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C32096 +
             C13376 * C50732) *
                C50854 +
            (C44955 + C44956) * C50843 + (C44957 + C44958) * C25610) *
               C1577 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C32096) *
                C25610 +
            (C18709 * C50732 + C13219 * C32096) * C50843 +
            (C18863 * C50732 + C13376 * C32096) * C50854) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C32096 +
             C13057 * C50732) *
                C50854 +
            (C44649 + C44650) * C50843 + C44661 * C25610) *
               C1577 -
           (C46190 * C25610 + (C45301 + C45302) * C50843 +
            (C13058 * C50732 + C13057 * C32096) * C50854) *
               C50657) *
              C260 +
          (((C45302 + C45301) * C50854 + (C45300 + C45299) * C50843 +
            (C46191 + C46192) * C25610) *
               C50657 -
           (C45551 * C25610 + (C44652 + C44651) * C50843 +
            (C44650 + C44649) * C50854) *
               C1577) *
              C261 +
          ((C44661 * C50854 + (C44654 + C44653) * C50843 +
            (C45552 + C45553) * C25610) *
               C1577 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C32096) *
                C25610 +
            (C46192 + C46191) * C50843 + C46190 * C50854) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50593 * C50806 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50593 * C50629) *
              C50848 +
          (((C47319 + C47320 + C47321) * C22730 +
            (C47322 + C47323 + C47324) * C50708) *
               C50593 * C50629 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50593 * C50806) *
              C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
             C13376 * C50846 + C18863 * C38322) *
                C22730 +
            (C47617 + C47618 + C47619) * C50708) *
               C50593 * C50806 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C38322 +
             C13220 * C50846 + C11123 * C50855) *
                C50708 +
            (C47619 + C47618 + C47617) * C22730) *
               C50593 * C50629) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
              C13057 * C50846 + C13058 * C38322) *
                 C22730 +
             (C47313 + C47314 + C47315) * C50708) *
                C50807 -
            ((C47960 + C47961 + C47962) * C50708 +
             (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
                C50657) *
               C50806 +
           (((C47962 + C47961 + C47960) * C22730 +
             (C11387 * C50855 + C11687 * C50846 + C13983 * C38322) * C50708) *
                C50657 -
            ((C47316 + C47317 + C47318) * C50708 +
             (C47315 + C47314 + C47313) * C22730) *
                C50807) *
               C50629) *
              C263 +
          ((((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
             (C47963 + C47964 + C47965) * C50708) *
                C50657 -
            ((C47321 + C47320 + C47319) * C50708 +
             (C13060 * C38322 + C13059 * C50846 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                 C22730) *
                C50807) *
               C50806 +
           (((C47319 + C47320 + C47321) * C22730 +
             (C47322 + C47323 + C47324) * C50708) *
                C50807 -
            (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C38322 +
              C13062 * C50846 + C11390 * C50855) *
                 C50708 +
             (C47965 + C47964 + C47963) * C22730) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50593 * C260 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50593 * C261 +
           ((C47318 + C47317 + C47316) * C22730 +
            (C10883 * C50855 + C11386 * C50846 + C11688 * C38322) * C50708) *
               C50593 * C262) *
              C263 +
          (((C47319 + C47320 + C47321) * C22730 +
            (C47322 + C47323 + C47324) * C50708) *
               C50593 * C261 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50593 * C260 -
           (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C38322 +
             C11391 * C50846 + C10887 * C50855) *
                C50708 +
            (C47324 + C47323 + C47322) * C22730) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
            C13057 * C50846 + C13058 * C38322) *
               C22730 +
           (C10881 * C50855 + C11388 * C50846 + C11686 * C38322) * C50708) *
              C50593 * C50577 * C113 -
          ((C13061 * C38322 + C11389 * C50846 + C10885 * C50855) * C50708 +
           (C13060 * C38322 + C13059 * C50846 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
               C22730) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
            C13376 * C50846 + C18863 * C38322) *
               C22730 +
           (C11122 * C50855 + C13219 * C50846 + C18709 * C38322) * C50708) *
              C50593 * C50577 * C115 -
          (((C10728 * C1116 + C18239 + C18239 + C50527 * C1124) * C38322 +
            (C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50846 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50855) *
               C50708 +
           ((C10728 * C419 + C18240 + C18240 + C50527 * C439) * C38322 +
            (C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50846 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50855) *
               C22730) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C409 -
           ((C13982 * C38322 + C11686 * C50846 + C11388 * C50855) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C410 +
           ((C13058 * C50855 + C14878 * C50846 + C20353 * C38322) * C22730 +
            (C11686 * C50855 + C13982 * C50846 + C19463 * C38322) * C50708) *
               C411) *
              C50577 * C263 +
          (((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
            (C11389 * C50855 + C13061 * C50846 + C18556 * C38322) * C50708) *
               C410 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C409 -
           (((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C38322 +
             C18556 * C50846 + C13061 * C50855) *
                C50708 +
            (C21112 * C38322 + C18555 * C50846 + C13060 * C50855) * C22730) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50807 -
           ((C13982 * C38322 + C11686 * C50846 + C11388 * C50855) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50657) *
              C50577 * C50848 +
          (((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
            (C11389 * C50855 + C13061 * C50846 + C18556 * C38322) * C50708) *
               C50657 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50807) *
              C50577 * C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
             C13376 * C50846 + C18863 * C38322) *
                C22730 +
            (C47617 + C47618 + C47619) * C50708) *
               C50807 -
           (((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C38322 +
             C18709 * C50846 + C13219 * C50855) *
                C50708 +
            (C21314 * C38322 + C18863 * C50846 + C13376 * C50855) * C22730) *
               C50657) *
              C50577 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
            C13057 * C50846 + C13058 * C38322) *
               C22730 +
           (C10881 * C50855 + C11388 * C50846 + C11686 * C38322) * C50708) *
              C50593 * C50577 * C113 -
          ((C13061 * C38322 + C11389 * C50846 + C10885 * C50855) * C50708 +
           (C13060 * C38322 + C13059 * C50846 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
               C22730) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
            C13376 * C50846 + C18863 * C38322) *
               C22730 +
           (C11122 * C50855 + C13219 * C50846 + C18709 * C38322) * C50708) *
              C50593 * C50577 * C115 -
          (((C10728 * C1116 + C18239 + C18239 + C50527 * C1124) * C38322 +
            (C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50846 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50855) *
               C50708 +
           ((C10728 * C419 + C18240 + C18240 + C50527 * C439) * C38322 +
            (C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50846 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50855) *
               C22730) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50593 * C260 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50593 * C261 +
           ((C47318 + C47317 + C47316) * C22730 +
            (C10883 * C50855 + C11386 * C50846 + C11688 * C38322) * C50708) *
               C50593 * C262) *
              C263 +
          (((C47319 + C47320 + C47321) * C22730 +
            (C47322 + C47323 + C47324) * C50708) *
               C50593 * C261 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50593 * C260 -
           (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C38322 +
             C11391 * C50846 + C10887 * C50855) *
                C50708 +
            (C47324 + C47323 + C47322) * C22730) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50593 * C50850 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50593 * C50851 +
           ((C47318 + C47317 + C47316) * C22730 +
            (C48210 + C48211 + C48212) * C50708) *
               C50593 * C1232) *
              C50798 +
          (((C47319 + C47320 + C47321) * C22730 +
            (C47322 + C47323 + C47324) * C50708) *
               C50593 * C50851 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50593 * C50850 -
           (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C38322 +
             C11391 * C50846 + C10887 * C50855) *
                C50708 +
            (C47324 + C47323 + C47322) * C22730) *
               C50593 * C1232) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50807 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50657) *
              C50850 +
          (((C47962 + C47961 + C47960) * C22730 +
            (C48848 + C48849 + C48850) * C50708) *
               C50657 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50807) *
              C50851 +
          (((C47318 + C47317 + C47316) * C22730 +
            (C48210 + C48211 + C48212) * C50708) *
               C50807 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C38322 +
             C11688 * C50846 + C11386 * C50855) *
                C50708 +
            (C48850 + C48849 + C48848) * C22730) *
               C50657) *
              C1232) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
            C13057 * C50846 + C13058 * C38322) *
               C22730 +
           (C47313 + C47314 + C47315) * C50708) *
              C50593 * C997 -
          ((C47316 + C47317 + C47318) * C50708 +
           (C47315 + C47314 + C47313) * C22730) *
              C50593 * C998 +
          ((C47318 + C47317 + C47316) * C22730 +
           (C48210 + C48211 + C48212) * C50708) *
              C50593 * C999 -
          (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C38322 +
            C12026 * C50846 + C10884 * C50855) *
               C50708 +
           (C48212 + C48211 + C48210) * C22730) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50593 * C926 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50593 * C50629) *
              C928 +
          (((C47319 + C47320 + C47321) * C22730 +
            (C47322 + C47323 + C47324) * C50708) *
               C50593 * C50629 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
             C13376 * C50846 + C18863 * C38322) *
                C22730 +
            (C47617 + C47618 + C47619) * C50708) *
               C50593 * C926 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C38322 +
             C13220 * C50846 + C11123 * C50855) *
                C50708 +
            (C47619 + C47618 + C47617) * C22730) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C409 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C410 +
           ((C13058 * C50855 + C14878 * C50846 + C20353 * C38322) * C22730 +
            (C48359 + C48360 + C48361) * C50708) *
               C411) *
              C926 +
          (((C47962 + C47961 + C47960) * C22730 +
            (C11387 * C50855 + C11687 * C50846 + C13983 * C38322) * C50708) *
               C410 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C409 -
           (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C38322 +
             C13983 * C50846 + C11687 * C50855) *
                C50708 +
            (C48361 + C48360 + C48359) * C22730) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
              C13057 * C50846 + C13058 * C38322) *
                 C22730 +
             (C47313 + C47314 + C47315) * C50708) *
                C50807 -
            ((C47960 + C47961 + C47962) * C50708 +
             (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
                C50657) *
               C926 +
           (((C47962 + C47961 + C47960) * C22730 +
             (C11387 * C50855 + C11687 * C50846 + C13983 * C38322) * C50708) *
                C50657 -
            ((C47316 + C47317 + C47318) * C50708 +
             (C47315 + C47314 + C47313) * C22730) *
                C50807) *
               C50629) *
              C50798 +
          ((((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
             (C47963 + C47964 + C47965) * C50708) *
                C50657 -
            ((C47321 + C47320 + C47319) * C50708 +
             (C13060 * C38322 + C13059 * C50846 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                 C22730) *
                C50807) *
               C926 +
           (((C47319 + C47320 + C47321) * C22730 +
             (C47322 + C47323 + C47324) * C50708) *
                C50807 -
            (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C38322 +
              C13062 * C50846 + C11390 * C50855) *
                 C50708 +
             (C47965 + C47964 + C47963) * C22730) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50593 * C926 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50593 * C50629) *
              C928 +
          (((C47319 + C47320 + C47321) * C22730 +
            (C47322 + C47323 + C47324) * C50708) *
               C50593 * C50629 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
             C13376 * C50846 + C18863 * C38322) *
                C22730 +
            (C47617 + C47618 + C47619) * C50708) *
               C50593 * C926 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C38322 +
             C13220 * C50846 + C11123 * C50855) *
                C50708 +
            (C47619 + C47618 + C47617) * C22730) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
            C13057 * C50846 + C13058 * C38322) *
               C22730 +
           (C47313 + C47314 + C47315) * C50708) *
              C50593 * C997 -
          ((C47316 + C47317 + C47318) * C50708 +
           (C47315 + C47314 + C47313) * C22730) *
              C50593 * C998 +
          ((C47318 + C47317 + C47316) * C22730 +
           (C48210 + C48211 + C48212) * C50708) *
              C50593 * C999 -
          (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C38322 +
            C12026 * C50846 + C10884 * C50855) *
               C50708 +
           (C48212 + C48211 + C48210) * C22730) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
              C13057 * C50846 + C13058 * C38322) *
                 C22730 +
             (C47313 + C47314 + C47315) * C50708) *
                C1577 -
            ((C47960 + C47961 + C47962) * C50708 +
             (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
                C50657) *
               C50806 +
           (((C47962 + C47961 + C47960) * C22730 +
             (C48848 + C48849 + C48850) * C50708) *
                C50657 -
            ((C47316 + C47317 + C47318) * C50708 +
             (C47315 + C47314 + C47313) * C22730) *
                C1577) *
               C50629) *
              C50798 +
          ((((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
             (C47963 + C47964 + C47965) * C50708) *
                C50657 -
            ((C47321 + C47320 + C47319) * C50708 +
             (C13060 * C38322 + C13059 * C50846 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                 C22730) *
                C1577) *
               C50806 +
           (((C47319 + C47320 + C47321) * C22730 +
             (C47322 + C47323 + C47324) * C50708) *
                C1577 -
            (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C38322 +
              C13062 * C50846 + C11390 * C50855) *
                 C50708 +
             (C47965 + C47964 + C47963) * C22730) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50852 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50853 +
           ((C13058 * C50855 + C14878 * C50846 + C20353 * C38322) * C22730 +
            (C48359 + C48360 + C48361) * C50708) *
               C1993) *
              C50806 +
          (((C47962 + C47961 + C47960) * C22730 +
            (C48848 + C48849 + C48850) * C50708) *
               C50853 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C50852 -
           (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C38322 +
             C13983 * C50846 + C11687 * C50855) *
                C50708 +
            (C48361 + C48360 + C48359) * C22730) *
               C1993) *
              C50629) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50657) *
              C260 +
          (((C47962 + C47961 + C47960) * C22730 +
            (C48848 + C48849 + C48850) * C50708) *
               C50657 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C1577) *
              C261 +
          (((C47318 + C47317 + C47316) * C22730 +
            (C48210 + C48211 + C48212) * C50708) *
               C1577 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C38322 +
             C11688 * C50846 + C11386 * C50855) *
                C50708 +
            (C48850 + C48849 + C48848) * C22730) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
            (C47963 + C47964 + C47965) * C50708) *
               C50657 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
             C13376 * C50846 + C18863 * C38322) *
                C22730 +
            (C47617 + C47618 + C47619) * C50708) *
               C1577 -
           (((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C38322 +
             C18709 * C50846 + C13219 * C50855) *
                C50708 +
            (C21314 * C38322 + C18863 * C50846 + C13376 * C50855) * C22730) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
            C13057 * C50846 + C13058 * C38322) *
               C22730 +
           (C47313 + C47314 + C47315) * C50708) *
              C1743 -
          ((C47960 + C47961 + C47962) * C50708 +
           (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
              C1744 +
          ((C13058 * C50855 + C14878 * C50846 + C20353 * C38322) * C22730 +
           (C48359 + C48360 + C48361) * C50708) *
              C1745 -
          (((C10728 * C20343 + C20349 + C20349 + C50527 * C20345) * C38322 +
            C19463 * C50846 + C13982 * C50855) *
               C50708 +
           (C22303 * C38322 + C20353 * C50846 + C14878 * C50855) * C22730) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C50852 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50853 +
           ((C13058 * C50855 + C14878 * C50846 + C20353 * C38322) * C22730 +
            (C48359 + C48360 + C48361) * C50708) *
               C1993) *
              C50577 * C50798 +
          (((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
            (C47963 + C47964 + C47965) * C50708) *
               C50853 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C50852 -
           (((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C38322 +
             C18556 * C50846 + C13061 * C50855) *
                C50708 +
            (C21112 * C38322 + C18555 * C50846 + C13060 * C50855) * C22730) *
               C1993) *
              C50577 * C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C50855 + C13060 * C50846 + C18555 * C38322) * C22730 +
            (C47963 + C47964 + C47965) * C50708) *
               C50657 -
           ((C47321 + C47320 + C47319) * C50708 +
            (C13060 * C38322 + C13059 * C50846 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50855) *
                C22730) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50855 +
             C13376 * C50846 + C18863 * C38322) *
                C22730 +
            (C47617 + C47618 + C47619) * C50708) *
               C1577 -
           (((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C38322 +
             C18709 * C50846 + C13219 * C50855) *
                C50708 +
            (C21314 * C38322 + C18863 * C50846 + C13376 * C50855) * C22730) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50855 +
             C13057 * C50846 + C13058 * C38322) *
                C22730 +
            (C47313 + C47314 + C47315) * C50708) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50708 +
            (C14878 * C38322 + C13058 * C50846 + C13057 * C50855) * C22730) *
               C50657) *
              C260 +
          (((C47962 + C47961 + C47960) * C22730 +
            (C48848 + C48849 + C48850) * C50708) *
               C50657 -
           ((C47316 + C47317 + C47318) * C50708 +
            (C47315 + C47314 + C47313) * C22730) *
               C1577) *
              C261 +
          (((C47318 + C47317 + C47316) * C22730 +
            (C48210 + C48211 + C48212) * C50708) *
               C1577 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C38322 +
             C11688 * C50846 + C11386 * C50855) *
                C50708 +
            (C48850 + C48849 + C48848) * C22730) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C50593 * C50806 -
                   ((C8086 + C8087) * C50720 * C7850 +
                    (C8085 + C8084) * C50720 * C7849 +
                    (C8083 + C8082) * C50720 * C7848) *
                       C50593 * C50629) *
                      C50848 +
                  (((C8088 + C8089) * C50720 * C7848 +
                    (C8090 + C8091) * C50720 * C7849 +
                    (C8092 + C8093) * C50720 * C7850) *
                       C50593 * C50629 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C50806) *
                      C50849 +
                  (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C50720 * C7848 +
                    (C8432 + C8433) * C50720 * C7849 +
                    (C8434 + C8435) * C50720 * C7850) *
                       C50593 * C50806 -
                   ((C7853 * C1002 + C8422 + C8422 + C50532 * C1010 +
                     C7851 * C1003 + C8423 + C8423 + C50789 * C1011) *
                        C50720 * C7850 +
                    (C8435 + C8434) * C50720 * C7849 +
                    (C8433 + C8432) * C50720 * C7848) *
                       C50593 * C50629) *
                      C560)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50593 * C50806 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50720 * C50694 * C50593 * C50629) *
                      C50848 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50720 * C50694 * C50593 * C50629 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50593 * C50806) *
                      C50849 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50720 * C50694 * C50593 * C50806 -
                   (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 +
                    C566 + C566 + C107 * C293 + C119 * C265 + C567 + C567 +
                    C106 * C285 + C117 * C266 + C568 + C568 + C105 * C286) *
                       C50720 * C50694 * C50593 * C50629) *
                      C560)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C15818 + C15819) * C15463 + C15830 * C15464) *
                       C50694 * C50593 * C50806 -
                   ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
                    (C8083 + C8082) * C15462) *
                       C50694 * C50593 * C50629) *
                      C50848 +
                  (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                    (C7851 * C1118 + C8265 + C8265 + C50789 * C1126 +
                     C7853 * C1117 + C8264 + C8264 + C50532 * C1125) *
                        C15464) *
                       C50694 * C50593 * C50629 -
                   (C15831 * C15464 + (C15825 + C15824) * C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C50593 * C50806) *
                      C50849 +
                  (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C15462 +
                    (C7851 * C413 + C8587 + C8587 + C50789 * C433 +
                     C7853 * C412 + C8586 + C8586 + C50532 * C432) *
                        C15463 +
                    (C7851 * C418 + C15466 + C15466 + C50789 * C438 +
                     C7853 * C419 + C15467 + C15467 + C50532 * C439) *
                        C15464) *
                       C50694 * C50593 * C50806 -
                   ((C7853 * C1116 + C15978 + C15978 + C50532 * C1124 +
                     C7851 * C1117 + C15979 + C15979 + C50789 * C1125) *
                        C15464 +
                    (C7853 * C808 + C8584 + C8584 + C50532 * C818 +
                     C7851 * C807 + C8585 + C8585 + C50789 * C817) *
                        C15463 +
                    (C8433 + C8432) * C15462) *
                       C50694 * C50593 * C50629) *
                      C560)) /
                    (p * q * std::sqrt(p + q));
    d2ee[91] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50807 -
                    ((C8818 + C8819) * C50720 * C7850 +
                     (C8820 + C8821) * C50720 * C7849 +
                     (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                      C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                         C50720 * C7848) *
                        C50657) *
                       C50806 +
                   (((C8821 + C8820) * C50720 * C7848 +
                     (C8819 + C8818) * C50720 * C7849 +
                     (C7851 * C4091 + C8790 + C8790 + C50789 * C4097 +
                      C7853 * C4090 + C8791 + C8791 + C50532 * C4096) *
                         C50720 * C7850) *
                        C50657 -
                    ((C8086 + C8087) * C50720 * C7850 +
                     (C8085 + C8084) * C50720 * C7849 +
                     (C8083 + C8082) * C50720 * C7848) *
                        C50807) *
                       C50629) *
                      C263 +
                  ((((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                      C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                         C50720 * C7848 +
                     (C8822 + C8823) * C50720 * C7849 +
                     (C8824 + C8825) * C50720 * C7850) *
                        C50657 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50807) *
                       C50806 +
                   (((C8088 + C8089) * C50720 * C7848 +
                     (C8090 + C8091) * C50720 * C7849 +
                     (C8092 + C8093) * C50720 * C7850) *
                        C50807 -
                    ((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 +
                      C7851 * C4090 + C8801 + C8801 + C50789 * C4096) *
                         C50720 * C7850 +
                     (C8825 + C8824) * C50720 * C7849 +
                     (C8823 + C8822) * C50720 * C7848) *
                        C50657) *
                       C50629) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50807 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50720 * C50694 * C50657) *
                       C50806 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50720 * C50694 * C50657 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50720 * C50694 * C50807) *
                       C50629) *
                      C263 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50720 * C50694 * C50657 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50807) *
                       C50806 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50720 * C50694 * C50807 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50720 * C50694 * C50657) *
                       C50629) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C15462 +
                     (C15818 + C15819) * C15463 + C15830 * C15464) *
                        C50694 * C50807 -
                    ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
                     (C15819 + C15818) * C15462) *
                        C50694 * C50657) *
                       C50806 +
                   (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
                     (C7851 * C4508 + C10169 + C10169 + C50789 * C4514 +
                      C7853 * C4507 + C10168 + C10168 + C50532 * C4513) *
                         C15464) *
                        C50694 * C50657 -
                    ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
                     (C8083 + C8082) * C15462) *
                        C50694 * C50807) *
                       C50629) *
                      C263 +
                  ((((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
                     (C15828 + C15829) * C15464) *
                        C50694 * C50657 -
                    (C15831 * C15464 + (C15825 + C15824) * C15463 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C15462) *
                        C50694 * C50807) *
                       C50806 +
                   (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                     (C16352 + C16353) * C15464) *
                        C50694 * C50807 -
                    ((C7853 * C4506 + C16346 + C16346 + C50532 * C4512 +
                      C7851 * C4507 + C16347 + C16347 + C50789 * C4513) *
                         C15464 +
                     (C16353 + C16352) * C15463 + (C8823 + C8822) * C15462) *
                        C50694 * C50657) *
                       C50629) *
                      C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[92] += (0.5 * std::pow(Pi, 2.5) *
                     ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                       C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                       C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                          C50720 * C50694 * C50593 * C50577 * C113 -
                      (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                       C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                       C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                          C50720 * C50694 * C50593 * C50577 * C114 +
                      (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                       C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                       C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                          C50720 * C50694 * C50593 * C50577 * C115 -
                      (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 +
                       C160 + C160 + C107 * C144 + C119 * C129 + C161 + C161 +
                       C106 * C143 + C117 * C128 + C162 + C162 + C105 * C142) *
                          C50720 * C50694 * C50593 * C50577 * C116) +
                 0.5 * std::pow(Pi, 2.5) *
                     (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                        C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                        C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                           C50720 * C50694 * C50593 * C260 -
                       (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                        C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                        C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                           C50720 * C50694 * C50593 * C261 +
                       (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                        C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                        C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                           C50720 * C50694 * C50593 * C262) *
                          C263 +
                      ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                        C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                        C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                           C50720 * C50694 * C50593 * C261 -
                       (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                        C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                        C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                           C50720 * C50694 * C50593 * C260 -
                       (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                        C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                        C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                           C50720 * C50694 * C50593 * C262) *
                          C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C409 -
                   (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                    C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                    C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                       C50720 * C50694 * C410 +
                   (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 +
                    C448 + C448 + C106 * C437 + C121 * C418 + C449 + C449 +
                    C107 * C438 + C123 * C419 + C450 + C450 + C108 * C439) *
                       C50720 * C50694 * C411) *
                      C50577 * C263 +
                  ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                    C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                    C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                       C50720 * C50694 * C410 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C409 -
                   (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 +
                    C456 + C456 + C107 * C439 + C119 * C418 + C457 + C457 +
                    C106 * C438 + C117 * C417 + C458 + C458 + C105 * C437) *
                       C50720 * C50694 * C411) *
                      C50577 * C50564)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                    C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                       C50720 * C7848 +
                   (C7851 * C268 + C7858 + C7858 + C50789 * C288 +
                    C7853 * C267 + C7859 + C7859 + C50532 * C287) *
                       C50720 * C7849 +
                   (C7851 * C269 + C7860 + C7860 + C50789 * C289 +
                    C7853 * C270 + C7861 + C7861 + C50532 * C290) *
                       C50720 * C7850) *
                      C50593 * C50577 * C113 -
                  ((C7853 * C271 + C7862 + C7862 + C50532 * C291 +
                    C7851 * C270 + C7863 + C7863 + C50789 * C290) *
                       C50720 * C7850 +
                   (C7853 * C266 + C7864 + C7864 + C50532 * C286 +
                    C7851 * C267 + C7865 + C7865 + C50789 * C287) *
                       C50720 * C7849 +
                   (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                    C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                       C50720 * C7848) *
                      C50593 * C50577 * C114 +
                  ((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                    C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                       C50720 * C7848 +
                   (C7851 * C266 + C7870 + C7870 + C50789 * C286 +
                    C7853 * C265 + C7871 + C7871 + C50532 * C285) *
                       C50720 * C7849 +
                   (C7851 * C271 + C7872 + C7872 + C50789 * C291 +
                    C7853 * C272 + C7873 + C7873 + C50532 * C292) *
                       C50720 * C7850) *
                      C50593 * C50577 * C115 -
                  ((C7853 * C274 + C7874 + C7874 + C50532 * C294 +
                    C7851 * C272 + C7875 + C7875 + C50789 * C292) *
                       C50720 * C7850 +
                   (C7853 * C273 + C7876 + C7876 + C50532 * C293 +
                    C7851 * C265 + C7877 + C7877 + C50789 * C285) *
                       C50720 * C7849 +
                   (C7853 * C129 + C7878 + C7878 + C50532 * C143 +
                    C7851 * C128 + C7879 + C7879 + C50789 * C142) *
                       C50720 * C7848) *
                      C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C50593 * C260 -
                   ((C8086 + C8087) * C50720 * C7850 +
                    (C8085 + C8084) * C50720 * C7849 +
                    (C8083 + C8082) * C50720 * C7848) *
                       C50593 * C261 +
                   (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                    (C7851 * C3405 + C8040 + C8040 + C50789 * C3411 +
                     C7853 * C3404 + C8041 + C8041 + C50532 * C3410) *
                        C50720 * C7850) *
                       C50593 * C262) *
                      C263 +
                  (((C8088 + C8089) * C50720 * C7848 +
                    (C8090 + C8091) * C50720 * C7849 +
                    (C8092 + C8093) * C50720 * C7850) *
                       C50593 * C261 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C260 -
                   ((C7853 * C3403 + C8056 + C8056 + C50532 * C3409 +
                     C7851 * C3404 + C8057 + C8057 + C50789 * C3410) *
                        C50720 * C7850 +
                    (C8093 + C8092) * C50720 * C7849 + C8097 * C7848) *
                       C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C409 -
                   ((C7853 * C1465 + C8244 + C8244 + C50532 * C1473 +
                     C7851 * C1466 + C8245 + C8245 + C50789 * C1474) *
                        C50720 * C7850 +
                    (C7853 * C806 + C8246 + C8246 + C50532 * C816 +
                     C7851 * C805 + C8247 + C8247 + C50789 * C815) *
                        C50720 * C7849 +
                    (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                     C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                        C50720 * C7848) *
                       C410 +
                   ((C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                     C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                        C50720 * C7848 +
                    (C7851 * C1119 + C8252 + C8252 + C50789 * C1127 +
                     C7853 * C1118 + C8253 + C8253 + C50532 * C1126) *
                        C50720 * C7849 +
                    (C7851 * C3578 + C8254 + C8254 + C50789 * C3584 +
                     C7853 * C3577 + C8255 + C8255 + C50532 * C3583) *
                        C50720 * C7850) *
                       C411) *
                      C50577 * C263 +
                  (((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                     C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                        C50720 * C7848 +
                    (C7851 * C806 + C8258 + C8258 + C50789 * C816 +
                     C7853 * C807 + C8259 + C8259 + C50532 * C817) *
                        C50720 * C7849 +
                    (C7851 * C1465 + C8260 + C8260 + C50789 * C1473 +
                     C7853 * C1464 + C8261 + C8261 + C50532 * C1472) *
                        C50720 * C7850) *
                       C410 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C409 -
                   ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                     C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                        C50720 * C7850 +
                    (C7853 * C1117 + C8264 + C8264 + C50532 * C1125 +
                     C7851 * C1118 + C8265 + C8265 + C50789 * C1126) *
                        C50720 * C7849 +
                    (C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                     C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                        C50720 * C7848) *
                       C411) *
                      C50577 * C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                    C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                       C15462 +
                   (C7851 * C415 + C8249 + C8249 + C50789 * C435 +
                    C7853 * C414 + C8248 + C8248 + C50532 * C434) *
                       C15463 +
                   (C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                    C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                       C15464) *
                      C50694 * C50593 * C50577 * C113 -
                  ((C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                    C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                       C15464 +
                   (C7853 * C413 + C8257 + C8257 + C50532 * C433 +
                    C7851 * C414 + C8256 + C8256 + C50789 * C434) *
                       C15463 +
                   (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                    C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                       C15462) *
                      C50694 * C50593 * C50577 * C114 +
                  ((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                    C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                       C15462 +
                   (C7851 * C413 + C8587 + C8587 + C50789 * C433 +
                    C7853 * C412 + C8586 + C8586 + C50532 * C432) *
                       C15463 +
                   (C7851 * C418 + C15466 + C15466 + C50789 * C438 +
                    C7853 * C419 + C15467 + C15467 + C50532 * C439) *
                       C15464) *
                      C50694 * C50593 * C50577 * C115 -
                  ((C7853 * C421 + C15468 + C15468 + C50532 * C441 +
                    C7851 * C419 + C15469 + C15469 + C50789 * C439) *
                       C15464 +
                   (C7853 * C420 + C15470 + C15470 + C50532 * C440 +
                    C7851 * C412 + C15471 + C15471 + C50789 * C432) *
                       C15463 +
                   (C7853 * C129 + C7878 + C7878 + C50532 * C143 +
                    C7851 * C128 + C7879 + C7879 + C50789 * C142) *
                       C15462) *
                      C50694 * C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C7851 * C415 + C8249 + C8249 + C50789 * C435 +
                     C7853 * C414 + C8248 + C8248 + C50532 * C434) *
                        C15463 +
                    (C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                     C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                        C15464) *
                       C50694 * C50593 * C260 -
                   ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
                    (C8083 + C8082) * C15462) *
                       C50694 * C50593 * C261 +
                   (C8094 * C15462 + (C8819 + C8818) * C15463 +
                    (C9262 + C9263) * C15464) *
                       C50694 * C50593 * C262) *
                      C263 +
                  (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                    (C7851 * C1118 + C8265 + C8265 + C50789 * C1126 +
                     C7853 * C1117 + C8264 + C8264 + C50532 * C1125) *
                        C15464) *
                       C50694 * C50593 * C261 -
                   ((C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                     C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                        C15464 +
                    (C7853 * C413 + C8257 + C8257 + C50532 * C433 +
                     C7851 * C414 + C8256 + C8256 + C50789 * C434) *
                        C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C50593 * C260 -
                   ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                     C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                        C15464 +
                    (C8825 + C8824) * C15463 + C8095 * C15462) *
                       C50694 * C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C15818 + C15819) * C15463 + C15830 * C15464) *
                       C50694 * C409 -
                   ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
                    (C15819 + C15818) * C15462) *
                       C50694 * C410 +
                   (C15830 * C15462 + (C15823 + C15822) * C15463 +
                    (C7851 * C7237 + C15776 + C15776 + C50789 * C7243 +
                     C7853 * C7236 + C15777 + C15777 + C50532 * C7242) *
                        C15464) *
                       C50694 * C411) *
                      C50577 * C263 +
                  (((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
                    (C15828 + C15829) * C15464) *
                       C50694 * C410 -
                   (C15831 * C15464 + (C15825 + C15824) * C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C409 -
                   ((C7853 * C7235 + C15792 + C15792 + C50532 * C7241 +
                     C7851 * C7236 + C15793 + C15793 + C50789 * C7242) *
                        C15464 +
                    (C15829 + C15828) * C15463 + C15831 * C15462) *
                       C50694 * C411) *
                      C50577 * C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C50807 -
                   ((C7853 * C1465 + C8244 + C8244 + C50532 * C1473 +
                     C7851 * C1466 + C8245 + C8245 + C50789 * C1474) *
                        C50720 * C7850 +
                    (C7853 * C806 + C8246 + C8246 + C50532 * C816 +
                     C7851 * C805 + C8247 + C8247 + C50789 * C815) *
                        C50720 * C7849 +
                    (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                     C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                        C50720 * C7848) *
                       C50657) *
                      C50577 * C50848 +
                  (((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                     C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                        C50720 * C7848 +
                    (C7851 * C806 + C8258 + C8258 + C50789 * C816 +
                     C7853 * C807 + C8259 + C8259 + C50532 * C817) *
                        C50720 * C7849 +
                    (C7851 * C1465 + C8260 + C8260 + C50789 * C1473 +
                     C7853 * C1464 + C8261 + C8261 + C50532 * C1472) *
                        C50720 * C7850) *
                       C50657 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50807) *
                      C50577 * C50849 +
                  (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C50720 * C7848 +
                    (C8432 + C8433) * C50720 * C7849 +
                    (C8434 + C8435) * C50720 * C7850) *
                       C50807 -
                   ((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 +
                     C7851 * C1464 + C8583 + C8583 + C50789 * C1472) *
                        C50720 * C7850 +
                    (C7853 * C808 + C8584 + C8584 + C50532 * C818 +
                     C7851 * C807 + C8585 + C8585 + C50789 * C817) *
                        C50720 * C7849 +
                    (C7853 * C412 + C8586 + C8586 + C50532 * C432 +
                     C7851 * C413 + C8587 + C8587 + C50789 * C433) *
                        C50720 * C7848) *
                       C50657) *
                      C50577 * C560)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50807 -
                   (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                    C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                    C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                       C50720 * C50694 * C50657) *
                      C50577 * C50848 +
                  ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                    C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                    C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                       C50720 * C50694 * C50657 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50807) *
                      C50577 * C50849 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50720 * C50694 * C50807 -
                   (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 +
                    C673 + C673 + C107 * C440 + C119 * C412 + C674 + C674 +
                    C106 * C432 + C117 * C413 + C675 + C675 + C105 * C433) *
                       C50720 * C50694 * C50657) *
                      C50577 * C560)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C15818 + C15819) * C15463 + C15830 * C15464) *
                       C50694 * C50807 -
                   ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
                    (C15819 + C15818) * C15462) *
                       C50694 * C50657) *
                      C50577 * C50848 +
                  (((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
                    (C15828 + C15829) * C15464) *
                       C50694 * C50657 -
                   (C15831 * C15464 + (C15825 + C15824) * C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C50807) *
                      C50577 * C50849 +
                  (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C15462 +
                    (C16144 + C16145) * C15463 + (C16146 + C16147) * C15464) *
                       C50694 * C50807 -
                   ((C7853 * C1747 + C16134 + C16134 + C50532 * C1755 +
                     C7851 * C1748 + C16135 + C16135 + C50789 * C1756) *
                        C15464 +
                    (C16147 + C16146) * C15463 + (C16145 + C16144) * C15462) *
                       C50694 * C50657) *
                      C50577 * C560)) /
                    (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50593 * C260 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50720 * C50694 * C50593 * C261 +
                   (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                    C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                    C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                       C50720 * C50694 * C50593 * C262) *
                      C263 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50720 * C50694 * C50593 * C261 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50593 * C260 -
                   (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                    C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                    C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                       C50720 * C50694 * C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                   C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                   C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                      C50720 * C50694 * C50593 * C50577 * C113 -
                  (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                   C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                   C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                      C50720 * C50694 * C50593 * C50577 * C114 +
                  (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                   C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                   C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                      C50720 * C50694 * C50593 * C50577 * C115 -
                  (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 +
                   C160 + C160 + C107 * C144 + C119 * C129 + C161 + C161 +
                   C106 * C143 + C117 * C128 + C162 + C162 + C105 * C142) *
                      C50720 * C50694 * C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                    C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                       C50720 * C7848 +
                   (C7851 * C268 + C7858 + C7858 + C50789 * C288 +
                    C7853 * C267 + C7859 + C7859 + C50532 * C287) *
                       C50720 * C7849 +
                   (C7851 * C269 + C7860 + C7860 + C50789 * C289 +
                    C7853 * C270 + C7861 + C7861 + C50532 * C290) *
                       C50720 * C7850) *
                      C50593 * C50577 * C113 -
                  ((C7853 * C271 + C7862 + C7862 + C50532 * C291 +
                    C7851 * C270 + C7863 + C7863 + C50789 * C290) *
                       C50720 * C7850 +
                   (C7853 * C266 + C7864 + C7864 + C50532 * C286 +
                    C7851 * C267 + C7865 + C7865 + C50789 * C287) *
                       C50720 * C7849 +
                   (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                    C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                       C50720 * C7848) *
                      C50593 * C50577 * C114 +
                  ((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                    C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                       C50720 * C7848 +
                   (C7851 * C266 + C7870 + C7870 + C50789 * C286 +
                    C7853 * C265 + C7871 + C7871 + C50532 * C285) *
                       C50720 * C7849 +
                   (C7851 * C271 + C7872 + C7872 + C50789 * C291 +
                    C7853 * C272 + C7873 + C7873 + C50532 * C292) *
                       C50720 * C7850) *
                      C50593 * C50577 * C115 -
                  ((C7853 * C274 + C7874 + C7874 + C50532 * C294 +
                    C7851 * C272 + C7875 + C7875 + C50789 * C292) *
                       C50720 * C7850 +
                   (C7853 * C273 + C7876 + C7876 + C50532 * C293 +
                    C7851 * C265 + C7877 + C7877 + C50789 * C285) *
                       C50720 * C7849 +
                   (C7853 * C129 + C7878 + C7878 + C50532 * C143 +
                    C7851 * C128 + C7879 + C7879 + C50789 * C142) *
                       C50720 * C7848) *
                      C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C50593 * C260 -
                   ((C8086 + C8087) * C50720 * C7850 +
                    (C8085 + C8084) * C50720 * C7849 +
                    (C8083 + C8082) * C50720 * C7848) *
                       C50593 * C261 +
                   (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                    (C7851 * C3405 + C8040 + C8040 + C50789 * C3411 +
                     C7853 * C3404 + C8041 + C8041 + C50532 * C3410) *
                        C50720 * C7850) *
                       C50593 * C262) *
                      C263 +
                  (((C8088 + C8089) * C50720 * C7848 +
                    (C8090 + C8091) * C50720 * C7849 +
                    (C8092 + C8093) * C50720 * C7850) *
                       C50593 * C261 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C260 -
                   ((C7853 * C3403 + C8056 + C8056 + C50532 * C3409 +
                     C7851 * C3404 + C8057 + C8057 + C50789 * C3410) *
                        C50720 * C7850 +
                    (C8093 + C8092) * C50720 * C7849 + C8097 * C7848) *
                       C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                    C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                       C15462 +
                   (C7851 * C415 + C8249 + C8249 + C50789 * C435 +
                    C7853 * C414 + C8248 + C8248 + C50532 * C434) *
                       C15463 +
                   (C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                    C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                       C15464) *
                      C50694 * C50593 * C50577 * C113 -
                  ((C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                    C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                       C15464 +
                   (C7853 * C413 + C8257 + C8257 + C50532 * C433 +
                    C7851 * C414 + C8256 + C8256 + C50789 * C434) *
                       C15463 +
                   (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                    C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                       C15462) *
                      C50694 * C50593 * C50577 * C114 +
                  ((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                    C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                       C15462 +
                   (C7851 * C413 + C8587 + C8587 + C50789 * C433 +
                    C7853 * C412 + C8586 + C8586 + C50532 * C432) *
                       C15463 +
                   (C7851 * C418 + C15466 + C15466 + C50789 * C438 +
                    C7853 * C419 + C15467 + C15467 + C50532 * C439) *
                       C15464) *
                      C50694 * C50593 * C50577 * C115 -
                  ((C7853 * C421 + C15468 + C15468 + C50532 * C441 +
                    C7851 * C419 + C15469 + C15469 + C50789 * C439) *
                       C15464 +
                   (C7853 * C420 + C15470 + C15470 + C50532 * C440 +
                    C7851 * C412 + C15471 + C15471 + C50789 * C432) *
                       C15463 +
                   (C7853 * C129 + C7878 + C7878 + C50532 * C143 +
                    C7851 * C128 + C7879 + C7879 + C50789 * C142) *
                       C15462) *
                      C50694 * C50593 * C50577 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C7851 * C415 + C8249 + C8249 + C50789 * C435 +
                     C7853 * C414 + C8248 + C8248 + C50532 * C434) *
                        C15463 +
                    (C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                     C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                        C15464) *
                       C50694 * C50593 * C260 -
                   ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
                    (C8083 + C8082) * C15462) *
                       C50694 * C50593 * C261 +
                   (C8094 * C15462 + (C8819 + C8818) * C15463 +
                    (C9262 + C9263) * C15464) *
                       C50694 * C50593 * C262) *
                      C263 +
                  (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                    (C7851 * C1118 + C8265 + C8265 + C50789 * C1126 +
                     C7853 * C1117 + C8264 + C8264 + C50532 * C1125) *
                        C15464) *
                       C50694 * C50593 * C261 -
                   ((C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                     C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                        C15464 +
                    (C7853 * C413 + C8257 + C8257 + C50532 * C433 +
                     C7851 * C414 + C8256 + C8256 + C50789 * C434) *
                        C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C50593 * C260 -
                   ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                     C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                        C15464 +
                    (C8825 + C8824) * C15463 + C8095 * C15462) *
                       C50694 * C50593 * C262) *
                      C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C50593 * C50850 -
                   (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                    (C8083 + C8082) * C50720 * C7848) *
                       C50593 * C50851 +
                   (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                    (C9088 + C9089) * C50720 * C7850) *
                       C50593 * C1232) *
                      C50798 +
                  (((C8088 + C8089) * C50720 * C7848 +
                    (C8090 + C8091) * C50720 * C7849 +
                    (C8092 + C8093) * C50720 * C7850) *
                       C50593 * C50851 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C50850 -
                   ((C7853 * C3403 + C8056 + C8056 + C50532 * C3409 +
                     C7851 * C3404 + C8057 + C8057 + C50789 * C3410) *
                        C50720 * C7850 +
                    (C8093 + C8092) * C50720 * C7849 + C8097 * C7848) *
                       C50593 * C1232) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50593 * C50850 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50720 * C50694 * C50593 * C50851 +
                   (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                    C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                    C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                       C50720 * C50694 * C50593 * C1232) *
                      C50798 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50720 * C50694 * C50593 * C50851 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50593 * C50850 -
                   (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                    C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                    C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                       C50720 * C50694 * C50593 * C1232) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C15818 + C15819) * C15463 + C15830 * C15464) *
                       C50694 * C50593 * C50850 -
                   (C16751 * C15464 + (C8820 + C8821) * C15463 +
                    (C8083 + C8082) * C15462) *
                       C50694 * C50593 * C50851 +
                   (C8094 * C15462 + (C8819 + C8818) * C15463 +
                    (C9262 + C9263) * C15464) *
                       C50694 * C50593 * C1232) *
                      C50798 +
                  (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                    (C16352 + C16353) * C15464) *
                       C50694 * C50593 * C50851 -
                   (C15831 * C15464 + (C15825 + C15824) * C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C50593 * C50850 -
                   ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                     C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                        C15464 +
                    (C8825 + C8824) * C15463 + C8095 * C15462) *
                       C50694 * C50593 * C1232) *
                      C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50807 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C50850 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50657 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50807) *
              C50851 +
          ((C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
            (C9088 + C9089) * C50720 * C7850) *
               C50807 -
           ((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50720 * C7850 +
            (C9769 + C9768) * C50720 * C7849 + C9763 * C7848) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C50807 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C50850 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50657 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C50807) *
              C50851 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50720 * C50694 * C50807 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50720 * C50694 * C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C50807 -
           ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C50657) *
              C50850 +
          (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
            (C16758 + C16759) * C15464) *
               C50694 * C50657 -
           (C16751 * C15464 + (C8820 + C8821) * C15463 +
            (C8083 + C8082) * C15462) *
               C50694 * C50807) *
              C50851 +
          ((C8094 * C15462 + (C8819 + C8818) * C15463 +
            (C9262 + C9263) * C15464) *
               C50694 * C50807 -
           ((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
             C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
                C15464 +
            (C9263 + C9262) * C15463 + C9756 * C15462) *
               C50694 * C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50720 * C50694 * C50593 * C926 -
               (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
                C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
                C117 * C268 + C299 + C299 + C105 * C288) *
                   C50720 * C50694 * C50593 * C50629) *
                  C928 +
              ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
                C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
                C123 * C273 + C307 + C307 + C108 * C293) *
                   C50720 * C50694 * C50593 * C50629 -
               (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
                C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
                C117 * C126 + C154 + C154 + C105 * C140) *
                   C50720 * C50694 * C50593 * C926) *
                  C929 +
              ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
                C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
                C123 * C130 + C158 + C158 + C108 * C144) *
                   C50720 * C50694 * C50593 * C926 -
               (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 + C566 +
                C566 + C107 * C293 + C119 * C265 + C567 + C567 + C106 * C285 +
                C117 * C266 + C568 + C568 + C105 * C286) *
                   C50720 * C50694 * C50593 * C50629) *
                  C930) +
         0.5 * std::pow(Pi, 2.5) *
             ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
               C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
               C123 * C128 + C150 + C150 + C108 * C142) *
                  C50720 * C50694 * C50593 * C997 -
              (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
               C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
               C117 * C268 + C299 + C299 + C105 * C288) *
                  C50720 * C50694 * C50593 * C998 +
              (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
               C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
               C123 * C272 + C303 + C303 + C108 * C292) *
                  C50720 * C50694 * C50593 * C999 -
              (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 +
               C1016 + C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 +
               C106 * C1012 + C117 * C1005 + C1018 + C1018 + C105 * C1013) *
                  C50720 * C50694 * C50593 * C1000) *
             C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C409 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C410 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50720 * C50694 * C411) *
              C926 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C410 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C409 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50720 * C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50593 * C926 -
           ((C8086 + C8087) * C50720 * C7850 +
            (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50593 * C50629) *
              C928 +
          (((C8088 + C8089) * C50720 * C7848 +
            (C8090 + C8091) * C50720 * C7849 +
            (C8092 + C8093) * C50720 * C7850) *
               C50593 * C50629 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C50593 * C926) *
              C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C50593 * C926 -
           ((C7853 * C1002 + C8422 + C8422 + C50532 * C1010 + C7851 * C1003 +
             C8423 + C8423 + C50789 * C1011) *
                C50720 * C7850 +
            (C8435 + C8434) * C50720 * C7849 +
            (C8433 + C8432) * C50720 * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C50720 * C7848 +
           (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
              C50593 * C997 -
          (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
           (C8083 + C8082) * C50720 * C7848) *
              C50593 * C998 +
          (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
           (C9088 + C9089) * C50720 * C7850) *
              C50593 * C999 -
          ((C7853 * C9069 + C9081 + C9081 + C50532 * C9073 + C7851 * C9070 +
            C9082 + C9082 + C50789 * C9074) *
               C50720 * C7850 +
           (C9089 + C9088) * C50720 * C7849 + C9083 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C409 -
           ((C8818 + C8819) * C50720 * C7850 +
            (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C410 +
           ((C7851 * C416 + C8250 + C8250 + C50789 * C436 + C7853 * C417 +
             C8251 + C8251 + C50532 * C437) *
                C50720 * C7848 +
            (C9260 + C9261) * C50720 * C7849 +
            (C9262 + C9263) * C50720 * C7850) *
               C411) *
              C926 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C7851 * C4091 + C8790 + C8790 + C50789 * C4097 + C7853 * C4090 +
             C8791 + C8791 + C50532 * C4096) *
                C50720 * C7850) *
               C410 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C409 -
           ((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
             C9251 + C9251 + C50789 * C9240) *
                C50720 * C7850 +
            (C9263 + C9262) * C50720 * C7849 +
            (C9261 + C9260) * C50720 * C7848) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C50593 * C926 -
           ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
            (C8083 + C8082) * C15462) *
               C50694 * C50593 * C50629) *
              C928 +
          (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
            (C16352 + C16353) * C15464) *
               C50694 * C50593 * C50629 -
           (C15831 * C15464 + (C15825 + C15824) * C15463 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C15462) *
               C50694 * C50593 * C926) *
              C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C15462 +
            (C16144 + C16145) * C15463 + (C16146 + C16147) * C15464) *
               C50694 * C50593 * C926 -
           ((C7853 * C1116 + C15978 + C15978 + C50532 * C1124 + C7851 * C1117 +
             C15979 + C15979 + C50789 * C1125) *
                C15464 +
            (C7853 * C808 + C8584 + C8584 + C50532 * C818 + C7851 * C807 +
             C8585 + C8585 + C50789 * C817) *
                C15463 +
            (C8433 + C8432) * C15462) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C15462 +
           (C15818 + C15819) * C15463 + C15830 * C15464) *
              C50694 * C50593 * C997 -
          ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
           (C8083 + C8082) * C15462) *
              C50694 * C50593 * C998 +
          (C8094 * C15462 + (C8819 + C8818) * C15463 +
           (C9262 + C9263) * C15464) *
              C50694 * C50593 * C999 -
          ((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
            C9251 + C9251 + C50789 * C9240) *
               C15464 +
           (C9769 + C9768) * C15463 + C9076 * C15462) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C409 -
           ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C410 +
           (C15830 * C15462 + (C15823 + C15822) * C15463 +
            (C7851 * C7237 + C15776 + C15776 + C50789 * C7243 + C7853 * C7236 +
             C15777 + C15777 + C50532 * C7242) *
                C15464) *
               C50694 * C411) *
              C926 +
          (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
            (C16758 + C16759) * C15464) *
               C50694 * C410 -
           (C16751 * C15464 + (C8820 + C8821) * C15463 +
            (C8083 + C8082) * C15462) *
               C50694 * C409 -
           ((C7853 * C16743 + C16752 + C16752 + C50532 * C16745 +
             C7851 * C14865 + C16753 + C16753 + C50789 * C14869) *
                C15464 +
            (C16759 + C16758) * C15463 + C16751 * C15462) *
               C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[98] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50807 -
                    ((C8818 + C8819) * C50720 * C7850 +
                     (C8820 + C8821) * C50720 * C7849 +
                     (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                      C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                         C50720 * C7848) *
                        C50657) *
                       C926 +
                   (((C8821 + C8820) * C50720 * C7848 +
                     (C8819 + C8818) * C50720 * C7849 +
                     (C7851 * C4091 + C8790 + C8790 + C50789 * C4097 +
                      C7853 * C4090 + C8791 + C8791 + C50532 * C4096) *
                         C50720 * C7850) *
                        C50657 -
                    (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                     (C8083 + C8082) * C50720 * C7848) *
                        C50807) *
                       C50629) *
                      C50798 +
                  ((((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                      C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                         C50720 * C7848 +
                     (C8822 + C8823) * C50720 * C7849 +
                     (C8824 + C8825) * C50720 * C7850) *
                        C50657 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50807) *
                       C926 +
                   (((C8088 + C8089) * C50720 * C7848 +
                     (C8090 + C8091) * C50720 * C7849 +
                     (C8092 + C8093) * C50720 * C7850) *
                        C50807 -
                    ((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 +
                      C7851 * C4090 + C8801 + C8801 + C50789 * C4096) *
                         C50720 * C7850 +
                     (C8825 + C8824) * C50720 * C7849 +
                     (C8823 + C8822) * C50720 * C7848) *
                        C50657) *
                       C50629) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50807 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50720 * C50694 * C50657) *
                       C926 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50720 * C50694 * C50657 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50720 * C50694 * C50807) *
                       C50629) *
                      C50798 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50720 * C50694 * C50657 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50807) *
                       C926 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50720 * C50694 * C50807 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50720 * C50694 * C50657) *
                       C50629) *
                      C50564)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C15462 +
                     (C15818 + C15819) * C15463 + C15830 * C15464) *
                        C50694 * C50807 -
                    ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
                     (C15819 + C15818) * C15462) *
                        C50694 * C50657) *
                       C926 +
                   (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
                     (C16758 + C16759) * C15464) *
                        C50694 * C50657 -
                    (C16751 * C15464 + (C8820 + C8821) * C15463 +
                     (C8083 + C8082) * C15462) *
                        C50694 * C50807) *
                       C50629) *
                      C50798 +
                  ((((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
                     (C15828 + C15829) * C15464) *
                        C50694 * C50657 -
                    (C15831 * C15464 + (C15825 + C15824) * C15463 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C15462) *
                        C50694 * C50807) *
                       C926 +
                   (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                     (C16352 + C16353) * C15464) *
                        C50694 * C50807 -
                    ((C7853 * C4506 + C16346 + C16346 + C50532 * C4512 +
                      C7851 * C4507 + C16347 + C16347 + C50789 * C4513) *
                         C15464 +
                     (C16353 + C16352) * C15463 + (C8823 + C8822) * C15462) *
                        C50694 * C50657) *
                       C50629) *
                      C50564)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                   C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                   C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                      C50720 * C50694 * C50593 * C997 -
                  (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                   C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                   C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                      C50720 * C50694 * C50593 * C998 +
                  (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                   C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                   C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                      C50720 * C50694 * C50593 * C999 -
                  (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 +
                   C1016 + C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 +
                   C106 * C1012 + C117 * C1005 + C1018 + C1018 + C105 * C1013) *
                      C50720 * C50694 * C50593 * C1000) *
                 C50558) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50593 * C926 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50720 * C50694 * C50593 * C50629) *
                      C928 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50720 * C50694 * C50593 * C50629 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50593 * C926) *
                      C929 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50720 * C50694 * C50593 * C926 -
                   (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 +
                    C566 + C566 + C107 * C293 + C119 * C265 + C567 + C567 +
                    C106 * C285 + C117 * C266 + C568 + C568 + C105 * C286) *
                       C50720 * C50694 * C50593 * C50629) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                       C50593 * C926 -
                   ((C8086 + C8087) * C50720 * C7850 +
                    (C8085 + C8084) * C50720 * C7849 +
                    (C8083 + C8082) * C50720 * C7848) *
                       C50593 * C50629) *
                      C928 +
                  (((C8088 + C8089) * C50720 * C7848 +
                    (C8090 + C8091) * C50720 * C7849 +
                    (C8092 + C8093) * C50720 * C7850) *
                       C50593 * C50629 -
                   (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C926) *
                      C929 +
                  (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C50720 * C7848 +
                    (C8432 + C8433) * C50720 * C7849 +
                    (C8434 + C8435) * C50720 * C7850) *
                       C50593 * C926 -
                   ((C7853 * C1002 + C8422 + C8422 + C50532 * C1010 +
                     C7851 * C1003 + C8423 + C8423 + C50789 * C1011) *
                        C50720 * C7850 +
                    (C8435 + C8434) * C50720 * C7849 +
                    (C8433 + C8432) * C50720 * C7848) *
                       C50593 * C50629) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                    C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                       C50720 * C7848 +
                   (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                      C50593 * C997 -
                  (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                   (C8083 + C8082) * C50720 * C7848) *
                      C50593 * C998 +
                  (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                   (C9088 + C9089) * C50720 * C7850) *
                      C50593 * C999 -
                  ((C7853 * C9069 + C9081 + C9081 + C50532 * C9073 +
                    C7851 * C9070 + C9082 + C9082 + C50789 * C9074) *
                       C50720 * C7850 +
                   (C9089 + C9088) * C50720 * C7849 + C9083 * C7848) *
                      C50593 * C1000) *
                 C50558) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C15462 +
                    (C15818 + C15819) * C15463 + C15830 * C15464) *
                       C50694 * C50593 * C926 -
                   ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
                    (C8083 + C8082) * C15462) *
                       C50694 * C50593 * C50629) *
                      C928 +
                  (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                    (C16352 + C16353) * C15464) *
                       C50694 * C50593 * C50629 -
                   (C15831 * C15464 + (C15825 + C15824) * C15463 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C15462) *
                       C50694 * C50593 * C926) *
                      C929 +
                  (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C15462 +
                    (C16144 + C16145) * C15463 + (C16146 + C16147) * C15464) *
                       C50694 * C50593 * C926 -
                   ((C7853 * C1116 + C15978 + C15978 + C50532 * C1124 +
                     C7851 * C1117 + C15979 + C15979 + C50789 * C1125) *
                        C15464 +
                    (C7853 * C808 + C8584 + C8584 + C50532 * C818 +
                     C7851 * C807 + C8585 + C8585 + C50789 * C817) *
                        C15463 +
                    (C8433 + C8432) * C15462) *
                       C50694 * C50593 * C50629) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                    C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                       C15462 +
                   (C15818 + C15819) * C15463 + C15830 * C15464) *
                      C50694 * C50593 * C997 -
                  ((C9261 + C9260) * C15464 + (C8820 + C8821) * C15463 +
                   (C8083 + C8082) * C15462) *
                      C50694 * C50593 * C998 +
                  (C8094 * C15462 + (C8819 + C8818) * C15463 +
                   (C9262 + C9263) * C15464) *
                      C50694 * C50593 * C999 -
                  ((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 +
                    C7851 * C9236 + C9251 + C9251 + C50789 * C9240) *
                       C15464 +
                   (C9769 + C9768) * C15463 + C9076 * C15462) *
                      C50694 * C50593 * C1000) *
                 C50558) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                       C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                          C50720 * C7848 +
                      (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                         C1577 -
                     (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
                      (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                       C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                          C50720 * C7848) *
                         C50657) *
                        C50806 +
                    (((C8821 + C8820) * C50720 * C7848 +
                      (C8819 + C8818) * C50720 * C7849 +
                      (C9768 + C9769) * C50720 * C7850) *
                         C50657 -
                     (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                      (C8083 + C8082) * C50720 * C7848) *
                         C1577) *
                        C50629) *
                       C50798 +
                   ((((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                       C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                          C50720 * C7848 +
                      (C8822 + C8823) * C50720 * C7849 +
                      (C8824 + C8825) * C50720 * C7850) *
                         C50657 -
                     (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                      (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                       C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                          C50720 * C7848) *
                         C1577) *
                        C50806 +
                    (((C8088 + C8089) * C50720 * C7848 +
                      (C8090 + C8091) * C50720 * C7849 +
                      (C8092 + C8093) * C50720 * C7850) *
                         C1577 -
                     ((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 +
                       C7851 * C4090 + C8801 + C8801 + C50789 * C4096) *
                          C50720 * C7850 +
                      (C8825 + C8824) * C50720 * C7849 +
                      (C8823 + C8822) * C50720 * C7848) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                      C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                      C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                         C50720 * C50694 * C1577 -
                     (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                      C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                      C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                         C50720 * C50694 * C50657) *
                        C50806 +
                    ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                      C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                      C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                         C50720 * C50694 * C50657 -
                     (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                      C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                      C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                         C50720 * C50694 * C1577) *
                        C50629) *
                       C50798 +
                   (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                      C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                      C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                         C50720 * C50694 * C50657 -
                     (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                      C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                      C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                         C50720 * C50694 * C1577) *
                        C50806 +
                    ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                      C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                      C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                         C50720 * C50694 * C1577 -
                     (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                      C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                      C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                         C50720 * C50694 * C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                       C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                          C15462 +
                      (C15818 + C15819) * C15463 + C15830 * C15464) *
                         C50694 * C1577 -
                     (C17642 * C15464 + (C15821 + C15820) * C15463 +
                      (C15819 + C15818) * C15462) *
                         C50694 * C50657) *
                        C50806 +
                    (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
                      (C16758 + C16759) * C15464) *
                         C50694 * C50657 -
                     (C16751 * C15464 + (C8820 + C8821) * C15463 +
                      (C8083 + C8082) * C15462) *
                         C50694 * C1577) *
                        C50629) *
                       C50798 +
                   ((((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
                      (C15828 + C15829) * C15464) *
                         C50694 * C50657 -
                     (C15831 * C15464 + (C15825 + C15824) * C15463 +
                      (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                       C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                          C15462) *
                         C50694 * C1577) *
                        C50806 +
                    (((C8088 + C8089) * C15462 + (C8822 + C8823) * C15463 +
                      (C16352 + C16353) * C15464) *
                         C50694 * C1577 -
                     ((C7853 * C4506 + C16346 + C16346 + C50532 * C4512 +
                       C7851 * C4507 + C16347 + C16347 + C50789 * C4513) *
                          C15464 +
                      (C16353 + C16352) * C15463 + (C8823 + C8822) * C15462) *
                         C50694 * C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50852 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50853 +
           ((C7851 * C416 + C8250 + C8250 + C50789 * C436 + C7853 * C417 +
             C8251 + C8251 + C50532 * C437) *
                C50720 * C7848 +
            (C9260 + C9261) * C50720 * C7849 +
            (C9262 + C9263) * C50720 * C7850) *
               C1993) *
              C50806 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50853 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50852 -
           ((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
             C9251 + C9251 + C50789 * C9240) *
                C50720 * C7850 +
            (C9263 + C9262) * C50720 * C7849 +
            (C9261 + C9260) * C50720 * C7848) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C50852 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50853 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50720 * C50694 * C1993) *
              C50806 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50853 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C50852 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50720 * C50694 * C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C50852 -
           (C17642 * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C50853 +
           (C15830 * C15462 + (C15823 + C15822) * C15463 +
            (C17653 + C17654) * C15464) *
               C50694 * C1993) *
              C50806 +
          (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
            (C16758 + C16759) * C15464) *
               C50694 * C50853 -
           (C16751 * C15464 + (C8820 + C8821) * C15463 +
            (C8083 + C8082) * C15462) *
               C50694 * C50852 -
           ((C7853 * C16743 + C16752 + C16752 + C50532 * C16745 +
             C7851 * C14865 + C16753 + C16753 + C50789 * C14869) *
                C15464 +
            (C16759 + C16758) * C15463 + C16751 * C15462) *
               C50694 * C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50720 * C50694 * C1577 -
               (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
                C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
                C117 * C415 + C446 + C446 + C105 * C435) *
                   C50720 * C50694 * C50657) *
                  C50577 * C928 +
              ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
                C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
                C123 * C420 + C454 + C454 + C108 * C440) *
                   C50720 * C50694 * C50657 -
               (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
                C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
                C117 * C126 + C154 + C154 + C105 * C140) *
                   C50720 * C50694 * C1577) *
                  C50577 * C929 +
              ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
                C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
                C123 * C130 + C158 + C158 + C108 * C144) *
                   C50720 * C50694 * C1577 -
               (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
                C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
                C117 * C413 + C675 + C675 + C105 * C433) *
                   C50720 * C50694 * C50657) *
                  C50577 * C930) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50720 * C50694 * C1577 -
               (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
                C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
                C117 * C415 + C446 + C446 + C105 * C435) *
                   C50720 * C50694 * C50657) *
                  C260 +
              ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
                C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
                C123 * C808 + C824 + C824 + C108 * C818) *
                   C50720 * C50694 * C50657 -
               (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
                C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
                C117 * C268 + C299 + C299 + C105 * C288) *
                   C50720 * C50694 * C1577) *
                  C261 +
              ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
                C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
                C123 * C272 + C303 + C303 + C108 * C292) *
                   C50720 * C50694 * C1577 -
               (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 +
                C1477 + C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 +
                C106 * C1473 + C117 * C1466 + C1479 + C1479 + C105 * C1474) *
                   C50720 * C50694 * C50657) *
                  C262) *
             C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50720 * C50694 * C1743 -
          (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 + C444 +
           C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 + C117 * C415 +
           C446 + C446 + C105 * C435) *
              C50720 * C50694 * C1744 +
          (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 + C448 +
           C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 + C123 * C419 +
           C450 + C450 + C108 * C439) *
              C50720 * C50694 * C1745 -
          (C123 * C1747 + C1760 + C1760 + C108 * C1755 + C121 * C1748 + C1761 +
           C1761 + C107 * C1756 + C119 * C1749 + C1762 + C1762 + C106 * C1757 +
           C117 * C1750 + C1763 + C1763 + C105 * C1758) *
              C50720 * C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C50577 * C928 +
          (((C7851 * C414 + C8256 + C8256 + C50789 * C434 + C7853 * C413 +
             C8257 + C8257 + C50532 * C433) *
                C50720 * C7848 +
            (C8822 + C8823) * C50720 * C7849 +
            (C8824 + C8825) * C50720 * C7850) *
               C50657 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C1577) *
              C50577 * C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C1577 -
           ((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
             C8583 + C8583 + C50789 * C1472) *
                C50720 * C7850 +
            (C7853 * C808 + C8584 + C8584 + C50532 * C818 + C7851 * C807 +
             C8585 + C8585 + C50789 * C817) *
                C50720 * C7849 +
            (C7853 * C412 + C8586 + C8586 + C50532 * C432 + C7851 * C413 +
             C8587 + C8587 + C50789 * C433) *
                C50720 * C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C260 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50657 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C1577) *
              C261 +
          ((C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
            (C9088 + C9089) * C50720 * C7850) *
               C1577 -
           ((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50720 * C7850 +
            (C9769 + C9768) * C50720 * C7849 + C9763 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C50720 * C7848 +
           (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
              C1743 -
          (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
           (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
            C8249 + C8249 + C50789 * C435) *
               C50720 * C7848) *
              C1744 +
          ((C7851 * C416 + C8250 + C8250 + C50789 * C436 + C7853 * C417 +
            C8251 + C8251 + C50532 * C437) *
               C50720 * C7848 +
           (C9260 + C9261) * C50720 * C7849 +
           (C9262 + C9263) * C50720 * C7850) *
              C1745 -
          ((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
            C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
               C50720 * C7850 +
           (C7853 * C4507 + C10168 + C10168 + C50532 * C4513 + C7851 * C4508 +
            C10169 + C10169 + C50789 * C4514) *
               C50720 * C7849 +
           (C7853 * C1749 + C10170 + C10170 + C50532 * C1757 + C7851 * C1750 +
            C10171 + C10171 + C50789 * C1758) *
               C50720 * C7848) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C1577 -
           ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
            (C15828 + C15829) * C15464) *
               C50694 * C50657 -
           (C15831 * C15464 + (C15825 + C15824) * C15463 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C15462) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C15462 +
            (C16144 + C16145) * C15463 + (C16146 + C16147) * C15464) *
               C50694 * C1577 -
           ((C7853 * C1747 + C16134 + C16134 + C50532 * C1755 + C7851 * C1748 +
             C16135 + C16135 + C50789 * C1756) *
                C15464 +
            (C16147 + C16146) * C15463 + (C16145 + C16144) * C15462) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C1577 -
           ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C50657) *
              C260 +
          (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
            (C16758 + C16759) * C15464) *
               C50694 * C50657 -
           (C16751 * C15464 + (C8820 + C8821) * C15463 +
            (C8083 + C8082) * C15462) *
               C50694 * C1577) *
              C261 +
          ((C8094 * C15462 + (C8819 + C8818) * C15463 +
            (C9262 + C9263) * C15464) *
               C50694 * C1577 -
           ((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
             C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
                C15464 +
            (C9263 + C9262) * C15463 + C9756 * C15462) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C15462 +
           (C15818 + C15819) * C15463 + C15830 * C15464) *
              C50694 * C1743 -
          (C17642 * C15464 + (C15821 + C15820) * C15463 +
           (C15819 + C15818) * C15462) *
              C50694 * C1744 +
          (C15830 * C15462 + (C15823 + C15822) * C15463 +
           (C17653 + C17654) * C15464) *
              C50694 * C1745 -
          ((C7853 * C17635 + C17647 + C17647 + C50532 * C17639 +
            C7851 * C17636 + C17648 + C17648 + C50789 * C17640) *
               C15464 +
           (C17654 + C17653) * C15463 + C17642 * C15462) *
              C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[103] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50852 -
                    (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
                     (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                      C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                         C50720 * C7848) *
                        C50853 +
                    ((C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                      C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                         C50720 * C7848 +
                     (C9260 + C9261) * C50720 * C7849 +
                     (C9262 + C9263) * C50720 * C7850) *
                        C1993) *
                       C50577 * C50798 +
                   (((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                      C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                         C50720 * C7848 +
                     (C8822 + C8823) * C50720 * C7849 +
                     (C8824 + C8825) * C50720 * C7850) *
                        C50853 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50852 -
                    ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                      C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                         C50720 * C7850 +
                     (C7853 * C1117 + C8264 + C8264 + C50532 * C1125 +
                      C7851 * C1118 + C8265 + C8265 + C50789 * C1126) *
                         C50720 * C7849 +
                     (C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                      C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                         C50720 * C7848) *
                        C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50852 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50720 * C50694 * C50853 +
                    (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 +
                     C448 + C448 + C106 * C437 + C121 * C418 + C449 + C449 +
                     C107 * C438 + C123 * C419 + C450 + C450 + C108 * C439) *
                        C50720 * C50694 * C1993) *
                       C50577 * C50798 +
                   ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50720 * C50694 * C50853 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50852 -
                    (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 +
                     C456 + C456 + C107 * C439 + C119 * C418 + C457 + C457 +
                     C106 * C438 + C117 * C417 + C458 + C458 + C105 * C437) *
                        C50720 * C50694 * C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C15462 +
                     (C15818 + C15819) * C15463 + C15830 * C15464) *
                        C50694 * C50852 -
                    (C17642 * C15464 + (C15821 + C15820) * C15463 +
                     (C15819 + C15818) * C15462) *
                        C50694 * C50853 +
                    (C15830 * C15462 + (C15823 + C15822) * C15463 +
                     (C17653 + C17654) * C15464) *
                        C50694 * C1993) *
                       C50577 * C50798 +
                   (((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
                     (C15828 + C15829) * C15464) *
                        C50694 * C50853 -
                    (C15831 * C15464 + (C15825 + C15824) * C15463 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C15462) *
                        C50694 * C50852 -
                    ((C7853 * C7235 + C15792 + C15792 + C50532 * C7241 +
                      C7851 * C7236 + C15793 + C15793 + C50789 * C7242) *
                         C15464 +
                     (C15829 + C15828) * C15463 + C15831 * C15462) *
                        C50694 * C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C260 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50657 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C1577) *
              C261 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50720 * C50694 * C1577 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50720 * C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C50577 * C928 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50720 * C50694 * C50657 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50720 * C50694 * C1577) *
              C50577 * C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50720 * C50694 * C1577 -
           (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
            C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
            C117 * C413 + C675 + C675 + C105 * C433) *
               C50720 * C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C50577 * C928 +
          (((C7851 * C414 + C8256 + C8256 + C50789 * C434 + C7853 * C413 +
             C8257 + C8257 + C50532 * C433) *
                C50720 * C7848 +
            (C8822 + C8823) * C50720 * C7849 +
            (C8824 + C8825) * C50720 * C7850) *
               C50657 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C1577) *
              C50577 * C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C1577 -
           ((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
             C8583 + C8583 + C50789 * C1472) *
                C50720 * C7850 +
            (C7853 * C808 + C8584 + C8584 + C50532 * C818 + C7851 * C807 +
             C8585 + C8585 + C50789 * C817) *
                C50720 * C7849 +
            (C7853 * C412 + C8586 + C8586 + C50532 * C432 + C7851 * C413 +
             C8587 + C8587 + C50789 * C433) *
                C50720 * C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C260 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50657 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C1577) *
              C261 +
          ((C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
            (C9088 + C9089) * C50720 * C7850) *
               C1577 -
           ((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50720 * C7850 +
            (C9769 + C9768) * C50720 * C7849 + C9763 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C1577 -
           ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C15824 + C15825) * C15462 + (C15826 + C15827) * C15463 +
            (C15828 + C15829) * C15464) *
               C50694 * C50657 -
           (C15831 * C15464 + (C15825 + C15824) * C15463 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C15462) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C15462 +
            (C16144 + C16145) * C15463 + (C16146 + C16147) * C15464) *
               C50694 * C1577 -
           ((C7853 * C1747 + C16134 + C16134 + C50532 * C1755 + C7851 * C1748 +
             C16135 + C16135 + C50789 * C1756) *
                C15464 +
            (C16147 + C16146) * C15463 + (C16145 + C16144) * C15462) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C15462 +
            (C15818 + C15819) * C15463 + C15830 * C15464) *
               C50694 * C1577 -
           ((C15822 + C15823) * C15464 + (C15821 + C15820) * C15463 +
            (C15819 + C15818) * C15462) *
               C50694 * C50657) *
              C260 +
          (((C8821 + C8820) * C15462 + (C9260 + C9261) * C15463 +
            (C16758 + C16759) * C15464) *
               C50694 * C50657 -
           (C16751 * C15464 + (C8820 + C8821) * C15463 +
            (C8083 + C8082) * C15462) *
               C50694 * C1577) *
              C261 +
          ((C8094 * C15462 + (C8819 + C8818) * C15463 +
            (C9262 + C9263) * C15464) *
               C50694 * C1577 -
           ((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
             C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
                C15464 +
            (C9263 + C9262) * C15463 + C9756 * C15462) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C50806 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C50629) *
              C50848 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C50629 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C50806) *
              C50849 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C50593 * C50806 -
           ((C10728 * C3403 + C11115 + C11115 + C50527 * C3409) * C50720 *
                C10727 +
            C11127 * C10726 + C11126 * C10725 + C11125 * C10724) *
               C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C50806 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C50629) *
              C50848 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C50629 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C50806) *
              C50849 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C50593 * C50806 -
           ((C2199 * C274 + C2766 + C2766 + C2192 * C294 + C2197 * C272 +
             C2767 + C2767 + C2191 * C292 + C2195 * C271 + C2768 + C2768 +
             C2190 * C291) *
                C50720 * C50708 +
            (C2777 + C2776 + C2775) * C50720 * C50817) *
               C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50593 * C50806 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50593 * C50629) *
              C50848 +
          (((C18393 + C18394 + C18395) * C50817 +
            (C18396 + C18397 + C18398) * C50708) *
               C50593 * C50629 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50593 * C50806) *
              C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
             C13376 * C15463 +
             (C10728 * C418 + C13373 + C13373 + C50527 * C438) * C15464) *
                C50817 +
            (C18703 + C18704 + C18710) * C50708) *
               C50593 * C50806 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C15464 +
             C13220 * C15463 + C11123 * C15462) *
                C50708 +
            (C18710 + C18704 + C18703) * C50817) *
               C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                 C10724 +
             C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                C50807 -
            (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                 C10724) *
                C50657) *
               C50806 +
           ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
             (C10728 * C9750 + C11366 + C11366 + C50527 * C9754) * C50720 *
                 C10727) *
                C50657 -
            (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
             C10889 * C10724) *
                C50807) *
               C50629) *
              C263 +
          ((((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                 C10724 +
             C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                C50657 -
            (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                 C10724) *
                C50807) *
               C50806 +
           ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
             C10896 * C10727) *
                C50807 -
            ((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50720 *
                 C10727 +
             C11397 * C10726 + C11396 * C10725 + C11395 * C10724) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50720 * C50817 +
             (C2432 + C2433 + C2434) * C50720 * C50708) *
                C50807 -
            ((C3154 + C3155 + C3156) * C50720 * C50708 +
             (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
              C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
              C2190 * C435) *
                 C50720 * C50817) *
                C50657) *
               C50806 +
           (((C3156 + C3155 + C3154) * C50720 * C50817 +
             (C2195 * C1466 + C3130 + C3130 + C2190 * C1474 + C2197 * C1465 +
              C3131 + C3131 + C2191 * C1473 + C2199 * C1464 + C3132 + C3132 +
              C2192 * C1472) *
                 C50720 * C50708) *
                C50657 -
            ((C2435 + C2436 + C2437) * C50720 * C50708 +
             (C2434 + C2433 + C2432) * C50720 * C50817) *
                C50807) *
               C50629) *
              C263 +
          ((((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
              C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
              C2192 * C432) *
                 C50720 * C50817 +
             (C3157 + C3158 + C3159) * C50720 * C50708) *
                C50657 -
            ((C2440 + C2439 + C2438) * C50720 * C50708 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50720 * C50817) *
                C50807) *
               C50806 +
           (((C2438 + C2439 + C2440) * C50720 * C50817 +
             (C2441 + C2442 + C2443) * C50720 * C50708) *
                C50807 -
            ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
              C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
              C2190 * C1473) *
                 C50720 * C50708 +
             (C3159 + C3158 + C3157) * C50720 * C50817) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
              C13057 * C15463 + C13058 * C15464) *
                 C50817 +
             (C18387 + C18388 + C18389) * C50708) *
                C50807 -
            ((C19058 + C19059 + C19060) * C50708 +
             (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
                C50657) *
               C50806 +
           (((C19060 + C19059 + C19058) * C50817 +
             (C11387 * C15462 + C11687 * C15463 + C13983 * C15464) * C50708) *
                C50657 -
            ((C18390 + C18391 + C18392) * C50708 +
             (C18389 + C18388 + C18387) * C50817) *
                C50807) *
               C50629) *
              C263 +
          ((((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
             (C19061 + C19062 + C19063) * C50708) *
                C50657 -
            ((C18395 + C18394 + C18393) * C50708 +
             (C13060 * C15464 + C13059 * C15463 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                 C50817) *
                C50807) *
               C50806 +
           (((C18393 + C18394 + C18395) * C50817 +
             (C18396 + C18397 + C18398) * C50708) *
                C50807 -
            (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C15464 +
              C13062 * C15463 + C11390 * C15462) *
                 C50708 +
             (C19063 + C19062 + C19061) * C50817) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                C2192 * C141) *
                   C50720 * C50817 +
               (C2195 * C268 + C2205 + C2205 + C2190 * C288 + C2197 * C267 +
                C2206 + C2206 + C2191 * C287 + C2199 * C266 + C2207 + C2207 +
                C2192 * C286) *
                   C50720 * C50708) *
                  C50593 * C50577 * C113 -
              ((C2199 * C265 + C2208 + C2208 + C2192 * C285 + C2197 * C266 +
                C2209 + C2209 + C2191 * C286 + C2195 * C267 + C2210 + C2210 +
                C2190 * C287) *
                   C50720 * C50708 +
               (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                C2190 * C140) *
                   C50720 * C50817) *
                  C50593 * C50577 * C114 +
              ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
                C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
                C2192 * C143) *
                   C50720 * C50817 +
               (C2195 * C266 + C2217 + C2217 + C2190 * C286 + C2197 * C265 +
                C2218 + C2218 + C2191 * C285 + C2199 * C273 + C2219 + C2219 +
                C2192 * C293) *
                   C50720 * C50708) *
                  C50593 * C50577 * C115 -
              ((C2199 * C561 + C2220 + C2220 + C2192 * C563 + C2197 * C273 +
                C2221 + C2221 + C2191 * C293 + C2195 * C265 + C2222 + C2222 +
                C2190 * C285) *
                   C50720 * C50708 +
               (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 +
                C2224 + C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
                C2190 * C142) *
                   C50720 * C50817) *
                  C50593 * C50577 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50720 * C50817 +
                (C2432 + C2433 + C2434) * C50720 * C50708) *
                   C50593 * C260 -
               ((C2435 + C2436 + C2437) * C50720 * C50708 +
                (C2434 + C2433 + C2432) * C50720 * C50817) *
                   C50593 * C261 +
               ((C2437 + C2436 + C2435) * C50720 * C50817 +
                (C2195 * C1005 + C2387 + C2387 + C2190 * C1013 + C2197 * C1004 +
                 C2388 + C2388 + C2191 * C1012 + C2199 * C1003 + C2389 + C2389 +
                 C2192 * C1011) *
                    C50720 * C50708) *
                   C50593 * C262) *
                  C263 +
              (((C2438 + C2439 + C2440) * C50720 * C50817 +
                (C2441 + C2442 + C2443) * C50720 * C50708) *
                   C50593 * C261 -
               ((C2440 + C2439 + C2438) * C50720 * C50708 +
                (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                 C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                 C2190 * C140) *
                    C50720 * C50817) *
                   C50593 * C260 -
               ((C2199 * C1002 + C2405 + C2405 + C2192 * C1010 + C2197 * C1003 +
                 C2406 + C2406 + C2191 * C1011 + C2195 * C1004 + C2407 + C2407 +
                 C2190 * C1012) *
                    C50720 * C50708 +
                (C2443 + C2442 + C2441) * C50720 * C50817) *
                   C50593 * C262) *
                  C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C409 -
           ((C2199 * C807 + C2590 + C2590 + C2192 * C817 + C2197 * C806 +
             C2591 + C2591 + C2191 * C816 + C2195 * C805 + C2592 + C2592 +
             C2190 * C815) *
                C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C410 +
           ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 +
             C2597 + C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
             C2192 * C438) *
                C50720 * C50817 +
            (C2195 * C1119 + C2599 + C2599 + C2190 * C1127 + C2197 * C1118 +
             C2600 + C2600 + C2191 * C1126 + C2199 * C1117 + C2601 + C2601 +
             C2192 * C1125) *
                C50720 * C50708) *
               C411) *
              C50577 * C263 +
          (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
             C2192 * C432) *
                C50720 * C50817 +
            (C2195 * C806 + C2605 + C2605 + C2190 * C816 + C2197 * C807 +
             C2606 + C2606 + C2191 * C817 + C2199 * C808 + C2607 + C2607 +
             C2192 * C818) *
                C50720 * C50708) *
               C410 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C409 -
           ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
             C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
             C2190 * C1126) *
                C50720 * C50708 +
            (C2199 * C419 + C2611 + C2611 + C2192 * C439 + C2197 * C418 +
             C2612 + C2612 + C2191 * C438 + C2195 * C417 + C2613 + C2613 +
             C2190 * C437) *
                C50720 * C50817) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           (C10728 * C268 + C10732 + C10732 + C50527 * C288) * C50720 * C10725 +
           (C10728 * C269 + C10733 + C10733 + C50527 * C289) * C50720 * C10726 +
           (C10728 * C1005 + C10734 + C10734 + C50527 * C1013) * C50720 *
               C10727) *
              C50593 * C50577 * C113 -
          ((C10728 * C1004 + C10735 + C10735 + C50527 * C1012) * C50720 *
               C10727 +
           (C10728 * C270 + C10736 + C10736 + C50527 * C290) * C50720 * C10726 +
           (C10728 * C267 + C10737 + C10737 + C50527 * C287) * C50720 * C10725 +
           (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
               C10724) *
              C50593 * C50577 * C114 +
          ((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 * C10724 +
           (C10728 * C266 + C10740 + C10740 + C50527 * C286) * C50720 * C10725 +
           (C10728 * C271 + C10741 + C10741 + C50527 * C291) * C50720 * C10726 +
           (C10728 * C1003 + C10742 + C10742 + C50527 * C1011) * C50720 *
               C10727) *
              C50593 * C50577 * C115 -
          ((C10728 * C1002 + C10743 + C10743 + C50527 * C1010) * C50720 *
               C10727 +
           (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50720 * C10726 +
           (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50720 * C10725 +
           (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50720 *
               C10724) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C260 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C261 +
           (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            (C10728 * C9070 + C10854 + C10854 + C50527 * C9074) * C50720 *
                C10727) *
               C50593 * C262) *
              C263 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C261 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C260 -
           ((C10728 * C9069 + C10864 + C10864 + C50527 * C9073) * C50720 *
                C10727 +
            C10896 * C10726 + C10895 * C10725 + C10894 * C10724) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C409 -
           ((C10728 * C4091 + C10995 + C10995 + C50527 * C4097) * C50720 *
                C10727 +
            (C10728 * C1466 + C10996 + C10996 + C50527 * C1474) * C50720 *
                C10726 +
            (C10728 * C805 + C10997 + C10997 + C50527 * C815) * C50720 *
                C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C410 +
           ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 *
                C10724 +
            (C10728 * C1119 + C11000 + C11000 + C50527 * C1127) * C50720 *
                C10725 +
            (C10728 * C3578 + C11001 + C11001 + C50527 * C3584) * C50720 *
                C10726 +
            (C10728 * C9236 + C11002 + C11002 + C50527 * C9240) * C50720 *
                C10727) *
               C411) *
              C50577 * C263 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            (C10728 * C806 + C11004 + C11004 + C50527 * C816) * C50720 *
                C10725 +
            (C10728 * C1465 + C11005 + C11005 + C50527 * C1473) * C50720 *
                C10726 +
            (C10728 * C4090 + C11006 + C11006 + C50527 * C4096) * C50720 *
                C10727) *
               C410 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C409 -
           ((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50720 *
                C10727 +
            (C10728 * C3577 + C11008 + C11008 + C50527 * C3583) * C50720 *
                C10726 +
            (C10728 * C1118 + C11009 + C11009 + C50527 * C1126) * C50720 *
                C10725 +
            (C10728 * C417 + C11010 + C11010 + C50527 * C437) * C50720 *
                C10724) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
            C13057 * C15463 + C13058 * C15464) *
               C50817 +
           (C10881 * C15462 + C11388 * C15463 + C11686 * C15464) * C50708) *
              C50593 * C50577 * C113 -
          ((C13061 * C15464 + C11389 * C15463 + C10885 * C15462) * C50708 +
           (C13060 * C15464 + C13059 * C15463 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
               C50817) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
            C13376 * C15463 +
            (C10728 * C418 + C13373 + C13373 + C50527 * C438) * C15464) *
               C50817 +
           (C11122 * C15462 + C13219 * C15463 +
            (C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C15464) *
               C50708) *
              C50593 * C50577 * C115 -
          (((C10728 * C1116 + C18239 + C18239 + C50527 * C1124) * C15464 +
            (C10728 * C808 + C12722 + C12722 + C50527 * C818) * C15463 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C15462) *
               C50708 +
           ((C10728 * C419 + C18240 + C18240 + C50527 * C439) * C15464 +
            (C10728 * C412 + C12723 + C12723 + C50527 * C432) * C15463 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C15462) *
               C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50593 * C260 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50593 * C261 +
           ((C18392 + C18391 + C18390) * C50817 +
            (C10883 * C15462 + C11386 * C15463 + C11688 * C15464) * C50708) *
               C50593 * C262) *
              C263 +
          (((C18393 + C18394 + C18395) * C50817 +
            (C18396 + C18397 + C18398) * C50708) *
               C50593 * C261 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50593 * C260 -
           (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C15464 +
             C11391 * C15463 + C10887 * C15462) *
                C50708 +
            (C18398 + C18397 + C18396) * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C409 -
           ((C13982 * C15464 + C11686 * C15463 + C11388 * C15462) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C410 +
           ((C13058 * C15462 + C14878 * C15463 +
             (C10728 * C7237 + C14875 + C14875 + C50527 * C7243) * C15464) *
                C50817 +
            (C11686 * C15462 + C13982 * C15463 +
             (C10728 * C14865 + C14874 + C14874 + C50527 * C14869) * C15464) *
                C50708) *
               C411) *
              C50577 * C263 +
          (((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
            (C11389 * C15462 + C13061 * C15463 + C18556 * C15464) * C50708) *
               C410 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C409 -
           (((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C15464 +
             C18556 * C15463 + C13061 * C15462) *
                C50708 +
            ((C10728 * C7236 + C18550 + C18550 + C50527 * C7242) * C15464 +
             C18555 * C15463 + C13060 * C15462) *
                C50817) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50807 -
           ((C10728 * C4091 + C10995 + C10995 + C50527 * C4097) * C50720 *
                C10727 +
            (C10728 * C1466 + C10996 + C10996 + C50527 * C1474) * C50720 *
                C10726 +
            (C10728 * C805 + C10997 + C10997 + C50527 * C815) * C50720 *
                C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C50577 * C50848 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            (C10728 * C806 + C11004 + C11004 + C50527 * C816) * C50720 *
                C10725 +
            (C10728 * C1465 + C11005 + C11005 + C50527 * C1473) * C50720 *
                C10726 +
            (C10728 * C4090 + C11006 + C11006 + C50527 * C4096) * C50720 *
                C10727) *
               C50657 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50807) *
              C50577 * C50849 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C50807 -
           ((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50720 *
                C10727 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50720 *
                C10726 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50720 *
                C10725 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50720 *
                C10724) *
               C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50807 -
           ((C2199 * C807 + C2590 + C2590 + C2192 * C817 + C2197 * C806 +
             C2591 + C2591 + C2191 * C816 + C2195 * C805 + C2592 + C2592 +
             C2190 * C815) *
                C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50657) *
              C50577 * C50848 +
          (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
             C2192 * C432) *
                C50720 * C50817 +
            (C2195 * C806 + C2605 + C2605 + C2190 * C816 + C2197 * C807 +
             C2606 + C2606 + C2191 * C817 + C2199 * C808 + C2607 + C2607 +
             C2192 * C818) *
                C50720 * C50708) *
               C50657 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50807) *
              C50577 * C50849 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C50807 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50720 * C50708 +
            (C2199 * C420 + C2927 + C2927 + C2192 * C440 + C2197 * C412 +
             C2928 + C2928 + C2191 * C432 + C2195 * C413 + C2929 + C2929 +
             C2190 * C433) *
                C50720 * C50817) *
               C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50807 -
           ((C13982 * C15464 + C11686 * C15463 + C11388 * C15462) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50657) *
              C50577 * C50848 +
          (((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
            (C11389 * C15462 + C13061 * C15463 + C18556 * C15464) * C50708) *
               C50657 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50807) *
              C50577 * C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
             C13376 * C15463 + C18863 * C15464) *
                C50817 +
            (C18703 + C18704 + C18710) * C50708) *
               C50807 -
           (((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C15464 +
             C18709 * C15463 + C13219 * C15462) *
                C50708 +
            ((C10728 * C1748 + C18860 + C18860 + C50527 * C1756) * C15464 +
             C18863 * C15463 + C13376 * C15462) *
                C50817) *
               C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C260 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C261 +
           ((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C2195 * C1005 + C2387 + C2387 + C2190 * C1013 + C2197 * C1004 +
             C2388 + C2388 + C2191 * C1012 + C2199 * C1003 + C2389 + C2389 +
             C2192 * C1011) *
                C50720 * C50708) *
               C50593 * C262) *
              C263 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C261 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C260 -
           ((C2199 * C1002 + C2405 + C2405 + C2192 * C1010 + C2197 * C1003 +
             C2406 + C2406 + C2191 * C1011 + C2195 * C1004 + C2407 + C2407 +
             C2190 * C1012) *
                C50720 * C50708 +
            (C2443 + C2442 + C2441) * C50720 * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2195 * C268 + C2205 + C2205 + C2190 * C288 + C2197 * C267 + C2206 +
            C2206 + C2191 * C287 + C2199 * C266 + C2207 + C2207 +
            C2192 * C286) *
               C50720 * C50708) *
              C50593 * C50577 * C113 -
          ((C2199 * C265 + C2208 + C2208 + C2192 * C285 + C2197 * C266 + C2209 +
            C2209 + C2191 * C286 + C2195 * C267 + C2210 + C2210 +
            C2190 * C287) *
               C50720 * C50708 +
           (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 + C2212 +
            C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
            C2190 * C140) *
               C50720 * C50817) *
              C50593 * C50577 * C114 +
          ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 + C2215 +
            C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
            C2192 * C143) *
               C50720 * C50817 +
           (C2195 * C266 + C2217 + C2217 + C2190 * C286 + C2197 * C265 + C2218 +
            C2218 + C2191 * C285 + C2199 * C273 + C2219 + C2219 +
            C2192 * C293) *
               C50720 * C50708) *
              C50593 * C50577 * C115 -
          ((C2199 * C561 + C2220 + C2220 + C2192 * C563 + C2197 * C273 + C2221 +
            C2221 + C2191 * C293 + C2195 * C265 + C2222 + C2222 +
            C2190 * C285) *
               C50720 * C50708 +
           (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 + C2224 +
            C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
            C2190 * C142) *
               C50720 * C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           (C10728 * C268 + C10732 + C10732 + C50527 * C288) * C50720 * C10725 +
           (C10728 * C269 + C10733 + C10733 + C50527 * C289) * C50720 * C10726 +
           (C10728 * C1005 + C10734 + C10734 + C50527 * C1013) * C50720 *
               C10727) *
              C50593 * C50577 * C113 -
          ((C10728 * C1004 + C10735 + C10735 + C50527 * C1012) * C50720 *
               C10727 +
           (C10728 * C270 + C10736 + C10736 + C50527 * C290) * C50720 * C10726 +
           (C10728 * C267 + C10737 + C10737 + C50527 * C287) * C50720 * C10725 +
           (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
               C10724) *
              C50593 * C50577 * C114 +
          ((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 * C10724 +
           (C10728 * C266 + C10740 + C10740 + C50527 * C286) * C50720 * C10725 +
           (C10728 * C271 + C10741 + C10741 + C50527 * C291) * C50720 * C10726 +
           (C10728 * C1003 + C10742 + C10742 + C50527 * C1011) * C50720 *
               C10727) *
              C50593 * C50577 * C115 -
          ((C10728 * C1002 + C10743 + C10743 + C50527 * C1010) * C50720 *
               C10727 +
           (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50720 * C10726 +
           (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50720 * C10725 +
           (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50720 *
               C10724) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C260 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C261 +
           (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            (C10728 * C9070 + C10854 + C10854 + C50527 * C9074) * C50720 *
                C10727) *
               C50593 * C262) *
              C263 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C261 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C260 -
           ((C10728 * C9069 + C10864 + C10864 + C50527 * C9073) * C50720 *
                C10727 +
            C10896 * C10726 + C10895 * C10725 + C10894 * C10724) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
            C13057 * C15463 + C13058 * C15464) *
               C50817 +
           (C10881 * C15462 + C11388 * C15463 + C11686 * C15464) * C50708) *
              C50593 * C50577 * C113 -
          ((C13061 * C15464 + C11389 * C15463 + C10885 * C15462) * C50708 +
           (C13060 * C15464 + C13059 * C15463 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
               C50817) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
            C13376 * C15463 +
            (C10728 * C418 + C13373 + C13373 + C50527 * C438) * C15464) *
               C50817 +
           (C11122 * C15462 + C13219 * C15463 +
            (C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C15464) *
               C50708) *
              C50593 * C50577 * C115 -
          (((C10728 * C1116 + C18239 + C18239 + C50527 * C1124) * C15464 +
            (C10728 * C808 + C12722 + C12722 + C50527 * C818) * C15463 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C15462) *
               C50708 +
           ((C10728 * C419 + C18240 + C18240 + C50527 * C439) * C15464 +
            (C10728 * C412 + C12723 + C12723 + C50527 * C432) * C15463 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C15462) *
               C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50593 * C260 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50593 * C261 +
           ((C18392 + C18391 + C18390) * C50817 +
            (C10883 * C15462 + C11386 * C15463 + C11688 * C15464) * C50708) *
               C50593 * C262) *
              C263 +
          (((C18393 + C18394 + C18395) * C50817 +
            (C18396 + C18397 + C18398) * C50708) *
               C50593 * C261 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50593 * C260 -
           (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C15464 +
             C11391 * C15463 + C10887 * C15462) *
                C50708 +
            (C18398 + C18397 + C18396) * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C50850 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C50851 +
           (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            C11571 * C10727) *
               C50593 * C1232) *
              C50798 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C50851 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C50850 -
           ((C10728 * C9069 + C10864 + C10864 + C50527 * C9073) * C50720 *
                C10727 +
            C10896 * C10726 + C10895 * C10725 + C10894 * C10724) *
               C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C50850 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C50851 +
           ((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C3428 + C3429 + C3430) * C50720 * C50708) *
               C50593 * C1232) *
              C50798 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C50851 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C50850 -
           ((C2199 * C1002 + C2405 + C2405 + C2192 * C1010 + C2197 * C1003 +
             C2406 + C2406 + C2191 * C1011 + C2195 * C1004 + C2407 + C2407 +
             C2190 * C1012) *
                C50720 * C50708 +
            (C2443 + C2442 + C2441) * C50720 * C50817) *
               C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50593 * C50850 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50593 * C50851 +
           ((C18392 + C18391 + C18390) * C50817 +
            (C19308 + C19309 + C19310) * C50708) *
               C50593 * C1232) *
              C50798 +
          (((C18393 + C18394 + C18395) * C50817 +
            (C18396 + C18397 + C18398) * C50708) *
               C50593 * C50851 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50593 * C50850 -
           (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C15464 +
             C11391 * C15463 + C10887 * C15462) *
                C50708 +
            (C18398 + C18397 + C18396) * C50817) *
               C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50807 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C50850 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            C12027 * C10727) *
               C50657 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50807) *
              C50851 +
          ((C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            C11571 * C10727) *
               C50807 -
           ((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50720 *
                C10727 +
            C12027 * C10726 + C11392 * C10725 + C11393 * C10724) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50807 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50657) *
              C50850 +
          (((C3156 + C3155 + C3154) * C50720 * C50817 +
            (C4114 + C4115 + C4116) * C50720 * C50708) *
               C50657 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50807) *
              C50851 +
          (((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C3428 + C3429 + C3430) * C50720 * C50708) *
               C50807 -
           ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
             C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
             C2190 * C4097) *
                C50720 * C50708 +
            (C4116 + C4115 + C4114) * C50720 * C50817) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50807 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50657) *
              C50850 +
          (((C19060 + C19059 + C19058) * C50817 +
            (C19951 + C19952 + C19953) * C50708) *
               C50657 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50807) *
              C50851 +
          (((C18392 + C18391 + C18390) * C50817 +
            (C19308 + C19309 + C19310) * C50708) *
               C50807 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C15464 +
             C11688 * C15463 + C11386 * C15462) *
                C50708 +
            (C19953 + C19952 + C19951) * C50817) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50720 * C50817 +
                (C2432 + C2433 + C2434) * C50720 * C50708) *
                   C50593 * C926 -
               ((C2435 + C2436 + C2437) * C50720 * C50708 +
                (C2434 + C2433 + C2432) * C50720 * C50817) *
                   C50593 * C50629) *
                  C928 +
              (((C2438 + C2439 + C2440) * C50720 * C50817 +
                (C2441 + C2442 + C2443) * C50720 * C50708) *
                   C50593 * C50629 -
               ((C2440 + C2439 + C2438) * C50720 * C50708 +
                (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                 C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                 C2190 * C140) *
                    C50720 * C50817) *
                   C50593 * C926) *
                  C929 +
              (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
                 C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
                 C2192 * C143) *
                    C50720 * C50817 +
                (C2775 + C2776 + C2777) * C50720 * C50708) *
                   C50593 * C926 -
               ((C2199 * C274 + C2766 + C2766 + C2192 * C294 + C2197 * C272 +
                 C2767 + C2767 + C2191 * C292 + C2195 * C271 + C2768 + C2768 +
                 C2190 * C291) *
                    C50720 * C50708 +
                (C2777 + C2776 + C2775) * C50720 * C50817) *
                   C50593 * C50629) *
                  C930) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                C2192 * C141) *
                   C50720 * C50817 +
               (C2432 + C2433 + C2434) * C50720 * C50708) *
                  C50593 * C997 -
              ((C2435 + C2436 + C2437) * C50720 * C50708 +
               (C2434 + C2433 + C2432) * C50720 * C50817) *
                  C50593 * C998 +
              ((C2437 + C2436 + C2435) * C50720 * C50817 +
               (C3428 + C3429 + C3430) * C50720 * C50708) *
                  C50593 * C999 -
              ((C2199 * C3403 + C3419 + C3419 + C2192 * C3409 + C2197 * C3404 +
                C3420 + C3420 + C2191 * C3410 + C2195 * C3405 + C3421 + C3421 +
                C2190 * C3411) *
                   C50720 * C50708 +
               (C3430 + C3429 + C3428) * C50720 * C50817) *
                  C50593 * C1000) *
             C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C409 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C410 +
           ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 +
             C2597 + C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
             C2192 * C438) *
                C50720 * C50817 +
            (C3601 + C3602 + C3603) * C50720 * C50708) *
               C411) *
              C926 +
          (((C3156 + C3155 + C3154) * C50720 * C50817 +
            (C2195 * C1466 + C3130 + C3130 + C2190 * C1474 + C2197 * C1465 +
             C3131 + C3131 + C2191 * C1473 + C2199 * C1464 + C3132 + C3132 +
             C2192 * C1472) *
                C50720 * C50708) *
               C410 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C409 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50720 * C50708 +
            (C3603 + C3602 + C3601) * C50720 * C50817) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C926 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C50629) *
              C928 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C50629 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C926) *
              C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C50593 * C926 -
           ((C10728 * C3403 + C11115 + C11115 + C50527 * C3409) * C50720 *
                C10727 +
            C11127 * C10726 + C11126 * C10725 + C11125 * C10724) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
              C50593 * C997 -
          (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
           C10889 * C10724) *
              C50593 * C998 +
          (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
           C11571 * C10727) *
              C50593 * C999 -
          ((C10728 * C11561 + C11567 + C11567 + C50527 * C11563) * C50720 *
               C10727 +
           C11571 * C10726 + C10892 * C10725 + C10891 * C10724) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C409 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C410 +
           ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 *
                C10724 +
            C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
               C411) *
              C926 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            (C10728 * C9750 + C11366 + C11366 + C50527 * C9754) * C50720 *
                C10727) *
               C410 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C409 -
           ((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50720 *
                C10727 +
            C11691 * C10726 + C11690 * C10725 + C11689 * C10724) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50593 * C926 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50593 * C50629) *
              C928 +
          (((C18393 + C18394 + C18395) * C50817 +
            (C18396 + C18397 + C18398) * C50708) *
               C50593 * C50629 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
             C13376 * C15463 + C18863 * C15464) *
                C50817 +
            (C18703 + C18704 + C18710) * C50708) *
               C50593 * C926 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C15464 +
             C13220 * C15463 + C11123 * C15462) *
                C50708 +
            (C18710 + C18704 + C18703) * C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
            C13057 * C15463 + C13058 * C15464) *
               C50817 +
           (C18387 + C18388 + C18389) * C50708) *
              C50593 * C997 -
          ((C18390 + C18391 + C18392) * C50708 +
           (C18389 + C18388 + C18387) * C50817) *
              C50593 * C998 +
          ((C18392 + C18391 + C18390) * C50817 +
           (C19308 + C19309 + C19310) * C50708) *
              C50593 * C999 -
          (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C15464 +
            C12026 * C15463 + C10884 * C15462) *
               C50708 +
           (C19310 + C19309 + C19308) * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C409 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C410 +
           ((C13058 * C15462 + C14878 * C15463 +
             (C10728 * C7237 + C14875 + C14875 + C50527 * C7243) * C15464) *
                C50817 +
            (C19457 + C19458 + C19464) * C50708) *
               C411) *
              C926 +
          (((C19060 + C19059 + C19058) * C50817 +
            (C11387 * C15462 + C11687 * C15463 + C13983 * C15464) * C50708) *
               C410 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C409 -
           (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C15464 +
             C13983 * C15463 + C11687 * C15462) *
                C50708 +
            (C19464 + C19458 + C19457) * C50817) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                 C10724 +
             C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                C50807 -
            (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                 C10724) *
                C50657) *
               C926 +
           ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
             (C10728 * C9750 + C11366 + C11366 + C50527 * C9754) * C50720 *
                 C10727) *
                C50657 -
            (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
             C10889 * C10724) *
                C50807) *
               C50629) *
              C50798 +
          ((((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                 C10724 +
             C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                C50657 -
            (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                 C10724) *
                C50807) *
               C926 +
           ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
             C10896 * C10727) *
                C50807 -
            ((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50720 *
                 C10727 +
             C11397 * C10726 + C11396 * C10725 + C11395 * C10724) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50720 * C50817 +
             (C2432 + C2433 + C2434) * C50720 * C50708) *
                C50807 -
            ((C3154 + C3155 + C3156) * C50720 * C50708 +
             (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
              C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
              C2190 * C435) *
                 C50720 * C50817) *
                C50657) *
               C926 +
           (((C3156 + C3155 + C3154) * C50720 * C50817 +
             (C2195 * C1466 + C3130 + C3130 + C2190 * C1474 + C2197 * C1465 +
              C3131 + C3131 + C2191 * C1473 + C2199 * C1464 + C3132 + C3132 +
              C2192 * C1472) *
                 C50720 * C50708) *
                C50657 -
            ((C2435 + C2436 + C2437) * C50720 * C50708 +
             (C2434 + C2433 + C2432) * C50720 * C50817) *
                C50807) *
               C50629) *
              C50798 +
          ((((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
              C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
              C2192 * C432) *
                 C50720 * C50817 +
             (C3157 + C3158 + C3159) * C50720 * C50708) *
                C50657 -
            ((C2440 + C2439 + C2438) * C50720 * C50708 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50720 * C50817) *
                C50807) *
               C926 +
           (((C2438 + C2439 + C2440) * C50720 * C50817 +
             (C2441 + C2442 + C2443) * C50720 * C50708) *
                C50807 -
            ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
              C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
              C2190 * C1473) *
                 C50720 * C50708 +
             (C3159 + C3158 + C3157) * C50720 * C50817) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
              C13057 * C15463 + C13058 * C15464) *
                 C50817 +
             (C18387 + C18388 + C18389) * C50708) *
                C50807 -
            ((C19058 + C19059 + C19060) * C50708 +
             (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
                C50657) *
               C926 +
           (((C19060 + C19059 + C19058) * C50817 +
             (C11387 * C15462 + C11687 * C15463 + C13983 * C15464) * C50708) *
                C50657 -
            ((C18390 + C18391 + C18392) * C50708 +
             (C18389 + C18388 + C18387) * C50817) *
                C50807) *
               C50629) *
              C50798 +
          ((((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
             (C19061 + C19062 + C19063) * C50708) *
                C50657 -
            ((C18395 + C18394 + C18393) * C50708 +
             (C13060 * C15464 + C13059 * C15463 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                 C50817) *
                C50807) *
               C926 +
           (((C18393 + C18394 + C18395) * C50817 +
             (C18396 + C18397 + C18398) * C50708) *
                C50807 -
            (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C15464 +
              C13062 * C15463 + C11390 * C15462) *
                 C50708 +
             (C19063 + C19062 + C19061) * C50817) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2432 + C2433 + C2434) * C50720 * C50708) *
              C50593 * C997 -
          ((C2435 + C2436 + C2437) * C50720 * C50708 +
           (C2434 + C2433 + C2432) * C50720 * C50817) *
              C50593 * C998 +
          ((C2437 + C2436 + C2435) * C50720 * C50817 +
           (C3428 + C3429 + C3430) * C50720 * C50708) *
              C50593 * C999 -
          ((C2199 * C3403 + C3419 + C3419 + C2192 * C3409 + C2197 * C3404 +
            C3420 + C3420 + C2191 * C3410 + C2195 * C3405 + C3421 + C3421 +
            C2190 * C3411) *
               C50720 * C50708 +
           (C3430 + C3429 + C3428) * C50720 * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C926 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C50629) *
              C928 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C50629 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C926) *
              C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C50593 * C926 -
           ((C2199 * C274 + C2766 + C2766 + C2192 * C294 + C2197 * C272 +
             C2767 + C2767 + C2191 * C292 + C2195 * C271 + C2768 + C2768 +
             C2190 * C291) *
                C50720 * C50708 +
            (C2777 + C2776 + C2775) * C50720 * C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C926 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C50629) *
              C928 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C50629 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C926) *
              C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C50593 * C926 -
           ((C10728 * C3403 + C11115 + C11115 + C50527 * C3409) * C50720 *
                C10727 +
            C11127 * C10726 + C11126 * C10725 + C11125 * C10724) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
              C50593 * C997 -
          (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
           C10889 * C10724) *
              C50593 * C998 +
          (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
           C11571 * C10727) *
              C50593 * C999 -
          ((C10728 * C11561 + C11567 + C11567 + C50527 * C11563) * C50720 *
               C10727 +
           C11571 * C10726 + C10892 * C10725 + C10891 * C10724) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50593 * C926 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50593 * C50629) *
              C928 +
          (((C18393 + C18394 + C18395) * C50817 +
            (C18396 + C18397 + C18398) * C50708) *
               C50593 * C50629 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
             C13376 * C15463 + C18863 * C15464) *
                C50817 +
            (C18703 + C18704 + C18710) * C50708) *
               C50593 * C926 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C15464 +
             C13220 * C15463 + C11123 * C15462) *
                C50708 +
            (C18710 + C18704 + C18703) * C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
            C13057 * C15463 + C13058 * C15464) *
               C50817 +
           (C18387 + C18388 + C18389) * C50708) *
              C50593 * C997 -
          ((C18390 + C18391 + C18392) * C50708 +
           (C18389 + C18388 + C18387) * C50817) *
              C50593 * C998 +
          ((C18392 + C18391 + C18390) * C50817 +
           (C19308 + C19309 + C19310) * C50708) *
              C50593 * C999 -
          (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C15464 +
            C12026 * C15463 + C10884 * C15462) *
               C50708 +
           (C19310 + C19309 + C19308) * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                 C10724 +
             C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                C1577 -
            (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                 C10724) *
                C50657) *
               C50806 +
           ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
             C12027 * C10727) *
                C50657 -
            (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
             C10889 * C10724) *
                C1577) *
               C50629) *
              C50798 +
          ((((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                 C10724 +
             C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                C50657 -
            (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                 C10724) *
                C1577) *
               C50806 +
           ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
             C10896 * C10727) *
                C1577 -
            ((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50720 *
                 C10727 +
             C11397 * C10726 + C11396 * C10725 + C11395 * C10724) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50720 * C50817 +
             (C2432 + C2433 + C2434) * C50720 * C50708) *
                C1577 -
            ((C3154 + C3155 + C3156) * C50720 * C50708 +
             (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
              C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
              C2190 * C435) *
                 C50720 * C50817) *
                C50657) *
               C50806 +
           (((C3156 + C3155 + C3154) * C50720 * C50817 +
             (C4114 + C4115 + C4116) * C50720 * C50708) *
                C50657 -
            ((C2435 + C2436 + C2437) * C50720 * C50708 +
             (C2434 + C2433 + C2432) * C50720 * C50817) *
                C1577) *
               C50629) *
              C50798 +
          ((((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
              C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
              C2192 * C432) *
                 C50720 * C50817 +
             (C3157 + C3158 + C3159) * C50720 * C50708) *
                C50657 -
            ((C2440 + C2439 + C2438) * C50720 * C50708 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50720 * C50817) *
                C1577) *
               C50806 +
           (((C2438 + C2439 + C2440) * C50720 * C50817 +
             (C2441 + C2442 + C2443) * C50720 * C50708) *
                C1577 -
            ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
              C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
              C2190 * C1473) *
                 C50720 * C50708 +
             (C3159 + C3158 + C3157) * C50720 * C50817) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
              C13057 * C15463 + C13058 * C15464) *
                 C50817 +
             (C18387 + C18388 + C18389) * C50708) *
                C1577 -
            ((C19058 + C19059 + C19060) * C50708 +
             (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
                C50657) *
               C50806 +
           (((C19060 + C19059 + C19058) * C50817 +
             (C19951 + C19952 + C19953) * C50708) *
                C50657 -
            ((C18390 + C18391 + C18392) * C50708 +
             (C18389 + C18388 + C18387) * C50817) *
                C1577) *
               C50629) *
              C50798 +
          ((((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
             (C19061 + C19062 + C19063) * C50708) *
                C50657 -
            ((C18395 + C18394 + C18393) * C50708 +
             (C13060 * C15464 + C13059 * C15463 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                 C50817) *
                C1577) *
               C50806 +
           (((C18393 + C18394 + C18395) * C50817 +
             (C18396 + C18397 + C18398) * C50708) *
                C1577 -
            (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C15464 +
              C13062 * C15463 + C11390 * C15462) *
                 C50708 +
             (C19063 + C19062 + C19061) * C50817) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50852 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50853 +
           ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 *
                C10724 +
            C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
               C1993) *
              C50806 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            C12027 * C10727) *
               C50853 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50852 -
           ((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50720 *
                C10727 +
            C11691 * C10726 + C11690 * C10725 + C11689 * C10724) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50852 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50853 +
           ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 +
             C2597 + C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
             C2192 * C438) *
                C50720 * C50817 +
            (C3601 + C3602 + C3603) * C50720 * C50708) *
               C1993) *
              C50806 +
          (((C3156 + C3155 + C3154) * C50720 * C50817 +
            (C4114 + C4115 + C4116) * C50720 * C50708) *
               C50853 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50852 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50720 * C50708 +
            (C3603 + C3602 + C3601) * C50720 * C50817) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50852 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50853 +
           ((C13058 * C15462 + C14878 * C15463 + C20353 * C15464) * C50817 +
            (C19457 + C19458 + C19464) * C50708) *
               C1993) *
              C50806 +
          (((C19060 + C19059 + C19058) * C50817 +
            (C19951 + C19952 + C19953) * C50708) *
               C50853 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C50852 -
           (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C15464 +
             C13983 * C15463 + C11687 * C15462) *
                C50708 +
            (C19464 + C19458 + C19457) * C50817) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50720 * C50817 +
                (C2432 + C2433 + C2434) * C50720 * C50708) *
                   C1577 -
               ((C3154 + C3155 + C3156) * C50720 * C50708 +
                (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
                 C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
                 C2190 * C435) *
                    C50720 * C50817) *
                   C50657) *
                  C50577 * C928 +
              (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
                 C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
                 C2192 * C432) *
                    C50720 * C50817 +
                (C3157 + C3158 + C3159) * C50720 * C50708) *
                   C50657 -
               ((C2440 + C2439 + C2438) * C50720 * C50708 +
                (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                 C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                 C2190 * C140) *
                    C50720 * C50817) *
                   C1577) *
                  C50577 * C929 +
              (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
                 C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
                 C2192 * C143) *
                    C50720 * C50817 +
                (C2775 + C2776 + C2777) * C50720 * C50708) *
                   C1577 -
               ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
                 C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
                 C2190 * C817) *
                    C50720 * C50708 +
                (C2199 * C420 + C2927 + C2927 + C2192 * C440 + C2197 * C412 +
                 C2928 + C2928 + C2191 * C432 + C2195 * C413 + C2929 + C2929 +
                 C2190 * C433) *
                    C50720 * C50817) *
                   C50657) *
                  C50577 * C930) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50720 * C50817 +
                (C2432 + C2433 + C2434) * C50720 * C50708) *
                   C1577 -
               ((C3154 + C3155 + C3156) * C50720 * C50708 +
                (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
                 C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
                 C2190 * C435) *
                    C50720 * C50817) *
                   C50657) *
                  C260 +
              (((C3156 + C3155 + C3154) * C50720 * C50817 +
                (C4114 + C4115 + C4116) * C50720 * C50708) *
                   C50657 -
               ((C2435 + C2436 + C2437) * C50720 * C50708 +
                (C2434 + C2433 + C2432) * C50720 * C50817) *
                   C1577) *
                  C261 +
              (((C2437 + C2436 + C2435) * C50720 * C50817 +
                (C3428 + C3429 + C3430) * C50720 * C50708) *
                   C1577 -
               ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
                 C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
                 C2190 * C4097) *
                    C50720 * C50708 +
                (C4116 + C4115 + C4114) * C50720 * C50817) *
                   C50657) *
                  C262) *
             C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2432 + C2433 + C2434) * C50720 * C50708) *
              C1743 -
          ((C3154 + C3155 + C3156) * C50720 * C50708 +
           (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 + C2594 +
            C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
            C2190 * C435) *
               C50720 * C50817) *
              C1744 +
          ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 + C2597 +
            C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
            C2192 * C438) *
               C50720 * C50817 +
           (C3601 + C3602 + C3603) * C50720 * C50708) *
              C1745 -
          ((C2199 * C4506 + C4516 + C4516 + C2192 * C4512 + C2197 * C4507 +
            C4517 + C4517 + C2191 * C4513 + C2195 * C4508 + C4518 + C4518 +
            C2190 * C4514) *
               C50720 * C50708 +
           (C2199 * C1748 + C4519 + C4519 + C2192 * C1756 + C2197 * C1749 +
            C4520 + C4520 + C2191 * C1757 + C2195 * C1750 + C4521 + C4521 +
            C2190 * C1758) *
               C50720 * C50817) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C1577 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C50577 * C928 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
               C50657 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C1577) *
              C50577 * C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C1577 -
           ((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50720 *
                C10727 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50720 *
                C10726 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50720 *
                C10725 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50720 *
                C10724) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C1577 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C260 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            C12027 * C10727) *
               C50657 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C1577) *
              C261 +
          ((C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            C11571 * C10727) *
               C1577 -
           ((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50720 *
                C10727 +
            C12027 * C10726 + C11392 * C10725 + C11393 * C10724) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
              C1743 -
          (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
           (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
               C10724) *
              C1744 +
          ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 * C10724 +
           C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
              C1745 -
          ((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50720 *
               C10727 +
           (C10728 * C10160 + C12294 + C12294 + C50527 * C10164) * C50720 *
               C10726 +
           (C10728 * C4508 + C12295 + C12295 + C50527 * C4514) * C50720 *
               C10725 +
           (C10728 * C1750 + C12296 + C12296 + C50527 * C1758) * C50720 *
               C10724) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C1577 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
            (C19061 + C19062 + C19063) * C50708) *
               C50657 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
             C13376 * C15463 + C18863 * C15464) *
                C50817 +
            (C18703 + C18704 + C18710) * C50708) *
               C1577 -
           (((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C15464 +
             C18709 * C15463 + C13219 * C15462) *
                C50708 +
            ((C10728 * C1748 + C18860 + C18860 + C50527 * C1756) * C15464 +
             C18863 * C15463 + C13376 * C15462) *
                C50817) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C1577 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50657) *
              C260 +
          (((C19060 + C19059 + C19058) * C50817 +
            (C19951 + C19952 + C19953) * C50708) *
               C50657 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C1577) *
              C261 +
          (((C18392 + C18391 + C18390) * C50817 +
            (C19308 + C19309 + C19310) * C50708) *
               C1577 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C15464 +
             C11688 * C15463 + C11386 * C15462) *
                C50708 +
            (C19953 + C19952 + C19951) * C50817) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
            C13057 * C15463 + C13058 * C15464) *
               C50817 +
           (C18387 + C18388 + C18389) * C50708) *
              C1743 -
          ((C19058 + C19059 + C19060) * C50708 +
           (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
              C1744 +
          ((C13058 * C15462 + C14878 * C15463 + C20353 * C15464) * C50817 +
           (C19457 + C19458 + C19464) * C50708) *
              C1745 -
          (((C10728 * C20343 + C20349 + C20349 + C50527 * C20345) * C15464 +
            C19463 * C15463 + C13982 * C15462) *
               C50708 +
           ((C10728 * C17636 + C20350 + C20350 + C50527 * C17640) * C15464 +
            C20353 * C15463 + C14878 * C15462) *
               C50817) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50852 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50853 +
           ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 *
                C10724 +
            C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
               C1993) *
              C50577 * C50798 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
               C50853 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50852 -
           ((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50720 *
                C10727 +
            (C10728 * C3577 + C11008 + C11008 + C50527 * C3583) * C50720 *
                C10726 +
            (C10728 * C1118 + C11009 + C11009 + C50527 * C1126) * C50720 *
                C10725 +
            (C10728 * C417 + C11010 + C11010 + C50527 * C437) * C50720 *
                C10724) *
               C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50852 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50853 +
           ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 +
             C2597 + C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
             C2192 * C438) *
                C50720 * C50817 +
            (C3601 + C3602 + C3603) * C50720 * C50708) *
               C1993) *
              C50577 * C50798 +
          (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
             C2192 * C432) *
                C50720 * C50817 +
            (C3157 + C3158 + C3159) * C50720 * C50708) *
               C50853 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50852 -
           ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
             C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
             C2190 * C1126) *
                C50720 * C50708 +
            (C2199 * C419 + C2611 + C2611 + C2192 * C439 + C2197 * C418 +
             C2612 + C2612 + C2191 * C438 + C2195 * C417 + C2613 + C2613 +
             C2190 * C437) *
                C50720 * C50817) *
               C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C50852 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50853 +
           ((C13058 * C15462 + C14878 * C15463 + C20353 * C15464) * C50817 +
            (C19457 + C19458 + C19464) * C50708) *
               C1993) *
              C50577 * C50798 +
          (((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
            (C19061 + C19062 + C19063) * C50708) *
               C50853 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C50852 -
           (((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C15464 +
             C18556 * C15463 + C13061 * C15462) *
                C50708 +
            ((C10728 * C7236 + C18550 + C18550 + C50527 * C7242) * C15464 +
             C18555 * C15463 + C13060 * C15462) *
                C50817) *
               C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C1577 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50657) *
              C260 +
          (((C3156 + C3155 + C3154) * C50720 * C50817 +
            (C4114 + C4115 + C4116) * C50720 * C50708) *
               C50657 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C1577) *
              C261 +
          (((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C3428 + C3429 + C3430) * C50720 * C50708) *
               C1577 -
           ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
             C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
             C2190 * C4097) *
                C50720 * C50708 +
            (C4116 + C4115 + C4114) * C50720 * C50817) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C1577 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50657) *
              C50577 * C928 +
          (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
             C2192 * C432) *
                C50720 * C50817 +
            (C3157 + C3158 + C3159) * C50720 * C50708) *
               C50657 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C1577) *
              C50577 * C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C1577 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50720 * C50708 +
            (C2199 * C420 + C2927 + C2927 + C2192 * C440 + C2197 * C412 +
             C2928 + C2928 + C2191 * C432 + C2195 * C413 + C2929 + C2929 +
             C2190 * C433) *
                C50720 * C50817) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C1577 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C50577 * C928 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
               C50657 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C1577) *
              C50577 * C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C1577 -
           ((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50720 *
                C10727 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50720 *
                C10726 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50720 *
                C10725 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50720 *
                C10724) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C1577 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C260 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            C12027 * C10727) *
               C50657 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C1577) *
              C261 +
          ((C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            C11571 * C10727) *
               C1577 -
           ((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50720 *
                C10727 +
            C12027 * C10726 + C11392 * C10725 + C11393 * C10724) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C1577 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C15462 + C13060 * C15463 + C18555 * C15464) * C50817 +
            (C19061 + C19062 + C19063) * C50708) *
               C50657 -
           ((C18395 + C18394 + C18393) * C50708 +
            (C13060 * C15464 + C13059 * C15463 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C15462) *
                C50817) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C15462 +
             C13376 * C15463 + C18863 * C15464) *
                C50817 +
            (C18703 + C18704 + C18710) * C50708) *
               C1577 -
           (((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C15464 +
             C18709 * C15463 + C13219 * C15462) *
                C50708 +
            ((C10728 * C1748 + C18860 + C18860 + C50527 * C1756) * C15464 +
             C18863 * C15463 + C13376 * C15462) *
                C50817) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C15462 +
             C13057 * C15463 + C13058 * C15464) *
                C50817 +
            (C18387 + C18388 + C18389) * C50708) *
               C1577 -
           ((C19058 + C19059 + C19060) * C50708 +
            (C14878 * C15464 + C13058 * C15463 + C13057 * C15462) * C50817) *
               C50657) *
              C260 +
          (((C19060 + C19059 + C19058) * C50817 +
            (C19951 + C19952 + C19953) * C50708) *
               C50657 -
           ((C18390 + C18391 + C18392) * C50708 +
            (C18389 + C18388 + C18387) * C50817) *
               C1577) *
              C261 +
          (((C18392 + C18391 + C18390) * C50817 +
            (C19308 + C19309 + C19310) * C50708) *
               C1577 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C15464 +
             C11688 * C15463 + C11386 * C15462) *
                C50708 +
            (C19953 + C19952 + C19951) * C50817) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C50806 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50629) *
              C50848 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50629 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C50806) *
              C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50593 * C50806 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C50818) *
                C7850 +
            (C13222 + C13212) * C7849 + (C13221 + C13209) * C7848) *
               C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C50806 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50629) *
              C50848 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50629 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C50806) *
              C50849 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C2195 * C413 + C2929 + C2929 + C2190 * C433 + C2197 * C412 +
             C2928 + C2928 + C2191 * C432 + C2199 * C420 + C2927 + C2927 +
             C2192 * C440) *
                C50732) *
               C50694 * C50593 * C50806 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50732 +
            (C2777 + C2776 + C2775) * C50818) *
               C50694 * C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50593 * C50806 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50593 * C50629) *
              C50848 +
          ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
            C18556 * C20908) *
               C50694 * C50593 * C50629 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50593 * C50806) *
              C50849 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
            C13376 * C20906 + C18863 * C20907 +
            (C10728 * C1748 + C18860 + C18860 + C50527 * C1756) * C20908) *
               C50694 * C50593 * C50806 -
           ((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C20908 +
            C18709 * C20907 + C13219 * C20906 + C11122 * C20905) *
               C50694 * C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
              C13057 * C50732) *
                 C7848 +
             (C12870 + C12871) * C7849 + C12882 * C7850) *
                C50807 -
            ((C13571 + C13572) * C7850 + (C13573 + C13574) * C7849 +
             (C13058 * C50732 + C13057 * C50818) * C7848) *
                C50657) *
               C50806 +
           (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
             (C11386 * C50818 + C11688 * C50732) * C7850) *
                C50657 -
            ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
             (C12871 + C12870) * C7848) *
                C50807) *
               C50629) *
              C263 +
          ((((C13059 * C50818 + C13060 * C50732) * C7848 +
             (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
                C50657 -
            (C12883 * C7850 + (C12877 + C12876) * C7849 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                 C7848) *
                C50807) *
               C50806 +
           (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
             (C12880 + C12881) * C7850) *
                C50807 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C50818) *
                 C7850 +
             (C13578 + C13577) * C7849 + (C13576 + C13575) * C7848) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50818 +
             (C5454 + C5455 + C5456) * C50732) *
                C50694 * C50807 -
            ((C5457 + C5458 + C5459) * C50732 +
             (C5456 + C5455 + C5454) * C50818) *
                C50694 * C50657) *
               C50806 +
           (((C3156 + C3155 + C3154) * C50818 +
             (C3601 + C3602 + C3603) * C50732) *
                C50694 * C50657 -
            ((C3154 + C3155 + C3156) * C50732 +
             (C2434 + C2433 + C2432) * C50818) *
                C50694 * C50807) *
               C50629) *
              C263 +
          ((((C5460 + C5461 + C5462) * C50818 +
             (C5463 + C5464 + C5465) * C50732) *
                C50694 * C50657 -
            ((C5462 + C5461 + C5460) * C50732 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50818) *
                C50694 * C50807) *
               C50806 +
           (((C2438 + C2439 + C2440) * C50818 +
             (C3157 + C3158 + C3159) * C50732) *
                C50694 * C50807 -
            ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
              C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
              C2190 * C1126) *
                 C50732 +
             (C3159 + C3158 + C3157) * C50818) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
             C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
                C50694 * C50807 -
            (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
             C13057 * C20905) *
                C50694 * C50657) *
               C50806 +
           ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
             C19463 * C20908) *
                C50694 * C50657 -
            (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
             C10881 * C20905) *
                C50694 * C50807) *
               C50629) *
              C263 +
          (((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
             C21112 * C20908) *
                C50694 * C50657 -
            (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
                C50694 * C50807) *
               C50806 +
           ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
             C18556 * C20908) *
                C50694 * C50807 -
            ((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C20908 +
             C18556 * C20907 + C13061 * C20906 + C11389 * C20905) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                C2192 * C141) *
                   C50818 +
               (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 +
                C2594 + C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
                C2192 * C433) *
                   C50732) *
                  C50694 * C50593 * C50577 * C113 -
              ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 +
                C2603 + C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
                C2190 * C434) *
                   C50732 +
               (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                C2190 * C140) *
                   C50818) *
                  C50694 * C50593 * C50577 * C114 +
              ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
                C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
                C2192 * C143) *
                   C50818 +
               (C2195 * C413 + C2929 + C2929 + C2190 * C433 + C2197 * C412 +
                C2928 + C2928 + C2191 * C432 + C2199 * C420 + C2927 + C2927 +
                C2192 * C440) *
                   C50732) *
                  C50694 * C50593 * C50577 * C115 -
              ((C2199 * C668 + C5108 + C5108 + C2192 * C670 + C2197 * C420 +
                C5109 + C5109 + C2191 * C440 + C2195 * C412 + C5110 + C5110 +
                C2190 * C432) *
                   C50732 +
               (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 +
                C2224 + C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
                C2190 * C142) *
                   C50818) *
                  C50694 * C50593 * C50577 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50818 +
                (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 +
                 C2594 + C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
                 C2192 * C433) *
                    C50732) *
                   C50694 * C50593 * C260 -
               ((C3154 + C3155 + C3156) * C50732 +
                (C2434 + C2433 + C2432) * C50818) *
                   C50694 * C50593 * C261 +
               ((C2437 + C2436 + C2435) * C50818 +
                (C4114 + C4115 + C4116) * C50732) *
                   C50694 * C50593 * C262) *
                  C263 +
              (((C2438 + C2439 + C2440) * C50818 +
                (C3157 + C3158 + C3159) * C50732) *
                   C50694 * C50593 * C261 -
               ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 +
                 C2603 + C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
                 C2190 * C434) *
                    C50732 +
                (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                 C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                 C2190 * C140) *
                    C50818) *
                   C50694 * C50593 * C260 -
               ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
                 C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
                 C2190 * C1473) *
                    C50732 +
                (C2443 + C2442 + C2441) * C50818) *
                   C50694 * C50593 * C262) *
                  C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C409 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C410 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C2195 * C1750 + C4521 + C4521 + C2190 * C1758 + C2197 * C1749 +
             C4520 + C4520 + C2191 * C1757 + C2199 * C1748 + C4519 + C4519 +
             C2192 * C1756) *
                C50732) *
               C50694 * C411) *
              C50577 * C263 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C410 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C409 -
           ((C2199 * C1747 + C5427 + C5427 + C2192 * C1755 + C2197 * C1748 +
             C5428 + C5428 + C2191 * C1756 + C2195 * C1749 + C5429 + C5429 +
             C2190 * C1757) *
                C50732 +
            (C5465 + C5464 + C5463) * C50818) *
               C50694 * C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
               C7848 +
           (C10881 * C50818 + C11388 * C50732) * C7849 +
           (C10882 * C50818 + C11387 * C50732) * C7850) *
              C50593 * C50577 * C113 -
          ((C11390 * C50732 + C10886 * C50818) * C7850 +
           (C11389 * C50732 + C10885 * C50818) * C7849 +
           ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
               C7848) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50732) *
               C7848 +
           (C11122 * C50818 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50732) *
               C7849 +
           (C11123 * C50818 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50732) *
               C7850) *
              C50593 * C50577 * C115 -
          (((C10728 * C1463 + C12721 + C12721 + C50527 * C1471) * C50732 +
            (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50818) *
               C7850 +
           ((C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50732 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50818) *
               C7849 +
           ((C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50732 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50818) *
               C7848) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C260 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C261 +
           (C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C10884 * C50818 + C12026 * C50732) * C7850) *
               C50593 * C262) *
              C263 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C261 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C260 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C50818) *
                C7850 +
            (C12881 + C12880) * C7849 + C12883 * C7848) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C409 -
           ((C11687 * C50732 + C11387 * C50818) * C7850 +
            (C11686 * C50732 + C11388 * C50818) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C410 +
           ((C13058 * C50818 +
             (C10728 * C1750 + C12296 + C12296 + C50527 * C1758) * C50732) *
                C7848 +
            (C11686 * C50818 +
             (C10728 * C4508 + C12295 + C12295 + C50527 * C4514) * C50732) *
                C7849 +
            (C11687 * C50818 +
             (C10728 * C10160 + C12294 + C12294 + C50527 * C10164) * C50732) *
                C7850) *
               C411) *
              C50577 * C263 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C11389 * C50818 + C13061 * C50732) * C7849 +
            (C11390 * C50818 + C13062 * C50732) * C7850) *
               C410 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C409 -
           (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C50732 +
             C13062 * C50818) *
                C7850 +
            ((C10728 * C4507 + C13043 + C13043 + C50527 * C4513) * C50732 +
             C13061 * C50818) *
                C7849 +
            ((C10728 * C1749 + C13044 + C13044 + C50527 * C1757) * C50732 +
             C13060 * C50818) *
                C7848) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
           C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
              C50694 * C50593 * C50577 * C113 -
          (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
           (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
              C50694 * C50593 * C50577 * C114 +
          ((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
           C13376 * C20906 + C18863 * C20907 +
           (C10728 * C1748 + C18860 + C18860 + C50527 * C1756) * C20908) *
              C50694 * C50593 * C50577 * C115 -
          ((C10728 * C1747 + C20910 + C20910 + C50527 * C1755) * C20908 +
           (C10728 * C419 + C18240 + C18240 + C50527 * C439) * C20907 +
           (C10728 * C412 + C12723 + C12723 + C50527 * C432) * C20906 +
           (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C20905) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50593 * C260 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50593 * C261 +
           (C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
            C13983 * C20908) *
               C50694 * C50593 * C262) *
              C263 +
          ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
            C18556 * C20908) *
               C50694 * C50593 * C261 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50593 * C260 -
           ((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C20908 +
            C13062 * C20907 + C11390 * C20906 + C10886 * C20905) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C409 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C410 +
           (C13058 * C20905 + C14878 * C20906 + C20353 * C20907 +
            (C10728 * C17636 + C20350 + C20350 + C50527 * C17640) * C20908) *
               C50694 * C411) *
              C50577 * C263 +
          ((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
            C21112 * C20908) *
               C50694 * C410 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C409 -
           ((C10728 * C17635 + C21109 + C21109 + C50527 * C17639) * C20908 +
            C21112 * C20907 + C18555 * C20906 + C13060 * C20905) *
               C50694 * C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50807 -
           ((C11687 * C50732 + C11387 * C50818) * C7850 +
            (C11686 * C50732 + C11388 * C50818) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50577 * C50848 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C11389 * C50818 + C13061 * C50732) * C7849 +
            (C11390 * C50818 + C13062 * C50732) * C7850) *
               C50657 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50807) *
              C50577 * C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50807 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C50818) *
                C7850 +
            ((C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C50732 +
             C13219 * C50818) *
                C7849 +
            ((C10728 * C418 + C13373 + C13373 + C50527 * C438) * C50732 +
             C13376 * C50818) *
                C7848) *
               C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50807 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50577 * C50848 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50657 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50807) *
              C50577 * C50849 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C50807 -
           ((C2199 * C421 + C5764 + C5764 + C2192 * C441 + C2197 * C419 +
             C5765 + C5765 + C2191 * C439 + C2195 * C418 + C5766 + C5766 +
             C2190 * C438) *
                C50732 +
            (C5775 + C5774 + C5773) * C50818) *
               C50694 * C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50807 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50657) *
              C50577 * C50848 +
          ((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
            C21112 * C20908) *
               C50694 * C50657 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50807) *
              C50577 * C50849 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
            C13376 * C20906 + C18863 * C20907 + C21314 * C20908) *
               C50694 * C50807 -
           ((C10728 * C7235 + C21311 + C21311 + C50527 * C7241) * C20908 +
            C21314 * C20907 + C18863 * C20906 + C13376 * C20905) *
               C50694 * C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
             C2192 * C433) *
                C50732) *
               C50694 * C50593 * C260 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C261 +
           ((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50593 * C262) *
              C263 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C261 -
           ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
             C2190 * C434) *
                C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C260 -
           ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
             C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
             C2190 * C1473) *
                C50732 +
            (C2443 + C2442 + C2441) * C50818) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 + C2594 +
            C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
            C2192 * C433) *
               C50732) *
              C50694 * C50593 * C50577 * C113 -
          ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 + C2603 +
            C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
            C2190 * C434) *
               C50732 +
           (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 + C2212 +
            C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
            C2190 * C140) *
               C50818) *
              C50694 * C50593 * C50577 * C114 +
          ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 + C2215 +
            C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
            C2192 * C143) *
               C50818 +
           (C2195 * C413 + C2929 + C2929 + C2190 * C433 + C2197 * C412 + C2928 +
            C2928 + C2191 * C432 + C2199 * C420 + C2927 + C2927 +
            C2192 * C440) *
               C50732) *
              C50694 * C50593 * C50577 * C115 -
          ((C2199 * C668 + C5108 + C5108 + C2192 * C670 + C2197 * C420 + C5109 +
            C5109 + C2191 * C440 + C2195 * C412 + C5110 + C5110 +
            C2190 * C432) *
               C50732 +
           (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 + C2224 +
            C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
            C2190 * C142) *
               C50818) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
               C7848 +
           (C10881 * C50818 + C11388 * C50732) * C7849 +
           (C10882 * C50818 + C11387 * C50732) * C7850) *
              C50593 * C50577 * C113 -
          ((C11390 * C50732 + C10886 * C50818) * C7850 +
           (C11389 * C50732 + C10885 * C50818) * C7849 +
           ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
               C7848) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50732) *
               C7848 +
           (C11122 * C50818 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50732) *
               C7849 +
           (C11123 * C50818 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50732) *
               C7850) *
              C50593 * C50577 * C115 -
          (((C10728 * C1463 + C12721 + C12721 + C50527 * C1471) * C50732 +
            (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50818) *
               C7850 +
           ((C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50732 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50818) *
               C7849 +
           ((C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50732 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50818) *
               C7848) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C260 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C261 +
           (C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C10884 * C50818 + C12026 * C50732) * C7850) *
               C50593 * C262) *
              C263 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C261 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C260 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C50818) *
                C7850 +
            (C12881 + C12880) * C7849 + C12883 * C7848) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
           C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
              C50694 * C50593 * C50577 * C113 -
          (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
           (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
              C50694 * C50593 * C50577 * C114 +
          ((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
           C13376 * C20906 + C18863 * C20907 +
           (C10728 * C1748 + C18860 + C18860 + C50527 * C1756) * C20908) *
              C50694 * C50593 * C50577 * C115 -
          ((C10728 * C1747 + C20910 + C20910 + C50527 * C1755) * C20908 +
           (C10728 * C419 + C18240 + C18240 + C50527 * C439) * C20907 +
           (C10728 * C412 + C12723 + C12723 + C50527 * C432) * C20906 +
           (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C20905) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50593 * C260 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50593 * C261 +
           (C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
            C13983 * C20908) *
               C50694 * C50593 * C262) *
              C263 +
          ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
            C18556 * C20908) *
               C50694 * C50593 * C261 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50593 * C260 -
           ((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C20908 +
            C13062 * C20907 + C11390 * C20906 + C10886 * C20905) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C50850 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50851 +
           (C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C50593 * C1232) *
              C50798 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50851 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C50850 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C50818) *
                C7850 +
            (C12881 + C12880) * C7849 + C12883 * C7848) *
               C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C50850 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50851 +
           ((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50593 * C1232) *
              C50798 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50851 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C50850 -
           ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
             C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
             C2190 * C1473) *
                C50732 +
            (C2443 + C2442 + C2441) * C50818) *
               C50694 * C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50593 * C50850 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50593 * C50851 +
           (C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
            C13983 * C20908) *
               C50694 * C50593 * C1232) *
              C50798 +
          ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
            C18556 * C20908) *
               C50694 * C50593 * C50851 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50593 * C50850 -
           ((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C20908 +
            C13062 * C20907 + C11390 * C20906 + C10886 * C20905) *
               C50694 * C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50807 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50850 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50657 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50807) *
              C50851 +
          ((C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C50807 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C50818) *
                C7850 +
            (C14474 + C14473) * C7849 + C14472 * C7848) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50807 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50850 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50657 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50807) *
              C50851 +
          (((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50807 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50732 +
            (C4116 + C4115 + C4114) * C50818) *
               C50694 * C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50807 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50657) *
              C50850 +
          ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
            C19463 * C20908) *
               C50694 * C50657 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50807) *
              C50851 +
          ((C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
            C13983 * C20908) *
               C50694 * C50807 -
           ((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C20908 +
            C13983 * C20907 + C11687 * C20906 + C11387 * C20905) *
               C50694 * C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50818 +
                (C5454 + C5455 + C5456) * C50732) *
                   C50694 * C50593 * C926 -
               ((C3154 + C3155 + C3156) * C50732 +
                (C2434 + C2433 + C2432) * C50818) *
                   C50694 * C50593 * C50629) *
                  C928 +
              (((C2438 + C2439 + C2440) * C50818 +
                (C3157 + C3158 + C3159) * C50732) *
                   C50694 * C50593 * C50629 -
               ((C5462 + C5461 + C5460) * C50732 +
                (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                 C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                 C2190 * C140) *
                    C50818) *
                   C50694 * C50593 * C926) *
                  C929 +
              (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
                 C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
                 C2192 * C143) *
                    C50818 +
                (C5773 + C5774 + C5775) * C50732) *
                   C50694 * C50593 * C926 -
               ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
                 C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
                 C2190 * C817) *
                    C50732 +
                (C2777 + C2776 + C2775) * C50818) *
                   C50694 * C50593 * C50629) *
                  C930) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                C2192 * C141) *
                   C50818 +
               (C5454 + C5455 + C5456) * C50732) *
                  C50694 * C50593 * C997 -
              ((C3154 + C3155 + C3156) * C50732 +
               (C2434 + C2433 + C2432) * C50818) *
                  C50694 * C50593 * C998 +
              ((C2437 + C2436 + C2435) * C50818 +
               (C4114 + C4115 + C4116) * C50732) *
                  C50694 * C50593 * C999 -
              ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
                C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
                C2190 * C4097) *
                   C50732 +
               (C3430 + C3429 + C3428) * C50818) *
                  C50694 * C50593 * C1000) *
             C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C409 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C410 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C2195 * C1750 + C4521 + C4521 + C2190 * C1758 + C2197 * C1749 +
             C4520 + C4520 + C2191 * C1757 + C2199 * C1748 + C4519 + C4519 +
             C2192 * C1756) *
                C50732) *
               C50694 * C411) *
              C926 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C410 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C409 -
           ((C2199 * C4506 + C4516 + C4516 + C2192 * C4512 + C2197 * C4507 +
             C4517 + C4517 + C2191 * C4513 + C2195 * C4508 + C4518 + C4518 +
             C2190 * C4514) *
                C50732 +
            (C3603 + C3602 + C3601) * C50818) *
               C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C926 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50629) *
              C928 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50629 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50593 * C926 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C50818) *
                C7850 +
            (C13222 + C13212) * C7849 + (C13221 + C13209) * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            C13057 * C50732) *
               C7848 +
           (C12870 + C12871) * C7849 + C12882 * C7850) *
              C50593 * C997 -
          (C13823 * C7850 + (C12873 + C12872) * C7849 +
           (C12871 + C12870) * C7848) *
              C50593 * C998 +
          (C12882 * C7848 + (C12875 + C12874) * C7849 +
           (C13824 + C13825) * C7850) *
              C50593 * C999 -
          (((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50732 +
            C11570 * C50818) *
               C7850 +
           (C13825 + C13824) * C7849 + C13823 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C409 -
           ((C13571 + C13572) * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C410 +
           ((C13058 * C50818 +
             (C10728 * C1750 + C12296 + C12296 + C50527 * C1758) * C50732) *
                C7848 +
            (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
               C411) *
              C926 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C11386 * C50818 + C11688 * C50732) * C7850) *
               C410 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C409 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50732 +
             C11688 * C50818) *
                C7850 +
            (C13985 + C13975) * C7849 + (C13984 + C13972) * C7848) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50593 * C926 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50593 * C50629) *
              C928 +
          ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
            C18556 * C20908) *
               C50694 * C50593 * C50629 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50593 * C926) *
              C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
            C13376 * C20906 + C18863 * C20907 + C21314 * C20908) *
               C50694 * C50593 * C926 -
           ((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C20908 +
            C18709 * C20907 + C13219 * C20906 + C11122 * C20905) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
           C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
              C50694 * C50593 * C997 -
          (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
           C10881 * C20905) *
              C50694 * C50593 * C998 +
          (C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
           C13983 * C20908) *
              C50694 * C50593 * C999 -
          ((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C20908 +
           C11688 * C20907 + C11386 * C20906 + C10883 * C20905) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C409 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C410 +
           (C13058 * C20905 + C14878 * C20906 + C20353 * C20907 +
            (C10728 * C17636 + C20350 + C20350 + C50527 * C17640) * C20908) *
               C50694 * C411) *
              C926 +
          ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
            C19463 * C20908) *
               C50694 * C410 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C409 -
           ((C10728 * C20343 + C20349 + C20349 + C50527 * C20345) * C20908 +
            C19463 * C20907 + C13982 * C20906 + C11686 * C20905) *
               C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
              C13057 * C50732) *
                 C7848 +
             (C12870 + C12871) * C7849 + C12882 * C7850) *
                C50807 -
            ((C13571 + C13572) * C7850 + (C13573 + C13574) * C7849 +
             (C13058 * C50732 + C13057 * C50818) * C7848) *
                C50657) *
               C926 +
           (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
             (C11386 * C50818 + C11688 * C50732) * C7850) *
                C50657 -
            (C13823 * C7850 + (C12873 + C12872) * C7849 +
             (C12871 + C12870) * C7848) *
                C50807) *
               C50629) *
              C50798 +
          ((((C13059 * C50818 + C13060 * C50732) * C7848 +
             (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
                C50657 -
            (C12883 * C7850 + (C12877 + C12876) * C7849 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                 C7848) *
                C50807) *
               C926 +
           (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
             (C12880 + C12881) * C7850) *
                C50807 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C50818) *
                 C7850 +
             (C13578 + C13577) * C7849 + (C13576 + C13575) * C7848) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50818 +
             (C5454 + C5455 + C5456) * C50732) *
                C50694 * C50807 -
            ((C5457 + C5458 + C5459) * C50732 +
             (C5456 + C5455 + C5454) * C50818) *
                C50694 * C50657) *
               C926 +
           (((C3156 + C3155 + C3154) * C50818 +
             (C3601 + C3602 + C3603) * C50732) *
                C50694 * C50657 -
            ((C3154 + C3155 + C3156) * C50732 +
             (C2434 + C2433 + C2432) * C50818) *
                C50694 * C50807) *
               C50629) *
              C50798 +
          ((((C5460 + C5461 + C5462) * C50818 +
             (C5463 + C5464 + C5465) * C50732) *
                C50694 * C50657 -
            ((C5462 + C5461 + C5460) * C50732 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50818) *
                C50694 * C50807) *
               C926 +
           (((C2438 + C2439 + C2440) * C50818 +
             (C3157 + C3158 + C3159) * C50732) *
                C50694 * C50807 -
            ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
              C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
              C2190 * C1126) *
                 C50732 +
             (C3159 + C3158 + C3157) * C50818) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
             C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
                C50694 * C50807 -
            (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
             C13057 * C20905) *
                C50694 * C50657) *
               C926 +
           ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
             C19463 * C20908) *
                C50694 * C50657 -
            (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
             C10881 * C20905) *
                C50694 * C50807) *
               C50629) *
              C50798 +
          (((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
             C21112 * C20908) *
                C50694 * C50657 -
            (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
                C50694 * C50807) *
               C926 +
           ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
             C18556 * C20908) *
                C50694 * C50807 -
            ((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C20908 +
             C18556 * C20907 + C13061 * C20906 + C11389 * C20905) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C5454 + C5455 + C5456) * C50732) *
              C50694 * C50593 * C997 -
          ((C3154 + C3155 + C3156) * C50732 +
           (C2434 + C2433 + C2432) * C50818) *
              C50694 * C50593 * C998 +
          ((C2437 + C2436 + C2435) * C50818 +
           (C4114 + C4115 + C4116) * C50732) *
              C50694 * C50593 * C999 -
          ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
            C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
            C2190 * C4097) *
               C50732 +
           (C3430 + C3429 + C3428) * C50818) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C926 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50629) *
              C928 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50629 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C926) *
              C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C50593 * C926 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50732 +
            (C2777 + C2776 + C2775) * C50818) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C926 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50629) *
              C928 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50629 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50593 * C926 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C50818) *
                C7850 +
            (C13222 + C13212) * C7849 + (C13221 + C13209) * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            C13057 * C50732) *
               C7848 +
           (C12870 + C12871) * C7849 + C12882 * C7850) *
              C50593 * C997 -
          (C13823 * C7850 + (C12873 + C12872) * C7849 +
           (C12871 + C12870) * C7848) *
              C50593 * C998 +
          (C12882 * C7848 + (C12875 + C12874) * C7849 +
           (C13824 + C13825) * C7850) *
              C50593 * C999 -
          (((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50732 +
            C11570 * C50818) *
               C7850 +
           (C13825 + C13824) * C7849 + C13823 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50593 * C926 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50593 * C50629) *
              C928 +
          ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
            C18556 * C20908) *
               C50694 * C50593 * C50629 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50593 * C926) *
              C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
            C13376 * C20906 + C18863 * C20907 + C21314 * C20908) *
               C50694 * C50593 * C926 -
           ((C10728 * C4506 + C18859 + C18859 + C50527 * C4512) * C20908 +
            C18709 * C20907 + C13219 * C20906 + C11122 * C20905) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
           C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
              C50694 * C50593 * C997 -
          (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
           C10881 * C20905) *
              C50694 * C50593 * C998 +
          (C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
           C13983 * C20908) *
              C50694 * C50593 * C999 -
          ((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C20908 +
           C11688 * C20907 + C11386 * C20906 + C10883 * C20905) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
              C13057 * C50732) *
                 C7848 +
             (C12870 + C12871) * C7849 + C12882 * C7850) *
                C1577 -
            (C14472 * C7850 + (C13573 + C13574) * C7849 +
             (C13058 * C50732 + C13057 * C50818) * C7848) *
                C50657) *
               C50806 +
           (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
             (C14473 + C14474) * C7850) *
                C50657 -
            (C13823 * C7850 + (C12873 + C12872) * C7849 +
             (C12871 + C12870) * C7848) *
                C1577) *
               C50629) *
              C50798 +
          ((((C13059 * C50818 + C13060 * C50732) * C7848 +
             (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
                C50657 -
            (C12883 * C7850 + (C12877 + C12876) * C7849 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                 C7848) *
                C1577) *
               C50806 +
           (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
             (C12880 + C12881) * C7850) *
                C1577 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C50818) *
                 C7850 +
             (C13578 + C13577) * C7849 + (C13576 + C13575) * C7848) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50818 +
             (C5454 + C5455 + C5456) * C50732) *
                C50694 * C1577 -
            ((C5457 + C5458 + C5459) * C50732 +
             (C5456 + C5455 + C5454) * C50818) *
                C50694 * C50657) *
               C50806 +
           (((C3156 + C3155 + C3154) * C50818 +
             (C3601 + C3602 + C3603) * C50732) *
                C50694 * C50657 -
            ((C3154 + C3155 + C3156) * C50732 +
             (C2434 + C2433 + C2432) * C50818) *
                C50694 * C1577) *
               C50629) *
              C50798 +
          ((((C5460 + C5461 + C5462) * C50818 +
             (C5463 + C5464 + C5465) * C50732) *
                C50694 * C50657 -
            ((C5462 + C5461 + C5460) * C50732 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50818) *
                C50694 * C1577) *
               C50806 +
           (((C2438 + C2439 + C2440) * C50818 +
             (C3157 + C3158 + C3159) * C50732) *
                C50694 * C1577 -
            ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
              C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
              C2190 * C1126) *
                 C50732 +
             (C3159 + C3158 + C3157) * C50818) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
             C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
                C50694 * C1577 -
            (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
             C13057 * C20905) *
                C50694 * C50657) *
               C50806 +
           ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
             C19463 * C20908) *
                C50694 * C50657 -
            (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
             C10881 * C20905) *
                C50694 * C1577) *
               C50629) *
              C50798 +
          (((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
             C21112 * C20908) *
                C50694 * C50657 -
            (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
                C50694 * C1577) *
               C50806 +
           ((C10885 * C20905 + C11389 * C20906 + C13061 * C20907 +
             C18556 * C20908) *
                C50694 * C1577 -
            ((C10728 * C16743 + C18549 + C18549 + C50527 * C16745) * C20908 +
             C18556 * C20907 + C13061 * C20906 + C11389 * C20905) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50852 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50853 +
           ((C13058 * C50818 + C14878 * C50732) * C7848 +
            (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
               C1993) *
              C50806 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50853 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50852 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50732 +
             C11688 * C50818) *
                C7850 +
            (C13985 + C13975) * C7849 + (C13984 + C13972) * C7848) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50852 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50853 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C7260 + C7261 + C7262) * C50732) *
               C50694 * C1993) *
              C50806 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50853 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50852 -
           ((C2199 * C4506 + C4516 + C4516 + C2192 * C4512 + C2197 * C4507 +
             C4517 + C4517 + C2191 * C4513 + C2195 * C4508 + C4518 + C4518 +
             C2190 * C4514) *
                C50732 +
            (C3603 + C3602 + C3601) * C50818) *
               C50694 * C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50852 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50853 +
           (C13058 * C20905 + C14878 * C20906 + C20353 * C20907 +
            C22303 * C20908) *
               C50694 * C1993) *
              C50806 +
          ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
            C19463 * C20908) *
               C50694 * C50853 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C50852 -
           ((C10728 * C20343 + C20349 + C20349 + C50527 * C20345) * C20908 +
            C19463 * C20907 + C13982 * C20906 + C11686 * C20905) *
               C50694 * C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50818 +
                (C5454 + C5455 + C5456) * C50732) *
                   C50694 * C1577 -
               ((C5457 + C5458 + C5459) * C50732 +
                (C5456 + C5455 + C5454) * C50818) *
                   C50694 * C50657) *
                  C50577 * C928 +
              (((C5460 + C5461 + C5462) * C50818 +
                (C5463 + C5464 + C5465) * C50732) *
                   C50694 * C50657 -
               ((C5462 + C5461 + C5460) * C50732 +
                (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
                 C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
                 C2190 * C140) *
                    C50818) *
                   C50694 * C1577) *
                  C50577 * C929 +
              (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
                 C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
                 C2192 * C143) *
                    C50818 +
                (C5773 + C5774 + C5775) * C50732) *
                   C50694 * C1577 -
               ((C2199 * C421 + C5764 + C5764 + C2192 * C441 + C2197 * C419 +
                 C5765 + C5765 + C2191 * C439 + C2195 * C418 + C5766 + C5766 +
                 C2190 * C438) *
                    C50732 +
                (C5775 + C5774 + C5773) * C50818) *
                   C50694 * C50657) *
                  C50577 * C930) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
                 C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
                 C2192 * C141) *
                    C50818 +
                (C5454 + C5455 + C5456) * C50732) *
                   C50694 * C1577 -
               ((C5457 + C5458 + C5459) * C50732 +
                (C5456 + C5455 + C5454) * C50818) *
                   C50694 * C50657) *
                  C260 +
              (((C3156 + C3155 + C3154) * C50818 +
                (C3601 + C3602 + C3603) * C50732) *
                   C50694 * C50657 -
               ((C3154 + C3155 + C3156) * C50732 +
                (C2434 + C2433 + C2432) * C50818) *
                   C50694 * C1577) *
                  C261 +
              (((C2437 + C2436 + C2435) * C50818 +
                (C4114 + C4115 + C4116) * C50732) *
                   C50694 * C1577 -
               ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
                 C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
                 C2190 * C3584) *
                    C50732 +
                (C4116 + C4115 + C4114) * C50818) *
                   C50694 * C50657) *
                  C262) *
             C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C5454 + C5455 + C5456) * C50732) *
              C50694 * C1743 -
          ((C5457 + C5458 + C5459) * C50732 +
           (C5456 + C5455 + C5454) * C50818) *
              C50694 * C1744 +
          ((C5459 + C5458 + C5457) * C50818 +
           (C7260 + C7261 + C7262) * C50732) *
              C50694 * C1745 -
          ((C2199 * C7235 + C7251 + C7251 + C2192 * C7241 + C2197 * C7236 +
            C7252 + C7252 + C2191 * C7242 + C2195 * C7237 + C7253 + C7253 +
            C2190 * C7243) *
               C50732 +
           (C7262 + C7261 + C7260) * C50818) *
              C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
               C50657 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C1577 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C50818) *
                C7850 +
            ((C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C50732 +
             C13219 * C50818) *
                C7849 +
            ((C10728 * C418 + C13373 + C13373 + C50527 * C438) * C50732 +
             C13376 * C50818) *
                C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C260 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50657 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C1577) *
              C261 +
          ((C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C1577 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C50818) *
                C7850 +
            (C14474 + C14473) * C7849 + C14472 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            C13057 * C50732) *
               C7848 +
           (C12870 + C12871) * C7849 + C12882 * C7850) *
              C1743 -
          (C14472 * C7850 + (C13573 + C13574) * C7849 +
           (C13058 * C50732 + C13057 * C50818) * C7848) *
              C1744 +
          ((C13058 * C50818 + C14878 * C50732) * C7848 +
           (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
              C1745 -
          (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C50732 +
            C13983 * C50818) *
               C7850 +
           ((C10728 * C14865 + C14874 + C14874 + C50527 * C14869) * C50732 +
            C13982 * C50818) *
               C7849 +
           ((C10728 * C7237 + C14875 + C14875 + C50527 * C7243) * C50732 +
            C14878 * C50818) *
               C7848) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C1577 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50657) *
              C50577 * C928 +
          ((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
            C21112 * C20908) *
               C50694 * C50657 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
            C13376 * C20906 + C18863 * C20907 + C21314 * C20908) *
               C50694 * C1577 -
           ((C10728 * C7235 + C21311 + C21311 + C50527 * C7241) * C20908 +
            C21314 * C20907 + C18863 * C20906 + C13376 * C20905) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C1577 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50657) *
              C260 +
          ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
            C19463 * C20908) *
               C50694 * C50657 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C1577) *
              C261 +
          ((C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
            C13983 * C20908) *
               C50694 * C1577 -
           ((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C20908 +
            C13983 * C20907 + C11687 * C20906 + C11387 * C20905) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
           C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
              C50694 * C1743 -
          (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
           C13057 * C20905) *
              C50694 * C1744 +
          (C13058 * C20905 + C14878 * C20906 + C20353 * C20907 +
           C22303 * C20908) *
              C50694 * C1745 -
          ((C10728 * C22294 + C22300 + C22300 + C50527 * C22296) * C20908 +
           C22303 * C20907 + C20353 * C20906 + C14878 * C20905) *
              C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50852 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50853 +
           ((C13058 * C50818 + C14878 * C50732) * C7848 +
            (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
               C1993) *
              C50577 * C50798 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
               C50853 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50852 -
           (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C50732 +
             C13062 * C50818) *
                C7850 +
            ((C10728 * C4507 + C13043 + C13043 + C50527 * C4513) * C50732 +
             C13061 * C50818) *
                C7849 +
            ((C10728 * C1749 + C13044 + C13044 + C50527 * C1757) * C50732 +
             C13060 * C50818) *
                C7848) *
               C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50852 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50853 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C7260 + C7261 + C7262) * C50732) *
               C50694 * C1993) *
              C50577 * C50798 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50853 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50852 -
           ((C2199 * C1747 + C5427 + C5427 + C2192 * C1755 + C2197 * C1748 +
             C5428 + C5428 + C2191 * C1756 + C2195 * C1749 + C5429 + C5429 +
             C2190 * C1757) *
                C50732 +
            (C5465 + C5464 + C5463) * C50818) *
               C50694 * C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C50852 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50853 +
           (C13058 * C20905 + C14878 * C20906 + C20353 * C20907 +
            C22303 * C20908) *
               C50694 * C1993) *
              C50577 * C50798 +
          ((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
            C21112 * C20908) *
               C50694 * C50853 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C50852 -
           ((C10728 * C17635 + C21109 + C21109 + C50527 * C17639) * C20908 +
            C21112 * C20907 + C18555 * C20906 + C13060 * C20905) *
               C50694 * C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C1577 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C260 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50657 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C1577) *
              C261 +
          (((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C1577 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50732 +
            (C4116 + C4115 + C4114) * C50818) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C1577 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50657 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C1577 -
           ((C2199 * C421 + C5764 + C5764 + C2192 * C441 + C2197 * C419 +
             C5765 + C5765 + C2191 * C439 + C2195 * C418 + C5766 + C5766 +
             C2190 * C438) *
                C50732 +
            (C5775 + C5774 + C5773) * C50818) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
               C50657 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C1577 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C50818) *
                C7850 +
            ((C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C50732 +
             C13219 * C50818) *
                C7849 +
            ((C10728 * C418 + C13373 + C13373 + C50527 * C438) * C50732 +
             C13376 * C50818) *
                C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C260 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50657 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C1577) *
              C261 +
          ((C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C1577 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C50818) *
                C7850 +
            (C14474 + C14473) * C7849 + C14472 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C1577 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50657) *
              C50577 * C928 +
          ((C13059 * C20905 + C13060 * C20906 + C18555 * C20907 +
            C21112 * C20908) *
               C50694 * C50657 -
           (C18555 * C20908 + C13060 * C20907 + C13059 * C20906 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C20905) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C20905 +
            C13376 * C20906 + C18863 * C20907 + C21314 * C20908) *
               C50694 * C1577 -
           ((C10728 * C7235 + C21311 + C21311 + C50527 * C7241) * C20908 +
            C21314 * C20907 + C18863 * C20906 + C13376 * C20905) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C20905 +
            C13057 * C20906 + C13058 * C20907 + C14878 * C20908) *
               C50694 * C1577 -
           (C20353 * C20908 + C14878 * C20907 + C13058 * C20906 +
            C13057 * C20905) *
               C50694 * C50657) *
              C260 +
          ((C11388 * C20905 + C11686 * C20906 + C13982 * C20907 +
            C19463 * C20908) *
               C50694 * C50657 -
           (C13982 * C20908 + C11686 * C20907 + C11388 * C20906 +
            C10881 * C20905) *
               C50694 * C1577) *
              C261 +
          ((C10882 * C20905 + C11387 * C20906 + C11687 * C20907 +
            C13983 * C20908) *
               C50694 * C1577 -
           ((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C20908 +
            C13983 * C20907 + C11687 * C20906 + C11387 * C20905) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50593 * C50806 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50593 * C50629) *
                       C50848 +
                   (((C22975 + C22976 + C22977) * C32096 +
                     (C23694 + C23695 + C23696) * C50732) *
                        C50694 * C50593 * C50629 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50593 * C50806) *
                       C50849 +
                   (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                      C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                      C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                         C32096 +
                     (C22732 * C413 + C23466 + C23466 + C50847 * C433 +
                      C22734 * C412 + C23465 + C23465 + C50831 * C432 +
                      C22736 * C420 + C23464 + C23464 + C22729 * C440) *
                         C50732) *
                        C50694 * C50593 * C50806 -
                    ((C22736 * C809 + C23461 + C23461 + C22729 * C819 +
                      C22734 * C808 + C23462 + C23462 + C50831 * C818 +
                      C22732 * C807 + C23463 + C23463 + C50847 * C817) *
                         C50732 +
                     (C23314 + C23313 + C23312) * C32096) *
                        C50694 * C50593 * C50629) *
                       C560)) /
                 (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                       C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                       C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                          C32096 +
                      (C32445 + C32446 + C32447) * C50732) *
                         C50694 * C50807 -
                     ((C32448 + C32449 + C32450) * C50732 +
                      (C32447 + C32446 + C32445) * C32096) *
                         C50694 * C50657) *
                        C50806 +
                    (((C23693 + C23692 + C23691) * C32096 +
                      (C24120 + C24121 + C24122) * C50732) *
                         C50694 * C50657 -
                     ((C23691 + C23692 + C23693) * C50732 +
                      (C22971 + C22970 + C22969) * C32096) *
                         C50694 * C50807) *
                        C50629) *
                       C263 +
                   ((((C32451 + C32452 + C32453) * C32096 +
                      (C32454 + C32455 + C32456) * C50732) *
                         C50694 * C50657 -
                     ((C32453 + C32452 + C32451) * C50732 +
                      (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                       C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                       C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                          C32096) *
                         C50694 * C50807) *
                        C50806 +
                    (((C22975 + C22976 + C22977) * C32096 +
                      (C23694 + C23695 + C23696) * C50732) *
                         C50694 * C50807 -
                     ((C22736 * C1116 + C23145 + C23145 + C22729 * C1124 +
                       C22734 * C1117 + C23146 + C23146 + C50831 * C1125 +
                       C22732 * C1118 + C23147 + C23147 + C50847 * C1126) *
                          C50732 +
                      (C23696 + C23695 + C23694) * C32096) *
                         C50694 * C50657) *
                        C50629) *
                       C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[137] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C22732 * C415 + C23132 + C23132 + C50847 * C435 +
                      C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                      C22736 * C413 + C23130 + C23130 + C22729 * C433) *
                         C50732) *
                        C50694 * C50593 * C260 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50593 * C261 +
                    ((C22974 + C22973 + C22972) * C32096 +
                     (C24624 + C24625 + C24626) * C50732) *
                        C50694 * C50593 * C262) *
                       C263 +
                   (((C22975 + C22976 + C22977) * C32096 +
                     (C23694 + C23695 + C23696) * C50732) *
                        C50694 * C50593 * C261 -
                    ((C22736 * C412 + C23141 + C23141 + C22729 * C432 +
                      C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                      C22732 * C414 + C23139 + C23139 + C50847 * C434) *
                         C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50593 * C260 -
                    ((C22736 * C1463 + C23676 + C23676 + C22729 * C1471 +
                      C22734 * C1464 + C23677 + C23677 + C50831 * C1472 +
                      C22732 * C1465 + C23678 + C23678 + C50847 * C1473) *
                         C50732 +
                     (C22980 + C22979 + C22978) * C32096) *
                        C50694 * C50593 * C262) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C32096 +
                    (C22732 * C415 + C23132 + C23132 + C50847 * C435 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22736 * C413 + C23130 + C23130 + C22729 * C433) *
                        C50732) *
                       C50694 * C50593 * C50577 * C113 -
                   ((C22736 * C412 + C23141 + C23141 + C22729 * C432 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22732 * C414 + C23139 + C23139 + C50847 * C434) *
                        C50732 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C32096) *
                       C50694 * C50593 * C50577 * C114 +
                   ((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                     C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                     C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                        C32096 +
                    (C22732 * C413 + C23466 + C23466 + C50847 * C433 +
                     C22734 * C412 + C23465 + C23465 + C50831 * C432 +
                     C22736 * C420 + C23464 + C23464 + C22729 * C440) *
                        C50732) *
                       C50694 * C50593 * C50577 * C115 -
                   ((C22736 * C668 + C32099 + C32099 + C22729 * C670 +
                     C22734 * C420 + C32100 + C32100 + C50831 * C440 +
                     C22732 * C412 + C32101 + C32101 + C50847 * C432) *
                        C50732 +
                    (C22736 * C130 + C22760 + C22760 + C22729 * C144 +
                     C22734 * C129 + C22761 + C22761 + C50831 * C143 +
                     C22732 * C128 + C22762 + C22762 + C50847 * C142) *
                        C32096) *
                       C50694 * C50593 * C50577 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C409 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C410 +
                    ((C32450 + C32449 + C32448) * C32096 +
                     (C22732 * C1750 + C25022 + C25022 + C50847 * C1758 +
                      C22734 * C1749 + C25021 + C25021 + C50831 * C1757 +
                      C22736 * C1748 + C25020 + C25020 + C22729 * C1756) *
                         C50732) *
                        C50694 * C411) *
                       C50577 * C263 +
                   (((C32451 + C32452 + C32453) * C32096 +
                     (C32454 + C32455 + C32456) * C50732) *
                        C50694 * C410 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C409 -
                    ((C22736 * C1747 + C32418 + C32418 + C22729 * C1755 +
                      C22734 * C1748 + C32419 + C32419 + C50831 * C1756 +
                      C22732 * C1749 + C32420 + C32420 + C50847 * C1757) *
                         C50732 +
                     (C32456 + C32455 + C32454) * C32096) *
                        C50694 * C411) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50807 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50657) *
                       C50577 * C50848 +
                   (((C32451 + C32452 + C32453) * C32096 +
                     (C32454 + C32455 + C32456) * C50732) *
                        C50694 * C50657 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50807) *
                       C50577 * C50849 +
                   (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                      C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                      C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                         C32096 +
                     (C32764 + C32765 + C32766) * C50732) *
                        C50694 * C50807 -
                    ((C22736 * C421 + C32755 + C32755 + C22729 * C441 +
                      C22734 * C419 + C32756 + C32756 + C50831 * C439 +
                      C22732 * C418 + C32757 + C32757 + C50847 * C438) *
                         C50732 +
                     (C32766 + C32765 + C32764) * C32096) *
                        C50694 * C50657) *
                       C50577 * C560)) /
                 (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C32096 +
                    (C22732 * C415 + C23132 + C23132 + C50847 * C435 +
                     C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                     C22736 * C413 + C23130 + C23130 + C22729 * C433) *
                        C50732) *
                       C50694 * C50593 * C50577 * C113 -
                   ((C22736 * C412 + C23141 + C23141 + C22729 * C432 +
                     C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                     C22732 * C414 + C23139 + C23139 + C50847 * C434) *
                        C50732 +
                    (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                     C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                     C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                        C32096) *
                       C50694 * C50593 * C50577 * C114 +
                   ((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                     C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                     C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                        C32096 +
                    (C22732 * C413 + C23466 + C23466 + C50847 * C433 +
                     C22734 * C412 + C23465 + C23465 + C50831 * C432 +
                     C22736 * C420 + C23464 + C23464 + C22729 * C440) *
                        C50732) *
                       C50694 * C50593 * C50577 * C115 -
                   ((C22736 * C668 + C32099 + C32099 + C22729 * C670 +
                     C22734 * C420 + C32100 + C32100 + C50831 * C440 +
                     C22732 * C412 + C32101 + C32101 + C50847 * C432) *
                        C50732 +
                    (C22736 * C130 + C22760 + C22760 + C22729 * C144 +
                     C22734 * C129 + C22761 + C22761 + C50831 * C143 +
                     C22732 * C128 + C22762 + C22762 + C50847 * C142) *
                        C32096) *
                       C50694 * C50593 * C50577 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C22732 * C415 + C23132 + C23132 + C50847 * C435 +
                      C22734 * C414 + C23131 + C23131 + C50831 * C434 +
                      C22736 * C413 + C23130 + C23130 + C22729 * C433) *
                         C50732) *
                        C50694 * C50593 * C260 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50593 * C261 +
                    ((C22974 + C22973 + C22972) * C32096 +
                     (C24624 + C24625 + C24626) * C50732) *
                        C50694 * C50593 * C262) *
                       C263 +
                   (((C22975 + C22976 + C22977) * C32096 +
                     (C23694 + C23695 + C23696) * C50732) *
                        C50694 * C50593 * C261 -
                    ((C22736 * C412 + C23141 + C23141 + C22729 * C432 +
                      C22734 * C413 + C23140 + C23140 + C50831 * C433 +
                      C22732 * C414 + C23139 + C23139 + C50847 * C434) *
                         C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50593 * C260 -
                    ((C22736 * C1463 + C23676 + C23676 + C22729 * C1471 +
                      C22734 * C1464 + C23677 + C23677 + C50831 * C1472 +
                      C22732 * C1465 + C23678 + C23678 + C50847 * C1473) *
                         C50732 +
                     (C22980 + C22979 + C22978) * C32096) *
                        C50694 * C50593 * C262) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50593 * C50850 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50593 * C50851 +
                    ((C22974 + C22973 + C22972) * C32096 +
                     (C24624 + C24625 + C24626) * C50732) *
                        C50694 * C50593 * C1232) *
                       C50798 +
                   (((C22975 + C22976 + C22977) * C32096 +
                     (C23694 + C23695 + C23696) * C50732) *
                        C50694 * C50593 * C50851 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50593 * C50850 -
                    ((C22736 * C1463 + C23676 + C23676 + C22729 * C1471 +
                      C22734 * C1464 + C23677 + C23677 + C50831 * C1472 +
                      C22732 * C1465 + C23678 + C23678 + C50847 * C1473) *
                         C50732 +
                     (C22980 + C22979 + C22978) * C32096) *
                        C50694 * C50593 * C1232) *
                       C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50807 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50657) *
                       C50850 +
                   (((C23693 + C23692 + C23691) * C32096 +
                     (C24120 + C24121 + C24122) * C50732) *
                        C50694 * C50657 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50807) *
                       C50851 +
                   (((C22974 + C22973 + C22972) * C32096 +
                     (C24624 + C24625 + C24626) * C50732) *
                        C50694 * C50807 -
                    ((C22736 * C3576 + C24111 + C24111 + C22729 * C3582 +
                      C22734 * C3577 + C24112 + C24112 + C50831 * C3583 +
                      C22732 * C3578 + C24113 + C24113 + C50847 * C3584) *
                         C50732 +
                     (C24626 + C24625 + C24624) * C32096) *
                        C50694 * C50657) *
                       C1232) *
                  C50558) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C32096 +
                    (C32445 + C32446 + C32447) * C50732) *
                       C50694 * C50593 * C997 -
                   ((C23691 + C23692 + C23693) * C50732 +
                    (C22971 + C22970 + C22969) * C32096) *
                       C50694 * C50593 * C998 +
                   ((C22974 + C22973 + C22972) * C32096 +
                    (C24624 + C24625 + C24626) * C50732) *
                       C50694 * C50593 * C999 -
                   ((C22736 * C4089 + C24615 + C24615 + C22729 * C4095 +
                     C22734 * C4090 + C24616 + C24616 + C50831 * C4096 +
                     C22732 * C4091 + C24617 + C24617 + C50847 * C4097) *
                        C50732 +
                    (C23958 + C23957 + C23956) * C32096) *
                       C50694 * C50593 * C1000) *
                  C50558) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50593 * C926 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50593 * C50629) *
                       C928 +
                   (((C22975 + C22976 + C22977) * C32096 +
                     (C23694 + C23695 + C23696) * C50732) *
                        C50694 * C50593 * C50629 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50593 * C926) *
                       C929 +
                   (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                      C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                      C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                         C32096 +
                     (C32764 + C32765 + C32766) * C50732) *
                        C50694 * C50593 * C926 -
                    ((C22736 * C809 + C23461 + C23461 + C22729 * C819 +
                      C22734 * C808 + C23462 + C23462 + C50831 * C818 +
                      C22732 * C807 + C23463 + C23463 + C50847 * C817) *
                         C50732 +
                     (C23314 + C23313 + C23312) * C32096) *
                        C50694 * C50593 * C50629) *
                       C930)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C409 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C410 +
                    ((C32450 + C32449 + C32448) * C32096 +
                     (C22732 * C1750 + C25022 + C25022 + C50847 * C1758 +
                      C22734 * C1749 + C25021 + C25021 + C50831 * C1757 +
                      C22736 * C1748 + C25020 + C25020 + C22729 * C1756) *
                         C50732) *
                        C50694 * C411) *
                       C926 +
                   (((C23693 + C23692 + C23691) * C32096 +
                     (C24120 + C24121 + C24122) * C50732) *
                        C50694 * C410 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C409 -
                    ((C22736 * C4506 + C25017 + C25017 + C22729 * C4512 +
                      C22734 * C4507 + C25018 + C25018 + C50831 * C4513 +
                      C22732 * C4508 + C25019 + C25019 + C50847 * C4514) *
                         C50732 +
                     (C24122 + C24121 + C24120) * C32096) *
                        C50694 * C411) *
                       C50629) *
                  C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                       C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                       C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                          C32096 +
                      (C32445 + C32446 + C32447) * C50732) *
                         C50694 * C50807 -
                     ((C32448 + C32449 + C32450) * C50732 +
                      (C32447 + C32446 + C32445) * C32096) *
                         C50694 * C50657) *
                        C926 +
                    (((C23693 + C23692 + C23691) * C32096 +
                      (C24120 + C24121 + C24122) * C50732) *
                         C50694 * C50657 -
                     ((C23691 + C23692 + C23693) * C50732 +
                      (C22971 + C22970 + C22969) * C32096) *
                         C50694 * C50807) *
                        C50629) *
                       C50798 +
                   ((((C32451 + C32452 + C32453) * C32096 +
                      (C32454 + C32455 + C32456) * C50732) *
                         C50694 * C50657 -
                     ((C32453 + C32452 + C32451) * C50732 +
                      (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                       C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                       C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                          C32096) *
                         C50694 * C50807) *
                        C926 +
                    (((C22975 + C22976 + C22977) * C32096 +
                      (C23694 + C23695 + C23696) * C50732) *
                         C50694 * C50807 -
                     ((C22736 * C1116 + C23145 + C23145 + C22729 * C1124 +
                       C22734 * C1117 + C23146 + C23146 + C50831 * C1125 +
                       C22732 * C1118 + C23147 + C23147 + C50847 * C1126) *
                          C50732 +
                      (C23696 + C23695 + C23694) * C32096) *
                         C50694 * C50657) *
                        C50629) *
                       C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50593 * C926 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50593 * C50629) *
                       C928 +
                   (((C22975 + C22976 + C22977) * C32096 +
                     (C23694 + C23695 + C23696) * C50732) *
                        C50694 * C50593 * C50629 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50593 * C926) *
                       C929 +
                   (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                      C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                      C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                         C32096 +
                     (C32764 + C32765 + C32766) * C50732) *
                        C50694 * C50593 * C926 -
                    ((C22736 * C809 + C23461 + C23461 + C22729 * C819 +
                      C22734 * C808 + C23462 + C23462 + C50831 * C818 +
                      C22732 * C807 + C23463 + C23463 + C50847 * C817) *
                         C50732 +
                     (C23314 + C23313 + C23312) * C32096) *
                        C50694 * C50593 * C50629) *
                       C930)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C32096 +
                    (C32445 + C32446 + C32447) * C50732) *
                       C50694 * C50593 * C997 -
                   ((C23691 + C23692 + C23693) * C50732 +
                    (C22971 + C22970 + C22969) * C32096) *
                       C50694 * C50593 * C998 +
                   ((C22974 + C22973 + C22972) * C32096 +
                    (C24624 + C24625 + C24626) * C50732) *
                       C50694 * C50593 * C999 -
                   ((C22736 * C4089 + C24615 + C24615 + C22729 * C4095 +
                     C22734 * C4090 + C24616 + C24616 + C50831 * C4096 +
                     C22732 * C4091 + C24617 + C24617 + C50847 * C4097) *
                        C50732 +
                    (C23958 + C23957 + C23956) * C32096) *
                       C50694 * C50593 * C1000) *
                  C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                       C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                       C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                          C32096 +
                      (C32445 + C32446 + C32447) * C50732) *
                         C50694 * C1577 -
                     ((C32448 + C32449 + C32450) * C50732 +
                      (C32447 + C32446 + C32445) * C32096) *
                         C50694 * C50657) *
                        C50806 +
                    (((C23693 + C23692 + C23691) * C32096 +
                      (C24120 + C24121 + C24122) * C50732) *
                         C50694 * C50657 -
                     ((C23691 + C23692 + C23693) * C50732 +
                      (C22971 + C22970 + C22969) * C32096) *
                         C50694 * C1577) *
                        C50629) *
                       C50798 +
                   ((((C32451 + C32452 + C32453) * C32096 +
                      (C32454 + C32455 + C32456) * C50732) *
                         C50694 * C50657 -
                     ((C32453 + C32452 + C32451) * C50732 +
                      (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                       C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                       C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                          C32096) *
                         C50694 * C1577) *
                        C50806 +
                    (((C22975 + C22976 + C22977) * C32096 +
                      (C23694 + C23695 + C23696) * C50732) *
                         C50694 * C1577 -
                     ((C22736 * C1116 + C23145 + C23145 + C22729 * C1124 +
                       C22734 * C1117 + C23146 + C23146 + C50831 * C1125 +
                       C22732 * C1118 + C23147 + C23147 + C50847 * C1126) *
                          C50732 +
                      (C23696 + C23695 + C23694) * C32096) *
                         C50694 * C50657) *
                        C50629) *
                       C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50852 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50853 +
                    ((C32450 + C32449 + C32448) * C32096 +
                     (C34242 + C34243 + C34244) * C50732) *
                        C50694 * C1993) *
                       C50806 +
                   (((C23693 + C23692 + C23691) * C32096 +
                     (C24120 + C24121 + C24122) * C50732) *
                        C50694 * C50853 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C50852 -
                    ((C22736 * C4506 + C25017 + C25017 + C22729 * C4512 +
                      C22734 * C4507 + C25018 + C25018 + C50831 * C4513 +
                      C22732 * C4508 + C25019 + C25019 + C50847 * C4514) *
                         C50732 +
                     (C24122 + C24121 + C24120) * C32096) *
                        C50694 * C1993) *
                       C50629) *
                  C50558) /
                 (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C1577 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50657) *
                       C260 +
                   (((C23693 + C23692 + C23691) * C32096 +
                     (C24120 + C24121 + C24122) * C50732) *
                        C50694 * C50657 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C1577) *
                       C261 +
                   (((C22974 + C22973 + C22972) * C32096 +
                     (C24624 + C24625 + C24626) * C50732) *
                        C50694 * C1577 -
                    ((C22736 * C3576 + C24111 + C24111 + C22729 * C3582 +
                      C22734 * C3577 + C24112 + C24112 + C50831 * C3583 +
                      C22732 * C3578 + C24113 + C24113 + C50847 * C3584) *
                         C50732 +
                     (C24626 + C24625 + C24624) * C32096) *
                        C50694 * C50657) *
                       C262) *
                  C50558) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C1577 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50657) *
                       C50577 * C928 +
                   (((C32451 + C32452 + C32453) * C32096 +
                     (C32454 + C32455 + C32456) * C50732) *
                        C50694 * C50657 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C1577) *
                       C50577 * C929 +
                   (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                      C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                      C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                         C32096 +
                     (C32764 + C32765 + C32766) * C50732) *
                        C50694 * C1577 -
                    ((C22736 * C421 + C32755 + C32755 + C22729 * C441 +
                      C22734 * C419 + C32756 + C32756 + C50831 * C439 +
                      C22732 * C418 + C32757 + C32757 + C50847 * C438) *
                         C50732 +
                     (C32766 + C32765 + C32764) * C32096) *
                        C50694 * C50657) *
                       C50577 * C930)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                     C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                     C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                        C32096 +
                    (C32445 + C32446 + C32447) * C50732) *
                       C50694 * C1743 -
                   ((C32448 + C32449 + C32450) * C50732 +
                    (C32447 + C32446 + C32445) * C32096) *
                       C50694 * C1744 +
                   ((C32450 + C32449 + C32448) * C32096 +
                    (C34242 + C34243 + C34244) * C50732) *
                       C50694 * C1745 -
                   ((C22736 * C7235 + C34233 + C34233 + C22729 * C7241 +
                     C22734 * C7236 + C34234 + C34234 + C50831 * C7242 +
                     C22732 * C7237 + C34235 + C34235 + C50847 * C7243) *
                        C50732 +
                    (C34244 + C34243 + C34242) * C32096) *
                       C50694 * C1746) *
                  C50577 * C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C50852 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50853 +
                    ((C32450 + C32449 + C32448) * C32096 +
                     (C34242 + C34243 + C34244) * C50732) *
                        C50694 * C1993) *
                       C50577 * C50798 +
                   (((C32451 + C32452 + C32453) * C32096 +
                     (C32454 + C32455 + C32456) * C50732) *
                        C50694 * C50853 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C50852 -
                    ((C22736 * C1747 + C32418 + C32418 + C22729 * C1755 +
                      C22734 * C1748 + C32419 + C32419 + C50831 * C1756 +
                      C22732 * C1749 + C32420 + C32420 + C50847 * C1757) *
                         C50732 +
                     (C32456 + C32455 + C32454) * C32096) *
                        C50694 * C1993) *
                       C50577 * C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C1577 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50657) *
                       C50577 * C928 +
                   (((C32451 + C32452 + C32453) * C32096 +
                     (C32454 + C32455 + C32456) * C50732) *
                        C50694 * C50657 -
                    ((C32453 + C32452 + C32451) * C50732 +
                     (C22736 * C128 + C22748 + C22748 + C22729 * C142 +
                      C22734 * C127 + C22749 + C22749 + C50831 * C141 +
                      C22732 * C126 + C22750 + C22750 + C50847 * C140) *
                         C32096) *
                        C50694 * C1577) *
                       C50577 * C929 +
                   (((C22732 * C127 + C22751 + C22751 + C50847 * C141 +
                      C22734 * C128 + C22752 + C22752 + C50831 * C142 +
                      C22736 * C129 + C22753 + C22753 + C22729 * C143) *
                         C32096 +
                     (C32764 + C32765 + C32766) * C50732) *
                        C50694 * C1577 -
                    ((C22736 * C421 + C32755 + C32755 + C22729 * C441 +
                      C22734 * C419 + C32756 + C32756 + C50831 * C439 +
                      C22732 * C418 + C32757 + C32757 + C50847 * C438) *
                         C50732 +
                     (C32766 + C32765 + C32764) * C32096) *
                        C50694 * C50657) *
                       C50577 * C930)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22732 * C125 + C22739 + C22739 + C50847 * C139 +
                      C22734 * C126 + C22740 + C22740 + C50831 * C140 +
                      C22736 * C127 + C22741 + C22741 + C22729 * C141) *
                         C32096 +
                     (C32445 + C32446 + C32447) * C50732) *
                        C50694 * C1577 -
                    ((C32448 + C32449 + C32450) * C50732 +
                     (C32447 + C32446 + C32445) * C32096) *
                        C50694 * C50657) *
                       C260 +
                   (((C23693 + C23692 + C23691) * C32096 +
                     (C24120 + C24121 + C24122) * C50732) *
                        C50694 * C50657 -
                    ((C23691 + C23692 + C23693) * C50732 +
                     (C22971 + C22970 + C22969) * C32096) *
                        C50694 * C1577) *
                       C261 +
                   (((C22974 + C22973 + C22972) * C32096 +
                     (C24624 + C24625 + C24626) * C50732) *
                        C50694 * C1577 -
                    ((C22736 * C3576 + C24111 + C24111 + C22729 * C3582 +
                      C22734 * C3577 + C24112 + C24112 + C50831 * C3583 +
                      C22732 * C3578 + C24113 + C24113 + C50847 * C3584) *
                         C50732 +
                     (C24626 + C24625 + C24624) * C32096) *
                        C50694 * C50657) *
                       C262) *
                  C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                       C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                          C32096 +
                      (C28960 + C28961) * C50732) *
                         C50817 +
                     ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
                        C50593 * C50806 -
                    ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
                     (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
                        C50593 * C50629) *
                       C50848 +
                   ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
                     ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                         C50708) *
                        C50593 * C50629 -
                    ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
                     ((C28965 + C28964) * C50732 +
                      (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                       C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                          C32096) *
                         C50817) *
                        C50593 * C50806) *
                       C50849 +
                   ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                       C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                          C32096 +
                      (C29380 + C29381) * C50732) *
                         C50817 +
                     ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) *
                         C50708) *
                        C50593 * C50806 -
                    (((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
                       C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                          C50732 +
                      (C26195 + C26194) * C32096) *
                         C50708 +
                     ((C29173 + C29172) * C50732 + (C26193 + C26192) * C32096) *
                         C50817) *
                        C50593 * C50629) *
                       C560)) /
                 (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
               C25617 + C25617 + C50532 * C140) *
                  C32096 +
              (C28960 + C28961) * C50732) *
                 C50817 +
             ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
                C50807 -
            ((C30162 * C50732 + C29641 * C32096) * C50708 +
             ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                 C50817) *
                C50657) *
               C50806 +
           (((C29640 * C32096 + C30163 * C50732) * C50817 +
             (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
                C50657 -
            ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
             (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
                C50807) *
               C50629) *
              C263 +
          (((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) *
                 C50817 +
             (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
                C50657 -
            ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
             ((C28965 + C28964) * C50732 +
              (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
               C25627 + C25627 + C25606 * C140) *
                  C32096) *
                 C50817) *
                C50807) *
               C50806 +
           ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
             ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                 C50708) *
                C50807 -
            (((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
               C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                  C50732 +
              (C26585 + C26584) * C32096) *
                 C50708 +
             ((C28969 + C28968) * C50732 + C29643 * C32096) * C50817) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50593 * C260 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C50593 * C261 +
           ((C25854 * C32096 + C30820 * C50732) * C50817 +
            ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) *
                C50708) *
               C50593 * C262) *
              C263 +
          ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
            ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C261 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C50593 * C260 -
           (((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
              C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                 C50732 +
             (C25853 + C25852) * C32096) *
                C50708 +
            ((C26585 + C26584) * C50732 + C25855 * C32096) * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C32096 +
            (C28960 + C28961) * C50732) *
               C50817 +
           ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
              C50593 * C50577 * C113 -
          ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
           ((C28965 + C28964) * C50732 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C32096) *
               C50817) *
              C50593 * C50577 * C114 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C32096 +
            (C29380 + C29381) * C50732) *
               C50817 +
           ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) * C50708) *
              C50593 * C50577 * C115 -
          (((C25613 * C809 + C28524 + C28524 + C50532 * C819 + C25611 * C808 +
             C28525 + C28525 + C25606 * C818) *
                C50732 +
            (C25613 * C273 + C25636 + C25636 + C50532 * C293 + C25611 * C265 +
             C25637 + C25637 + C25606 * C285) *
                C32096) *
               C50708 +
           ((C25613 * C420 + C28526 + C28526 + C50532 * C440 + C25611 * C412 +
             C28527 + C28527 + C25606 * C432) *
                C50732 +
            (C25613 * C129 + C25638 + C25638 + C50532 * C143 + C25611 * C128 +
             C25639 + C25639 + C25606 * C142) *
                C32096) *
               C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C409 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C410 +
           (((C28963 + C28962) * C32096 + (C31351 + C31352) * C50732) * C50817 +
            (C30163 * C32096 + (C30172 + C30173) * C50732) * C50708) *
               C411) *
              C50577 * C263 +
          ((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) * C50817 +
            (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
               C410 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C409 -
           (((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C50732 +
             (C28969 + C28968) * C32096) *
                C50708 +
            ((C25613 * C1748 + C28938 + C28938 + C50532 * C1756 +
              C25611 * C1749 + C28939 + C28939 + C25606 * C1757) *
                 C50732 +
             (C28967 + C28966) * C32096) *
                C50817) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50807 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50657) *
              C50577 * C50848 +
          ((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) * C50817 +
            (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
               C50657 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C50807) *
              C50577 * C50849 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C32096 +
             (C29380 + C29381) * C50732) *
                C50817 +
            ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) *
                C50708) *
               C50807 -
           (((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
              C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                 C50732 +
             (C29173 + C29172) * C32096) *
                C50708 +
            ((C25613 * C419 + C29374 + C29374 + C50532 * C439 + C25611 * C418 +
              C29375 + C29375 + C25606 * C438) *
                 C50732 +
             (C29381 + C29380) * C32096) *
                C50817) *
               C50657) *
              C50577 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C32096 +
            (C28960 + C28961) * C50732) *
               C50817 +
           ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
              C50593 * C50577 * C113 -
          ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
           ((C28965 + C28964) * C50732 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C32096) *
               C50817) *
              C50593 * C50577 * C114 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C32096 +
            (C29380 + C29381) * C50732) *
               C50817 +
           ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) * C50708) *
              C50593 * C50577 * C115 -
          (((C25613 * C809 + C28524 + C28524 + C50532 * C819 + C25611 * C808 +
             C28525 + C28525 + C25606 * C818) *
                C50732 +
            (C25613 * C273 + C25636 + C25636 + C50532 * C293 + C25611 * C265 +
             C25637 + C25637 + C25606 * C285) *
                C32096) *
               C50708 +
           ((C25613 * C420 + C28526 + C28526 + C50532 * C440 + C25611 * C412 +
             C28527 + C28527 + C25606 * C432) *
                C50732 +
            (C25613 * C129 + C25638 + C25638 + C50532 * C143 + C25611 * C128 +
             C25639 + C25639 + C25606 * C142) *
                C32096) *
               C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50593 * C260 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C50593 * C261 +
           ((C25854 * C32096 + C30820 * C50732) * C50817 +
            ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) *
                C50708) *
               C50593 * C262) *
              C263 +
          ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
            ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C261 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C50593 * C260 -
           (((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
              C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                 C50732 +
             (C25853 + C25852) * C32096) *
                C50708 +
            ((C26585 + C26584) * C50732 + C25855 * C32096) * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                       C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                          C32096 +
                      (C28960 + C28961) * C50732) *
                         C50817 +
                     ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
                        C50593 * C50850 -
                    ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
                     (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
                        C50593 * C50851 +
                    ((C25854 * C32096 + C30820 * C50732) * C50817 +
                     ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) *
                         C50708) *
                        C50593 * C1232) *
                       C50798 +
                   ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
                     ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                         C50708) *
                        C50593 * C50851 -
                    ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
                     ((C28965 + C28964) * C50732 +
                      (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                       C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                          C32096) *
                         C50817) *
                        C50593 * C50850 -
                    (((C25613 * C4089 + C26560 + C26560 + C50532 * C4095 +
                       C25611 * C4090 + C26561 + C26561 + C25606 * C4096) *
                          C50732 +
                      (C25853 + C25852) * C32096) *
                         C50708 +
                     ((C26585 + C26584) * C50732 + C25855 * C32096) * C50817) *
                        C50593 * C1232) *
                       C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[156] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                       C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                          C32096 +
                      (C28960 + C28961) * C50732) *
                         C50817 +
                     ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
                        C50807 -
                    ((C30162 * C50732 + C29641 * C32096) * C50708 +
                     ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                         C50817) *
                        C50657) *
                       C50850 +
                   (((C29640 * C32096 + C30163 * C50732) * C50817 +
                     (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
                        C50657 -
                    ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
                     (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
                        C50807) *
                       C50851 +
                   (((C25854 * C32096 + C30820 * C50732) * C50817 +
                     ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) *
                         C50708) *
                        C50807 -
                    (((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
                       C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                          C50732 +
                      (C27511 + C27510) * C32096) *
                         C50708 +
                     ((C27011 + C27010) * C50732 + C27498 * C32096) * C50817) *
                        C50657) *
                       C1232) *
                  C50558) /
                 (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C32096 +
            (C28960 + C28961) * C50732) *
               C50817 +
           ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
              C50593 * C997 -
          ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
           (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
              C50593 * C998 +
          ((C25854 * C32096 + C30820 * C50732) * C50817 +
           ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) * C50708) *
              C50593 * C999 -
          (((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
             C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                C50732 +
            (C26843 + C26842) * C32096) *
               C50708 +
           ((C27511 + C27510) * C50732 + C26830 * C32096) * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50593 * C926 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C50593 * C50629) *
              C928 +
          ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
            ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C50629 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C50593 * C926) *
              C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C32096 +
             (C29380 + C29381) * C50732) *
                C50817 +
            ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) *
                C50708) *
               C50593 * C926 -
           (((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
              C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                 C50732 +
             (C26195 + C26194) * C32096) *
                C50708 +
            ((C29173 + C29172) * C50732 + (C26193 + C26192) * C32096) *
                C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C409 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C410 +
           (((C28963 + C28962) * C32096 + (C31351 + C31352) * C50732) * C50817 +
            (C30163 * C32096 + (C30172 + C30173) * C50732) * C50708) *
               C411) *
              C926 +
          (((C29640 * C32096 + C30163 * C50732) * C50817 +
            (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
               C410 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C409 -
           (((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
              C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                 C50732 +
             (C27011 + C27010) * C32096) *
                C50708 +
            ((C30173 + C30172) * C50732 + C30162 * C32096) * C50817) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
               C25617 + C25617 + C50532 * C140) *
                  C32096 +
              (C28960 + C28961) * C50732) *
                 C50817 +
             ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
                C50807 -
            ((C30162 * C50732 + C29641 * C32096) * C50708 +
             ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                 C50817) *
                C50657) *
               C926 +
           (((C29640 * C32096 + C30163 * C50732) * C50817 +
             (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
                C50657 -
            ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
             (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
                C50807) *
               C50629) *
              C50798 +
          (((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) *
                 C50817 +
             (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
                C50657 -
            ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
             ((C28965 + C28964) * C50732 +
              (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
               C25627 + C25627 + C25606 * C140) *
                  C32096) *
                 C50817) *
                C50807) *
               C926 +
           ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
             ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                 C50708) *
                C50807 -
            (((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
               C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                  C50732 +
              (C26585 + C26584) * C32096) *
                 C50708 +
             ((C28969 + C28968) * C50732 + C29643 * C32096) * C50817) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50593 * C926 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C50593 * C50629) *
              C928 +
          ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
            ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                C50708) *
               C50593 * C50629 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C50593 * C926) *
              C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C32096 +
             (C29380 + C29381) * C50732) *
                C50817 +
            ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) *
                C50708) *
               C50593 * C926 -
           (((C25613 * C1463 + C26342 + C26342 + C50532 * C1471 +
              C25611 * C1464 + C26343 + C26343 + C25606 * C1472) *
                 C50732 +
             (C26195 + C26194) * C32096) *
                C50708 +
            ((C29173 + C29172) * C50732 + (C26193 + C26192) * C32096) *
                C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C32096 +
            (C28960 + C28961) * C50732) *
               C50817 +
           ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
              C50593 * C997 -
          ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
           (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
              C50593 * C998 +
          ((C25854 * C32096 + C30820 * C50732) * C50817 +
           ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) * C50708) *
              C50593 * C999 -
          (((C25613 * C9749 + C27503 + C27503 + C50532 * C9753 +
             C25611 * C9750 + C27504 + C27504 + C25606 * C9754) *
                C50732 +
            (C26843 + C26842) * C32096) *
               C50708 +
           ((C27511 + C27510) * C50732 + C26830 * C32096) * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
               C25617 + C25617 + C50532 * C140) *
                  C32096 +
              (C28960 + C28961) * C50732) *
                 C50817 +
             ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
                C1577 -
            ((C30162 * C50732 + C29641 * C32096) * C50708 +
             ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                 C50817) *
                C50657) *
               C50806 +
           (((C29640 * C32096 + C30163 * C50732) * C50817 +
             (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
                C50657 -
            ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
             (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
                C1577) *
               C50629) *
              C50798 +
          (((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) *
                 C50817 +
             (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
                C50657 -
            ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
             ((C28965 + C28964) * C50732 +
              (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
               C25627 + C25627 + C25606 * C140) *
                  C32096) *
                 C50817) *
                C1577) *
               C50806 +
           ((((C25848 + C25849) * C32096 + C29642 * C50732) * C50817 +
             ((C25850 + C25851) * C32096 + (C26584 + C26585) * C50732) *
                 C50708) *
                C1577 -
            (((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
               C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                  C50732 +
              (C26585 + C26584) * C32096) *
                 C50708 +
             ((C28969 + C28968) * C50732 + C29643 * C32096) * C50817) *
                C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50852 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50853 +
           (((C28963 + C28962) * C32096 + (C31351 + C31352) * C50732) * C50817 +
            (C30163 * C32096 + (C30172 + C30173) * C50732) * C50708) *
               C1993) *
              C50806 +
          (((C29640 * C32096 + C30163 * C50732) * C50817 +
            (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
               C50853 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C50852 -
           (((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
              C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                 C50732 +
             (C27011 + C27010) * C32096) *
                C50708 +
            ((C30173 + C30172) * C50732 + C30162 * C32096) * C50817) *
               C1993) *
              C50629) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50657) *
              C260 +
          (((C29640 * C32096 + C30163 * C50732) * C50817 +
            (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
               C50657 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C1577) *
              C261 +
          (((C25854 * C32096 + C30820 * C50732) * C50817 +
            ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
              C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                 C50732 +
             (C27511 + C27510) * C32096) *
                C50708 +
            ((C27011 + C27010) * C50732 + C27498 * C32096) * C50817) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50657) *
              C50577 * C928 +
          ((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) * C50817 +
            (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
               C50657 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C1577) *
              C50577 * C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C32096 +
             (C29380 + C29381) * C50732) *
                C50817 +
            ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
              C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                 C50732 +
             (C29173 + C29172) * C32096) *
                C50708 +
            ((C25613 * C419 + C29374 + C29374 + C50532 * C439 + C25611 * C418 +
              C29375 + C29375 + C25606 * C438) *
                 C50732 +
             (C29381 + C29380) * C32096) *
                C50817) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C32096 +
            (C28960 + C28961) * C50732) *
               C50817 +
           ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
              C1743 -
          ((C30162 * C50732 + C29641 * C32096) * C50708 +
           ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) * C50817) *
              C1744 +
          (((C28963 + C28962) * C32096 + (C31351 + C31352) * C50732) * C50817 +
           (C30163 * C32096 + (C30172 + C30173) * C50732) * C50708) *
              C1745 -
          (((C25613 * C16743 + C31343 + C31343 + C50532 * C16745 +
             C25611 * C14865 + C31344 + C31344 + C25606 * C14869) *
                C50732 +
            (C30173 + C30172) * C32096) *
               C50708 +
           ((C25613 * C7236 + C31345 + C31345 + C50532 * C7242 +
             C25611 * C7237 + C31346 + C31346 + C25606 * C7243) *
                C50732 +
            (C31352 + C31351) * C32096) *
               C50817) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C50852 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50853 +
           (((C28963 + C28962) * C32096 + (C31351 + C31352) * C50732) * C50817 +
            (C30163 * C32096 + (C30172 + C30173) * C50732) * C50708) *
               C1993) *
              C50577 * C50798 +
          ((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) * C50817 +
            (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
               C50853 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C50852 -
           (((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C50732 +
             (C28969 + C28968) * C32096) *
                C50708 +
            ((C25613 * C1748 + C28938 + C28938 + C50532 * C1756 +
              C25611 * C1749 + C28939 + C28939 + C25606 * C1757) *
                 C50732 +
             (C28967 + C28966) * C32096) *
                C50817) *
               C1993) *
              C50577 * C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50657) *
              C50577 * C928 +
          ((((C28964 + C28965) * C32096 + (C28966 + C28967) * C50732) * C50817 +
            (C29642 * C32096 + (C28968 + C28969) * C50732) * C50708) *
               C50657 -
           ((C29643 * C50732 + (C25849 + C25848) * C32096) * C50708 +
            ((C28965 + C28964) * C50732 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C32096) *
                C50817) *
               C1577) *
              C50577 * C929 +
          ((((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
              C25629 + C25629 + C50532 * C142) *
                 C32096 +
             (C29380 + C29381) * C50732) *
                C50817 +
            ((C26192 + C26193) * C32096 + (C29172 + C29173) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
              C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                 C50732 +
             (C29173 + C29172) * C32096) *
                C50708 +
            ((C25613 * C419 + C29374 + C29374 + C50532 * C439 + C25611 * C418 +
              C29375 + C29375 + C25606 * C438) *
                 C50732 +
             (C29381 + C29380) * C32096) *
                C50817) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C32096 +
             (C28960 + C28961) * C50732) *
                C50817 +
            ((C25842 + C25843) * C32096 + C29640 * C50732) * C50708) *
               C1577 -
           ((C30162 * C50732 + C29641 * C32096) * C50708 +
            ((C28962 + C28963) * C50732 + (C28961 + C28960) * C32096) *
                C50817) *
               C50657) *
              C260 +
          (((C29640 * C32096 + C30163 * C50732) * C50817 +
            (C30820 * C32096 + (C27010 + C27011) * C50732) * C50708) *
               C50657 -
           ((C27498 * C50732 + (C25845 + C25844) * C32096) * C50708 +
            (C29641 * C50732 + (C25843 + C25842) * C32096) * C50817) *
               C1577) *
              C261 +
          (((C25854 * C32096 + C30820 * C50732) * C50817 +
            ((C25847 + C25846) * C32096 + (C27510 + C27511) * C50732) *
                C50708) *
               C1577 -
           (((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 +
              C25611 * C9236 + C26999 + C26999 + C25606 * C9240) *
                 C50732 +
             (C27511 + C27510) * C32096) *
                C50708 +
            ((C27011 + C27010) * C50732 + C27498 * C32096) * C50817) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C50593 * C50806 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50593 * C50629) *
              C50848 +
          (((C25848 + C25849) * C50855 + C29642 * C50846 +
            (C28968 + C28969) * C38322) *
               C50694 * C50593 * C50629 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C50593 * C50806) *
              C50849 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50855 +
            (C29380 + C29381) * C50846 +
            (C25611 * C418 + C29375 + C29375 + C25606 * C438 + C25613 * C419 +
             C29374 + C29374 + C50532 * C439) *
                C38322) *
               C50694 * C50593 * C50806 -
           ((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
             C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                C38322 +
            (C29173 + C29172) * C50846 + (C26193 + C26192) * C50855) *
               C50694 * C50593 * C50629) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50855 +
             (C28960 + C28961) * C50846 + C38618 * C38322) *
                C50694 * C50807 -
            ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
             (C28961 + C28960) * C50855) *
                C50694 * C50657) *
               C50806 +
           ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
                C50694 * C50657 -
            (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
                C50694 * C50807) *
               C50629) *
              C263 +
          ((((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
             (C38630 + C38631) * C38322) *
                C50694 * C50657 -
            (C38623 * C38322 + (C28965 + C28964) * C50846 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50855) *
                C50694 * C50807) *
               C50806 +
           (((C25848 + C25849) * C50855 + C29642 * C50846 +
             (C28968 + C28969) * C38322) *
                C50694 * C50807 -
            ((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C38322 +
             (C28969 + C28968) * C50846 + C29643 * C50855) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + (C28963 + C28962) * C38322) *
               C50694 * C50593 * C260 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50593 * C261 +
           (C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
               C50694 * C50593 * C262) *
              C263 +
          (((C25848 + C25849) * C50855 + C29642 * C50846 +
            (C28968 + C28969) * C38322) *
               C50694 * C50593 * C261 -
           ((C28967 + C28966) * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C50593 * C260 -
           ((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
             C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                C38322 +
            (C26585 + C26584) * C50846 + C25855 * C50855) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
            C25617 + C25617 + C50532 * C140) *
               C50855 +
           (C28960 + C28961) * C50846 + (C28963 + C28962) * C38322) *
              C50694 * C50593 * C50577 * C113 -
          ((C28967 + C28966) * C38322 + (C28965 + C28964) * C50846 +
           (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
            C25627 + C25627 + C25606 * C140) *
               C50855) *
              C50694 * C50593 * C50577 * C114 +
          ((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
            C25629 + C25629 + C50532 * C142) *
               C50855 +
           (C29380 + C29381) * C50846 +
           (C25611 * C418 + C29375 + C29375 + C25606 * C438 + C25613 * C419 +
            C29374 + C29374 + C50532 * C439) *
               C38322) *
              C50694 * C50593 * C50577 * C115 -
          ((C25613 * C421 + C38324 + C38324 + C50532 * C441 + C25611 * C419 +
            C38325 + C38325 + C25606 * C439) *
               C38322 +
           (C25613 * C420 + C28526 + C28526 + C50532 * C440 + C25611 * C412 +
            C28527 + C28527 + C25606 * C432) *
               C50846 +
           (C25613 * C129 + C25638 + C25638 + C50532 * C143 + C25611 * C128 +
            C25639 + C25639 + C25606 * C142) *
               C50855) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C409 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C410 +
           (C38618 * C50855 + (C31351 + C31352) * C50846 +
            (C25611 * C7237 + C31346 + C31346 + C25606 * C7243 +
             C25613 * C7236 + C31345 + C31345 + C50532 * C7242) *
                C38322) *
               C50694 * C411) *
              C50577 * C263 +
          (((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
            (C38630 + C38631) * C38322) *
               C50694 * C410 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C409 -
           ((C25613 * C7235 + C38624 + C38624 + C50532 * C7241 +
             C25611 * C7236 + C38625 + C38625 + C25606 * C7242) *
                C38322 +
            (C38631 + C38630) * C50846 + C38623 * C50855) *
               C50694 * C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50855 +
                     (C28960 + C28961) * C50846 + C38618 * C38322) *
                        C50694 * C50807 -
                    ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
                     (C28961 + C28960) * C50855) *
                        C50694 * C50657) *
                       C50577 * C50848 +
                   (((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
                     (C38630 + C38631) * C38322) *
                        C50694 * C50657 -
                    (C38623 * C38322 + (C28965 + C28964) * C50846 +
                     (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                      C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                         C50855) *
                        C50694 * C50807) *
                       C50577 * C50849 +
                   (((C25611 * C127 + C25628 + C25628 + C25606 * C141 +
                      C25613 * C128 + C25629 + C25629 + C50532 * C142) *
                         C50855 +
                     (C29380 + C29381) * C50846 + (C38934 + C38935) * C38322) *
                        C50694 * C50807 -
                    ((C25613 * C1747 + C38928 + C38928 + C50532 * C1755 +
                      C25611 * C1748 + C38929 + C38929 + C25606 * C1756) *
                         C38322 +
                     (C38935 + C38934) * C50846 + (C29381 + C29380) * C50855) *
                        C50694 * C50657) *
                       C50577 * C560)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
            C25617 + C25617 + C50532 * C140) *
               C50855 +
           (C28960 + C28961) * C50846 + (C28963 + C28962) * C38322) *
              C50694 * C50593 * C50577 * C113 -
          ((C28967 + C28966) * C38322 + (C28965 + C28964) * C50846 +
           (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
            C25627 + C25627 + C25606 * C140) *
               C50855) *
              C50694 * C50593 * C50577 * C114 +
          ((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
            C25629 + C25629 + C50532 * C142) *
               C50855 +
           (C29380 + C29381) * C50846 +
           (C25611 * C418 + C29375 + C29375 + C25606 * C438 + C25613 * C419 +
            C29374 + C29374 + C50532 * C439) *
               C38322) *
              C50694 * C50593 * C50577 * C115 -
          ((C25613 * C421 + C38324 + C38324 + C50532 * C441 + C25611 * C419 +
            C38325 + C38325 + C25606 * C439) *
               C38322 +
           (C25613 * C420 + C28526 + C28526 + C50532 * C440 + C25611 * C412 +
            C28527 + C28527 + C25606 * C432) *
               C50846 +
           (C25613 * C129 + C25638 + C25638 + C50532 * C143 + C25611 * C128 +
            C25639 + C25639 + C25606 * C142) *
               C50855) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + (C28963 + C28962) * C38322) *
               C50694 * C50593 * C260 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50593 * C261 +
           (C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
               C50694 * C50593 * C262) *
              C263 +
          (((C25848 + C25849) * C50855 + C29642 * C50846 +
            (C28968 + C28969) * C38322) *
               C50694 * C50593 * C261 -
           ((C28967 + C28966) * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C50593 * C260 -
           ((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
             C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                C38322 +
            (C26585 + C26584) * C50846 + C25855 * C50855) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C50593 * C50850 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50593 * C50851 +
           (C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
               C50694 * C50593 * C1232) *
              C50798 +
          (((C25848 + C25849) * C50855 + C29642 * C50846 +
            (C28968 + C28969) * C38322) *
               C50694 * C50593 * C50851 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C50593 * C50850 -
           ((C25613 * C3576 + C26022 + C26022 + C50532 * C3582 +
             C25611 * C3577 + C26023 + C26023 + C25606 * C3583) *
                C38322 +
            (C26585 + C26584) * C50846 + C25855 * C50855) *
               C50694 * C50593 * C1232) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C50807 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C50657) *
              C50850 +
          ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
               C50694 * C50657 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50807) *
              C50851 +
          ((C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
               C50694 * C50807 -
           ((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
             C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                C38322 +
            (C27011 + C27010) * C50846 + C27498 * C50855) *
               C50694 * C50657) *
              C1232) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
            C25617 + C25617 + C50532 * C140) *
               C50855 +
           (C28960 + C28961) * C50846 + C38618 * C38322) *
              C50694 * C50593 * C997 -
          (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
              C50694 * C50593 * C998 +
          (C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
              C50694 * C50593 * C999 -
          ((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 + C25611 * C9236 +
            C26999 + C26999 + C25606 * C9240) *
               C38322 +
           (C27511 + C27510) * C50846 + C26830 * C50855) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C50593 * C926 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50593 * C50629) *
              C928 +
          (((C25848 + C25849) * C50855 + C29642 * C50846 +
            (C28968 + C28969) * C38322) *
               C50694 * C50593 * C50629 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C50593 * C926) *
              C929 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50855 +
            (C29380 + C29381) * C50846 + (C38934 + C38935) * C38322) *
               C50694 * C50593 * C926 -
           ((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
             C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                C38322 +
            (C29173 + C29172) * C50846 + (C26193 + C26192) * C50855) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C409 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C410 +
           (C38618 * C50855 + (C31351 + C31352) * C50846 +
            (C25611 * C7237 + C31346 + C31346 + C25606 * C7243 +
             C25613 * C7236 + C31345 + C31345 + C50532 * C7242) *
                C38322) *
               C50694 * C411) *
              C926 +
          ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
               C50694 * C410 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C409 -
           ((C25613 * C16743 + C31343 + C31343 + C50532 * C16745 +
             C25611 * C14865 + C31344 + C31344 + C25606 * C14869) *
                C38322 +
            (C30173 + C30172) * C50846 + C30162 * C50855) *
               C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50855 +
             (C28960 + C28961) * C50846 + C38618 * C38322) *
                C50694 * C50807 -
            ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
             (C28961 + C28960) * C50855) *
                C50694 * C50657) *
               C926 +
           ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
                C50694 * C50657 -
            (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
                C50694 * C50807) *
               C50629) *
              C50798 +
          ((((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
             (C38630 + C38631) * C38322) *
                C50694 * C50657 -
            (C38623 * C38322 + (C28965 + C28964) * C50846 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50855) *
                C50694 * C50807) *
               C926 +
           (((C25848 + C25849) * C50855 + C29642 * C50846 +
             (C28968 + C28969) * C38322) *
                C50694 * C50807 -
            ((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C38322 +
             (C28969 + C28968) * C50846 + C29643 * C50855) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C50593 * C926 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50593 * C50629) *
              C928 +
          (((C25848 + C25849) * C50855 + C29642 * C50846 +
            (C28968 + C28969) * C38322) *
               C50694 * C50593 * C50629 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C50593 * C926) *
              C929 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50855 +
            (C29380 + C29381) * C50846 + (C38934 + C38935) * C38322) *
               C50694 * C50593 * C926 -
           ((C25613 * C1116 + C29372 + C29372 + C50532 * C1124 +
             C25611 * C1117 + C29373 + C29373 + C25606 * C1125) *
                C38322 +
            (C29173 + C29172) * C50846 + (C26193 + C26192) * C50855) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
            C25617 + C25617 + C50532 * C140) *
               C50855 +
           (C28960 + C28961) * C50846 + C38618 * C38322) *
              C50694 * C50593 * C997 -
          (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
              C50694 * C50593 * C998 +
          (C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
              C50694 * C50593 * C999 -
          ((C25613 * C9235 + C26998 + C26998 + C50532 * C9239 + C25611 * C9236 +
            C26999 + C26999 + C25606 * C9240) *
               C38322 +
           (C27511 + C27510) * C50846 + C26830 * C50855) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
              C25617 + C25617 + C50532 * C140) *
                 C50855 +
             (C28960 + C28961) * C50846 + C38618 * C38322) *
                C50694 * C1577 -
            (C40396 * C38322 + (C28962 + C28963) * C50846 +
             (C28961 + C28960) * C50855) *
                C50694 * C50657) *
               C50806 +
           ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
                C50694 * C50657 -
            (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
                C50694 * C1577) *
               C50629) *
              C50798 +
          ((((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
             (C38630 + C38631) * C38322) *
                C50694 * C50657 -
            (C38623 * C38322 + (C28965 + C28964) * C50846 +
             (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
              C25627 + C25627 + C25606 * C140) *
                 C50855) *
                C50694 * C1577) *
               C50806 +
           (((C25848 + C25849) * C50855 + C29642 * C50846 +
             (C28968 + C28969) * C38322) *
                C50694 * C1577 -
            ((C25613 * C4506 + C28936 + C28936 + C50532 * C4512 +
              C25611 * C4507 + C28937 + C28937 + C25606 * C4513) *
                 C38322 +
             (C28969 + C28968) * C50846 + C29643 * C50855) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C50852 -
           (C40396 * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C50853 +
           (C38618 * C50855 + (C31351 + C31352) * C50846 +
            (C40407 + C40408) * C38322) *
               C50694 * C1993) *
              C50806 +
          ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
               C50694 * C50853 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C50852 -
           ((C25613 * C16743 + C31343 + C31343 + C50532 * C16745 +
             C25611 * C14865 + C31344 + C31344 + C25606 * C14869) *
                C38322 +
            (C30173 + C30172) * C50846 + C30162 * C50855) *
               C50694 * C1993) *
              C50629) *
         C50558) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C1577 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C50657) *
              C260 +
          ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
               C50694 * C50657 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C1577) *
              C261 +
          ((C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
               C50694 * C1577 -
           ((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
             C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                C38322 +
            (C27011 + C27010) * C50846 + C27498 * C50855) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C1577 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
            (C38630 + C38631) * C38322) *
               C50694 * C50657 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50855 +
            (C29380 + C29381) * C50846 + (C38934 + C38935) * C38322) *
               C50694 * C1577 -
           ((C25613 * C1747 + C38928 + C38928 + C50532 * C1755 +
             C25611 * C1748 + C38929 + C38929 + C25606 * C1756) *
                C38322 +
            (C38935 + C38934) * C50846 + (C29381 + C29380) * C50855) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
            C25617 + C25617 + C50532 * C140) *
               C50855 +
           (C28960 + C28961) * C50846 + C38618 * C38322) *
              C50694 * C1743 -
          (C40396 * C38322 + (C28962 + C28963) * C50846 +
           (C28961 + C28960) * C50855) *
              C50694 * C1744 +
          (C38618 * C50855 + (C31351 + C31352) * C50846 +
           (C40407 + C40408) * C38322) *
              C50694 * C1745 -
          ((C25613 * C17635 + C40401 + C40401 + C50532 * C17639 +
            C25611 * C17636 + C40402 + C40402 + C25606 * C17640) *
               C38322 +
           (C40408 + C40407) * C50846 + C40396 * C50855) *
              C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 +
                      C25613 * C126 + C25617 + C25617 + C50532 * C140) *
                         C50855 +
                     (C28960 + C28961) * C50846 + C38618 * C38322) *
                        C50694 * C50852 -
                    (C40396 * C38322 + (C28962 + C28963) * C50846 +
                     (C28961 + C28960) * C50855) *
                        C50694 * C50853 +
                    (C38618 * C50855 + (C31351 + C31352) * C50846 +
                     (C40407 + C40408) * C38322) *
                        C50694 * C1993) *
                       C50577 * C50798 +
                   (((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
                     (C38630 + C38631) * C38322) *
                        C50694 * C50853 -
                    (C38623 * C38322 + (C28965 + C28964) * C50846 +
                     (C25613 * C127 + C25626 + C25626 + C50532 * C141 +
                      C25611 * C126 + C25627 + C25627 + C25606 * C140) *
                         C50855) *
                        C50694 * C50852 -
                    ((C25613 * C7235 + C38624 + C38624 + C50532 * C7241 +
                      C25611 * C7236 + C38625 + C38625 + C25606 * C7242) *
                         C38322 +
                     (C38631 + C38630) * C50846 + C38623 * C50855) *
                        C50694 * C1993) *
                       C50577 * C50564)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C1577 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C28964 + C28965) * C50855 + (C28966 + C28967) * C50846 +
            (C38630 + C38631) * C38322) *
               C50694 * C50657 -
           (C38623 * C38322 + (C28965 + C28964) * C50846 +
            (C25613 * C127 + C25626 + C25626 + C50532 * C141 + C25611 * C126 +
             C25627 + C25627 + C25606 * C140) *
                C50855) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C25611 * C127 + C25628 + C25628 + C25606 * C141 + C25613 * C128 +
             C25629 + C25629 + C50532 * C142) *
                C50855 +
            (C29380 + C29381) * C50846 + (C38934 + C38935) * C38322) *
               C50694 * C1577 -
           ((C25613 * C1747 + C38928 + C38928 + C50532 * C1755 +
             C25611 * C1748 + C38929 + C38929 + C25606 * C1756) *
                C38322 +
            (C38935 + C38934) * C50846 + (C29381 + C29380) * C50855) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25611 * C125 + C25616 + C25616 + C25606 * C139 + C25613 * C126 +
             C25617 + C25617 + C50532 * C140) *
                C50855 +
            (C28960 + C28961) * C50846 + C38618 * C38322) *
               C50694 * C1577 -
           ((C31352 + C31351) * C38322 + (C28962 + C28963) * C50846 +
            (C28961 + C28960) * C50855) *
               C50694 * C50657) *
              C260 +
          ((C29640 * C50855 + C30163 * C50846 + (C30172 + C30173) * C38322) *
               C50694 * C50657 -
           (C30162 * C38322 + C29641 * C50846 + (C25843 + C25842) * C50855) *
               C50694 * C1577) *
              C261 +
          ((C25854 * C50855 + C30820 * C50846 + (C27010 + C27011) * C38322) *
               C50694 * C1577 -
           ((C25613 * C10159 + C27902 + C27902 + C50532 * C10163 +
             C25611 * C10160 + C27903 + C27903 + C25606 * C10164) *
                C38322 +
            (C27011 + C27010) * C50846 + C27498 * C50855) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[180] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50593 * C50806 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50720 * C50694 * C50593 * C50629) *
                       C50848 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50720 * C50694 * C50593 * C50629 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50593 * C50806) *
                       C50849 +
                   ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                     C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                     C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                        C50720 * C50694 * C50593 * C50806 -
                    (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 +
                     C566 + C566 + C107 * C293 + C119 * C265 + C567 + C567 +
                     C106 * C285 + C117 * C266 + C568 + C568 + C105 * C286) *
                        C50720 * C50694 * C50593 * C50629) *
                       C560)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50593 * C50806 -
                    ((C8086 + C8087) * C50720 * C7850 +
                     (C8085 + C8084) * C50720 * C7849 +
                     (C8083 + C8082) * C50720 * C7848) *
                        C50593 * C50629) *
                       C50848 +
                   (((C8088 + C8089) * C50720 * C7848 +
                     (C8090 + C8091) * C50720 * C7849 +
                     (C8092 + C8093) * C50720 * C7850) *
                        C50593 * C50629 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50593 * C50806) *
                       C50849 +
                   (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                      C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                         C50720 * C7848 +
                     (C8432 + C8433) * C50720 * C7849 +
                     (C8434 + C8435) * C50720 * C7850) *
                        C50593 * C50806 -
                    ((C7853 * C1002 + C8422 + C8422 + C50532 * C1010 +
                      C7851 * C1003 + C8423 + C8423 + C50789 * C1011) *
                         C50720 * C7850 +
                     (C8435 + C8434) * C50720 * C7849 +
                     (C8433 + C8432) * C50720 * C7848) *
                        C50593 * C50629) *
                       C560)) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                      C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                      C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                         C50720 * C50694 * C50807 -
                     (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                      C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                      C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                         C50720 * C50694 * C50657) *
                        C50806 +
                    ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                      C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                      C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                         C50720 * C50694 * C50657 -
                     (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                      C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                      C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                         C50720 * C50694 * C50807) *
                        C50629) *
                       C263 +
                   (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                      C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                      C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                         C50720 * C50694 * C50657 -
                     (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                      C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                      C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                         C50720 * C50694 * C50807) *
                        C50806 +
                    ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                      C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                      C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                         C50720 * C50694 * C50807 -
                     (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                      C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                      C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                         C50720 * C50694 * C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                       C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                          C50720 * C7848 +
                      (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                         C50807 -
                     ((C8818 + C8819) * C50720 * C7850 +
                      (C8820 + C8821) * C50720 * C7849 +
                      (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                       C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                          C50720 * C7848) *
                         C50657) *
                        C50806 +
                    (((C8821 + C8820) * C50720 * C7848 +
                      (C8819 + C8818) * C50720 * C7849 +
                      (C7851 * C4091 + C8790 + C8790 + C50789 * C4097 +
                       C7853 * C4090 + C8791 + C8791 + C50532 * C4096) *
                          C50720 * C7850) *
                         C50657 -
                     ((C8086 + C8087) * C50720 * C7850 +
                      (C8085 + C8084) * C50720 * C7849 +
                      (C8083 + C8082) * C50720 * C7848) *
                         C50807) *
                        C50629) *
                       C263 +
                   ((((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                       C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                          C50720 * C7848 +
                      (C8822 + C8823) * C50720 * C7849 +
                      (C8824 + C8825) * C50720 * C7850) *
                         C50657 -
                     (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                      (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                       C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                          C50720 * C7848) *
                         C50807) *
                        C50806 +
                    (((C8088 + C8089) * C50720 * C7848 +
                      (C8090 + C8091) * C50720 * C7849 +
                      (C8092 + C8093) * C50720 * C7850) *
                         C50807 -
                     ((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 +
                       C7851 * C4090 + C8801 + C8801 + C50789 * C4096) *
                          C50720 * C7850 +
                      (C8825 + C8824) * C50720 * C7849 +
                      (C8823 + C8822) * C50720 * C7848) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[182] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50593 * C260 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50720 * C50694 * C50593 * C261 +
                    (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                     C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                     C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                        C50720 * C50694 * C50593 * C262) *
                       C263 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50720 * C50694 * C50593 * C261 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50593 * C260 -
                    (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                     C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                     C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                        C50720 * C50694 * C50593 * C262) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50593 * C50577 * C113 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50593 * C50577 * C114 +
                   (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50720 * C50694 * C50593 * C50577 * C115 -
                   (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 +
                    C160 + C160 + C107 * C144 + C119 * C129 + C161 + C161 +
                    C106 * C143 + C117 * C128 + C162 + C162 + C105 * C142) *
                       C50720 * C50694 * C50593 * C50577 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C409 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50720 * C50694 * C410 +
                    (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 +
                     C448 + C448 + C106 * C437 + C121 * C418 + C449 + C449 +
                     C107 * C438 + C123 * C419 + C450 + C450 + C108 * C439) *
                        C50720 * C50694 * C411) *
                       C50577 * C263 +
                   ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50720 * C50694 * C410 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C409 -
                    (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 +
                     C456 + C456 + C107 * C439 + C119 * C418 + C457 + C457 +
                     C106 * C438 + C117 * C417 + C458 + C458 + C105 * C437) *
                        C50720 * C50694 * C411) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C7851 * C268 + C7858 + C7858 + C50789 * C288 +
                     C7853 * C267 + C7859 + C7859 + C50532 * C287) *
                        C50720 * C7849 +
                    (C7851 * C269 + C7860 + C7860 + C50789 * C289 +
                     C7853 * C270 + C7861 + C7861 + C50532 * C290) *
                        C50720 * C7850) *
                       C50593 * C50577 * C113 -
                   ((C7853 * C271 + C7862 + C7862 + C50532 * C291 +
                     C7851 * C270 + C7863 + C7863 + C50789 * C290) *
                        C50720 * C7850 +
                    (C7853 * C266 + C7864 + C7864 + C50532 * C286 +
                     C7851 * C267 + C7865 + C7865 + C50789 * C287) *
                        C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C50577 * C114 +
                   ((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C50720 * C7848 +
                    (C7851 * C266 + C7870 + C7870 + C50789 * C286 +
                     C7853 * C265 + C7871 + C7871 + C50532 * C285) *
                        C50720 * C7849 +
                    (C7851 * C271 + C7872 + C7872 + C50789 * C291 +
                     C7853 * C272 + C7873 + C7873 + C50532 * C292) *
                        C50720 * C7850) *
                       C50593 * C50577 * C115 -
                   ((C7853 * C274 + C7874 + C7874 + C50532 * C294 +
                     C7851 * C272 + C7875 + C7875 + C50789 * C292) *
                        C50720 * C7850 +
                    (C7853 * C273 + C7876 + C7876 + C50532 * C293 +
                     C7851 * C265 + C7877 + C7877 + C50789 * C285) *
                        C50720 * C7849 +
                    (C7853 * C129 + C7878 + C7878 + C50532 * C143 +
                     C7851 * C128 + C7879 + C7879 + C50789 * C142) *
                        C50720 * C7848) *
                       C50593 * C50577 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50593 * C260 -
                    ((C8086 + C8087) * C50720 * C7850 +
                     (C8085 + C8084) * C50720 * C7849 +
                     (C8083 + C8082) * C50720 * C7848) *
                        C50593 * C261 +
                    (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                     (C7851 * C3405 + C8040 + C8040 + C50789 * C3411 +
                      C7853 * C3404 + C8041 + C8041 + C50532 * C3410) *
                         C50720 * C7850) *
                        C50593 * C262) *
                       C263 +
                   (((C8088 + C8089) * C50720 * C7848 +
                     (C8090 + C8091) * C50720 * C7849 +
                     (C8092 + C8093) * C50720 * C7850) *
                        C50593 * C261 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50593 * C260 -
                    ((C7853 * C3403 + C8056 + C8056 + C50532 * C3409 +
                      C7851 * C3404 + C8057 + C8057 + C50789 * C3410) *
                         C50720 * C7850 +
                     (C8093 + C8092) * C50720 * C7849 + C8097 * C7848) *
                        C50593 * C262) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C409 -
                    ((C7853 * C1465 + C8244 + C8244 + C50532 * C1473 +
                      C7851 * C1466 + C8245 + C8245 + C50789 * C1474) *
                         C50720 * C7850 +
                     (C7853 * C806 + C8246 + C8246 + C50532 * C816 +
                      C7851 * C805 + C8247 + C8247 + C50789 * C815) *
                         C50720 * C7849 +
                     (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                      C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                         C50720 * C7848) *
                        C410 +
                    ((C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                      C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                         C50720 * C7848 +
                     (C7851 * C1119 + C8252 + C8252 + C50789 * C1127 +
                      C7853 * C1118 + C8253 + C8253 + C50532 * C1126) *
                         C50720 * C7849 +
                     (C7851 * C3578 + C8254 + C8254 + C50789 * C3584 +
                      C7853 * C3577 + C8255 + C8255 + C50532 * C3583) *
                         C50720 * C7850) *
                        C411) *
                       C50577 * C263 +
                   (((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                      C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                         C50720 * C7848 +
                     (C7851 * C806 + C8258 + C8258 + C50789 * C816 +
                      C7853 * C807 + C8259 + C8259 + C50532 * C817) *
                         C50720 * C7849 +
                     (C7851 * C1465 + C8260 + C8260 + C50789 * C1473 +
                      C7853 * C1464 + C8261 + C8261 + C50532 * C1472) *
                         C50720 * C7850) *
                        C410 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C409 -
                    ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                      C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                         C50720 * C7850 +
                     (C7853 * C1117 + C8264 + C8264 + C50532 * C1125 +
                      C7851 * C1118 + C8265 + C8265 + C50789 * C1126) *
                         C50720 * C7849 +
                     (C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                      C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                         C50720 * C7848) *
                        C411) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[183] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50807 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50720 * C50694 * C50657) *
                       C50577 * C50848 +
                   ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50720 * C50694 * C50657 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50807) *
                       C50577 * C50849 +
                   ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                     C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                     C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                        C50720 * C50694 * C50807 -
                    (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 +
                     C673 + C673 + C107 * C440 + C119 * C412 + C674 + C674 +
                     C106 * C432 + C117 * C413 + C675 + C675 + C105 * C433) *
                        C50720 * C50694 * C50657) *
                       C50577 * C560)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50807 -
                    ((C7853 * C1465 + C8244 + C8244 + C50532 * C1473 +
                      C7851 * C1466 + C8245 + C8245 + C50789 * C1474) *
                         C50720 * C7850 +
                     (C7853 * C806 + C8246 + C8246 + C50532 * C816 +
                      C7851 * C805 + C8247 + C8247 + C50789 * C815) *
                         C50720 * C7849 +
                     (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                      C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                         C50720 * C7848) *
                        C50657) *
                       C50577 * C50848 +
                   (((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                      C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                         C50720 * C7848 +
                     (C7851 * C806 + C8258 + C8258 + C50789 * C816 +
                      C7853 * C807 + C8259 + C8259 + C50532 * C817) *
                         C50720 * C7849 +
                     (C7851 * C1465 + C8260 + C8260 + C50789 * C1473 +
                      C7853 * C1464 + C8261 + C8261 + C50532 * C1472) *
                         C50720 * C7850) *
                        C50657 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50807) *
                       C50577 * C50849 +
                   (((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                      C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                         C50720 * C7848 +
                     (C8432 + C8433) * C50720 * C7849 +
                     (C8434 + C8435) * C50720 * C7850) *
                        C50807 -
                    ((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 +
                      C7851 * C1464 + C8583 + C8583 + C50789 * C1472) *
                         C50720 * C7850 +
                     (C7853 * C808 + C8584 + C8584 + C50532 * C818 +
                      C7851 * C807 + C8585 + C8585 + C50789 * C817) *
                         C50720 * C7849 +
                     (C7853 * C412 + C8586 + C8586 + C50532 * C432 +
                      C7851 * C413 + C8587 + C8587 + C50789 * C433) *
                         C50720 * C7848) *
                        C50657) *
                       C50577 * C560)) /
                     (p * q * std::sqrt(p + q));
    d2ee[184] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50720 * C50694 * C50593 * C50577 * C113 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50720 * C50694 * C50593 * C50577 * C114 +
                   (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50720 * C50694 * C50593 * C50577 * C115 -
                   (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 +
                    C160 + C160 + C107 * C144 + C119 * C129 + C161 + C161 +
                    C106 * C143 + C117 * C128 + C162 + C162 + C105 * C142) *
                       C50720 * C50694 * C50593 * C50577 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50593 * C260 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50720 * C50694 * C50593 * C261 +
                    (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                     C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                     C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                        C50720 * C50694 * C50593 * C262) *
                       C263 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50720 * C50694 * C50593 * C261 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50593 * C260 -
                    (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                     C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                     C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                        C50720 * C50694 * C50593 * C262) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                     C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                        C50720 * C7848 +
                    (C7851 * C268 + C7858 + C7858 + C50789 * C288 +
                     C7853 * C267 + C7859 + C7859 + C50532 * C287) *
                        C50720 * C7849 +
                    (C7851 * C269 + C7860 + C7860 + C50789 * C289 +
                     C7853 * C270 + C7861 + C7861 + C50532 * C290) *
                        C50720 * C7850) *
                       C50593 * C50577 * C113 -
                   ((C7853 * C271 + C7862 + C7862 + C50532 * C291 +
                     C7851 * C270 + C7863 + C7863 + C50789 * C290) *
                        C50720 * C7850 +
                    (C7853 * C266 + C7864 + C7864 + C50532 * C286 +
                     C7851 * C267 + C7865 + C7865 + C50789 * C287) *
                        C50720 * C7849 +
                    (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                     C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                        C50720 * C7848) *
                       C50593 * C50577 * C114 +
                   ((C7851 * C127 + C7868 + C7868 + C50789 * C141 +
                     C7853 * C128 + C7869 + C7869 + C50532 * C142) *
                        C50720 * C7848 +
                    (C7851 * C266 + C7870 + C7870 + C50789 * C286 +
                     C7853 * C265 + C7871 + C7871 + C50532 * C285) *
                        C50720 * C7849 +
                    (C7851 * C271 + C7872 + C7872 + C50789 * C291 +
                     C7853 * C272 + C7873 + C7873 + C50532 * C292) *
                        C50720 * C7850) *
                       C50593 * C50577 * C115 -
                   ((C7853 * C274 + C7874 + C7874 + C50532 * C294 +
                     C7851 * C272 + C7875 + C7875 + C50789 * C292) *
                        C50720 * C7850 +
                    (C7853 * C273 + C7876 + C7876 + C50532 * C293 +
                     C7851 * C265 + C7877 + C7877 + C50789 * C285) *
                        C50720 * C7849 +
                    (C7853 * C129 + C7878 + C7878 + C50532 * C143 +
                     C7851 * C128 + C7879 + C7879 + C50789 * C142) *
                        C50720 * C7848) *
                       C50593 * C50577 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50593 * C260 -
                    ((C8086 + C8087) * C50720 * C7850 +
                     (C8085 + C8084) * C50720 * C7849 +
                     (C8083 + C8082) * C50720 * C7848) *
                        C50593 * C261 +
                    (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                     (C7851 * C3405 + C8040 + C8040 + C50789 * C3411 +
                      C7853 * C3404 + C8041 + C8041 + C50532 * C3410) *
                         C50720 * C7850) *
                        C50593 * C262) *
                       C263 +
                   (((C8088 + C8089) * C50720 * C7848 +
                     (C8090 + C8091) * C50720 * C7849 +
                     (C8092 + C8093) * C50720 * C7850) *
                        C50593 * C261 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50593 * C260 -
                    ((C7853 * C3403 + C8056 + C8056 + C50532 * C3409 +
                      C7851 * C3404 + C8057 + C8057 + C50789 * C3410) *
                         C50720 * C7850 +
                     (C8093 + C8092) * C50720 * C7849 + C8097 * C7848) *
                        C50593 * C262) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[185] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50593 * C50850 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50720 * C50694 * C50593 * C50851 +
                    (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                     C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                     C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                        C50720 * C50694 * C50593 * C1232) *
                       C50798 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50720 * C50694 * C50593 * C50851 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50593 * C50850 -
                    (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                     C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                     C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                        C50720 * C50694 * C50593 * C1232) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50593 * C50850 -
                    (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                     (C8083 + C8082) * C50720 * C7848) *
                        C50593 * C50851 +
                    (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
                     (C9088 + C9089) * C50720 * C7850) *
                        C50593 * C1232) *
                       C50798 +
                   (((C8088 + C8089) * C50720 * C7848 +
                     (C8090 + C8091) * C50720 * C7849 +
                     (C8092 + C8093) * C50720 * C7850) *
                        C50593 * C50851 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50593 * C50850 -
                    ((C7853 * C3403 + C8056 + C8056 + C50532 * C3409 +
                      C7851 * C3404 + C8057 + C8057 + C50789 * C3410) *
                         C50720 * C7850 +
                     (C8093 + C8092) * C50720 * C7849 + C8097 * C7848) *
                        C50593 * C1232) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C50807 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C50850 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50657 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C50807) *
              C50851 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50720 * C50694 * C50807 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50720 * C50694 * C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50807 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C50850 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50657 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50807) *
              C50851 +
          ((C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
            (C9088 + C9089) * C50720 * C7850) *
               C50807 -
           ((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50720 * C7850 +
            (C9769 + C9768) * C50720 * C7849 + C9763 * C7848) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50720 * C50694 * C50593 * C997 -
          (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 + C297 +
           C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 + C117 * C268 +
           C299 + C299 + C105 * C288) *
              C50720 * C50694 * C50593 * C998 +
          (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 + C301 +
           C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 + C123 * C272 +
           C303 + C303 + C108 * C292) *
              C50720 * C50694 * C50593 * C999 -
          (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 + C1016 +
           C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 + C106 * C1012 +
           C117 * C1005 + C1018 + C1018 + C105 * C1013) *
              C50720 * C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C50593 * C926 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C50593 * C50629) *
              C928 +
          ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
            C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
            C123 * C273 + C307 + C307 + C108 * C293) *
               C50720 * C50694 * C50593 * C50629 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50720 * C50694 * C50593 * C926) *
              C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50720 * C50694 * C50593 * C926 -
           (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 + C566 +
            C566 + C107 * C293 + C119 * C265 + C567 + C567 + C106 * C285 +
            C117 * C266 + C568 + C568 + C105 * C286) *
               C50720 * C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C409 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C410 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50720 * C50694 * C411) *
              C926 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C410 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C409 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50720 * C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50593 * C926 -
           ((C8086 + C8087) * C50720 * C7850 +
            (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50593 * C50629) *
              C928 +
          (((C8088 + C8089) * C50720 * C7848 +
            (C8090 + C8091) * C50720 * C7849 +
            (C8092 + C8093) * C50720 * C7850) *
               C50593 * C50629 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C50593 * C926) *
              C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C50593 * C926 -
           ((C7853 * C1002 + C8422 + C8422 + C50532 * C1010 + C7851 * C1003 +
             C8423 + C8423 + C50789 * C1011) *
                C50720 * C7850 +
            (C8435 + C8434) * C50720 * C7849 +
            (C8433 + C8432) * C50720 * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C50720 * C7848 +
           (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
              C50593 * C997 -
          (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
           (C8083 + C8082) * C50720 * C7848) *
              C50593 * C998 +
          (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
           (C9088 + C9089) * C50720 * C7850) *
              C50593 * C999 -
          ((C7853 * C9069 + C9081 + C9081 + C50532 * C9073 + C7851 * C9070 +
            C9082 + C9082 + C50789 * C9074) *
               C50720 * C7850 +
           (C9089 + C9088) * C50720 * C7849 + C9083 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C409 -
           ((C8818 + C8819) * C50720 * C7850 +
            (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C410 +
           ((C7851 * C416 + C8250 + C8250 + C50789 * C436 + C7853 * C417 +
             C8251 + C8251 + C50532 * C437) *
                C50720 * C7848 +
            (C9260 + C9261) * C50720 * C7849 +
            (C9262 + C9263) * C50720 * C7850) *
               C411) *
              C926 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C7851 * C4091 + C8790 + C8790 + C50789 * C4097 + C7853 * C4090 +
             C8791 + C8791 + C50532 * C4096) *
                C50720 * C7850) *
               C410 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C409 -
           ((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
             C9251 + C9251 + C50789 * C9240) *
                C50720 * C7850 +
            (C9263 + C9262) * C50720 * C7849 +
            (C9261 + C9260) * C50720 * C7848) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[188] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                      C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                      C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                         C50720 * C50694 * C50807 -
                     (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                      C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                      C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                         C50720 * C50694 * C50657) *
                        C926 +
                    ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                      C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                      C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                         C50720 * C50694 * C50657 -
                     (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                      C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                      C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                         C50720 * C50694 * C50807) *
                        C50629) *
                       C50798 +
                   (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                      C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                      C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                         C50720 * C50694 * C50657 -
                     (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                      C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                      C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                         C50720 * C50694 * C50807) *
                        C926 +
                    ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                      C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                      C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                         C50720 * C50694 * C50807 -
                     (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                      C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                      C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                         C50720 * C50694 * C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                       C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                          C50720 * C7848 +
                      (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                         C50807 -
                     ((C8818 + C8819) * C50720 * C7850 +
                      (C8820 + C8821) * C50720 * C7849 +
                      (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                       C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                          C50720 * C7848) *
                         C50657) *
                        C926 +
                    (((C8821 + C8820) * C50720 * C7848 +
                      (C8819 + C8818) * C50720 * C7849 +
                      (C7851 * C4091 + C8790 + C8790 + C50789 * C4097 +
                       C7853 * C4090 + C8791 + C8791 + C50532 * C4096) *
                          C50720 * C7850) *
                         C50657 -
                     (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                      (C8083 + C8082) * C50720 * C7848) *
                         C50807) *
                        C50629) *
                       C50798 +
                   ((((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                       C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                          C50720 * C7848 +
                      (C8822 + C8823) * C50720 * C7849 +
                      (C8824 + C8825) * C50720 * C7850) *
                         C50657 -
                     (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                      (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                       C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                          C50720 * C7848) *
                         C50807) *
                        C926 +
                    (((C8088 + C8089) * C50720 * C7848 +
                      (C8090 + C8091) * C50720 * C7849 +
                      (C8092 + C8093) * C50720 * C7850) *
                         C50807 -
                     ((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 +
                       C7851 * C4090 + C8801 + C8801 + C50789 * C4096) *
                          C50720 * C7850 +
                      (C8825 + C8824) * C50720 * C7849 +
                      (C8823 + C8822) * C50720 * C7848) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C50593 * C926 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C50593 * C50629) *
              C928 +
          ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
            C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
            C123 * C273 + C307 + C307 + C108 * C293) *
               C50720 * C50694 * C50593 * C50629 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50720 * C50694 * C50593 * C926) *
              C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50720 * C50694 * C50593 * C926 -
           (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 + C566 +
            C566 + C107 * C293 + C119 * C265 + C567 + C567 + C106 * C285 +
            C117 * C266 + C568 + C568 + C105 * C286) *
               C50720 * C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50720 * C50694 * C50593 * C997 -
          (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 + C297 +
           C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 + C117 * C268 +
           C299 + C299 + C105 * C288) *
              C50720 * C50694 * C50593 * C998 +
          (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 + C301 +
           C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 + C123 * C272 +
           C303 + C303 + C108 * C292) *
              C50720 * C50694 * C50593 * C999 -
          (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 + C1016 +
           C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 + C106 * C1012 +
           C117 * C1005 + C1018 + C1018 + C105 * C1013) *
              C50720 * C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50593 * C926 -
           ((C8086 + C8087) * C50720 * C7850 +
            (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50593 * C50629) *
              C928 +
          (((C8088 + C8089) * C50720 * C7848 +
            (C8090 + C8091) * C50720 * C7849 +
            (C8092 + C8093) * C50720 * C7850) *
               C50593 * C50629 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C50593 * C926) *
              C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C50593 * C926 -
           ((C7853 * C1002 + C8422 + C8422 + C50532 * C1010 + C7851 * C1003 +
             C8423 + C8423 + C50789 * C1011) *
                C50720 * C7850 +
            (C8435 + C8434) * C50720 * C7849 +
            (C8433 + C8432) * C50720 * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C50720 * C7848 +
           (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
              C50593 * C997 -
          (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
           (C8083 + C8082) * C50720 * C7848) *
              C50593 * C998 +
          (C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
           (C9088 + C9089) * C50720 * C7850) *
              C50593 * C999 -
          ((C7853 * C9069 + C9081 + C9081 + C50532 * C9073 + C7851 * C9070 +
            C9082 + C9082 + C50789 * C9074) *
               C50720 * C7850 +
           (C9089 + C9088) * C50720 * C7849 + C9083 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[190] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                      C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                      C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                         C50720 * C50694 * C1577 -
                     (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                      C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                      C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                         C50720 * C50694 * C50657) *
                        C50806 +
                    ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                      C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                      C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                         C50720 * C50694 * C50657 -
                     (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                      C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                      C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                         C50720 * C50694 * C1577) *
                        C50629) *
                       C50798 +
                   (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                      C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                      C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                         C50720 * C50694 * C50657 -
                     (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                      C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                      C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                         C50720 * C50694 * C1577) *
                        C50806 +
                    ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                      C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                      C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                         C50720 * C50694 * C1577 -
                     (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                      C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                      C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                         C50720 * C50694 * C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                       C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                          C50720 * C7848 +
                      (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                         C1577 -
                     (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
                      (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                       C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                          C50720 * C7848) *
                         C50657) *
                        C50806 +
                    (((C8821 + C8820) * C50720 * C7848 +
                      (C8819 + C8818) * C50720 * C7849 +
                      (C9768 + C9769) * C50720 * C7850) *
                         C50657 -
                     (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
                      (C8083 + C8082) * C50720 * C7848) *
                         C1577) *
                        C50629) *
                       C50798 +
                   ((((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                       C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                          C50720 * C7848 +
                      (C8822 + C8823) * C50720 * C7849 +
                      (C8824 + C8825) * C50720 * C7850) *
                         C50657 -
                     (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                      (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                       C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                          C50720 * C7848) *
                         C1577) *
                        C50806 +
                    (((C8088 + C8089) * C50720 * C7848 +
                      (C8090 + C8091) * C50720 * C7849 +
                      (C8092 + C8093) * C50720 * C7850) *
                         C1577 -
                     ((C7853 * C4089 + C8800 + C8800 + C50532 * C4095 +
                       C7851 * C4090 + C8801 + C8801 + C50789 * C4096) *
                          C50720 * C7850 +
                      (C8825 + C8824) * C50720 * C7849 +
                      (C8823 + C8822) * C50720 * C7848) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C50852 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50853 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50720 * C50694 * C1993) *
              C50806 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50853 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C50852 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50720 * C50694 * C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C50852 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50853 +
           ((C7851 * C416 + C8250 + C8250 + C50789 * C436 + C7853 * C417 +
             C8251 + C8251 + C50532 * C437) *
                C50720 * C7848 +
            (C9260 + C9261) * C50720 * C7849 +
            (C9262 + C9263) * C50720 * C7850) *
               C1993) *
              C50806 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50853 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C50852 -
           ((C7853 * C9235 + C9250 + C9250 + C50532 * C9239 + C7851 * C9236 +
             C9251 + C9251 + C50789 * C9240) *
                C50720 * C7850 +
            (C9263 + C9262) * C50720 * C7849 +
            (C9261 + C9260) * C50720 * C7848) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C260 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50657 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C1577) *
              C261 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50720 * C50694 * C1577 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50720 * C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C50577 * C928 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50720 * C50694 * C50657 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50720 * C50694 * C1577) *
              C50577 * C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50720 * C50694 * C1577 -
           (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
            C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
            C117 * C413 + C675 + C675 + C105 * C433) *
               C50720 * C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50720 * C50694 * C1743 -
          (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 + C444 +
           C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 + C117 * C415 +
           C446 + C446 + C105 * C435) *
              C50720 * C50694 * C1744 +
          (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 + C448 +
           C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 + C123 * C419 +
           C450 + C450 + C108 * C439) *
              C50720 * C50694 * C1745 -
          (C123 * C1747 + C1760 + C1760 + C108 * C1755 + C121 * C1748 + C1761 +
           C1761 + C107 * C1756 + C119 * C1749 + C1762 + C1762 + C106 * C1757 +
           C117 * C1750 + C1763 + C1763 + C105 * C1758) *
              C50720 * C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C50577 * C928 +
          (((C7851 * C414 + C8256 + C8256 + C50789 * C434 + C7853 * C413 +
             C8257 + C8257 + C50532 * C433) *
                C50720 * C7848 +
            (C8822 + C8823) * C50720 * C7849 +
            (C8824 + C8825) * C50720 * C7850) *
               C50657 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C1577) *
              C50577 * C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C1577 -
           ((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
             C8583 + C8583 + C50789 * C1472) *
                C50720 * C7850 +
            (C7853 * C808 + C8584 + C8584 + C50532 * C818 + C7851 * C807 +
             C8585 + C8585 + C50789 * C817) *
                C50720 * C7849 +
            (C7853 * C412 + C8586 + C8586 + C50532 * C432 + C7851 * C413 +
             C8587 + C8587 + C50789 * C433) *
                C50720 * C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C260 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50657 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C1577) *
              C261 +
          ((C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
            (C9088 + C9089) * C50720 * C7850) *
               C1577 -
           ((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50720 * C7850 +
            (C9769 + C9768) * C50720 * C7849 + C9763 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
            C7857 + C7857 + C50532 * C140) *
               C50720 * C7848 +
           (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
              C1743 -
          (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
           (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
            C8249 + C8249 + C50789 * C435) *
               C50720 * C7848) *
              C1744 +
          ((C7851 * C416 + C8250 + C8250 + C50789 * C436 + C7853 * C417 +
            C8251 + C8251 + C50532 * C437) *
               C50720 * C7848 +
           (C9260 + C9261) * C50720 * C7849 +
           (C9262 + C9263) * C50720 * C7850) *
              C1745 -
          ((C7853 * C10159 + C10166 + C10166 + C50532 * C10163 +
            C7851 * C10160 + C10167 + C10167 + C50789 * C10164) *
               C50720 * C7850 +
           (C7853 * C4507 + C10168 + C10168 + C50532 * C4513 + C7851 * C4508 +
            C10169 + C10169 + C50789 * C4514) *
               C50720 * C7849 +
           (C7853 * C1749 + C10170 + C10170 + C50532 * C1757 + C7851 * C1750 +
            C10171 + C10171 + C50789 * C1758) *
               C50720 * C7848) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[193] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50720 * C50694 * C50852 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50720 * C50694 * C50853 +
                    (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 +
                     C448 + C448 + C106 * C437 + C121 * C418 + C449 + C449 +
                     C107 * C438 + C123 * C419 + C450 + C450 + C108 * C439) *
                        C50720 * C50694 * C1993) *
                       C50577 * C50798 +
                   ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50720 * C50694 * C50853 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50720 * C50694 * C50852 -
                    (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 +
                     C456 + C456 + C107 * C439 + C119 * C418 + C457 + C457 +
                     C106 * C438 + C117 * C417 + C458 + C458 + C105 * C437) *
                        C50720 * C50694 * C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 +
                      C7853 * C126 + C7857 + C7857 + C50532 * C140) *
                         C50720 * C7848 +
                     (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
                        C50852 -
                    (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
                     (C7853 * C414 + C8248 + C8248 + C50532 * C434 +
                      C7851 * C415 + C8249 + C8249 + C50789 * C435) *
                         C50720 * C7848) *
                        C50853 +
                    ((C7851 * C416 + C8250 + C8250 + C50789 * C436 +
                      C7853 * C417 + C8251 + C8251 + C50532 * C437) *
                         C50720 * C7848 +
                     (C9260 + C9261) * C50720 * C7849 +
                     (C9262 + C9263) * C50720 * C7850) *
                        C1993) *
                       C50577 * C50798 +
                   (((C7851 * C414 + C8256 + C8256 + C50789 * C434 +
                      C7853 * C413 + C8257 + C8257 + C50532 * C433) *
                         C50720 * C7848 +
                     (C8822 + C8823) * C50720 * C7849 +
                     (C8824 + C8825) * C50720 * C7850) *
                        C50853 -
                    (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
                     (C7853 * C127 + C7866 + C7866 + C50532 * C141 +
                      C7851 * C126 + C7867 + C7867 + C50789 * C140) *
                         C50720 * C7848) *
                        C50852 -
                    ((C7853 * C3576 + C8262 + C8262 + C50532 * C3582 +
                      C7851 * C3577 + C8263 + C8263 + C50789 * C3583) *
                         C50720 * C7850 +
                     (C7853 * C1117 + C8264 + C8264 + C50532 * C1125 +
                      C7851 * C1118 + C8265 + C8265 + C50789 * C1126) *
                         C50720 * C7849 +
                     (C7853 * C418 + C8266 + C8266 + C50532 * C438 +
                      C7851 * C417 + C8267 + C8267 + C50789 * C437) *
                         C50720 * C7848) *
                        C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C50577 * C928 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50720 * C50694 * C50657 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50720 * C50694 * C1577) *
              C50577 * C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50720 * C50694 * C1577 -
           (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
            C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
            C117 * C413 + C675 + C675 + C105 * C433) *
               C50720 * C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50720 * C50694 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50720 * C50694 * C50657) *
              C260 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50720 * C50694 * C50657 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50720 * C50694 * C1577) *
              C261 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50720 * C50694 * C1577 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50720 * C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C50577 * C928 +
          (((C7851 * C414 + C8256 + C8256 + C50789 * C434 + C7853 * C413 +
             C8257 + C8257 + C50532 * C433) *
                C50720 * C7848 +
            (C8822 + C8823) * C50720 * C7849 +
            (C8824 + C8825) * C50720 * C7850) *
               C50657 -
           (C8097 * C7850 + (C8089 + C8088) * C50720 * C7849 +
            (C7853 * C127 + C7866 + C7866 + C50532 * C141 + C7851 * C126 +
             C7867 + C7867 + C50789 * C140) *
                C50720 * C7848) *
               C1577) *
              C50577 * C929 +
          (((C7851 * C127 + C7868 + C7868 + C50789 * C141 + C7853 * C128 +
             C7869 + C7869 + C50532 * C142) *
                C50720 * C7848 +
            (C8432 + C8433) * C50720 * C7849 +
            (C8434 + C8435) * C50720 * C7850) *
               C1577 -
           ((C7853 * C1463 + C8582 + C8582 + C50532 * C1471 + C7851 * C1464 +
             C8583 + C8583 + C50789 * C1472) *
                C50720 * C7850 +
            (C7853 * C808 + C8584 + C8584 + C50532 * C818 + C7851 * C807 +
             C8585 + C8585 + C50789 * C817) *
                C50720 * C7849 +
            (C7853 * C412 + C8586 + C8586 + C50532 * C432 + C7851 * C413 +
             C8587 + C8587 + C50789 * C433) *
                C50720 * C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7851 * C125 + C7856 + C7856 + C50789 * C139 + C7853 * C126 +
             C7857 + C7857 + C50532 * C140) *
                C50720 * C7848 +
            (C8082 + C8083) * C50720 * C7849 + C8096 * C7850) *
               C1577 -
           (C9763 * C7850 + (C8820 + C8821) * C50720 * C7849 +
            (C7853 * C414 + C8248 + C8248 + C50532 * C434 + C7851 * C415 +
             C8249 + C8249 + C50789 * C435) *
                C50720 * C7848) *
               C50657) *
              C260 +
          (((C8821 + C8820) * C50720 * C7848 +
            (C8819 + C8818) * C50720 * C7849 +
            (C9768 + C9769) * C50720 * C7850) *
               C50657 -
           (C9083 * C7850 + (C8085 + C8084) * C50720 * C7849 +
            (C8083 + C8082) * C50720 * C7848) *
               C1577) *
              C261 +
          ((C8096 * C7848 + (C8087 + C8086) * C50720 * C7849 +
            (C9088 + C9089) * C50720 * C7850) *
               C1577 -
           ((C7853 * C9749 + C9761 + C9761 + C50532 * C9753 + C7851 * C9750 +
             C9762 + C9762 + C50789 * C9754) *
                C50720 * C7850 +
            (C9769 + C9768) * C50720 * C7849 + C9763 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C50593 * C50806 -
                    ((C2435 + C2436 + C2437) * C50720 * C50708 +
                     (C2434 + C2433 + C2432) * C50720 * C50817) *
                        C50593 * C50629) *
                       C50848 +
                   (((C2438 + C2439 + C2440) * C50720 * C50817 +
                     (C2441 + C2442 + C2443) * C50720 * C50708) *
                        C50593 * C50629 -
                    ((C2440 + C2439 + C2438) * C50720 * C50708 +
                     (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                      C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                      C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                         C50720 * C50817) *
                        C50593 * C50806) *
                       C50849 +
                   (((C2195 * C127 + C2214 + C2214 + C2190 * C141 +
                      C2197 * C128 + C2215 + C2215 + C2191 * C142 +
                      C2199 * C129 + C2216 + C2216 + C2192 * C143) *
                         C50720 * C50817 +
                     (C2775 + C2776 + C2777) * C50720 * C50708) *
                        C50593 * C50806 -
                    ((C2199 * C274 + C2766 + C2766 + C2192 * C294 +
                      C2197 * C272 + C2767 + C2767 + C2191 * C292 +
                      C2195 * C271 + C2768 + C2768 + C2190 * C291) *
                         C50720 * C50708 +
                     (C2777 + C2776 + C2775) * C50720 * C50817) *
                        C50593 * C50629) *
                       C560)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C50593 * C50806 -
                    (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                     C10889 * C10724) *
                        C50593 * C50629) *
                       C50848 +
                   ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
                     C10896 * C10727) *
                        C50593 * C50629 -
                    (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                     (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                         C50720 * C10724) *
                        C50593 * C50806) *
                       C50849 +
                   (((C10728 * C127 + C10739 + C10739 + C50527 * C141) *
                         C50720 * C10724 +
                     C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
                        C50593 * C50806 -
                    ((C10728 * C3403 + C11115 + C11115 + C50527 * C3409) *
                         C50720 * C10727 +
                     C11127 * C10726 + C11126 * C10725 + C11125 * C10724) *
                        C50593 * C50629) *
                       C560)) /
                     (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                       C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                       C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                          C50720 * C50817 +
                      (C2432 + C2433 + C2434) * C50720 * C50708) *
                         C50807 -
                     ((C3154 + C3155 + C3156) * C50720 * C50708 +
                      (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                       C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                       C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                          C50720 * C50817) *
                         C50657) *
                        C50806 +
                    (((C3156 + C3155 + C3154) * C50720 * C50817 +
                      (C2195 * C1466 + C3130 + C3130 + C2190 * C1474 +
                       C2197 * C1465 + C3131 + C3131 + C2191 * C1473 +
                       C2199 * C1464 + C3132 + C3132 + C2192 * C1472) *
                          C50720 * C50708) *
                         C50657 -
                     ((C2435 + C2436 + C2437) * C50720 * C50708 +
                      (C2434 + C2433 + C2432) * C50720 * C50817) *
                         C50807) *
                        C50629) *
                       C263 +
                   ((((C2195 * C414 + C2602 + C2602 + C2190 * C434 +
                       C2197 * C413 + C2603 + C2603 + C2191 * C433 +
                       C2199 * C412 + C2604 + C2604 + C2192 * C432) *
                          C50720 * C50817 +
                      (C3157 + C3158 + C3159) * C50720 * C50708) *
                         C50657 -
                     ((C2440 + C2439 + C2438) * C50720 * C50708 +
                      (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                       C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                       C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                          C50720 * C50817) *
                         C50807) *
                        C50806 +
                    (((C2438 + C2439 + C2440) * C50720 * C50817 +
                      (C2441 + C2442 + C2443) * C50720 * C50708) *
                         C50807 -
                     ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 +
                       C2197 * C1464 + C3140 + C3140 + C2191 * C1472 +
                       C2195 * C1465 + C3141 + C3141 + C2190 * C1473) *
                          C50720 * C50708 +
                      (C3159 + C3158 + C3157) * C50720 * C50817) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                          C50720 * C10724 +
                      C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                         C50807 -
                     (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                      (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                          C50720 * C10724) *
                         C50657) *
                        C50806 +
                    ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
                      (C10728 * C9750 + C11366 + C11366 + C50527 * C9754) *
                          C50720 * C10727) *
                         C50657 -
                     (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                      C10889 * C10724) *
                         C50807) *
                        C50629) *
                       C263 +
                   ((((C10728 * C414 + C11003 + C11003 + C50527 * C434) *
                          C50720 * C10724 +
                      C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                         C50657 -
                     (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                      (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                          C50720 * C10724) *
                         C50807) *
                        C50806 +
                    ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
                      C10896 * C10727) *
                         C50807 -
                     ((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) *
                          C50720 * C10727 +
                      C11397 * C10726 + C11396 * C10725 + C11395 * C10724) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C260 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C261 +
           ((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C2195 * C1005 + C2387 + C2387 + C2190 * C1013 + C2197 * C1004 +
             C2388 + C2388 + C2191 * C1012 + C2199 * C1003 + C2389 + C2389 +
             C2192 * C1011) *
                C50720 * C50708) *
               C50593 * C262) *
              C263 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C261 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C260 -
           ((C2199 * C1002 + C2405 + C2405 + C2192 * C1010 + C2197 * C1003 +
             C2406 + C2406 + C2191 * C1011 + C2195 * C1004 + C2407 + C2407 +
             C2190 * C1012) *
                C50720 * C50708 +
            (C2443 + C2442 + C2441) * C50720 * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2195 * C268 + C2205 + C2205 + C2190 * C288 + C2197 * C267 + C2206 +
            C2206 + C2191 * C287 + C2199 * C266 + C2207 + C2207 +
            C2192 * C286) *
               C50720 * C50708) *
              C50593 * C50577 * C113 -
          ((C2199 * C265 + C2208 + C2208 + C2192 * C285 + C2197 * C266 + C2209 +
            C2209 + C2191 * C286 + C2195 * C267 + C2210 + C2210 +
            C2190 * C287) *
               C50720 * C50708 +
           (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 + C2212 +
            C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
            C2190 * C140) *
               C50720 * C50817) *
              C50593 * C50577 * C114 +
          ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 + C2215 +
            C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
            C2192 * C143) *
               C50720 * C50817 +
           (C2195 * C266 + C2217 + C2217 + C2190 * C286 + C2197 * C265 + C2218 +
            C2218 + C2191 * C285 + C2199 * C273 + C2219 + C2219 +
            C2192 * C293) *
               C50720 * C50708) *
              C50593 * C50577 * C115 -
          ((C2199 * C561 + C2220 + C2220 + C2192 * C563 + C2197 * C273 + C2221 +
            C2221 + C2191 * C293 + C2195 * C265 + C2222 + C2222 +
            C2190 * C285) *
               C50720 * C50708 +
           (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 + C2224 +
            C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
            C2190 * C142) *
               C50720 * C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C409 -
           ((C2199 * C807 + C2590 + C2590 + C2192 * C817 + C2197 * C806 +
             C2591 + C2591 + C2191 * C816 + C2195 * C805 + C2592 + C2592 +
             C2190 * C815) *
                C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C410 +
           ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 +
             C2597 + C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
             C2192 * C438) *
                C50720 * C50817 +
            (C2195 * C1119 + C2599 + C2599 + C2190 * C1127 + C2197 * C1118 +
             C2600 + C2600 + C2191 * C1126 + C2199 * C1117 + C2601 + C2601 +
             C2192 * C1125) *
                C50720 * C50708) *
               C411) *
              C50577 * C263 +
          (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
             C2192 * C432) *
                C50720 * C50817 +
            (C2195 * C806 + C2605 + C2605 + C2190 * C816 + C2197 * C807 +
             C2606 + C2606 + C2191 * C817 + C2199 * C808 + C2607 + C2607 +
             C2192 * C818) *
                C50720 * C50708) *
               C410 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C409 -
           ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
             C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
             C2190 * C1126) *
                C50720 * C50708 +
            (C2199 * C419 + C2611 + C2611 + C2192 * C439 + C2197 * C418 +
             C2612 + C2612 + C2191 * C438 + C2195 * C417 + C2613 + C2613 +
             C2190 * C437) *
                C50720 * C50817) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           (C10728 * C268 + C10732 + C10732 + C50527 * C288) * C50720 * C10725 +
           (C10728 * C269 + C10733 + C10733 + C50527 * C289) * C50720 * C10726 +
           (C10728 * C1005 + C10734 + C10734 + C50527 * C1013) * C50720 *
               C10727) *
              C50593 * C50577 * C113 -
          ((C10728 * C1004 + C10735 + C10735 + C50527 * C1012) * C50720 *
               C10727 +
           (C10728 * C270 + C10736 + C10736 + C50527 * C290) * C50720 * C10726 +
           (C10728 * C267 + C10737 + C10737 + C50527 * C287) * C50720 * C10725 +
           (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
               C10724) *
              C50593 * C50577 * C114 +
          ((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 * C10724 +
           (C10728 * C266 + C10740 + C10740 + C50527 * C286) * C50720 * C10725 +
           (C10728 * C271 + C10741 + C10741 + C50527 * C291) * C50720 * C10726 +
           (C10728 * C1003 + C10742 + C10742 + C50527 * C1011) * C50720 *
               C10727) *
              C50593 * C50577 * C115 -
          ((C10728 * C1002 + C10743 + C10743 + C50527 * C1010) * C50720 *
               C10727 +
           (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50720 * C10726 +
           (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50720 * C10725 +
           (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50720 *
               C10724) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C260 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C261 +
           (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            (C10728 * C9070 + C10854 + C10854 + C50527 * C9074) * C50720 *
                C10727) *
               C50593 * C262) *
              C263 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C261 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C260 -
           ((C10728 * C9069 + C10864 + C10864 + C50527 * C9073) * C50720 *
                C10727 +
            C10896 * C10726 + C10895 * C10725 + C10894 * C10724) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C409 -
           ((C10728 * C4091 + C10995 + C10995 + C50527 * C4097) * C50720 *
                C10727 +
            (C10728 * C1466 + C10996 + C10996 + C50527 * C1474) * C50720 *
                C10726 +
            (C10728 * C805 + C10997 + C10997 + C50527 * C815) * C50720 *
                C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C410 +
           ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 *
                C10724 +
            (C10728 * C1119 + C11000 + C11000 + C50527 * C1127) * C50720 *
                C10725 +
            (C10728 * C3578 + C11001 + C11001 + C50527 * C3584) * C50720 *
                C10726 +
            (C10728 * C9236 + C11002 + C11002 + C50527 * C9240) * C50720 *
                C10727) *
               C411) *
              C50577 * C263 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            (C10728 * C806 + C11004 + C11004 + C50527 * C816) * C50720 *
                C10725 +
            (C10728 * C1465 + C11005 + C11005 + C50527 * C1473) * C50720 *
                C10726 +
            (C10728 * C4090 + C11006 + C11006 + C50527 * C4096) * C50720 *
                C10727) *
               C410 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C409 -
           ((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50720 *
                C10727 +
            (C10728 * C3577 + C11008 + C11008 + C50527 * C3583) * C50720 *
                C10726 +
            (C10728 * C1118 + C11009 + C11009 + C50527 * C1126) * C50720 *
                C10725 +
            (C10728 * C417 + C11010 + C11010 + C50527 * C437) * C50720 *
                C10724) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C50807 -
                    ((C2199 * C807 + C2590 + C2590 + C2192 * C817 +
                      C2197 * C806 + C2591 + C2591 + C2191 * C816 +
                      C2195 * C805 + C2592 + C2592 + C2190 * C815) *
                         C50720 * C50708 +
                     (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                      C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                      C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                         C50720 * C50817) *
                        C50657) *
                       C50577 * C50848 +
                   (((C2195 * C414 + C2602 + C2602 + C2190 * C434 +
                      C2197 * C413 + C2603 + C2603 + C2191 * C433 +
                      C2199 * C412 + C2604 + C2604 + C2192 * C432) *
                         C50720 * C50817 +
                     (C2195 * C806 + C2605 + C2605 + C2190 * C816 +
                      C2197 * C807 + C2606 + C2606 + C2191 * C817 +
                      C2199 * C808 + C2607 + C2607 + C2192 * C818) *
                         C50720 * C50708) *
                        C50657 -
                    ((C2440 + C2439 + C2438) * C50720 * C50708 +
                     (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                      C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                      C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                         C50720 * C50817) *
                        C50807) *
                       C50577 * C50849 +
                   (((C2195 * C127 + C2214 + C2214 + C2190 * C141 +
                      C2197 * C128 + C2215 + C2215 + C2191 * C142 +
                      C2199 * C129 + C2216 + C2216 + C2192 * C143) *
                         C50720 * C50817 +
                     (C2775 + C2776 + C2777) * C50720 * C50708) *
                        C50807 -
                    ((C2199 * C809 + C2924 + C2924 + C2192 * C819 +
                      C2197 * C808 + C2925 + C2925 + C2191 * C818 +
                      C2195 * C807 + C2926 + C2926 + C2190 * C817) *
                         C50720 * C50708 +
                     (C2199 * C420 + C2927 + C2927 + C2192 * C440 +
                      C2197 * C412 + C2928 + C2928 + C2191 * C432 +
                      C2195 * C413 + C2929 + C2929 + C2190 * C433) *
                         C50720 * C50817) *
                        C50657) *
                       C50577 * C560)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C50807 -
                    ((C10728 * C4091 + C10995 + C10995 + C50527 * C4097) *
                         C50720 * C10727 +
                     (C10728 * C1466 + C10996 + C10996 + C50527 * C1474) *
                         C50720 * C10726 +
                     (C10728 * C805 + C10997 + C10997 + C50527 * C815) *
                         C50720 * C10725 +
                     (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                         C50720 * C10724) *
                        C50657) *
                       C50577 * C50848 +
                   (((C10728 * C414 + C11003 + C11003 + C50527 * C434) *
                         C50720 * C10724 +
                     (C10728 * C806 + C11004 + C11004 + C50527 * C816) *
                         C50720 * C10725 +
                     (C10728 * C1465 + C11005 + C11005 + C50527 * C1473) *
                         C50720 * C10726 +
                     (C10728 * C4090 + C11006 + C11006 + C50527 * C4096) *
                         C50720 * C10727) *
                        C50657 -
                    (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                     (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                         C50720 * C10724) *
                        C50807) *
                       C50577 * C50849 +
                   (((C10728 * C127 + C10739 + C10739 + C50527 * C141) *
                         C50720 * C10724 +
                     C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
                        C50807 -
                    ((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) *
                         C50720 * C10727 +
                     (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) *
                         C50720 * C10726 +
                     (C10728 * C807 + C11228 + C11228 + C50527 * C817) *
                         C50720 * C10725 +
                     (C10728 * C413 + C11229 + C11229 + C50527 * C433) *
                         C50720 * C10724) *
                        C50657) *
                       C50577 * C560)) /
                     (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2195 * C268 + C2205 + C2205 + C2190 * C288 + C2197 * C267 + C2206 +
            C2206 + C2191 * C287 + C2199 * C266 + C2207 + C2207 +
            C2192 * C286) *
               C50720 * C50708) *
              C50593 * C50577 * C113 -
          ((C2199 * C265 + C2208 + C2208 + C2192 * C285 + C2197 * C266 + C2209 +
            C2209 + C2191 * C286 + C2195 * C267 + C2210 + C2210 +
            C2190 * C287) *
               C50720 * C50708 +
           (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 + C2212 +
            C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
            C2190 * C140) *
               C50720 * C50817) *
              C50593 * C50577 * C114 +
          ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 + C2215 +
            C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
            C2192 * C143) *
               C50720 * C50817 +
           (C2195 * C266 + C2217 + C2217 + C2190 * C286 + C2197 * C265 + C2218 +
            C2218 + C2191 * C285 + C2199 * C273 + C2219 + C2219 +
            C2192 * C293) *
               C50720 * C50708) *
              C50593 * C50577 * C115 -
          ((C2199 * C561 + C2220 + C2220 + C2192 * C563 + C2197 * C273 + C2221 +
            C2221 + C2191 * C293 + C2195 * C265 + C2222 + C2222 +
            C2190 * C285) *
               C50720 * C50708 +
           (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 + C2224 +
            C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
            C2190 * C142) *
               C50720 * C50817) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C260 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C261 +
           ((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C2195 * C1005 + C2387 + C2387 + C2190 * C1013 + C2197 * C1004 +
             C2388 + C2388 + C2191 * C1012 + C2199 * C1003 + C2389 + C2389 +
             C2192 * C1011) *
                C50720 * C50708) *
               C50593 * C262) *
              C263 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C261 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C260 -
           ((C2199 * C1002 + C2405 + C2405 + C2192 * C1010 + C2197 * C1003 +
             C2406 + C2406 + C2191 * C1011 + C2195 * C1004 + C2407 + C2407 +
             C2190 * C1012) *
                C50720 * C50708 +
            (C2443 + C2442 + C2441) * C50720 * C50817) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           (C10728 * C268 + C10732 + C10732 + C50527 * C288) * C50720 * C10725 +
           (C10728 * C269 + C10733 + C10733 + C50527 * C289) * C50720 * C10726 +
           (C10728 * C1005 + C10734 + C10734 + C50527 * C1013) * C50720 *
               C10727) *
              C50593 * C50577 * C113 -
          ((C10728 * C1004 + C10735 + C10735 + C50527 * C1012) * C50720 *
               C10727 +
           (C10728 * C270 + C10736 + C10736 + C50527 * C290) * C50720 * C10726 +
           (C10728 * C267 + C10737 + C10737 + C50527 * C287) * C50720 * C10725 +
           (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
               C10724) *
              C50593 * C50577 * C114 +
          ((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 * C10724 +
           (C10728 * C266 + C10740 + C10740 + C50527 * C286) * C50720 * C10725 +
           (C10728 * C271 + C10741 + C10741 + C50527 * C291) * C50720 * C10726 +
           (C10728 * C1003 + C10742 + C10742 + C50527 * C1011) * C50720 *
               C10727) *
              C50593 * C50577 * C115 -
          ((C10728 * C1002 + C10743 + C10743 + C50527 * C1010) * C50720 *
               C10727 +
           (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50720 * C10726 +
           (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50720 * C10725 +
           (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50720 *
               C10724) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C260 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C261 +
           (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            (C10728 * C9070 + C10854 + C10854 + C50527 * C9074) * C50720 *
                C10727) *
               C50593 * C262) *
              C263 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C261 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C260 -
           ((C10728 * C9069 + C10864 + C10864 + C50527 * C9073) * C50720 *
                C10727 +
            C10896 * C10726 + C10895 * C10725 + C10894 * C10724) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C50593 * C50850 -
                    ((C2435 + C2436 + C2437) * C50720 * C50708 +
                     (C2434 + C2433 + C2432) * C50720 * C50817) *
                        C50593 * C50851 +
                    ((C2437 + C2436 + C2435) * C50720 * C50817 +
                     (C3428 + C3429 + C3430) * C50720 * C50708) *
                        C50593 * C1232) *
                       C50798 +
                   (((C2438 + C2439 + C2440) * C50720 * C50817 +
                     (C2441 + C2442 + C2443) * C50720 * C50708) *
                        C50593 * C50851 -
                    ((C2440 + C2439 + C2438) * C50720 * C50708 +
                     (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                      C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                      C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                         C50720 * C50817) *
                        C50593 * C50850 -
                    ((C2199 * C1002 + C2405 + C2405 + C2192 * C1010 +
                      C2197 * C1003 + C2406 + C2406 + C2191 * C1011 +
                      C2195 * C1004 + C2407 + C2407 + C2190 * C1012) *
                         C50720 * C50708 +
                     (C2443 + C2442 + C2441) * C50720 * C50817) *
                        C50593 * C1232) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C50593 * C50850 -
                    (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                     C10889 * C10724) *
                        C50593 * C50851 +
                    (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
                     C11571 * C10727) *
                        C50593 * C1232) *
                       C50798 +
                   ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
                     C10896 * C10727) *
                        C50593 * C50851 -
                    (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                     (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                         C50720 * C10724) *
                        C50593 * C50850 -
                    ((C10728 * C9069 + C10864 + C10864 + C50527 * C9073) *
                         C50720 * C10727 +
                     C10896 * C10726 + C10895 * C10725 + C10894 * C10724) *
                        C50593 * C1232) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C50807 -
                    ((C3154 + C3155 + C3156) * C50720 * C50708 +
                     (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                      C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                      C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                         C50720 * C50817) *
                        C50657) *
                       C50850 +
                   (((C3156 + C3155 + C3154) * C50720 * C50817 +
                     (C4114 + C4115 + C4116) * C50720 * C50708) *
                        C50657 -
                    ((C2435 + C2436 + C2437) * C50720 * C50708 +
                     (C2434 + C2433 + C2432) * C50720 * C50817) *
                        C50807) *
                       C50851 +
                   (((C2437 + C2436 + C2435) * C50720 * C50817 +
                     (C3428 + C3429 + C3430) * C50720 * C50708) *
                        C50807 -
                    ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 +
                      C2197 * C4090 + C4106 + C4106 + C2191 * C4096 +
                      C2195 * C4091 + C4107 + C4107 + C2190 * C4097) *
                         C50720 * C50708 +
                     (C4116 + C4115 + C4114) * C50720 * C50817) *
                        C50657) *
                       C1232) *
                  C50558) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C50807 -
                    (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                     (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                         C50720 * C10724) *
                        C50657) *
                       C50850 +
                   ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
                     C12027 * C10727) *
                        C50657 -
                    (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                     C10889 * C10724) *
                        C50807) *
                       C50851 +
                   ((C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
                     C11571 * C10727) *
                        C50807 -
                    ((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) *
                         C50720 * C10727 +
                     C12027 * C10726 + C11392 * C10725 + C11393 * C10724) *
                        C50657) *
                       C1232) *
                  C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2432 + C2433 + C2434) * C50720 * C50708) *
              C50593 * C997 -
          ((C2435 + C2436 + C2437) * C50720 * C50708 +
           (C2434 + C2433 + C2432) * C50720 * C50817) *
              C50593 * C998 +
          ((C2437 + C2436 + C2435) * C50720 * C50817 +
           (C3428 + C3429 + C3430) * C50720 * C50708) *
              C50593 * C999 -
          ((C2199 * C3403 + C3419 + C3419 + C2192 * C3409 + C2197 * C3404 +
            C3420 + C3420 + C2191 * C3410 + C2195 * C3405 + C3421 + C3421 +
            C2190 * C3411) *
               C50720 * C50708 +
           (C3430 + C3429 + C3428) * C50720 * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C926 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C50629) *
              C928 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C50629 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C926) *
              C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C50593 * C926 -
           ((C2199 * C274 + C2766 + C2766 + C2192 * C294 + C2197 * C272 +
             C2767 + C2767 + C2191 * C292 + C2195 * C271 + C2768 + C2768 +
             C2190 * C291) *
                C50720 * C50708 +
            (C2777 + C2776 + C2775) * C50720 * C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C409 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C410 +
           ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 +
             C2597 + C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
             C2192 * C438) *
                C50720 * C50817 +
            (C3601 + C3602 + C3603) * C50720 * C50708) *
               C411) *
              C926 +
          (((C3156 + C3155 + C3154) * C50720 * C50817 +
            (C2195 * C1466 + C3130 + C3130 + C2190 * C1474 + C2197 * C1465 +
             C3131 + C3131 + C2191 * C1473 + C2199 * C1464 + C3132 + C3132 +
             C2192 * C1472) *
                C50720 * C50708) *
               C410 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C409 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50720 * C50708 +
            (C3603 + C3602 + C3601) * C50720 * C50817) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C926 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C50629) *
              C928 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C50629 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C926) *
              C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C50593 * C926 -
           ((C10728 * C3403 + C11115 + C11115 + C50527 * C3409) * C50720 *
                C10727 +
            C11127 * C10726 + C11126 * C10725 + C11125 * C10724) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
              C50593 * C997 -
          (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
           C10889 * C10724) *
              C50593 * C998 +
          (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
           C11571 * C10727) *
              C50593 * C999 -
          ((C10728 * C11561 + C11567 + C11567 + C50527 * C11563) * C50720 *
               C10727 +
           C11571 * C10726 + C10892 * C10725 + C10891 * C10724) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C409 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C410 +
           ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 *
                C10724 +
            C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
               C411) *
              C926 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            (C10728 * C9750 + C11366 + C11366 + C50527 * C9754) * C50720 *
                C10727) *
               C410 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C409 -
           ((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50720 *
                C10727 +
            C11691 * C10726 + C11690 * C10725 + C11689 * C10724) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[203] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                       C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                       C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                          C50720 * C50817 +
                      (C2432 + C2433 + C2434) * C50720 * C50708) *
                         C50807 -
                     ((C3154 + C3155 + C3156) * C50720 * C50708 +
                      (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                       C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                       C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                          C50720 * C50817) *
                         C50657) *
                        C926 +
                    (((C3156 + C3155 + C3154) * C50720 * C50817 +
                      (C2195 * C1466 + C3130 + C3130 + C2190 * C1474 +
                       C2197 * C1465 + C3131 + C3131 + C2191 * C1473 +
                       C2199 * C1464 + C3132 + C3132 + C2192 * C1472) *
                          C50720 * C50708) *
                         C50657 -
                     ((C2435 + C2436 + C2437) * C50720 * C50708 +
                      (C2434 + C2433 + C2432) * C50720 * C50817) *
                         C50807) *
                        C50629) *
                       C50798 +
                   ((((C2195 * C414 + C2602 + C2602 + C2190 * C434 +
                       C2197 * C413 + C2603 + C2603 + C2191 * C433 +
                       C2199 * C412 + C2604 + C2604 + C2192 * C432) *
                          C50720 * C50817 +
                      (C3157 + C3158 + C3159) * C50720 * C50708) *
                         C50657 -
                     ((C2440 + C2439 + C2438) * C50720 * C50708 +
                      (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                       C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                       C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                          C50720 * C50817) *
                         C50807) *
                        C926 +
                    (((C2438 + C2439 + C2440) * C50720 * C50817 +
                      (C2441 + C2442 + C2443) * C50720 * C50708) *
                         C50807 -
                     ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 +
                       C2197 * C1464 + C3140 + C3140 + C2191 * C1472 +
                       C2195 * C1465 + C3141 + C3141 + C2190 * C1473) *
                          C50720 * C50708 +
                      (C3159 + C3158 + C3157) * C50720 * C50817) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                          C50720 * C10724 +
                      C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                         C50807 -
                     (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                      (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                          C50720 * C10724) *
                         C50657) *
                        C926 +
                    ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
                      (C10728 * C9750 + C11366 + C11366 + C50527 * C9754) *
                          C50720 * C10727) *
                         C50657 -
                     (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                      C10889 * C10724) *
                         C50807) *
                        C50629) *
                       C50798 +
                   ((((C10728 * C414 + C11003 + C11003 + C50527 * C434) *
                          C50720 * C10724 +
                      C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                         C50657 -
                     (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                      (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                          C50720 * C10724) *
                         C50807) *
                        C926 +
                    ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
                      C10896 * C10727) *
                         C50807 -
                     ((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) *
                          C50720 * C10727 +
                      C11397 * C10726 + C11396 * C10725 + C11395 * C10724) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C50593 * C926 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C50593 * C50629) *
              C928 +
          (((C2438 + C2439 + C2440) * C50720 * C50817 +
            (C2441 + C2442 + C2443) * C50720 * C50708) *
               C50593 * C50629 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C50593 * C926) *
              C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C50593 * C926 -
           ((C2199 * C274 + C2766 + C2766 + C2192 * C294 + C2197 * C272 +
             C2767 + C2767 + C2191 * C292 + C2195 * C271 + C2768 + C2768 +
             C2190 * C291) *
                C50720 * C50708 +
            (C2777 + C2776 + C2775) * C50720 * C50817) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2432 + C2433 + C2434) * C50720 * C50708) *
              C50593 * C997 -
          ((C2435 + C2436 + C2437) * C50720 * C50708 +
           (C2434 + C2433 + C2432) * C50720 * C50817) *
              C50593 * C998 +
          ((C2437 + C2436 + C2435) * C50720 * C50817 +
           (C3428 + C3429 + C3430) * C50720 * C50708) *
              C50593 * C999 -
          ((C2199 * C3403 + C3419 + C3419 + C2192 * C3409 + C2197 * C3404 +
            C3420 + C3420 + C2191 * C3410 + C2195 * C3405 + C3421 + C3421 +
            C2190 * C3411) *
               C50720 * C50708 +
           (C3430 + C3429 + C3428) * C50720 * C50817) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C50593 * C926 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C50593 * C50629) *
              C928 +
          ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
            C10896 * C10727) *
               C50593 * C50629 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C50593 * C926) *
              C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C50593 * C926 -
           ((C10728 * C3403 + C11115 + C11115 + C50527 * C3409) * C50720 *
                C10727 +
            C11127 * C10726 + C11126 * C10725 + C11125 * C10724) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
              C50593 * C997 -
          (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
           C10889 * C10724) *
              C50593 * C998 +
          (C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
           C11571 * C10727) *
              C50593 * C999 -
          ((C10728 * C11561 + C11567 + C11567 + C50527 * C11563) * C50720 *
               C10727 +
           C11571 * C10726 + C10892 * C10725 + C10891 * C10724) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                       C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                       C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                          C50720 * C50817 +
                      (C2432 + C2433 + C2434) * C50720 * C50708) *
                         C1577 -
                     ((C3154 + C3155 + C3156) * C50720 * C50708 +
                      (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                       C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                       C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                          C50720 * C50817) *
                         C50657) *
                        C50806 +
                    (((C3156 + C3155 + C3154) * C50720 * C50817 +
                      (C4114 + C4115 + C4116) * C50720 * C50708) *
                         C50657 -
                     ((C2435 + C2436 + C2437) * C50720 * C50708 +
                      (C2434 + C2433 + C2432) * C50720 * C50817) *
                         C1577) *
                        C50629) *
                       C50798 +
                   ((((C2195 * C414 + C2602 + C2602 + C2190 * C434 +
                       C2197 * C413 + C2603 + C2603 + C2191 * C433 +
                       C2199 * C412 + C2604 + C2604 + C2192 * C432) *
                          C50720 * C50817 +
                      (C3157 + C3158 + C3159) * C50720 * C50708) *
                         C50657 -
                     ((C2440 + C2439 + C2438) * C50720 * C50708 +
                      (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                       C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                       C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                          C50720 * C50817) *
                         C1577) *
                        C50806 +
                    (((C2438 + C2439 + C2440) * C50720 * C50817 +
                      (C2441 + C2442 + C2443) * C50720 * C50708) *
                         C1577 -
                     ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 +
                       C2197 * C1464 + C3140 + C3140 + C2191 * C1472 +
                       C2195 * C1465 + C3141 + C3141 + C2190 * C1473) *
                          C50720 * C50708 +
                      (C3159 + C3158 + C3157) * C50720 * C50817) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                          C50720 * C10724 +
                      C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                         C1577 -
                     (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                      (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                          C50720 * C10724) *
                         C50657) *
                        C50806 +
                    ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
                      C12027 * C10727) *
                         C50657 -
                     (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                      C10889 * C10724) *
                         C1577) *
                        C50629) *
                       C50798 +
                   ((((C10728 * C414 + C11003 + C11003 + C50527 * C434) *
                          C50720 * C10724 +
                      C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                         C50657 -
                     (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                      (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                          C50720 * C10724) *
                         C1577) *
                        C50806 +
                    ((C10893 * C10724 + C10894 * C10725 + C10895 * C10726 +
                      C10896 * C10727) *
                         C1577 -
                     ((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) *
                          C50720 * C10727 +
                      C11397 * C10726 + C11396 * C10725 + C11395 * C10724) *
                         C50657) *
                        C50629) *
                       C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C50852 -
                    ((C3154 + C3155 + C3156) * C50720 * C50708 +
                     (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                      C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                      C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                         C50720 * C50817) *
                        C50853 +
                    ((C2195 * C416 + C2596 + C2596 + C2190 * C436 +
                      C2197 * C417 + C2597 + C2597 + C2191 * C437 +
                      C2199 * C418 + C2598 + C2598 + C2192 * C438) *
                         C50720 * C50817 +
                     (C3601 + C3602 + C3603) * C50720 * C50708) *
                        C1993) *
                       C50806 +
                   (((C3156 + C3155 + C3154) * C50720 * C50817 +
                     (C4114 + C4115 + C4116) * C50720 * C50708) *
                        C50853 -
                    ((C2435 + C2436 + C2437) * C50720 * C50708 +
                     (C2434 + C2433 + C2432) * C50720 * C50817) *
                        C50852 -
                    ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 +
                      C2197 * C3577 + C3593 + C3593 + C2191 * C3583 +
                      C2195 * C3578 + C3594 + C3594 + C2190 * C3584) *
                         C50720 * C50708 +
                     (C3603 + C3602 + C3601) * C50720 * C50817) *
                        C1993) *
                       C50629) *
                  C50558) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C50852 -
                    (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                     (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                         C50720 * C10724) *
                        C50853 +
                    ((C10728 * C416 + C10999 + C10999 + C50527 * C436) *
                         C50720 * C10724 +
                     C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
                        C1993) *
                       C50806 +
                   ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
                     C12027 * C10727) *
                        C50853 -
                    (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                     C10889 * C10724) *
                        C50852 -
                    ((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) *
                         C50720 * C10727 +
                     C11691 * C10726 + C11690 * C10725 + C11689 * C10724) *
                        C1993) *
                       C50629) *
                  C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C1577 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50657) *
              C260 +
          (((C3156 + C3155 + C3154) * C50720 * C50817 +
            (C4114 + C4115 + C4116) * C50720 * C50708) *
               C50657 -
           ((C2435 + C2436 + C2437) * C50720 * C50708 +
            (C2434 + C2433 + C2432) * C50720 * C50817) *
               C1577) *
              C261 +
          (((C2437 + C2436 + C2435) * C50720 * C50817 +
            (C3428 + C3429 + C3430) * C50720 * C50708) *
               C1577 -
           ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
             C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
             C2190 * C4097) *
                C50720 * C50708 +
            (C4116 + C4115 + C4114) * C50720 * C50817) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50720 * C50817 +
            (C2432 + C2433 + C2434) * C50720 * C50708) *
               C1577 -
           ((C3154 + C3155 + C3156) * C50720 * C50708 +
            (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
             C2190 * C435) *
                C50720 * C50817) *
               C50657) *
              C50577 * C928 +
          (((C2195 * C414 + C2602 + C2602 + C2190 * C434 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2199 * C412 + C2604 + C2604 +
             C2192 * C432) *
                C50720 * C50817 +
            (C3157 + C3158 + C3159) * C50720 * C50708) *
               C50657 -
           ((C2440 + C2439 + C2438) * C50720 * C50708 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50720 * C50817) *
               C1577) *
              C50577 * C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50720 * C50817 +
            (C2775 + C2776 + C2777) * C50720 * C50708) *
               C1577 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50720 * C50708 +
            (C2199 * C420 + C2927 + C2927 + C2192 * C440 + C2197 * C412 +
             C2928 + C2928 + C2191 * C432 + C2195 * C413 + C2929 + C2929 +
             C2190 * C433) *
                C50720 * C50817) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50720 * C50817 +
           (C2432 + C2433 + C2434) * C50720 * C50708) *
              C1743 -
          ((C3154 + C3155 + C3156) * C50720 * C50708 +
           (C2199 * C413 + C2593 + C2593 + C2192 * C433 + C2197 * C414 + C2594 +
            C2594 + C2191 * C434 + C2195 * C415 + C2595 + C2595 +
            C2190 * C435) *
               C50720 * C50817) *
              C1744 +
          ((C2195 * C416 + C2596 + C2596 + C2190 * C436 + C2197 * C417 + C2597 +
            C2597 + C2191 * C437 + C2199 * C418 + C2598 + C2598 +
            C2192 * C438) *
               C50720 * C50817 +
           (C3601 + C3602 + C3603) * C50720 * C50708) *
              C1745 -
          ((C2199 * C4506 + C4516 + C4516 + C2192 * C4512 + C2197 * C4507 +
            C4517 + C4517 + C2191 * C4513 + C2195 * C4508 + C4518 + C4518 +
            C2190 * C4514) *
               C50720 * C50708 +
           (C2199 * C1748 + C4519 + C4519 + C2192 * C1756 + C2197 * C1749 +
            C4520 + C4520 + C2191 * C1757 + C2195 * C1750 + C4521 + C4521 +
            C2190 * C1758) *
               C50720 * C50817) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C1577 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C50577 * C928 +
          (((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50720 *
                C10724 +
            C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
               C50657 -
           (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50720 *
                C10724) *
               C1577) *
              C50577 * C929 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50720 *
                C10724 +
            C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
               C1577 -
           ((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50720 *
                C10727 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50720 *
                C10726 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50720 *
                C10725 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50720 *
                C10724) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 *
                C10724 +
            C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
               C1577 -
           (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
                C10724) *
               C50657) *
              C260 +
          ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
            C12027 * C10727) *
               C50657 -
           (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
            C10889 * C10724) *
               C1577) *
              C261 +
          ((C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
            C11571 * C10727) *
               C1577 -
           ((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50720 *
                C10727 +
            C12027 * C10726 + C11392 * C10725 + C11393 * C10724) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50720 * C10724 +
           C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
              C1743 -
          (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
           (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50720 *
               C10724) *
              C1744 +
          ((C10728 * C416 + C10999 + C10999 + C50527 * C436) * C50720 * C10724 +
           C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
              C1745 -
          ((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50720 *
               C10727 +
           (C10728 * C10160 + C12294 + C12294 + C50527 * C10164) * C50720 *
               C10726 +
           (C10728 * C4508 + C12295 + C12295 + C50527 * C4514) * C50720 *
               C10725 +
           (C10728 * C1750 + C12296 + C12296 + C50527 * C1758) * C50720 *
               C10724) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C50852 -
                    ((C3154 + C3155 + C3156) * C50720 * C50708 +
                     (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                      C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                      C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                         C50720 * C50817) *
                        C50853 +
                    ((C2195 * C416 + C2596 + C2596 + C2190 * C436 +
                      C2197 * C417 + C2597 + C2597 + C2191 * C437 +
                      C2199 * C418 + C2598 + C2598 + C2192 * C438) *
                         C50720 * C50817 +
                     (C3601 + C3602 + C3603) * C50720 * C50708) *
                        C1993) *
                       C50577 * C50798 +
                   (((C2195 * C414 + C2602 + C2602 + C2190 * C434 +
                      C2197 * C413 + C2603 + C2603 + C2191 * C433 +
                      C2199 * C412 + C2604 + C2604 + C2192 * C432) *
                         C50720 * C50817 +
                     (C3157 + C3158 + C3159) * C50720 * C50708) *
                        C50853 -
                    ((C2440 + C2439 + C2438) * C50720 * C50708 +
                     (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                      C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                      C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                         C50720 * C50817) *
                        C50852 -
                    ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 +
                      C2197 * C1117 + C2609 + C2609 + C2191 * C1125 +
                      C2195 * C1118 + C2610 + C2610 + C2190 * C1126) *
                         C50720 * C50708 +
                     (C2199 * C419 + C2611 + C2611 + C2192 * C439 +
                      C2197 * C418 + C2612 + C2612 + C2191 * C438 +
                      C2195 * C417 + C2613 + C2613 + C2190 * C437) *
                         C50720 * C50817) *
                        C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C50852 -
                    (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                     (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                         C50720 * C10724) *
                        C50853 +
                    ((C10728 * C416 + C10999 + C10999 + C50527 * C436) *
                         C50720 * C10724 +
                     C11689 * C10725 + C11690 * C10726 + C11691 * C10727) *
                        C1993) *
                       C50577 * C50798 +
                   (((C10728 * C414 + C11003 + C11003 + C50527 * C434) *
                         C50720 * C10724 +
                     C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                        C50853 -
                    (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                     (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                         C50720 * C10724) *
                        C50852 -
                    ((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) *
                         C50720 * C10727 +
                     (C10728 * C3577 + C11008 + C11008 + C50527 * C3583) *
                         C50720 * C10726 +
                     (C10728 * C1118 + C11009 + C11009 + C50527 * C1126) *
                         C50720 * C10725 +
                     (C10728 * C417 + C11010 + C11010 + C50527 * C437) *
                         C50720 * C10724) *
                        C1993) *
                       C50577 * C50564)) /
                     (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C1577 -
                    ((C3154 + C3155 + C3156) * C50720 * C50708 +
                     (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                      C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                      C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                         C50720 * C50817) *
                        C50657) *
                       C50577 * C928 +
                   (((C2195 * C414 + C2602 + C2602 + C2190 * C434 +
                      C2197 * C413 + C2603 + C2603 + C2191 * C433 +
                      C2199 * C412 + C2604 + C2604 + C2192 * C432) *
                         C50720 * C50817 +
                     (C3157 + C3158 + C3159) * C50720 * C50708) *
                        C50657 -
                    ((C2440 + C2439 + C2438) * C50720 * C50708 +
                     (C2199 * C128 + C2211 + C2211 + C2192 * C142 +
                      C2197 * C127 + C2212 + C2212 + C2191 * C141 +
                      C2195 * C126 + C2213 + C2213 + C2190 * C140) *
                         C50720 * C50817) *
                        C1577) *
                       C50577 * C929 +
                   (((C2195 * C127 + C2214 + C2214 + C2190 * C141 +
                      C2197 * C128 + C2215 + C2215 + C2191 * C142 +
                      C2199 * C129 + C2216 + C2216 + C2192 * C143) *
                         C50720 * C50817 +
                     (C2775 + C2776 + C2777) * C50720 * C50708) *
                        C1577 -
                    ((C2199 * C809 + C2924 + C2924 + C2192 * C819 +
                      C2197 * C808 + C2925 + C2925 + C2191 * C818 +
                      C2195 * C807 + C2926 + C2926 + C2190 * C817) *
                         C50720 * C50708 +
                     (C2199 * C420 + C2927 + C2927 + C2192 * C440 +
                      C2197 * C412 + C2928 + C2928 + C2191 * C432 +
                      C2195 * C413 + C2929 + C2929 + C2190 * C433) *
                         C50720 * C50817) *
                        C50657) *
                       C50577 * C930)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 +
                      C2197 * C126 + C2203 + C2203 + C2191 * C140 +
                      C2199 * C127 + C2204 + C2204 + C2192 * C141) *
                         C50720 * C50817 +
                     (C2432 + C2433 + C2434) * C50720 * C50708) *
                        C1577 -
                    ((C3154 + C3155 + C3156) * C50720 * C50708 +
                     (C2199 * C413 + C2593 + C2593 + C2192 * C433 +
                      C2197 * C414 + C2594 + C2594 + C2191 * C434 +
                      C2195 * C415 + C2595 + C2595 + C2190 * C435) *
                         C50720 * C50817) *
                        C50657) *
                       C260 +
                   (((C3156 + C3155 + C3154) * C50720 * C50817 +
                     (C4114 + C4115 + C4116) * C50720 * C50708) *
                        C50657 -
                    ((C2435 + C2436 + C2437) * C50720 * C50708 +
                     (C2434 + C2433 + C2432) * C50720 * C50817) *
                        C1577) *
                       C261 +
                   (((C2437 + C2436 + C2435) * C50720 * C50817 +
                     (C3428 + C3429 + C3430) * C50720 * C50708) *
                        C1577 -
                    ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 +
                      C2197 * C4090 + C4106 + C4106 + C2191 * C4096 +
                      C2195 * C4091 + C4107 + C4107 + C2190 * C4097) *
                         C50720 * C50708 +
                     (C4116 + C4115 + C4114) * C50720 * C50817) *
                        C50657) *
                       C262) *
                  C50558) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C1577 -
                    (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                     (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                         C50720 * C10724) *
                        C50657) *
                       C50577 * C928 +
                   (((C10728 * C414 + C11003 + C11003 + C50527 * C434) *
                         C50720 * C10724 +
                     C11395 * C10725 + C11396 * C10726 + C11397 * C10727) *
                        C50657 -
                    (C10895 * C10727 + C10894 * C10726 + C10893 * C10725 +
                     (C10728 * C126 + C10738 + C10738 + C50527 * C140) *
                         C50720 * C10724) *
                        C1577) *
                       C50577 * C929 +
                   (((C10728 * C127 + C10739 + C10739 + C50527 * C141) *
                         C50720 * C10724 +
                     C11125 * C10725 + C11126 * C10726 + C11127 * C10727) *
                        C1577 -
                    ((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) *
                         C50720 * C10727 +
                     (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) *
                         C50720 * C10726 +
                     (C10728 * C807 + C11228 + C11228 + C50527 * C817) *
                         C50720 * C10725 +
                     (C10728 * C413 + C11229 + C11229 + C50527 * C433) *
                         C50720 * C10724) *
                        C50657) *
                       C50577 * C930)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) *
                         C50720 * C10724 +
                     C10889 * C10725 + C10890 * C10726 + C10891 * C10727) *
                        C1577 -
                    (C11392 * C10727 + C11393 * C10726 + C11394 * C10725 +
                     (C10728 * C415 + C10998 + C10998 + C50527 * C435) *
                         C50720 * C10724) *
                        C50657) *
                       C260 +
                   ((C11394 * C10724 + C11393 * C10725 + C11392 * C10726 +
                     C12027 * C10727) *
                        C50657 -
                    (C10892 * C10727 + C10891 * C10726 + C10890 * C10725 +
                     C10889 * C10724) *
                        C1577) *
                       C261 +
                   ((C10890 * C10724 + C10891 * C10725 + C10892 * C10726 +
                     C11571 * C10727) *
                        C1577 -
                    ((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) *
                         C50720 * C10727 +
                     C12027 * C10726 + C11392 * C10725 + C11393 * C10724) *
                        C50657) *
                       C262) *
                  C50558) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C50806 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50629) *
              C50848 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50629 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C50806) *
              C50849 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C2195 * C413 + C2929 + C2929 + C2190 * C433 + C2197 * C412 +
             C2928 + C2928 + C2191 * C432 + C2199 * C420 + C2927 + C2927 +
             C2192 * C440) *
                C50732) *
               C50694 * C50593 * C50806 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50732 +
            (C2777 + C2776 + C2775) * C50818) *
               C50694 * C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C50806 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50629) *
              C50848 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50629 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C50806) *
              C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50593 * C50806 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C50818) *
                C7850 +
            (C13222 + C13212) * C7849 + (C13221 + C13209) * C7848) *
               C50593 * C50629) *
              C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50818 +
             (C5454 + C5455 + C5456) * C50732) *
                C50694 * C50807 -
            ((C5457 + C5458 + C5459) * C50732 +
             (C5456 + C5455 + C5454) * C50818) *
                C50694 * C50657) *
               C50806 +
           (((C3156 + C3155 + C3154) * C50818 +
             (C3601 + C3602 + C3603) * C50732) *
                C50694 * C50657 -
            ((C3154 + C3155 + C3156) * C50732 +
             (C2434 + C2433 + C2432) * C50818) *
                C50694 * C50807) *
               C50629) *
              C263 +
          ((((C5460 + C5461 + C5462) * C50818 +
             (C5463 + C5464 + C5465) * C50732) *
                C50694 * C50657 -
            ((C5462 + C5461 + C5460) * C50732 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50818) *
                C50694 * C50807) *
               C50806 +
           (((C2438 + C2439 + C2440) * C50818 +
             (C3157 + C3158 + C3159) * C50732) *
                C50694 * C50807 -
            ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
              C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
              C2190 * C1126) *
                 C50732 +
             (C3159 + C3158 + C3157) * C50818) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
              C13057 * C50732) *
                 C7848 +
             (C12870 + C12871) * C7849 + C12882 * C7850) *
                C50807 -
            ((C13571 + C13572) * C7850 + (C13573 + C13574) * C7849 +
             (C13058 * C50732 + C13057 * C50818) * C7848) *
                C50657) *
               C50806 +
           (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
             (C11386 * C50818 + C11688 * C50732) * C7850) *
                C50657 -
            ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
             (C12871 + C12870) * C7848) *
                C50807) *
               C50629) *
              C263 +
          ((((C13059 * C50818 + C13060 * C50732) * C7848 +
             (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
                C50657 -
            (C12883 * C7850 + (C12877 + C12876) * C7849 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                 C7848) *
                C50807) *
               C50806 +
           (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
             (C12880 + C12881) * C7850) *
                C50807 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C50818) *
                 C7850 +
             (C13578 + C13577) * C7849 + (C13576 + C13575) * C7848) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
             C2192 * C433) *
                C50732) *
               C50694 * C50593 * C260 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C261 +
           ((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50593 * C262) *
              C263 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C261 -
           ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
             C2190 * C434) *
                C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C260 -
           ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
             C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
             C2190 * C1473) *
                C50732 +
            (C2443 + C2442 + C2441) * C50818) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 + C2594 +
            C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
            C2192 * C433) *
               C50732) *
              C50694 * C50593 * C50577 * C113 -
          ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 + C2603 +
            C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
            C2190 * C434) *
               C50732 +
           (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 + C2212 +
            C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
            C2190 * C140) *
               C50818) *
              C50694 * C50593 * C50577 * C114 +
          ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 + C2215 +
            C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
            C2192 * C143) *
               C50818 +
           (C2195 * C413 + C2929 + C2929 + C2190 * C433 + C2197 * C412 + C2928 +
            C2928 + C2191 * C432 + C2199 * C420 + C2927 + C2927 +
            C2192 * C440) *
               C50732) *
              C50694 * C50593 * C50577 * C115 -
          ((C2199 * C668 + C5108 + C5108 + C2192 * C670 + C2197 * C420 + C5109 +
            C5109 + C2191 * C440 + C2195 * C412 + C5110 + C5110 +
            C2190 * C432) *
               C50732 +
           (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 + C2224 +
            C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
            C2190 * C142) *
               C50818) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C409 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C410 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C2195 * C1750 + C4521 + C4521 + C2190 * C1758 + C2197 * C1749 +
             C4520 + C4520 + C2191 * C1757 + C2199 * C1748 + C4519 + C4519 +
             C2192 * C1756) *
                C50732) *
               C50694 * C411) *
              C50577 * C263 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C410 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C409 -
           ((C2199 * C1747 + C5427 + C5427 + C2192 * C1755 + C2197 * C1748 +
             C5428 + C5428 + C2191 * C1756 + C2195 * C1749 + C5429 + C5429 +
             C2190 * C1757) *
                C50732 +
            (C5465 + C5464 + C5463) * C50818) *
               C50694 * C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
               C7848 +
           (C10881 * C50818 + C11388 * C50732) * C7849 +
           (C10882 * C50818 + C11387 * C50732) * C7850) *
              C50593 * C50577 * C113 -
          ((C11390 * C50732 + C10886 * C50818) * C7850 +
           (C11389 * C50732 + C10885 * C50818) * C7849 +
           ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
               C7848) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50732) *
               C7848 +
           (C11122 * C50818 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50732) *
               C7849 +
           (C11123 * C50818 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50732) *
               C7850) *
              C50593 * C50577 * C115 -
          (((C10728 * C1463 + C12721 + C12721 + C50527 * C1471) * C50732 +
            (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50818) *
               C7850 +
           ((C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50732 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50818) *
               C7849 +
           ((C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50732 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50818) *
               C7848) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C260 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C261 +
           (C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C10884 * C50818 + C12026 * C50732) * C7850) *
               C50593 * C262) *
              C263 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C261 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C260 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C50818) *
                C7850 +
            (C12881 + C12880) * C7849 + C12883 * C7848) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C409 -
           ((C11687 * C50732 + C11387 * C50818) * C7850 +
            (C11686 * C50732 + C11388 * C50818) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C410 +
           ((C13058 * C50818 +
             (C10728 * C1750 + C12296 + C12296 + C50527 * C1758) * C50732) *
                C7848 +
            (C11686 * C50818 +
             (C10728 * C4508 + C12295 + C12295 + C50527 * C4514) * C50732) *
                C7849 +
            (C11687 * C50818 +
             (C10728 * C10160 + C12294 + C12294 + C50527 * C10164) * C50732) *
                C7850) *
               C411) *
              C50577 * C263 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C11389 * C50818 + C13061 * C50732) * C7849 +
            (C11390 * C50818 + C13062 * C50732) * C7850) *
               C410 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C409 -
           (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C50732 +
             C13062 * C50818) *
                C7850 +
            ((C10728 * C4507 + C13043 + C13043 + C50527 * C4513) * C50732 +
             C13061 * C50818) *
                C7849 +
            ((C10728 * C1749 + C13044 + C13044 + C50527 * C1757) * C50732 +
             C13060 * C50818) *
                C7848) *
               C411) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50807 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50577 * C50848 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50657 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50807) *
              C50577 * C50849 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C50807 -
           ((C2199 * C421 + C5764 + C5764 + C2192 * C441 + C2197 * C419 +
             C5765 + C5765 + C2191 * C439 + C2195 * C418 + C5766 + C5766 +
             C2190 * C438) *
                C50732 +
            (C5775 + C5774 + C5773) * C50818) *
               C50694 * C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50807 -
           ((C11687 * C50732 + C11387 * C50818) * C7850 +
            (C11686 * C50732 + C11388 * C50818) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50577 * C50848 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C11389 * C50818 + C13061 * C50732) * C7849 +
            (C11390 * C50818 + C13062 * C50732) * C7850) *
               C50657 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50807) *
              C50577 * C50849 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50807 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C50818) *
                C7850 +
            ((C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C50732 +
             C13219 * C50818) *
                C7849 +
            ((C10728 * C418 + C13373 + C13373 + C50527 * C438) * C50732 +
             C13376 * C50818) *
                C7848) *
               C50657) *
              C50577 * C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 + C2594 +
            C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
            C2192 * C433) *
               C50732) *
              C50694 * C50593 * C50577 * C113 -
          ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 + C2603 +
            C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
            C2190 * C434) *
               C50732 +
           (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 + C2212 +
            C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
            C2190 * C140) *
               C50818) *
              C50694 * C50593 * C50577 * C114 +
          ((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 + C2215 +
            C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
            C2192 * C143) *
               C50818 +
           (C2195 * C413 + C2929 + C2929 + C2190 * C433 + C2197 * C412 + C2928 +
            C2928 + C2191 * C432 + C2199 * C420 + C2927 + C2927 +
            C2192 * C440) *
               C50732) *
              C50694 * C50593 * C50577 * C115 -
          ((C2199 * C668 + C5108 + C5108 + C2192 * C670 + C2197 * C420 + C5109 +
            C5109 + C2191 * C440 + C2195 * C412 + C5110 + C5110 +
            C2190 * C432) *
               C50732 +
           (C2199 * C130 + C2223 + C2223 + C2192 * C144 + C2197 * C129 + C2224 +
            C2224 + C2191 * C143 + C2195 * C128 + C2225 + C2225 +
            C2190 * C142) *
               C50818) *
              C50694 * C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C2195 * C415 + C2595 + C2595 + C2190 * C435 + C2197 * C414 +
             C2594 + C2594 + C2191 * C434 + C2199 * C413 + C2593 + C2593 +
             C2192 * C433) *
                C50732) *
               C50694 * C50593 * C260 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C261 +
           ((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50593 * C262) *
              C263 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C261 -
           ((C2199 * C412 + C2604 + C2604 + C2192 * C432 + C2197 * C413 +
             C2603 + C2603 + C2191 * C433 + C2195 * C414 + C2602 + C2602 +
             C2190 * C434) *
                C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C260 -
           ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
             C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
             C2190 * C1473) *
                C50732 +
            (C2443 + C2442 + C2441) * C50818) *
               C50694 * C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
               C7848 +
           (C10881 * C50818 + C11388 * C50732) * C7849 +
           (C10882 * C50818 + C11387 * C50732) * C7850) *
              C50593 * C50577 * C113 -
          ((C11390 * C50732 + C10886 * C50818) * C7850 +
           (C11389 * C50732 + C10885 * C50818) * C7849 +
           ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
            (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
               C7848) *
              C50593 * C50577 * C114 +
          (((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
            (C10728 * C413 + C11229 + C11229 + C50527 * C433) * C50732) *
               C7848 +
           (C11122 * C50818 +
            (C10728 * C807 + C11228 + C11228 + C50527 * C817) * C50732) *
               C7849 +
           (C11123 * C50818 +
            (C10728 * C1464 + C11227 + C11227 + C50527 * C1472) * C50732) *
               C7850) *
              C50593 * C50577 * C115 -
          (((C10728 * C1463 + C12721 + C12721 + C50527 * C1471) * C50732 +
            (C10728 * C272 + C10744 + C10744 + C50527 * C292) * C50818) *
               C7850 +
           ((C10728 * C808 + C12722 + C12722 + C50527 * C818) * C50732 +
            (C10728 * C265 + C10745 + C10745 + C50527 * C285) * C50818) *
               C7849 +
           ((C10728 * C412 + C12723 + C12723 + C50527 * C432) * C50732 +
            (C10728 * C128 + C10746 + C10746 + C50527 * C142) * C50818) *
               C7848) *
              C50593 * C50577 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             (C10728 * C415 + C10998 + C10998 + C50527 * C435) * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C260 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C261 +
           (C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C10884 * C50818 + C12026 * C50732) * C7850) *
               C50593 * C262) *
              C263 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C261 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            ((C10728 * C414 + C11003 + C11003 + C50527 * C434) * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C260 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C50818) *
                C7850 +
            (C12881 + C12880) * C7849 + C12883 * C7848) *
               C50593 * C262) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C50850 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50851 +
           ((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50593 * C1232) *
              C50798 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50851 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C50850 -
           ((C2199 * C1463 + C3139 + C3139 + C2192 * C1471 + C2197 * C1464 +
             C3140 + C3140 + C2191 * C1472 + C2195 * C1465 + C3141 + C3141 +
             C2190 * C1473) *
                C50732 +
            (C2443 + C2442 + C2441) * C50818) *
               C50694 * C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C50850 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50851 +
           (C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C50593 * C1232) *
              C50798 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50851 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C50850 -
           (((C10728 * C9749 + C11373 + C11373 + C50527 * C9753) * C50732 +
             C10888 * C50818) *
                C7850 +
            (C12881 + C12880) * C7849 + C12883 * C7848) *
               C50593 * C1232) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50807 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50850 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50657 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50807) *
              C50851 +
          (((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C50807 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50732 +
            (C4116 + C4115 + C4114) * C50818) *
               C50694 * C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50807 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50850 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50657 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50807) *
              C50851 +
          ((C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C50807 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C50818) *
                C7850 +
            (C14474 + C14473) * C7849 + C14472 * C7848) *
               C50657) *
              C1232) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C5454 + C5455 + C5456) * C50732) *
              C50694 * C50593 * C997 -
          ((C3154 + C3155 + C3156) * C50732 +
           (C2434 + C2433 + C2432) * C50818) *
              C50694 * C50593 * C998 +
          ((C2437 + C2436 + C2435) * C50818 +
           (C4114 + C4115 + C4116) * C50732) *
              C50694 * C50593 * C999 -
          ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
            C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
            C2190 * C4097) *
               C50732 +
           (C3430 + C3429 + C3428) * C50818) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C926 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50629) *
              C928 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50629 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C926) *
              C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C50593 * C926 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50732 +
            (C2777 + C2776 + C2775) * C50818) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C409 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C410 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C2195 * C1750 + C4521 + C4521 + C2190 * C1758 + C2197 * C1749 +
             C4520 + C4520 + C2191 * C1757 + C2199 * C1748 + C4519 + C4519 +
             C2192 * C1756) *
                C50732) *
               C50694 * C411) *
              C926 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C410 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C409 -
           ((C2199 * C4506 + C4516 + C4516 + C2192 * C4512 + C2197 * C4507 +
             C4517 + C4517 + C2191 * C4513 + C2195 * C4508 + C4518 + C4518 +
             C2190 * C4514) *
                C50732 +
            (C3603 + C3602 + C3601) * C50818) *
               C50694 * C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C926 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50629) *
              C928 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50629 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50593 * C926 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C50818) *
                C7850 +
            (C13222 + C13212) * C7849 + (C13221 + C13209) * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            C13057 * C50732) *
               C7848 +
           (C12870 + C12871) * C7849 + C12882 * C7850) *
              C50593 * C997 -
          (C13823 * C7850 + (C12873 + C12872) * C7849 +
           (C12871 + C12870) * C7848) *
              C50593 * C998 +
          (C12882 * C7848 + (C12875 + C12874) * C7849 +
           (C13824 + C13825) * C7850) *
              C50593 * C999 -
          (((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50732 +
            C11570 * C50818) *
               C7850 +
           (C13825 + C13824) * C7849 + C13823 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C409 -
           ((C13571 + C13572) * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C410 +
           ((C13058 * C50818 +
             (C10728 * C1750 + C12296 + C12296 + C50527 * C1758) * C50732) *
                C7848 +
            (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
               C411) *
              C926 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C11386 * C50818 + C11688 * C50732) * C7850) *
               C410 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C409 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50732 +
             C11688 * C50818) *
                C7850 +
            (C13985 + C13975) * C7849 + (C13984 + C13972) * C7848) *
               C411) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50818 +
             (C5454 + C5455 + C5456) * C50732) *
                C50694 * C50807 -
            ((C5457 + C5458 + C5459) * C50732 +
             (C5456 + C5455 + C5454) * C50818) *
                C50694 * C50657) *
               C926 +
           (((C3156 + C3155 + C3154) * C50818 +
             (C3601 + C3602 + C3603) * C50732) *
                C50694 * C50657 -
            ((C3154 + C3155 + C3156) * C50732 +
             (C2434 + C2433 + C2432) * C50818) *
                C50694 * C50807) *
               C50629) *
              C50798 +
          ((((C5460 + C5461 + C5462) * C50818 +
             (C5463 + C5464 + C5465) * C50732) *
                C50694 * C50657 -
            ((C5462 + C5461 + C5460) * C50732 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50818) *
                C50694 * C50807) *
               C926 +
           (((C2438 + C2439 + C2440) * C50818 +
             (C3157 + C3158 + C3159) * C50732) *
                C50694 * C50807 -
            ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
              C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
              C2190 * C1126) *
                 C50732 +
             (C3159 + C3158 + C3157) * C50818) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
              C13057 * C50732) *
                 C7848 +
             (C12870 + C12871) * C7849 + C12882 * C7850) *
                C50807 -
            ((C13571 + C13572) * C7850 + (C13573 + C13574) * C7849 +
             (C13058 * C50732 + C13057 * C50818) * C7848) *
                C50657) *
               C926 +
           (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
             (C11386 * C50818 + C11688 * C50732) * C7850) *
                C50657 -
            (C13823 * C7850 + (C12873 + C12872) * C7849 +
             (C12871 + C12870) * C7848) *
                C50807) *
               C50629) *
              C50798 +
          ((((C13059 * C50818 + C13060 * C50732) * C7848 +
             (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
                C50657 -
            (C12883 * C7850 + (C12877 + C12876) * C7849 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                 C7848) *
                C50807) *
               C926 +
           (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
             (C12880 + C12881) * C7850) *
                C50807 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C50818) *
                 C7850 +
             (C13578 + C13577) * C7849 + (C13576 + C13575) * C7848) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50593 * C926 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50593 * C50629) *
              C928 +
          (((C2438 + C2439 + C2440) * C50818 +
            (C3157 + C3158 + C3159) * C50732) *
               C50694 * C50593 * C50629 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50593 * C926) *
              C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C50593 * C926 -
           ((C2199 * C809 + C2924 + C2924 + C2192 * C819 + C2197 * C808 +
             C2925 + C2925 + C2191 * C818 + C2195 * C807 + C2926 + C2926 +
             C2190 * C817) *
                C50732 +
            (C2777 + C2776 + C2775) * C50818) *
               C50694 * C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C5454 + C5455 + C5456) * C50732) *
              C50694 * C50593 * C997 -
          ((C3154 + C3155 + C3156) * C50732 +
           (C2434 + C2433 + C2432) * C50818) *
              C50694 * C50593 * C998 +
          ((C2437 + C2436 + C2435) * C50818 +
           (C4114 + C4115 + C4116) * C50732) *
              C50694 * C50593 * C999 -
          ((C2199 * C4089 + C4105 + C4105 + C2192 * C4095 + C2197 * C4090 +
            C4106 + C4106 + C2191 * C4096 + C2195 * C4091 + C4107 + C4107 +
            C2190 * C4097) *
               C50732 +
           (C3430 + C3429 + C3428) * C50818) *
              C50694 * C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50593 * C926 -
           ((C12874 + C12875) * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50593 * C50629) *
              C928 +
          (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
            (C12880 + C12881) * C7850) *
               C50593 * C50629 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50593 * C926) *
              C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C50593 * C926 -
           (((C10728 * C4089 + C11226 + C11226 + C50527 * C4095) * C50732 +
             C11124 * C50818) *
                C7850 +
            (C13222 + C13212) * C7849 + (C13221 + C13209) * C7848) *
               C50593 * C50629) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            C13057 * C50732) *
               C7848 +
           (C12870 + C12871) * C7849 + C12882 * C7850) *
              C50593 * C997 -
          (C13823 * C7850 + (C12873 + C12872) * C7849 +
           (C12871 + C12870) * C7848) *
              C50593 * C998 +
          (C12882 * C7848 + (C12875 + C12874) * C7849 +
           (C13824 + C13825) * C7850) *
              C50593 * C999 -
          (((C10728 * C12017 + C12023 + C12023 + C50527 * C12019) * C50732 +
            C11570 * C50818) *
               C7850 +
           (C13825 + C13824) * C7849 + C13823 * C7848) *
              C50593 * C1000) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
              C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
              C2192 * C141) *
                 C50818 +
             (C5454 + C5455 + C5456) * C50732) *
                C50694 * C1577 -
            ((C5457 + C5458 + C5459) * C50732 +
             (C5456 + C5455 + C5454) * C50818) *
                C50694 * C50657) *
               C50806 +
           (((C3156 + C3155 + C3154) * C50818 +
             (C3601 + C3602 + C3603) * C50732) *
                C50694 * C50657 -
            ((C3154 + C3155 + C3156) * C50732 +
             (C2434 + C2433 + C2432) * C50818) *
                C50694 * C1577) *
               C50629) *
              C50798 +
          ((((C5460 + C5461 + C5462) * C50818 +
             (C5463 + C5464 + C5465) * C50732) *
                C50694 * C50657 -
            ((C5462 + C5461 + C5460) * C50732 +
             (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
              C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
              C2190 * C140) *
                 C50818) *
                C50694 * C1577) *
               C50806 +
           (((C2438 + C2439 + C2440) * C50818 +
             (C3157 + C3158 + C3159) * C50732) *
                C50694 * C1577 -
            ((C2199 * C1116 + C2608 + C2608 + C2192 * C1124 + C2197 * C1117 +
              C2609 + C2609 + C2191 * C1125 + C2195 * C1118 + C2610 + C2610 +
              C2190 * C1126) *
                 C50732 +
             (C3159 + C3158 + C3157) * C50818) *
                C50694 * C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
              C13057 * C50732) *
                 C7848 +
             (C12870 + C12871) * C7849 + C12882 * C7850) *
                C1577 -
            (C14472 * C7850 + (C13573 + C13574) * C7849 +
             (C13058 * C50732 + C13057 * C50818) * C7848) *
                C50657) *
               C50806 +
           (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
             (C14473 + C14474) * C7850) *
                C50657 -
            (C13823 * C7850 + (C12873 + C12872) * C7849 +
             (C12871 + C12870) * C7848) *
                C1577) *
               C50629) *
              C50798 +
          ((((C13059 * C50818 + C13060 * C50732) * C7848 +
             (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
                C50657 -
            (C12883 * C7850 + (C12877 + C12876) * C7849 +
             (C13059 * C50732 +
              (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                 C7848) *
                C1577) *
               C50806 +
           (((C12876 + C12877) * C7848 + (C12878 + C12879) * C7849 +
             (C12880 + C12881) * C7850) *
                C1577 -
            (((C10728 * C9235 + C11007 + C11007 + C50527 * C9239) * C50732 +
              C11391 * C50818) *
                 C7850 +
             (C13578 + C13577) * C7849 + (C13576 + C13575) * C7848) *
                C50657) *
               C50629) *
              C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50852 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50853 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C7260 + C7261 + C7262) * C50732) *
               C50694 * C1993) *
              C50806 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50853 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C50852 -
           ((C2199 * C4506 + C4516 + C4516 + C2192 * C4512 + C2197 * C4507 +
             C4517 + C4517 + C2191 * C4513 + C2195 * C4508 + C4518 + C4518 +
             C2190 * C4514) *
                C50732 +
            (C3603 + C3602 + C3601) * C50818) *
               C50694 * C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50852 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50853 +
           ((C13058 * C50818 + C14878 * C50732) * C7848 +
            (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
               C1993) *
              C50806 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50853 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C50852 -
           (((C10728 * C12289 + C12293 + C12293 + C50527 * C12291) * C50732 +
             C11688 * C50818) *
                C7850 +
            (C13985 + C13975) * C7849 + (C13984 + C13972) * C7848) *
               C1993) *
              C50629) *
         C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C1577 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C260 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50657 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C1577) *
              C261 +
          (((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C1577 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50732 +
            (C4116 + C4115 + C4114) * C50818) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C1577 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50657 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C1577 -
           ((C2199 * C421 + C5764 + C5764 + C2192 * C441 + C2197 * C419 +
             C5765 + C5765 + C2191 * C439 + C2195 * C418 + C5766 + C5766 +
             C2190 * C438) *
                C50732 +
            (C5775 + C5774 + C5773) * C50818) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 + C2203 +
            C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
            C2192 * C141) *
               C50818 +
           (C5454 + C5455 + C5456) * C50732) *
              C50694 * C1743 -
          ((C5457 + C5458 + C5459) * C50732 +
           (C5456 + C5455 + C5454) * C50818) *
              C50694 * C1744 +
          ((C5459 + C5458 + C5457) * C50818 +
           (C7260 + C7261 + C7262) * C50732) *
              C50694 * C1745 -
          ((C2199 * C7235 + C7251 + C7251 + C2192 * C7241 + C2197 * C7236 +
            C7252 + C7252 + C2191 * C7242 + C2195 * C7237 + C7253 + C7253 +
            C2190 * C7243) *
               C50732 +
           (C7262 + C7261 + C7260) * C50818) *
              C50694 * C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
               C50657 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C1577 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C50818) *
                C7850 +
            ((C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C50732 +
             C13219 * C50818) *
                C7849 +
            ((C10728 * C418 + C13373 + C13373 + C50527 * C438) * C50732 +
             C13376 * C50818) *
                C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C260 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50657 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C1577) *
              C261 +
          ((C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C1577 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C50818) *
                C7850 +
            (C14474 + C14473) * C7849 + C14472 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
            C13057 * C50732) *
               C7848 +
           (C12870 + C12871) * C7849 + C12882 * C7850) *
              C1743 -
          (C14472 * C7850 + (C13573 + C13574) * C7849 +
           (C13058 * C50732 + C13057 * C50818) * C7848) *
              C1744 +
          ((C13058 * C50818 + C14878 * C50732) * C7848 +
           (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
              C1745 -
          (((C10728 * C14864 + C14873 + C14873 + C50527 * C14868) * C50732 +
            C13983 * C50818) *
               C7850 +
           ((C10728 * C14865 + C14874 + C14874 + C50527 * C14869) * C50732 +
            C13982 * C50818) *
               C7849 +
           ((C10728 * C7237 + C14875 + C14875 + C50527 * C7243) * C50732 +
            C14878 * C50818) *
               C7848) *
              C1746) *
         C50577 * C50558) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C50852 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50853 +
           ((C5459 + C5458 + C5457) * C50818 +
            (C7260 + C7261 + C7262) * C50732) *
               C50694 * C1993) *
              C50577 * C50798 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50853 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C50852 -
           ((C2199 * C1747 + C5427 + C5427 + C2192 * C1755 + C2197 * C1748 +
             C5428 + C5428 + C2191 * C1756 + C2195 * C1749 + C5429 + C5429 +
             C2190 * C1757) *
                C50732 +
            (C5465 + C5464 + C5463) * C50818) *
               C50694 * C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C50852 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50853 +
           ((C13058 * C50818 + C14878 * C50732) * C7848 +
            (C13972 + C13984) * C7849 + (C13975 + C13985) * C7850) *
               C1993) *
              C50577 * C50798 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
               C50853 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C50852 -
           (((C10728 * C10159 + C13042 + C13042 + C50527 * C10163) * C50732 +
             C13062 * C50818) *
                C7850 +
            ((C10728 * C4507 + C13043 + C13043 + C50527 * C4513) * C50732 +
             C13061 * C50818) *
                C7849 +
            ((C10728 * C1749 + C13044 + C13044 + C50527 * C1757) * C50732 +
             C13060 * C50818) *
                C7848) *
               C1993) *
              C50577 * C50564)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C1577 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C50577 * C928 +
          (((C5460 + C5461 + C5462) * C50818 +
            (C5463 + C5464 + C5465) * C50732) *
               C50694 * C50657 -
           ((C5462 + C5461 + C5460) * C50732 +
            (C2199 * C128 + C2211 + C2211 + C2192 * C142 + C2197 * C127 +
             C2212 + C2212 + C2191 * C141 + C2195 * C126 + C2213 + C2213 +
             C2190 * C140) *
                C50818) *
               C50694 * C1577) *
              C50577 * C929 +
          (((C2195 * C127 + C2214 + C2214 + C2190 * C141 + C2197 * C128 +
             C2215 + C2215 + C2191 * C142 + C2199 * C129 + C2216 + C2216 +
             C2192 * C143) *
                C50818 +
            (C5773 + C5774 + C5775) * C50732) *
               C50694 * C1577 -
           ((C2199 * C421 + C5764 + C5764 + C2192 * C441 + C2197 * C419 +
             C5765 + C5765 + C2191 * C439 + C2195 * C418 + C5766 + C5766 +
             C2190 * C438) *
                C50732 +
            (C5775 + C5774 + C5773) * C50818) *
               C50694 * C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2202 + C2202 + C2190 * C139 + C2197 * C126 +
             C2203 + C2203 + C2191 * C140 + C2199 * C127 + C2204 + C2204 +
             C2192 * C141) *
                C50818 +
            (C5454 + C5455 + C5456) * C50732) *
               C50694 * C1577 -
           ((C5457 + C5458 + C5459) * C50732 +
            (C5456 + C5455 + C5454) * C50818) *
               C50694 * C50657) *
              C260 +
          (((C3156 + C3155 + C3154) * C50818 +
            (C3601 + C3602 + C3603) * C50732) *
               C50694 * C50657 -
           ((C3154 + C3155 + C3156) * C50732 +
            (C2434 + C2433 + C2432) * C50818) *
               C50694 * C1577) *
              C261 +
          (((C2437 + C2436 + C2435) * C50818 +
            (C4114 + C4115 + C4116) * C50732) *
               C50694 * C1577 -
           ((C2199 * C3576 + C3592 + C3592 + C2192 * C3582 + C2197 * C3577 +
             C3593 + C3593 + C2191 * C3583 + C2195 * C3578 + C3594 + C3594 +
             C2190 * C3584) *
                C50732 +
            (C4116 + C4115 + C4114) * C50818) *
               C50694 * C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C50577 * C928 +
          (((C13059 * C50818 + C13060 * C50732) * C7848 +
            (C13575 + C13576) * C7849 + (C13577 + C13578) * C7850) *
               C50657 -
           (C12883 * C7850 + (C12877 + C12876) * C7849 +
            (C13059 * C50732 +
             (C10728 * C126 + C10738 + C10738 + C50527 * C140) * C50818) *
                C7848) *
               C1577) *
              C50577 * C929 +
          ((((C10728 * C127 + C10739 + C10739 + C50527 * C141) * C50818 +
             C13376 * C50732) *
                C7848 +
            (C13209 + C13221) * C7849 + (C13212 + C13222) * C7850) *
               C1577 -
           (((C10728 * C3576 + C13371 + C13371 + C50527 * C3582) * C50732 +
             C13220 * C50818) *
                C7850 +
            ((C10728 * C1117 + C13372 + C13372 + C50527 * C1125) * C50732 +
             C13219 * C50818) *
                C7849 +
            ((C10728 * C418 + C13373 + C13373 + C50527 * C438) * C50732 +
             C13376 * C50818) *
                C7848) *
               C50657) *
              C50577 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C125 + C10731 + C10731 + C50527 * C139) * C50818 +
             C13057 * C50732) *
                C7848 +
            (C12870 + C12871) * C7849 + C12882 * C7850) *
               C1577 -
           (C14472 * C7850 + (C13573 + C13574) * C7849 +
            (C13058 * C50732 + C13057 * C50818) * C7848) *
               C50657) *
              C260 +
          (((C13574 + C13573) * C7848 + (C13572 + C13571) * C7849 +
            (C14473 + C14474) * C7850) *
               C50657 -
           (C13823 * C7850 + (C12873 + C12872) * C7849 +
            (C12871 + C12870) * C7848) *
               C1577) *
              C261 +
          ((C12882 * C7848 + (C12875 + C12874) * C7849 +
            (C13824 + C13825) * C7850) *
               C1577 -
           (((C10728 * C11669 + C11679 + C11679 + C50527 * C11671) * C50732 +
             C12026 * C50818) *
                C7850 +
            (C14474 + C14473) * C7849 + C14472 * C7848) *
               C50657) *
              C262) *
         C50558) /
            (p * q * std::sqrt(p + q));
}
