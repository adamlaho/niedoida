/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_xy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_12(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49726 = 0 * ae;
    const double C49725 = ae * be;
    const double C49724 = 0 * be;
    const double C49723 = ae + be;
    const double C49722 = 0 * be;
    const double C49721 = xA - xB;
    const double C49761 = yA - yB;
    const double C49776 = 0 * be;
    const double C49798 = 0 * ae;
    const double C49794 = 0 * be;
    const double C49848 = xP - xQ;
    const double C49847 = yP - yQ;
    const double C49846 = p + q;
    const double C49845 = p * q;
    const double C49855 = std::pow(ae, 2);
    const double C49853 = bs[3];
    const double C49863 = bs[4];
    const double C49872 = bs[5];
    const double C49886 = bs[6];
    const double C49908 = bs[7];
    const double C50034 = zP - zQ;
    const double C50158 = bs[2];
    const double C122 = bs[0];
    const double C50541 = ce + de;
    const double C50540 = ce * de;
    const double C50539 = xC - xD;
    const double C50563 = yC - yD;
    const double C50579 = zC - zD;
    const double C50671 = zA - zB;
    const double C49731 = C49726 / C49723;
    const double C49728 = 2 * C49723;
    const double C49727 = std::pow(C49723, 2);
    const double C49730 = C49725 * C49721;
    const double C49729 = C49721 * C49724;
    const double C50516 = C49721 * be;
    const double C50515 = C49721 * ae;
    const double C50514 = std::pow(C49721, 2);
    const double C49777 = C49725 * C49761;
    const double C50676 = std::pow(C49761, 2);
    const double C50692 = C49761 * be;
    const double C50691 = C49761 * ae;
    const double C49795 = C49761 * C49776;
    const double C49803 = C49798 / C49723;
    const double C49873 = std::pow(C49848, 2);
    const double C49931 = C49848 * ae;
    const double C49856 = C49847 * ae;
    const double C49854 = C49848 * C49847;
    const double C50042 = std::pow(C49847, 2);
    const double C49849 = 2 * C49845;
    const double C50070 = std::pow(C50034, 2);
    const double C50543 = 2 * C50541;
    const double C50553 = std::pow(C50541, 2);
    const double C50545 = C50539 * de;
    const double C50544 = C50539 * ce;
    const double C50542 = std::pow(C50539, 2);
    const double C50564 = std::pow(C50563, 2);
    const double C50616 = C50563 * de;
    const double C50615 = C50563 * ce;
    const double C50580 = std::pow(C50579, 2);
    const double C50644 = C50579 * de;
    const double C50643 = C50579 * ce;
    const double C50706 = std::pow(C50671, 2);
    const double C50718 = C50671 * be;
    const double C50717 = C50671 * ae;
    const double C50524 = std::pow(C49728, -1);
    const double C50827 = std::pow(C49728, -2);
    const double C49732 = 2 * C49727;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C49727;
    const double C50805 = 4 * C49727;
    const double C49733 = C49729 / C49723;
    const double C50517 = C50514 * C49725;
    const double C50677 = C50676 * C49725;
    const double C49800 = C49795 / C49723;
    const double C49934 = C49863 * C49931;
    const double C49940 = C49853 * C49931;
    const double C49947 = C49872 * C49931;
    const double C49959 = C49886 * C49931;
    const double C49980 = C49908 * C49931;
    const double C49859 = C49853 * C49856;
    const double C49865 = C49863 * C49856;
    const double C49875 = C49872 * C49856;
    const double C49890 = C49886 * C49856;
    const double C49914 = C49908 * C49856;
    const double C49858 = C49854 * C49855;
    const double C49850 = C49849 / C49846;
    const double C129 = (-(bs[1] * C49856 * C49849) / C49846) / C49723;
    const double C130 = (-(bs[1] * C49931 * C49849) / C49846) / C49723;
    const double C123 = -(C49848 * bs[1] * C49849) / C49846;
    const double C286 = -(C49847 * bs[1] * C49849) / C49846;
    const double C463 = -(C50034 * bs[1] * C49849) / C49846;
    const double C50554 = std::pow(C50543, -1);
    const double C50814 = std::pow(C50543, -2);
    const double C50558 = 2 * C50553;
    const double C50812 = 4 * C50553;
    const double C50546 = C50542 * C50540;
    const double C50565 = C50564 * C50540;
    const double C50581 = C50580 * C50540;
    const double C50707 = C50706 * C49725;
    const double C49738 = C49724 / C49732;
    const double C49736 = C49722 / C49732;
    const double C49797 = C49776 / C49732;
    const double C49801 = C49794 / C49732;
    const double C49735 = 0 - C49733;
    const double C50518 = C50517 / C49723;
    const double C50678 = C50677 / C49723;
    const double C49804 = 0 - C49800;
    const double C49864 = C49863 * C49858;
    const double C49874 = C49872 * C49858;
    const double C49888 = C49886 * C49858;
    const double C49912 = C49908 * C49858;
    const double C49852 = -C49850;
    const double C49862 = std::pow(C49850, 4);
    const double C49885 = std::pow(C49850, 6);
    const double C144 = (ae * std::pow(C49850, 2) * bs[2] * C49847 * ae +
                         C49848 * std::pow(-C49850, 3) * bs[3] * C49848 *
                             C49847 * std::pow(ae, 2)) /
                        C49727;
    const double C50157 = std::pow(C49850, 2);
    const double C131 =
        (C49848 * std::pow(C49850, 2) * bs[2] * C49856) / C49723;
    const double C132 =
        (C49848 * std::pow(C49850, 2) * bs[2] * C49931) / C49723 -
        (ae * bs[1] * C49849) / (C49846 * C49723);
    const double C50547 = C50546 / C50541;
    const double C50566 = C50565 / C50541;
    const double C50582 = C50581 / C50541;
    const double C50708 = C50707 / C49723;
    const double C49740 = C49735 * ae;
    const double C50519 = -C50518;
    const double C50679 = -C50678;
    const double C49807 = C49804 * ae;
    const double C49857 = std::pow(C49852, 3);
    const double C49871 = std::pow(C49852, 5);
    const double C49907 = std::pow(C49852, 7);
    const double C49867 = C49862 * C49865;
    const double C49866 = C49862 * C49864;
    const double C49933 = C49863 * C49862;
    const double C49935 = C49862 * C49934;
    const double C49893 = C49885 * C49890;
    const double C49892 = C49885 * C49888;
    const double C49961 = C49885 * C49959;
    const double C49981 = C49886 * C49885;
    const double C50159 = C50158 * C50157;
    const double C299 = (C49847 * C50157 * C50158 * C49931) / C49723;
    const double C300 = (C49847 * C50157 * C50158 * C49856) / C49723 -
                        (ae * bs[1] * C49849) / (C49846 * C49723);
    const double C476 = (C50034 * C50157 * C50158 * C49931) / C49723;
    const double C477 = (C50034 * C50157 * C50158 * C49856) / C49723;
    const double C50548 = -C50547;
    const double C50567 = -C50566;
    const double C50583 = -C50582;
    const double C50709 = -C50708;
    const double C49743 = C49740 / C49723;
    const double C50520 = std::exp(C50519);
    const double C50680 = std::exp(C50679);
    const double C49809 = C49807 / C49723;
    const double C49860 = C49857 * C49859;
    const double C49932 = C49853 * C49857;
    const double C49941 = C49857 * C49940;
    const double C316 = (ae * std::pow(C49850, 2) * bs[2] * C49931 +
                         C49847 * C49857 * C49853 * C49858) /
                        C49727;
    const double C493 = ((zP - zQ) * C49857 * C49853 * C49858) / C49727;
    const double C49877 = C49871 * C49875;
    const double C49876 = C49871 * C49874;
    const double C49950 = C49871 * C49947;
    const double C49960 = C49872 * C49871;
    const double C49917 = C49907 * C49914;
    const double C49916 = C49907 * C49912;
    const double C49983 = C49907 * C49980;
    const double C49870 = ae * C49867;
    const double C49869 = C49848 * C49867;
    const double C50279 = C49847 * C49867;
    const double C494 =
        (C49857 * C49853 * C49858 + C49866 * std::pow(zP - zQ, 2)) / C49727;
    const double C49949 = C49848 * C49933;
    const double C49948 = C49933 * ae;
    const double C50164 = C49933 * C49873;
    const double C50281 = C49933 * C50042;
    const double C50325 = C49847 * C49933;
    const double C50498 = C49933 * C50070;
    const double C50504 = C50034 * C49933;
    const double C49943 = C49848 * C49935;
    const double C50055 = ae * C49935;
    const double C50054 = C49847 * C49935;
    const double C49895 = C49893 * C49873;
    const double C49906 = ae * C49893;
    const double C49905 = C49848 * C49893;
    const double C50351 = C49847 * C49893;
    const double C50409 = C49893 * C50070;
    const double C49894 = C49848 * C49892;
    const double C50090 = C49847 * C49892;
    const double C50139 = C49892 * C50070;
    const double C50145 = C50034 * C49892;
    const double C49965 = C49848 * C49961;
    const double C50091 = C49961 * C50042;
    const double C50111 = ae * C49961;
    const double C50110 = C49847 * C49961;
    const double C50402 = C49961 * C50070;
    const double C49986 = C49981 * C49873;
    const double C49985 = C49848 * C49981;
    const double C49984 = C49981 * ae;
    const double C50354 = C49981 * C50042;
    const double C124 = C50159 * C49873 - (bs[1] * C49849) / C49846;
    const double C285 = C49847 * C49848 * C50159;
    const double C287 = C50159 * C50042 - (bs[1] * C49849) / C49846;
    const double C462 = C50034 * C49848 * C50159;
    const double C464 = C50159 * C50070 - (bs[1] * C49849) / C49846;
    const double C889 = C50034 * C49847 * C50159;
    const double C50549 = std::exp(C50548);
    const double C50568 = std::exp(C50567);
    const double C50584 = std::exp(C50583);
    const double C50710 = std::exp(C50709);
    const double C49745 = C49743 - C49736;
    const double C49734 = C49730 * C50520;
    const double C50521 = C50520 * C50515;
    const double C50525 = C50524 * C50520;
    const double C50801 = C50520 / C49728;
    const double C50800 = C50520 * C50516;
    const double C2293 = C50827 * C50520;
    const double C154 = C50680 * C144;
    const double C152 = C50680 * C131;
    const double C5483 = C50680 * C477;
    const double C49778 = C49777 * C50680;
    const double C117 = -(2 * ae * be * (yA - yB) * C50680) / (ae + be);
    const double C2294 =
        ((C50680 - (C49761 * 2 * C49725 * C49761 * C50680) / C49723) * ae) /
            C49723 -
        (0 * be) / C49732;
    const double C2295 =
        (0 * ae) / C49723 - (C49725 * C49761 * C50680) / C49727;
    const double C50693 = C50680 * C50691;
    const double C50696 = C50524 * C50680;
    const double C50830 = C50680 * C50692;
    const double C50829 = C50680 / C49728;
    const double C7951 = C50827 * C50680;
    const double C49811 = C49809 - C49801;
    const double C145 = (C49857 * C49853 * C49858 + ae * C49848 * C49860 +
                         C49848 * (ae * C49860 + C49848 * std::pow(C49850, 4) *
                                                     bs[4] * C49858)) /
                        C49727;
    const double C146 =
        (2 * (ae * C49860 + C49848 * C49866) +
         ae * (C49860 + C49867 * std::pow(C49848, 2)) +
         C49848 * (C49866 + ae * C49848 * C49867 +
                   C49848 * (ae * C49867 +
                             C49848 * std::pow(C49852, 5) * bs[5] * C49858))) /
        C49727;
    const double C315 = (ae * (C49848 * C49857 * C49853 * C49931 +
                               bs[2] * std::pow(C49850, 2) * ae) +
                         C49847 * (ae * C49860 + C49848 * C49866)) /
                        C49727;
    const double C492 = ((zP - zQ) * (ae * C49860 + C49848 * C49866)) / C49727;
    const double C133 =
        (std::pow(C49850, 2) * bs[2] * C49856 + C49860 * C49873) / C49723;
    const double C135 =
        (2 * C49848 * C49860 + C49848 * (C49860 + C49867 * C49873)) / C49723;
    const double C298 =
        (C49847 * C49848 * C49860 + C49848 * C50159 * ae) / C49723;
    const double C301 =
        (C50157 * C50158 * C49856 + C49847 * (C49847 * C49860 + C50159 * ae) +
         C49847 * C50159 * ae) /
        C49723;
    const double C473 = (C50034 * (C49860 + C49867 * C49873)) / C49723;
    const double C475 = (C50034 * C49848 * C49860) / C49723;
    const double C478 = (C50157 * C50158 * C49856 + C49860 * C50070) / C49723;
    const double C894 = (C50034 * (C49847 * C49860 + C50159 * ae)) / C49723;
    const double C1857 =
        (2 * C50034 * C49860 + C50034 * (C49860 + C49867 * C50070)) / C49723;
    const double C49944 = C49932 * ae;
    const double C50163 = C49848 * C49932;
    const double C50280 = C49847 * C49932;
    const double C296 = (C49847 * (C49860 + C49867 * C49873) +
                         (C50159 + C49932 * C49873) * ae) /
                        C49723;
    const double C125 =
        2 * C49848 * C50159 + C49848 * (C50159 + C49932 * C49873);
    const double C284 = C49847 * (C50159 + C49932 * C49873);
    const double C461 = C50034 * (C50159 + C49932 * C49873);
    const double C1104 =
        2 * C49847 * C50159 + C49847 * (C50159 + C49932 * C50042);
    const double C1565 = C50034 * (C50159 + C49932 * C50042);
    const double C1849 =
        2 * C50034 * C50159 + C50034 * (C50159 + C49932 * C50070);
    const double C7343 =
        3 * (C50159 + C49932 * C50070) +
        C50034 * (2 * C50034 * C49932 + C50034 * (C49932 + C49933 * C50070));
    const double C317 = (C49857 * C49853 * C49858 + ae * C49847 * C49941 +
                         C49847 * (ae * C49941 + C49847 * C49866)) /
                        C49727;
    const double C904 = ((zP - zQ) * (ae * C49941 + C49847 * C49866)) / C49727;
    const double C134 =
        (C50157 * C50158 * C49931 + C49848 * (C49848 * C49941 + C50159 * ae) +
         C49848 * C50159 * ae) /
        C49723;
    const double C297 = (C49847 * (C49848 * C49941 + C50159 * ae)) / C49723;
    const double C302 = (C50157 * C50158 * C49931 + C49941 * C50042) / C49723;
    const double C474 = (C50034 * (C49848 * C49941 + C50159 * ae)) / C49723;
    const double C479 = (C50157 * C50158 * C49931 + C49941 * C50070) / C49723;
    const double C895 = (C50034 * C49847 * C49941) / C49723;
    const double C1111 =
        (2 * C49847 * C49941 + C49847 * (C49941 + C49935 * C50042)) / C49723;
    const double C1572 = (C50034 * (C49941 + C49935 * C50042)) / C49723;
    const double C1856 =
        (2 * C50034 * C49941 + C50034 * (C49941 + C49935 * C50070)) / C49723;
    const double C5485 = C50680 * C493;
    const double C49879 = C49877 * C49873;
    const double C49884 = ae * C49877;
    const double C49883 = C49848 * C49877;
    const double C50324 = C49847 * C49877;
    const double C50392 = C49877 * C50070;
    const double C50408 = C50034 * C49877;
    const double C7349 =
        (3 * (C49860 + C49867 * C50070) +
         C50034 * (2 * C50034 * C49867 + C50034 * (C49867 + C49877 * C50070))) /
        C49723;
    const double C49878 = C49848 * C49876;
    const double C50056 = C49847 * C49876;
    const double C1116 = (2 * (ae * C49941 + C49847 * C49866) +
                          ae * (C49941 + C49935 * std::pow(C49847, 2)) +
                          C49847 * (C49866 + ae * C49847 * C49935 +
                                    C49847 * (ae * C49935 + C49847 * C49876))) /
                         C49727;
    const double C1230 =
        (ae * C49941 + C49847 * C49866 +
         (ae * C49935 + C49847 * C49876) * std::pow(zP - zQ, 2)) /
        C49727;
    const double C1577 =
        ((zP - zQ) * (C49866 + ae * C49847 * C49935 +
                      C49847 * (ae * C49935 + C49847 * C49876))) /
        C49727;
    const double C1861 = (2 * C50034 * C49866 +
                          C50034 * (C49866 + C49876 * std::pow(C50034, 2))) /
                         C49727;
    const double C7352 =
        (3 * (C49866 + C49876 * C50070) +
         C50034 * (2 * C50034 * C49876 + C50034 * (C49876 + C49892 * C50070))) /
        C49727;
    const double C49952 = C49848 * C49950;
    const double C50057 = C49950 * C50042;
    const double C50089 = ae * C49950;
    const double C50088 = C49847 * C49950;
    const double C50389 = C49950 * C50070;
    const double C50401 = C50034 * C49950;
    const double C7348 =
        (3 * (C49941 + C49935 * C50070) +
         C50034 * (2 * C50034 * C49935 + C50034 * (C49935 + C49950 * C50070))) /
        C49723;
    const double C49964 = C49960 * C49873;
    const double C49963 = C49848 * C49960;
    const double C49962 = C49960 * ae;
    const double C50326 = C49960 * C50042;
    const double C50352 = C49847 * C49960;
    const double C50505 = C49960 * C50070;
    const double C49919 = C49917 * C49873;
    const double C49918 = C49848 * C49916;
    const double C50112 = C49847 * C49916;
    const double C50146 = C49916 * C50070;
    const double C49987 = C49848 * C49983;
    const double C50114 = C49983 * C50042;
    const double C480 = (C49848 * C49860 + C49869 * C50070) / C49723;
    const double C5495 = C50680 * C494;
    const double C49951 = C49949 * ae;
    const double C50169 = 2 * C49949;
    const double C50273 = C49847 * C49949;
    const double C50165 = C49932 + C50164;
    const double C50283 = C49932 + C50281;
    const double C50330 = 2 * C50325;
    const double C50328 = C50325 * ae;
    const double C50499 = C49932 + C50498;
    const double C50506 = 2 * C50504;
    const double C1225 = (C49847 * C49941 + C50054 * C50070) / C49723;
    const double C49897 = C49877 + C49895;
    const double C49913 = 2 * C49905;
    const double C49911 = ae * C49905;
    const double C50310 = C49847 * C49905;
    const double C50386 = C49905 * C50070;
    const double C50411 = C49877 + C50409;
    const double C50140 = C49876 + C50139;
    const double C50147 = 2 * C50145;
    const double C50095 = C49950 + C50091;
    const double C50118 = 2 * C50110;
    const double C50116 = ae * C50110;
    const double C50395 = C50110 * C50070;
    const double C50404 = C49950 + C50402;
    const double C49989 = C49960 + C49986;
    const double C49988 = C49985 * ae;
    const double C50312 = C49985 * C50042;
    const double C50358 = C49960 + C50354;
    const double C50550 = C50549 * C50544;
    const double C50555 = C50554 * C50549;
    const double C50809 = C50549 * C50545;
    const double C50806 = C50549 / C50543;
    const double C1029 = C50814 * C50549;
    const double C50617 = C50568 * C50615;
    const double C50620 = C50554 * C50568;
    const double C50818 = C50568 * C50616;
    const double C50813 = C50568 / C50543;
    const double C280 = C50814 * C50568;
    const double C50645 = C50584 * C50643;
    const double C50648 = C50554 * C50584;
    const double C50822 = C50584 * C50644;
    const double C50815 = C50584 / C50543;
    const double C459 = C50814 * C50584;
    const double C50719 = C50710 * C50717;
    const double C50722 = C50524 * C50710;
    const double C50835 = C50710 * C50718;
    const double C50834 = C50710 / C49728;
    const double C15335 = C50827 * C50710;
    const double C49739 = C49734 / C49727;
    const double C49737 = 2 * C49734;
    const double C50803 = C50521 / C49732;
    const double C50802 = C50521 * C50516;
    const double C50799 = C50521 / C49723;
    const double C50528 = C50525 * C50516;
    const double C109 = C50525 / C50805;
    const double C22718 = C50525 / C49728;
    const double C2291 = (C50520 * std::pow(C50516, 2)) / C49727 + C50801;
    const double C50839 = C50800 / C49723;
    const double C2292 = (-2 * C50524 * C50800) / C49723;
    const double C49779 = 2 * C49778;
    const double C49799 = C49778 / C49727;
    const double C155 = C117 * C124;
    const double C153 = C117 * C132;
    const double C151 = C117 * C123;
    const double C334 = C117 * C285;
    const double C511 = C117 * C462;
    const double C5496 = C117 * C464;
    const double C5484 = C117 * C476;
    const double C5482 = C117 * C463;
    const double C6022 = C117 * C889;
    const double C2308 = C2294 * C124;
    const double C2304 = C2294 * C132;
    const double C2300 = C2294 * C123;
    const double C2512 = C2294 * C285;
    const double C2706 = C2294 * C462;
    const double C18389 = C2294 * C464;
    const double C18385 = C2294 * C476;
    const double C18381 = C2294 * C463;
    const double C18925 = C2294 * C889;
    const double C2302 = C2295 * C285;
    const double C18383 = C2295 * C889;
    const double C50832 = C50693 / C49732;
    const double C50831 = C50693 * C50692;
    const double C50826 = C50693 / C49723;
    const double C50699 = C50696 * C50692;
    const double C10770 = C50696 / C50805;
    const double C25554 = C50696 / C49728;
    const double C50851 = C50830 / C49723;
    const double C7950 = (-2 * C50524 * C50830) / C49723;
    const double C7949 = (C50680 * std::pow(C50692, 2)) / C49727 + C50829;
    const double C158 = C50680 * C145;
    const double C162 = C50680 * C146;
    const double C333 = C50680 * C315;
    const double C2307 = C50696 * C315;
    const double C22732 = C50696 * C315;
    const double C510 = C50680 * C492;
    const double C156 = C50680 * C133;
    const double C160 = C50680 * C135;
    const double C335 = C50680 * C298;
    const double C2303 = C50696 * C298;
    const double C22728 = C50696 * C298;
    const double C508 = C50680 * C473;
    const double C512 = C50680 * C475;
    const double C5497 = C50680 * C478;
    const double C6023 = C50680 * C894;
    const double C18384 = C50696 * C894;
    const double C28806 = C50696 * C894;
    const double C7355 = C50680 * C1857;
    const double C49945 = C49943 + C49944;
    const double C50282 = C50279 + C49944;
    const double C1112 =
        (2 * (C49847 * C49860 + C50159 * ae) +
         C49847 * (C49860 + C49847 * (C49847 * C49867 + C49944) +
                   C49847 * C49932 * ae) +
         (C50159 + C49932 * C50042) * ae) /
        C49723;
    const double C1226 =
        (C49847 * C49860 + C50159 * ae + (C49847 * C49867 + C49944) * C50070) /
        C49723;
    const double C1573 =
        (C50034 * (C49860 + C49847 * (C49847 * C49867 + C49944) +
                   C49847 * C49932 * ae)) /
        C49723;
    const double C303 =
        (C49848 * C49860 + C49847 * (C49847 * C49869 + C50163 * ae) +
         C49847 * C50163 * ae) /
        C49723;
    const double C896 = (C50034 * (C49847 * C49869 + C50163 * ae)) / C49723;
    const double C288 = C49848 * C50159 + C50163 * C50042;
    const double C465 = C49848 * C50159 + C50163 * C50070;
    const double C890 = C50034 * C49847 * C50163;
    const double C1103 =
        2 * C49847 * C50163 + C49847 * (C50163 + C49949 * C50042);
    const double C1564 = C50034 * (C50163 + C49949 * C50042);
    const double C1848 =
        2 * C50034 * C50163 + C50034 * (C50163 + C49949 * C50070);
    const double C1218 = C49847 * C50159 + C50280 * C50070;
    const double C4581 =
        2 * C50034 * C50280 + C50034 * (C50280 + C50325 * C50070);
    const double C331 = C50680 * C296;
    const double C2311 = C50696 * C296;
    const double C22736 = C50696 * C296;
    const double C159 = C117 * C125;
    const double C2322 = C2294 * C125;
    const double C330 = C117 * C284;
    const double C2310 = C2295 * C284;
    const double C2504 = C2294 * C284;
    const double C507 = C117 * C461;
    const double C2698 = C2294 * C461;
    const double C6940 = C117 * C1565;
    const double C18927 = C2295 * C1565;
    const double C19854 = C2294 * C1565;
    const double C7354 = C117 * C1849;
    const double C18403 = C2294 * C1849;
    const double C17493 = C117 * C7343;
    const double C20274 = C2294 * C7343;
    const double C6025 = C50680 * C904;
    const double C18388 = C50696 * C904;
    const double C28810 = C50696 * C904;
    const double C157 = C117 * C134;
    const double C2312 = C2294 * C134;
    const double C332 = C117 * C297;
    const double C2306 = C2295 * C297;
    const double C2508 = C2294 * C297;
    const double C509 = C117 * C474;
    const double C2702 = C2294 * C474;
    const double C5494 = C117 * C479;
    const double C18393 = C2294 * C479;
    const double C6024 = C117 * C895;
    const double C18387 = C2295 * C895;
    const double C18929 = C2294 * C895;
    const double C6942 = C117 * C1572;
    const double C18931 = C2295 * C1572;
    const double C19858 = C2294 * C1572;
    const double C7356 = C117 * C1856;
    const double C18399 = C2294 * C1856;
    const double C49881 = C49867 + C49879;
    const double C49896 = C49884 + C49894;
    const double C49889 = 2 * C49883;
    const double C49887 = ae * C49883;
    const double C50272 = C49847 * C49883;
    const double C1855 =
        (2 * C50034 * C49869 + C50034 * (C49869 + C49883 * C50070)) / C49723;
    const double C7347 =
        (3 * (C49869 + C49883 * C50070) +
         C50034 * (2 * C50034 * C49883 + C50034 * (C49883 + C49905 * C50070))) /
        C49723;
    const double C50327 = C50324 + C49948;
    const double C50393 = C49867 + C50392;
    const double C50410 = 2 * C50408;
    const double C17494 = C50680 * C7349;
    const double C49880 = C49870 + C49878;
    const double C50058 = C50055 + C50056;
    const double C6445 = C50680 * C1230;
    const double C18396 = C50696 * C1230;
    const double C28816 = C50696 * C1230;
    const double C6943 = C50680 * C1577;
    const double C12893 = C7951 * C1577;
    const double C18932 = C50696 * C1577;
    const double C29502 = C50696 * C1577;
    const double C7357 = C50680 * C1861;
    const double C17496 = C50680 * C7352;
    const double C49953 = C49952 + C49948;
    const double C50059 = C49935 + C50057;
    const double C50093 = C50089 + C50090;
    const double C50094 = 2 * C50088;
    const double C50092 = ae * C50088;
    const double C4586 =
        (2 * C50034 * C50054 + C50034 * (C50054 + C50088 * C50070)) / C49723;
    const double C14726 =
        (3 * (C50054 + C50088 * C50070) +
         C50034 * (2 * C50034 * C50088 + C50034 * (C50088 + C50110 * C50070))) /
        C49723;
    const double C50390 = C49935 + C50389;
    const double C50403 = 2 * C50401;
    const double C17495 = C117 * C7348;
    const double C20278 = C2294 * C7348;
    const double C49967 = C49933 + C49964;
    const double C49966 = C49963 * ae;
    const double C49982 = 2 * C49963;
    const double C50274 = C49963 * C50042;
    const double C50311 = C49847 * C49963;
    const double C50495 = C49963 * C50070;
    const double C7342 =
        3 * (C50163 + C49949 * C50070) +
        C50034 * (2 * C50034 * C49949 + C50034 * (C49949 + C49963 * C50070));
    const double C49968 = C49965 + C49962;
    const double C50356 = C50351 + C49962;
    const double C50329 = C49933 + C50326;
    const double C50359 = 2 * C50352;
    const double C50357 = C50352 * ae;
    const double C50501 = C50352 * C50070;
    const double C14724 =
        3 * (C50280 + C50325 * C50070) +
        C50034 * (2 * C50034 * C50325 + C50034 * (C50325 + C50352 * C50070));
    const double C50507 = C49933 + C50505;
    const double C49921 = C49893 + C49919;
    const double C49920 = C49906 + C49918;
    const double C50117 = C50111 + C50112;
    const double C50148 = C49892 + C50146;
    const double C49990 = C49987 + C49984;
    const double C50119 = C49961 + C50114;
    const double C514 = C50680 * C480;
    const double C1110 =
        (2 * (C49847 * C49869 + C50163 * ae) +
         C49847 * (C49869 + C49847 * (C49847 * C49883 + C49951) +
                   C49847 * C49949 * ae) +
         (C50163 + C49949 * C50042) * ae) /
        C49723;
    const double C1224 =
        (C49847 * C49869 + C50163 * ae + (C49847 * C49883 + C49951) * C50070) /
        C49723;
    const double C1571 =
        (C50034 * (C49869 + C49847 * (C49847 * C49883 + C49951) +
                   C49847 * C49949 * ae)) /
        C49723;
    const double C1217 = C49847 * C50163 + C50273 * C50070;
    const double C126 = 3 * (C50159 + C49932 * C49873) +
                        C49848 * (2 * C50163 + C49848 * C50165);
    const double C283 = C49847 * (2 * C50163 + C49848 * C50165);
    const double C289 = C50159 + C49932 * C49873 + C50165 * C50042;
    const double C460 = C50034 * (2 * C50163 + C49848 * C50165);
    const double C466 = C50159 + C49932 * C49873 + C50165 * C50070;
    const double C891 = C50034 * C49847 * C50165;
    const double C3523 = 3 * (C50159 + C49932 * C50042) +
                         C49847 * (2 * C50280 + C49847 * C50283);
    const double C3681 = C50159 + C49932 * C50042 + C50283 * C50070;
    const double C4179 = C50034 * (2 * C50280 + C49847 * C50283);
    const double C17484 =
        4 * (2 * C50034 * C49932 + C50034 * C50499) +
        C50034 * (3 * C50499 + C50034 * (2 * C50034 * C49933 +
                                         C50034 * (C49933 + C49960 * C50070)));
    const double C6444 = C117 * C1225;
    const double C18395 = C2295 * C1225;
    const double C18937 = C2294 * C1225;
    const double C49899 = C49848 * C49897;
    const double C49909 = 3 * C49897;
    const double C49904 = ae * C49897;
    const double C50265 = C49847 * C49897;
    const double C49915 = C49892 + C49911;
    const double C50387 = C49883 + C50386;
    const double C50412 = C50034 * C50411;
    const double C17490 =
        (4 * (2 * C50034 * C49876 + C50034 * C50140) +
         C50034 *
             (3 * C50140 + C50034 * (2 * C50034 * C49892 +
                                     C50034 * (C49892 + C49916 * C50070)))) /
        C49727;
    const double C50098 = C49847 * C50095;
    const double C50113 = 3 * C50095;
    const double C50109 = ae * C50095;
    const double C50120 = C49892 + C50116;
    const double C50396 = C50088 + C50395;
    const double C50405 = C50034 * C50404;
    const double C49992 = C49848 * C49989;
    const double C49991 = C49989 * ae;
    const double C50267 = C49989 * C50042;
    const double C50315 = C49963 + C50312;
    const double C50361 = C49847 * C50358;
    const double C50810 = C50550 / C50558;
    const double C50808 = C50550 / C50541;
    const double C50807 = C50550 * C50545;
    const double C1028 = (2 * C50554 * C50550) / C50541;
    const double C50811 = C50555 * C50545;
    const double C116 = C50555 / C50812;
    const double C638 = C50555 / C50543;
    const double C50843 = C50809 / C50541;
    const double C1027 = (C50549 * std::pow(C50544, 2)) / C50553 + C50806;
    const double C50820 = C50617 / C50558;
    const double C50819 = C50617 * C50616;
    const double C50816 = C50617 / C50541;
    const double C279 = (2 * C50554 * C50617) / C50541;
    const double C50821 = C50620 * C50616;
    const double C1099 = C50620 / C50812;
    const double C1331 = C50620 / C50543;
    const double C50845 = C50818 / C50541;
    const double C278 = (C50568 * std::pow(C50615, 2)) / C50553 + C50813;
    const double C50824 = C50645 / C50558;
    const double C50823 = C50645 * C50644;
    const double C50817 = C50645 / C50541;
    const double C458 = (2 * C50554 * C50645) / C50541;
    const double C50825 = C50648 * C50644;
    const double C1845 = C50648 / C50812;
    const double C2092 = C50648 / C50543;
    const double C50848 = C50822 / C50541;
    const double C457 = (C50584 * std::pow(C50643, 2)) / C50553 + C50815;
    const double C50837 = C50719 / C49732;
    const double C50836 = C50719 * C50718;
    const double C50828 = C50719 / C49723;
    const double C50725 = C50722 * C50718;
    const double C20843 = C50722 / C50805;
    const double C38192 = C50722 / C49728;
    const double C50854 = C50835 / C49723;
    const double C15334 = (-2 * C50524 * C50835) / C49723;
    const double C15333 = (C50710 * std::pow(C50718, 2)) / C49727 + C50834;
    const double C49742 = C49731 - C49739;
    const double C49741 = C49721 * C49737;
    const double C2298 =
        ((-C49737 / C49723) / C49728 - (0 * be) / C49723) / C49728 -
        (0 * be) / C49723;
    const double C10776 = -C49737 / C49723;
    const double C25561 = (-C49737 / C49723) / C49728 - (0 * be) / C49723;
    const double C50840 = C50802 / C49727;
    const double C50804 = C50528 / C49723;
    const double C25555 = -C50839;
    const double C49796 = C49761 * C49779;
    const double C7955 =
        ((-C49776 / C49723) / C49728 -
         ((C50680 - (C49761 * C49779) / C49723) * be) / C49723) /
            C49728 -
        ((C49761 * ((-C49779 / C49723) / C49728 - (0 * be) / C49723) + C50696) *
         be) /
            C49723;
    const double C7956 =
        ((-C49779 / C49723) / C49728 - (0 * be) / C49723) / C49728 -
        (0 * be) / C49723;
    const double C22720 = (-C49779 / C49723) / C49728 - (0 * be) / C49723;
    const double C49806 = C49803 - C49799;
    const double C172 = C153 + C154;
    const double C171 = C151 + C152;
    const double C5519 = C5484 + C5485;
    const double C5518 = C5482 + C5483;
    const double C50852 = C50831 / C49727;
    const double C2323 = C50826 * C135;
    const double C2319 = C50826 * C146;
    const double C2313 = C50826 * C145;
    const double C2309 = C50826 * C133;
    const double C2305 = C50826 * C144;
    const double C2301 = C50826 * C131;
    const double C2513 = C50826 * C298;
    const double C2509 = C50826 * C315;
    const double C2505 = C50826 * C296;
    const double C2709 = C50826 * C480;
    const double C2707 = C50826 * C475;
    const double C2703 = C50826 * C492;
    const double C2699 = C50826 * C473;
    const double C18404 = C50826 * C1857;
    const double C18400 = C50826 * C1861;
    const double C18394 = C50826 * C494;
    const double C18390 = C50826 * C478;
    const double C18386 = C50826 * C493;
    const double C18382 = C50826 * C477;
    const double C18938 = C50826 * C1230;
    const double C18930 = C50826 * C904;
    const double C18926 = C50826 * C894;
    const double C19859 = C50826 * C1577;
    const double C20279 = C50826 * C7352;
    const double C20275 = C50826 * C7349;
    const double C50833 = C50699 / C49723;
    const double C44693 = C25554 * C1577;
    const double C22714 = -C50851;
    const double C7981 = C7950 * C296;
    const double C7969 = C7950 * C315;
    const double C7963 = C7950 * C298;
    const double C12897 = C7950 * C1230;
    const double C12891 = C7950 * C904;
    const double C12885 = C7950 * C894;
    const double C13413 = C7950 * C1577;
    const double C7991 = C7949 * C146;
    const double C7985 = C7949 * C135;
    const double C7983 = C7949 * C133;
    const double C7977 = C7949 * C145;
    const double C7967 = C7949 * C144;
    const double C7961 = C7949 * C131;
    const double C8171 = C7949 * C298;
    const double C8165 = C7949 * C315;
    const double C8355 = C7949 * C480;
    const double C8353 = C7949 * C475;
    const double C8347 = C7949 * C492;
    const double C8525 = C7949 * C296;
    const double C8689 = C7949 * C473;
    const double C12905 = C7949 * C478;
    const double C12899 = C7949 * C494;
    const double C12889 = C7949 * C493;
    const double C12883 = C7949 * C477;
    const double C13411 = C7949 * C904;
    const double C13405 = C7949 * C894;
    const double C13819 = C7949 * C1230;
    const double C14323 = C7949 * C1577;
    const double C14739 = C7949 * C1861;
    const double C14733 = C7949 * C1857;
    const double C173 = C155 + C156;
    const double C353 = C334 + C335;
    const double C2333 = C2302 + C2303;
    const double C530 = C511 + C512;
    const double C5521 = C5496 + C5497;
    const double C6044 = C6022 + C6023;
    const double C18416 = C18383 + C18384;
    const double C136 =
        (2 * (C49848 * C49941 + C50159 * ae) +
         C49848 * (C49941 + C49848 * C49945 + C49848 * C49932 * ae) +
         (C50159 + C49932 * C49873) * ae) /
        C49723;
    const double C295 =
        (C49847 * (C49941 + C49848 * C49945 + C50163 * ae)) / C49723;
    const double C304 =
        (C49848 * C49941 + C50159 * ae + C49945 * C50042) / C49723;
    const double C472 =
        (C50034 * (C49941 + C49848 * C49945 + C50163 * ae)) / C49723;
    const double C481 =
        (C49848 * C49941 + C50159 * ae + C49945 * C50070) / C49723;
    const double C897 = (C50034 * C49847 * C49945) / C49723;
    const double C3529 =
        (3 * (C49860 + C49847 * C50282 + C50280 * ae) +
         C49847 * (2 * C50282 +
                   C49847 * (C49867 + C49847 * (C49847 * C49877 + C49948) +
                             C49847 * C49933 * ae) +
                   C50283 * ae) +
         (2 * C50280 + C49847 * C50283) * ae) /
        C49723;
    const double C3687 =
        (C49860 + C49847 * C50282 + C50280 * ae +
         (C49867 + C49847 * (C49847 * C49877 + C49948) + C49847 * C49933 * ae) *
             C50070) /
        C49723;
    const double C4185 =
        (C50034 * (2 * C50282 +
                   C49847 * (C49867 + C49847 * (C49847 * C49877 + C49948) +
                             C49847 * C49933 * ae) +
                   C50283 * ae)) /
        C49723;
    const double C4587 =
        (2 * C50034 * C50282 +
         C50034 * (C50282 + (C49847 * C49877 + C49948) * C50070)) /
        C49723;
    const double C6443 = C50680 * C1226;
    const double C12903 = C7950 * C1226;
    const double C13813 = C7949 * C1226;
    const double C18392 = C50696 * C1226;
    const double C18934 = C50826 * C1226;
    const double C28820 = C50696 * C1226;
    const double C6941 = C50680 * C1573;
    const double C12887 = C7951 * C1573;
    const double C13407 = C7950 * C1573;
    const double C14317 = C7949 * C1573;
    const double C18928 = C50696 * C1573;
    const double C19855 = C50826 * C1573;
    const double C29498 = C50696 * C1573;
    const double C44687 = C25554 * C1573;
    const double C337 = C50680 * C303;
    const double C2515 = C50826 * C303;
    const double C2511 = C50696 * C303;
    const double C7965 = C7951 * C303;
    const double C8173 = C7949 * C303;
    const double C8169 = C7950 * C303;
    const double C22936 = C50696 * C303;
    const double C25568 = C25554 * C303;
    const double C911 = C50680 * C896;
    const double C2705 = C50696 * C896;
    const double C3255 = C50826 * C896;
    const double C8351 = C7950 * C896;
    const double C8901 = C7949 * C896;
    const double C23130 = C50696 * C896;
    const double C336 = C117 * C288;
    const double C2514 = C2294 * C288;
    const double C2510 = C2295 * C288;
    const double C513 = C117 * C465;
    const double C2708 = C2294 * C465;
    const double C910 = C117 * C890;
    const double C2704 = C2295 * C890;
    const double C3254 = C2294 * C890;
    const double C2516 = C2295 * C1103;
    const double C3256 = C2295 * C1564;
    const double C5324 = C117 * C1564;
    const double C34901 = C2294 * C1564;
    const double C5498 = C117 * C1848;
    const double C18405 = C2294 * C1848;
    const double C6442 = C117 * C1218;
    const double C18391 = C2295 * C1218;
    const double C18933 = C2294 * C1218;
    const double C16581 = C117 * C4581;
    const double C18401 = C2295 * C4581;
    const double C19351 = C2294 * C4581;
    const double C175 = C159 + C160;
    const double C351 = C330 + C331;
    const double C2337 = C2310 + C2311;
    const double C528 = C507 + C508;
    const double C7362 = C7354 + C7355;
    const double C174 = C157 + C158;
    const double C352 = C332 + C333;
    const double C2335 = C2306 + C2307;
    const double C529 = C509 + C510;
    const double C5520 = C5494 + C5495;
    const double C6045 = C6024 + C6025;
    const double C18418 = C18387 + C18388;
    const double C138 = (3 * (C49860 + C49867 * C49873) +
                         C49848 * (2 * C49869 + C49848 * C49881)) /
                        C49723;
    const double C294 = (C49847 * (2 * C49869 + C49848 * C49881) +
                         (2 * C50163 + C49848 * C50165) * ae) /
                        C49723;
    const double C305 =
        (C49860 + C49867 * C49873 + C49847 * (C49847 * C49881 + C50165 * ae) +
         C49847 * C50165 * ae) /
        C49723;
    const double C471 = (C50034 * (2 * C49869 + C49848 * C49881)) / C49723;
    const double C482 = (C49860 + C49867 * C49873 + C49881 * C50070) / C49723;
    const double C898 = (C50034 * (C49847 * C49881 + C50165 * ae)) / C49723;
    const double C1853 =
        (2 * C50034 * C49881 + C50034 * (C49881 + C49897 * C50070)) / C49723;
    const double C49898 = C49848 * C49896;
    const double C49903 = 2 * C49896;
    const double C50049 = C49847 * C49896;
    const double C49891 = C49876 + C49887;
    const double C50275 = C50272 + C49951;
    const double C5499 = C50680 * C1855;
    const double C18406 = C50826 * C1855;
    const double C15648 = C50680 * C7347;
    const double C50331 = C49847 * C50327;
    const double C50350 = 2 * C50327;
    const double C17488 =
        (4 * (2 * C50034 * C49867 + C50034 * C50393) +
         C50034 *
             (3 * C50393 + C50034 * (2 * C50034 * C49877 +
                                     C50034 * (C49877 + C49893 * C50070)))) /
        C49723;
    const double C17500 = C17493 + C17494;
    const double C147 =
        (3 * (C49866 + ae * C49869 + C49848 * C49880) +
         ae * (2 * C49869 + C49848 * C49881) +
         C49848 *
             (2 * C49880 + ae * C49881 +
              C49848 * (C49876 + ae * C49848 * C49877 +
                        C49848 * (ae * C49877 + C49848 * std::pow(C49850, 6) *
                                                    bs[6] * C49858)))) /
        C49727;
    const double C314 = (ae * (C49857 * C49853 * C49931 +
                               C49848 * (C49848 * C49935 + C49932 * ae) +
                               C49848 * C49932 * ae) +
                         C49847 * (C49866 + ae * C49869 + C49848 * C49880)) /
                        C49727;
    const double C318 = (ae * C49860 + C49848 * C49866 + ae * C49847 * C49945 +
                         C49847 * (ae * C49945 + C49847 * C49880)) /
                        C49727;
    const double C491 =
        ((zP - zQ) * (C49866 + ae * C49869 + C49848 * C49880)) / C49727;
    const double C495 =
        (ae * C49860 + C49848 * C49866 + C49880 * std::pow(zP - zQ, 2)) /
        C49727;
    const double C905 = ((zP - zQ) * (ae * C49945 + C49847 * C49880)) / C49727;
    const double C1860 = (2 * C50034 * C49880 +
                          C50034 * (C49880 + C49896 * std::pow(C50034, 2))) /
                         C49727;
    const double C3690 = (C49866 + ae * C50054 + C49847 * C50058 +
                          (C49876 + ae * C49847 * C49950 +
                           C49847 * (ae * C49950 + C49847 * C49892)) *
                              std::pow(C50034, 2)) /
                         C49727;
    const double C4590 = (2 * C50034 * C50058 +
                          C50034 * (C50058 + (ae * C49950 + C49847 * C49892) *
                                                 std::pow(C50034, 2))) /
                         C49727;
    const double C6949 = C6942 + C6943;
    const double C18952 = C18931 + C18932;
    const double C7363 = C7356 + C7357;
    const double C49954 = C49848 * C49953;
    const double C49958 = 2 * C49953;
    const double C50048 = ae * C49953;
    const double C50047 = C49847 * C49953;
    const double C1115 = (2 * (ae * C49945 + C49847 * C49880) +
                          ae * (C49945 + C49953 * std::pow(C49847, 2)) +
                          C49847 * (C49880 + ae * C49847 * C49953 +
                                    C49847 * (ae * C49953 + C49847 * C49896))) /
                         C49727;
    const double C1229 =
        (ae * C49945 + C49847 * C49880 +
         (ae * C49953 + C49847 * C49896) * std::pow(zP - zQ, 2)) /
        C49727;
    const double C1576 =
        ((zP - zQ) * (C49880 + ae * C49847 * C49953 +
                      C49847 * (ae * C49953 + C49847 * C49896))) /
        C49727;
    const double C1109 =
        (2 * C49847 * C49945 + C49847 * (C49945 + C49953 * C50042)) / C49723;
    const double C1570 = (C50034 * (C49945 + C49953 * C50042)) / C49723;
    const double C1854 =
        (2 * C50034 * C49945 + C50034 * (C49945 + C49953 * C50070)) / C49723;
    const double C3532 =
        (3 * (C49866 + ae * C50054 + C49847 * C50058) +
         ae * (2 * C50054 + C49847 * C50059) +
         C49847 * (2 * C50058 + ae * C50059 +
                   C49847 * (C49876 + ae * C49847 * C49950 +
                             C49847 * (ae * C49950 + C49847 * C49892)))) /
        C49727;
    const double C4188 =
        (C50034 * (2 * C50058 + ae * C50059 +
                   C49847 * (C49876 + ae * C49847 * C49950 +
                             C49847 * (ae * C49950 + C49847 * C49892)))) /
        C49727;
    const double C3528 = (3 * (C49941 + C49935 * C50042) +
                          C49847 * (2 * C50054 + C49847 * C50059)) /
                         C49723;
    const double C3686 = (C49941 + C49935 * C50042 + C50059 * C50070) / C49723;
    const double C4184 = (C50034 * (2 * C50054 + C49847 * C50059)) / C49723;
    const double C10211 =
        (2 * C50034 * C50059 + C50034 * (C50059 + C50095 * C50070)) / C49723;
    const double C50097 = C49847 * C50093;
    const double C50108 = 2 * C50093;
    const double C50096 = C49876 + C50092;
    const double C16583 = C117 * C4586;
    const double C18397 = C2295 * C4586;
    const double C19355 = C2294 * C4586;
    const double C20280 = C2295 * C14726;
    const double C21669 = C117 * C14726;
    const double C17487 =
        (4 * (2 * C50034 * C49935 + C50034 * C50390) +
         C50034 *
             (3 * C50390 + C50034 * (2 * C50034 * C49950 +
                                     C50034 * (C49950 + C49961 * C50070)))) /
        C49723;
    const double C17501 = C17495 + C17496;
    const double C49969 = C49967 * ae;
    const double C50170 = C49848 * C49967;
    const double C50173 = 3 * C49967;
    const double C50266 = C49847 * C49967;
    const double C1102 =
        2 * C49847 * C50165 + C49847 * (C50165 + C49967 * C50042);
    const double C1563 = C50034 * (C50165 + C49967 * C50042);
    const double C1847 =
        2 * C50034 * C50165 + C50034 * (C50165 + C49967 * C50070);
    const double C7341 =
        3 * (C50165 + C49967 * C50070) +
        C50034 * (2 * C50034 * C49967 + C50034 * (C49967 + C49989 * C50070));
    const double C50313 = C50310 + C49966;
    const double C50276 = C49949 + C50274;
    const double C50316 = 2 * C50311;
    const double C50314 = C50311 * ae;
    const double C4580 =
        2 * C50034 * C50273 + C50034 * (C50273 + C50311 * C50070);
    const double C16576 =
        3 * (C50273 + C50311 * C50070) +
        C50034 * (2 * C50034 * C50311 +
                  C50034 * (C50311 + C49847 * C49985 * C50070));
    const double C50496 = C49949 + C50495;
    const double C15647 = C117 * C7342;
    const double C49970 = C49848 * C49968;
    const double C49979 = 2 * C49968;
    const double C50050 = C49968 * C50042;
    const double C50075 = ae * C49968;
    const double C50074 = C49847 * C49968;
    const double C50383 = C49968 * C50070;
    const double C7346 =
        (3 * (C49945 + C49953 * C50070) +
         C50034 * (2 * C50034 * C49953 + C50034 * (C49953 + C49968 * C50070))) /
        C49723;
    const double C50360 = C49847 * C50356;
    const double C50398 = C50356 * C50070;
    const double C14728 =
        (3 * (C50282 + C50327 * C50070) +
         C50034 * (2 * C50034 * C50327 + C50034 * (C50327 + C50356 * C50070))) /
        C49723;
    const double C50332 = C49847 * C50329;
    const double C50355 = 3 * C50329;
    const double C50353 = C50329 * ae;
    const double C10208 =
        2 * C50034 * C50283 + C50034 * (C50283 + C50329 * C50070);
    const double C14723 =
        3 * (C50283 + C50329 * C50070) +
        C50034 * (2 * C50034 * C50329 + C50034 * (C50329 + C50358 * C50070));
    const double C50502 = C50325 + C50501;
    const double C20276 = C2295 * C14724;
    const double C21667 = C117 * C14724;
    const double C50508 = C50034 * C50507;
    const double C49923 = C49848 * C49921;
    const double C7345 =
        (3 * (C49881 + C49897 * C50070) +
         C50034 * (2 * C50034 * C49897 + C50034 * (C49897 + C49921 * C50070))) /
        C49723;
    const double C49922 = C49848 * C49920;
    const double C50076 = C49847 * C49920;
    const double C50136 = C49920 * C50070;
    const double C7351 =
        (3 * (C49880 + C49896 * C50070) +
         C50034 * (2 * C50034 * C49896 + C50034 * (C49896 + C49920 * C50070))) /
        C49727;
    const double C50121 = C49847 * C50117;
    const double C50142 = C50117 * C50070;
    const double C14730 =
        (3 * (C50058 + C50093 * C50070) +
         C50034 * (2 * C50034 * C50093 + C50034 * (C50093 + C50117 * C50070))) /
        C49727;
    const double C50149 = C50034 * C50148;
    const double C49993 = C49848 * C49990;
    const double C50077 = C49990 * C50042;
    const double C50122 = C49847 * C50119;
    const double C14725 =
        (3 * (C50059 + C50095 * C50070) +
         C50034 * (2 * C50034 * C50095 + C50034 * (C50095 + C50119 * C50070))) /
        C49723;
    const double C2517 = C50696 * C1110;
    const double C8175 = C7950 * C1110;
    const double C8167 = C7951 * C1110;
    const double C22942 = C50696 * C1110;
    const double C25770 = C25554 * C1110;
    const double C2711 = C50696 * C1224;
    const double C6031 = C50680 * C1224;
    const double C8357 = C7950 * C1224;
    const double C18942 = C50826 * C1224;
    const double C23136 = C50696 * C1224;
    const double C3257 = C50696 * C1571;
    const double C5325 = C50680 * C1571;
    const double C8349 = C7951 * C1571;
    const double C8903 = C7950 * C1571;
    const double C23682 = C50696 * C1571;
    const double C25952 = C25554 * C1571;
    const double C34902 = C50826 * C1571;
    const double C2710 = C2295 * C1217;
    const double C6030 = C117 * C1217;
    const double C18941 = C2294 * C1217;
    const double C165 = C117 * C126;
    const double C2324 = C2294 * C126;
    const double C326 = C117 * C283;
    const double C2320 = C2295 * C283;
    const double C2888 = C2294 * C283;
    const double C340 = C117 * C289;
    const double C2522 = C2294 * C289;
    const double C2502 = C2295 * C289;
    const double C503 = C117 * C460;
    const double C3048 = C2294 * C460;
    const double C517 = C117 * C466;
    const double C2716 = C2294 * C466;
    const double C914 = C117 * C891;
    const double C2696 = C2295 * C891;
    const double C3262 = C2294 * C891;
    const double C17084 = C117 * C3681;
    const double C18935 = C2295 * C3681;
    const double C19862 = C2294 * C3681;
    const double C19856 = C2295 * C4179;
    const double C22283 = C117 * C17484;
    const double C6451 = C6444 + C6445;
    const double C18422 = C18395 + C18396;
    const double C49901 = C49889 + C49899;
    const double C17486 =
        (4 * (2 * C50034 * C49883 + C50034 * C50387) +
         C50034 * (3 * C50387 +
                   C50034 * (2 * C50034 * C49905 +
                             C50034 * (C49905 + C49848 * C49917 * C50070)))) /
        C49723;
    const double C50413 = C50410 + C50412;
    const double C22286 = C50680 * C17490;
    const double C50100 = C50094 + C50098;
    const double C20268 =
        (4 * (2 * C50034 * C50088 + C50034 * C50396) +
         C50034 * (3 * C50396 +
                   C50034 * (2 * C50034 * C50110 +
                             C50034 * (C50110 + C49847 * C49983 * C50070)))) /
        C49723;
    const double C50406 = C50403 + C50405;
    const double C49994 = C49982 + C49992;
    const double C50269 = C49967 + C50267;
    const double C50318 = C49847 * C50315;
    const double C50363 = C50359 + C50361;
    const double C50842 = C50807 / C50553;
    const double C50844 = C50811 / C50541;
    const double C281 = -C50843;
    const double C50846 = C50819 / C50553;
    const double C50847 = C50821 / C50541;
    const double C1025 = -C50845;
    const double C50849 = C50823 / C50553;
    const double C50850 = C50825 / C50541;
    const double C1676 = -C50848;
    const double C50855 = C50836 / C49727;
    const double C50838 = C50725 / C49723;
    const double C31984 = -C50854;
    const double C121 =
        (C49742 / C49728 - (0 * be) / C49723) / C49728 - (0 * be) / C49723;
    const double C22723 = C49742 / C49728 - (0 * be) / C49723;
    const double C49744 = C49741 / C49723;
    const double C50857 = C50801 - C50840;
    const double C50841 = C50803 - C50804;
    const double C49802 = C49796 / C49723;
    const double C7986 = C7955 * C283;
    const double C7980 = C7955 * C284;
    const double C7968 = C7955 * C297;
    const double C7962 = C7955 * C285;
    const double C8174 = C7955 * C1103;
    const double C8168 = C7955 * C288;
    const double C8356 = C7955 * C1217;
    const double C8350 = C7955 * C890;
    const double C8526 = C7955 * C289;
    const double C8690 = C7955 * C891;
    const double C8902 = C7955 * C1564;
    const double C12902 = C7955 * C1218;
    const double C12896 = C7955 * C1225;
    const double C12890 = C7955 * C895;
    const double C12884 = C7955 * C889;
    const double C13412 = C7955 * C1572;
    const double C13406 = C7955 * C1565;
    const double C13814 = C7955 * C3681;
    const double C14318 = C7955 * C4179;
    const double C14740 = C7955 * C4586;
    const double C14734 = C7955 * C4581;
    const double C7978 = C7956 * C289;
    const double C7964 = C7956 * C288;
    const double C8166 = C7956 * C1103;
    const double C8348 = C7956 * C1564;
    const double C12900 = C7956 * C3681;
    const double C12892 = C7956 * C1572;
    const double C12886 = C7956 * C1565;
    const double C13408 = C7956 * C4179;
    const double C22745 = C22720 * C283;
    const double C22735 = C22720 * C284;
    const double C22731 = C22720 * C297;
    const double C22727 = C22720 * C285;
    const double C22941 = C22720 * C1103;
    const double C22935 = C22720 * C288;
    const double C22927 = C22720 * C289;
    const double C23135 = C22720 * C1217;
    const double C23129 = C22720 * C890;
    const double C23121 = C22720 * C891;
    const double C23681 = C22720 * C1564;
    const double C28819 = C22720 * C1218;
    const double C28815 = C22720 * C1225;
    const double C28809 = C22720 * C895;
    const double C28805 = C22720 * C889;
    const double C29501 = C22720 * C1572;
    const double C29497 = C22720 * C1565;
    const double C30043 = C22720 * C3681;
    const double C30701 = C22720 * C4179;
    const double C31235 = C22720 * C4586;
    const double C31231 = C22720 * C4581;
    const double C49215 = C22720 * C14726;
    const double C49211 = C22720 * C14724;
    const double C10775 =
        (C49806 / C49728 - (0 * be) / C49723) / C49728 - (0 * be) / C49723;
    const double C25559 = C49806 / C49728 - (0 * be) / C49723;
    const double C5527 = C5519 * C2291;
    const double C15636 = C5519 * C50799;
    const double C21042 = C5519 * C50520;
    const double C38487 = C5519 * C25555;
    const double C21041 = C5518 * C10776;
    const double C50864 = C50829 - C50852;
    const double C2343 = C2322 + C2323;
    const double C2338 = C2312 + C2313;
    const double C2336 = C2308 + C2309;
    const double C2334 = C2304 + C2305;
    const double C2332 = C2300 + C2301;
    const double C2537 = C2512 + C2513;
    const double C2535 = C2508 + C2509;
    const double C2533 = C2504 + C2505;
    const double C2731 = C2706 + C2707;
    const double C2729 = C2702 + C2703;
    const double C2727 = C2698 + C2699;
    const double C18426 = C18403 + C18404;
    const double C18424 = C18399 + C18400;
    const double C18421 = C18393 + C18394;
    const double C18419 = C18389 + C18390;
    const double C18417 = C18385 + C18386;
    const double C18415 = C18381 + C18382;
    const double C18955 = C18937 + C18938;
    const double C18951 = C18929 + C18930;
    const double C18949 = C18925 + C18926;
    const double C19872 = C19858 + C19859;
    const double C20286 = C20278 + C20279;
    const double C20284 = C20274 + C20275;
    const double C50853 = C50832 - C50833;
    const double C22748 = C22714 * C135;
    const double C22744 = C22714 * C146;
    const double C22738 = C22714 * C145;
    const double C22734 = C22714 * C133;
    const double C22730 = C22714 * C144;
    const double C22726 = C22714 * C131;
    const double C22940 = C22714 * C303;
    const double C22938 = C22714 * C298;
    const double C22934 = C22714 * C315;
    const double C22930 = C22714 * C296;
    const double C23134 = C22714 * C480;
    const double C23132 = C22714 * C475;
    const double C23128 = C22714 * C492;
    const double C23124 = C22714 * C473;
    const double C23680 = C22714 * C896;
    const double C28598 = C22714 * C1571;
    const double C28828 = C22714 * C1855;
    const double C28822 = C22714 * C478;
    const double C28818 = C22714 * C494;
    const double C28808 = C22714 * C493;
    const double C28804 = C22714 * C477;
    const double C29506 = C22714 * C1224;
    const double C29500 = C22714 * C904;
    const double C29496 = C22714 * C894;
    const double C30046 = C22714 * C1230;
    const double C30042 = C22714 * C1226;
    const double C30704 = C22714 * C1577;
    const double C30700 = C22714 * C1573;
    const double C31234 = C22714 * C1861;
    const double C31230 = C22714 * C1857;
    const double C49214 = C22714 * C7352;
    const double C49210 = C22714 * C7349;
    const double C7954 =
        ((-(0 * be) / C49723) / C49728 -
         ((0 - (C49761 * C49776) / C49723) * be) / C49723) /
            C49728 -
        ((C49761 * ((-C49776 / C49723) / C49728 -
                    ((C50680 - (C49761 * C49779) / C49723) * be) / C49723) +
          C22714) *
         be) /
            C49723 +
        (-C49779 / C49723) / C49728 - (0 * be) / C49723;
    const double C15637 = C530 * C49742;
    const double C21049 = C530 * C10776;
    const double C38488 = C530 * C25561;
    const double C21043 = C5521 * C10776;
    const double C21393 = C6044 * C10776;
    const double C161 = C117 * C136;
    const double C2318 = C2294 * C136;
    const double C328 = C117 * C295;
    const double C2314 = C2295 * C295;
    const double C2500 = C2294 * C295;
    const double C7974 = C7955 * C295;
    const double C22739 = C22720 * C295;
    const double C338 = C117 * C304;
    const double C2518 = C2294 * C304;
    const double C2506 = C2295 * C304;
    const double C7970 = C7956 * C304;
    const double C8162 = C7955 * C304;
    const double C22931 = C22720 * C304;
    const double C505 = C117 * C472;
    const double C2694 = C2294 * C472;
    const double C515 = C117 * C481;
    const double C2712 = C2294 * C481;
    const double C912 = C117 * C897;
    const double C2700 = C2295 * C897;
    const double C3258 = C2294 * C897;
    const double C8344 = C7955 * C897;
    const double C23125 = C22720 * C897;
    const double C12901 = C7951 * C3687;
    const double C13815 = C7950 * C3687;
    const double C17085 = C50680 * C3687;
    const double C18936 = C50696 * C3687;
    const double C19863 = C50826 * C3687;
    const double C30044 = C50696 * C3687;
    const double C44701 = C25554 * C3687;
    const double C48806 = C22714 * C3687;
    const double C13409 = C7951 * C4185;
    const double C14319 = C7950 * C4185;
    const double C19857 = C50696 * C4185;
    const double C30702 = C50696 * C4185;
    const double C45209 = C25554 * C4185;
    const double C14735 = C7950 * C4587;
    const double C16582 = C50680 * C4587;
    const double C18402 = C50696 * C4587;
    const double C19352 = C50826 * C4587;
    const double C31232 = C50696 * C4587;
    const double C48303 = C22714 * C4587;
    const double C6948 = C6940 + C6941;
    const double C18950 = C18927 + C18928;
    const double C19870 = C19854 + C19855;
    const double C354 = C336 + C337;
    const double C2538 = C2514 + C2515;
    const double C2536 = C2510 + C2511;
    const double C531 = C513 + C514;
    const double C2732 = C2708 + C2709;
    const double C922 = C910 + C911;
    const double C2730 = C2704 + C2705;
    const double C3270 = C3254 + C3255;
    const double C6450 = C6442 + C6443;
    const double C18420 = C18391 + C18392;
    const double C18953 = C18933 + C18934;
    const double C5488 = C528 * C2298;
    const double C15653 = C528 * C49742;
    const double C21257 = C528 * C10776;
    const double C38500 = C528 * C25561;
    const double C21045 = C7362 * C10776;
    const double C5507 = C529 * C2291;
    const double C5487 = C529 * C2292;
    const double C15652 = C529 * C50799;
    const double C15638 = C529 * C50525;
    const double C21050 = C529 * C50520;
    const double C38499 = C529 * C25555;
    const double C38489 = C529 * C50525;
    const double C5528 = C5520 * C2291;
    const double C15640 = C5520 * C50799;
    const double C21044 = C5520 * C50520;
    const double C38491 = C5520 * C25555;
    const double C6051 = C6045 * C2291;
    const double C16166 = C6045 * C50799;
    const double C21394 = C6045 * C50520;
    const double C39011 = C6045 * C25555;
    const double C166 = C50680 * C138;
    const double C2325 = C50826 * C138;
    const double C22750 = C22714 * C138;
    const double C327 = C50680 * C294;
    const double C2321 = C50696 * C294;
    const double C2889 = C50826 * C294;
    const double C7987 = C7950 * C294;
    const double C22746 = C50696 * C294;
    const double C23314 = C22714 * C294;
    const double C341 = C50680 * C305;
    const double C2523 = C50826 * C305;
    const double C2503 = C50696 * C305;
    const double C7979 = C7951 * C305;
    const double C8527 = C7950 * C305;
    const double C22948 = C22714 * C305;
    const double C22928 = C50696 * C305;
    const double C25582 = C25554 * C305;
    const double C504 = C50680 * C471;
    const double C3049 = C50826 * C471;
    const double C23474 = C22714 * C471;
    const double C518 = C50680 * C482;
    const double C2717 = C50826 * C482;
    const double C23142 = C22714 * C482;
    const double C915 = C50680 * C898;
    const double C2697 = C50696 * C898;
    const double C3263 = C50826 * C898;
    const double C8691 = C7950 * C898;
    const double C23122 = C50696 * C898;
    const double C23688 = C22714 * C898;
    const double C5503 = C50680 * C1853;
    const double C49910 = C49903 + C49904;
    const double C49900 = C49891 + C49898;
    const double C3685 =
        (C49869 + C49847 * C50275 + C50273 * ae +
         (C49883 + C49847 * (C49847 * C49905 + C49966) + C49847 * C49963 * ae) *
             C50070) /
        C49723;
    const double C4585 =
        (2 * C50034 * C50275 +
         C50034 * (C50275 + (C49847 * C49905 + C49966) * C50070)) /
        C49723;
    const double C5522 = C5498 + C5499;
    const double C18427 = C18405 + C18406;
    const double C50333 = C49867 + C50331;
    const double C22284 = C50680 * C17488;
    const double C21048 = C17500 * C10776;
    const double C164 = C50680 * C147;
    const double C2329 = C50826 * C147;
    const double C22754 = C22714 * C147;
    const double C329 = C50680 * C314;
    const double C2315 = C50696 * C314;
    const double C2501 = C50826 * C314;
    const double C7975 = C7950 * C314;
    const double C8531 = C7949 * C314;
    const double C22740 = C50696 * C314;
    const double C22926 = C22714 * C314;
    const double C339 = C50680 * C318;
    const double C2519 = C50826 * C318;
    const double C2507 = C50696 * C318;
    const double C7971 = C7951 * C318;
    const double C8179 = C7949 * C318;
    const double C8163 = C7950 * C318;
    const double C22944 = C22714 * C318;
    const double C22932 = C50696 * C318;
    const double C25574 = C25554 * C318;
    const double C506 = C50680 * C491;
    const double C2695 = C50826 * C491;
    const double C8695 = C7949 * C491;
    const double C23120 = C22714 * C491;
    const double C516 = C50680 * C495;
    const double C2713 = C50826 * C495;
    const double C8361 = C7949 * C495;
    const double C23138 = C22714 * C495;
    const double C913 = C50680 * C905;
    const double C2701 = C50696 * C905;
    const double C3259 = C50826 * C905;
    const double C8345 = C7950 * C905;
    const double C8907 = C7949 * C905;
    const double C23126 = C50696 * C905;
    const double C23684 = C22714 * C905;
    const double C5501 = C50680 * C1860;
    const double C18410 = C50826 * C1860;
    const double C28832 = C22714 * C1860;
    const double C12895 = C7951 * C3690;
    const double C13821 = C7950 * C3690;
    const double C17087 = C50680 * C3690;
    const double C18940 = C50696 * C3690;
    const double C19867 = C50826 * C3690;
    const double C30048 = C50696 * C3690;
    const double C44695 = C25554 * C3690;
    const double C48810 = C22714 * C3690;
    const double C14741 = C7950 * C4590;
    const double C16584 = C50680 * C4590;
    const double C18398 = C50696 * C4590;
    const double C19356 = C50826 * C4590;
    const double C31236 = C50696 * C4590;
    const double C48307 = C22714 * C4590;
    const double C6951 = C6949 * C2291;
    const double C17081 = C6949 * C50799;
    const double C22004 = C6949 * C50520;
    const double C39910 = C6949 * C25555;
    const double C7365 = C7363 * C2291;
    const double C15645 = C7363 * C50799;
    const double C21046 = C7363 * C50520;
    const double C38496 = C7363 * C25555;
    const double C49955 = C49935 + C49954;
    const double C50051 = C50048 + C50049;
    const double C1223 = (C49847 * C49945 + C50047 * C50070) / C49723;
    const double C2521 = C50696 * C1115;
    const double C8181 = C7950 * C1115;
    const double C8161 = C7951 * C1115;
    const double C22946 = C50696 * C1115;
    const double C25764 = C25554 * C1115;
    const double C2715 = C50696 * C1229;
    const double C6033 = C50680 * C1229;
    const double C8363 = C7950 * C1229;
    const double C18946 = C50826 * C1229;
    const double C23140 = C50696 * C1229;
    const double C29510 = C22714 * C1229;
    const double C3261 = C50696 * C1576;
    const double C5327 = C50680 * C1576;
    const double C8343 = C7951 * C1576;
    const double C8909 = C7950 * C1576;
    const double C23686 = C50696 * C1576;
    const double C25946 = C25554 * C1576;
    const double C28602 = C22714 * C1576;
    const double C34906 = C50826 * C1576;
    const double C2520 = C2295 * C1109;
    const double C8180 = C7955 * C1109;
    const double C8160 = C7956 * C1109;
    const double C22945 = C22720 * C1109;
    const double C3260 = C2295 * C1570;
    const double C5326 = C117 * C1570;
    const double C8342 = C7956 * C1570;
    const double C8908 = C7955 * C1570;
    const double C23685 = C22720 * C1570;
    const double C34905 = C2294 * C1570;
    const double C5500 = C117 * C1854;
    const double C18409 = C2294 * C1854;
    const double C13415 = C7951 * C4188;
    const double C14325 = C7950 * C4188;
    const double C19861 = C50696 * C4188;
    const double C30706 = C50696 * C4188;
    const double C45215 = C25554 * C4188;
    const double C12894 = C7956 * C3686;
    const double C13820 = C7955 * C3686;
    const double C17086 = C117 * C3686;
    const double C18939 = C2295 * C3686;
    const double C19866 = C2294 * C3686;
    const double C30047 = C22720 * C3686;
    const double C13414 = C7956 * C4184;
    const double C14324 = C7955 * C4184;
    const double C19860 = C2295 * C4184;
    const double C30705 = C22720 * C4184;
    const double C14742 = C7956 * C10211;
    const double C19357 = C2295 * C10211;
    const double C22009 = C117 * C10211;
    const double C48308 = C22720 * C10211;
    const double C50115 = C50108 + C50109;
    const double C50099 = C50096 + C50097;
    const double C22285 = C117 * C17487;
    const double C17504 = C17501 * C50799;
    const double C21047 = C17501 * C50520;
    const double C40309 = C17501 * C25555;
    const double C50268 = C50265 + C49969;
    const double C1108 =
        (2 * (C49847 * C49881 + C50165 * ae) +
         C49847 * (C49881 + C49847 * (C49847 * C49897 + C49969) +
                   C49847 * C49967 * ae) +
         (C50165 + C49967 * C50042) * ae) /
        C49723;
    const double C1222 =
        (C49847 * C49881 + C50165 * ae + (C49847 * C49897 + C49969) * C50070) /
        C49723;
    const double C1569 =
        (C50034 * (C49881 + C49847 * (C49847 * C49897 + C49969) +
                   C49847 * C49967 * ae)) /
        C49723;
    const double C50171 = C50169 + C50170;
    const double C1216 = C49847 * C50165 + C50266 * C50070;
    const double C4579 =
        2 * C50034 * C50266 + C50034 * (C50266 + C49847 * C49989 * C50070);
    const double C2524 = C2295 * C1102;
    const double C8528 = C7956 * C1102;
    const double C22949 = C22720 * C1102;
    const double C3264 = C2295 * C1563;
    const double C5328 = C117 * C1563;
    const double C8692 = C7956 * C1563;
    const double C23689 = C22720 * C1563;
    const double C5502 = C117 * C1847;
    const double C50317 = C49847 * C50313;
    const double C16578 =
        (3 * (C50275 + C50313 * C50070) +
         C50034 * (2 * C50034 * C50313 +
                   C50034 * (C50313 +
                             (C49847 * C49848 * C49917 + C49988) * C50070))) /
        C49723;
    const double C3527 =
        (3 * (C49869 + C49847 * C50275 + C50273 * ae) +
         C49847 * (2 * C50275 +
                   C49847 * (C49883 + C49847 * (C49847 * C49905 + C49966) +
                             C49847 * C49963 * ae) +
                   C50276 * ae) +
         (2 * C50273 + C49847 * C50276) * ae) /
        C49723;
    const double C4183 =
        (C50034 * (2 * C50275 +
                   C49847 * (C49883 + C49847 * (C49847 * C49905 + C49966) +
                             C49847 * C49963 * ae) +
                   C50276 * ae)) /
        C49723;
    const double C3522 = 3 * (C50163 + C49949 * C50042) +
                         C49847 * (2 * C50273 + C49847 * C50276);
    const double C3680 = C50163 + C49949 * C50042 + C50276 * C50070;
    const double C4178 = C50034 * (2 * C50273 + C49847 * C50276);
    const double C10207 =
        2 * C50034 * C50276 + C50034 * (C50276 + C50315 * C50070);
    const double C16173 = C117 * C4580;
    const double C18407 = C2295 * C4580;
    const double C28829 = C22720 * C4580;
    const double C17483 =
        4 * (2 * C50034 * C49949 + C50034 * C50496) +
        C50034 * (3 * C50496 + C50034 * (2 * C50034 * C49963 +
                                         C50034 * (C49963 + C49985 * C50070)));
    const double C15664 = C15647 + C15648;
    const double C49971 = C49950 + C49970;
    const double C50052 = C49953 + C50050;
    const double C50080 = 2 * C50074;
    const double C50078 = ae * C50074;
    const double C4584 =
        (2 * C50034 * C50047 + C50034 * (C50047 + C50074 * C50070)) / C49723;
    const double C16577 =
        (3 * (C50047 + C50074 * C50070) +
         C50034 * (2 * C50034 * C50074 +
                   C50034 * (C50074 + C49847 * C49990 * C50070))) /
        C49723;
    const double C50384 = C49953 + C50383;
    const double C15649 = C117 * C7346;
    const double C50362 = C49877 + C50360;
    const double C50399 = C50327 + C50398;
    const double C20277 = C50696 * C14728;
    const double C21668 = C50680 * C14728;
    const double C49212 = C50696 * C14728;
    const double C50334 = C50330 + C50332;
    const double C14736 = C7956 * C10208;
    const double C19353 = C2295 * C10208;
    const double C22007 = C117 * C10208;
    const double C48304 = C22720 * C10208;
    const double C20267 =
        4 * (2 * C50034 * C50325 + C50034 * C50502) +
        C50034 * (3 * C50502 +
                  C50034 * (2 * C50034 * C50352 +
                            C50034 * (C50352 + C49847 * C49981 * C50070)));
    const double C50509 = C50506 + C50508;
    const double C49925 = C49913 + C49923;
    const double C49924 = C49915 + C49922;
    const double C50079 = C50075 + C50076;
    const double C50137 = C49896 + C50136;
    const double C15650 = C50680 * C7351;
    const double C50123 = C50120 + C50121;
    const double C50143 = C50093 + C50142;
    const double C20281 = C50696 * C14730;
    const double C21670 = C50680 * C14730;
    const double C49216 = C50696 * C14730;
    const double C50150 = C50147 + C50149;
    const double C49995 = C49961 + C49993;
    const double C50081 = C49968 + C50077;
    const double C50124 = C50118 + C50122;
    const double C2539 = C2516 + C2517;
    const double C3271 = C3256 + C3257;
    const double C5332 = C5324 + C5325;
    const double C34909 = C34901 + C34902;
    const double C2733 = C2710 + C2711;
    const double C6046 = C6030 + C6031;
    const double C18957 = C18941 + C18942;
    const double C6453 = C6451 * C2291;
    const double C16170 = C6451 * C50799;
    const double C21396 = C6451 * C50520;
    const double C39015 = C6451 * C25555;
    const double C139 = (4 * (2 * C49869 + C49848 * C49881) +
                         C49848 * (3 * C49881 + C49848 * C49901)) /
                        C49723;
    const double C484 =
        (2 * C49869 + C49848 * C49881 + C49901 * C50070) / C49723;
    const double C486 = (C50034 * (3 * C49881 + C49848 * C49901)) / C49723;
    const double C22278 =
        (5 * (3 * C50393 + C50034 * C50413) +
         C50034 * (4 * C50413 +
                   C50034 * (3 * C50411 +
                             C50034 * (2 * C50034 * C49893 +
                                       C50034 * (C49893 + C49917 * C50070))))) /
        C49723;
    const double C9165 = (4 * (2 * C50054 + C49847 * C50059) +
                          C49847 * (3 * C50059 + C49847 * C50100)) /
                         C49723;
    const double C9319 =
        (2 * C50054 + C49847 * C50059 + C50100 * C50070) / C49723;
    const double C9813 = (C50034 * (3 * C50059 + C49847 * C50100)) / C49723;
    const double C22277 =
        (5 * (3 * C50390 + C50034 * C50406) +
         C50034 * (4 * C50406 +
                   C50034 * (3 * C50404 +
                             C50034 * (2 * C50034 * C49961 +
                                       C50034 * (C49961 + C49983 * C50070))))) /
        C49723;
    const double C49996 = C49994 * ae;
    const double C50174 = C49848 * C49994;
    const double C3521 = 3 * (C50165 + C49967 * C50042) +
                         C49847 * (2 * C50266 + C49847 * C50269);
    const double C3679 = C50165 + C49967 * C50042 + C50269 * C50070;
    const double C4177 = C50034 * (2 * C50266 + C49847 * C50269);
    const double C50320 = C50316 + C50318;
    const double C50365 = C49847 * C50363;
    const double C50858 = C50806 - C50842;
    const double C50859 = C50810 - C50844;
    const double C50860 = C50813 - C50846;
    const double C50861 = C50820 - C50847;
    const double C50862 = C50815 - C50849;
    const double C50863 = C50824 - C50850;
    const double C50865 = C50834 - C50855;
    const double C50856 = C50837 - C50838;
    const double C32283 = C528 * C22723;
    const double C49746 = C50520 - C49744;
    const double C32292 = C529 * C50857;
    const double C32289 = C5520 * C50857;
    const double C32280 = C5519 * C50857;
    const double C32796 = C6045 * C50857;
    const double C33198 = C6451 * C50857;
    const double C33690 = C6949 * C50857;
    const double C34086 = C7363 * C50857;
    const double C106 = (C50799 - C50839) / C49728 - (C50857 * C50516) / C49723;
    const double C32282 = C529 * C50841;
    const double C107 =
        (2 * C50525 + C50857) / C49728 - (C50841 * C50516) / C49723;
    const double C108 = C50841 / C49728 - C50528 / C49732;
    const double C49805 = C50680 - C49802;
    const double C8006 = C7980 + C7981;
    const double C8000 = C7968 + C7969;
    const double C7997 = C7962 + C7963;
    const double C8191 = C8174 + C8175;
    const double C8188 = C8168 + C8169;
    const double C8373 = C8356 + C8357;
    const double C8370 = C8350 + C8351;
    const double C8913 = C8902 + C8903;
    const double C12916 = C12902 + C12903;
    const double C12913 = C12896 + C12897;
    const double C12910 = C12890 + C12891;
    const double C12907 = C12884 + C12885;
    const double C13420 = C13412 + C13413;
    const double C13417 = C13406 + C13407;
    const double C7998 = C7964 + C7965;
    const double C8187 = C8166 + C8167;
    const double C8369 = C8348 + C8349;
    const double C12911 = C12892 + C12893;
    const double C12908 = C12886 + C12887;
    const double C22762 = C22735 + C22736;
    const double C22760 = C22731 + C22732;
    const double C22758 = C22727 + C22728;
    const double C22964 = C22941 + C22942;
    const double C22961 = C22935 + C22936;
    const double C23158 = C23135 + C23136;
    const double C23155 = C23129 + C23130;
    const double C23696 = C23681 + C23682;
    const double C28841 = C28819 + C28820;
    const double C28839 = C28815 + C28816;
    const double C28838 = C28809 + C28810;
    const double C28836 = C28805 + C28806;
    const double C29518 = C29501 + C29502;
    const double C29516 = C29497 + C29498;
    const double C25581 = C25559 * C289;
    const double C25573 = C25559 * C304;
    const double C25567 = C25559 * C288;
    const double C25769 = C25559 * C1103;
    const double C25763 = C25559 * C1109;
    const double C25951 = C25559 * C1564;
    const double C25945 = C25559 * C1570;
    const double C26131 = C25559 * C1102;
    const double C26295 = C25559 * C1563;
    const double C44700 = C25559 * C3681;
    const double C44694 = C25559 * C3686;
    const double C44692 = C25559 * C1572;
    const double C44686 = C25559 * C1565;
    const double C45214 = C25559 * C4184;
    const double C45208 = C25559 * C4179;
    const double C46534 = C25559 * C10211;
    const double C46528 = C25559 * C10208;
    const double C25594 = C50864 * C146;
    const double C25588 = C50864 * C135;
    const double C25586 = C50864 * C133;
    const double C25580 = C50864 * C145;
    const double C25570 = C50864 * C144;
    const double C25564 = C50864 * C131;
    const double C25782 = C50864 * C318;
    const double C25776 = C50864 * C303;
    const double C25774 = C50864 * C298;
    const double C25768 = C50864 * C315;
    const double C25964 = C50864 * C495;
    const double C25958 = C50864 * C480;
    const double C25956 = C50864 * C475;
    const double C25950 = C50864 * C492;
    const double C26134 = C50864 * C314;
    const double C26128 = C50864 * C296;
    const double C26298 = C50864 * C491;
    const double C26292 = C50864 * C473;
    const double C26510 = C50864 * C905;
    const double C26504 = C50864 * C896;
    const double C44705 = C50864 * C478;
    const double C44699 = C50864 * C494;
    const double C44689 = C50864 * C493;
    const double C44683 = C50864 * C477;
    const double C45211 = C50864 * C904;
    const double C45205 = C50864 * C894;
    const double C45619 = C50864 * C1230;
    const double C45613 = C50864 * C1226;
    const double C46123 = C50864 * C1577;
    const double C46117 = C50864 * C1573;
    const double C46531 = C50864 * C1861;
    const double C46525 = C50864 * C1857;
    const double C10767 =
        (C50826 - C50851) / C49728 - (C50864 * C50692) / C49723;
    const double C2348 = C2336 + C2337;
    const double C18434 = C18421 + C18422;
    const double C25590 = C50853 * C294;
    const double C25584 = C50853 * C296;
    const double C25578 = C50853 * C314;
    const double C25572 = C50853 * C315;
    const double C25566 = C50853 * C298;
    const double C25784 = C50853 * C1115;
    const double C25778 = C50853 * C1110;
    const double C25772 = C50853 * C303;
    const double C25766 = C50853 * C318;
    const double C25966 = C50853 * C1229;
    const double C25960 = C50853 * C1224;
    const double C25954 = C50853 * C896;
    const double C25948 = C50853 * C905;
    const double C26130 = C50853 * C305;
    const double C26294 = C50853 * C898;
    const double C26512 = C50853 * C1576;
    const double C26506 = C50853 * C1571;
    const double C44703 = C50853 * C1226;
    const double C44697 = C50853 * C1230;
    const double C44691 = C50853 * C904;
    const double C44685 = C50853 * C894;
    const double C45213 = C50853 * C1577;
    const double C45207 = C50853 * C1573;
    const double C45621 = C50853 * C3690;
    const double C45615 = C50853 * C3687;
    const double C46125 = C50853 * C4188;
    const double C46119 = C50853 * C4185;
    const double C46533 = C50853 * C4590;
    const double C46527 = C50853 * C4587;
    const double C10768 =
        (2 * C50696 + C50864) / C49728 - (C50853 * C50692) / C49723;
    const double C10769 = C50853 / C49728 - C50699 / C49732;
    const double C7990 = C7954 * C136;
    const double C7984 = C7954 * C125;
    const double C7982 = C7954 * C124;
    const double C7976 = C7954 * C134;
    const double C7966 = C7954 * C132;
    const double C7960 = C7954 * C123;
    const double C8178 = C7954 * C304;
    const double C8172 = C7954 * C288;
    const double C8170 = C7954 * C285;
    const double C8164 = C7954 * C297;
    const double C8360 = C7954 * C481;
    const double C8354 = C7954 * C465;
    const double C8352 = C7954 * C462;
    const double C8346 = C7954 * C474;
    const double C8530 = C7954 * C295;
    const double C8524 = C7954 * C284;
    const double C8694 = C7954 * C472;
    const double C8688 = C7954 * C461;
    const double C8906 = C7954 * C897;
    const double C8900 = C7954 * C890;
    const double C12904 = C7954 * C464;
    const double C12898 = C7954 * C479;
    const double C12888 = C7954 * C476;
    const double C12882 = C7954 * C463;
    const double C13410 = C7954 * C895;
    const double C13404 = C7954 * C889;
    const double C13818 = C7954 * C1225;
    const double C13812 = C7954 * C1218;
    const double C14322 = C7954 * C1572;
    const double C14316 = C7954 * C1565;
    const double C14738 = C7954 * C1856;
    const double C14732 = C7954 * C1849;
    const double C176 = C161 + C162;
    const double C2341 = C2318 + C2319;
    const double C12915 = C12900 + C12901;
    const double C13825 = C13814 + C13815;
    const double C17090 = C17084 + C17085;
    const double C18954 = C18935 + C18936;
    const double C19874 = C19862 + C19863;
    const double C30050 = C30043 + C30044;
    const double C13418 = C13408 + C13409;
    const double C14329 = C14318 + C14319;
    const double C19871 = C19856 + C19857;
    const double C30708 = C30701 + C30702;
    const double C14745 = C14734 + C14735;
    const double C16588 = C16581 + C16582;
    const double C18425 = C18401 + C18402;
    const double C19361 = C19351 + C19352;
    const double C31238 = C31231 + C31232;
    const double C22003 = C6948 * C10776;
    const double C15641 = C531 * C49742;
    const double C21051 = C531 * C10776;
    const double C38492 = C531 * C25561;
    const double C16167 = C922 * C49742;
    const double C21399 = C922 * C10776;
    const double C39012 = C922 * C25561;
    const double C35110 = C2730 + C2731;
    const double C35107 = C2731 + C2730;
    const double C21395 = C6450 * C10776;
    const double C18433 = C18419 + C18420;
    const double C21057 = C21043 + C21044;
    const double C178 = C165 + C166;
    const double C2344 = C2324 + C2325;
    const double C349 = C326 + C327;
    const double C2342 = C2320 + C2321;
    const double C2896 = C2888 + C2889;
    const double C8009 = C7986 + C7987;
    const double C22767 = C22745 + C22746;
    const double C356 = C340 + C341;
    const double C2542 = C2522 + C2523;
    const double C2532 = C2502 + C2503;
    const double C8005 = C7978 + C7979;
    const double C8537 = C8526 + C8527;
    const double C22957 = C22927 + C22928;
    const double C526 = C503 + C504;
    const double C3056 = C3048 + C3049;
    const double C533 = C517 + C518;
    const double C2736 = C2716 + C2717;
    const double C924 = C914 + C915;
    const double C2726 = C2696 + C2697;
    const double C3274 = C3262 + C3263;
    const double C8701 = C8690 + C8691;
    const double C23151 = C23121 + C23122;
    const double C148 =
        (4 * (2 * C49880 + ae * C49881 + C49848 * C49900) +
         ae * (3 * C49881 + C49848 * C49901) +
         C49848 * (3 * C49900 + ae * C49901 +
                   C49848 * (2 * C49896 + ae * C49897 +
                             C49848 * (C49892 + ae * C49848 * C49893 +
                                       C49848 * (ae * C49893 +
                                                 C49848 * std::pow(C49852, 7) *
                                                     bs[7] * C49858))))) /
        C49727;
    const double C313 =
        (ae * (2 * (C49848 * C49935 + C49932 * ae) +
               C49848 *
                   (C49935 +
                    C49848 * (C49848 * C49871 * C49872 * C49931 + C49933 * ae) +
                    C49848 * C49933 * ae) +
               (C49932 + C49933 * C49873) * ae) +
         C49847 * (2 * C49880 + ae * C49881 + C49848 * C49900)) /
        C49727;
    const double C490 =
        ((zP - zQ) * (2 * C49880 + ae * C49881 + C49848 * C49900)) / C49727;
    const double C496 = (C49866 + ae * C49869 + C49848 * C49880 +
                         C49900 * std::pow(zP - zQ, 2)) /
                        C49727;
    const double C8359 = C7951 * C3685;
    const double C15484 = C50680 * C3685;
    const double C18944 = C50696 * C3685;
    const double C25962 = C25554 * C3685;
    const double C29508 = C50696 * C3685;
    const double C16174 = C50680 * C4585;
    const double C18408 = C50696 * C4585;
    const double C28830 = C50696 * C4585;
    const double C15644 = C5522 * C49742;
    const double C21053 = C5522 * C10776;
    const double C38495 = C5522 * C25561;
    const double C50335 = C50333 + C50328;
    const double C22287 = C22283 + C22284;
    const double C350 = C328 + C329;
    const double C2339 = C2314 + C2315;
    const double C2531 = C2500 + C2501;
    const double C8003 = C7974 + C7975;
    const double C22764 = C22739 + C22740;
    const double C355 = C338 + C339;
    const double C2540 = C2518 + C2519;
    const double C2534 = C2506 + C2507;
    const double C8001 = C7970 + C7971;
    const double C8185 = C8162 + C8163;
    const double C22959 = C22931 + C22932;
    const double C527 = C505 + C506;
    const double C2725 = C2694 + C2695;
    const double C532 = C515 + C516;
    const double C2734 = C2712 + C2713;
    const double C923 = C912 + C913;
    const double C2728 = C2700 + C2701;
    const double C3272 = C3258 + C3259;
    const double C8367 = C8344 + C8345;
    const double C23153 = C23125 + C23126;
    const double C14748 = C14740 + C14741;
    const double C16589 = C16583 + C16584;
    const double C18423 = C18397 + C18398;
    const double C19363 = C19355 + C19356;
    const double C31240 = C31235 + C31236;
    const double C21058 = C21045 + C21046;
    const double C22282 = C21046 + C21045;
    const double C49956 = C49955 + C49951;
    const double C3689 = (C49880 + ae * C50047 + C49847 * C50051 +
                          (C49896 + ae * C49847 * C49968 +
                           C49847 * (ae * C49968 + C49847 * C49920)) *
                              std::pow(C50034, 2)) /
                         C49727;
    const double C4589 = (2 * C50034 * C50051 +
                          C50034 * (C50051 + (ae * C49968 + C49847 * C49920) *
                                                 std::pow(C50034, 2))) /
                         C49727;
    const double C2714 = C2295 * C1223;
    const double C6032 = C117 * C1223;
    const double C8362 = C7955 * C1223;
    const double C18945 = C2294 * C1223;
    const double C23139 = C22720 * C1223;
    const double C2541 = C2520 + C2521;
    const double C8194 = C8180 + C8181;
    const double C8184 = C8160 + C8161;
    const double C22966 = C22945 + C22946;
    const double C3273 = C3260 + C3261;
    const double C5333 = C5326 + C5327;
    const double C8366 = C8342 + C8343;
    const double C8916 = C8908 + C8909;
    const double C23698 = C23685 + C23686;
    const double C34911 = C34905 + C34906;
    const double C5523 = C5500 + C5501;
    const double C18429 = C18409 + C18410;
    const double C12912 = C12894 + C12895;
    const double C13828 = C13820 + C13821;
    const double C17091 = C17086 + C17087;
    const double C18956 = C18939 + C18940;
    const double C19876 = C19866 + C19867;
    const double C30052 = C30047 + C30048;
    const double C13421 = C13414 + C13415;
    const double C14332 = C14324 + C14325;
    const double C19873 = C19860 + C19861;
    const double C30710 = C30705 + C30706;
    const double C9168 =
        (4 * (2 * C50058 + ae * C50059 + C49847 * C50099) +
         ae * (3 * C50059 + C49847 * C50100) +
         C49847 *
             (3 * C50099 + ae * C50100 +
              C49847 * (2 * C50093 + ae * C50095 +
                        C49847 * (C49892 + ae * C49847 * C49961 +
                                  C49847 * (ae * C49961 + C49847 * C49916))))) /
        C49727;
    const double C9322 =
        (2 * C50058 + ae * C50059 + C49847 * C50099 +
         (2 * C50093 + ae * C50095 +
          C49847 * (C49892 + ae * C49847 * C49961 +
                    C49847 * (ae * C49961 + C49847 * C49916))) *
             C50070) /
        C49727;
    const double C9816 =
        (C50034 *
         (3 * C50099 + ae * C50100 +
          C49847 * (2 * C50093 + ae * C50095 +
                    C49847 * (C49892 + ae * C49847 * C49961 +
                              C49847 * (ae * C49961 + C49847 * C49916))))) /
        C49727;
    const double C10214 =
        (2 * C50034 * C50099 +
         C50034 * (C50099 + (C49892 + ae * C49847 * C49961 +
                             C49847 * (ae * C49961 + C49847 * C49916)) *
                                C50070)) /
        C49727;
    const double C22288 = C22285 + C22286;
    const double C22281 = C21047 + C21048;
    const double C3525 =
        (3 * (C49881 + C49847 * C50268 + C50266 * ae) +
         C49847 * (2 * C50268 +
                   C49847 * (C49897 + C49847 * (C49847 * C49921 + C49991) +
                             C49847 * C49989 * ae) +
                   C50269 * ae) +
         (2 * C50266 + C49847 * C50269) * ae) /
        C49723;
    const double C3683 =
        (C49881 + C49847 * C50268 + C50266 * ae +
         (C49897 + C49847 * (C49847 * C49921 + C49991) + C49847 * C49989 * ae) *
             C50070) /
        C49723;
    const double C4181 =
        (C50034 * (2 * C50268 +
                   C49847 * (C49897 + C49847 * (C49847 * C49921 + C49991) +
                             C49847 * C49989 * ae) +
                   C50269 * ae)) /
        C49723;
    const double C4583 =
        (2 * C50034 * C50268 +
         C50034 * (C50268 + (C49847 * C49921 + C49991) * C50070)) /
        C49723;
    const double C2525 = C50696 * C1108;
    const double C8529 = C7951 * C1108;
    const double C22950 = C50696 * C1108;
    const double C26132 = C25554 * C1108;
    const double C2719 = C50696 * C1222;
    const double C6035 = C50680 * C1222;
    const double C23144 = C50696 * C1222;
    const double C3265 = C50696 * C1569;
    const double C5329 = C50680 * C1569;
    const double C8693 = C7951 * C1569;
    const double C23690 = C50696 * C1569;
    const double C26296 = C25554 * C1569;
    const double C307 =
        (2 * C49869 + C49848 * C49881 +
         C49847 * (C49847 * C49901 + C50171 * ae) + C49847 * C50171 * ae) /
        C49723;
    const double C309 = (C49847 * (3 * C49881 + C49848 * C49901) +
                         (3 * C50165 + C49848 * C50171) * ae) /
                        C49723;
    const double C900 = (C50034 * (C49847 * C49901 + C50171 * ae)) / C49723;
    const double C127 = 4 * (2 * C50163 + C49848 * C50165) +
                        C49848 * (3 * C50165 + C49848 * C50171);
    const double C290 = 2 * C50163 + C49848 * C50165 + C50171 * C50042;
    const double C291 = C49847 * (3 * C50165 + C49848 * C50171);
    const double C467 = 2 * C50163 + C49848 * C50165 + C50171 * C50070;
    const double C468 = C50034 * (3 * C50165 + C49848 * C50171);
    const double C892 = C50034 * C49847 * C50171;
    const double C1101 =
        2 * C49847 * C50171 + C49847 * (C50171 + C49994 * C50042);
    const double C1215 = C49847 * C50171 + C49847 * C49994 * C50070;
    const double C1562 = C50034 * (C50171 + C49994 * C50042);
    const double C1846 =
        2 * C50034 * C50171 + C50034 * (C50171 + C49994 * C50070);
    const double C2718 = C2295 * C1216;
    const double C6034 = C117 * C1216;
    const double C23143 = C22720 * C1216;
    const double C5524 = C5502 + C5503;
    const double C50319 = C49883 + C50317;
    const double C8177 = C7951 * C3527;
    const double C25780 = C25554 * C3527;
    const double C8905 = C7951 * C4183;
    const double C26508 = C25554 * C4183;
    const double C28600 = C50696 * C4183;
    const double C34904 = C50696 * C4183;
    const double C8176 = C7956 * C3522;
    const double C25779 = C25559 * C3522;
    const double C8358 = C7956 * C3680;
    const double C15483 = C117 * C3680;
    const double C18943 = C2295 * C3680;
    const double C25961 = C25559 * C3680;
    const double C29507 = C22720 * C3680;
    const double C8904 = C7956 * C4178;
    const double C26507 = C25559 * C4178;
    const double C28599 = C22720 * C4178;
    const double C34903 = C2295 * C4178;
    const double C17497 = C15664 * C49742;
    const double C21055 = C15664 * C10776;
    const double C40310 = C15664 * C25561;
    const double C49972 = C49971 + C49966;
    const double C3531 =
        (3 * (C49880 + ae * C50047 + C49847 * C50051) +
         ae * (2 * C50047 + C49847 * C50052) +
         C49847 * (2 * C50051 + ae * C50052 +
                   C49847 * (C49896 + ae * C49847 * C49968 +
                             C49847 * (ae * C49968 + C49847 * C49920)))) /
        C49727;
    const double C4187 =
        (C50034 * (2 * C50051 + ae * C50052 +
                   C49847 * (C49896 + ae * C49847 * C49968 +
                             C49847 * (ae * C49968 + C49847 * C49920)))) /
        C49727;
    const double C3526 = (3 * (C49945 + C49953 * C50042) +
                          C49847 * (2 * C50047 + C49847 * C50052)) /
                         C49723;
    const double C3684 = (C49945 + C49953 * C50042 + C50052 * C50070) / C49723;
    const double C4182 = (C50034 * (2 * C50047 + C49847 * C50052)) / C49723;
    const double C50082 = C49896 + C50078;
    const double C16175 = C117 * C4584;
    const double C18411 = C2295 * C4584;
    const double C28833 = C22720 * C4584;
    const double C17485 =
        (4 * (2 * C50034 * C49953 + C50034 * C50384) +
         C50034 *
             (3 * C50384 + C50034 * (2 * C50034 * C49968 +
                                     C50034 * (C49968 + C49990 * C50070)))) /
        C49723;
    const double C50364 = C50362 + C50357;
    const double C20269 =
        (4 * (2 * C50034 * C50327 + C50034 * C50399) +
         C50034 * (3 * C50399 +
                   C50034 * (2 * C50034 * C50356 +
                             C50034 * (C50356 +
                                       (C49847 * C49917 + C49984) * C50070)))) /
        C49723;
    const double C20285 = C20276 + C20277;
    const double C21673 = C21667 + C21668;
    const double C49220 = C49211 + C49212;
    const double C9162 = 4 * (2 * C50280 + C49847 * C50283) +
                         C49847 * (3 * C50283 + C49847 * C50334);
    const double C9316 = 2 * C50280 + C49847 * C50283 + C50334 * C50070;
    const double C9810 = C50034 * (3 * C50283 + C49847 * C50334);
    const double C12161 =
        2 * C50034 * C50334 + C50034 * (C50334 + C50363 * C50070);
    const double C22276 =
        5 * (3 * C50499 + C50034 * C50509) +
        C50034 * (4 * C50509 +
                  C50034 * (3 * C50507 +
                            C50034 * (2 * C50034 * C49960 +
                                      C50034 * (C49960 + C49981 * C50070))));
    const double C49927 = C49848 * C49925;
    const double C1851 =
        (2 * C50034 * C49901 + C50034 * (C49901 + C49925 * C50070)) / C49723;
    const double C49926 = C49848 * C49924;
    const double C50041 = C49847 * C49924;
    const double C1859 = (2 * C50034 * C49900 +
                          C50034 * (C49900 + C49924 * std::pow(C50034, 2))) /
                         C49727;
    const double C7350 =
        (3 * (C49900 + C49924 * C50070) +
         C50034 * (2 * C50034 * C49924 +
                   C50034 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50070))) /
        C49727;
    const double C50083 = C49847 * C50079;
    const double C16579 =
        (3 * (C50051 + C50079 * C50070) +
         C50034 * (2 * C50034 * C50079 +
                   C50034 * (C50079 + (ae * C49990 +
                                       C49847 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50070))) /
        C49727;
    const double C17489 =
        (4 * (2 * C50034 * C49896 + C50034 * C50137) +
         C50034 * (3 * C50137 +
                   C50034 * (2 * C50034 * C49920 +
                             C50034 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50070)))) /
        C49727;
    const double C15665 = C15649 + C15650;
    const double C50125 = C49847 * C50123;
    const double C14729 =
        (3 * (C50099 + C50123 * C50070) +
         C50034 * (2 * C50034 * C50123 +
                   C50034 * (C50123 + (C49916 + ae * C49847 * C49983 +
                                       C49847 * (ae * C49983 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50070))) /
        C49727;
    const double C20270 =
        (4 * (2 * C50034 * C50093 + C50034 * C50143) +
         C50034 * (3 * C50143 +
                   C50034 * (2 * C50034 * C50117 +
                             C50034 * (C50117 + (ae * C49983 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50070)))) /
        C49727;
    const double C20287 = C20280 + C20281;
    const double C21674 = C21669 + C21670;
    const double C49222 = C49215 + C49216;
    const double C22279 =
        (5 * (3 * C50140 + C50034 * C50150) +
         C50034 * (4 * C50150 +
                   C50034 * (3 * C50148 +
                             C50034 * (2 * C50034 * C49916 +
                                       C50034 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50070))))) /
        C49727;
    const double C49997 = C49995 + C49988;
    const double C50084 = C49847 * C50081;
    const double C10209 =
        (2 * C50034 * C50052 + C50034 * (C50052 + C50081 * C50070)) / C49723;
    const double C50126 = C49847 * C50124;
    const double C12162 =
        (2 * C50034 * C50100 + C50034 * (C50100 + C50124 * C50070)) / C49723;
    const double C35764 = C3271 + C3270;
    const double C35761 = C3270 + C3271;
    const double C17082 = C5332 * C49742;
    const double C39911 = C5332 * C25561;
    const double C18414 = C2733 + C2732;
    const double C35111 = C2732 + C2733;
    const double C16171 = C6046 * C49742;
    const double C21401 = C6046 * C10776;
    const double C39016 = C6046 * C25561;
    const double C168 = C50680 * C139;
    const double C522 = C50680 * C484;
    const double C755 = C50680 * C486;
    const double C13822 = C7956 * C9319;
    const double C19868 = C2295 * C9319;
    const double C45622 = C25559 * C9319;
    const double C48811 = C22720 * C9319;
    const double C14326 = C7956 * C9813;
    const double C46126 = C25559 * C9813;
    const double C1106 =
        (2 * (C49847 * C49901 + C50171 * ae) +
         C49847 * (C49901 + C49847 * (C49847 * C49925 + C49996) +
                   C49847 * C49994 * ae) +
         (C50171 + C49994 * C50042) * ae) /
        C49723;
    const double C1220 =
        (C49847 * C49901 + C50171 * ae + (C49847 * C49925 + C49996) * C50070) /
        C49723;
    const double C1567 =
        (C50034 * (C49901 + C49847 * (C49847 * C49925 + C49996) +
                   C49847 * C49994 * ae)) /
        C49723;
    const double C50175 = C50173 + C50174;
    const double C9161 = 4 * (2 * C50273 + C49847 * C50276) +
                         C49847 * (3 * C50276 + C49847 * C50320);
    const double C9315 = 2 * C50273 + C49847 * C50276 + C50320 * C50070;
    const double C9809 = C50034 * (3 * C50276 + C49847 * C50320);
    const double C50367 = C50355 + C50365;
    const double C113 = (C50858 * C50544) / C50541 + (C50808 - C50843) / C50543;
    const double C114 =
        (C50859 * C50544) / C50541 + (2 * C50555 + C50858) / C50543;
    const double C115 = (C50544 * C50555) / C50558 + C50859 / C50543;
    const double C1096 =
        (C50860 * C50615) / C50541 + (C50816 - C50845) / C50543;
    const double C1097 =
        (C50861 * C50615) / C50541 + (2 * C50620 + C50860) / C50543;
    const double C1098 = (C50615 * C50620) / C50558 + C50861 / C50543;
    const double C1842 =
        (C50862 * C50643) / C50541 + (C50817 - C50848) / C50543;
    const double C1843 =
        (C50863 * C50643) / C50541 + (2 * C50648 + C50862) / C50543;
    const double C1844 = (C50643 * C50648) / C50558 + C50863 / C50543;
    const double C20840 =
        (C50828 - C50854) / C49728 - (C50865 * C50718) / C49723;
    const double C20841 =
        (2 * C50722 + C50865) / C49728 - (C50856 * C50718) / C49723;
    const double C20842 = C50856 / C49728 - C50725 / C49732;
    const double C49747 = C49746 * ae;
    const double C2296 =
        ((-C49722 / C49723) / C49728 - (C49735 * be) / C49723) / C49728 -
        ((C49721 * ((-C49724 / C49723) / C49728 - (C49746 * be) / C49723) +
          C25555) *
         be) /
            C49723 +
        (-C49737 / C49723) / C49728 - (0 * be) / C49723;
    const double C2297 =
        ((-C49724 / C49723) / C49728 - (C49746 * be) / C49723) / C49728 -
        ((C49721 * ((-C49737 / C49723) / C49728 - (0 * be) / C49723) + C50525) *
         be) /
            C49723;
    const double C25560 = (-C49724 / C49723) / C49728 - (C49746 * be) / C49723;
    const double C49808 = C49805 * ae;
    const double C22719 = (-C49776 / C49723) / C49728 - (C49805 * be) / C49723;
    const double C25608 = C25581 + C25582;
    const double C25604 = C25573 + C25574;
    const double C25601 = C25567 + C25568;
    const double C25790 = C25769 + C25770;
    const double C25787 = C25763 + C25764;
    const double C25972 = C25951 + C25952;
    const double C25969 = C25945 + C25946;
    const double C44715 = C44700 + C44701;
    const double C44712 = C44694 + C44695;
    const double C44711 = C44692 + C44693;
    const double C44708 = C44686 + C44687;
    const double C45221 = C45214 + C45215;
    const double C45218 = C45208 + C45209;
    const double C18437 = C18434 * C50520;
    const double C8011 = C7990 + C7991;
    const double C8008 = C7984 + C7985;
    const double C8007 = C7982 + C7983;
    const double C8004 = C7976 + C7977;
    const double C7999 = C7966 + C7967;
    const double C7996 = C7960 + C7961;
    const double C8193 = C8178 + C8179;
    const double C8190 = C8172 + C8173;
    const double C8189 = C8170 + C8171;
    const double C8186 = C8164 + C8165;
    const double C8375 = C8360 + C8361;
    const double C8372 = C8354 + C8355;
    const double C8371 = C8352 + C8353;
    const double C8368 = C8346 + C8347;
    const double C8539 = C8530 + C8531;
    const double C8536 = C8524 + C8525;
    const double C8703 = C8694 + C8695;
    const double C8700 = C8688 + C8689;
    const double C8915 = C8906 + C8907;
    const double C8912 = C8900 + C8901;
    const double C12917 = C12904 + C12905;
    const double C12914 = C12898 + C12899;
    const double C12909 = C12888 + C12889;
    const double C12906 = C12882 + C12883;
    const double C13419 = C13410 + C13411;
    const double C13416 = C13404 + C13405;
    const double C13827 = C13818 + C13819;
    const double C13824 = C13812 + C13813;
    const double C14331 = C14322 + C14323;
    const double C14328 = C14316 + C14317;
    const double C14747 = C14738 + C14739;
    const double C14744 = C14732 + C14733;
    const double C22005 = C17090 * C10776;
    const double C19360 = C18954 + C18953;
    const double C21397 = C16588 * C10776;
    const double C20273 = C18425 + C18426;
    const double C21672 = C21396 + C21395;
    const double C18436 = C18433 * C10776;
    const double C2351 = C2342 + C2343;
    const double C2887 = C2532 + C2533;
    const double C5510 = C526 * C2298;
    const double C15965 = C526 * C49742;
    const double C32295 = C526 * C22723;
    const double C38810 = C526 * C25561;
    const double C5491 = C533 * C2298;
    const double C15657 = C533 * C49742;
    const double C21259 = C533 * C10776;
    const double C32286 = C533 * C22723;
    const double C38504 = C533 * C25561;
    const double C6028 = C924 * C2298;
    const double C16179 = C924 * C49742;
    const double C32799 = C924 * C22723;
    const double C39020 = C924 * C25561;
    const double C3047 = C2726 + C2727;
    const double C35501 = C2727 + C2726;
    const double C170 = C50680 * C148;
    const double C325 = C50680 * C313;
    const double C2317 = C50696 * C313;
    const double C2893 = C50826 * C313;
    const double C7993 = C7950 * C313;
    const double C22742 = C50696 * C313;
    const double C23318 = C22714 * C313;
    const double C25596 = C50853 * C313;
    const double C502 = C50680 * C490;
    const double C3053 = C50826 * C490;
    const double C23478 = C22714 * C490;
    const double C520 = C50680 * C496;
    const double C2721 = C50826 * C496;
    const double C23146 = C22714 * C496;
    const double C16185 = C16173 + C16174;
    const double C18428 = C18407 + C18408;
    const double C28844 = C28829 + C28830;
    const double C9166 =
        (4 * (2 * C50282 + C49847 * C50335 + C50283 * ae) +
         C49847 *
             (3 * C50335 +
              C49847 * (2 * C50327 +
                        C49847 * (C49877 + C49847 * (C49847 * C49893 + C49962) +
                                  C49847 * C49960 * ae) +
                        C50329 * ae) +
              C50334 * ae) +
         (3 * C50283 + C49847 * C50334) * ae) /
        C49723;
    const double C9320 =
        (2 * C50282 + C49847 * C50335 + C50283 * ae +
         (2 * C50327 +
          C49847 * (C49877 + C49847 * (C49847 * C49893 + C49962) +
                    C49847 * C49960 * ae) +
          C50329 * ae) *
             C50070) /
        C49723;
    const double C9814 =
        (C50034 *
         (3 * C50335 +
          C49847 * (2 * C50327 +
                    C49847 * (C49877 + C49847 * (C49847 * C49893 + C49962) +
                              C49847 * C49960 * ae) +
                    C50329 * ae) +
          C50334 * ae)) /
        C49723;
    const double C10212 =
        (2 * C50034 * C50335 +
         C50034 * (C50335 + (C49877 + C49847 * (C49847 * C49893 + C49962) +
                             C49847 * C49960 * ae) *
                                C50070)) /
        C49723;
    const double C22289 = C22287 * C10776;
    const double C2349 = C2338 + C2339;
    const double C5509 = C527 * C2292;
    const double C5489 = C527 * C2293;
    const double C5823 = C527 * C2291;
    const double C15654 = C527 * C50525;
    const double C15964 = C527 * C50799;
    const double C21258 = C527 * C50520;
    const double C32294 = C527 * C50841;
    const double C32284 = C527 * C22718;
    const double C32596 = C527 * C50857;
    const double C38501 = C527 * C50525;
    const double C38809 = C527 * C25555;
    const double C5513 = C532 * C2291;
    const double C5492 = C532 * C2292;
    const double C15656 = C532 * C50799;
    const double C15642 = C532 * C50525;
    const double C21052 = C532 * C50520;
    const double C32298 = C532 * C50857;
    const double C32287 = C532 * C50841;
    const double C38503 = C532 * C25555;
    const double C38493 = C532 * C50525;
    const double C6039 = C923 * C2291;
    const double C6027 = C923 * C2292;
    const double C16178 = C923 * C50799;
    const double C16168 = C923 * C50525;
    const double C21400 = C923 * C50520;
    const double C32802 = C923 * C50857;
    const double C32798 = C923 * C50841;
    const double C39019 = C923 * C25555;
    const double C39013 = C923 * C50525;
    const double C35109 = C2728 + C2729;
    const double C35108 = C2729 + C2728;
    const double C16592 = C16589 * C50799;
    const double C21398 = C16589 * C50520;
    const double C39417 = C16589 * C25555;
    const double C20272 = C18423 + C18424;
    const double C319 =
        (C49866 + ae * C49869 + C49848 * C49880 + ae * C49847 * C49956 +
         C49847 * (ae * C49956 + C49847 * C49900)) /
        C49727;
    const double C906 = ((zP - zQ) * (ae * C49956 + C49847 * C49900)) / C49727;
    const double C137 = (3 * (C49941 + C49848 * C49945 + C50163 * ae) +
                         C49848 * (2 * C49945 + C49848 * C49956 + C50165 * ae) +
                         (2 * C50163 + C49848 * C50165) * ae) /
                        C49723;
    const double C293 =
        (C49847 * (2 * C49945 + C49848 * C49956 + C50165 * ae)) / C49723;
    const double C306 =
        (C49941 + C49848 * C49945 + C50163 * ae + C49956 * C50042) / C49723;
    const double C470 =
        (C50034 * (2 * C49945 + C49848 * C49956 + C50165 * ae)) / C49723;
    const double C483 =
        (C49941 + C49848 * C49945 + C50163 * ae + C49956 * C50070) / C49723;
    const double C899 = (C50034 * C49847 * C49956) / C49723;
    const double C8365 = C7951 * C3689;
    const double C15486 = C50680 * C3689;
    const double C18948 = C50696 * C3689;
    const double C25968 = C25554 * C3689;
    const double C29512 = C50696 * C3689;
    const double C16176 = C50680 * C4589;
    const double C18412 = C50696 * C4589;
    const double C28834 = C50696 * C4589;
    const double C2735 = C2714 + C2715;
    const double C6047 = C6032 + C6033;
    const double C8376 = C8362 + C8363;
    const double C18959 = C18945 + C18946;
    const double C23160 = C23139 + C23140;
    const double C35763 = C3273 + C3272;
    const double C35762 = C3272 + C3273;
    const double C6945 = C5333 * C2292;
    const double C17083 = C5333 * C50525;
    const double C33692 = C5333 * C50841;
    const double C39912 = C5333 * C50525;
    const double C7359 = C5523 * C2292;
    const double C15660 = C5523 * C50799;
    const double C15643 = C5523 * C50525;
    const double C21054 = C5523 * C50520;
    const double C34088 = C5523 * C50841;
    const double C38507 = C5523 * C25555;
    const double C38494 = C5523 * C50525;
    const double C17093 = C17091 * C50799;
    const double C22006 = C17091 * C50520;
    const double C39914 = C17091 * C25555;
    const double C19359 = C18956 + C18955;
    const double C13823 = C7951 * C9322;
    const double C19869 = C50696 * C9322;
    const double C45623 = C25554 * C9322;
    const double C48812 = C50696 * C9322;
    const double C14327 = C7951 * C9816;
    const double C46127 = C25554 * C9816;
    const double C14743 = C7951 * C10214;
    const double C19358 = C50696 * C10214;
    const double C22010 = C50680 * C10214;
    const double C46535 = C25554 * C10214;
    const double C48309 = C50696 * C10214;
    const double C22290 = C22288 * C50520;
    const double C2543 = C2524 + C2525;
    const double C8538 = C8528 + C8529;
    const double C22968 = C22949 + C22950;
    const double C26141 = C26131 + C26132;
    const double C3275 = C3264 + C3265;
    const double C5334 = C5328 + C5329;
    const double C8702 = C8692 + C8693;
    const double C23700 = C23689 + C23690;
    const double C26305 = C26295 + C26296;
    const double C345 = C50680 * C307;
    const double C2891 = C50696 * C307;
    const double C7989 = C7951 * C307;
    const double C23316 = C50696 * C307;
    const double C25592 = C25554 * C307;
    const double C645 = C50680 * C309;
    const double C2327 = C50696 * C309;
    const double C22752 = C50696 * C309;
    const double C919 = C50680 * C900;
    const double C3051 = C50696 * C900;
    const double C23476 = C50696 * C900;
    const double C167 = C117 * C127;
    const double C344 = C117 * C290;
    const double C2890 = C2295 * C290;
    const double C7988 = C7956 * C290;
    const double C23315 = C22720 * C290;
    const double C25591 = C25559 * C290;
    const double C644 = C117 * C291;
    const double C2326 = C2295 * C291;
    const double C22751 = C22720 * C291;
    const double C521 = C117 * C467;
    const double C754 = C117 * C468;
    const double C918 = C117 * C892;
    const double C3050 = C2295 * C892;
    const double C23475 = C22720 * C892;
    const double C2737 = C2718 + C2719;
    const double C6048 = C6034 + C6035;
    const double C23162 = C23143 + C23144;
    const double C7360 = C5524 * C2298;
    const double C15661 = C5524 * C49742;
    const double C21261 = C5524 * C10776;
    const double C34089 = C5524 * C22723;
    const double C38508 = C5524 * C25561;
    const double C50321 = C50319 + C50314;
    const double C8192 = C8176 + C8177;
    const double C25795 = C25779 + C25780;
    const double C8374 = C8358 + C8359;
    const double C15487 = C15483 + C15484;
    const double C18958 = C18943 + C18944;
    const double C25977 = C25961 + C25962;
    const double C29520 = C29507 + C29508;
    const double C8914 = C8904 + C8905;
    const double C26517 = C26507 + C26508;
    const double C28606 = C28599 + C28600;
    const double C34910 = C34903 + C34904;
    const double C49973 = C49848 * C49972;
    const double C49978 = 3 * C49972;
    const double C50040 = ae * C49972;
    const double C50039 = C49847 * C49972;
    const double C1114 = (2 * (ae * C49956 + C49847 * C49900) +
                          ae * (C49956 + C49972 * std::pow(C49847, 2)) +
                          C49847 * (C49900 + ae * C49847 * C49972 +
                                    C49847 * (ae * C49972 + C49847 * C49924))) /
                         C49727;
    const double C1228 =
        (ae * C49956 + C49847 * C49900 +
         (ae * C49972 + C49847 * C49924) * std::pow(zP - zQ, 2)) /
        C49727;
    const double C1575 =
        ((zP - zQ) * (C49900 + ae * C49847 * C49972 +
                      C49847 * (ae * C49972 + C49847 * C49924))) /
        C49727;
    const double C1107 =
        (2 * C49847 * C49956 + C49847 * (C49956 + C49972 * C50042)) / C49723;
    const double C1568 = (C50034 * (C49956 + C49972 * C50042)) / C49723;
    const double C1852 =
        (2 * C50034 * C49956 + C50034 * (C49956 + C49972 * C50070)) / C49723;
    const double C8183 = C7951 * C3531;
    const double C25786 = C25554 * C3531;
    const double C8911 = C7951 * C4187;
    const double C26514 = C25554 * C4187;
    const double C28604 = C50696 * C4187;
    const double C34908 = C50696 * C4187;
    const double C8182 = C7956 * C3526;
    const double C25785 = C25559 * C3526;
    const double C8364 = C7956 * C3684;
    const double C15485 = C117 * C3684;
    const double C18947 = C2295 * C3684;
    const double C25967 = C25559 * C3684;
    const double C29511 = C22720 * C3684;
    const double C8910 = C7956 * C4182;
    const double C26513 = C25559 * C4182;
    const double C28603 = C22720 * C4182;
    const double C34907 = C2295 * C4182;
    const double C50366 = C49847 * C50364;
    const double C14727 =
        (3 * (C50335 + C50364 * C50070) +
         C50034 *
             (2 * C50034 * C50364 +
              C50034 * (C50364 + (C49893 + C49847 * (C49847 * C49917 + C49984) +
                                  C49847 * C49981 * ae) *
                                     C50070))) /
        C49723;
    const double C21675 = C21673 * C10776;
    const double C13816 = C7956 * C9316;
    const double C19864 = C2295 * C9316;
    const double C45616 = C25559 * C9316;
    const double C48807 = C22720 * C9316;
    const double C14320 = C7956 * C9810;
    const double C46120 = C25559 * C9810;
    const double C49929 = C49909 + C49927;
    const double C49928 = C49910 + C49926;
    const double C5505 = C50680 * C1859;
    const double C50085 = C50082 + C50083;
    const double C17498 = C15665 * C50525;
    const double C21056 = C15665 * C50520;
    const double C40311 = C15665 * C50525;
    const double C50127 = C50115 + C50125;
    const double C21676 = C21674 * C50520;
    const double C49998 = C49848 * C49997;
    const double C50044 = C49997 * C50042;
    const double C7344 =
        (3 * (C49956 + C49972 * C50070) +
         C50034 * (2 * C50034 * C49972 + C50034 * (C49972 + C49997 * C50070))) /
        C49723;
    const double C50086 = C50080 + C50084;
    const double C50128 = C50113 + C50126;
    const double C18432 = C18414 * C10776;
    const double C128 = 5 * (3 * C50165 + C49848 * C50171) +
                        C49848 * (4 * C50171 + C49848 * C50175);
    const double C292 = 3 * C50165 + C49848 * C50171 + C50175 * C50042;
    const double C469 = 3 * C50165 + C49848 * C50171 + C50175 * C50070;
    const double C639 = C49847 * (4 * C50171 + C49848 * C50175);
    const double C749 = C50034 * (4 * C50171 + C49848 * C50175);
    const double C893 = C50034 * C49847 * C50175;
    const double C11463 = 5 * (3 * C50283 + C49847 * C50334) +
                          C49847 * (4 * C50334 + C49847 * C50367);
    const double C11565 = 3 * C50283 + C49847 * C50334 + C50367 * C50070;
    const double C11895 = C50034 * (4 * C50334 + C49847 * C50367);
    const double C49748 = C49747 / C49723;
    const double C5512 = C531 * C2296;
    const double C5506 = C530 * C2296;
    const double C5529 = C5521 * C2296;
    const double C5526 = C5518 * C2296;
    const double C5822 = C528 * C2296;
    const double C6038 = C922 * C2296;
    const double C6050 = C6044 * C2296;
    const double C6452 = C6450 * C2296;
    const double C6950 = C6948 * C2296;
    const double C7364 = C7362 * C2296;
    const double C5514 = C533 * C2297;
    const double C5508 = C528 * C2297;
    const double C5493 = C531 * C2297;
    const double C5486 = C530 * C2297;
    const double C5824 = C526 * C2297;
    const double C6040 = C924 * C2297;
    const double C6026 = C922 * C2297;
    const double C6446 = C6046 * C2297;
    const double C6944 = C5332 * C2297;
    const double C7358 = C5522 * C2297;
    const double C38506 = C5522 * C25560;
    const double C38502 = C531 * C25560;
    const double C38498 = C530 * C25560;
    const double C38497 = C7362 * C25560;
    const double C38490 = C5521 * C25560;
    const double C38486 = C5518 * C25560;
    const double C38812 = C533 * C25560;
    const double C38808 = C528 * C25560;
    const double C39022 = C6046 * C25560;
    const double C39018 = C922 * C25560;
    const double C39014 = C6450 * C25560;
    const double C39010 = C6044 * C25560;
    const double C39416 = C16588 * C25560;
    const double C39913 = C17090 * C25560;
    const double C39909 = C6948 * C25560;
    const double C40308 = C17500 * C25560;
    const double C49810 = C49808 / C49723;
    const double C22749 = C22719 * C126;
    const double C22747 = C22719 * C125;
    const double C22743 = C22719 * C136;
    const double C22737 = C22719 * C134;
    const double C22733 = C22719 * C124;
    const double C22729 = C22719 * C132;
    const double C22725 = C22719 * C123;
    const double C22947 = C22719 * C289;
    const double C22943 = C22719 * C304;
    const double C22939 = C22719 * C288;
    const double C22937 = C22719 * C285;
    const double C22933 = C22719 * C297;
    const double C22929 = C22719 * C284;
    const double C22925 = C22719 * C295;
    const double C23141 = C22719 * C466;
    const double C23137 = C22719 * C481;
    const double C23133 = C22719 * C465;
    const double C23131 = C22719 * C462;
    const double C23127 = C22719 * C474;
    const double C23123 = C22719 * C461;
    const double C23119 = C22719 * C472;
    const double C23313 = C22719 * C283;
    const double C23473 = C22719 * C460;
    const double C23687 = C22719 * C891;
    const double C23683 = C22719 * C897;
    const double C23679 = C22719 * C890;
    const double C28601 = C22719 * C1570;
    const double C28597 = C22719 * C1564;
    const double C28831 = C22719 * C1854;
    const double C28827 = C22719 * C1848;
    const double C28821 = C22719 * C464;
    const double C28817 = C22719 * C479;
    const double C28807 = C22719 * C476;
    const double C28803 = C22719 * C463;
    const double C29509 = C22719 * C1223;
    const double C29505 = C22719 * C1217;
    const double C29499 = C22719 * C895;
    const double C29495 = C22719 * C889;
    const double C30045 = C22719 * C1225;
    const double C30041 = C22719 * C1218;
    const double C30703 = C22719 * C1572;
    const double C30699 = C22719 * C1565;
    const double C31233 = C22719 * C1856;
    const double C31229 = C22719 * C1849;
    const double C48306 = C22719 * C4586;
    const double C48302 = C22719 * C4581;
    const double C48809 = C22719 * C3686;
    const double C48805 = C22719 * C3681;
    const double C49213 = C22719 * C7348;
    const double C49209 = C22719 * C7343;
    const double C19366 = C19360 * C10776;
    const double C20283 = C20273 * C10776;
    const double C18438 = C18436 + C18437;
    const double C16585 = C16185 * C49742;
    const double C21403 = C16185 * C10776;
    const double C39418 = C16185 * C25561;
    const double C13817 = C7951 * C9320;
    const double C19865 = C50696 * C9320;
    const double C45617 = C25554 * C9320;
    const double C48808 = C50696 * C9320;
    const double C14321 = C7951 * C9814;
    const double C46121 = C25554 * C9814;
    const double C14737 = C7951 * C10212;
    const double C19354 = C50696 * C10212;
    const double C22008 = C50680 * C10212;
    const double C46529 = C25554 * C10212;
    const double C48305 = C50696 * C10212;
    const double C21060 = C21052 + C21051;
    const double C21671 = C21398 + C21397;
    const double C20282 = C20272 * C50520;
    const double C343 = C50680 * C319;
    const double C2527 = C50826 * C319;
    const double C2499 = C50696 * C319;
    const double C7973 = C7951 * C319;
    const double C8533 = C7950 * C319;
    const double C22952 = C22714 * C319;
    const double C22924 = C50696 * C319;
    const double C25576 = C25554 * C319;
    const double C26136 = C50853 * C319;
    const double C917 = C50680 * C906;
    const double C2693 = C50696 * C906;
    const double C3267 = C50826 * C906;
    const double C8697 = C7950 * C906;
    const double C23118 = C50696 * C906;
    const double C23692 = C22714 * C906;
    const double C26300 = C50853 * C906;
    const double C163 = C117 * C137;
    const double C2328 = C2294 * C137;
    const double C22753 = C22719 * C137;
    const double C324 = C117 * C293;
    const double C2316 = C2295 * C293;
    const double C2892 = C2294 * C293;
    const double C7992 = C7955 * C293;
    const double C22741 = C22720 * C293;
    const double C23317 = C22719 * C293;
    const double C342 = C117 * C306;
    const double C2526 = C2294 * C306;
    const double C2498 = C2295 * C306;
    const double C7972 = C7956 * C306;
    const double C8532 = C7955 * C306;
    const double C22951 = C22719 * C306;
    const double C22923 = C22720 * C306;
    const double C25575 = C25559 * C306;
    const double C501 = C117 * C470;
    const double C3052 = C2294 * C470;
    const double C23477 = C22719 * C470;
    const double C519 = C117 * C483;
    const double C2720 = C2294 * C483;
    const double C23145 = C22719 * C483;
    const double C916 = C117 * C899;
    const double C2692 = C2295 * C899;
    const double C3266 = C2294 * C899;
    const double C8696 = C7955 * C899;
    const double C23117 = C22720 * C899;
    const double C23691 = C22719 * C899;
    const double C16186 = C16175 + C16176;
    const double C18430 = C18411 + C18412;
    const double C28846 = C28833 + C28834;
    const double C18413 = C2735 + C2734;
    const double C35112 = C2734 + C2735;
    const double C6447 = C6047 * C2292;
    const double C16182 = C6047 * C50799;
    const double C16172 = C6047 * C50525;
    const double C21402 = C6047 * C50520;
    const double C33200 = C6047 * C50841;
    const double C39023 = C6047 * C25555;
    const double C39017 = C6047 * C50525;
    const double C21059 = C21054 + C21053;
    const double C19365 = C19359 * C50520;
    const double C13829 = C13822 + C13823;
    const double C19877 = C19868 + C19869;
    const double C45629 = C45622 + C45623;
    const double C48816 = C48811 + C48812;
    const double C14333 = C14326 + C14327;
    const double C46133 = C46126 + C46127;
    const double C14749 = C14742 + C14743;
    const double C19364 = C19357 + C19358;
    const double C22012 = C22009 + C22010;
    const double C46541 = C46534 + C46535;
    const double C48315 = C48308 + C48309;
    const double C6946 = C5334 * C2298;
    const double C33693 = C5334 * C22723;
    const double C179 = C167 + C168;
    const double C358 = C344 + C345;
    const double C2897 = C2890 + C2891;
    const double C8010 = C7988 + C7989;
    const double C23322 = C23315 + C23316;
    const double C25613 = C25591 + C25592;
    const double C648 = C644 + C645;
    const double C2345 = C2326 + C2327;
    const double C22770 = C22751 + C22752;
    const double C535 = C521 + C522;
    const double C758 = C754 + C755;
    const double C926 = C918 + C919;
    const double C3057 = C3050 + C3051;
    const double C23482 = C23475 + C23476;
    const double C6448 = C6048 * C2298;
    const double C16183 = C6048 * C49742;
    const double C33201 = C6048 * C22723;
    const double C39024 = C6048 * C25561;
    const double C9164 =
        (4 * (2 * C50275 + C49847 * C50321 + C50276 * ae) +
         C49847 *
             (3 * C50321 +
              C49847 * (2 * C50313 +
                        C49847 * (C49905 +
                                  C49847 * (C49847 * C49848 * C49917 + C49988) +
                                  C49847 * C49985 * ae) +
                        C50315 * ae) +
              C50320 * ae) +
         (3 * C50276 + C49847 * C50320) * ae) /
        C49723;
    const double C9318 =
        (2 * C50275 + C49847 * C50321 + C50276 * ae +
         (2 * C50313 +
          C49847 * (C49905 + C49847 * (C49847 * C49848 * C49917 + C49988) +
                    C49847 * C49985 * ae) +
          C50315 * ae) *
             C50070) /
        C49723;
    const double C9812 =
        (C50034 *
         (3 * C50321 +
          C49847 *
              (2 * C50313 +
               C49847 * (C49905 + C49847 * (C49847 * C49848 * C49917 + C49988) +
                         C49847 * C49985 * ae) +
               C50315 * ae) +
          C50320 * ae)) /
        C49723;
    const double C10210 =
        (2 * C50034 * C50321 +
         C50034 *
             (C50321 + (C49905 + C49847 * (C49847 * C49848 * C49917 + C49988) +
                        C49847 * C49985 * ae) *
                           C50070)) /
        C49723;
    const double C17088 = C15487 * C49742;
    const double C39915 = C15487 * C25561;
    const double C49974 = C49958 + C49973;
    const double C50043 = C50040 + C50041;
    const double C1221 = (C49847 * C49956 + C50039 * C50070) / C49723;
    const double C4582 =
        (2 * C50034 * C50039 + C50034 * (C50039 + C49847 * C49997 * C50070)) /
        C49723;
    const double C2529 = C50696 * C1114;
    const double C8535 = C7951 * C1114;
    const double C22954 = C50696 * C1114;
    const double C26138 = C25554 * C1114;
    const double C2723 = C50696 * C1228;
    const double C6037 = C50680 * C1228;
    const double C23148 = C50696 * C1228;
    const double C3269 = C50696 * C1575;
    const double C5331 = C50680 * C1575;
    const double C8699 = C7951 * C1575;
    const double C23694 = C50696 * C1575;
    const double C26302 = C25554 * C1575;
    const double C2528 = C2295 * C1107;
    const double C8534 = C7956 * C1107;
    const double C22953 = C22720 * C1107;
    const double C26137 = C25559 * C1107;
    const double C3268 = C2295 * C1568;
    const double C5330 = C117 * C1568;
    const double C8698 = C7956 * C1568;
    const double C23693 = C22720 * C1568;
    const double C26301 = C25559 * C1568;
    const double C5504 = C117 * C1852;
    const double C8195 = C8182 + C8183;
    const double C25798 = C25785 + C25786;
    const double C8377 = C8364 + C8365;
    const double C15488 = C15485 + C15486;
    const double C18960 = C18947 + C18948;
    const double C25980 = C25967 + C25968;
    const double C29522 = C29511 + C29512;
    const double C8917 = C8910 + C8911;
    const double C26520 = C26513 + C26514;
    const double C28608 = C28603 + C28604;
    const double C34912 = C34907 + C34908;
    const double C50368 = C50350 + C50366;
    const double C142 = (5 * (3 * C49881 + C49848 * C49901) +
                         C49848 * (4 * C49901 + C49848 * C49929)) /
                        C49723;
    const double C312 =
        (3 * C49881 + C49848 * C49901 +
         C49847 * (C49847 * C49929 + C50175 * ae) + C49847 * C50175 * ae) /
        C49723;
    const double C489 =
        (3 * C49881 + C49848 * C49901 + C49929 * C50070) / C49723;
    const double C641 = (C49847 * (4 * C49901 + C49848 * C49929) +
                         (4 * C50171 + C49848 * C50175) * ae) /
                        C49723;
    const double C751 = (C50034 * (4 * C49901 + C49848 * C49929)) / C49723;
    const double C903 = (C50034 * (C49847 * C49929 + C50175 * ae)) / C49723;
    const double C149 =
        (5 * (3 * C49900 + ae * C49901 + C49848 * C49928) +
         ae * (4 * C49901 + C49848 * C49929) +
         C49848 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C497 = (2 * C49880 + ae * C49881 + C49848 * C49900 +
                         C49928 * std::pow(zP - zQ, 2)) /
                        C49727;
    const double C498 =
        ((zP - zQ) * (3 * C49900 + ae * C49901 + C49848 * C49928)) / C49727;
    const double C499 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 +
         (3 * C49924 + ae * C49925 +
          C49848 *
              (2 * C49920 + ae * C49921 +
               C49848 * (C49916 + ae * C49848 * C49917 +
                         C49848 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             std::pow(zP - zQ, 2)) /
        C49727;
    const double C752 =
        ((zP - zQ) *
         (4 * C49928 + ae * C49929 +
          C49848 * (3 * C49924 + ae * C49925 +
                    C49848 * (2 * C49920 + ae * C49921 +
                              C49848 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C1858 =
        (2 * C50034 * C49928 +
         C50034 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                std::pow(C50034, 2))) /
        C49727;
    const double C9321 =
        (2 * C50051 + ae * C50052 + C49847 * C50085 +
         (2 * C50079 + ae * C50081 +
          C49847 *
              (C49920 + ae * C49847 * C49990 +
               C49847 * (ae * C49990 +
                         C49847 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             C50070) /
        C49727;
    const double C10213 =
        (2 * C50034 * C50085 +
         C50034 * (C50085 + (C49920 + ae * C49847 * C49990 +
                             C49847 * (ae * C49990 +
                                       C49847 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                C50070)) /
        C49727;
    const double C11568 =
        (3 * C50099 + ae * C50100 + C49847 * C50127 +
         (3 * C50123 + ae * C50124 +
          C49847 *
              (2 * C50117 + ae * C50119 +
               C49847 * (C49916 + ae * C49847 * C49983 +
                         C49847 * (ae * C49983 + C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             C50070) /
        C49727;
    const double C12164 =
        (2 * C50034 * C50127 +
         C50034 * (C50127 + (2 * C50117 + ae * C50119 +
                             C49847 * (C49916 + ae * C49847 * C49983 +
                                       C49847 * (ae * C49983 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                C50070)) /
        C49727;
    const double C49999 = C49979 + C49998;
    const double C50045 = C49972 + C50044;
    const double C9167 =
        (4 * (2 * C50051 + ae * C50052 + C49847 * C50085) +
         ae * (3 * C50052 + C49847 * C50086) +
         C49847 *
             (3 * C50085 + ae * C50086 +
              C49847 *
                  (2 * C50079 + ae * C50081 +
                   C49847 * (C49920 + ae * C49847 * C49990 +
                             C49847 * (ae * C49990 +
                                       C49847 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C9815 =
        (C50034 *
         (3 * C50085 + ae * C50086 +
          C49847 * (2 * C50079 + ae * C50081 +
                    C49847 * (C49920 + ae * C49847 * C49990 +
                              C49847 * (ae * C49990 +
                                        C49847 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C9163 = (4 * (2 * C50047 + C49847 * C50052) +
                          C49847 * (3 * C50052 + C49847 * C50086)) /
                         C49723;
    const double C9317 =
        (2 * C50047 + C49847 * C50052 + C50086 * C50070) / C49723;
    const double C9811 = (C50034 * (3 * C50052 + C49847 * C50086)) / C49723;
    const double C11466 =
        (5 * (3 * C50099 + ae * C50100 + C49847 * C50127) +
         ae * (4 * C50100 + C49847 * C50128) +
         C49847 *
             (4 * C50127 + ae * C50128 +
              C49847 *
                  (3 * C50123 + ae * C50124 +
                   C49847 * (2 * C50117 + ae * C50119 +
                             C49847 * (C49916 + ae * C49847 * C49983 +
                                       C49847 * (ae * C49983 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C11898 =
        (C50034 *
         (4 * C50127 + ae * C50128 +
          C49847 * (3 * C50123 + ae * C50124 +
                    C49847 * (2 * C50117 + ae * C50119 +
                              C49847 * (C49916 + ae * C49847 * C49983 +
                                        C49847 * (ae * C49983 +
                                                  C49847 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C11464 = (5 * (3 * C50059 + C49847 * C50100) +
                           C49847 * (4 * C50100 + C49847 * C50128)) /
                          C49723;
    const double C11566 =
        (3 * C50059 + C49847 * C50100 + C50128 * C50070) / C49723;
    const double C11896 = (C50034 * (4 * C50100 + C49847 * C50128)) / C49723;
    const double C49749 = C49748 - C49738;
    const double C38511 = C38503 + C38502;
    const double C40307 = C38496 + C38497;
    const double C38510 = C38490 + C38491;
    const double C39420 = C39015 + C39014;
    const double C49812 = C49810 - C49797;
    const double C22769 = C22749 + C22750;
    const double C22768 = C22747 + C22748;
    const double C22766 = C22743 + C22744;
    const double C22763 = C22737 + C22738;
    const double C22761 = C22733 + C22734;
    const double C22759 = C22729 + C22730;
    const double C22757 = C22725 + C22726;
    const double C22967 = C22947 + C22948;
    const double C22965 = C22943 + C22944;
    const double C22963 = C22939 + C22940;
    const double C22962 = C22937 + C22938;
    const double C22960 = C22933 + C22934;
    const double C22958 = C22929 + C22930;
    const double C22956 = C22925 + C22926;
    const double C23161 = C23141 + C23142;
    const double C23159 = C23137 + C23138;
    const double C23157 = C23133 + C23134;
    const double C23156 = C23131 + C23132;
    const double C23154 = C23127 + C23128;
    const double C23152 = C23123 + C23124;
    const double C23150 = C23119 + C23120;
    const double C23321 = C23313 + C23314;
    const double C23481 = C23473 + C23474;
    const double C23699 = C23687 + C23688;
    const double C23697 = C23683 + C23684;
    const double C23695 = C23679 + C23680;
    const double C28607 = C28601 + C28602;
    const double C28605 = C28597 + C28598;
    const double C28845 = C28831 + C28832;
    const double C28843 = C28827 + C28828;
    const double C28842 = C28821 + C28822;
    const double C28840 = C28817 + C28818;
    const double C28837 = C28807 + C28808;
    const double C28835 = C28803 + C28804;
    const double C29521 = C29509 + C29510;
    const double C29519 = C29505 + C29506;
    const double C29517 = C29499 + C29500;
    const double C29515 = C29495 + C29496;
    const double C30051 = C30045 + C30046;
    const double C30049 = C30041 + C30042;
    const double C30709 = C30703 + C30704;
    const double C30707 = C30699 + C30700;
    const double C31239 = C31233 + C31234;
    const double C31237 = C31229 + C31230;
    const double C48314 = C48306 + C48307;
    const double C48312 = C48302 + C48303;
    const double C48815 = C48809 + C48810;
    const double C48813 = C48805 + C48806;
    const double C49221 = C49213 + C49214;
    const double C49219 = C49209 + C49210;
    const double C13826 = C13816 + C13817;
    const double C19875 = C19864 + C19865;
    const double C45626 = C45616 + C45617;
    const double C48814 = C48807 + C48808;
    const double C14330 = C14320 + C14321;
    const double C46130 = C46120 + C46121;
    const double C14746 = C14736 + C14737;
    const double C19362 = C19353 + C19354;
    const double C22011 = C22007 + C22008;
    const double C46538 = C46528 + C46529;
    const double C48313 = C48304 + C48305;
    const double C20288 = C20282 + C20283;
    const double C177 = C163 + C164;
    const double C2346 = C2328 + C2329;
    const double C22771 = C22753 + C22754;
    const double C348 = C324 + C325;
    const double C2340 = C2316 + C2317;
    const double C2898 = C2892 + C2893;
    const double C8012 = C7992 + C7993;
    const double C22765 = C22741 + C22742;
    const double C23323 = C23317 + C23318;
    const double C357 = C342 + C343;
    const double C2544 = C2526 + C2527;
    const double C2530 = C2498 + C2499;
    const double C8002 = C7972 + C7973;
    const double C8540 = C8532 + C8533;
    const double C22969 = C22951 + C22952;
    const double C22955 = C22923 + C22924;
    const double C25605 = C25575 + C25576;
    const double C525 = C501 + C502;
    const double C3058 = C3052 + C3053;
    const double C23483 = C23477 + C23478;
    const double C534 = C519 + C520;
    const double C2738 = C2720 + C2721;
    const double C23163 = C23145 + C23146;
    const double C925 = C916 + C917;
    const double C2724 = C2692 + C2693;
    const double C3276 = C3266 + C3267;
    const double C8704 = C8696 + C8697;
    const double C23149 = C23117 + C23118;
    const double C23701 = C23691 + C23692;
    const double C16586 = C16186 * C50525;
    const double C21404 = C16186 * C50520;
    const double C39419 = C16186 * C50525;
    const double C18431 = C18413 * C50520;
    const double C19367 = C19365 + C19366;
    const double C22014 = C22012 * C50520;
    const double C5516 = C535 * C2298;
    const double C15969 = C535 * C49742;
    const double C32301 = C535 * C22723;
    const double C38814 = C535 * C25561;
    const double C5826 = C758 * C2298;
    const double C32599 = C758 * C22723;
    const double C6042 = C926 * C2298;
    const double C32805 = C926 * C22723;
    const double C49975 = C49974 + C49969;
    const double C3688 =
        (C49900 + ae * C50039 + C49847 * C50043 +
         (C49924 + ae * C49847 * C49997 +
          C49847 *
              (ae * C49997 +
               C49847 * (C49916 + ae * C49848 * C49917 +
                         C49848 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             std::pow(C50034, 2)) /
        C49727;
    const double C4588 =
        (2 * C50034 * C50043 +
         C50034 * (C50043 + (ae * C49997 +
                             C49847 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                std::pow(C50034, 2))) /
        C49727;
    const double C2722 = C2295 * C1221;
    const double C6036 = C117 * C1221;
    const double C23147 = C22720 * C1221;
    const double C2545 = C2528 + C2529;
    const double C8541 = C8534 + C8535;
    const double C22970 = C22953 + C22954;
    const double C26144 = C26137 + C26138;
    const double C3277 = C3268 + C3269;
    const double C5335 = C5330 + C5331;
    const double C8705 = C8698 + C8699;
    const double C23702 = C23693 + C23694;
    const double C26308 = C26301 + C26302;
    const double C5525 = C5504 + C5505;
    const double C17089 = C15488 * C50525;
    const double C39916 = C15488 * C50525;
    const double C50369 = C50368 + C50353;
    const double C524 = C50680 * C497;
    const double C757 = C50680 * C498;
    const double C50000 = C49999 + C49991;
    const double C3530 =
        (3 * (C49900 + ae * C50039 + C49847 * C50043) +
         ae * (2 * C50039 + C49847 * C50045) +
         C49847 *
             (2 * C50043 + ae * C50045 +
              C49847 *
                  (C49924 + ae * C49847 * C49997 +
                   C49847 * (ae * C49997 +
                             C49847 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C4186 =
        (C50034 *
         (2 * C50043 + ae * C50045 +
          C49847 * (C49924 + ae * C49847 * C49997 +
                    C49847 * (ae * C49997 +
                              C49847 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C3524 = (3 * (C49956 + C49972 * C50042) +
                          C49847 * (2 * C50039 + C49847 * C50045)) /
                         C49723;
    const double C3682 = (C49956 + C49972 * C50042 + C50045 * C50070) / C49723;
    const double C4180 = (C50034 * (2 * C50039 + C49847 * C50045)) / C49723;
    const double C15659 = C5522 * C49749;
    const double C15655 = C531 * C49749;
    const double C15651 = C530 * C49749;
    const double C15646 = C7362 * C49749;
    const double C15639 = C5521 * C49749;
    const double C15635 = C5518 * C49749;
    const double C15967 = C533 * C49749;
    const double C15963 = C528 * C49749;
    const double C16181 = C6046 * C49749;
    const double C16177 = C922 * C49749;
    const double C16169 = C6450 * C49749;
    const double C16165 = C6044 * C49749;
    const double C16591 = C16588 * C49749;
    const double C17080 = C6948 * C49749;
    const double C17092 = C17090 * C49749;
    const double C17503 = C17500 * C49749;
    const double C118 =
        ((((0 - (C49721 * C49722) / C49723) * ae) / C49723 - (0 * be) / C49732 +
          C49724 / C49723) /
             C49728 -
         ((C49721 * C49745 + 0) * be) / C49723) /
            C49728 -
        ((C49721 * (C49745 / C49728 -
                    ((C49721 * C49749 + C50799) * be) / C49723 + C49742) +
          C50857) *
         be) /
            C49723 +
        C49749 / C49728 - ((C49721 * C49742 + C50525) * be) / C49723;
    const double C119 =
        (C49745 / C49728 - ((C49721 * C49749 + C50799) * be) / C49723 +
         C49742) /
            C49728 -
        ((C49721 *
              (C49749 / C49728 - ((C49721 * C49742 + C50525) * be) / C49723) +
          C50841) *
         be) /
            C49723 +
        2 * (C49742 / C49728 - (0 * be) / C49723);
    const double C120 =
        (C49749 / C49728 - ((C49721 * C49742 + C50525) * be) / C49723) /
            C49728 -
        ((C49721 * (C49742 / C49728 - (0 * be) / C49723) + C22718) * be) /
            C49723;
    const double C22721 =
        C49745 / C49728 - ((C49721 * C49749 + C50799) * be) / C49723 + C49742;
    const double C22722 =
        C49749 / C49728 - ((C49721 * C49742 + C50525) * be) / C49723;
    const double C38513 = C38504 + C38511;
    const double C40312 = C38495 + C40307;
    const double C38512 = C38510 + C38492;
    const double C39421 = C39016 + C39420;
    const double C10772 =
        ((((0 - (C49761 * C49794) / C49723) * ae) / C49723 - (0 * be) / C49732 +
          C49776 / C49723) /
             C49728 -
         ((C49761 * C49811 + 0) * be) / C49723) /
            C49728 -
        ((C49761 * (C49811 / C49728 -
                    ((C49761 * C49812 + C50826) * be) / C49723 + C49806) +
          C50864) *
         be) /
            C49723 +
        C49812 / C49728 - ((C49761 * C49806 + C50696) * be) / C49723;
    const double C10773 =
        (C49811 / C49728 - ((C49761 * C49812 + C50826) * be) / C49723 +
         C49806) /
            C49728 -
        ((C49761 *
              (C49812 / C49728 - ((C49761 * C49806 + C50696) * be) / C49723) +
          C50853) *
         be) /
            C49723 +
        2 * (C49806 / C49728 - (0 * be) / C49723);
    const double C10774 =
        (C49812 / C49728 - ((C49761 * C49806 + C50696) * be) / C49723) /
            C49728 -
        ((C49761 * (C49806 / C49728 - (0 * be) / C49723) + C25554) * be) /
            C49723;
    const double C25557 =
        C49811 / C49728 - ((C49761 * C49812 + C50826) * be) / C49723 + C49806;
    const double C25558 =
        C49812 / C49728 - ((C49761 * C49806 + C50696) * be) / C49723;
    const double C22776 = C22767 + C22768;
    const double C22774 = C22763 + C22764;
    const double C22773 = C22761 + C22762;
    const double C23312 = C22957 + C22958;
    const double C28826 = C23159 + C23160;
    const double C28813 = C23160 + C23159;
    const double C28825 = C23157 + C23158;
    const double C28814 = C23158 + C23157;
    const double C28824 = C23155 + C23156;
    const double C28811 = C23156 + C23155;
    const double C28823 = C23153 + C23154;
    const double C28812 = C23154 + C23153;
    const double C23472 = C23151 + C23152;
    const double C29235 = C23152 + C23151;
    const double C29513 = C23698 + C23697;
    const double C29504 = C23697 + C23698;
    const double C29514 = C23696 + C23695;
    const double C29503 = C23695 + C23696;
    const double C47418 = C28842 + C28841;
    const double C47419 = C28840 + C28839;
    const double C48310 = C30052 + C30051;
    const double C48311 = C30050 + C30049;
    const double C49207 = C31240 + C31239;
    const double C49208 = C31238 + C31237;
    const double C22013 = C22011 * C10776;
    const double C2350 = C2340 + C2341;
    const double C22775 = C22765 + C22766;
    const double C2886 = C2530 + C2531;
    const double C23311 = C22955 + C22956;
    const double C5511 = C525 * C2293;
    const double C5825 = C525 * C2292;
    const double C15966 = C525 * C50525;
    const double C32296 = C525 * C22718;
    const double C32598 = C525 * C50841;
    const double C38811 = C525 * C50525;
    const double C5515 = C534 * C2292;
    const double C5490 = C534 * C2293;
    const double C15658 = C534 * C50525;
    const double C15968 = C534 * C50799;
    const double C21260 = C534 * C50520;
    const double C32300 = C534 * C50841;
    const double C32285 = C534 * C22718;
    const double C38505 = C534 * C50525;
    const double C38813 = C534 * C25555;
    const double C6041 = C925 * C2292;
    const double C6029 = C925 * C2293;
    const double C16180 = C925 * C50525;
    const double C32804 = C925 * C50841;
    const double C32800 = C925 * C22718;
    const double C39021 = C925 * C50525;
    const double C3046 = C2724 + C2725;
    const double C35502 = C2725 + C2724;
    const double C23471 = C23149 + C23150;
    const double C29236 = C23150 + C23149;
    const double C18435 = C18431 + C18432;
    const double C320 =
        (2 * C49880 + ae * C49881 + C49848 * C49900 + ae * C49847 * C49975 +
         C49847 * (ae * C49975 + C49847 * C49928)) /
        C49727;
    const double C321 =
        (ae * (3 * C49956 + C49848 * C49975 +
               (2 * C49949 + C49848 * C49967) * ae) +
         C49847 * (3 * C49900 + ae * C49901 + C49848 * C49928)) /
        C49727;
    const double C907 = ((zP - zQ) * (ae * C49975 + C49847 * C49928)) / C49727;
    const double C140 = (4 * (2 * C49945 + C49848 * C49956 + C50165 * ae) +
                         C49848 * (3 * C49956 + C49848 * C49975 + C50171 * ae) +
                         (3 * C50165 + C49848 * C50171) * ae) /
                        C49723;
    const double C308 =
        (2 * C49945 + C49848 * C49956 + C50165 * ae + C49975 * C50042) / C49723;
    const double C310 =
        (C49847 * (3 * C49956 + C49848 * C49975 + C50171 * ae)) / C49723;
    const double C485 =
        (2 * C49945 + C49848 * C49956 + C50165 * ae + C49975 * C50070) / C49723;
    const double C487 =
        (C50034 * (3 * C49956 + C49848 * C49975 + C50171 * ae)) / C49723;
    const double C901 = (C50034 * C49847 * C49975) / C49723;
    const double C2739 = C2722 + C2723;
    const double C6049 = C6036 + C6037;
    const double C23164 = C23147 + C23148;
    const double C6947 = C5335 * C2293;
    const double C33694 = C5335 * C22718;
    const double C7361 = C5525 * C2293;
    const double C15662 = C5525 * C50525;
    const double C21262 = C5525 * C50520;
    const double C34090 = C5525 * C22718;
    const double C38509 = C5525 * C50525;
    const double C11465 =
        (5 * (3 * C50335 + C49847 * C50369 + C50334 * ae) +
         C49847 *
             (4 * C50369 +
              C49847 *
                  (3 * C50364 +
                   C49847 *
                       (2 * C50356 +
                        C49847 * (C49893 + C49847 * (C49847 * C49917 + C49984) +
                                  C49847 * C49981 * ae) +
                        C50358 * ae) +
                   C50363 * ae) +
              C50367 * ae) +
         (4 * C50334 + C49847 * C50367) * ae) /
        C49723;
    const double C11567 =
        (3 * C50335 + C49847 * C50369 + C50334 * ae +
         (3 * C50364 +
          C49847 * (2 * C50356 +
                    C49847 * (C49893 + C49847 * (C49847 * C49917 + C49984) +
                              C49847 * C49981 * ae) +
                    C50358 * ae) +
          C50363 * ae) *
             C50070) /
        C49723;
    const double C11897 =
        (C50034 *
         (4 * C50369 +
          C49847 * (3 * C50364 +
                    C49847 * (2 * C50356 +
                              C49847 * (C49893 +
                                        C49847 * (C49847 * C49917 + C49984) +
                                        C49847 * C49981 * ae) +
                              C50358 * ae) +
                    C50363 * ae) +
          C50367 * ae)) /
        C49723;
    const double C12163 =
        (2 * C50034 * C50369 +
         C50034 *
             (C50369 + (2 * C50356 +
                        C49847 * (C49893 + C49847 * (C49847 * C49917 + C49984) +
                                  C49847 * C49981 * ae) +
                        C50358 * ae) *
                           C50070)) /
        C49723;
    const double C50001 = C49848 * C50000;
    const double C1113 =
        (2 * (ae * C49975 + C49847 * C49928) +
         ae * (C49975 + C50000 * std::pow(C49847, 2)) +
         C49847 *
             (C49928 + ae * C49847 * C50000 +
              C49847 *
                  (ae * C50000 +
                   C49847 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C1227 =
        (ae * C49975 + C49847 * C49928 +
         (ae * C50000 +
          C49847 *
              (2 * C49920 + ae * C49921 +
               C49848 * (C49916 + ae * C49848 * C49917 +
                         C49848 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             std::pow(zP - zQ, 2)) /
        C49727;
    const double C1574 =
        ((zP - zQ) *
         (C49928 + ae * C49847 * C50000 +
          C49847 * (ae * C50000 +
                    C49847 * (2 * C49920 + ae * C49921 +
                              C49848 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C1105 =
        (2 * C49847 * C49975 + C49847 * (C49975 + C50000 * C50042)) / C49723;
    const double C1219 = (C49847 * C49975 + C49847 * C50000 * C50070) / C49723;
    const double C1566 = (C50034 * (C49975 + C50000 * C50042)) / C49723;
    const double C1850 =
        (2 * C50034 * C49975 + C50034 * (C49975 + C50000 * C50070)) / C49723;
    const double C15666 = C15656 + C15655;
    const double C17492 = C15645 + C15646;
    const double C15663 = C15639 + C15640;
    const double C16587 = C16170 + C16169;
    const double C32297 = C531 * C22721;
    const double C32291 = C530 * C22721;
    const double C32290 = C5521 * C22721;
    const double C32279 = C5518 * C22721;
    const double C32595 = C528 * C22721;
    const double C32801 = C922 * C22721;
    const double C32795 = C6044 * C22721;
    const double C33197 = C6450 * C22721;
    const double C33689 = C6948 * C22721;
    const double C34085 = C7362 * C22721;
    const double C32299 = C533 * C22722;
    const double C32293 = C528 * C22722;
    const double C32288 = C531 * C22722;
    const double C32281 = C530 * C22722;
    const double C32597 = C526 * C22722;
    const double C32803 = C924 * C22722;
    const double C32797 = C922 * C22722;
    const double C33199 = C6046 * C22722;
    const double C33691 = C5332 * C22722;
    const double C34087 = C5522 * C22722;
    const double C40313 = C38494 + C40312;
    const double C38514 = C38512 + C38493;
    const double C39422 = C39017 + C39421;
    const double C25593 = C25557 * C136;
    const double C25587 = C25557 * C125;
    const double C25585 = C25557 * C124;
    const double C25579 = C25557 * C134;
    const double C25569 = C25557 * C132;
    const double C25563 = C25557 * C123;
    const double C25781 = C25557 * C304;
    const double C25775 = C25557 * C288;
    const double C25773 = C25557 * C285;
    const double C25767 = C25557 * C297;
    const double C25963 = C25557 * C481;
    const double C25957 = C25557 * C465;
    const double C25955 = C25557 * C462;
    const double C25949 = C25557 * C474;
    const double C26133 = C25557 * C295;
    const double C26127 = C25557 * C284;
    const double C26297 = C25557 * C472;
    const double C26291 = C25557 * C461;
    const double C26509 = C25557 * C897;
    const double C26503 = C25557 * C890;
    const double C44704 = C25557 * C464;
    const double C44698 = C25557 * C479;
    const double C44688 = C25557 * C476;
    const double C44682 = C25557 * C463;
    const double C45210 = C25557 * C895;
    const double C45204 = C25557 * C889;
    const double C45618 = C25557 * C1225;
    const double C45612 = C25557 * C1218;
    const double C46122 = C25557 * C1572;
    const double C46116 = C25557 * C1565;
    const double C46530 = C25557 * C1856;
    const double C46524 = C25557 * C1849;
    const double C25595 = C25558 * C293;
    const double C25589 = C25558 * C283;
    const double C25583 = C25558 * C284;
    const double C25577 = C25558 * C295;
    const double C25571 = C25558 * C297;
    const double C25565 = C25558 * C285;
    const double C25783 = C25558 * C1109;
    const double C25777 = C25558 * C1103;
    const double C25771 = C25558 * C288;
    const double C25765 = C25558 * C304;
    const double C25965 = C25558 * C1223;
    const double C25959 = C25558 * C1217;
    const double C25953 = C25558 * C890;
    const double C25947 = C25558 * C897;
    const double C26135 = C25558 * C306;
    const double C26129 = C25558 * C289;
    const double C26299 = C25558 * C899;
    const double C26293 = C25558 * C891;
    const double C26511 = C25558 * C1570;
    const double C26505 = C25558 * C1564;
    const double C44702 = C25558 * C1218;
    const double C44696 = C25558 * C1225;
    const double C44690 = C25558 * C895;
    const double C44684 = C25558 * C889;
    const double C45212 = C25558 * C1572;
    const double C45206 = C25558 * C1565;
    const double C45620 = C25558 * C3686;
    const double C45614 = C25558 * C3681;
    const double C46124 = C25558 * C4184;
    const double C46118 = C25558 * C4179;
    const double C46532 = C25558 * C4586;
    const double C46526 = C25558 * C4581;
    const double C47420 = C28813 * C50520;
    const double C47421 = C28814 * C10776;
    const double C47422 = C47418 * C10776;
    const double C47423 = C47419 * C50520;
    const double C48316 = C48310 * C50520;
    const double C48317 = C48311 * C10776;
    const double C49217 = C49207 * C50520;
    const double C49218 = C49208 * C10776;
    const double C38515 = C38505 + C38513;
    const double C347 = C50680 * C320;
    const double C2895 = C50696 * C320;
    const double C7995 = C7951 * C320;
    const double C23320 = C50696 * C320;
    const double C25598 = C25554 * C320;
    const double C647 = C50680 * C321;
    const double C2331 = C50696 * C321;
    const double C22756 = C50696 * C321;
    const double C921 = C50680 * C907;
    const double C3055 = C50696 * C907;
    const double C23480 = C50696 * C907;
    const double C169 = C117 * C140;
    const double C346 = C117 * C308;
    const double C2894 = C2295 * C308;
    const double C7994 = C7956 * C308;
    const double C23319 = C22720 * C308;
    const double C25597 = C25559 * C308;
    const double C646 = C117 * C310;
    const double C2330 = C2295 * C310;
    const double C22755 = C22720 * C310;
    const double C523 = C117 * C485;
    const double C756 = C117 * C487;
    const double C920 = C117 * C901;
    const double C3054 = C2295 * C901;
    const double C23479 = C22720 * C901;
    const double C6449 = C6049 * C2293;
    const double C16184 = C6049 * C50525;
    const double C33202 = C6049 * C22718;
    const double C39025 = C6049 * C50525;
    const double C50002 = C49978 + C50001;
    const double C15668 = C15657 + C15666;
    const double C17499 = C15644 + C17492;
    const double C15667 = C15663 + C15641;
    const double C16590 = C16171 + C16587;
    const double C25614 = C25593 + C25594;
    const double C25611 = C25587 + C25588;
    const double C25610 = C25585 + C25586;
    const double C25607 = C25579 + C25580;
    const double C25602 = C25569 + C25570;
    const double C25599 = C25563 + C25564;
    const double C25796 = C25781 + C25782;
    const double C25793 = C25775 + C25776;
    const double C25792 = C25773 + C25774;
    const double C25789 = C25767 + C25768;
    const double C25978 = C25963 + C25964;
    const double C25975 = C25957 + C25958;
    const double C25974 = C25955 + C25956;
    const double C25971 = C25949 + C25950;
    const double C26142 = C26133 + C26134;
    const double C26139 = C26127 + C26128;
    const double C26306 = C26297 + C26298;
    const double C26303 = C26291 + C26292;
    const double C26518 = C26509 + C26510;
    const double C26515 = C26503 + C26504;
    const double C44717 = C44704 + C44705;
    const double C44714 = C44698 + C44699;
    const double C44709 = C44688 + C44689;
    const double C44706 = C44682 + C44683;
    const double C45219 = C45210 + C45211;
    const double C45216 = C45204 + C45205;
    const double C45627 = C45618 + C45619;
    const double C45624 = C45612 + C45613;
    const double C46131 = C46122 + C46123;
    const double C46128 = C46116 + C46117;
    const double C46539 = C46530 + C46531;
    const double C46536 = C46524 + C46525;
    const double C25615 = C25595 + C25596;
    const double C25612 = C25589 + C25590;
    const double C25609 = C25583 + C25584;
    const double C25606 = C25577 + C25578;
    const double C25603 = C25571 + C25572;
    const double C25600 = C25565 + C25566;
    const double C25797 = C25783 + C25784;
    const double C25794 = C25777 + C25778;
    const double C25791 = C25771 + C25772;
    const double C25788 = C25765 + C25766;
    const double C25979 = C25965 + C25966;
    const double C25976 = C25959 + C25960;
    const double C25973 = C25953 + C25954;
    const double C25970 = C25947 + C25948;
    const double C26143 = C26135 + C26136;
    const double C26140 = C26129 + C26130;
    const double C26307 = C26299 + C26300;
    const double C26304 = C26293 + C26294;
    const double C26519 = C26511 + C26512;
    const double C26516 = C26505 + C26506;
    const double C44716 = C44702 + C44703;
    const double C44713 = C44696 + C44697;
    const double C44710 = C44690 + C44691;
    const double C44707 = C44684 + C44685;
    const double C45220 = C45212 + C45213;
    const double C45217 = C45206 + C45207;
    const double C45628 = C45620 + C45621;
    const double C45625 = C45614 + C45615;
    const double C46132 = C46124 + C46125;
    const double C46129 = C46118 + C46119;
    const double C46540 = C46532 + C46533;
    const double C46537 = C46526 + C46527;
    const double C47424 = C47420 + C47421;
    const double C47425 = C47422 + C47423;
    const double C48318 = C48316 + C48317;
    const double C49223 = C49217 + C49218;
    const double C180 = C169 + C170;
    const double C359 = C346 + C347;
    const double C2899 = C2894 + C2895;
    const double C8013 = C7994 + C7995;
    const double C23324 = C23319 + C23320;
    const double C25616 = C25597 + C25598;
    const double C649 = C646 + C647;
    const double C2347 = C2330 + C2331;
    const double C22772 = C22755 + C22756;
    const double C536 = C523 + C524;
    const double C759 = C756 + C757;
    const double C927 = C920 + C921;
    const double C3059 = C3054 + C3055;
    const double C23484 = C23479 + C23480;
    const double C50003 = C50002 + C49996;
    const double C15670 = C15658 + C15668;
    const double C17502 = C15643 + C17499;
    const double C15669 = C15667 + C15642;
    const double C16593 = C16172 + C16590;
    const double C5517 = C536 * C2293;
    const double C15970 = C536 * C50525;
    const double C32302 = C536 * C22718;
    const double C38815 = C536 * C50525;
    const double C5827 = C759 * C2293;
    const double C32600 = C759 * C22718;
    const double C6043 = C927 * C2293;
    const double C32806 = C927 * C22718;
    const double C322 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 + ae * C49847 * C50003 +
         C49847 *
             (ae * C50003 +
              C49847 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C642 =
        (ae * (4 * C49975 + C49848 * C50003 +
               (3 * C49967 + C49848 * C49994) * ae) +
         C49847 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C908 =
        ((zP - zQ) *
         (ae * C50003 +
          C49847 * (3 * C49924 + ae * C49925 +
                    C49848 * (2 * C49920 + ae * C49921 +
                              C49848 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C141 = (5 * (3 * C49956 + C49848 * C49975 + C50171 * ae) +
                         C49848 * (4 * C49975 + C49848 * C50003 + C50175 * ae) +
                         (4 * C50171 + C49848 * C50175) * ae) /
                        C49723;
    const double C311 =
        (3 * C49956 + C49848 * C49975 + C50171 * ae + C50003 * C50042) / C49723;
    const double C488 =
        (3 * C49956 + C49848 * C49975 + C50171 * ae + C50003 * C50070) / C49723;
    const double C640 =
        (C49847 * (4 * C49975 + C49848 * C50003 + C50175 * ae)) / C49723;
    const double C750 =
        (C50034 * (4 * C49975 + C49848 * C50003 + C50175 * ae)) / C49723;
    const double C902 = (C50034 * C49847 * C50003) / C49723;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50584 * C50816 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
            (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
            (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
               C50710 * C50584 * C50620 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50584 * C50816) *
              C50859 +
          ((C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
            (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
            (C22771 + C22772) * C22718) *
               C50710 * C50584 * C50816 -
           ((C22720 * C311 + C50696 * C322 + C22719 * C310 + C22714 * C321) *
                C22718 +
            (C22720 * C292 + C50696 * C312 + C22719 * C291 + C22714 * C309) *
                C22723 +
            (C23324 + C23323) * C50841 + (C23322 + C23321) * C22722 +
            C23311 * C50857 + C23312 * C22721) *
               C50710 * C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C22721 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50857 +
             (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
             C22773 * C22723 + C22774 * C22718) *
                C50710 * C50817 -
            (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
             (C23155 + C23156) * C22722 +
             (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                 C50857 +
             (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                 C22721) *
                C50710 * C50648) *
               C50816 +
           (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                 C22721 +
             (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                 C50857 +
             (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
             (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
                C50710 * C50648 -
            (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
             (C22961 + C22962) * C22722 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50857 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C22721) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
             (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
             (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
                C50710 * C50648 -
            (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
             (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
             (C22758 + C22757) * C22721) *
                C50710 * C50817) *
               C50816 +
           (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
             (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
             (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
                C50710 * C50817 -
            ((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C22718 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C22723 +
             (C23702 + C23701) * C50841 + (C23700 + C23699) * C22722 +
             (C23698 + C23697) * C50857 + (C23696 + C23695) * C22721) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50584 * C278 -
           ((C22955 + C22956) * C22718 + (C22957 + C22958) * C22723 +
            (C22959 + C22960) * C50841 + (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50584 * C279 +
           ((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C22721 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50857 +
            (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
            (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
               C50710 * C50584 * C280) *
              C281 +
          (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
            (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
            (C22719 * C283 + C22714 * C294 + C22720 * C290 + C50696 * C307) *
                C22723 +
            (C22719 * C293 + C22714 * C313 + C22720 * C308 + C50696 * C320) *
                C22718) *
               C50710 * C50584 * C279 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50584 * C278 -
           ((C22720 * C1105 + C50696 * C1113 + C22719 * C308 + C22714 * C320) *
                C22718 +
            (C22720 * C1101 + C50696 * C1106 + C22719 * C290 + C22714 * C307) *
                C22723 +
            (C22970 + C22969) * C50841 + (C22968 + C22967) * C22722 +
            (C22966 + C22965) * C50857 + (C22964 + C22963) * C22721) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
               C22721 +
           (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
               C50857 +
           (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
           C22773 * C22723 + C22774 * C22718) *
              C50710 * C50584 * C50568 * C113 -
          (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
           (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
           (C22758 + C22757) * C22721) *
              C50710 * C50584 * C50568 * C114 +
          (C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
           (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
           (C22771 + C22772) * C22718) *
              C50710 * C50584 * C50568 * C115 -
          ((C22720 * C640 + C50696 * C642 + C22719 * C140 + C22714 * C148) *
               C22718 +
           (C22720 * C639 + C50696 * C641 + C22719 * C127 + C22714 * C139) *
               C22723 +
           (C22772 + C22771) * C50841 + (C22770 + C22769) * C22722 +
           C22775 * C50857 + C22776 * C22721) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C457 -
           ((C23149 + C23150) * C22718 + (C23151 + C23152) * C22723 +
            (C23153 + C23154) * C50841 + (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C458 +
           ((C22719 * C464 + C22714 * C478 + C22720 * C1218 + C50696 * C1226) *
                C22721 +
            (C22719 * C479 + C22714 * C494 + C22720 * C1225 + C50696 * C1230) *
                C50857 +
            (C23157 + C23158) * C22722 + (C23159 + C23160) * C50841 +
            (C23161 + C23162) * C22723 + (C23163 + C23164) * C22718) *
               C50710 * C459) *
              C50568 * C281 +
          (((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
            (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
            (C22719 * C460 + C22714 * C471 + C22720 * C892 + C50696 * C900) *
                C22723 +
            (C22719 * C470 + C22714 * C490 + C22720 * C901 + C50696 * C907) *
                C22718) *
               C50710 * C458 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C457 -
           ((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                C22718 +
            (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                C22723 +
            (C23164 + C23163) * C50841 + (C23162 + C23161) * C22722 +
            (C23160 + C23159) * C50857 + (C23158 + C23157) * C22721) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50817 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
            (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
            (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
               C50710 * C50648 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50817) *
              C50568 * C50859 +
          ((C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
            (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
            (C22771 + C22772) * C22718) *
               C50710 * C50817 -
           ((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C22718 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C22723 +
            (C23484 + C23483) * C50841 + (C23482 + C23481) * C22722 +
            C23471 * C50857 + C23472 * C22721) *
               C50710 * C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
               C22721 +
           (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
               C50857 +
           (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
           C22773 * C22723 + C22774 * C22718) *
              C50710 * C50584 * C50568 * C113 -
          (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
           (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
           (C22758 + C22757) * C22721) *
              C50710 * C50584 * C50568 * C114 +
          (C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
           (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
           (C22771 + C22772) * C22718) *
              C50710 * C50584 * C50568 * C115 -
          ((C22720 * C640 + C50696 * C642 + C22719 * C140 + C22714 * C148) *
               C22718 +
           (C22720 * C639 + C50696 * C641 + C22719 * C127 + C22714 * C139) *
               C22723 +
           (C22772 + C22771) * C50841 + (C22770 + C22769) * C22722 +
           C22775 * C50857 + C22776 * C22721) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50584 * C278 -
           ((C22955 + C22956) * C22718 + (C22957 + C22958) * C22723 +
            (C22959 + C22960) * C50841 + (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50584 * C279 +
           ((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C22721 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50857 +
            (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
            (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
               C50710 * C50584 * C280) *
              C281 +
          (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
            (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
            (C22719 * C283 + C22714 * C294 + C22720 * C290 + C50696 * C307) *
                C22723 +
            (C22719 * C293 + C22714 * C313 + C22720 * C308 + C50696 * C320) *
                C22718) *
               C50710 * C50584 * C279 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50584 * C278 -
           ((C22720 * C1105 + C50696 * C1113 + C22719 * C308 + C22714 * C320) *
                C22718 +
            (C22720 * C1101 + C50696 * C1106 + C22719 * C290 + C22714 * C307) *
                C22723 +
            (C22970 + C22969) * C50841 + (C22968 + C22967) * C22722 +
            (C22966 + C22965) * C50857 + (C22964 + C22963) * C22721) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50584 * C50860 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50584 * C50861 +
           ((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C22721 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50857 +
            (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
            (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
            (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
            (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
               C50710 * C50584 * C50861 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50584 * C50860 -
           ((C22720 * C1105 + C50696 * C1113 + C22719 * C308 + C22714 * C320) *
                C22718 +
            (C22720 * C1101 + C50696 * C1106 + C22719 * C290 + C22714 * C307) *
                C22723 +
            (C22970 + C22969) * C50841 + (C22968 + C22967) * C22722 +
            (C22966 + C22965) * C50857 + (C22964 + C22963) * C22721) *
               C50710 * C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50817 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50648) *
              C50860 +
          (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                C22721 +
            (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                C50857 +
            (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
            (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
               C50710 * C50648 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50817) *
              C50861 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C22721 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50857 +
            (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
            (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
               C50710 * C50817 -
           ((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
             C22714 * C1575) *
                C22718 +
            (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
             C22714 * C1569) *
                C22723 +
            (C22720 * C4182 + C50696 * C4187 + C22719 * C1570 +
             C22714 * C1576) *
                C50841 +
            (C22720 * C4178 + C50696 * C4183 + C22719 * C1564 +
             C22714 * C1571) *
                C22722 +
            (C22720 * C4184 + C50696 * C4188 + C22719 * C1572 +
             C22714 * C1577) *
                C50857 +
            (C22720 * C4179 + C50696 * C4185 + C22719 * C1565 +
             C22714 * C1573) *
                C22721) *
               C50710 * C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
               C22721 +
           (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
               C50857 +
           (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
           C22773 * C22723 + C22774 * C22718) *
              C50710 * C50584 * C1096 -
          (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
           (C22961 + C22962) * C22722 +
           (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
               C50857 +
           (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
               C22721) *
              C50710 * C50584 * C1097 +
          ((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
               C22721 +
           (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
               C50857 +
           (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
           (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
              C50710 * C50584 * C1098 -
          ((C22720 * C3524 + C50696 * C3530 + C22719 * C1107 + C22714 * C1114) *
               C22718 +
           (C22720 * C3521 + C50696 * C3525 + C22719 * C1102 + C22714 * C1108) *
               C22723 +
           (C22720 * C3526 + C50696 * C3531 + C22719 * C1109 + C22714 * C1115) *
               C50841 +
           (C22720 * C3522 + C50696 * C3527 + C22719 * C1103 + C22714 * C1110) *
               C22722 +
           (C22720 * C3528 + C50696 * C3532 + C22719 * C1111 + C22714 * C1116) *
               C50857 +
           (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 + C22714 * C1112) *
               C22721) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50584 * C1025 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
            (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
            (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
               C50710 * C50584 * C50620 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
            (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
            (C22771 + C22772) * C22718) *
               C50710 * C50584 * C1025 -
           ((C22720 * C311 + C50696 * C322 + C22719 * C310 + C22714 * C321) *
                C22718 +
            (C22720 * C292 + C50696 * C312 + C22719 * C291 + C22714 * C309) *
                C22723 +
            (C23324 + C23323) * C50841 + (C23322 + C23321) * C22722 +
            C23311 * C50857 + C23312 * C22721) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C457 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C458 +
           ((C22719 * C464 + C22714 * C478 + C22720 * C1218 + C50696 * C1226) *
                C22721 +
            (C22719 * C479 + C22714 * C494 + C22720 * C1225 + C50696 * C1230) *
                C50857 +
            (C23157 + C23158) * C22722 + (C23159 + C23160) * C50841 +
            (C23161 + C23162) * C22723 + (C23163 + C23164) * C22718) *
               C50710 * C459) *
              C1025 +
          (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                C22721 +
            (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                C50857 +
            (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
            (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
               C50710 * C458 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C457 -
           ((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
             C22714 * C1228) *
                C22718 +
            (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
             C22714 * C1222) *
                C22723 +
            (C22720 * C3684 + C50696 * C3689 + C22719 * C1223 +
             C22714 * C1229) *
                C50841 +
            (C22720 * C3680 + C50696 * C3685 + C22719 * C1217 +
             C22714 * C1224) *
                C22722 +
            (C22720 * C3686 + C50696 * C3690 + C22719 * C1225 +
             C22714 * C1230) *
                C50857 +
            (C22720 * C3681 + C50696 * C3687 + C22719 * C1218 +
             C22714 * C1226) *
                C22721) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C22721 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50857 +
             (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
             C22773 * C22723 + C22774 * C22718) *
                C50710 * C50817 -
            (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
             (C23155 + C23156) * C22722 +
             (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                 C50857 +
             (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                 C22721) *
                C50710 * C50648) *
               C1025 +
           (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                 C22721 +
             (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                 C50857 +
             (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
             (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
                C50710 * C50648 -
            (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
             (C22961 + C22962) * C22722 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50857 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C22721) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
             (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
             (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
                C50710 * C50648 -
            (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
             (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
             (C22758 + C22757) * C22721) *
                C50710 * C50817) *
               C1025 +
           (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
             (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
             (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
                C50710 * C50817 -
            ((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C22718 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C22723 +
             (C23702 + C23701) * C50841 + (C23700 + C23699) * C22722 +
             (C23698 + C23697) * C50857 + (C23696 + C23695) * C22721) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50584 * C1025 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
            (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
            (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
               C50710 * C50584 * C50620 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
            (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
            (C22771 + C22772) * C22718) *
               C50710 * C50584 * C1025 -
           ((C22720 * C311 + C50696 * C322 + C22719 * C310 + C22714 * C321) *
                C22718 +
            (C22720 * C292 + C50696 * C312 + C22719 * C291 + C22714 * C309) *
                C22723 +
            (C23324 + C23323) * C50841 + (C23322 + C23321) * C22722 +
            C23311 * C50857 + C23312 * C22721) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
               C22721 +
           (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
               C50857 +
           (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
           C22773 * C22723 + C22774 * C22718) *
              C50710 * C50584 * C1096 -
          (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
           (C22961 + C22962) * C22722 +
           (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
               C50857 +
           (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
               C22721) *
              C50710 * C50584 * C1097 +
          ((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
               C22721 +
           (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
               C50857 +
           (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
           (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
              C50710 * C50584 * C1098 -
          ((C22720 * C3524 + C50696 * C3530 + C22719 * C1107 + C22714 * C1114) *
               C22718 +
           (C22720 * C3521 + C50696 * C3525 + C22719 * C1102 + C22714 * C1108) *
               C22723 +
           (C22720 * C3526 + C50696 * C3531 + C22719 * C1109 + C22714 * C1115) *
               C50841 +
           (C22720 * C3522 + C50696 * C3527 + C22719 * C1103 + C22714 * C1110) *
               C22722 +
           (C22720 * C3528 + C50696 * C3532 + C22719 * C1111 + C22714 * C1116) *
               C50857 +
           (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 + C22714 * C1112) *
               C22721) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C22721 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50857 +
             (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
             C22773 * C22723 + C22774 * C22718) *
                C50710 * C1676 -
            (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
             (C23155 + C23156) * C22722 +
             (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                 C50857 +
             (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                 C22721) *
                C50710 * C50648) *
               C50816 +
           (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                 C22721 +
             (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                 C50857 +
             (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
             (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
                C50710 * C50648 -
            (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
             (C22961 + C22962) * C22722 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50857 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C22721) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
             (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
             (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
                C50710 * C50648 -
            (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
             (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
             (C22758 + C22757) * C22721) *
                C50710 * C1676) *
               C50816 +
           (((C22962 + C22961) * C22721 + (C22960 + C22959) * C50857 +
             (C22958 + C22957) * C22722 + (C22956 + C22955) * C50841 +
             (C23321 + C23322) * C22723 + (C23323 + C23324) * C22718) *
                C50710 * C1676 -
            ((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C22718 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C22723 +
             (C23702 + C23701) * C50841 + (C23700 + C23699) * C22722 +
             (C23698 + C23697) * C50857 + (C23696 + C23695) * C22721) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50862 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50863 +
           ((C22719 * C464 + C22714 * C478 + C22720 * C1218 + C50696 * C1226) *
                C22721 +
            (C22719 * C479 + C22714 * C494 + C22720 * C1225 + C50696 * C1230) *
                C50857 +
            (C23157 + C23158) * C22722 + (C23159 + C23160) * C50841 +
            (C23161 + C23162) * C22723 + (C23163 + C23164) * C22718) *
               C50710 * C2092) *
              C50816 +
          (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                C22721 +
            (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                C50857 +
            (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
            (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
               C50710 * C50863 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C50862 -
           ((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
             C22714 * C1228) *
                C22718 +
            (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
             C22714 * C1222) *
                C22723 +
            (C22720 * C3684 + C50696 * C3689 + C22719 * C1223 +
             C22714 * C1229) *
                C50841 +
            (C22720 * C3680 + C50696 * C3685 + C22719 * C1217 +
             C22714 * C1224) *
                C22722 +
            (C22720 * C3686 + C50696 * C3690 + C22719 * C1225 +
             C22714 * C1230) *
                C50857 +
            (C22720 * C3681 + C50696 * C3687 + C22719 * C1218 +
             C22714 * C1226) *
                C22721) *
               C50710 * C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C1676 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50648) *
              C278 +
          (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                C22721 +
            (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                C50857 +
            (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
            (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
               C50710 * C50648 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C1676) *
              C279 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C22721 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50857 +
            (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
            (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
               C50710 * C1676 -
           ((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
             C22714 * C1575) *
                C22718 +
            (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
             C22714 * C1569) *
                C22723 +
            (C22720 * C4182 + C50696 * C4187 + C22719 * C1570 +
             C22714 * C1576) *
                C50841 +
            (C22720 * C4178 + C50696 * C4183 + C22719 * C1564 +
             C22714 * C1571) *
                C22722 +
            (C22720 * C4184 + C50696 * C4188 + C22719 * C1572 +
             C22714 * C1577) *
                C50857 +
            (C22720 * C4179 + C50696 * C4185 + C22719 * C1565 +
             C22714 * C1573) *
                C22721) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C1676 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
            (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
            (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
               C50710 * C50648 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
            (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
            (C22771 + C22772) * C22718) *
               C50710 * C1676 -
           ((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C22718 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C22723 +
            (C23484 + C23483) * C50841 + (C23482 + C23481) * C22722 +
            C23471 * C50857 + C23472 * C22721) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
               C22721 +
           (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
               C50857 +
           (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
           C22773 * C22723 + C22774 * C22718) *
              C50710 * C1842 -
          (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
           (C23155 + C23156) * C22722 +
           (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
               C50857 +
           (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
               C22721) *
              C50710 * C1843 +
          ((C22719 * C464 + C22714 * C478 + C22720 * C1218 + C50696 * C1226) *
               C22721 +
           (C22719 * C479 + C22714 * C494 + C22720 * C1225 + C50696 * C1230) *
               C50857 +
           (C23157 + C23158) * C22722 + (C23159 + C23160) * C50841 +
           (C23161 + C23162) * C22723 + (C23163 + C23164) * C22718) *
              C50710 * C1844 -
          ((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 + C22714 * C1859) *
               C22718 +
           (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 + C22714 * C1853) *
               C22723 +
           (C22720 * C4584 + C50696 * C4589 + C22719 * C1854 + C22714 * C1860) *
               C50841 +
           (C22720 * C4580 + C50696 * C4585 + C22719 * C1848 + C22714 * C1855) *
               C22722 +
           (C22720 * C4586 + C50696 * C4590 + C22719 * C1856 + C22714 * C1861) *
               C50857 +
           (C22720 * C4581 + C50696 * C4587 + C22719 * C1849 + C22714 * C1857) *
               C22721) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C50862 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50863 +
           ((C22719 * C464 + C22714 * C478 + C22720 * C1218 + C50696 * C1226) *
                C22721 +
            (C22719 * C479 + C22714 * C494 + C22720 * C1225 + C50696 * C1230) *
                C50857 +
            (C23157 + C23158) * C22722 + (C23159 + C23160) * C50841 +
            (C23161 + C23162) * C22723 + (C23163 + C23164) * C22718) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
            (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
            (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
               C50710 * C50863 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C50862 -
           ((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                C22718 +
            (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                C22723 +
            (C23164 + C23163) * C50841 + (C23162 + C23161) * C22722 +
            (C23160 + C23159) * C50857 + (C23158 + C23157) * C22721) *
               C50710 * C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C1676 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C23156 + C23155) * C22721 + (C23154 + C23153) * C50857 +
            (C23152 + C23151) * C22722 + (C23150 + C23149) * C50841 +
            (C23481 + C23482) * C22723 + (C23483 + C23484) * C22718) *
               C50710 * C50648 -
           (C22775 * C22718 + C22776 * C22723 + (C22764 + C22763) * C50841 +
            (C22762 + C22761) * C22722 + (C22760 + C22759) * C50857 +
            (C22758 + C22757) * C22721) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C22773 * C22721 + C22774 * C50857 + (C22768 + C22767) * C22722 +
            (C22766 + C22765) * C50841 + (C22769 + C22770) * C22723 +
            (C22771 + C22772) * C22718) *
               C50710 * C1676 -
           ((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C22718 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C22723 +
            (C23484 + C23483) * C50841 + (C23482 + C23481) * C22722 +
            C23471 * C50857 + C23472 * C22721) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C22721 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50857 +
            (C22757 + C22758) * C22722 + (C22759 + C22760) * C50841 +
            C22773 * C22723 + C22774 * C22718) *
               C50710 * C1676 -
           (C23471 * C22718 + C23472 * C22723 + (C23153 + C23154) * C50841 +
            (C23155 + C23156) * C22722 +
            (C22720 * C895 + C50696 * C904 + C22719 * C476 + C22714 * C493) *
                C50857 +
            (C22720 * C889 + C50696 * C894 + C22719 * C463 + C22714 * C477) *
                C22721) *
               C50710 * C50648) *
              C278 +
          (((C22719 * C889 + C22714 * C894 + C22720 * C1565 + C50696 * C1573) *
                C22721 +
            (C22719 * C895 + C22714 * C904 + C22720 * C1572 + C50696 * C1577) *
                C50857 +
            (C23695 + C23696) * C22722 + (C23697 + C23698) * C50841 +
            (C23699 + C23700) * C22723 + (C23701 + C23702) * C22718) *
               C50710 * C50648 -
           (C23311 * C22718 + C23312 * C22723 + (C22959 + C22960) * C50841 +
            (C22961 + C22962) * C22722 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50857 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C22721) *
               C50710 * C1676) *
              C279 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C22721 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50857 +
            (C22963 + C22964) * C22722 + (C22965 + C22966) * C50841 +
            (C22967 + C22968) * C22723 + (C22969 + C22970) * C22718) *
               C50710 * C1676 -
           ((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
             C22714 * C1575) *
                C22718 +
            (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
             C22714 * C1569) *
                C22723 +
            (C22720 * C4182 + C50696 * C4187 + C22719 * C1570 +
             C22714 * C1576) *
                C50841 +
            (C22720 * C4178 + C50696 * C4183 + C22719 * C1564 +
             C22714 * C1571) *
                C22722 +
            (C22720 * C4184 + C50696 * C4188 + C22719 * C1572 +
             C22714 * C1577) *
                C50857 +
            (C22720 * C4179 + C50696 * C4185 + C22719 * C1565 +
             C22714 * C1573) *
                C22721) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50584 * C50816 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50584 * C50620) *
                      C50858 +
                  (((C25792 + C25791 + C25790) * C25560 +
                    (C25789 + C25788 + C25787) * C25555 +
                    (C26139 + C26140 + C26141) * C25561 +
                    (C26142 + C26143 + C26144) * C50525) *
                       C50710 * C50584 * C50620 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50584 * C50816) *
                      C50859 +
                  (((C25610 + C25609 + C25608) * C25560 +
                    (C25607 + C25606 + C25605) * C25555 +
                    (C25611 + C25612 + C25613) * C25561 +
                    (C25614 + C25615 + C25616) * C50525) *
                       C50710 * C50584 * C50816 -
                   ((C25559 * C1105 + C25554 * C1113 + C25558 * C308 +
                     C50853 * C320 + C25557 * C293 + C50864 * C313) *
                        C50525 +
                    (C25559 * C1101 + C25554 * C1106 + C25558 * C290 +
                     C50853 * C307 + C25557 * C283 + C50864 * C294) *
                        C25561 +
                    (C26144 + C26143 + C26142) * C25555 +
                    (C26141 + C26140 + C26139) * C25560) *
                       C50710 * C50584 * C50620) *
                      C638)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C25560 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C25555 +
                     (C25599 + C25600 + C25601) * C25561 +
                     (C25602 + C25603 + C25604) * C50525) *
                        C50710 * C50817 -
                    ((C25969 + C25970 + C25971) * C50525 +
                     (C25972 + C25973 + C25974) * C25561 +
                     (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                      C50853 * C904 + C25557 * C476 + C50864 * C493) *
                         C25555 +
                     (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                      C50853 * C894 + C25557 * C463 + C50864 * C477) *
                         C25560) *
                        C50710 * C50648) *
                       C50816 +
                   (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                      C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                         C25560 +
                     (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                      C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                         C25555 +
                     (C26515 + C26516 + C26517) * C25561 +
                     (C26518 + C26519 + C26520) * C50525) *
                        C50710 * C50648 -
                    ((C25787 + C25788 + C25789) * C50525 +
                     (C25790 + C25791 + C25792) * C25561 +
                     (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C25555 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C25560) *
                        C50710 * C50817) *
                       C50620) *
                      C281 +
                  ((((C25974 + C25973 + C25972) * C25560 +
                     (C25971 + C25970 + C25969) * C25555 +
                     (C26303 + C26304 + C26305) * C25561 +
                     (C26306 + C26307 + C26308) * C50525) *
                        C50710 * C50648 -
                    ((C25605 + C25606 + C25607) * C50525 +
                     (C25608 + C25609 + C25610) * C25561 +
                     (C25604 + C25603 + C25602) * C25555 +
                     (C25601 + C25600 + C25599) * C25560) *
                        C50710 * C50817) *
                       C50816 +
                   (((C25792 + C25791 + C25790) * C25560 +
                     (C25789 + C25788 + C25787) * C25555 +
                     (C26139 + C26140 + C26141) * C25561 +
                     (C26142 + C26143 + C26144) * C50525) *
                        C50710 * C50817 -
                    ((C25559 * C4180 + C25554 * C4186 + C25558 * C1568 +
                      C50853 * C1575 + C25557 * C899 + C50864 * C906) *
                         C50525 +
                     (C25559 * C4177 + C25554 * C4181 + C25558 * C1563 +
                      C50853 * C1569 + C25557 * C891 + C50864 * C898) *
                         C25561 +
                     (C26520 + C26519 + C26518) * C25555 +
                     (C26517 + C26516 + C26515) * C25560) *
                        C50710 * C50648) *
                       C50620) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50584 * C278 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50584 * C279 +
                   ((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C25560 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C25555 +
                    (C25793 + C25794 + C25795) * C25561 +
                    (C25796 + C25797 + C25798) * C50525) *
                       C50710 * C50584 * C280) *
                      C281 +
                  (((C25792 + C25791 + C25790) * C25560 +
                    (C25789 + C25788 + C25787) * C25555 +
                    (C25557 * C284 + C50864 * C296 + C25558 * C289 +
                     C50853 * C305 + C25559 * C1102 + C25554 * C1108) *
                        C25561 +
                    (C25557 * C295 + C50864 * C314 + C25558 * C306 +
                     C50853 * C319 + C25559 * C1107 + C25554 * C1114) *
                        C50525) *
                       C50710 * C50584 * C279 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50584 * C278 -
                   ((C25559 * C3524 + C25554 * C3530 + C25558 * C1107 +
                     C50853 * C1114 + C25557 * C306 + C50864 * C319) *
                        C50525 +
                    (C25559 * C3521 + C25554 * C3525 + C25558 * C1102 +
                     C50853 * C1108 + C25557 * C289 + C50864 * C305) *
                        C25561 +
                    (C25798 + C25797 + C25796) * C25555 +
                    (C25795 + C25794 + C25793) * C25560) *
                       C50710 * C50584 * C280) *
                      C50555)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                    C50853 * C300 + C25559 * C287 + C25554 * C301) *
                       C25560 +
                   (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                    C50853 * C316 + C25559 * C302 + C25554 * C317) *
                       C25555 +
                   (C25599 + C25600 + C25601) * C25561 +
                   (C25602 + C25603 + C25604) * C50525) *
                      C50710 * C50584 * C50568 * C113 -
                  ((C25605 + C25606 + C25607) * C50525 +
                   (C25608 + C25609 + C25610) * C25561 +
                   (C25604 + C25603 + C25602) * C25555 +
                   (C25601 + C25600 + C25599) * C25560) *
                      C50710 * C50584 * C50568 * C114 +
                  ((C25610 + C25609 + C25608) * C25560 +
                   (C25607 + C25606 + C25605) * C25555 +
                   (C25611 + C25612 + C25613) * C25561 +
                   (C25614 + C25615 + C25616) * C50525) *
                      C50710 * C50584 * C50568 * C115 -
                  ((C25559 * C311 + C25554 * C322 + C25558 * C310 +
                    C50853 * C321 + C25557 * C137 + C50864 * C147) *
                       C50525 +
                   (C25559 * C292 + C25554 * C312 + C25558 * C291 +
                    C50853 * C309 + C25557 * C126 + C50864 * C138) *
                       C25561 +
                   (C25616 + C25615 + C25614) * C25555 +
                   (C25613 + C25612 + C25611) * C25560) *
                      C50710 * C50584 * C50568 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C457 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C458 +
                   ((C25557 * C464 + C50864 * C478 + C25558 * C1218 +
                     C50853 * C1226 + C25559 * C3681 + C25554 * C3687) *
                        C25560 +
                    (C25557 * C479 + C50864 * C494 + C25558 * C1225 +
                     C50853 * C1230 + C25559 * C3686 + C25554 * C3690) *
                        C25555 +
                    (C25975 + C25976 + C25977) * C25561 +
                    (C25978 + C25979 + C25980) * C50525) *
                       C50710 * C459) *
                      C50568 * C281 +
                  (((C25974 + C25973 + C25972) * C25560 +
                    (C25971 + C25970 + C25969) * C25555 +
                    (C25557 * C461 + C50864 * C473 + C25558 * C891 +
                     C50853 * C898 + C25559 * C1563 + C25554 * C1569) *
                        C25561 +
                    (C25557 * C472 + C50864 * C491 + C25558 * C899 +
                     C50853 * C906 + C25559 * C1568 + C25554 * C1575) *
                        C50525) *
                       C50710 * C458 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C457 -
                   ((C25559 * C3682 + C25554 * C3688 + C25558 * C1221 +
                     C50853 * C1228 + C25557 * C483 + C50864 * C496) *
                        C50525 +
                    (C25559 * C3679 + C25554 * C3683 + C25558 * C1216 +
                     C50853 * C1222 + C25557 * C466 + C50864 * C482) *
                        C25561 +
                    (C25980 + C25979 + C25978) * C25555 +
                    (C25977 + C25976 + C25975) * C25560) *
                       C50710 * C459) *
                      C50568 * C50555)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50817 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50648) *
                      C50568 * C50858 +
                  (((C25974 + C25973 + C25972) * C25560 +
                    (C25971 + C25970 + C25969) * C25555 +
                    (C26303 + C26304 + C26305) * C25561 +
                    (C26306 + C26307 + C26308) * C50525) *
                       C50710 * C50648 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50817) *
                      C50568 * C50859 +
                  (((C25610 + C25609 + C25608) * C25560 +
                    (C25607 + C25606 + C25605) * C25555 +
                    (C25611 + C25612 + C25613) * C25561 +
                    (C25614 + C25615 + C25616) * C50525) *
                       C50710 * C50817 -
                   ((C25559 * C1566 + C25554 * C1574 + C25558 * C901 +
                     C50853 * C907 + C25557 * C470 + C50864 * C490) *
                        C50525 +
                    (C25559 * C1562 + C25554 * C1567 + C25558 * C892 +
                     C50853 * C900 + C25557 * C460 + C50864 * C471) *
                        C25561 +
                    (C26308 + C26307 + C26306) * C25555 +
                    (C26305 + C26304 + C26303) * C25560) *
                       C50710 * C50648) *
                      C50568 * C638)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                    C50853 * C300 + C25559 * C287 + C25554 * C301) *
                       C25560 +
                   (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                    C50853 * C316 + C25559 * C302 + C25554 * C317) *
                       C25555 +
                   (C25599 + C25600 + C25601) * C25561 +
                   (C25602 + C25603 + C25604) * C50525) *
                      C50710 * C50584 * C50568 * C113 -
                  ((C25605 + C25606 + C25607) * C50525 +
                   (C25608 + C25609 + C25610) * C25561 +
                   (C25604 + C25603 + C25602) * C25555 +
                   (C25601 + C25600 + C25599) * C25560) *
                      C50710 * C50584 * C50568 * C114 +
                  ((C25610 + C25609 + C25608) * C25560 +
                   (C25607 + C25606 + C25605) * C25555 +
                   (C25611 + C25612 + C25613) * C25561 +
                   (C25614 + C25615 + C25616) * C50525) *
                      C50710 * C50584 * C50568 * C115 -
                  ((C25559 * C311 + C25554 * C322 + C25558 * C310 +
                    C50853 * C321 + C25557 * C137 + C50864 * C147) *
                       C50525 +
                   (C25559 * C292 + C25554 * C312 + C25558 * C291 +
                    C50853 * C309 + C25557 * C126 + C50864 * C138) *
                       C25561 +
                   (C25616 + C25615 + C25614) * C25555 +
                   (C25613 + C25612 + C25611) * C25560) *
                      C50710 * C50584 * C50568 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50584 * C278 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50584 * C279 +
                   ((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C25560 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C25555 +
                    (C25793 + C25794 + C25795) * C25561 +
                    (C25796 + C25797 + C25798) * C50525) *
                       C50710 * C50584 * C280) *
                      C281 +
                  (((C25792 + C25791 + C25790) * C25560 +
                    (C25789 + C25788 + C25787) * C25555 +
                    (C25557 * C284 + C50864 * C296 + C25558 * C289 +
                     C50853 * C305 + C25559 * C1102 + C25554 * C1108) *
                        C25561 +
                    (C25557 * C295 + C50864 * C314 + C25558 * C306 +
                     C50853 * C319 + C25559 * C1107 + C25554 * C1114) *
                        C50525) *
                       C50710 * C50584 * C279 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50584 * C278 -
                   ((C25559 * C3524 + C25554 * C3530 + C25558 * C1107 +
                     C50853 * C1114 + C25557 * C306 + C50864 * C319) *
                        C50525 +
                    (C25559 * C3521 + C25554 * C3525 + C25558 * C1102 +
                     C50853 * C1108 + C25557 * C289 + C50864 * C305) *
                        C25561 +
                    (C25798 + C25797 + C25796) * C25555 +
                    (C25795 + C25794 + C25793) * C25560) *
                       C50710 * C50584 * C280) *
                      C50555)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50584 * C50860 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50584 * C50861 +
                   ((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C25560 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C25555 +
                    (C25793 + C25794 + C25795) * C25561 +
                    (C25796 + C25797 + C25798) * C50525) *
                       C50710 * C50584 * C1331) *
                      C50808 +
                  (((C25792 + C25791 + C25790) * C25560 +
                    (C25789 + C25788 + C25787) * C25555 +
                    (C26139 + C26140 + C26141) * C25561 +
                    (C26142 + C26143 + C26144) * C50525) *
                       C50710 * C50584 * C50861 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50584 * C50860 -
                   ((C25559 * C3524 + C25554 * C3530 + C25558 * C1107 +
                     C50853 * C1114 + C25557 * C306 + C50864 * C319) *
                        C50525 +
                    (C25559 * C3521 + C25554 * C3525 + C25558 * C1102 +
                     C50853 * C1108 + C25557 * C289 + C50864 * C305) *
                        C25561 +
                    (C25798 + C25797 + C25796) * C25555 +
                    (C25795 + C25794 + C25793) * C25560) *
                       C50710 * C50584 * C1331) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50817 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50648) *
                      C50860 +
                  (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                     C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                        C25560 +
                    (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                     C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                        C25555 +
                    (C26515 + C26516 + C26517) * C25561 +
                    (C26518 + C26519 + C26520) * C50525) *
                       C50710 * C50648 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50817) *
                      C50861 +
                  (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C25560 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C25555 +
                    (C25793 + C25794 + C25795) * C25561 +
                    (C25796 + C25797 + C25798) * C50525) *
                       C50710 * C50817 -
                   ((C25559 * C9811 + C25554 * C9815 + C25558 * C4182 +
                     C50853 * C4187 + C25557 * C1570 + C50864 * C1576) *
                        C50525 +
                    (C25559 * C9809 + C25554 * C9812 + C25558 * C4178 +
                     C50853 * C4183 + C25557 * C1564 + C50864 * C1571) *
                        C25561 +
                    (C25559 * C9813 + C25554 * C9816 + C25558 * C4184 +
                     C50853 * C4188 + C25557 * C1572 + C50864 * C1577) *
                        C25555 +
                    (C25559 * C9810 + C25554 * C9814 + C25558 * C4179 +
                     C50853 * C4185 + C25557 * C1565 + C50864 * C1573) *
                        C25560) *
                       C50710 * C50648) *
                      C1331) *
                 C50549) /
                (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                    C50853 * C300 + C25559 * C287 + C25554 * C301) *
                       C25560 +
                   (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                    C50853 * C316 + C25559 * C302 + C25554 * C317) *
                       C25555 +
                   (C25599 + C25600 + C25601) * C25561 +
                   (C25602 + C25603 + C25604) * C50525) *
                      C50710 * C50584 * C1096 -
                  ((C25787 + C25788 + C25789) * C50525 +
                   (C25790 + C25791 + C25792) * C25561 +
                   (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                    C50853 * C317 + C25557 * C299 + C50864 * C316) *
                       C25555 +
                   (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                    C50853 * C301 + C25557 * C286 + C50864 * C300) *
                       C25560) *
                      C50710 * C50584 * C1097 +
                  ((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                    C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                       C25560 +
                   (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                    C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                       C25555 +
                   (C25793 + C25794 + C25795) * C25561 +
                   (C25796 + C25797 + C25798) * C50525) *
                      C50710 * C50584 * C1098 -
                  ((C25559 * C9163 + C25554 * C9167 + C25558 * C3526 +
                    C50853 * C3531 + C25557 * C1109 + C50864 * C1115) *
                       C50525 +
                   (C25559 * C9161 + C25554 * C9164 + C25558 * C3522 +
                    C50853 * C3527 + C25557 * C1103 + C50864 * C1110) *
                       C25561 +
                   (C25559 * C9165 + C25554 * C9168 + C25558 * C3528 +
                    C50853 * C3532 + C25557 * C1111 + C50864 * C1116) *
                       C25555 +
                   (C25559 * C9162 + C25554 * C9166 + C25558 * C3523 +
                    C50853 * C3529 + C25557 * C1104 + C50864 * C1112) *
                       C25560) *
                      C50710 * C50584 * C1099) *
                 C50549) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50584 * C1025 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50584 * C50620) *
                      C1027 +
                  (((C25792 + C25791 + C25790) * C25560 +
                    (C25789 + C25788 + C25787) * C25555 +
                    (C26139 + C26140 + C26141) * C25561 +
                    (C26142 + C26143 + C26144) * C50525) *
                       C50710 * C50584 * C50620 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50584 * C1025) *
                      C1028 +
                  (((C25610 + C25609 + C25608) * C25560 +
                    (C25607 + C25606 + C25605) * C25555 +
                    (C25611 + C25612 + C25613) * C25561 +
                    (C25614 + C25615 + C25616) * C50525) *
                       C50710 * C50584 * C1025 -
                   ((C25559 * C1105 + C25554 * C1113 + C25558 * C308 +
                     C50853 * C320 + C25557 * C293 + C50864 * C313) *
                        C50525 +
                    (C25559 * C1101 + C25554 * C1106 + C25558 * C290 +
                     C50853 * C307 + C25557 * C283 + C50864 * C294) *
                        C25561 +
                    (C26144 + C26143 + C26142) * C25555 +
                    (C26141 + C26140 + C26139) * C25560) *
                       C50710 * C50584 * C50620) *
                      C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C457 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C458 +
                   ((C25557 * C464 + C50864 * C478 + C25558 * C1218 +
                     C50853 * C1226 + C25559 * C3681 + C25554 * C3687) *
                        C25560 +
                    (C25557 * C479 + C50864 * C494 + C25558 * C1225 +
                     C50853 * C1230 + C25559 * C3686 + C25554 * C3690) *
                        C25555 +
                    (C25975 + C25976 + C25977) * C25561 +
                    (C25978 + C25979 + C25980) * C50525) *
                       C50710 * C459) *
                      C1025 +
                  (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                     C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                        C25560 +
                    (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                     C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                        C25555 +
                    (C26515 + C26516 + C26517) * C25561 +
                    (C26518 + C26519 + C26520) * C50525) *
                       C50710 * C458 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C457 -
                   ((C25559 * C9317 + C25554 * C9321 + C25558 * C3684 +
                     C50853 * C3689 + C25557 * C1223 + C50864 * C1229) *
                        C50525 +
                    (C25559 * C9315 + C25554 * C9318 + C25558 * C3680 +
                     C50853 * C3685 + C25557 * C1217 + C50864 * C1224) *
                        C25561 +
                    (C25559 * C9319 + C25554 * C9322 + C25558 * C3686 +
                     C50853 * C3690 + C25557 * C1225 + C50864 * C1230) *
                        C25555 +
                    (C25559 * C9316 + C25554 * C9320 + C25558 * C3681 +
                     C50853 * C3687 + C25557 * C1218 + C50864 * C1226) *
                        C25560) *
                       C50710 * C459) *
                      C50620) *
                 C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C25560 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C25555 +
                     (C25599 + C25600 + C25601) * C25561 +
                     (C25602 + C25603 + C25604) * C50525) *
                        C50710 * C50817 -
                    ((C25969 + C25970 + C25971) * C50525 +
                     (C25972 + C25973 + C25974) * C25561 +
                     (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                      C50853 * C904 + C25557 * C476 + C50864 * C493) *
                         C25555 +
                     (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                      C50853 * C894 + C25557 * C463 + C50864 * C477) *
                         C25560) *
                        C50710 * C50648) *
                       C1025 +
                   (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                      C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                         C25560 +
                     (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                      C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                         C25555 +
                     (C26515 + C26516 + C26517) * C25561 +
                     (C26518 + C26519 + C26520) * C50525) *
                        C50710 * C50648 -
                    ((C25787 + C25788 + C25789) * C50525 +
                     (C25790 + C25791 + C25792) * C25561 +
                     (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C25555 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C25560) *
                        C50710 * C50817) *
                       C50620) *
                      C50808 +
                  ((((C25974 + C25973 + C25972) * C25560 +
                     (C25971 + C25970 + C25969) * C25555 +
                     (C26303 + C26304 + C26305) * C25561 +
                     (C26306 + C26307 + C26308) * C50525) *
                        C50710 * C50648 -
                    ((C25605 + C25606 + C25607) * C50525 +
                     (C25608 + C25609 + C25610) * C25561 +
                     (C25604 + C25603 + C25602) * C25555 +
                     (C25601 + C25600 + C25599) * C25560) *
                        C50710 * C50817) *
                       C1025 +
                   (((C25792 + C25791 + C25790) * C25560 +
                     (C25789 + C25788 + C25787) * C25555 +
                     (C26139 + C26140 + C26141) * C25561 +
                     (C26142 + C26143 + C26144) * C50525) *
                        C50710 * C50817 -
                    ((C25559 * C4180 + C25554 * C4186 + C25558 * C1568 +
                      C50853 * C1575 + C25557 * C899 + C50864 * C906) *
                         C50525 +
                     (C25559 * C4177 + C25554 * C4181 + C25558 * C1563 +
                      C50853 * C1569 + C25557 * C891 + C50864 * C898) *
                         C25561 +
                     (C26520 + C26519 + C26518) * C25555 +
                     (C26517 + C26516 + C26515) * C25560) *
                        C50710 * C50648) *
                       C50620) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50584 * C1025 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50584 * C50620) *
                      C1027 +
                  (((C25792 + C25791 + C25790) * C25560 +
                    (C25789 + C25788 + C25787) * C25555 +
                    (C26139 + C26140 + C26141) * C25561 +
                    (C26142 + C26143 + C26144) * C50525) *
                       C50710 * C50584 * C50620 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50584 * C1025) *
                      C1028 +
                  (((C25610 + C25609 + C25608) * C25560 +
                    (C25607 + C25606 + C25605) * C25555 +
                    (C25611 + C25612 + C25613) * C25561 +
                    (C25614 + C25615 + C25616) * C50525) *
                       C50710 * C50584 * C1025 -
                   ((C25559 * C1105 + C25554 * C1113 + C25558 * C308 +
                     C50853 * C320 + C25557 * C293 + C50864 * C313) *
                        C50525 +
                    (C25559 * C1101 + C25554 * C1106 + C25558 * C290 +
                     C50853 * C307 + C25557 * C283 + C50864 * C294) *
                        C25561 +
                    (C26144 + C26143 + C26142) * C25555 +
                    (C26141 + C26140 + C26139) * C25560) *
                       C50710 * C50584 * C50620) *
                      C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                    C50853 * C300 + C25559 * C287 + C25554 * C301) *
                       C25560 +
                   (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                    C50853 * C316 + C25559 * C302 + C25554 * C317) *
                       C25555 +
                   (C25599 + C25600 + C25601) * C25561 +
                   (C25602 + C25603 + C25604) * C50525) *
                      C50710 * C50584 * C1096 -
                  ((C25787 + C25788 + C25789) * C50525 +
                   (C25790 + C25791 + C25792) * C25561 +
                   (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                    C50853 * C317 + C25557 * C299 + C50864 * C316) *
                       C25555 +
                   (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                    C50853 * C301 + C25557 * C286 + C50864 * C300) *
                       C25560) *
                      C50710 * C50584 * C1097 +
                  ((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                    C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                       C25560 +
                   (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                    C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                       C25555 +
                   (C25793 + C25794 + C25795) * C25561 +
                   (C25796 + C25797 + C25798) * C50525) *
                      C50710 * C50584 * C1098 -
                  ((C25559 * C9163 + C25554 * C9167 + C25558 * C3526 +
                    C50853 * C3531 + C25557 * C1109 + C50864 * C1115) *
                       C50525 +
                   (C25559 * C9161 + C25554 * C9164 + C25558 * C3522 +
                    C50853 * C3527 + C25557 * C1103 + C50864 * C1110) *
                       C25561 +
                   (C25559 * C9165 + C25554 * C9168 + C25558 * C3528 +
                    C50853 * C3532 + C25557 * C1111 + C50864 * C1116) *
                       C25555 +
                   (C25559 * C9162 + C25554 * C9166 + C25558 * C3523 +
                    C50853 * C3529 + C25557 * C1104 + C50864 * C1112) *
                       C25560) *
                      C50710 * C50584 * C1099) *
                 C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C25560 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C25555 +
                     (C25599 + C25600 + C25601) * C25561 +
                     (C25602 + C25603 + C25604) * C50525) *
                        C50710 * C1676 -
                    ((C25969 + C25970 + C25971) * C50525 +
                     (C25972 + C25973 + C25974) * C25561 +
                     (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                      C50853 * C904 + C25557 * C476 + C50864 * C493) *
                         C25555 +
                     (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                      C50853 * C894 + C25557 * C463 + C50864 * C477) *
                         C25560) *
                        C50710 * C50648) *
                       C50816 +
                   (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                      C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                         C25560 +
                     (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                      C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                         C25555 +
                     (C26515 + C26516 + C26517) * C25561 +
                     (C26518 + C26519 + C26520) * C50525) *
                        C50710 * C50648 -
                    ((C25787 + C25788 + C25789) * C50525 +
                     (C25790 + C25791 + C25792) * C25561 +
                     (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C25555 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C25560) *
                        C50710 * C1676) *
                       C50620) *
                      C50808 +
                  ((((C25974 + C25973 + C25972) * C25560 +
                     (C25971 + C25970 + C25969) * C25555 +
                     (C26303 + C26304 + C26305) * C25561 +
                     (C26306 + C26307 + C26308) * C50525) *
                        C50710 * C50648 -
                    ((C25605 + C25606 + C25607) * C50525 +
                     (C25608 + C25609 + C25610) * C25561 +
                     (C25604 + C25603 + C25602) * C25555 +
                     (C25601 + C25600 + C25599) * C25560) *
                        C50710 * C1676) *
                       C50816 +
                   (((C25792 + C25791 + C25790) * C25560 +
                     (C25789 + C25788 + C25787) * C25555 +
                     (C26139 + C26140 + C26141) * C25561 +
                     (C26142 + C26143 + C26144) * C50525) *
                        C50710 * C1676 -
                    ((C25559 * C4180 + C25554 * C4186 + C25558 * C1568 +
                      C50853 * C1575 + C25557 * C899 + C50864 * C906) *
                         C50525 +
                     (C25559 * C4177 + C25554 * C4181 + C25558 * C1563 +
                      C50853 * C1569 + C25557 * C891 + C50864 * C898) *
                         C25561 +
                     (C26520 + C26519 + C26518) * C25555 +
                     (C26517 + C26516 + C26515) * C25560) *
                        C50710 * C50648) *
                       C50620) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50862 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50863 +
                   ((C25557 * C464 + C50864 * C478 + C25558 * C1218 +
                     C50853 * C1226 + C25559 * C3681 + C25554 * C3687) *
                        C25560 +
                    (C25557 * C479 + C50864 * C494 + C25558 * C1225 +
                     C50853 * C1230 + C25559 * C3686 + C25554 * C3690) *
                        C25555 +
                    (C25975 + C25976 + C25977) * C25561 +
                    (C25978 + C25979 + C25980) * C50525) *
                       C50710 * C2092) *
                      C50816 +
                  (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                     C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                        C25560 +
                    (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                     C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                        C25555 +
                    (C26515 + C26516 + C26517) * C25561 +
                    (C26518 + C26519 + C26520) * C50525) *
                       C50710 * C50863 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C50862 -
                   ((C25559 * C9317 + C25554 * C9321 + C25558 * C3684 +
                     C50853 * C3689 + C25557 * C1223 + C50864 * C1229) *
                        C50525 +
                    (C25559 * C9315 + C25554 * C9318 + C25558 * C3680 +
                     C50853 * C3685 + C25557 * C1217 + C50864 * C1224) *
                        C25561 +
                    (C25559 * C9319 + C25554 * C9322 + C25558 * C3686 +
                     C50853 * C3690 + C25557 * C1225 + C50864 * C1230) *
                        C25555 +
                    (C25559 * C9316 + C25554 * C9320 + C25558 * C3681 +
                     C50853 * C3687 + C25557 * C1218 + C50864 * C1226) *
                        C25560) *
                       C50710 * C2092) *
                      C50620) *
                 C50549) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C1676 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50648) *
                      C278 +
                  (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                     C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                        C25560 +
                    (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                     C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                        C25555 +
                    (C26515 + C26516 + C26517) * C25561 +
                    (C26518 + C26519 + C26520) * C50525) *
                       C50710 * C50648 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C1676) *
                      C279 +
                  (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C25560 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C25555 +
                    (C25793 + C25794 + C25795) * C25561 +
                    (C25796 + C25797 + C25798) * C50525) *
                       C50710 * C1676 -
                   ((C25559 * C9811 + C25554 * C9815 + C25558 * C4182 +
                     C50853 * C4187 + C25557 * C1570 + C50864 * C1576) *
                        C50525 +
                    (C25559 * C9809 + C25554 * C9812 + C25558 * C4178 +
                     C50853 * C4183 + C25557 * C1564 + C50864 * C1571) *
                        C25561 +
                    (C25559 * C9813 + C25554 * C9816 + C25558 * C4184 +
                     C50853 * C4188 + C25557 * C1572 + C50864 * C1577) *
                        C25555 +
                    (C25559 * C9810 + C25554 * C9814 + C25558 * C4179 +
                     C50853 * C4185 + C25557 * C1565 + C50864 * C1573) *
                        C25560) *
                       C50710 * C50648) *
                      C280) *
                 C50549) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C1676 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50648) *
                      C50568 * C1027 +
                  (((C25974 + C25973 + C25972) * C25560 +
                    (C25971 + C25970 + C25969) * C25555 +
                    (C26303 + C26304 + C26305) * C25561 +
                    (C26306 + C26307 + C26308) * C50525) *
                       C50710 * C50648 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C1676) *
                      C50568 * C1028 +
                  (((C25610 + C25609 + C25608) * C25560 +
                    (C25607 + C25606 + C25605) * C25555 +
                    (C25611 + C25612 + C25613) * C25561 +
                    (C25614 + C25615 + C25616) * C50525) *
                       C50710 * C1676 -
                   ((C25559 * C1566 + C25554 * C1574 + C25558 * C901 +
                     C50853 * C907 + C25557 * C470 + C50864 * C490) *
                        C50525 +
                    (C25559 * C1562 + C25554 * C1567 + C25558 * C892 +
                     C50853 * C900 + C25557 * C460 + C50864 * C471) *
                        C25561 +
                    (C26308 + C26307 + C26306) * C25555 +
                    (C26305 + C26304 + C26303) * C25560) *
                       C50710 * C50648) *
                      C50568 * C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                    C50853 * C300 + C25559 * C287 + C25554 * C301) *
                       C25560 +
                   (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                    C50853 * C316 + C25559 * C302 + C25554 * C317) *
                       C25555 +
                   (C25599 + C25600 + C25601) * C25561 +
                   (C25602 + C25603 + C25604) * C50525) *
                      C50710 * C1842 -
                  ((C25969 + C25970 + C25971) * C50525 +
                   (C25972 + C25973 + C25974) * C25561 +
                   (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                    C50853 * C904 + C25557 * C476 + C50864 * C493) *
                       C25555 +
                   (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                    C50853 * C894 + C25557 * C463 + C50864 * C477) *
                       C25560) *
                      C50710 * C1843 +
                  ((C25557 * C464 + C50864 * C478 + C25558 * C1218 +
                    C50853 * C1226 + C25559 * C3681 + C25554 * C3687) *
                       C25560 +
                   (C25557 * C479 + C50864 * C494 + C25558 * C1225 +
                    C50853 * C1230 + C25559 * C3686 + C25554 * C3690) *
                       C25555 +
                   (C25975 + C25976 + C25977) * C25561 +
                   (C25978 + C25979 + C25980) * C50525) *
                      C50710 * C1844 -
                  ((C25559 * C10209 + C25554 * C10213 + C25558 * C4584 +
                    C50853 * C4589 + C25557 * C1854 + C50864 * C1860) *
                       C50525 +
                   (C25559 * C10207 + C25554 * C10210 + C25558 * C4580 +
                    C50853 * C4585 + C25557 * C1848 + C50864 * C1855) *
                       C25561 +
                   (C25559 * C10211 + C25554 * C10214 + C25558 * C4586 +
                    C50853 * C4590 + C25557 * C1856 + C50864 * C1861) *
                       C25555 +
                   (C25559 * C10208 + C25554 * C10212 + C25558 * C4581 +
                    C50853 * C4587 + C25557 * C1849 + C50864 * C1857) *
                       C25560) *
                      C50710 * C1845) *
                 C50568 * C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C50862 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50863 +
                   ((C25557 * C464 + C50864 * C478 + C25558 * C1218 +
                     C50853 * C1226 + C25559 * C3681 + C25554 * C3687) *
                        C25560 +
                    (C25557 * C479 + C50864 * C494 + C25558 * C1225 +
                     C50853 * C1230 + C25559 * C3686 + C25554 * C3690) *
                        C25555 +
                    (C25975 + C25976 + C25977) * C25561 +
                    (C25978 + C25979 + C25980) * C50525) *
                       C50710 * C2092) *
                      C50568 * C50808 +
                  (((C25974 + C25973 + C25972) * C25560 +
                    (C25971 + C25970 + C25969) * C25555 +
                    (C26303 + C26304 + C26305) * C25561 +
                    (C26306 + C26307 + C26308) * C50525) *
                       C50710 * C50863 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C50862 -
                   ((C25559 * C3682 + C25554 * C3688 + C25558 * C1221 +
                     C50853 * C1228 + C25557 * C483 + C50864 * C496) *
                        C50525 +
                    (C25559 * C3679 + C25554 * C3683 + C25558 * C1216 +
                     C50853 * C1222 + C25557 * C466 + C50864 * C482) *
                        C25561 +
                    (C25980 + C25979 + C25978) * C25555 +
                    (C25977 + C25976 + C25975) * C25560) *
                       C50710 * C2092) *
                      C50568 * C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C1676 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50648) *
                      C50568 * C1027 +
                  (((C25974 + C25973 + C25972) * C25560 +
                    (C25971 + C25970 + C25969) * C25555 +
                    (C26303 + C26304 + C26305) * C25561 +
                    (C26306 + C26307 + C26308) * C50525) *
                       C50710 * C50648 -
                   ((C25605 + C25606 + C25607) * C50525 +
                    (C25608 + C25609 + C25610) * C25561 +
                    (C25604 + C25603 + C25602) * C25555 +
                    (C25601 + C25600 + C25599) * C25560) *
                       C50710 * C1676) *
                      C50568 * C1028 +
                  (((C25610 + C25609 + C25608) * C25560 +
                    (C25607 + C25606 + C25605) * C25555 +
                    (C25611 + C25612 + C25613) * C25561 +
                    (C25614 + C25615 + C25616) * C50525) *
                       C50710 * C1676 -
                   ((C25559 * C1566 + C25554 * C1574 + C25558 * C901 +
                     C50853 * C907 + C25557 * C470 + C50864 * C490) *
                        C50525 +
                    (C25559 * C1562 + C25554 * C1567 + C25558 * C892 +
                     C50853 * C900 + C25557 * C460 + C50864 * C471) *
                        C25561 +
                    (C26308 + C26307 + C26306) * C25555 +
                    (C26305 + C26304 + C26303) * C25560) *
                       C50710 * C50648) *
                      C50568 * C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C25560 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C25555 +
                    (C25599 + C25600 + C25601) * C25561 +
                    (C25602 + C25603 + C25604) * C50525) *
                       C50710 * C1676 -
                   ((C25969 + C25970 + C25971) * C50525 +
                    (C25972 + C25973 + C25974) * C25561 +
                    (C25559 * C1572 + C25554 * C1577 + C25558 * C895 +
                     C50853 * C904 + C25557 * C476 + C50864 * C493) *
                        C25555 +
                    (C25559 * C1565 + C25554 * C1573 + C25558 * C889 +
                     C50853 * C894 + C25557 * C463 + C50864 * C477) *
                        C25560) *
                       C50710 * C50648) *
                      C278 +
                  (((C25557 * C889 + C50864 * C894 + C25558 * C1565 +
                     C50853 * C1573 + C25559 * C4179 + C25554 * C4185) *
                        C25560 +
                    (C25557 * C895 + C50864 * C904 + C25558 * C1572 +
                     C50853 * C1577 + C25559 * C4184 + C25554 * C4188) *
                        C25555 +
                    (C26515 + C26516 + C26517) * C25561 +
                    (C26518 + C26519 + C26520) * C50525) *
                       C50710 * C50648 -
                   ((C25787 + C25788 + C25789) * C50525 +
                    (C25790 + C25791 + C25792) * C25561 +
                    (C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C25555 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C25560) *
                       C50710 * C1676) *
                      C279 +
                  (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C25560 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C25555 +
                    (C25793 + C25794 + C25795) * C25561 +
                    (C25796 + C25797 + C25798) * C50525) *
                       C50710 * C1676 -
                   ((C25559 * C9811 + C25554 * C9815 + C25558 * C4182 +
                     C50853 * C4187 + C25557 * C1570 + C50864 * C1576) *
                        C50525 +
                    (C25559 * C9809 + C25554 * C9812 + C25558 * C4178 +
                     C50853 * C4183 + C25557 * C1564 + C50864 * C1571) *
                        C25561 +
                    (C25559 * C9813 + C25554 * C9816 + C25558 * C4184 +
                     C50853 * C4188 + C25557 * C1572 + C50864 * C1577) *
                        C25555 +
                    (C25559 * C9810 + C25554 * C9814 + C25558 * C4179 +
                     C50853 * C4185 + C25557 * C1565 + C50864 * C1573) *
                        C25560) *
                       C50710 * C50648) *
                      C280) *
                 C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50584 * C50816 -
           (((C23698 + C23697) * C50525 + (C23696 + C23695) * C25561 +
             (C22720 * C1572 + C50696 * C1577 + C22719 * C895 + C22714 * C904) *
                 C25555 +
             (C22720 * C1565 + C50696 * C1573 + C22719 * C889 + C22714 * C894) *
                 C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50584 * C50620) *
              C50858 +
          ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
             (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                C50828 +
            ((C23695 + C23696) * C25560 + (C23697 + C23698) * C25555 +
             (C23699 + C23700) * C25561 + (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50584 * C50816) *
              C50859 +
          (((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
             (C22766 + C22765) * C50525) *
                C50828 +
            ((C23152 + C23151) * C25560 + (C23150 + C23149) * C25555 +
             (C23481 + C23482) * C25561 + (C23483 + C23484) * C50525) *
                C50722) *
               C50584 * C50816 -
           (((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C50525 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C25561 +
             (C23702 + C23701) * C25555 + (C23700 + C23699) * C25560) *
                C50722 +
            ((C23324 + C23323) * C50525 + (C23322 + C23321) * C25561 +
             C23311 * C25555 + C23312 * C25560) *
                C50828) *
               C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C25560 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C25555 +
              (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                 C50828 +
             ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
              C28811 * C25561 + C28812 * C50525) *
                 C50722) *
                C50817 -
            ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
              (C28841 + C28842) * C25560) *
                 C50722 +
             (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
              (C28836 + C28835) * C25560) *
                 C50828) *
                C50648) *
               C50816 +
           ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
              C29503 * C25561 + C29504 * C50525) *
                 C50828 +
             ((C22719 * C1218 + C22714 * C1226 + C22720 * C3681 +
               C50696 * C3687) *
                  C25560 +
              (C22719 * C1225 + C22714 * C1230 + C22720 * C3686 +
               C50696 * C3690) *
                  C25555 +
              (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                 C50722) *
                C50648 -
            ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
              (C29516 + C29515) * C25560) *
                 C50722 +
             ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
              (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C25555 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C25560) *
                 C50828) *
                C50817) *
               C50620) *
              C281 +
          ((((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
              C29236 * C50525) *
                 C50828 +
             (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
              (C23163 + C23164) * C50525) *
                 C50722) *
                C50648 -
            ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
              C28824 * C25560) *
                 C50722 +
             ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
              (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                 C50828) *
                C50817) *
               C50816 +
           ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
              (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                 C50828 +
             (C29503 * C25560 + C29504 * C25555 + (C23699 + C23700) * C25561 +
              (C23701 + C23702) * C50525) *
                 C50722) *
                C50817 -
            (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
               C22714 * C1228) *
                  C50525 +
              (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
               C22714 * C1222) *
                  C25561 +
              (C29522 + C29521) * C25555 + (C29520 + C29519) * C25560) *
                 C50722 +
             ((C23702 + C23701) * C50525 + (C23700 + C23699) * C25561 +
              C29513 * C25555 + C29514 * C25560) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C22719 * C463 + C22714 * C477 + C22720 * C889 + C50696 * C894) *
                 C25560 +
             (C22719 * C476 + C22714 * C493 + C22720 * C895 + C50696 * C904) *
                 C25555 +
             (C23156 + C23155) * C25561 + (C23154 + C23153) * C50525) *
                C50722) *
               C50584 * C278 -
           (((C23698 + C23697) * C50525 + (C23696 + C23695) * C25561 +
             (C22720 * C1572 + C50696 * C1577 + C22719 * C895 + C22714 * C904) *
                 C25555 +
             (C22720 * C1565 + C50696 * C1573 + C22719 * C889 + C22714 * C894) *
                 C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50584 * C279 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C25560 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C25555 +
             (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
                C50828 +
            ((C22719 * C1565 + C22714 * C1573 + C22720 * C4179 +
              C50696 * C4185) *
                 C25560 +
             (C22719 * C1572 + C22714 * C1577 + C22720 * C4184 +
              C50696 * C4188) *
                 C25555 +
             (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
             (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                C50828 +
            ((C23695 + C23696) * C25560 + (C23697 + C23698) * C25555 +
             (C23699 + C23700) * C25561 + (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C279 -
           ((C23471 * C50525 + C23472 * C25561 + (C23153 + C23154) * C25555 +
             (C23155 + C23156) * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50584 * C278 -
           (((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
              C22714 * C1575) *
                 C50525 +
             (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
              C22714 * C1569) *
                 C25561 +
             (C28608 + C28607) * C25555 + (C28606 + C28605) * C25560) *
                C50722 +
            ((C22970 + C22969) * C50525 + (C22968 + C22967) * C25561 +
             (C22966 + C22965) * C25555 + (C22964 + C22963) * C25560) *
                C50828) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C25560 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C25555 +
            (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
               C50828 +
           ((C22719 * C463 + C22714 * C477 + C22720 * C889 + C50696 * C894) *
                C25560 +
            (C22719 * C476 + C22714 * C493 + C22720 * C895 + C50696 * C904) *
                C25555 +
            (C23156 + C23155) * C25561 + (C23154 + C23153) * C50525) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C23471 * C50525 + C23472 * C25561 + (C23153 + C23154) * C25555 +
            (C23155 + C23156) * C25560) *
               C50722 +
           ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
            (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
               C50828) *
              C50584 * C50568 * C114 +
          ((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
            (C22766 + C22765) * C50525) *
               C50828 +
           ((C23152 + C23151) * C25560 + (C23150 + C23149) * C25555 +
            (C23481 + C23482) * C25561 + (C23483 + C23484) * C50525) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C50525 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C25561 +
            (C23484 + C23483) * C25555 + (C23482 + C23481) * C25560) *
               C50722 +
           ((C22772 + C22771) * C50525 + (C22770 + C22769) * C25561 +
            C22775 * C25555 + C22776 * C25560) *
               C50828) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C457 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C458 +
           (((C28842 + C28841) * C25560 + (C28840 + C28839) * C25555 +
             C28825 * C25561 + C28826 * C50525) *
                C50828 +
            ((C22719 * C1849 + C22714 * C1857 + C22720 * C4581 +
              C50696 * C4587) *
                 C25560 +
             (C22719 * C1856 + C22714 * C1861 + C22720 * C4586 +
              C50696 * C4590) *
                 C25555 +
             (C28843 + C28844) * C25561 + (C28845 + C28846) * C50525) *
                C50722) *
               C459) *
              C50568 * C281 +
          (((C28811 * C25560 + C28812 * C25555 + (C23152 + C23151) * C25561 +
             (C23150 + C23149) * C50525) *
                C50828 +
            (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C458 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C457 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50525 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C25561 +
             (C28846 + C28845) * C25555 + (C28844 + C28843) * C25560) *
                C50722 +
            ((C23164 + C23163) * C50525 + (C23162 + C23161) * C25561 +
             C28813 * C25555 + C28814 * C25560) *
                C50828) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50817 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50648) *
              C50568 * C50858 +
          (((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
             C29236 * C50525) *
                C50828 +
            (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50648 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50817) *
              C50568 * C50859 +
          (((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
             (C22766 + C22765) * C50525) *
                C50828 +
            (C29235 * C25560 + C29236 * C25555 + (C23481 + C23482) * C25561 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50817 -
           (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                 C50525 +
             (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                 C25561 +
             (C23164 + C23163) * C25555 + (C23162 + C23161) * C25560) *
                C50722 +
            ((C23484 + C23483) * C50525 + (C23482 + C23481) * C25561 +
             C23471 * C25555 + C23472 * C25560) *
                C50828) *
               C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C25560 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C25555 +
            (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
               C50828 +
           ((C22719 * C463 + C22714 * C477 + C22720 * C889 + C50696 * C894) *
                C25560 +
            (C22719 * C476 + C22714 * C493 + C22720 * C895 + C50696 * C904) *
                C25555 +
            (C23156 + C23155) * C25561 + (C23154 + C23153) * C50525) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C23471 * C50525 + C23472 * C25561 + (C23153 + C23154) * C25555 +
            (C23155 + C23156) * C25560) *
               C50722 +
           ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
            (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
               C50828) *
              C50584 * C50568 * C114 +
          ((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
            (C22766 + C22765) * C50525) *
               C50828 +
           ((C23152 + C23151) * C25560 + (C23150 + C23149) * C25555 +
            (C23481 + C23482) * C25561 + (C23483 + C23484) * C50525) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C50525 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C25561 +
            (C23484 + C23483) * C25555 + (C23482 + C23481) * C25560) *
               C50722 +
           ((C22772 + C22771) * C50525 + (C22770 + C22769) * C25561 +
            C22775 * C25555 + C22776 * C25560) *
               C50828) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C22719 * C463 + C22714 * C477 + C22720 * C889 + C50696 * C894) *
                 C25560 +
             (C22719 * C476 + C22714 * C493 + C22720 * C895 + C50696 * C904) *
                 C25555 +
             (C23156 + C23155) * C25561 + (C23154 + C23153) * C50525) *
                C50722) *
               C50584 * C278 -
           (((C23698 + C23697) * C50525 + (C23696 + C23695) * C25561 +
             (C22720 * C1572 + C50696 * C1577 + C22719 * C895 + C22714 * C904) *
                 C25555 +
             (C22720 * C1565 + C50696 * C1573 + C22719 * C889 + C22714 * C894) *
                 C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50584 * C279 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C25560 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C25555 +
             (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
                C50828 +
            ((C22719 * C1565 + C22714 * C1573 + C22720 * C4179 +
              C50696 * C4185) *
                 C25560 +
             (C22719 * C1572 + C22714 * C1577 + C22720 * C4184 +
              C50696 * C4188) *
                 C25555 +
             (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
             (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                C50828 +
            ((C23695 + C23696) * C25560 + (C23697 + C23698) * C25555 +
             (C23699 + C23700) * C25561 + (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C279 -
           ((C23471 * C50525 + C23472 * C25561 + (C23153 + C23154) * C25555 +
             (C23155 + C23156) * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50584 * C278 -
           (((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
              C22714 * C1575) *
                 C50525 +
             (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
              C22714 * C1569) *
                 C25561 +
             (C28608 + C28607) * C25555 + (C28606 + C28605) * C25560) *
                C50722 +
            ((C22970 + C22969) * C50525 + (C22968 + C22967) * C25561 +
             (C22966 + C22965) * C25555 + (C22964 + C22963) * C25560) *
                C50828) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50584 * C50860 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50584 * C50861 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C25560 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C25555 +
             (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
                C50828 +
            ((C22719 * C1565 + C22714 * C1573 + C22720 * C4179 +
              C50696 * C4185) *
                 C25560 +
             (C22719 * C1572 + C22714 * C1577 + C22720 * C4184 +
              C50696 * C4188) *
                 C25555 +
             (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
                C50722) *
               C50584 * C1331) *
              C50808 +
          ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
             (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                C50828 +
            (C29503 * C25560 + C29504 * C25555 + (C23699 + C23700) * C25561 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50861 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50584 * C50860 -
           (((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
              C22714 * C1575) *
                 C50525 +
             (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
              C22714 * C1569) *
                 C25561 +
             (C28608 + C28607) * C25555 + (C28606 + C28605) * C25560) *
                C50722 +
            ((C22970 + C22969) * C50525 + (C22968 + C22967) * C25561 +
             (C22966 + C22965) * C25555 + (C22964 + C22963) * C25560) *
                C50828) *
               C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50817 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50648) *
              C50860 +
          ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
             C29503 * C25561 + C29504 * C50525) *
                C50828 +
            ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
             (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                C50722) *
               C50648 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50817) *
              C50861 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C25560 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C25555 +
             (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
                C50828 +
            ((C30707 + C30708) * C25560 + (C30709 + C30710) * C25555 +
             (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
                C50722) *
               C50817 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50525 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C25561 +
             (C22720 * C9319 + C50696 * C9322 + C22719 * C3686 +
              C22714 * C3690) *
                 C25555 +
             (C22720 * C9316 + C50696 * C9320 + C22719 * C3681 +
              C22714 * C3687) *
                 C25560) *
                C50722 +
            ((C28608 + C28607) * C50525 + (C28606 + C28605) * C25561 +
             (C30710 + C30709) * C25555 + (C30708 + C30707) * C25560) *
                C50828) *
               C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C25560 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C25555 +
            (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
               C50828 +
           ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
            C28811 * C25561 + C28812 * C50525) *
               C50722) *
              C50584 * C1096 -
          ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
            (C29516 + C29515) * C25560) *
               C50722 +
           ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C25555 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C25560) *
               C50828) *
              C50584 * C1097 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C25560 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C25555 +
            (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
               C50828 +
           ((C22719 * C1565 + C22714 * C1573 + C22720 * C4179 +
             C50696 * C4185) *
                C25560 +
            (C22719 * C1572 + C22714 * C1577 + C22720 * C4184 +
             C50696 * C4188) *
                C25555 +
            (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
               C50722) *
              C50584 * C1098 -
          (((C22720 * C9811 + C50696 * C9815 + C22719 * C4182 +
             C22714 * C4187) *
                C50525 +
            (C22720 * C9809 + C50696 * C9812 + C22719 * C4178 +
             C22714 * C4183) *
                C25561 +
            (C22720 * C9813 + C50696 * C9816 + C22719 * C4184 +
             C22714 * C4188) *
                C25555 +
            (C22720 * C9810 + C50696 * C9814 + C22719 * C4179 +
             C22714 * C4185) *
                C25560) *
               C50722 +
           ((C22720 * C3526 + C50696 * C3531 + C22719 * C1109 +
             C22714 * C1115) *
                C50525 +
            (C22720 * C3522 + C50696 * C3527 + C22719 * C1103 +
             C22714 * C1110) *
                C25561 +
            (C22720 * C3528 + C50696 * C3532 + C22719 * C1111 +
             C22714 * C1116) *
                C25555 +
            (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 +
             C22714 * C1112) *
                C25560) *
               C50828) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50584 * C1025 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50584 * C50620) *
              C1027 +
          ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
             (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                C50828 +
            (C29503 * C25560 + C29504 * C25555 + (C23699 + C23700) * C25561 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50584 * C1025) *
              C1028 +
          (((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
             (C22766 + C22765) * C50525) *
                C50828 +
            (C29235 * C25560 + C29236 * C25555 + (C23481 + C23482) * C25561 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50584 * C1025 -
           (((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C50525 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C25561 +
             (C23702 + C23701) * C25555 + (C23700 + C23699) * C25560) *
                C50722 +
            ((C23324 + C23323) * C50525 + (C23322 + C23321) * C25561 +
             C23311 * C25555 + C23312 * C25560) *
                C50828) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C457 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C458 +
           (((C28842 + C28841) * C25560 + (C28840 + C28839) * C25555 +
             C28825 * C25561 + C28826 * C50525) *
                C50828 +
            ((C22719 * C1849 + C22714 * C1857 + C22720 * C4581 +
              C50696 * C4587) *
                 C25560 +
             (C22719 * C1856 + C22714 * C1861 + C22720 * C4586 +
              C50696 * C4590) *
                 C25555 +
             (C28843 + C28844) * C25561 + (C28845 + C28846) * C50525) *
                C50722) *
               C459) *
              C1025 +
          ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
             C29503 * C25561 + C29504 * C50525) *
                C50828 +
            ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
             (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                C50722) *
               C458 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C457 -
           (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
              C22714 * C4589) *
                 C50525 +
             (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
              C22714 * C4585) *
                 C25561 +
             (C22720 * C10211 + C50696 * C10214 + C22719 * C4586 +
              C22714 * C4590) *
                 C25555 +
             (C22720 * C10208 + C50696 * C10212 + C22719 * C4581 +
              C22714 * C4587) *
                 C25560) *
                C50722 +
            ((C29522 + C29521) * C50525 + (C29520 + C29519) * C25561 +
             (C30052 + C30051) * C25555 + (C30050 + C30049) * C25560) *
                C50828) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C25560 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C25555 +
              (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                 C50828 +
             ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
              C28811 * C25561 + C28812 * C50525) *
                 C50722) *
                C50817 -
            ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
              (C28841 + C28842) * C25560) *
                 C50722 +
             (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
              (C28836 + C28835) * C25560) *
                 C50828) *
                C50648) *
               C1025 +
           ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
              C29503 * C25561 + C29504 * C50525) *
                 C50828 +
             ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
              (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                 C50722) *
                C50648 -
            ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
              (C29516 + C29515) * C25560) *
                 C50722 +
             ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
              (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C25555 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C25560) *
                 C50828) *
                C50817) *
               C50620) *
              C50808 +
          ((((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
              C29236 * C50525) *
                 C50828 +
             (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
              (C23163 + C23164) * C50525) *
                 C50722) *
                C50648 -
            ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
              C28824 * C25560) *
                 C50722 +
             ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
              (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                 C50828) *
                C50817) *
               C1025 +
           ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
              (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                 C50828 +
             (C29503 * C25560 + C29504 * C25555 + (C23699 + C23700) * C25561 +
              (C23701 + C23702) * C50525) *
                 C50722) *
                C50817 -
            (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
               C22714 * C1228) *
                  C50525 +
              (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
               C22714 * C1222) *
                  C25561 +
              (C29522 + C29521) * C25555 + (C29520 + C29519) * C25560) *
                 C50722 +
             ((C23702 + C23701) * C50525 + (C23700 + C23699) * C25561 +
              C29513 * C25555 + C29514 * C25560) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50584 * C1025 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50584 * C50620) *
              C1027 +
          ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
             (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                C50828 +
            (C29503 * C25560 + C29504 * C25555 + (C23699 + C23700) * C25561 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50584 * C1025) *
              C1028 +
          (((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
             (C22766 + C22765) * C50525) *
                C50828 +
            (C29235 * C25560 + C29236 * C25555 + (C23481 + C23482) * C25561 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50584 * C1025 -
           (((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C50525 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C25561 +
             (C23702 + C23701) * C25555 + (C23700 + C23699) * C25560) *
                C50722 +
            ((C23324 + C23323) * C50525 + (C23322 + C23321) * C25561 +
             C23311 * C25555 + C23312 * C25560) *
                C50828) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C25560 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C25555 +
            (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
               C50828 +
           ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
            C28811 * C25561 + C28812 * C50525) *
               C50722) *
              C50584 * C1096 -
          ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
            (C29516 + C29515) * C25560) *
               C50722 +
           ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C25555 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C25560) *
               C50828) *
              C50584 * C1097 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C25560 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C25555 +
            (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
               C50828 +
           ((C22719 * C1565 + C22714 * C1573 + C22720 * C4179 +
             C50696 * C4185) *
                C25560 +
            (C22719 * C1572 + C22714 * C1577 + C22720 * C4184 +
             C50696 * C4188) *
                C25555 +
            (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
               C50722) *
              C50584 * C1098 -
          (((C22720 * C9811 + C50696 * C9815 + C22719 * C4182 +
             C22714 * C4187) *
                C50525 +
            (C22720 * C9809 + C50696 * C9812 + C22719 * C4178 +
             C22714 * C4183) *
                C25561 +
            (C22720 * C9813 + C50696 * C9816 + C22719 * C4184 +
             C22714 * C4188) *
                C25555 +
            (C22720 * C9810 + C50696 * C9814 + C22719 * C4179 +
             C22714 * C4185) *
                C25560) *
               C50722 +
           ((C22720 * C3526 + C50696 * C3531 + C22719 * C1109 +
             C22714 * C1115) *
                C50525 +
            (C22720 * C3522 + C50696 * C3527 + C22719 * C1103 +
             C22714 * C1110) *
                C25561 +
            (C22720 * C3528 + C50696 * C3532 + C22719 * C1111 +
             C22714 * C1116) *
                C25555 +
            (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 +
             C22714 * C1112) *
                C25560) *
               C50828) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C25560 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C25555 +
              (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                 C50828 +
             ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
              C28811 * C25561 + C28812 * C50525) *
                 C50722) *
                C1676 -
            ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
              (C28841 + C28842) * C25560) *
                 C50722 +
             (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
              (C28836 + C28835) * C25560) *
                 C50828) *
                C50648) *
               C50816 +
           ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
              C29503 * C25561 + C29504 * C50525) *
                 C50828 +
             ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
              (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                 C50722) *
                C50648 -
            ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
              (C29516 + C29515) * C25560) *
                 C50722 +
             ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
              (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C25555 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C25560) *
                 C50828) *
                C1676) *
               C50620) *
              C50808 +
          ((((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
              C29236 * C50525) *
                 C50828 +
             (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
              (C23163 + C23164) * C50525) *
                 C50722) *
                C50648 -
            ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
              C28824 * C25560) *
                 C50722 +
             ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
              (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                 C50828) *
                C1676) *
               C50816 +
           ((((C22962 + C22961) * C25560 + (C22960 + C22959) * C25555 +
              (C22958 + C22957) * C25561 + (C22956 + C22955) * C50525) *
                 C50828 +
             (C29503 * C25560 + C29504 * C25555 + (C23699 + C23700) * C25561 +
              (C23701 + C23702) * C50525) *
                 C50722) *
                C1676 -
            (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
               C22714 * C1228) *
                  C50525 +
              (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
               C22714 * C1222) *
                  C25561 +
              (C29522 + C29521) * C25555 + (C29520 + C29519) * C25560) *
                 C50722 +
             ((C23702 + C23701) * C50525 + (C23700 + C23699) * C25561 +
              C29513 * C25555 + C29514 * C25560) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50862 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50863 +
           (((C28842 + C28841) * C25560 + (C28840 + C28839) * C25555 +
             C28825 * C25561 + C28826 * C50525) *
                C50828 +
            ((C31237 + C31238) * C25560 + (C31239 + C31240) * C25555 +
             (C28843 + C28844) * C25561 + (C28845 + C28846) * C50525) *
                C50722) *
               C2092) *
              C50816 +
          ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
             C29503 * C25561 + C29504 * C50525) *
                C50828 +
            ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
             (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                C50722) *
               C50863 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C50862 -
           (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
              C22714 * C4589) *
                 C50525 +
             (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
              C22714 * C4585) *
                 C25561 +
             (C22720 * C10211 + C50696 * C10214 + C22719 * C4586 +
              C22714 * C4590) *
                 C25555 +
             (C22720 * C10208 + C50696 * C10212 + C22719 * C4581 +
              C22714 * C4587) *
                 C25560) *
                C50722 +
            ((C29522 + C29521) * C50525 + (C29520 + C29519) * C25561 +
             (C30052 + C30051) * C25555 + (C30050 + C30049) * C25560) *
                C50828) *
               C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50648) *
              C278 +
          ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
             C29503 * C25561 + C29504 * C50525) *
                C50828 +
            ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
             (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                C50722) *
               C50648 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C1676) *
              C279 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C25560 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C25555 +
             (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
                C50828 +
            ((C30707 + C30708) * C25560 + (C30709 + C30710) * C25555 +
             (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50525 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C25561 +
             (C22720 * C9319 + C50696 * C9322 + C22719 * C3686 +
              C22714 * C3690) *
                 C25555 +
             (C22720 * C9316 + C50696 * C9320 + C22719 * C3681 +
              C22714 * C3687) *
                 C25560) *
                C50722 +
            ((C28608 + C28607) * C50525 + (C28606 + C28605) * C25561 +
             (C30710 + C30709) * C25555 + (C30708 + C30707) * C25560) *
                C50828) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50648) *
              C50568 * C1027 +
          (((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
             C29236 * C50525) *
                C50828 +
            (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50648 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C1676) *
              C50568 * C1028 +
          (((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
             (C22766 + C22765) * C50525) *
                C50828 +
            (C29235 * C25560 + C29236 * C25555 + (C23481 + C23482) * C25561 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                 C50525 +
             (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                 C25561 +
             (C23164 + C23163) * C25555 + (C23162 + C23161) * C25560) *
                C50722 +
            ((C23484 + C23483) * C50525 + (C23482 + C23481) * C25561 +
             C23471 * C25555 + C23472 * C25560) *
                C50828) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C25560 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C25555 +
            (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
               C50828 +
           ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
            C28811 * C25561 + C28812 * C50525) *
               C50722) *
              C1842 -
          ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
            (C28841 + C28842) * C25560) *
               C50722 +
           (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
            (C28836 + C28835) * C25560) *
               C50828) *
              C1843 +
          (((C28842 + C28841) * C25560 + (C28840 + C28839) * C25555 +
            C28825 * C25561 + C28826 * C50525) *
               C50828 +
           ((C31237 + C31238) * C25560 + (C31239 + C31240) * C25555 +
            (C28843 + C28844) * C25561 + (C28845 + C28846) * C50525) *
               C50722) *
              C1844 -
          (((C22720 * C16577 + C50696 * C16579 + C22719 * C7346 +
             C22714 * C7351) *
                C50525 +
            (C22720 * C16576 + C50696 * C16578 + C22719 * C7342 +
             C22714 * C7347) *
                C25561 +
            (C22720 * C14726 + C50696 * C14730 + C22719 * C7348 +
             C22714 * C7352) *
                C25555 +
            (C22720 * C14724 + C50696 * C14728 + C22719 * C7343 +
             C22714 * C7349) *
                C25560) *
               C50722 +
           ((C28846 + C28845) * C50525 + (C28844 + C28843) * C25561 +
            (C31240 + C31239) * C25555 + (C31238 + C31237) * C25560) *
               C50828) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C50862 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50863 +
           (((C28842 + C28841) * C25560 + (C28840 + C28839) * C25555 +
             C28825 * C25561 + C28826 * C50525) *
                C50828 +
            ((C31237 + C31238) * C25560 + (C31239 + C31240) * C25555 +
             (C28843 + C28844) * C25561 + (C28845 + C28846) * C50525) *
                C50722) *
               C2092) *
              C50568 * C50808 +
          (((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
             C29236 * C50525) *
                C50828 +
            (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50863 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C50862 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50525 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C25561 +
             (C28846 + C28845) * C25555 + (C28844 + C28843) * C25560) *
                C50722 +
            ((C23164 + C23163) * C50525 + (C23162 + C23161) * C25561 +
             C28813 * C25555 + C28814 * C25560) *
                C50828) *
               C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50648) *
              C50568 * C1027 +
          (((C28811 * C25560 + C28812 * C25555 + C29235 * C25561 +
             C29236 * C50525) *
                C50828 +
            (C28825 * C25560 + C28826 * C25555 + (C23161 + C23162) * C25561 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50648 -
           ((C23471 * C50525 + C23472 * C25561 + C28823 * C25555 +
             C28824 * C25560) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C25561 +
             (C22760 + C22759) * C25555 + (C22758 + C22757) * C25560) *
                C50828) *
               C1676) *
              C50568 * C1028 +
          (((C22773 * C25560 + C22774 * C25555 + (C22768 + C22767) * C25561 +
             (C22766 + C22765) * C50525) *
                C50828 +
            (C29235 * C25560 + C29236 * C25555 + (C23481 + C23482) * C25561 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                 C50525 +
             (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                 C25561 +
             (C23164 + C23163) * C25555 + (C23162 + C23161) * C25560) *
                C50722 +
            ((C23484 + C23483) * C50525 + (C23482 + C23481) * C25561 +
             C23471 * C25555 + C23472 * C25560) *
                C50828) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C25560 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C25555 +
             (C22757 + C22758) * C25561 + (C22759 + C22760) * C50525) *
                C50828 +
            ((C28835 + C28836) * C25560 + (C28837 + C28838) * C25555 +
             C28811 * C25561 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C25561 + (C28839 + C28840) * C25555 +
             (C28841 + C28842) * C25560) *
                C50722 +
            (C28823 * C50525 + C28824 * C25561 + (C28838 + C28837) * C25555 +
             (C28836 + C28835) * C25560) *
                C50828) *
               C50648) *
              C278 +
          ((((C29515 + C29516) * C25560 + (C29517 + C29518) * C25555 +
             C29503 * C25561 + C29504 * C50525) *
                C50828 +
            ((C30049 + C30050) * C25560 + (C30051 + C30052) * C25555 +
             (C29519 + C29520) * C25561 + (C29521 + C29522) * C50525) *
                C50722) *
               C50648 -
           ((C29513 * C50525 + C29514 * C25561 + (C29518 + C29517) * C25555 +
             (C29516 + C29515) * C25560) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C25561 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C25555 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C25560) *
                C50828) *
               C1676) *
              C279 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C25560 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C25555 +
             (C22963 + C22964) * C25561 + (C22965 + C22966) * C50525) *
                C50828 +
            ((C30707 + C30708) * C25560 + (C30709 + C30710) * C25555 +
             (C28605 + C28606) * C25561 + (C28607 + C28608) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50525 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C25561 +
             (C22720 * C9319 + C50696 * C9322 + C22719 * C3686 +
              C22714 * C3690) *
                 C25555 +
             (C22720 * C9316 + C50696 * C9320 + C22719 * C3681 +
              C22714 * C3687) *
                 C25560) *
                C50722 +
            ((C28608 + C28607) * C50525 + (C28606 + C28605) * C25561 +
             (C30710 + C30709) * C25555 + (C30708 + C30707) * C25560) *
                C50828) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50584 * C50816 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50584 * C50620) *
              C50858 +
          ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
             (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                C31984 +
            (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50584 * C50816) *
              C50859 +
          (((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
             (C22766 + C22765) * C50525) *
                C31984 +
            (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50584 * C50816 -
           (((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C50525 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C49742 +
             (C23702 + C23701) * C50799 + (C23700 + C23699) * C49749) *
                C50722 +
            ((C23324 + C23323) * C50525 + (C23322 + C23321) * C49742 +
             C23311 * C50799 + C23312 * C49749) *
                C31984) *
               C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C49749 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C50799 +
              (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                 C31984 +
             ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
              C28811 * C49742 + C28812 * C50525) *
                 C50722) *
                C50817 -
            ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
              (C28841 + C28842) * C49749) *
                 C50722 +
             (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
              (C28836 + C28835) * C49749) *
                 C31984) *
                C50648) *
               C50816 +
           ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
              C29503 * C49742 + C29504 * C50525) *
                 C31984 +
             ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
              (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                 C50722) *
                C50648 -
            ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
              (C29516 + C29515) * C49749) *
                 C50722 +
             ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
              (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C50799 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C49749) *
                 C31984) *
                C50817) *
               C50620) *
              C281 +
          ((((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
              C29236 * C50525) *
                 C31984 +
             (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
              (C23163 + C23164) * C50525) *
                 C50722) *
                C50648 -
            ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
              C28824 * C49749) *
                 C50722 +
             ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
              (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                 C31984) *
                C50817) *
               C50816 +
           ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
              (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                 C31984 +
             (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
              (C23701 + C23702) * C50525) *
                 C50722) *
                C50817 -
            (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
               C22714 * C1228) *
                  C50525 +
              (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
               C22714 * C1222) *
                  C49742 +
              (C29522 + C29521) * C50799 + (C29520 + C29519) * C49749) *
                 C50722 +
             ((C23702 + C23701) * C50525 + (C23700 + C23699) * C49742 +
              C29513 * C50799 + C29514 * C49749) *
                 C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50584 * C278 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50584 * C279 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C49749 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50799 +
             (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
                C31984 +
            ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
             (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
             (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                C31984 +
            (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C279 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50584 * C278 -
           (((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
              C22714 * C1575) *
                 C50525 +
             (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
              C22714 * C1569) *
                 C49742 +
             (C28608 + C28607) * C50799 + (C28606 + C28605) * C49749) *
                C50722 +
            ((C22970 + C22969) * C50525 + (C22968 + C22967) * C49742 +
             (C22966 + C22965) * C50799 + (C22964 + C22963) * C49749) *
                C31984) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C49749 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50799 +
            (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
               C31984 +
           ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
            C28811 * C49742 + C28812 * C50525) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
            C28824 * C49749) *
               C50722 +
           ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
            (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
               C31984) *
              C50584 * C50568 * C114 +
          ((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
            (C22766 + C22765) * C50525) *
               C31984 +
           (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
            (C23483 + C23484) * C50525) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C50525 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C49742 +
            (C23484 + C23483) * C50799 + (C23482 + C23481) * C49749) *
               C50722 +
           ((C22772 + C22771) * C50525 + (C22770 + C22769) * C49742 +
            C22775 * C50799 + C22776 * C49749) *
               C31984) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C457 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C458 +
           (((C28842 + C28841) * C49749 + (C28840 + C28839) * C50799 +
             C28825 * C49742 + C28826 * C50525) *
                C31984 +
            ((C31237 + C31238) * C49749 + (C31239 + C31240) * C50799 +
             (C28843 + C28844) * C49742 + (C28845 + C28846) * C50525) *
                C50722) *
               C459) *
              C50568 * C281 +
          (((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
             C29236 * C50525) *
                C31984 +
            (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C458 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C457 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50525 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C49742 +
             (C28846 + C28845) * C50799 + (C28844 + C28843) * C49749) *
                C50722 +
            ((C23164 + C23163) * C50525 + (C23162 + C23161) * C49742 +
             C28813 * C50799 + C28814 * C49749) *
                C31984) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50817 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50648) *
              C50568 * C50858 +
          (((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
             C29236 * C50525) *
                C31984 +
            (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50648 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50817) *
              C50568 * C50859 +
          (((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
             (C22766 + C22765) * C50525) *
                C31984 +
            (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50817 -
           (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                 C50525 +
             (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                 C49742 +
             (C23164 + C23163) * C50799 + (C23162 + C23161) * C49749) *
                C50722 +
            ((C23484 + C23483) * C50525 + (C23482 + C23481) * C49742 +
             C23471 * C50799 + C23472 * C49749) *
                C31984) *
               C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C49749 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50799 +
            (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
               C31984 +
           ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
            C28811 * C49742 + C28812 * C50525) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
            C28824 * C49749) *
               C50722 +
           ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
            (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
               C31984) *
              C50584 * C50568 * C114 +
          ((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
            (C22766 + C22765) * C50525) *
               C31984 +
           (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
            (C23483 + C23484) * C50525) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C22720 * C902 + C50696 * C908 + C22719 * C487 + C22714 * C498) *
                C50525 +
            (C22720 * C893 + C50696 * C903 + C22719 * C468 + C22714 * C486) *
                C49742 +
            (C23484 + C23483) * C50799 + (C23482 + C23481) * C49749) *
               C50722 +
           ((C22772 + C22771) * C50525 + (C22770 + C22769) * C49742 +
            C22775 * C50799 + C22776 * C49749) *
               C31984) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50584 * C278 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50584 * C279 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C49749 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50799 +
             (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
                C31984 +
            ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
             (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
             (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                C31984 +
            (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C279 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50584 * C278 -
           (((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
              C22714 * C1575) *
                 C50525 +
             (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
              C22714 * C1569) *
                 C49742 +
             (C28608 + C28607) * C50799 + (C28606 + C28605) * C49749) *
                C50722 +
            ((C22970 + C22969) * C50525 + (C22968 + C22967) * C49742 +
             (C22966 + C22965) * C50799 + (C22964 + C22963) * C49749) *
                C31984) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50584 * C50860 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50584 * C50861 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C49749 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50799 +
             (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
                C31984 +
            ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
             (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
                C50722) *
               C50584 * C1331) *
              C50808 +
          ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
             (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                C31984 +
            (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50861 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50584 * C50860 -
           (((C22720 * C4180 + C50696 * C4186 + C22719 * C1568 +
              C22714 * C1575) *
                 C50525 +
             (C22720 * C4177 + C50696 * C4181 + C22719 * C1563 +
              C22714 * C1569) *
                 C49742 +
             (C28608 + C28607) * C50799 + (C28606 + C28605) * C49749) *
                C50722 +
            ((C22970 + C22969) * C50525 + (C22968 + C22967) * C49742 +
             (C22966 + C22965) * C50799 + (C22964 + C22963) * C49749) *
                C31984) *
               C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50817 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50648) *
              C50860 +
          ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
             C29503 * C49742 + C29504 * C50525) *
                C31984 +
            ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
             (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                C50722) *
               C50648 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50817) *
              C50861 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C49749 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50799 +
             (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
                C31984 +
            ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
             (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
                C50722) *
               C50817 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50525 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C49742 +
             (C22720 * C9319 + C50696 * C9322 + C22719 * C3686 +
              C22714 * C3690) *
                 C50799 +
             (C22720 * C9316 + C50696 * C9320 + C22719 * C3681 +
              C22714 * C3687) *
                 C49749) *
                C50722 +
            ((C28608 + C28607) * C50525 + (C28606 + C28605) * C49742 +
             (C30710 + C30709) * C50799 + (C30708 + C30707) * C49749) *
                C31984) *
               C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C49749 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50799 +
            (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
               C31984 +
           ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
            C28811 * C49742 + C28812 * C50525) *
               C50722) *
              C50584 * C1096 -
          ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
            (C29516 + C29515) * C49749) *
               C50722 +
           ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50799 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C49749) *
               C31984) *
              C50584 * C1097 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C49749 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50799 +
            (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
               C31984 +
           ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
            (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
               C50722) *
              C50584 * C1098 -
          (((C22720 * C9811 + C50696 * C9815 + C22719 * C4182 +
             C22714 * C4187) *
                C50525 +
            (C22720 * C9809 + C50696 * C9812 + C22719 * C4178 +
             C22714 * C4183) *
                C49742 +
            (C22720 * C9813 + C50696 * C9816 + C22719 * C4184 +
             C22714 * C4188) *
                C50799 +
            (C22720 * C9810 + C50696 * C9814 + C22719 * C4179 +
             C22714 * C4185) *
                C49749) *
               C50722 +
           ((C22720 * C3526 + C50696 * C3531 + C22719 * C1109 +
             C22714 * C1115) *
                C50525 +
            (C22720 * C3522 + C50696 * C3527 + C22719 * C1103 +
             C22714 * C1110) *
                C49742 +
            (C22720 * C3528 + C50696 * C3532 + C22719 * C1111 +
             C22714 * C1116) *
                C50799 +
            (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 +
             C22714 * C1112) *
                C49749) *
               C31984) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50584 * C1025 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50584 * C50620) *
              C1027 +
          ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
             (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                C31984 +
            (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50584 * C1025) *
              C1028 +
          (((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
             (C22766 + C22765) * C50525) *
                C31984 +
            (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50584 * C1025 -
           (((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C50525 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C49742 +
             (C23702 + C23701) * C50799 + (C23700 + C23699) * C49749) *
                C50722 +
            ((C23324 + C23323) * C50525 + (C23322 + C23321) * C49742 +
             C23311 * C50799 + C23312 * C49749) *
                C31984) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C457 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C458 +
           (((C28842 + C28841) * C49749 + (C28840 + C28839) * C50799 +
             C28825 * C49742 + C28826 * C50525) *
                C31984 +
            ((C31237 + C31238) * C49749 + (C31239 + C31240) * C50799 +
             (C28843 + C28844) * C49742 + (C28845 + C28846) * C50525) *
                C50722) *
               C459) *
              C1025 +
          ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
             C29503 * C49742 + C29504 * C50525) *
                C31984 +
            ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
             (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                C50722) *
               C458 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C457 -
           (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
              C22714 * C4589) *
                 C50525 +
             (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
              C22714 * C4585) *
                 C49742 +
             (C22720 * C10211 + C50696 * C10214 + C22719 * C4586 +
              C22714 * C4590) *
                 C50799 +
             (C22720 * C10208 + C50696 * C10212 + C22719 * C4581 +
              C22714 * C4587) *
                 C49749) *
                C50722 +
            ((C29522 + C29521) * C50525 + (C29520 + C29519) * C49742 +
             (C30052 + C30051) * C50799 + (C30050 + C30049) * C49749) *
                C31984) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C49749 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C50799 +
              (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                 C31984 +
             ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
              C28811 * C49742 + C28812 * C50525) *
                 C50722) *
                C50817 -
            ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
              (C28841 + C28842) * C49749) *
                 C50722 +
             (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
              (C28836 + C28835) * C49749) *
                 C31984) *
                C50648) *
               C1025 +
           ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
              C29503 * C49742 + C29504 * C50525) *
                 C31984 +
             ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
              (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                 C50722) *
                C50648 -
            ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
              (C29516 + C29515) * C49749) *
                 C50722 +
             ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
              (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C50799 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C49749) *
                 C31984) *
                C50817) *
               C50620) *
              C50808 +
          ((((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
              C29236 * C50525) *
                 C31984 +
             (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
              (C23163 + C23164) * C50525) *
                 C50722) *
                C50648 -
            ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
              C28824 * C49749) *
                 C50722 +
             ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
              (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                 C31984) *
                C50817) *
               C1025 +
           ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
              (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                 C31984 +
             (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
              (C23701 + C23702) * C50525) *
                 C50722) *
                C50817 -
            (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
               C22714 * C1228) *
                  C50525 +
              (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
               C22714 * C1222) *
                  C49742 +
              (C29522 + C29521) * C50799 + (C29520 + C29519) * C49749) *
                 C50722 +
             ((C23702 + C23701) * C50525 + (C23700 + C23699) * C49742 +
              C29513 * C50799 + C29514 * C49749) *
                 C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50584 * C1025 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50584 * C50620) *
              C1027 +
          ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
             (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                C31984 +
            (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
             (C23701 + C23702) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50584 * C1025) *
              C1028 +
          (((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
             (C22766 + C22765) * C50525) *
                C31984 +
            (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C50584 * C1025 -
           (((C22720 * C1566 + C50696 * C1574 + C22719 * C901 + C22714 * C907) *
                 C50525 +
             (C22720 * C1562 + C50696 * C1567 + C22719 * C892 + C22714 * C900) *
                 C49742 +
             (C23702 + C23701) * C50799 + (C23700 + C23699) * C49749) *
                C50722 +
            ((C23324 + C23323) * C50525 + (C23322 + C23321) * C49742 +
             C23311 * C50799 + C23312 * C49749) *
                C31984) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C49749 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50799 +
            (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
               C31984 +
           ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
            C28811 * C49742 + C28812 * C50525) *
               C50722) *
              C50584 * C1096 -
          ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
            (C29516 + C29515) * C49749) *
               C50722 +
           ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
            (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50799 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C49749) *
               C31984) *
              C50584 * C1097 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C49749 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50799 +
            (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
               C31984 +
           ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
            (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
               C50722) *
              C50584 * C1098 -
          (((C22720 * C9811 + C50696 * C9815 + C22719 * C4182 +
             C22714 * C4187) *
                C50525 +
            (C22720 * C9809 + C50696 * C9812 + C22719 * C4178 +
             C22714 * C4183) *
                C49742 +
            (C22720 * C9813 + C50696 * C9816 + C22719 * C4184 +
             C22714 * C4188) *
                C50799 +
            (C22720 * C9810 + C50696 * C9814 + C22719 * C4179 +
             C22714 * C4185) *
                C49749) *
               C50722 +
           ((C22720 * C3526 + C50696 * C3531 + C22719 * C1109 +
             C22714 * C1115) *
                C50525 +
            (C22720 * C3522 + C50696 * C3527 + C22719 * C1103 +
             C22714 * C1110) *
                C49742 +
            (C22720 * C3528 + C50696 * C3532 + C22719 * C1111 +
             C22714 * C1116) *
                C50799 +
            (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 +
             C22714 * C1112) *
                C49749) *
               C31984) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C49749 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C50799 +
              (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                 C31984 +
             ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
              C28811 * C49742 + C28812 * C50525) *
                 C50722) *
                C1676 -
            ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
              (C28841 + C28842) * C49749) *
                 C50722 +
             (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
              (C28836 + C28835) * C49749) *
                 C31984) *
                C50648) *
               C50816 +
           ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
              C29503 * C49742 + C29504 * C50525) *
                 C31984 +
             ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
              (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                 C50722) *
                C50648 -
            ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
              (C29516 + C29515) * C49749) *
                 C50722 +
             ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
              (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C50799 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C49749) *
                 C31984) *
                C1676) *
               C50620) *
              C50808 +
          ((((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
              C29236 * C50525) *
                 C31984 +
             (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
              (C23163 + C23164) * C50525) *
                 C50722) *
                C50648 -
            ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
              C28824 * C49749) *
                 C50722 +
             ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
              (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                 C31984) *
                C1676) *
               C50816 +
           ((((C22962 + C22961) * C49749 + (C22960 + C22959) * C50799 +
              (C22958 + C22957) * C49742 + (C22956 + C22955) * C50525) *
                 C31984 +
             (C29503 * C49749 + C29504 * C50799 + (C23699 + C23700) * C49742 +
              (C23701 + C23702) * C50525) *
                 C50722) *
                C1676 -
            (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
               C22714 * C1228) *
                  C50525 +
              (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
               C22714 * C1222) *
                  C49742 +
              (C29522 + C29521) * C50799 + (C29520 + C29519) * C49749) *
                 C50722 +
             ((C23702 + C23701) * C50525 + (C23700 + C23699) * C49742 +
              C29513 * C50799 + C29514 * C49749) *
                 C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50862 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50863 +
           (((C28842 + C28841) * C49749 + (C28840 + C28839) * C50799 +
             C28825 * C49742 + C28826 * C50525) *
                C31984 +
            ((C31237 + C31238) * C49749 + (C31239 + C31240) * C50799 +
             (C28843 + C28844) * C49742 + (C28845 + C28846) * C50525) *
                C50722) *
               C2092) *
              C50816 +
          ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
             C29503 * C49742 + C29504 * C50525) *
                C31984 +
            ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
             (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                C50722) *
               C50863 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C50862 -
           (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
              C22714 * C4589) *
                 C50525 +
             (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
              C22714 * C4585) *
                 C49742 +
             (C22720 * C10211 + C50696 * C10214 + C22719 * C4586 +
              C22714 * C4590) *
                 C50799 +
             (C22720 * C10208 + C50696 * C10212 + C22719 * C4581 +
              C22714 * C4587) *
                 C49749) *
                C50722 +
            ((C29522 + C29521) * C50525 + (C29520 + C29519) * C49742 +
             (C30052 + C30051) * C50799 + (C30050 + C30049) * C49749) *
                C31984) *
               C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50648) *
              C278 +
          ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
             C29503 * C49742 + C29504 * C50525) *
                C31984 +
            ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
             (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                C50722) *
               C50648 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C1676) *
              C279 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C49749 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50799 +
             (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
                C31984 +
            ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
             (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50525 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C49742 +
             (C22720 * C9319 + C50696 * C9322 + C22719 * C3686 +
              C22714 * C3690) *
                 C50799 +
             (C22720 * C9316 + C50696 * C9320 + C22719 * C3681 +
              C22714 * C3687) *
                 C49749) *
                C50722 +
            ((C28608 + C28607) * C50525 + (C28606 + C28605) * C49742 +
             (C30710 + C30709) * C50799 + (C30708 + C30707) * C49749) *
                C31984) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50648) *
              C50568 * C1027 +
          (((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
             C29236 * C50525) *
                C31984 +
            (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50648 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C1676) *
              C50568 * C1028 +
          (((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
             (C22766 + C22765) * C50525) *
                C31984 +
            (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                 C50525 +
             (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                 C49742 +
             (C23164 + C23163) * C50799 + (C23162 + C23161) * C49749) *
                C50722 +
            ((C23484 + C23483) * C50525 + (C23482 + C23481) * C49742 +
             C23471 * C50799 + C23472 * C49749) *
                C31984) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C49749 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50799 +
            (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
               C31984 +
           ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
            C28811 * C49742 + C28812 * C50525) *
               C50722) *
              C1842 -
          ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
            (C28841 + C28842) * C49749) *
               C50722 +
           (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
            (C28836 + C28835) * C49749) *
               C31984) *
              C1843 +
          (((C28842 + C28841) * C49749 + (C28840 + C28839) * C50799 +
            C28825 * C49742 + C28826 * C50525) *
               C31984 +
           ((C31237 + C31238) * C49749 + (C31239 + C31240) * C50799 +
            (C28843 + C28844) * C49742 + (C28845 + C28846) * C50525) *
               C50722) *
              C1844 -
          (((C22720 * C16577 + C50696 * C16579 + C22719 * C7346 +
             C22714 * C7351) *
                C50525 +
            (C22720 * C16576 + C50696 * C16578 + C22719 * C7342 +
             C22714 * C7347) *
                C49742 +
            (C22720 * C14726 + C50696 * C14730 + C22719 * C7348 +
             C22714 * C7352) *
                C50799 +
            (C22720 * C14724 + C50696 * C14728 + C22719 * C7343 +
             C22714 * C7349) *
                C49749) *
               C50722 +
           ((C28846 + C28845) * C50525 + (C28844 + C28843) * C49742 +
            (C31240 + C31239) * C50799 + (C31238 + C31237) * C49749) *
               C31984) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C50862 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50863 +
           (((C28842 + C28841) * C49749 + (C28840 + C28839) * C50799 +
             C28825 * C49742 + C28826 * C50525) *
                C31984 +
            ((C31237 + C31238) * C49749 + (C31239 + C31240) * C50799 +
             (C28843 + C28844) * C49742 + (C28845 + C28846) * C50525) *
                C50722) *
               C2092) *
              C50568 * C50808 +
          (((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
             C29236 * C50525) *
                C31984 +
            (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50863 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C50862 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50525 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C49742 +
             (C28846 + C28845) * C50799 + (C28844 + C28843) * C49749) *
                C50722 +
            ((C23164 + C23163) * C50525 + (C23162 + C23161) * C49742 +
             C28813 * C50799 + C28814 * C49749) *
                C31984) *
               C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50648) *
              C50568 * C1027 +
          (((C28811 * C49749 + C28812 * C50799 + C29235 * C49742 +
             C29236 * C50525) *
                C31984 +
            (C28825 * C49749 + C28826 * C50799 + (C23161 + C23162) * C49742 +
             (C23163 + C23164) * C50525) *
                C50722) *
               C50648 -
           ((C23471 * C50525 + C23472 * C49742 + C28823 * C50799 +
             C28824 * C49749) *
                C50722 +
            ((C22764 + C22763) * C50525 + (C22762 + C22761) * C49742 +
             (C22760 + C22759) * C50799 + (C22758 + C22757) * C49749) *
                C31984) *
               C1676) *
              C50568 * C1028 +
          (((C22773 * C49749 + C22774 * C50799 + (C22768 + C22767) * C49742 +
             (C22766 + C22765) * C50525) *
                C31984 +
            (C29235 * C49749 + C29236 * C50799 + (C23481 + C23482) * C49742 +
             (C23483 + C23484) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                 C50525 +
             (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                 C49742 +
             (C23164 + C23163) * C50799 + (C23162 + C23161) * C49749) *
                C50722 +
            ((C23484 + C23483) * C50525 + (C23482 + C23481) * C49742 +
             C23471 * C50799 + C23472 * C49749) *
                C31984) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C49749 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50799 +
             (C22757 + C22758) * C49742 + (C22759 + C22760) * C50525) *
                C31984 +
            ((C28835 + C28836) * C49749 + (C28837 + C28838) * C50799 +
             C28811 * C49742 + C28812 * C50525) *
                C50722) *
               C1676 -
           ((C28813 * C50525 + C28814 * C49742 + (C28839 + C28840) * C50799 +
             (C28841 + C28842) * C49749) *
                C50722 +
            (C28823 * C50525 + C28824 * C49742 + (C28838 + C28837) * C50799 +
             (C28836 + C28835) * C49749) *
                C31984) *
               C50648) *
              C278 +
          ((((C29515 + C29516) * C49749 + (C29517 + C29518) * C50799 +
             C29503 * C49742 + C29504 * C50525) *
                C31984 +
            ((C30049 + C30050) * C49749 + (C30051 + C30052) * C50799 +
             (C29519 + C29520) * C49742 + (C29521 + C29522) * C50525) *
                C50722) *
               C50648 -
           ((C29513 * C50525 + C29514 * C49742 + (C29518 + C29517) * C50799 +
             (C29516 + C29515) * C49749) *
                C50722 +
            ((C22959 + C22960) * C50525 + (C22961 + C22962) * C49742 +
             (C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50799 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C49749) *
                C31984) *
               C1676) *
              C279 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C49749 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50799 +
             (C22963 + C22964) * C49742 + (C22965 + C22966) * C50525) *
                C31984 +
            ((C30707 + C30708) * C49749 + (C30709 + C30710) * C50799 +
             (C28605 + C28606) * C49742 + (C28607 + C28608) * C50525) *
                C50722) *
               C1676 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50525 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C49742 +
             (C22720 * C9319 + C50696 * C9322 + C22719 * C3686 +
              C22714 * C3690) *
                 C50799 +
             (C22720 * C9316 + C50696 * C9320 + C22719 * C3681 +
              C22714 * C3687) *
                 C49749) *
                C50722 +
            ((C28608 + C28607) * C50525 + (C28606 + C28605) * C49742 +
             (C30710 + C30709) * C50799 + (C30708 + C30707) * C49749) *
                C31984) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50584 * C50816 -
                   (((C25559 * C4184 + C25554 * C4188 + C25558 * C1572 +
                      C50853 * C1577 + C25557 * C895 + C50864 * C904) *
                         C50520 +
                     (C25559 * C4179 + C25554 * C4185 + C25558 * C1565 +
                      C50853 * C1573 + C25557 * C889 + C50864 * C894) *
                         C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50584 * C50620) *
                      C50858 +
                  ((((C25792 + C25791 + C25790) * C10776 +
                     (C25789 + C25788 + C25787) * C50520) *
                        C31984 +
                    ((C26515 + C26516 + C26517) * C10776 +
                     (C26518 + C26519 + C26520) * C50520) *
                        C50722) *
                       C50584 * C50620 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50584 * C50816) *
                      C50859 +
                  ((((C25610 + C25609 + C25608) * C10776 +
                     (C25607 + C25606 + C25605) * C50520) *
                        C31984 +
                    ((C26303 + C26304 + C26305) * C10776 +
                     (C26306 + C26307 + C26308) * C50520) *
                        C50722) *
                       C50584 * C50816 -
                   (((C25559 * C4180 + C25554 * C4186 + C25558 * C1568 +
                      C50853 * C1575 + C25557 * C899 + C50864 * C906) *
                         C50520 +
                     (C25559 * C4177 + C25554 * C4181 + C25558 * C1563 +
                      C50853 * C1569 + C25557 * C891 + C50864 * C898) *
                         C10776) *
                        C50722 +
                    ((C26144 + C26143 + C26142) * C50520 +
                     (C26141 + C26140 + C26139) * C10776) *
                        C31984) *
                       C50584 * C50620) *
                      C638)) /
                (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                       C50853 * C300 + C25559 * C287 + C25554 * C301) *
                          C10776 +
                      (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                       C50853 * C316 + C25559 * C302 + C25554 * C317) *
                          C50520) *
                         C31984 +
                     ((C44706 + C44707 + C44708) * C10776 +
                      (C44709 + C44710 + C44711) * C50520) *
                         C50722) *
                        C50817 -
                    (((C44712 + C44713 + C44714) * C50520 +
                      (C44715 + C44716 + C44717) * C10776) *
                         C50722 +
                     ((C44711 + C44710 + C44709) * C50520 +
                      (C44708 + C44707 + C44706) * C10776) *
                         C31984) *
                        C50648) *
                       C50816 +
                   ((((C45216 + C45217 + C45218) * C10776 +
                      (C45219 + C45220 + C45221) * C50520) *
                         C31984 +
                     ((C25557 * C1218 + C50864 * C1226 + C25558 * C3681 +
                       C50853 * C3687 + C25559 * C9316 + C25554 * C9320) *
                          C10776 +
                      (C25557 * C1225 + C50864 * C1230 + C25558 * C3686 +
                       C50853 * C3690 + C25559 * C9319 + C25554 * C9322) *
                          C50520) *
                         C50722) *
                        C50648 -
                    (((C45221 + C45220 + C45219) * C50520 +
                      (C45218 + C45217 + C45216) * C10776) *
                         C50722 +
                     ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                       C50853 * C317 + C25557 * C299 + C50864 * C316) *
                          C50520 +
                      (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                       C50853 * C301 + C25557 * C286 + C50864 * C300) *
                          C10776) *
                         C31984) *
                        C50817) *
                       C50620) *
                      C281 +
                  (((((C25974 + C25973 + C25972) * C10776 +
                      (C25971 + C25970 + C25969) * C50520) *
                         C31984 +
                     ((C25975 + C25976 + C25977) * C10776 +
                      (C25978 + C25979 + C25980) * C50520) *
                         C50722) *
                        C50648 -
                    (((C25969 + C25970 + C25971) * C50520 +
                      (C25972 + C25973 + C25974) * C10776) *
                         C50722 +
                     ((C25604 + C25603 + C25602) * C50520 +
                      (C25601 + C25600 + C25599) * C10776) *
                         C31984) *
                        C50817) *
                       C50816 +
                   ((((C25792 + C25791 + C25790) * C10776 +
                      (C25789 + C25788 + C25787) * C50520) *
                         C31984 +
                     ((C26515 + C26516 + C26517) * C10776 +
                      (C26518 + C26519 + C26520) * C50520) *
                         C50722) *
                        C50817 -
                    (((C25559 * C9317 + C25554 * C9321 + C25558 * C3684 +
                       C50853 * C3689 + C25557 * C1223 + C50864 * C1229) *
                          C50520 +
                      (C25559 * C9315 + C25554 * C9318 + C25558 * C3680 +
                       C50853 * C3685 + C25557 * C1217 + C50864 * C1224) *
                          C10776) *
                         C50722 +
                     ((C26520 + C26519 + C26518) * C50520 +
                      (C26517 + C26516 + C26515) * C10776) *
                         C31984) *
                        C50648) *
                       C50620) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[62] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C25557 * C463 + C50864 * C477 + C25558 * C889 +
                      C50853 * C894 + C25559 * C1565 + C25554 * C1573) *
                         C10776 +
                     (C25557 * C476 + C50864 * C493 + C25558 * C895 +
                      C50853 * C904 + C25559 * C1572 + C25554 * C1577) *
                         C50520) *
                        C50722) *
                       C50584 * C278 -
                   (((C25559 * C4184 + C25554 * C4188 + C25558 * C1572 +
                      C50853 * C1577 + C25557 * C895 + C50864 * C904) *
                         C50520 +
                     (C25559 * C4179 + C25554 * C4185 + C25558 * C1565 +
                      C50853 * C1573 + C25557 * C889 + C50864 * C894) *
                         C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50584 * C279 +
                   (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                      C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                         C10776 +
                     (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                      C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                         C50520) *
                        C31984 +
                    ((C25557 * C1565 + C50864 * C1573 + C25558 * C4179 +
                      C50853 * C4185 + C25559 * C9810 + C25554 * C9814) *
                         C10776 +
                     (C25557 * C1572 + C50864 * C1577 + C25558 * C4184 +
                      C50853 * C4188 + C25559 * C9813 + C25554 * C9816) *
                         C50520) *
                        C50722) *
                       C50584 * C280) *
                      C281 +
                  ((((C25792 + C25791 + C25790) * C10776 +
                     (C25789 + C25788 + C25787) * C50520) *
                        C31984 +
                    ((C26515 + C26516 + C26517) * C10776 +
                     (C26518 + C26519 + C26520) * C50520) *
                        C50722) *
                       C50584 * C279 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50584 * C278 -
                   (((C25559 * C9811 + C25554 * C9815 + C25558 * C4182 +
                      C50853 * C4187 + C25557 * C1570 + C50864 * C1576) *
                         C50520 +
                     (C25559 * C9809 + C25554 * C9812 + C25558 * C4178 +
                      C50853 * C4183 + C25557 * C1564 + C50864 * C1571) *
                         C10776) *
                        C50722 +
                    ((C25798 + C25797 + C25796) * C50520 +
                     (C25795 + C25794 + C25793) * C10776) *
                        C31984) *
                       C50584 * C280) *
                      C50555)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C10776 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C50520) *
                       C31984 +
                   ((C25557 * C463 + C50864 * C477 + C25558 * C889 +
                     C50853 * C894 + C25559 * C1565 + C25554 * C1573) *
                        C10776 +
                    (C25557 * C476 + C50864 * C493 + C25558 * C895 +
                     C50853 * C904 + C25559 * C1572 + C25554 * C1577) *
                        C50520) *
                       C50722) *
                      C50584 * C50568 * C113 -
                  (((C25969 + C25970 + C25971) * C50520 +
                    (C25972 + C25973 + C25974) * C10776) *
                       C50722 +
                   ((C25604 + C25603 + C25602) * C50520 +
                    (C25601 + C25600 + C25599) * C10776) *
                       C31984) *
                      C50584 * C50568 * C114 +
                  (((C25610 + C25609 + C25608) * C10776 +
                    (C25607 + C25606 + C25605) * C50520) *
                       C31984 +
                   ((C26303 + C26304 + C26305) * C10776 +
                    (C26306 + C26307 + C26308) * C50520) *
                       C50722) *
                      C50584 * C50568 * C115 -
                  (((C25559 * C1566 + C25554 * C1574 + C25558 * C901 +
                     C50853 * C907 + C25557 * C470 + C50864 * C490) *
                        C50520 +
                    (C25559 * C1562 + C25554 * C1567 + C25558 * C892 +
                     C50853 * C900 + C25557 * C460 + C50864 * C471) *
                        C10776) *
                       C50722 +
                   ((C25616 + C25615 + C25614) * C50520 +
                    (C25613 + C25612 + C25611) * C10776) *
                       C31984) *
                      C50584 * C50568 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C457 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C458 +
                   (((C44717 + C44716 + C44715) * C10776 +
                     (C44714 + C44713 + C44712) * C50520) *
                        C31984 +
                    ((C25557 * C1849 + C50864 * C1857 + C25558 * C4581 +
                      C50853 * C4587 + C25559 * C10208 + C25554 * C10212) *
                         C10776 +
                     (C25557 * C1856 + C50864 * C1861 + C25558 * C4586 +
                      C50853 * C4590 + C25559 * C10211 + C25554 * C10214) *
                         C50520) *
                        C50722) *
                       C459) *
                      C50568 * C281 +
                  ((((C25974 + C25973 + C25972) * C10776 +
                     (C25971 + C25970 + C25969) * C50520) *
                        C31984 +
                    ((C25975 + C25976 + C25977) * C10776 +
                     (C25978 + C25979 + C25980) * C50520) *
                        C50722) *
                       C458 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C457 -
                   (((C25559 * C10209 + C25554 * C10213 + C25558 * C4584 +
                      C50853 * C4589 + C25557 * C1854 + C50864 * C1860) *
                         C50520 +
                     (C25559 * C10207 + C25554 * C10210 + C25558 * C4580 +
                      C50853 * C4585 + C25557 * C1848 + C50864 * C1855) *
                         C10776) *
                        C50722 +
                    ((C25980 + C25979 + C25978) * C50520 +
                     (C25977 + C25976 + C25975) * C10776) *
                        C31984) *
                       C459) *
                      C50568 * C50555)) /
                    (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50817 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50648) *
                      C50568 * C50858 +
                  ((((C25974 + C25973 + C25972) * C10776 +
                     (C25971 + C25970 + C25969) * C50520) *
                        C31984 +
                    ((C25975 + C25976 + C25977) * C10776 +
                     (C25978 + C25979 + C25980) * C50520) *
                        C50722) *
                       C50648 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50817) *
                      C50568 * C50859 +
                  ((((C25610 + C25609 + C25608) * C10776 +
                     (C25607 + C25606 + C25605) * C50520) *
                        C31984 +
                    ((C26303 + C26304 + C26305) * C10776 +
                     (C26306 + C26307 + C26308) * C50520) *
                        C50722) *
                       C50817 -
                   (((C25559 * C3682 + C25554 * C3688 + C25558 * C1221 +
                      C50853 * C1228 + C25557 * C483 + C50864 * C496) *
                         C50520 +
                     (C25559 * C3679 + C25554 * C3683 + C25558 * C1216 +
                      C50853 * C1222 + C25557 * C466 + C50864 * C482) *
                         C10776) *
                        C50722 +
                    ((C26308 + C26307 + C26306) * C50520 +
                     (C26305 + C26304 + C26303) * C10776) *
                        C31984) *
                       C50648) *
                      C50568 * C638)) /
                (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C10776 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C50520) *
                       C31984 +
                   ((C25557 * C463 + C50864 * C477 + C25558 * C889 +
                     C50853 * C894 + C25559 * C1565 + C25554 * C1573) *
                        C10776 +
                    (C25557 * C476 + C50864 * C493 + C25558 * C895 +
                     C50853 * C904 + C25559 * C1572 + C25554 * C1577) *
                        C50520) *
                       C50722) *
                      C50584 * C50568 * C113 -
                  (((C25969 + C25970 + C25971) * C50520 +
                    (C25972 + C25973 + C25974) * C10776) *
                       C50722 +
                   ((C25604 + C25603 + C25602) * C50520 +
                    (C25601 + C25600 + C25599) * C10776) *
                       C31984) *
                      C50584 * C50568 * C114 +
                  (((C25610 + C25609 + C25608) * C10776 +
                    (C25607 + C25606 + C25605) * C50520) *
                       C31984 +
                   ((C26303 + C26304 + C26305) * C10776 +
                    (C26306 + C26307 + C26308) * C50520) *
                       C50722) *
                      C50584 * C50568 * C115 -
                  (((C25559 * C1566 + C25554 * C1574 + C25558 * C901 +
                     C50853 * C907 + C25557 * C470 + C50864 * C490) *
                        C50520 +
                    (C25559 * C1562 + C25554 * C1567 + C25558 * C892 +
                     C50853 * C900 + C25557 * C460 + C50864 * C471) *
                        C10776) *
                       C50722 +
                   ((C25616 + C25615 + C25614) * C50520 +
                    (C25613 + C25612 + C25611) * C10776) *
                       C31984) *
                      C50584 * C50568 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C25557 * C463 + C50864 * C477 + C25558 * C889 +
                      C50853 * C894 + C25559 * C1565 + C25554 * C1573) *
                         C10776 +
                     (C25557 * C476 + C50864 * C493 + C25558 * C895 +
                      C50853 * C904 + C25559 * C1572 + C25554 * C1577) *
                         C50520) *
                        C50722) *
                       C50584 * C278 -
                   (((C25559 * C4184 + C25554 * C4188 + C25558 * C1572 +
                      C50853 * C1577 + C25557 * C895 + C50864 * C904) *
                         C50520 +
                     (C25559 * C4179 + C25554 * C4185 + C25558 * C1565 +
                      C50853 * C1573 + C25557 * C889 + C50864 * C894) *
                         C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50584 * C279 +
                   (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                      C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                         C10776 +
                     (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                      C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                         C50520) *
                        C31984 +
                    ((C25557 * C1565 + C50864 * C1573 + C25558 * C4179 +
                      C50853 * C4185 + C25559 * C9810 + C25554 * C9814) *
                         C10776 +
                     (C25557 * C1572 + C50864 * C1577 + C25558 * C4184 +
                      C50853 * C4188 + C25559 * C9813 + C25554 * C9816) *
                         C50520) *
                        C50722) *
                       C50584 * C280) *
                      C281 +
                  ((((C25792 + C25791 + C25790) * C10776 +
                     (C25789 + C25788 + C25787) * C50520) *
                        C31984 +
                    ((C26515 + C26516 + C26517) * C10776 +
                     (C26518 + C26519 + C26520) * C50520) *
                        C50722) *
                       C50584 * C279 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50584 * C278 -
                   (((C25559 * C9811 + C25554 * C9815 + C25558 * C4182 +
                      C50853 * C4187 + C25557 * C1570 + C50864 * C1576) *
                         C50520 +
                     (C25559 * C9809 + C25554 * C9812 + C25558 * C4178 +
                      C50853 * C4183 + C25557 * C1564 + C50864 * C1571) *
                         C10776) *
                        C50722 +
                    ((C25798 + C25797 + C25796) * C50520 +
                     (C25795 + C25794 + C25793) * C10776) *
                        C31984) *
                       C50584 * C280) *
                      C50555)) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50584 * C50860 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50584 * C50861 +
                   (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                      C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                         C10776 +
                     (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                      C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                         C50520) *
                        C31984 +
                    ((C25557 * C1565 + C50864 * C1573 + C25558 * C4179 +
                      C50853 * C4185 + C25559 * C9810 + C25554 * C9814) *
                         C10776 +
                     (C25557 * C1572 + C50864 * C1577 + C25558 * C4184 +
                      C50853 * C4188 + C25559 * C9813 + C25554 * C9816) *
                         C50520) *
                        C50722) *
                       C50584 * C1331) *
                      C50808 +
                  ((((C25792 + C25791 + C25790) * C10776 +
                     (C25789 + C25788 + C25787) * C50520) *
                        C31984 +
                    ((C26515 + C26516 + C26517) * C10776 +
                     (C26518 + C26519 + C26520) * C50520) *
                        C50722) *
                       C50584 * C50861 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50584 * C50860 -
                   (((C25559 * C9811 + C25554 * C9815 + C25558 * C4182 +
                      C50853 * C4187 + C25557 * C1570 + C50864 * C1576) *
                         C50520 +
                     (C25559 * C9809 + C25554 * C9812 + C25558 * C4178 +
                      C50853 * C4183 + C25557 * C1564 + C50864 * C1571) *
                         C10776) *
                        C50722 +
                    ((C25798 + C25797 + C25796) * C50520 +
                     (C25795 + C25794 + C25793) * C10776) *
                        C31984) *
                       C50584 * C1331) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50817 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50648) *
                      C50860 +
                  ((((C45216 + C45217 + C45218) * C10776 +
                     (C45219 + C45220 + C45221) * C50520) *
                        C31984 +
                    ((C45624 + C45625 + C45626) * C10776 +
                     (C45627 + C45628 + C45629) * C50520) *
                        C50722) *
                       C50648 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50817) *
                      C50861 +
                  ((((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                      C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                         C10776 +
                     (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                      C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                         C50520) *
                        C31984 +
                    ((C46128 + C46129 + C46130) * C10776 +
                     (C46131 + C46132 + C46133) * C50520) *
                        C50722) *
                       C50817 -
                   (((C25559 * C11566 + C25554 * C11568 + C25558 * C9319 +
                      C50853 * C9322 + C25557 * C3686 + C50864 * C3690) *
                         C50520 +
                     (C25559 * C11565 + C25554 * C11567 + C25558 * C9316 +
                      C50853 * C9320 + C25557 * C3681 + C50864 * C3687) *
                         C10776) *
                        C50722 +
                    ((C46133 + C46132 + C46131) * C50520 +
                     (C46130 + C46129 + C46128) * C10776) *
                        C31984) *
                       C50648) *
                      C1331) *
                 C50549) /
                (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C10776 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C50520) *
                       C31984 +
                   ((C44706 + C44707 + C44708) * C10776 +
                    (C44709 + C44710 + C44711) * C50520) *
                       C50722) *
                      C50584 * C1096 -
                  (((C45221 + C45220 + C45219) * C50520 +
                    (C45218 + C45217 + C45216) * C10776) *
                       C50722 +
                   ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C50520 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C10776) *
                       C31984) *
                      C50584 * C1097 +
                  (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C10776 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C50520) *
                       C31984 +
                   ((C25557 * C1565 + C50864 * C1573 + C25558 * C4179 +
                     C50853 * C4185 + C25559 * C9810 + C25554 * C9814) *
                        C10776 +
                    (C25557 * C1572 + C50864 * C1577 + C25558 * C4184 +
                     C50853 * C4188 + C25559 * C9813 + C25554 * C9816) *
                        C50520) *
                       C50722) *
                      C50584 * C1098 -
                  (((C25559 * C11896 + C25554 * C11898 + C25558 * C9813 +
                     C50853 * C9816 + C25557 * C4184 + C50864 * C4188) *
                        C50520 +
                    (C25559 * C11895 + C25554 * C11897 + C25558 * C9810 +
                     C50853 * C9814 + C25557 * C4179 + C50864 * C4185) *
                        C10776) *
                       C50722 +
                   ((C25559 * C9165 + C25554 * C9168 + C25558 * C3528 +
                     C50853 * C3532 + C25557 * C1111 + C50864 * C1116) *
                        C50520 +
                    (C25559 * C9162 + C25554 * C9166 + C25558 * C3523 +
                     C50853 * C3529 + C25557 * C1104 + C50864 * C1112) *
                        C10776) *
                       C31984) *
                      C50584 * C1099) *
                 C50549) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50584 * C1025 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50584 * C50620) *
                      C1027 +
                  ((((C25792 + C25791 + C25790) * C10776 +
                     (C25789 + C25788 + C25787) * C50520) *
                        C31984 +
                    ((C26515 + C26516 + C26517) * C10776 +
                     (C26518 + C26519 + C26520) * C50520) *
                        C50722) *
                       C50584 * C50620 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50584 * C1025) *
                      C1028 +
                  ((((C25610 + C25609 + C25608) * C10776 +
                     (C25607 + C25606 + C25605) * C50520) *
                        C31984 +
                    ((C26303 + C26304 + C26305) * C10776 +
                     (C26306 + C26307 + C26308) * C50520) *
                        C50722) *
                       C50584 * C1025 -
                   (((C25559 * C4180 + C25554 * C4186 + C25558 * C1568 +
                      C50853 * C1575 + C25557 * C899 + C50864 * C906) *
                         C50520 +
                     (C25559 * C4177 + C25554 * C4181 + C25558 * C1563 +
                      C50853 * C1569 + C25557 * C891 + C50864 * C898) *
                         C10776) *
                        C50722 +
                    ((C26144 + C26143 + C26142) * C50520 +
                     (C26141 + C26140 + C26139) * C10776) *
                        C31984) *
                       C50584 * C50620) *
                      C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C457 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C458 +
                   (((C44717 + C44716 + C44715) * C10776 +
                     (C44714 + C44713 + C44712) * C50520) *
                        C31984 +
                    ((C25557 * C1849 + C50864 * C1857 + C25558 * C4581 +
                      C50853 * C4587 + C25559 * C10208 + C25554 * C10212) *
                         C10776 +
                     (C25557 * C1856 + C50864 * C1861 + C25558 * C4586 +
                      C50853 * C4590 + C25559 * C10211 + C25554 * C10214) *
                         C50520) *
                        C50722) *
                       C459) *
                      C1025 +
                  ((((C45216 + C45217 + C45218) * C10776 +
                     (C45219 + C45220 + C45221) * C50520) *
                        C31984 +
                    ((C45624 + C45625 + C45626) * C10776 +
                     (C45627 + C45628 + C45629) * C50520) *
                        C50722) *
                       C458 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C457 -
                   (((C25559 * C12162 + C25554 * C12164 + C25558 * C10211 +
                      C50853 * C10214 + C25557 * C4586 + C50864 * C4590) *
                         C50520 +
                     (C25559 * C12161 + C25554 * C12163 + C25558 * C10208 +
                      C50853 * C10212 + C25557 * C4581 + C50864 * C4587) *
                         C10776) *
                        C50722 +
                    ((C45629 + C45628 + C45627) * C50520 +
                     (C45626 + C45625 + C45624) * C10776) *
                        C31984) *
                       C459) *
                      C50620) *
                 C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                       C50853 * C300 + C25559 * C287 + C25554 * C301) *
                          C10776 +
                      (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                       C50853 * C316 + C25559 * C302 + C25554 * C317) *
                          C50520) *
                         C31984 +
                     ((C44706 + C44707 + C44708) * C10776 +
                      (C44709 + C44710 + C44711) * C50520) *
                         C50722) *
                        C50817 -
                    (((C44712 + C44713 + C44714) * C50520 +
                      (C44715 + C44716 + C44717) * C10776) *
                         C50722 +
                     ((C44711 + C44710 + C44709) * C50520 +
                      (C44708 + C44707 + C44706) * C10776) *
                         C31984) *
                        C50648) *
                       C1025 +
                   ((((C45216 + C45217 + C45218) * C10776 +
                      (C45219 + C45220 + C45221) * C50520) *
                         C31984 +
                     ((C45624 + C45625 + C45626) * C10776 +
                      (C45627 + C45628 + C45629) * C50520) *
                         C50722) *
                        C50648 -
                    (((C45221 + C45220 + C45219) * C50520 +
                      (C45218 + C45217 + C45216) * C10776) *
                         C50722 +
                     ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                       C50853 * C317 + C25557 * C299 + C50864 * C316) *
                          C50520 +
                      (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                       C50853 * C301 + C25557 * C286 + C50864 * C300) *
                          C10776) *
                         C31984) *
                        C50817) *
                       C50620) *
                      C50808 +
                  (((((C25974 + C25973 + C25972) * C10776 +
                      (C25971 + C25970 + C25969) * C50520) *
                         C31984 +
                     ((C25975 + C25976 + C25977) * C10776 +
                      (C25978 + C25979 + C25980) * C50520) *
                         C50722) *
                        C50648 -
                    (((C25969 + C25970 + C25971) * C50520 +
                      (C25972 + C25973 + C25974) * C10776) *
                         C50722 +
                     ((C25604 + C25603 + C25602) * C50520 +
                      (C25601 + C25600 + C25599) * C10776) *
                         C31984) *
                        C50817) *
                       C1025 +
                   ((((C25792 + C25791 + C25790) * C10776 +
                      (C25789 + C25788 + C25787) * C50520) *
                         C31984 +
                     ((C26515 + C26516 + C26517) * C10776 +
                      (C26518 + C26519 + C26520) * C50520) *
                         C50722) *
                        C50817 -
                    (((C25559 * C9317 + C25554 * C9321 + C25558 * C3684 +
                       C50853 * C3689 + C25557 * C1223 + C50864 * C1229) *
                          C50520 +
                      (C25559 * C9315 + C25554 * C9318 + C25558 * C3680 +
                       C50853 * C3685 + C25557 * C1217 + C50864 * C1224) *
                          C10776) *
                         C50722 +
                     ((C26520 + C26519 + C26518) * C50520 +
                      (C26517 + C26516 + C26515) * C10776) *
                         C31984) *
                        C50648) *
                       C50620) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50584 * C1025 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50584 * C50620) *
                      C1027 +
                  ((((C25792 + C25791 + C25790) * C10776 +
                     (C25789 + C25788 + C25787) * C50520) *
                        C31984 +
                    ((C26515 + C26516 + C26517) * C10776 +
                     (C26518 + C26519 + C26520) * C50520) *
                        C50722) *
                       C50584 * C50620 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50584 * C1025) *
                      C1028 +
                  ((((C25610 + C25609 + C25608) * C10776 +
                     (C25607 + C25606 + C25605) * C50520) *
                        C31984 +
                    ((C26303 + C26304 + C26305) * C10776 +
                     (C26306 + C26307 + C26308) * C50520) *
                        C50722) *
                       C50584 * C1025 -
                   (((C25559 * C4180 + C25554 * C4186 + C25558 * C1568 +
                      C50853 * C1575 + C25557 * C899 + C50864 * C906) *
                         C50520 +
                     (C25559 * C4177 + C25554 * C4181 + C25558 * C1563 +
                      C50853 * C1569 + C25557 * C891 + C50864 * C898) *
                         C10776) *
                        C50722 +
                    ((C26144 + C26143 + C26142) * C50520 +
                     (C26141 + C26140 + C26139) * C10776) *
                        C31984) *
                       C50584 * C50620) *
                      C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C10776 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C50520) *
                       C31984 +
                   ((C44706 + C44707 + C44708) * C10776 +
                    (C44709 + C44710 + C44711) * C50520) *
                       C50722) *
                      C50584 * C1096 -
                  (((C45221 + C45220 + C45219) * C50520 +
                    (C45218 + C45217 + C45216) * C10776) *
                       C50722 +
                   ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                     C50853 * C317 + C25557 * C299 + C50864 * C316) *
                        C50520 +
                    (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                     C50853 * C301 + C25557 * C286 + C50864 * C300) *
                        C10776) *
                       C31984) *
                      C50584 * C1097 +
                  (((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                     C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                        C10776 +
                    (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                     C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                        C50520) *
                       C31984 +
                   ((C25557 * C1565 + C50864 * C1573 + C25558 * C4179 +
                     C50853 * C4185 + C25559 * C9810 + C25554 * C9814) *
                        C10776 +
                    (C25557 * C1572 + C50864 * C1577 + C25558 * C4184 +
                     C50853 * C4188 + C25559 * C9813 + C25554 * C9816) *
                        C50520) *
                       C50722) *
                      C50584 * C1098 -
                  (((C25559 * C11896 + C25554 * C11898 + C25558 * C9813 +
                     C50853 * C9816 + C25557 * C4184 + C50864 * C4188) *
                        C50520 +
                    (C25559 * C11895 + C25554 * C11897 + C25558 * C9810 +
                     C50853 * C9814 + C25557 * C4179 + C50864 * C4185) *
                        C10776) *
                       C50722 +
                   ((C25559 * C9165 + C25554 * C9168 + C25558 * C3528 +
                     C50853 * C3532 + C25557 * C1111 + C50864 * C1116) *
                        C50520 +
                    (C25559 * C9162 + C25554 * C9166 + C25558 * C3523 +
                     C50853 * C3529 + C25557 * C1104 + C50864 * C1112) *
                        C10776) *
                       C31984) *
                      C50584 * C1099) *
                 C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                       C50853 * C300 + C25559 * C287 + C25554 * C301) *
                          C10776 +
                      (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                       C50853 * C316 + C25559 * C302 + C25554 * C317) *
                          C50520) *
                         C31984 +
                     ((C44706 + C44707 + C44708) * C10776 +
                      (C44709 + C44710 + C44711) * C50520) *
                         C50722) *
                        C1676 -
                    (((C44712 + C44713 + C44714) * C50520 +
                      (C44715 + C44716 + C44717) * C10776) *
                         C50722 +
                     ((C44711 + C44710 + C44709) * C50520 +
                      (C44708 + C44707 + C44706) * C10776) *
                         C31984) *
                        C50648) *
                       C50816 +
                   ((((C45216 + C45217 + C45218) * C10776 +
                      (C45219 + C45220 + C45221) * C50520) *
                         C31984 +
                     ((C45624 + C45625 + C45626) * C10776 +
                      (C45627 + C45628 + C45629) * C50520) *
                         C50722) *
                        C50648 -
                    (((C45221 + C45220 + C45219) * C50520 +
                      (C45218 + C45217 + C45216) * C10776) *
                         C50722 +
                     ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                       C50853 * C317 + C25557 * C299 + C50864 * C316) *
                          C50520 +
                      (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                       C50853 * C301 + C25557 * C286 + C50864 * C300) *
                          C10776) *
                         C31984) *
                        C1676) *
                       C50620) *
                      C50808 +
                  (((((C25974 + C25973 + C25972) * C10776 +
                      (C25971 + C25970 + C25969) * C50520) *
                         C31984 +
                     ((C25975 + C25976 + C25977) * C10776 +
                      (C25978 + C25979 + C25980) * C50520) *
                         C50722) *
                        C50648 -
                    (((C25969 + C25970 + C25971) * C50520 +
                      (C25972 + C25973 + C25974) * C10776) *
                         C50722 +
                     ((C25604 + C25603 + C25602) * C50520 +
                      (C25601 + C25600 + C25599) * C10776) *
                         C31984) *
                        C1676) *
                       C50816 +
                   ((((C25792 + C25791 + C25790) * C10776 +
                      (C25789 + C25788 + C25787) * C50520) *
                         C31984 +
                     ((C26515 + C26516 + C26517) * C10776 +
                      (C26518 + C26519 + C26520) * C50520) *
                         C50722) *
                        C1676 -
                    (((C25559 * C9317 + C25554 * C9321 + C25558 * C3684 +
                       C50853 * C3689 + C25557 * C1223 + C50864 * C1229) *
                          C50520 +
                      (C25559 * C9315 + C25554 * C9318 + C25558 * C3680 +
                       C50853 * C3685 + C25557 * C1217 + C50864 * C1224) *
                          C10776) *
                         C50722 +
                     ((C26520 + C26519 + C26518) * C50520 +
                      (C26517 + C26516 + C26515) * C10776) *
                         C31984) *
                        C50648) *
                       C50620) *
                      C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50862 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50863 +
                   (((C44717 + C44716 + C44715) * C10776 +
                     (C44714 + C44713 + C44712) * C50520) *
                        C31984 +
                    ((C46536 + C46537 + C46538) * C10776 +
                     (C46539 + C46540 + C46541) * C50520) *
                        C50722) *
                       C2092) *
                      C50816 +
                  ((((C45216 + C45217 + C45218) * C10776 +
                     (C45219 + C45220 + C45221) * C50520) *
                        C31984 +
                    ((C45624 + C45625 + C45626) * C10776 +
                     (C45627 + C45628 + C45629) * C50520) *
                        C50722) *
                       C50863 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C50862 -
                   (((C25559 * C12162 + C25554 * C12164 + C25558 * C10211 +
                      C50853 * C10214 + C25557 * C4586 + C50864 * C4590) *
                         C50520 +
                     (C25559 * C12161 + C25554 * C12163 + C25558 * C10208 +
                      C50853 * C10212 + C25557 * C4581 + C50864 * C4587) *
                         C10776) *
                        C50722 +
                    ((C45629 + C45628 + C45627) * C50520 +
                     (C45626 + C45625 + C45624) * C10776) *
                        C31984) *
                       C2092) *
                      C50620) *
                 C50549) /
                (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C1676 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50648) *
                      C278 +
                  ((((C45216 + C45217 + C45218) * C10776 +
                     (C45219 + C45220 + C45221) * C50520) *
                        C31984 +
                    ((C45624 + C45625 + C45626) * C10776 +
                     (C45627 + C45628 + C45629) * C50520) *
                        C50722) *
                       C50648 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C1676) *
                      C279 +
                  ((((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                      C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                         C10776 +
                     (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                      C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                         C50520) *
                        C31984 +
                    ((C46128 + C46129 + C46130) * C10776 +
                     (C46131 + C46132 + C46133) * C50520) *
                        C50722) *
                       C1676 -
                   (((C25559 * C11566 + C25554 * C11568 + C25558 * C9319 +
                      C50853 * C9322 + C25557 * C3686 + C50864 * C3690) *
                         C50520 +
                     (C25559 * C11565 + C25554 * C11567 + C25558 * C9316 +
                      C50853 * C9320 + C25557 * C3681 + C50864 * C3687) *
                         C10776) *
                        C50722 +
                    ((C46133 + C46132 + C46131) * C50520 +
                     (C46130 + C46129 + C46128) * C10776) *
                        C31984) *
                       C50648) *
                      C280) *
                 C50549) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C1676 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50648) *
                      C50568 * C1027 +
                  ((((C25974 + C25973 + C25972) * C10776 +
                     (C25971 + C25970 + C25969) * C50520) *
                        C31984 +
                    ((C25975 + C25976 + C25977) * C10776 +
                     (C25978 + C25979 + C25980) * C50520) *
                        C50722) *
                       C50648 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C1676) *
                      C50568 * C1028 +
                  ((((C25610 + C25609 + C25608) * C10776 +
                     (C25607 + C25606 + C25605) * C50520) *
                        C31984 +
                    ((C26303 + C26304 + C26305) * C10776 +
                     (C26306 + C26307 + C26308) * C50520) *
                        C50722) *
                       C1676 -
                   (((C25559 * C3682 + C25554 * C3688 + C25558 * C1221 +
                      C50853 * C1228 + C25557 * C483 + C50864 * C496) *
                         C50520 +
                     (C25559 * C3679 + C25554 * C3683 + C25558 * C1216 +
                      C50853 * C1222 + C25557 * C466 + C50864 * C482) *
                         C10776) *
                        C50722 +
                    ((C26308 + C26307 + C26306) * C50520 +
                     (C26305 + C26304 + C26303) * C10776) *
                        C31984) *
                       C50648) *
                      C50568 * C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                     C50853 * C300 + C25559 * C287 + C25554 * C301) *
                        C10776 +
                    (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                     C50853 * C316 + C25559 * C302 + C25554 * C317) *
                        C50520) *
                       C31984 +
                   ((C44706 + C44707 + C44708) * C10776 +
                    (C44709 + C44710 + C44711) * C50520) *
                       C50722) *
                      C1842 -
                  (((C44712 + C44713 + C44714) * C50520 +
                    (C44715 + C44716 + C44717) * C10776) *
                       C50722 +
                   ((C44711 + C44710 + C44709) * C50520 +
                    (C44708 + C44707 + C44706) * C10776) *
                       C31984) *
                      C1843 +
                  (((C44717 + C44716 + C44715) * C10776 +
                    (C44714 + C44713 + C44712) * C50520) *
                       C31984 +
                   ((C46536 + C46537 + C46538) * C10776 +
                    (C46539 + C46540 + C46541) * C50520) *
                       C50722) *
                      C1844 -
                  (((C25559 * C14725 + C25554 * C14729 + C25558 * C14726 +
                     C50853 * C14730 + C25557 * C7348 + C50864 * C7352) *
                        C50520 +
                    (C25559 * C14723 + C25554 * C14727 + C25558 * C14724 +
                     C50853 * C14728 + C25557 * C7343 + C50864 * C7349) *
                        C10776) *
                       C50722 +
                   ((C46541 + C46540 + C46539) * C50520 +
                    (C46538 + C46537 + C46536) * C10776) *
                       C31984) *
                      C1845) *
                 C50568 * C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C50862 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50863 +
                   (((C44717 + C44716 + C44715) * C10776 +
                     (C44714 + C44713 + C44712) * C50520) *
                        C31984 +
                    ((C46536 + C46537 + C46538) * C10776 +
                     (C46539 + C46540 + C46541) * C50520) *
                        C50722) *
                       C2092) *
                      C50568 * C50808 +
                  ((((C25974 + C25973 + C25972) * C10776 +
                     (C25971 + C25970 + C25969) * C50520) *
                        C31984 +
                    ((C25975 + C25976 + C25977) * C10776 +
                     (C25978 + C25979 + C25980) * C50520) *
                        C50722) *
                       C50863 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C50862 -
                   (((C25559 * C10209 + C25554 * C10213 + C25558 * C4584 +
                      C50853 * C4589 + C25557 * C1854 + C50864 * C1860) *
                         C50520 +
                     (C25559 * C10207 + C25554 * C10210 + C25558 * C4580 +
                      C50853 * C4585 + C25557 * C1848 + C50864 * C1855) *
                         C10776) *
                        C50722 +
                    ((C25980 + C25979 + C25978) * C50520 +
                     (C25977 + C25976 + C25975) * C10776) *
                        C31984) *
                       C2092) *
                      C50568 * C50555)) /
                (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C1676 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50648) *
                      C50568 * C1027 +
                  ((((C25974 + C25973 + C25972) * C10776 +
                     (C25971 + C25970 + C25969) * C50520) *
                        C31984 +
                    ((C25975 + C25976 + C25977) * C10776 +
                     (C25978 + C25979 + C25980) * C50520) *
                        C50722) *
                       C50648 -
                   (((C25969 + C25970 + C25971) * C50520 +
                     (C25972 + C25973 + C25974) * C10776) *
                        C50722 +
                    ((C25604 + C25603 + C25602) * C50520 +
                     (C25601 + C25600 + C25599) * C10776) *
                        C31984) *
                       C1676) *
                      C50568 * C1028 +
                  ((((C25610 + C25609 + C25608) * C10776 +
                     (C25607 + C25606 + C25605) * C50520) *
                        C31984 +
                    ((C26303 + C26304 + C26305) * C10776 +
                     (C26306 + C26307 + C26308) * C50520) *
                        C50722) *
                       C1676 -
                   (((C25559 * C3682 + C25554 * C3688 + C25558 * C1221 +
                      C50853 * C1228 + C25557 * C483 + C50864 * C496) *
                         C50520 +
                     (C25559 * C3679 + C25554 * C3683 + C25558 * C1216 +
                      C50853 * C1222 + C25557 * C466 + C50864 * C482) *
                         C10776) *
                        C50722 +
                    ((C26308 + C26307 + C26306) * C50520 +
                     (C26305 + C26304 + C26303) * C10776) *
                        C31984) *
                       C50648) *
                      C50568 * C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25557 * C122 + C50864 * C129 + C25558 * C286 +
                      C50853 * C300 + C25559 * C287 + C25554 * C301) *
                         C10776 +
                     (C25557 * C130 + C50864 * C143 + C25558 * C299 +
                      C50853 * C316 + C25559 * C302 + C25554 * C317) *
                         C50520) *
                        C31984 +
                    ((C44706 + C44707 + C44708) * C10776 +
                     (C44709 + C44710 + C44711) * C50520) *
                        C50722) *
                       C1676 -
                   (((C44712 + C44713 + C44714) * C50520 +
                     (C44715 + C44716 + C44717) * C10776) *
                        C50722 +
                    ((C44711 + C44710 + C44709) * C50520 +
                     (C44708 + C44707 + C44706) * C10776) *
                        C31984) *
                       C50648) *
                      C278 +
                  ((((C45216 + C45217 + C45218) * C10776 +
                     (C45219 + C45220 + C45221) * C50520) *
                        C31984 +
                    ((C45624 + C45625 + C45626) * C10776 +
                     (C45627 + C45628 + C45629) * C50520) *
                        C50722) *
                       C50648 -
                   (((C45221 + C45220 + C45219) * C50520 +
                     (C45218 + C45217 + C45216) * C10776) *
                        C50722 +
                    ((C25559 * C1111 + C25554 * C1116 + C25558 * C302 +
                      C50853 * C317 + C25557 * C299 + C50864 * C316) *
                         C50520 +
                     (C25559 * C1104 + C25554 * C1112 + C25558 * C287 +
                      C50853 * C301 + C25557 * C286 + C50864 * C300) *
                         C10776) *
                        C31984) *
                       C1676) *
                      C279 +
                  ((((C25557 * C287 + C50864 * C301 + C25558 * C1104 +
                      C50853 * C1112 + C25559 * C3523 + C25554 * C3529) *
                         C10776 +
                     (C25557 * C302 + C50864 * C317 + C25558 * C1111 +
                      C50853 * C1116 + C25559 * C3528 + C25554 * C3532) *
                         C50520) *
                        C31984 +
                    ((C46128 + C46129 + C46130) * C10776 +
                     (C46131 + C46132 + C46133) * C50520) *
                        C50722) *
                       C1676 -
                   (((C25559 * C11566 + C25554 * C11568 + C25558 * C9319 +
                      C50853 * C9322 + C25557 * C3686 + C50864 * C3690) *
                         C50520 +
                     (C25559 * C11565 + C25554 * C11567 + C25558 * C9316 +
                      C50853 * C9320 + C25557 * C3681 + C50864 * C3687) *
                         C10776) *
                        C50722 +
                    ((C46133 + C46132 + C46131) * C50520 +
                     (C46130 + C46129 + C46128) * C10776) *
                        C31984) *
                       C50648) *
                      C280) *
                 C50549) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50584 * C50816 -
           (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50584 * C50620) *
              C50858 +
          ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) * C50865 +
            (C29503 * C10776 + C29504 * C50520) * C50856 +
            ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                C38192) *
               C50584 * C50620 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50584 * C50816) *
              C50859 +
          (((C22773 * C10776 + C22774 * C50520) * C50865 +
            (C29235 * C10776 + C29236 * C50520) * C50856 +
            ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) *
                C38192) *
               C50584 * C50816 -
           (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
              C22714 * C1228) *
                 C50520 +
             (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
              C22714 * C1222) *
                 C10776) *
                C38192 +
            ((C23702 + C23701) * C50520 + (C23700 + C23699) * C10776) * C50856 +
            (C23311 * C50520 + C23312 * C10776) * C50865) *
               C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C10776 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C50520) *
                 C50865 +
             ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) *
                 C50856 +
             C47425 * C38192) *
                C50817 -
            (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) *
                 C38192 +
             ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) *
                 C50856 +
             ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                 C50865) *
                C50648) *
               C50816 +
           ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) *
                 C50865 +
             ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) *
                 C50856 +
             ((C22719 * C4581 + C22714 * C4587 + C22720 * C10208 +
               C50696 * C10212) *
                  C10776 +
              (C22719 * C4586 + C22714 * C4590 + C22720 * C10211 +
               C50696 * C10214) *
                  C50520) *
                 C38192) *
                C50648 -
            (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) *
                 C38192 +
             ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) *
                 C50856 +
             ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C50520 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C10776) *
                 C50865) *
                C50817) *
               C50620) *
              C281 +
          ((((C28811 * C10776 + C28812 * C50520) * C50865 +
             (C28825 * C10776 + C28826 * C50520) * C50856 +
             ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                 C38192) *
                C50648 -
            (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
             ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                 C50865) *
                C50817) *
               C50816 +
           ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) *
                 C50865 +
             (C29503 * C10776 + C29504 * C50520) * C50856 +
             ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                 C38192) *
                C50817 -
            (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
               C22714 * C4589) *
                  C50520 +
              (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
               C22714 * C4585) *
                  C10776) *
                 C38192 +
             ((C29522 + C29521) * C50520 + (C29520 + C29519) * C10776) *
                 C50856 +
             (C29513 * C50520 + C29514 * C10776) * C50865) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            ((C28842 + C28841) * C10776 + (C28840 + C28839) * C50520) *
                C38192) *
               C50584 * C278 -
           (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50584 * C279 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C10776 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50520) *
                C50865 +
            ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
            ((C22719 * C3681 + C22714 * C3687 + C22720 * C9316 +
              C50696 * C9320) *
                 C10776 +
             (C22719 * C3686 + C22714 * C3690 + C22720 * C9319 +
              C50696 * C9322) *
                 C50520) *
                C38192) *
               C50584 * C280) *
              C281 +
          ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) * C50865 +
            (C29503 * C10776 + C29504 * C50520) * C50856 +
            ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                C38192) *
               C50584 * C279 -
           ((C28813 * C50520 + C28814 * C10776) * C38192 +
            (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50584 * C278 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50520 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C10776) *
                C38192 +
            ((C28608 + C28607) * C50520 + (C28606 + C28605) * C10776) * C50856 +
            ((C22966 + C22965) * C50520 + (C22964 + C22963) * C10776) *
                C50865) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C10776 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50520) *
               C50865 +
           ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
           ((C28842 + C28841) * C10776 + (C28840 + C28839) * C50520) * C38192) *
              C50584 * C50568 * C113 -
          ((C28813 * C50520 + C28814 * C10776) * C38192 +
           (C28823 * C50520 + C28824 * C10776) * C50856 +
           ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) * C50865) *
              C50584 * C50568 * C114 +
          ((C22773 * C10776 + C22774 * C50520) * C50865 +
           (C29235 * C10776 + C29236 * C50520) * C50856 +
           ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) * C38192) *
              C50584 * C50568 * C115 -
          (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                C50520 +
            (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                C10776) *
               C38192 +
           ((C23484 + C23483) * C50520 + (C23482 + C23481) * C10776) * C50856 +
           (C22775 * C50520 + C22776 * C10776) * C50865) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C457 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C458 +
           (C47425 * C50865 +
            ((C31237 + C31238) * C10776 + (C31239 + C31240) * C50520) * C50856 +
            ((C22719 * C7343 + C22714 * C7349 + C22720 * C14724 +
              C50696 * C14728) *
                 C10776 +
             (C22719 * C7348 + C22714 * C7352 + C22720 * C14726 +
              C50696 * C14730) *
                 C50520) *
                C38192) *
               C459) *
              C50568 * C281 +
          (((C28811 * C10776 + C28812 * C50520) * C50865 +
            (C28825 * C10776 + C28826 * C50520) * C50856 +
            ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                C38192) *
               C458 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C457 -
           (((C22720 * C16577 + C50696 * C16579 + C22719 * C7346 +
              C22714 * C7351) *
                 C50520 +
             (C22720 * C16576 + C50696 * C16578 + C22719 * C7342 +
              C22714 * C7347) *
                 C10776) *
                C38192 +
            ((C28846 + C28845) * C50520 + (C28844 + C28843) * C10776) * C50856 +
            C47424 * C50865) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50817 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50648) *
              C50568 * C50858 +
          (((C28811 * C10776 + C28812 * C50520) * C50865 +
            (C28825 * C10776 + C28826 * C50520) * C50856 +
            ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                C38192) *
               C50648 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50817) *
              C50568 * C50859 +
          (((C22773 * C10776 + C22774 * C50520) * C50865 +
            (C29235 * C10776 + C29236 * C50520) * C50856 +
            ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) *
                C38192) *
               C50817 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50520 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C10776) *
                C38192 +
            ((C23164 + C23163) * C50520 + (C23162 + C23161) * C10776) * C50856 +
            (C23471 * C50520 + C23472 * C10776) * C50865) *
               C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C10776 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50520) *
               C50865 +
           ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
           ((C28842 + C28841) * C10776 + (C28840 + C28839) * C50520) * C38192) *
              C50584 * C50568 * C113 -
          ((C28813 * C50520 + C28814 * C10776) * C38192 +
           (C28823 * C50520 + C28824 * C10776) * C50856 +
           ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) * C50865) *
              C50584 * C50568 * C114 +
          ((C22773 * C10776 + C22774 * C50520) * C50865 +
           (C29235 * C10776 + C29236 * C50520) * C50856 +
           ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) * C38192) *
              C50584 * C50568 * C115 -
          (((C22720 * C1219 + C50696 * C1227 + C22719 * C485 + C22714 * C497) *
                C50520 +
            (C22720 * C1215 + C50696 * C1220 + C22719 * C467 + C22714 * C484) *
                C10776) *
               C38192 +
           ((C23484 + C23483) * C50520 + (C23482 + C23481) * C10776) * C50856 +
           (C22775 * C50520 + C22776 * C10776) * C50865) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            ((C28842 + C28841) * C10776 + (C28840 + C28839) * C50520) *
                C38192) *
               C50584 * C278 -
           (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50584 * C279 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C10776 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50520) *
                C50865 +
            ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
            ((C22719 * C3681 + C22714 * C3687 + C22720 * C9316 +
              C50696 * C9320) *
                 C10776 +
             (C22719 * C3686 + C22714 * C3690 + C22720 * C9319 +
              C50696 * C9322) *
                 C50520) *
                C38192) *
               C50584 * C280) *
              C281 +
          ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) * C50865 +
            (C29503 * C10776 + C29504 * C50520) * C50856 +
            ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                C38192) *
               C50584 * C279 -
           ((C28813 * C50520 + C28814 * C10776) * C38192 +
            (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50584 * C278 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50520 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C10776) *
                C38192 +
            ((C28608 + C28607) * C50520 + (C28606 + C28605) * C10776) * C50856 +
            ((C22966 + C22965) * C50520 + (C22964 + C22963) * C10776) *
                C50865) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50584 * C50860 -
           (C48318 * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50584 * C50861 +
           (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C10776 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50520) *
                C50865 +
            ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
            ((C22719 * C3681 + C22714 * C3687 + C22720 * C9316 +
              C50696 * C9320) *
                 C10776 +
             (C22719 * C3686 + C22714 * C3690 + C22720 * C9319 +
              C50696 * C9322) *
                 C50520) *
                C38192) *
               C50584 * C1331) *
              C50808 +
          ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) * C50865 +
            (C29503 * C10776 + C29504 * C50520) * C50856 +
            ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                C38192) *
               C50584 * C50861 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50584 * C50860 -
           (((C22720 * C9317 + C50696 * C9321 + C22719 * C3684 +
              C22714 * C3689) *
                 C50520 +
             (C22720 * C9315 + C50696 * C9318 + C22719 * C3680 +
              C22714 * C3685) *
                 C10776) *
                C38192 +
            ((C28608 + C28607) * C50520 + (C28606 + C28605) * C10776) * C50856 +
            ((C22966 + C22965) * C50520 + (C22964 + C22963) * C10776) *
                C50865) *
               C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50817 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50648) *
              C50860 +
          ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) * C50865 +
            ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) * C50856 +
            ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                C38192) *
               C50648 -
           (C48318 * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50817) *
              C50861 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C10776 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50520) *
                C50865 +
            ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
            ((C48813 + C48814) * C10776 + (C48815 + C48816) * C50520) *
                C38192) *
               C50817 -
           (((C22720 * C12162 + C50696 * C12164 + C22719 * C10211 +
              C22714 * C10214) *
                 C50520 +
             (C22720 * C12161 + C50696 * C12163 + C22719 * C10208 +
              C22714 * C10212) *
                 C10776) *
                C38192 +
            ((C48816 + C48815) * C50520 + (C48814 + C48813) * C10776) * C50856 +
            ((C30710 + C30709) * C50520 + (C30708 + C30707) * C10776) *
                C50865) *
               C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C10776 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50520) *
               C50865 +
           ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
           C47425 * C38192) *
              C50584 * C1096 -
          (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
           ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
           ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50520 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C10776) *
               C50865) *
              C50584 * C1097 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C10776 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50520) *
               C50865 +
           ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
           ((C22719 * C3681 + C22714 * C3687 + C22720 * C9316 +
             C50696 * C9320) *
                C10776 +
            (C22719 * C3686 + C22714 * C3690 + C22720 * C9319 +
             C50696 * C9322) *
                C50520) *
               C38192) *
              C50584 * C1098 -
          (((C22720 * C11566 + C50696 * C11568 + C22719 * C9319 +
             C22714 * C9322) *
                C50520 +
            (C22720 * C11565 + C50696 * C11567 + C22719 * C9316 +
             C22714 * C9320) *
                C10776) *
               C38192 +
           ((C22720 * C9813 + C50696 * C9816 + C22719 * C4184 +
             C22714 * C4188) *
                C50520 +
            (C22720 * C9810 + C50696 * C9814 + C22719 * C4179 +
             C22714 * C4185) *
                C10776) *
               C50856 +
           ((C22720 * C3528 + C50696 * C3532 + C22719 * C1111 +
             C22714 * C1116) *
                C50520 +
            (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 +
             C22714 * C1112) *
                C10776) *
               C50865) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50584 * C1025 -
           (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50584 * C50620) *
              C1027 +
          ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) * C50865 +
            (C29503 * C10776 + C29504 * C50520) * C50856 +
            ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                C38192) *
               C50584 * C50620 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50584 * C1025) *
              C1028 +
          (((C22773 * C10776 + C22774 * C50520) * C50865 +
            (C29235 * C10776 + C29236 * C50520) * C50856 +
            ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) *
                C38192) *
               C50584 * C1025 -
           (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
              C22714 * C1228) *
                 C50520 +
             (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
              C22714 * C1222) *
                 C10776) *
                C38192 +
            ((C23702 + C23701) * C50520 + (C23700 + C23699) * C10776) * C50856 +
            (C23311 * C50520 + C23312 * C10776) * C50865) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C457 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C458 +
           (C47425 * C50865 +
            ((C31237 + C31238) * C10776 + (C31239 + C31240) * C50520) * C50856 +
            ((C22719 * C7343 + C22714 * C7349 + C22720 * C14724 +
              C50696 * C14728) *
                 C10776 +
             (C22719 * C7348 + C22714 * C7352 + C22720 * C14726 +
              C50696 * C14730) *
                 C50520) *
                C38192) *
               C459) *
              C1025 +
          ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) * C50865 +
            ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) * C50856 +
            ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                C38192) *
               C458 -
           (C48318 * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C457 -
           (((C22720 * C14725 + C50696 * C14729 + C22719 * C14726 +
              C22714 * C14730) *
                 C50520 +
             (C22720 * C14723 + C50696 * C14727 + C22719 * C14724 +
              C22714 * C14728) *
                 C10776) *
                C38192 +
            ((C48315 + C48314) * C50520 + (C48313 + C48312) * C10776) * C50856 +
            C48318 * C50865) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C10776 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C50520) *
                 C50865 +
             ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) *
                 C50856 +
             C47425 * C38192) *
                C50817 -
            (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) *
                 C38192 +
             ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) *
                 C50856 +
             ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                 C50865) *
                C50648) *
               C1025 +
           ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) *
                 C50865 +
             ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) *
                 C50856 +
             ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                 C38192) *
                C50648 -
            (C48318 * C38192 +
             ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) *
                 C50856 +
             ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C50520 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C10776) *
                 C50865) *
                C50817) *
               C50620) *
              C50808 +
          ((((C28811 * C10776 + C28812 * C50520) * C50865 +
             (C28825 * C10776 + C28826 * C50520) * C50856 +
             ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                 C38192) *
                C50648 -
            (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
             ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                 C50865) *
                C50817) *
               C1025 +
           ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) *
                 C50865 +
             (C29503 * C10776 + C29504 * C50520) * C50856 +
             ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                 C38192) *
                C50817 -
            (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
               C22714 * C4589) *
                  C50520 +
              (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
               C22714 * C4585) *
                  C10776) *
                 C38192 +
             ((C29522 + C29521) * C50520 + (C29520 + C29519) * C10776) *
                 C50856 +
             (C29513 * C50520 + C29514 * C10776) * C50865) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50584 * C1025 -
           (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50584 * C50620) *
              C1027 +
          ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) * C50865 +
            (C29503 * C10776 + C29504 * C50520) * C50856 +
            ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                C38192) *
               C50584 * C50620 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50584 * C1025) *
              C1028 +
          (((C22773 * C10776 + C22774 * C50520) * C50865 +
            (C29235 * C10776 + C29236 * C50520) * C50856 +
            ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) *
                C38192) *
               C50584 * C1025 -
           (((C22720 * C3682 + C50696 * C3688 + C22719 * C1221 +
              C22714 * C1228) *
                 C50520 +
             (C22720 * C3679 + C50696 * C3683 + C22719 * C1216 +
              C22714 * C1222) *
                 C10776) *
                C38192 +
            ((C23702 + C23701) * C50520 + (C23700 + C23699) * C10776) * C50856 +
            (C23311 * C50520 + C23312 * C10776) * C50865) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C10776 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50520) *
               C50865 +
           ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
           C47425 * C38192) *
              C50584 * C1096 -
          (((C30052 + C30051) * C50520 + (C30050 + C30049) * C10776) * C38192 +
           ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
           ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                C50520 +
            (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                C10776) *
               C50865) *
              C50584 * C1097 +
          (((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                C10776 +
            (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                C50520) *
               C50865 +
           ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
           ((C22719 * C3681 + C22714 * C3687 + C22720 * C9316 +
             C50696 * C9320) *
                C10776 +
            (C22719 * C3686 + C22714 * C3690 + C22720 * C9319 +
             C50696 * C9322) *
                C50520) *
               C38192) *
              C50584 * C1098 -
          (((C22720 * C11566 + C50696 * C11568 + C22719 * C9319 +
             C22714 * C9322) *
                C50520 +
            (C22720 * C11565 + C50696 * C11567 + C22719 * C9316 +
             C22714 * C9320) *
                C10776) *
               C38192 +
           ((C22720 * C9813 + C50696 * C9816 + C22719 * C4184 +
             C22714 * C4188) *
                C50520 +
            (C22720 * C9810 + C50696 * C9814 + C22719 * C4179 +
             C22714 * C4185) *
                C10776) *
               C50856 +
           ((C22720 * C3528 + C50696 * C3532 + C22719 * C1111 +
             C22714 * C1116) *
                C50520 +
            (C22720 * C3523 + C50696 * C3529 + C22719 * C1104 +
             C22714 * C1112) *
                C10776) *
               C50865) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                  C10776 +
              (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                  C50520) *
                 C50865 +
             ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) *
                 C50856 +
             C47425 * C38192) *
                C1676 -
            (C49223 * C38192 +
             ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) *
                 C50856 +
             ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                 C50865) *
                C50648) *
               C50816 +
           ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) *
                 C50865 +
             ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) *
                 C50856 +
             ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                 C38192) *
                C50648 -
            (C48318 * C38192 +
             ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) *
                 C50856 +
             ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                  C50520 +
              (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                  C10776) *
                 C50865) *
                C1676) *
               C50620) *
              C50808 +
          ((((C28811 * C10776 + C28812 * C50520) * C50865 +
             (C28825 * C10776 + C28826 * C50520) * C50856 +
             ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                 C38192) *
                C50648 -
            (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
             ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                 C50865) *
                C1676) *
               C50816 +
           ((((C22962 + C22961) * C10776 + (C22960 + C22959) * C50520) *
                 C50865 +
             (C29503 * C10776 + C29504 * C50520) * C50856 +
             ((C29519 + C29520) * C10776 + (C29521 + C29522) * C50520) *
                 C38192) *
                C1676 -
            (((C22720 * C10209 + C50696 * C10213 + C22719 * C4584 +
               C22714 * C4589) *
                  C50520 +
              (C22720 * C10207 + C50696 * C10210 + C22719 * C4580 +
               C22714 * C4585) *
                  C10776) *
                 C38192 +
             ((C29522 + C29521) * C50520 + (C29520 + C29519) * C10776) *
                 C50856 +
             (C29513 * C50520 + C29514 * C10776) * C50865) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50862 -
           (C49223 * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50863 +
           (C47425 * C50865 +
            ((C31237 + C31238) * C10776 + (C31239 + C31240) * C50520) * C50856 +
            ((C49219 + C49220) * C10776 + (C49221 + C49222) * C50520) *
                C38192) *
               C2092) *
              C50816 +
          ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) * C50865 +
            ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) * C50856 +
            ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                C38192) *
               C50863 -
           (C48318 * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C50862 -
           (((C22720 * C14725 + C50696 * C14729 + C22719 * C14726 +
              C22714 * C14730) *
                 C50520 +
             (C22720 * C14723 + C50696 * C14727 + C22719 * C14724 +
              C22714 * C14728) *
                 C10776) *
                C38192 +
            ((C48315 + C48314) * C50520 + (C48313 + C48312) * C10776) * C50856 +
            C48318 * C50865) *
               C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C1676 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50648) *
              C278 +
          ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) * C50865 +
            ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) * C50856 +
            ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                C38192) *
               C50648 -
           (C48318 * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C1676) *
              C279 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C10776 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50520) *
                C50865 +
            ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
            ((C48813 + C48814) * C10776 + (C48815 + C48816) * C50520) *
                C38192) *
               C1676 -
           (((C22720 * C12162 + C50696 * C12164 + C22719 * C10211 +
              C22714 * C10214) *
                 C50520 +
             (C22720 * C12161 + C50696 * C12163 + C22719 * C10208 +
              C22714 * C10212) *
                 C10776) *
                C38192 +
            ((C48816 + C48815) * C50520 + (C48814 + C48813) * C10776) * C50856 +
            ((C30710 + C30709) * C50520 + (C30708 + C30707) * C10776) *
                C50865) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C1676 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50648) *
              C50568 * C1027 +
          (((C28811 * C10776 + C28812 * C50520) * C50865 +
            (C28825 * C10776 + C28826 * C50520) * C50856 +
            ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                C38192) *
               C50648 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C1676) *
              C50568 * C1028 +
          (((C22773 * C10776 + C22774 * C50520) * C50865 +
            (C29235 * C10776 + C29236 * C50520) * C50856 +
            ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) *
                C38192) *
               C1676 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50520 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C10776) *
                C38192 +
            ((C23164 + C23163) * C50520 + (C23162 + C23161) * C10776) * C50856 +
            (C23471 * C50520 + C23472 * C10776) * C50865) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                C10776 +
            (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                C50520) *
               C50865 +
           ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
           C47425 * C38192) *
              C1842 -
          (C49223 * C38192 +
           ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
           ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) * C50865) *
              C1843 +
          (C47425 * C50865 +
           ((C31237 + C31238) * C10776 + (C31239 + C31240) * C50520) * C50856 +
           ((C49219 + C49220) * C10776 + (C49221 + C49222) * C50520) * C38192) *
              C1844 -
          (((C22720 * C20268 + C50696 * C20270 + C22719 * C17487 +
             C22714 * C17490) *
                C50520 +
            (C22720 * C20267 + C50696 * C20269 + C22719 * C17484 +
             C22714 * C17488) *
                C10776) *
               C38192 +
           ((C49222 + C49221) * C50520 + (C49220 + C49219) * C10776) * C50856 +
           C49223 * C50865) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C50862 -
           (C49223 * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50863 +
           (C47425 * C50865 +
            ((C31237 + C31238) * C10776 + (C31239 + C31240) * C50520) * C50856 +
            ((C49219 + C49220) * C10776 + (C49221 + C49222) * C50520) *
                C38192) *
               C2092) *
              C50568 * C50808 +
          (((C28811 * C10776 + C28812 * C50520) * C50865 +
            (C28825 * C10776 + C28826 * C50520) * C50856 +
            ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                C38192) *
               C50863 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C50862 -
           (((C22720 * C16577 + C50696 * C16579 + C22719 * C7346 +
              C22714 * C7351) *
                 C50520 +
             (C22720 * C16576 + C50696 * C16578 + C22719 * C7342 +
              C22714 * C7347) *
                 C10776) *
                C38192 +
            ((C28846 + C28845) * C50520 + (C28844 + C28843) * C10776) * C50856 +
            C47424 * C50865) *
               C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C1676 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50648) *
              C50568 * C1027 +
          (((C28811 * C10776 + C28812 * C50520) * C50865 +
            (C28825 * C10776 + C28826 * C50520) * C50856 +
            ((C28843 + C28844) * C10776 + (C28845 + C28846) * C50520) *
                C38192) *
               C50648 -
           (C47424 * C38192 + (C28823 * C50520 + C28824 * C10776) * C50856 +
            ((C22760 + C22759) * C50520 + (C22758 + C22757) * C10776) *
                C50865) *
               C1676) *
              C50568 * C1028 +
          (((C22773 * C10776 + C22774 * C50520) * C50865 +
            (C29235 * C10776 + C29236 * C50520) * C50856 +
            ((C23161 + C23162) * C10776 + (C23163 + C23164) * C50520) *
                C38192) *
               C1676 -
           (((C22720 * C4582 + C50696 * C4588 + C22719 * C1852 +
              C22714 * C1859) *
                 C50520 +
             (C22720 * C4579 + C50696 * C4583 + C22719 * C1847 +
              C22714 * C1853) *
                 C10776) *
                C38192 +
            ((C23164 + C23163) * C50520 + (C23162 + C23161) * C10776) * C50856 +
            (C23471 * C50520 + C23472 * C10776) * C50865) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22719 * C122 + C22714 * C129 + C22720 * C286 + C50696 * C300) *
                 C10776 +
             (C22719 * C130 + C22714 * C143 + C22720 * C299 + C50696 * C316) *
                 C50520) *
                C50865 +
            ((C28835 + C28836) * C10776 + (C28837 + C28838) * C50520) * C50856 +
            C47425 * C38192) *
               C1676 -
           (((C31240 + C31239) * C50520 + (C31238 + C31237) * C10776) * C38192 +
            ((C28839 + C28840) * C50520 + (C28841 + C28842) * C10776) * C50856 +
            ((C28838 + C28837) * C50520 + (C28836 + C28835) * C10776) *
                C50865) *
               C50648) *
              C278 +
          ((((C29515 + C29516) * C10776 + (C29517 + C29518) * C50520) * C50865 +
            ((C30049 + C30050) * C10776 + (C30051 + C30052) * C50520) * C50856 +
            ((C48312 + C48313) * C10776 + (C48314 + C48315) * C50520) *
                C38192) *
               C50648 -
           (C48318 * C38192 +
            ((C29518 + C29517) * C50520 + (C29516 + C29515) * C10776) * C50856 +
            ((C22720 * C302 + C50696 * C317 + C22719 * C299 + C22714 * C316) *
                 C50520 +
             (C22720 * C287 + C50696 * C301 + C22719 * C286 + C22714 * C300) *
                 C10776) *
                C50865) *
               C1676) *
              C279 +
          ((((C22719 * C287 + C22714 * C301 + C22720 * C1104 + C50696 * C1112) *
                 C10776 +
             (C22719 * C302 + C22714 * C317 + C22720 * C1111 + C50696 * C1116) *
                 C50520) *
                C50865 +
            ((C30707 + C30708) * C10776 + (C30709 + C30710) * C50520) * C50856 +
            ((C48813 + C48814) * C10776 + (C48815 + C48816) * C50520) *
                C38192) *
               C1676 -
           (((C22720 * C12162 + C50696 * C12164 + C22719 * C10211 +
              C22714 * C10214) *
                 C50520 +
             (C22720 * C12161 + C50696 * C12163 + C22719 * C10208 +
              C22714 * C10212) *
                 C10776) *
                C38192 +
            ((C48816 + C48815) * C50520 + (C48814 + C48813) * C10776) * C50856 +
            ((C30710 + C30709) * C50520 + (C30708 + C30707) * C10776) *
                C50865) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C50816 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50620 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C50816) *
              C50859 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50584 * C50816 -
           ((C7956 * C1105 + C7951 * C1113 + C7955 * C308 + C7950 * C320 +
             C7954 * C293 + C7949 * C313) *
                C50525 +
            (C7956 * C1101 + C7951 * C1106 + C7955 * C290 + C7950 * C307 +
             C7954 * C283 + C7949 * C294) *
                C49742 +
            (C8541 + C8540 + C8539) * C50799 +
            (C8538 + C8537 + C8536) * C49749) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C50816 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50620) *
              C50858 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50620 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C50816) *
              C50859 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50584 * C50816 -
           ((C117 * C640 + C50680 * C642) * C109 +
            (C117 * C639 + C50680 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50584 * C50816 -
           ((C6047 * C50525 + C6046 * C49742 + C6451 * C50799 +
             C6450 * C49749) *
                C15335 +
            (C923 * C50525 + C922 * C49742 + C6045 * C50799 + C6044 * C49749) *
                C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50584 * C50620) *
              C50858 +
          (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                C15333 +
            (C922 * C49749 + C923 * C50799 + C924 * C49742 + C925 * C50525) *
                C15334 +
            (C6046 * C49749 + C6047 * C50799 + C6048 * C49742 +
             C6049 * C50525) *
                C15335) *
               C50584 * C50620 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50584 * C50816) *
              C50859 +
          (((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
                C15333 +
            (C528 * C49749 + C527 * C50799 + C526 * C49742 + C525 * C50525) *
                C15334 +
            (C533 * C49749 + C534 * C50799 + C535 * C49742 + C536 * C50525) *
                C15335) *
               C50584 * C50816 -
           (((C117 * C1219 + C50680 * C1227) * C50525 +
             (C117 * C1215 + C50680 * C1220) * C49742 + C6049 * C50799 +
             C6048 * C49749) *
                C15335 +
            (C927 * C50525 + C926 * C49742 + C925 * C50799 + C924 * C49749) *
                C15334 +
            (C348 * C50525 + C349 * C49742 + C350 * C50799 + C351 * C49749) *
                C15333) *
               C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C49749 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50799 +
             (C7996 + C7997 + C7998) * C49742 +
             (C7999 + C8000 + C8001) * C50525) *
                C50710 * C50817 -
            ((C8366 + C8367 + C8368) * C50525 +
             (C8369 + C8370 + C8371) * C49742 +
             (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
              C7954 * C476 + C7949 * C493) *
                 C50799 +
             (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
              C7954 * C463 + C7949 * C477) *
                 C49749) *
                C50710 * C50648) *
               C50816 +
           (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
              C7956 * C4179 + C7951 * C4185) *
                 C49749 +
             (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
              C7956 * C4184 + C7951 * C4188) *
                 C50799 +
             (C8912 + C8913 + C8914) * C49742 +
             (C8915 + C8916 + C8917) * C50525) *
                C50710 * C50648 -
            ((C8184 + C8185 + C8186) * C50525 +
             (C8187 + C8188 + C8189) * C49742 +
             (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50799 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C49749) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C8371 + C8370 + C8369) * C49749 +
             (C8368 + C8367 + C8366) * C50799 +
             (C8700 + C8701 + C8702) * C49742 +
             (C8703 + C8704 + C8705) * C50525) *
                C50710 * C50648 -
            ((C8002 + C8003 + C8004) * C50525 +
             (C8005 + C8006 + C8007) * C49742 +
             (C8001 + C8000 + C7999) * C50799 +
             (C7998 + C7997 + C7996) * C49749) *
                C50710 * C50817) *
               C50816 +
           (((C8189 + C8188 + C8187) * C49749 +
             (C8186 + C8185 + C8184) * C50799 +
             (C8536 + C8537 + C8538) * C49742 +
             (C8539 + C8540 + C8541) * C50525) *
                C50710 * C50817 -
            ((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50525 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C49742 +
             (C8917 + C8916 + C8915) * C50799 +
             (C8914 + C8913 + C8912) * C49749) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C118 +
             (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50710 * C50817 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
             (C117 * C463 + C50680 * C477) * C118) *
                C50710 * C50648) *
               C50816 +
           (((C117 * C889 + C50680 * C894) * C118 +
             (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50710 * C50648 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
             (C117 * C286 + C50680 * C300) * C118) *
                C50710 * C50817) *
               C50620) *
              C281 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50710 * C50648 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50710 * C50817) *
               C50816 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50710 * C50817 -
            ((C117 * C902 + C50680 * C908) * C109 +
             (C117 * C893 + C50680 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C49749 +
              (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
              C172 * C50525) *
                 C15333 +
             (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
                C50817 -
            ((C15643 + C15644 + C15645 + C15646) * C15335 +
             (C15642 + C15641 + C15640 + C15639) * C15334 +
             (C15638 + C15637 + C15636 + C15635) * C15333) *
                C50648) *
               C50816 +
           (((C16165 + C16166 + C16167 + C16168) * C15333 +
             (C16169 + C16170 + C16171 + C16172) * C15334 +
             ((C117 * C4581 + C50680 * C4587) * C49749 +
              (C117 * C4586 + C50680 * C4590) * C50799 + C16185 * C49742 +
              C16186 * C50525) *
                 C15335) *
                C50648 -
            ((C16172 + C16171 + C16170 + C16169) * C15335 +
             (C16168 + C16167 + C16166 + C16165) * C15334 +
             (C352 * C50525 + C353 * C49742 +
              (C117 * C299 + C50680 * C316) * C50799 +
              (C117 * C286 + C50680 * C300) * C49749) *
                 C15333) *
                C50817) *
               C50620) *
              C281 +
          ((((C15651 + C15652 + C15653 + C15654) * C15333 +
             (C15655 + C15656 + C15657 + C15658) * C15334 +
             (C15659 + C15660 + C15661 + C15662) * C15335) *
                C50648 -
            (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
             (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                 C15333) *
                C50817) *
               C50816 +
           (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                 C15333 +
             (C16177 + C16178 + C16179 + C16180) * C15334 +
             (C16181 + C16182 + C16183 + C16184) * C15335) *
                C50817 -
            (((C117 * C4582 + C50680 * C4588) * C50525 +
              (C117 * C4579 + C50680 * C4583) * C49742 + C16186 * C50799 +
              C16185 * C49749) *
                 C15335 +
             (C16184 + C16183 + C16182 + C16181) * C15334 +
             (C16180 + C16179 + C16178 + C16177) * C15333) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50680 * C129) * C118 +
               (C117 * C130 + C50680 * C143) * C106 + C171 * C119 +
               C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
               C176 * C109) *
                  C50710 * C50584 * C50568 * C113 -
              (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
               C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                  C50710 * C50584 * C50568 * C114 +
              (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
               C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                  C50710 * C50584 * C50568 * C115 -
              ((C117 * C141 + C50680 * C149) * C109 +
               (C117 * C128 + C50680 * C142) * C121 + C180 * C108 +
               C179 * C120 + C177 * C107 + C178 * C119 + C176 * C106 +
               C175 * C118) *
                  C50710 * C50584 * C50568 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50680 * C129) * C118 +
                (C117 * C130 + C50680 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50710 * C50584 * C278 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50680 * C316) * C106 +
                (C117 * C286 + C50680 * C300) * C118) *
                   C50710 * C50584 * C279 +
               ((C117 * C287 + C50680 * C301) * C118 +
                (C117 * C302 + C50680 * C317) * C106 + C354 * C119 +
                C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
                C359 * C109) *
                   C50710 * C50584 * C280) *
                  C281 +
              ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
                C349 * C120 + C348 * C108 +
                (C117 * C291 + C50680 * C309) * C121 +
                (C117 * C310 + C50680 * C321) * C109) *
                   C50710 * C50584 * C279 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50710 * C50584 * C278 -
               ((C117 * C311 + C50680 * C322) * C109 +
                (C117 * C292 + C50680 * C312) * C121 + C359 * C108 +
                C358 * C120 + C357 * C107 + C356 * C119 + C355 * C106 +
                C354 * C118) *
                   C50710 * C50584 * C280) *
                  C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C458 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C459) *
              C50568 * C281 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + (C117 * C468 + C50680 * C486) * C121 +
            (C117 * C487 + C50680 * C498) * C109) *
               C50710 * C458 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C457 -
           ((C117 * C488 + C50680 * C499) * C109 +
            (C117 * C469 + C50680 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C50568 * C113 -
          ((C8002 + C8003 + C8004) * C50525 + (C8005 + C8006 + C8007) * C49742 +
           (C8001 + C8000 + C7999) * C50799 +
           (C7998 + C7997 + C7996) * C49749) *
              C50710 * C50584 * C50568 * C114 +
          ((C8007 + C8006 + C8005) * C49749 + (C8004 + C8003 + C8002) * C50799 +
           (C8008 + C8009 + C8010) * C49742 +
           (C8011 + C8012 + C8013) * C50525) *
              C50710 * C50584 * C50568 * C115 -
          ((C7956 * C311 + C7951 * C322 + C7955 * C310 + C7950 * C321 +
            C7954 * C137 + C7949 * C147) *
               C50525 +
           (C7956 * C292 + C7951 * C312 + C7955 * C291 + C7950 * C309 +
            C7954 * C126 + C7949 * C138) *
               C49742 +
           (C8013 + C8012 + C8011) * C50799 +
           (C8010 + C8009 + C8008) * C49749) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C278 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C279 +
           ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50584 * C280) *
              C281 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C7954 * C284 + C7949 * C296 + C7955 * C289 + C7950 * C305 +
             C7956 * C1102 + C7951 * C1108) *
                C49742 +
            (C7954 * C295 + C7949 * C314 + C7955 * C306 + C7950 * C319 +
             C7956 * C1107 + C7951 * C1114) *
                C50525) *
               C50710 * C50584 * C279 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C278 -
           ((C7956 * C3524 + C7951 * C3530 + C7955 * C1107 + C7950 * C1114 +
             C7954 * C306 + C7949 * C319) *
                C50525 +
            (C7956 * C3521 + C7951 * C3525 + C7955 * C1102 + C7950 * C1108 +
             C7954 * C289 + C7949 * C305) *
                C49742 +
            (C8195 + C8194 + C8193) * C50799 +
            (C8192 + C8191 + C8190) * C49749) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C457 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C458 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C459) *
              C50568 * C281 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C7954 * C461 + C7949 * C473 + C7955 * C891 + C7950 * C898 +
             C7956 * C1563 + C7951 * C1569) *
                C49742 +
            (C7954 * C472 + C7949 * C491 + C7955 * C899 + C7950 * C906 +
             C7956 * C1568 + C7951 * C1575) *
                C50525) *
               C50710 * C458 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C457 -
           ((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
             C7954 * C483 + C7949 * C496) *
                C50525 +
            (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
             C7954 * C466 + C7949 * C482) *
                C49742 +
            (C8377 + C8376 + C8375) * C50799 +
            (C8374 + C8373 + C8372) * C49749) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C49749 +
            (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
            C172 * C50525) *
               C15333 +
           (C5518 * C49749 + C5519 * C50799 + C530 * C49742 + C529 * C50525) *
               C15334 +
           (C5521 * C49749 + C5520 * C50799 + C531 * C49742 + C532 * C50525) *
               C15335) *
              C50584 * C50568 * C113 -
          ((C534 * C50525 + C533 * C49742 + C532 * C50799 + C531 * C49749) *
               C15335 +
           (C527 * C50525 + C528 * C49742 + C529 * C50799 + C530 * C49749) *
               C15334 +
           (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
               C15333) *
              C50584 * C50568 * C114 +
          ((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
               C15333 +
           (C528 * C49749 + C527 * C50799 + C526 * C49742 + C525 * C50525) *
               C15334 +
           (C533 * C49749 + C534 * C50799 + C535 * C49742 + C536 * C50525) *
               C15335) *
              C50584 * C50568 * C115 -
          (((C117 * C488 + C50680 * C499) * C50525 +
            (C117 * C469 + C50680 * C489) * C49742 + C536 * C50799 +
            C535 * C49749) *
               C15335 +
           (C759 * C50525 + C758 * C49742 + C525 * C50799 + C526 * C49749) *
               C15334 +
           (C177 * C50525 + C178 * C49742 + C176 * C50799 + C175 * C49749) *
               C15333) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C5518 * C49749 + C5519 * C50799 + C530 * C49742 + C529 * C50525) *
                C15334 +
            (C5521 * C49749 + C5520 * C50799 + C531 * C49742 + C532 * C50525) *
                C15335) *
               C50584 * C278 -
           ((C6047 * C50525 + C6046 * C49742 + C6451 * C50799 +
             C6450 * C49749) *
                C15335 +
            (C923 * C50525 + C922 * C49742 + C6045 * C50799 + C6044 * C49749) *
                C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50584 * C279 +
           (((C117 * C287 + C50680 * C301) * C49749 +
             (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
             C355 * C50525) *
                C15333 +
            (C6948 * C49749 + C6949 * C50799 + C5332 * C49742 +
             C5333 * C50525) *
                C15334 +
            ((C117 * C3681 + C50680 * C3687) * C49749 +
             (C117 * C3686 + C50680 * C3690) * C50799 + C15487 * C49742 +
             C15488 * C50525) *
                C15335) *
               C50584 * C280) *
              C281 +
          (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                C15333 +
            (C922 * C49749 + C923 * C50799 + C924 * C49742 + C925 * C50525) *
                C15334 +
            (C6046 * C49749 + C6047 * C50799 + C6048 * C49742 +
             C6049 * C50525) *
                C15335) *
               C50584 * C279 -
           ((C534 * C50525 + C533 * C49742 + C532 * C50799 + C531 * C49749) *
                C15335 +
            (C527 * C50525 + C528 * C49742 + C529 * C50799 + C530 * C49749) *
                C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50584 * C278 -
           (((C117 * C3682 + C50680 * C3688) * C50525 +
             (C117 * C3679 + C50680 * C3683) * C49742 + C15488 * C50799 +
             C15487 * C49749) *
                C15335 +
            (C5335 * C50525 + C5334 * C49742 + C5333 * C50799 +
             C5332 * C49749) *
                C15334 +
            (C357 * C50525 + C356 * C49742 + C355 * C50799 + C354 * C49749) *
                C15333) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C457 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C458 +
           (C15669 * C15333 + (C15646 + C15645 + C15644 + C15643) * C15334 +
            ((C117 * C7343 + C50680 * C7349) * C49749 +
             (C117 * C7348 + C50680 * C7352) * C50799 + C15664 * C49742 +
             C15665 * C50525) *
                C15335) *
               C459) *
              C50568 * C281 +
          (((C15651 + C15652 + C15653 + C15654) * C15333 +
            (C15655 + C15656 + C15657 + C15658) * C15334 +
            (C15659 + C15660 + C15661 + C15662) * C15335) *
               C458 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C457 -
           (((C117 * C7344 + C50680 * C7350) * C50525 +
             (C117 * C7341 + C50680 * C7345) * C49742 + C15665 * C50799 +
             C15664 * C49749) *
                C15335 +
            (C15662 + C15661 + C15660 + C15659) * C15334 + C15670 * C15333) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50817 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50648 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50817) *
              C50568 * C50859 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50817 -
           ((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50525 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C49742 +
            (C8705 + C8704 + C8703) * C50799 +
            (C8702 + C8701 + C8700) * C49749) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50817 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50568 * C50858 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50648 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50817) *
              C50568 * C50859 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50817 -
           ((C117 * C750 + C50680 * C752) * C109 +
            (C117 * C749 + C50680 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50817 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50648) *
              C50568 * C50858 +
          (((C15651 + C15652 + C15653 + C15654) * C15333 +
            (C15655 + C15656 + C15657 + C15658) * C15334 +
            (C15659 + C15660 + C15661 + C15662) * C15335) *
               C50648 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50817) *
              C50568 * C50859 +
          (((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
                C15333 +
            (C15963 + C15964 + C15965 + C15966) * C15334 +
            (C15967 + C15968 + C15969 + C15970) * C15335) *
               C50817 -
           (((C117 * C1850 + C50680 * C1858) * C50525 +
             (C117 * C1846 + C50680 * C1851) * C49742 + C5525 * C50799 +
             C5524 * C49749) *
                C15335 +
            (C15970 + C15969 + C15968 + C15967) * C15334 +
            (C15966 + C15965 + C15964 + C15963) * C15333) *
               C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C279 +
           ((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50584 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50680 * C309) * C121 +
            (C117 * C310 + C50680 * C321) * C109) *
               C50710 * C50584 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C278 -
           ((C117 * C311 + C50680 * C322) * C109 +
            (C117 * C292 + C50680 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C50584 * C50568 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50710 * C50584 * C50568 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50710 * C50584 * C50568 * C115 -
          ((C117 * C141 + C50680 * C149) * C109 +
           (C117 * C128 + C50680 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C50568 * C113 -
          ((C8002 + C8003 + C8004) * C50525 + (C8005 + C8006 + C8007) * C49742 +
           (C8001 + C8000 + C7999) * C50799 +
           (C7998 + C7997 + C7996) * C49749) *
              C50710 * C50584 * C50568 * C114 +
          ((C8007 + C8006 + C8005) * C49749 + (C8004 + C8003 + C8002) * C50799 +
           (C8008 + C8009 + C8010) * C49742 +
           (C8011 + C8012 + C8013) * C50525) *
              C50710 * C50584 * C50568 * C115 -
          ((C7956 * C311 + C7951 * C322 + C7955 * C310 + C7950 * C321 +
            C7954 * C137 + C7949 * C147) *
               C50525 +
           (C7956 * C292 + C7951 * C312 + C7955 * C291 + C7950 * C309 +
            C7954 * C126 + C7949 * C138) *
               C49742 +
           (C8013 + C8012 + C8011) * C50799 +
           (C8010 + C8009 + C8008) * C49749) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C278 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C279 +
           ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50584 * C280) *
              C281 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C7954 * C284 + C7949 * C296 + C7955 * C289 + C7950 * C305 +
             C7956 * C1102 + C7951 * C1108) *
                C49742 +
            (C7954 * C295 + C7949 * C314 + C7955 * C306 + C7950 * C319 +
             C7956 * C1107 + C7951 * C1114) *
                C50525) *
               C50710 * C50584 * C279 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C278 -
           ((C7956 * C3524 + C7951 * C3530 + C7955 * C1107 + C7950 * C1114 +
             C7954 * C306 + C7949 * C319) *
                C50525 +
            (C7956 * C3521 + C7951 * C3525 + C7955 * C1102 + C7950 * C1108 +
             C7954 * C289 + C7949 * C305) *
                C49742 +
            (C8195 + C8194 + C8193) * C50799 +
            (C8192 + C8191 + C8190) * C49749) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C49749 +
            (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
            C172 * C50525) *
               C15333 +
           (C5518 * C49749 + C5519 * C50799 + C530 * C49742 + C529 * C50525) *
               C15334 +
           (C5521 * C49749 + C5520 * C50799 + C531 * C49742 + C532 * C50525) *
               C15335) *
              C50584 * C50568 * C113 -
          ((C534 * C50525 + C533 * C49742 + C532 * C50799 + C531 * C49749) *
               C15335 +
           (C527 * C50525 + C528 * C49742 + C529 * C50799 + C530 * C49749) *
               C15334 +
           (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
               C15333) *
              C50584 * C50568 * C114 +
          ((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
               C15333 +
           (C528 * C49749 + C527 * C50799 + C526 * C49742 + C525 * C50525) *
               C15334 +
           (C533 * C49749 + C534 * C50799 + C535 * C49742 + C536 * C50525) *
               C15335) *
              C50584 * C50568 * C115 -
          (((C117 * C488 + C50680 * C499) * C50525 +
            (C117 * C469 + C50680 * C489) * C49742 + C536 * C50799 +
            C535 * C49749) *
               C15335 +
           (C759 * C50525 + C758 * C49742 + C525 * C50799 + C526 * C49749) *
               C15334 +
           (C177 * C50525 + C178 * C49742 + C176 * C50799 + C175 * C49749) *
               C15333) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C5518 * C49749 + C5519 * C50799 + C530 * C49742 + C529 * C50525) *
                C15334 +
            (C5521 * C49749 + C5520 * C50799 + C531 * C49742 + C532 * C50525) *
                C15335) *
               C50584 * C278 -
           ((C6047 * C50525 + C6046 * C49742 + C6451 * C50799 +
             C6450 * C49749) *
                C15335 +
            (C923 * C50525 + C922 * C49742 + C6045 * C50799 + C6044 * C49749) *
                C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50584 * C279 +
           (((C117 * C287 + C50680 * C301) * C49749 +
             (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
             C355 * C50525) *
                C15333 +
            (C6948 * C49749 + C6949 * C50799 + C5332 * C49742 +
             C5333 * C50525) *
                C15334 +
            ((C117 * C3681 + C50680 * C3687) * C49749 +
             (C117 * C3686 + C50680 * C3690) * C50799 + C15487 * C49742 +
             C15488 * C50525) *
                C15335) *
               C50584 * C280) *
              C281 +
          (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                C15333 +
            (C922 * C49749 + C923 * C50799 + C924 * C49742 + C925 * C50525) *
                C15334 +
            (C6046 * C49749 + C6047 * C50799 + C6048 * C49742 +
             C6049 * C50525) *
                C15335) *
               C50584 * C279 -
           ((C534 * C50525 + C533 * C49742 + C532 * C50799 + C531 * C49749) *
                C15335 +
            (C527 * C50525 + C528 * C49742 + C529 * C50799 + C530 * C49749) *
                C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50584 * C278 -
           (((C117 * C3682 + C50680 * C3688) * C50525 +
             (C117 * C3679 + C50680 * C3683) * C49742 + C15488 * C50799 +
             C15487 * C49749) *
                C15335 +
            (C5335 * C50525 + C5334 * C49742 + C5333 * C50799 +
             C5332 * C49749) *
                C15334 +
            (C357 * C50525 + C356 * C49742 + C355 * C50799 + C354 * C49749) *
                C15333) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C50860 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50861 +
           ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50861 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C50860 -
           ((C7956 * C3524 + C7951 * C3530 + C7955 * C1107 + C7950 * C1114 +
             C7954 * C306 + C7949 * C319) *
                C50525 +
            (C7956 * C3521 + C7951 * C3525 + C7955 * C1102 + C7950 * C1108 +
             C7954 * C289 + C7949 * C305) *
                C49742 +
            (C8195 + C8194 + C8193) * C50799 +
            (C8192 + C8191 + C8190) * C49749) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C50860 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50861 +
           ((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50584 * C1331) *
              C50808 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50861 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C50860 -
           ((C117 * C311 + C50680 * C322) * C109 +
            (C117 * C292 + C50680 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50584 * C50860 -
           (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50584 * C50861 +
           (((C117 * C287 + C50680 * C301) * C49749 +
             (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
             C355 * C50525) *
                C15333 +
            (C6948 * C49749 + C6949 * C50799 + C5332 * C49742 +
             C5333 * C50525) *
                C15334 +
            ((C117 * C3681 + C50680 * C3687) * C49749 +
             (C117 * C3686 + C50680 * C3690) * C50799 + C15487 * C49742 +
             C15488 * C50525) *
                C15335) *
               C50584 * C1331) *
              C50808 +
          (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                C15333 +
            (C16177 + C16178 + C16179 + C16180) * C15334 +
            (C16181 + C16182 + C16183 + C16184) * C15335) *
               C50584 * C50861 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50584 * C50860 -
           (((C117 * C3682 + C50680 * C3688) * C50525 +
             (C117 * C3679 + C50680 * C3683) * C49742 + C15488 * C50799 +
             C15487 * C49749) *
                C15335 +
            (C5335 * C50525 + C5334 * C49742 + C5333 * C50799 +
             C5332 * C49749) *
                C15334 +
            (C357 * C50525 + C356 * C49742 + C355 * C50799 + C354 * C49749) *
                C15333) *
               C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50817 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50860 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50648 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50817) *
              C50861 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50817 -
           ((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
             C7954 * C1570 + C7949 * C1576) *
                C50525 +
            (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
             C7954 * C1564 + C7949 * C1571) *
                C49742 +
            (C7956 * C9813 + C7951 * C9816 + C7955 * C4184 + C7950 * C4188 +
             C7954 * C1572 + C7949 * C1577) *
                C50799 +
            (C7956 * C9810 + C7951 * C9814 + C7955 * C4179 + C7950 * C4185 +
             C7954 * C1565 + C7949 * C1573) *
                C49749) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50817 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50860 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50648 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50817) *
              C50861 +
          (((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50817 -
           ((C117 * C1566 + C50680 * C1574) * C109 +
            (C117 * C1562 + C50680 * C1567) * C121 +
            (C117 * C1568 + C50680 * C1575) * C108 +
            (C117 * C1563 + C50680 * C1569) * C120 +
            (C117 * C1570 + C50680 * C1576) * C107 +
            (C117 * C1564 + C50680 * C1571) * C119 +
            (C117 * C1572 + C50680 * C1577) * C106 +
            (C117 * C1565 + C50680 * C1573) * C118) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50817 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50648) *
              C50860 +
          (((C16165 + C16166 + C16167 + C16168) * C15333 +
            (C16169 + C16170 + C16171 + C16172) * C15334 +
            (C16591 + C16592 + C16585 + C16586) * C15335) *
               C50648 -
           (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50817) *
              C50861 +
          ((((C117 * C287 + C50680 * C301) * C49749 +
             (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
             C355 * C50525) *
                C15333 +
            (C17080 + C17081 + C17082 + C17083) * C15334 +
            (C17092 + C17093 + C17088 + C17089) * C15335) *
               C50817 -
           (((C117 * C10209 + C50680 * C10213) * C50525 +
             (C117 * C10207 + C50680 * C10210) * C49742 +
             (C117 * C10211 + C50680 * C10214) * C50799 +
             (C117 * C10208 + C50680 * C10212) * C49749) *
                C15335 +
            (C17089 + C17088 + C17093 + C17092) * C15334 +
            (C17083 + C17082 + C17081 + C17080) * C15333) *
               C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50680 * C129) * C118 +
                (C117 * C130 + C50680 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50710 * C50584 * C1025 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50680 * C316) * C106 +
                (C117 * C286 + C50680 * C300) * C118) *
                   C50710 * C50584 * C50620) *
                  C1027 +
              ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
                C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                   C50710 * C50584 * C50620 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50710 * C50584 * C1025) *
                  C1028 +
              ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
                C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                   C50710 * C50584 * C1025 -
               ((C117 * C640 + C50680 * C642) * C109 +
                (C117 * C639 + C50680 * C641) * C121 + C649 * C108 +
                C648 * C120 + C348 * C107 + C349 * C119 + C350 * C106 +
                C351 * C118) *
                   C50710 * C50584 * C50620) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50680 * C129) * C118 +
               (C117 * C130 + C50680 * C143) * C106 + C171 * C119 +
               C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
               C176 * C109) *
                  C50710 * C50584 * C1096 -
              (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
               C352 * C107 + C353 * C119 +
               (C117 * C299 + C50680 * C316) * C106 +
               (C117 * C286 + C50680 * C300) * C118) *
                  C50710 * C50584 * C1097 +
              ((C117 * C287 + C50680 * C301) * C118 +
               (C117 * C302 + C50680 * C317) * C106 + C354 * C119 +
               C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
               C359 * C109) *
                  C50710 * C50584 * C1098 -
              ((C117 * C1105 + C50680 * C1113) * C109 +
               (C117 * C1101 + C50680 * C1106) * C121 +
               (C117 * C1107 + C50680 * C1114) * C108 +
               (C117 * C1102 + C50680 * C1108) * C120 +
               (C117 * C1109 + C50680 * C1115) * C107 +
               (C117 * C1103 + C50680 * C1110) * C119 +
               (C117 * C1111 + C50680 * C1116) * C106 +
               (C117 * C1104 + C50680 * C1112) * C118) *
                  C50710 * C50584 * C1099) *
             C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C458 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C459) *
              C1025 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C458 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C457 -
           ((C117 * C1219 + C50680 * C1227) * C109 +
            (C117 * C1215 + C50680 * C1220) * C121 +
            (C117 * C1221 + C50680 * C1228) * C108 +
            (C117 * C1216 + C50680 * C1222) * C120 +
            (C117 * C1223 + C50680 * C1229) * C107 +
            (C117 * C1217 + C50680 * C1224) * C119 +
            (C117 * C1225 + C50680 * C1230) * C106 +
            (C117 * C1218 + C50680 * C1226) * C118) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C1025 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50620 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50584 * C1025 -
           ((C7956 * C1105 + C7951 * C1113 + C7955 * C308 + C7950 * C320 +
             C7954 * C293 + C7949 * C313) *
                C50525 +
            (C7956 * C1101 + C7951 * C1106 + C7955 * C290 + C7950 * C307 +
             C7954 * C283 + C7949 * C294) *
                C49742 +
            (C8541 + C8540 + C8539) * C50799 +
            (C8538 + C8537 + C8536) * C49749) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C1096 -
          ((C8184 + C8185 + C8186) * C50525 + (C8187 + C8188 + C8189) * C49742 +
           (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
            C7954 * C299 + C7949 * C316) *
               C50799 +
           (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
            C7954 * C286 + C7949 * C300) *
               C49749) *
              C50710 * C50584 * C1097 +
          ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
            C7956 * C3523 + C7951 * C3529) *
               C49749 +
           (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
            C7956 * C3528 + C7951 * C3532) *
               C50799 +
           (C8190 + C8191 + C8192) * C49742 +
           (C8193 + C8194 + C8195) * C50525) *
              C50710 * C50584 * C1098 -
          ((C7956 * C9163 + C7951 * C9167 + C7955 * C3526 + C7950 * C3531 +
            C7954 * C1109 + C7949 * C1115) *
               C50525 +
           (C7956 * C9161 + C7951 * C9164 + C7955 * C3522 + C7950 * C3527 +
            C7954 * C1103 + C7949 * C1110) *
               C49742 +
           (C7956 * C9165 + C7951 * C9168 + C7955 * C3528 + C7950 * C3532 +
            C7954 * C1111 + C7949 * C1116) *
               C50799 +
           (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 + C7950 * C3529 +
            C7954 * C1104 + C7949 * C1112) *
               C49749) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C457 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C458 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C459) *
              C1025 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C458 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C457 -
           ((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
             C7954 * C1223 + C7949 * C1229) *
                C50525 +
            (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
             C7954 * C1217 + C7949 * C1224) *
                C49742 +
            (C7956 * C9319 + C7951 * C9322 + C7955 * C3686 + C7950 * C3690 +
             C7954 * C1225 + C7949 * C1230) *
                C50799 +
            (C7956 * C9316 + C7951 * C9320 + C7955 * C3681 + C7950 * C3687 +
             C7954 * C1218 + C7949 * C1226) *
                C49749) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50584 * C1025 -
           ((C16172 + C16171 + C16170 + C16169) * C15335 +
            (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                C15333 +
            (C16177 + C16178 + C16179 + C16180) * C15334 +
            (C16181 + C16182 + C16183 + C16184) * C15335) *
               C50584 * C50620 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
                C15333 +
            (C15963 + C15964 + C15965 + C15966) * C15334 +
            (C15967 + C15968 + C15969 + C15970) * C15335) *
               C50584 * C1025 -
           (((C117 * C1219 + C50680 * C1227) * C50525 +
             (C117 * C1215 + C50680 * C1220) * C49742 + C6049 * C50799 +
             C6048 * C49749) *
                C15335 +
            (C927 * C50525 + C926 * C49742 + C925 * C50799 + C924 * C49749) *
                C15334 +
            (C348 * C50525 + C349 * C49742 + C350 * C50799 + C351 * C49749) *
                C15333) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C49749 +
            (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
            C172 * C50525) *
               C15333 +
           (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
              C50584 * C1096 -
          ((C16172 + C16171 + C16170 + C16169) * C15335 +
           (C16168 + C16167 + C16166 + C16165) * C15334 +
           (C352 * C50525 + C353 * C49742 +
            (C117 * C299 + C50680 * C316) * C50799 +
            (C117 * C286 + C50680 * C300) * C49749) *
               C15333) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C49749 +
            (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
            C355 * C50525) *
               C15333 +
           (C6948 * C49749 + C6949 * C50799 + C5332 * C49742 + C5333 * C50525) *
               C15334 +
           ((C117 * C3681 + C50680 * C3687) * C49749 +
            (C117 * C3686 + C50680 * C3690) * C50799 + C15487 * C49742 +
            C15488 * C50525) *
               C15335) *
              C50584 * C1098 -
          (((C117 * C9317 + C50680 * C9321) * C50525 +
            (C117 * C9315 + C50680 * C9318) * C49742 +
            (C117 * C9319 + C50680 * C9322) * C50799 +
            (C117 * C9316 + C50680 * C9320) * C49749) *
               C15335 +
           ((C117 * C4182 + C50680 * C4187) * C50525 +
            (C117 * C4178 + C50680 * C4183) * C49742 +
            (C117 * C4184 + C50680 * C4188) * C50799 +
            (C117 * C4179 + C50680 * C4185) * C49749) *
               C15334 +
           ((C117 * C1109 + C50680 * C1115) * C50525 +
            (C117 * C1103 + C50680 * C1110) * C49742 +
            (C117 * C1111 + C50680 * C1116) * C50799 +
            (C117 * C1104 + C50680 * C1112) * C49749) *
               C15333) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C457 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C458 +
           (C15669 * C15333 + (C15646 + C15645 + C15644 + C15643) * C15334 +
            ((C117 * C7343 + C50680 * C7349) * C49749 +
             (C117 * C7348 + C50680 * C7352) * C50799 + C15664 * C49742 +
             C15665 * C50525) *
                C15335) *
               C459) *
              C1025 +
          (((C16165 + C16166 + C16167 + C16168) * C15333 +
            (C16169 + C16170 + C16171 + C16172) * C15334 +
            (C16591 + C16592 + C16585 + C16586) * C15335) *
               C458 -
           (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C457 -
           (((C117 * C16577 + C50680 * C16579) * C50525 +
             (C117 * C16576 + C50680 * C16578) * C49742 +
             (C117 * C14726 + C50680 * C14730) * C50799 +
             (C117 * C14724 + C50680 * C14728) * C49749) *
                C15335 +
            (C16586 + C16585 + C16592 + C16591) * C15334 + C16593 * C15333) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C49749 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50799 +
             (C7996 + C7997 + C7998) * C49742 +
             (C7999 + C8000 + C8001) * C50525) *
                C50710 * C50817 -
            ((C8366 + C8367 + C8368) * C50525 +
             (C8369 + C8370 + C8371) * C49742 +
             (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
              C7954 * C476 + C7949 * C493) *
                 C50799 +
             (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
              C7954 * C463 + C7949 * C477) *
                 C49749) *
                C50710 * C50648) *
               C1025 +
           (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
              C7956 * C4179 + C7951 * C4185) *
                 C49749 +
             (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
              C7956 * C4184 + C7951 * C4188) *
                 C50799 +
             (C8912 + C8913 + C8914) * C49742 +
             (C8915 + C8916 + C8917) * C50525) *
                C50710 * C50648 -
            ((C8184 + C8185 + C8186) * C50525 +
             (C8187 + C8188 + C8189) * C49742 +
             (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50799 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C49749) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C8371 + C8370 + C8369) * C49749 +
             (C8368 + C8367 + C8366) * C50799 +
             (C8700 + C8701 + C8702) * C49742 +
             (C8703 + C8704 + C8705) * C50525) *
                C50710 * C50648 -
            ((C8002 + C8003 + C8004) * C50525 +
             (C8005 + C8006 + C8007) * C49742 +
             (C8001 + C8000 + C7999) * C50799 +
             (C7998 + C7997 + C7996) * C49749) *
                C50710 * C50817) *
               C1025 +
           (((C8189 + C8188 + C8187) * C49749 +
             (C8186 + C8185 + C8184) * C50799 +
             (C8536 + C8537 + C8538) * C49742 +
             (C8539 + C8540 + C8541) * C50525) *
                C50710 * C50817 -
            ((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50525 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C49742 +
             (C8917 + C8916 + C8915) * C50799 +
             (C8914 + C8913 + C8912) * C49749) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C118 +
             (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50710 * C50817 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
             (C117 * C463 + C50680 * C477) * C118) *
                C50710 * C50648) *
               C1025 +
           (((C117 * C889 + C50680 * C894) * C118 +
             (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50710 * C50648 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
             (C117 * C286 + C50680 * C300) * C118) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50710 * C50648 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50710 * C50817) *
               C1025 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50710 * C50817 -
            ((C117 * C902 + C50680 * C908) * C109 +
             (C117 * C893 + C50680 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C49749 +
              (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
              C172 * C50525) *
                 C15333 +
             (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
                C50817 -
            ((C15643 + C15644 + C15645 + C15646) * C15335 +
             (C15642 + C15641 + C15640 + C15639) * C15334 +
             (C15638 + C15637 + C15636 + C15635) * C15333) *
                C50648) *
               C1025 +
           (((C16165 + C16166 + C16167 + C16168) * C15333 +
             (C16169 + C16170 + C16171 + C16172) * C15334 +
             (C16591 + C16592 + C16585 + C16586) * C15335) *
                C50648 -
            (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
             (C352 * C50525 + C353 * C49742 +
              (C117 * C299 + C50680 * C316) * C50799 +
              (C117 * C286 + C50680 * C300) * C49749) *
                 C15333) *
                C50817) *
               C50620) *
              C50808 +
          ((((C15651 + C15652 + C15653 + C15654) * C15333 +
             (C15655 + C15656 + C15657 + C15658) * C15334 +
             (C15659 + C15660 + C15661 + C15662) * C15335) *
                C50648 -
            (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
             (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                 C15333) *
                C50817) *
               C1025 +
           (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                 C15333 +
             (C16177 + C16178 + C16179 + C16180) * C15334 +
             (C16181 + C16182 + C16183 + C16184) * C15335) *
                C50817 -
            (((C117 * C4582 + C50680 * C4588) * C50525 +
              (C117 * C4579 + C50680 * C4583) * C49742 + C16186 * C50799 +
              C16185 * C49749) *
                 C15335 +
             (C16184 + C16183 + C16182 + C16181) * C15334 +
             (C16180 + C16179 + C16178 + C16177) * C15333) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C50584 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
           (C117 * C286 + C50680 * C300) * C118) *
              C50710 * C50584 * C1097 +
          ((C117 * C287 + C50680 * C301) * C118 +
           (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50710 * C50584 * C1098 -
          ((C117 * C1105 + C50680 * C1113) * C109 +
           (C117 * C1101 + C50680 * C1106) * C121 +
           (C117 * C1107 + C50680 * C1114) * C108 +
           (C117 * C1102 + C50680 * C1108) * C120 +
           (C117 * C1109 + C50680 * C1115) * C107 +
           (C117 * C1103 + C50680 * C1110) * C119 +
           (C117 * C1111 + C50680 * C1116) * C106 +
           (C117 * C1104 + C50680 * C1112) * C118) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50620) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50620 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50584 * C1025 -
           ((C117 * C640 + C50680 * C642) * C109 +
            (C117 * C639 + C50680 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C1025 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50620 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50584 * C1025 -
           ((C7956 * C1105 + C7951 * C1113 + C7955 * C308 + C7950 * C320 +
             C7954 * C293 + C7949 * C313) *
                C50525 +
            (C7956 * C1101 + C7951 * C1106 + C7955 * C290 + C7950 * C307 +
             C7954 * C283 + C7949 * C294) *
                C49742 +
            (C8541 + C8540 + C8539) * C50799 +
            (C8538 + C8537 + C8536) * C49749) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C1096 -
          ((C8184 + C8185 + C8186) * C50525 + (C8187 + C8188 + C8189) * C49742 +
           (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
            C7954 * C299 + C7949 * C316) *
               C50799 +
           (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
            C7954 * C286 + C7949 * C300) *
               C49749) *
              C50710 * C50584 * C1097 +
          ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
            C7956 * C3523 + C7951 * C3529) *
               C49749 +
           (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
            C7956 * C3528 + C7951 * C3532) *
               C50799 +
           (C8190 + C8191 + C8192) * C49742 +
           (C8193 + C8194 + C8195) * C50525) *
              C50710 * C50584 * C1098 -
          ((C7956 * C9163 + C7951 * C9167 + C7955 * C3526 + C7950 * C3531 +
            C7954 * C1109 + C7949 * C1115) *
               C50525 +
           (C7956 * C9161 + C7951 * C9164 + C7955 * C3522 + C7950 * C3527 +
            C7954 * C1103 + C7949 * C1110) *
               C49742 +
           (C7956 * C9165 + C7951 * C9168 + C7955 * C3528 + C7950 * C3532 +
            C7954 * C1111 + C7949 * C1116) *
               C50799 +
           (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 + C7950 * C3529 +
            C7954 * C1104 + C7949 * C1112) *
               C49749) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50584 * C1025 -
           ((C16172 + C16171 + C16170 + C16169) * C15335 +
            (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                C15333 +
            (C16177 + C16178 + C16179 + C16180) * C15334 +
            (C16181 + C16182 + C16183 + C16184) * C15335) *
               C50584 * C50620 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
                C15333 +
            (C15963 + C15964 + C15965 + C15966) * C15334 +
            (C15967 + C15968 + C15969 + C15970) * C15335) *
               C50584 * C1025 -
           (((C117 * C1219 + C50680 * C1227) * C50525 +
             (C117 * C1215 + C50680 * C1220) * C49742 + C6049 * C50799 +
             C6048 * C49749) *
                C15335 +
            (C927 * C50525 + C926 * C49742 + C925 * C50799 + C924 * C49749) *
                C15334 +
            (C348 * C50525 + C349 * C49742 + C350 * C50799 + C351 * C49749) *
                C15333) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C49749 +
            (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
            C172 * C50525) *
               C15333 +
           (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
              C50584 * C1096 -
          ((C16172 + C16171 + C16170 + C16169) * C15335 +
           (C16168 + C16167 + C16166 + C16165) * C15334 +
           (C352 * C50525 + C353 * C49742 +
            (C117 * C299 + C50680 * C316) * C50799 +
            (C117 * C286 + C50680 * C300) * C49749) *
               C15333) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C49749 +
            (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
            C355 * C50525) *
               C15333 +
           (C6948 * C49749 + C6949 * C50799 + C5332 * C49742 + C5333 * C50525) *
               C15334 +
           ((C117 * C3681 + C50680 * C3687) * C49749 +
            (C117 * C3686 + C50680 * C3690) * C50799 + C15487 * C49742 +
            C15488 * C50525) *
               C15335) *
              C50584 * C1098 -
          (((C117 * C9317 + C50680 * C9321) * C50525 +
            (C117 * C9315 + C50680 * C9318) * C49742 +
            (C117 * C9319 + C50680 * C9322) * C50799 +
            (C117 * C9316 + C50680 * C9320) * C49749) *
               C15335 +
           ((C117 * C4182 + C50680 * C4187) * C50525 +
            (C117 * C4178 + C50680 * C4183) * C49742 +
            (C117 * C4184 + C50680 * C4188) * C50799 +
            (C117 * C4179 + C50680 * C4185) * C49749) *
               C15334 +
           ((C117 * C1109 + C50680 * C1115) * C50525 +
            (C117 * C1103 + C50680 * C1110) * C49742 +
            (C117 * C1111 + C50680 * C1116) * C50799 +
            (C117 * C1104 + C50680 * C1112) * C49749) *
               C15333) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C49749 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50799 +
             (C7996 + C7997 + C7998) * C49742 +
             (C7999 + C8000 + C8001) * C50525) *
                C50710 * C1676 -
            ((C8366 + C8367 + C8368) * C50525 +
             (C8369 + C8370 + C8371) * C49742 +
             (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
              C7954 * C476 + C7949 * C493) *
                 C50799 +
             (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
              C7954 * C463 + C7949 * C477) *
                 C49749) *
                C50710 * C50648) *
               C50816 +
           (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
              C7956 * C4179 + C7951 * C4185) *
                 C49749 +
             (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
              C7956 * C4184 + C7951 * C4188) *
                 C50799 +
             (C8912 + C8913 + C8914) * C49742 +
             (C8915 + C8916 + C8917) * C50525) *
                C50710 * C50648 -
            ((C8184 + C8185 + C8186) * C50525 +
             (C8187 + C8188 + C8189) * C49742 +
             (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50799 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C49749) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C8371 + C8370 + C8369) * C49749 +
             (C8368 + C8367 + C8366) * C50799 +
             (C8700 + C8701 + C8702) * C49742 +
             (C8703 + C8704 + C8705) * C50525) *
                C50710 * C50648 -
            ((C8002 + C8003 + C8004) * C50525 +
             (C8005 + C8006 + C8007) * C49742 +
             (C8001 + C8000 + C7999) * C50799 +
             (C7998 + C7997 + C7996) * C49749) *
                C50710 * C1676) *
               C50816 +
           (((C8189 + C8188 + C8187) * C49749 +
             (C8186 + C8185 + C8184) * C50799 +
             (C8536 + C8537 + C8538) * C49742 +
             (C8539 + C8540 + C8541) * C50525) *
                C50710 * C1676 -
            ((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50525 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C49742 +
             (C8917 + C8916 + C8915) * C50799 +
             (C8914 + C8913 + C8912) * C49749) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C118 +
             (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50710 * C1676 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
             (C117 * C463 + C50680 * C477) * C118) *
                C50710 * C50648) *
               C50816 +
           (((C117 * C889 + C50680 * C894) * C118 +
             (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50710 * C50648 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
             (C117 * C286 + C50680 * C300) * C118) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50710 * C50648 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50710 * C1676) *
               C50816 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50710 * C1676 -
            ((C117 * C902 + C50680 * C908) * C109 +
             (C117 * C893 + C50680 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C49749 +
              (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
              C172 * C50525) *
                 C15333 +
             (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
                C1676 -
            (C17502 * C15335 + (C15642 + C15641 + C15640 + C15639) * C15334 +
             (C15638 + C15637 + C15636 + C15635) * C15333) *
                C50648) *
               C50816 +
           (((C16165 + C16166 + C16167 + C16168) * C15333 +
             (C16169 + C16170 + C16171 + C16172) * C15334 +
             (C16591 + C16592 + C16585 + C16586) * C15335) *
                C50648 -
            (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
             (C352 * C50525 + C353 * C49742 +
              (C117 * C299 + C50680 * C316) * C50799 +
              (C117 * C286 + C50680 * C300) * C49749) *
                 C15333) *
                C1676) *
               C50620) *
              C50808 +
          ((((C15651 + C15652 + C15653 + C15654) * C15333 +
             (C15655 + C15656 + C15657 + C15658) * C15334 +
             (C15659 + C15660 + C15661 + C15662) * C15335) *
                C50648 -
            (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
             (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                 C15333) *
                C1676) *
               C50816 +
           (((C353 * C49749 + C352 * C50799 + C351 * C49742 + C350 * C50525) *
                 C15333 +
             (C16177 + C16178 + C16179 + C16180) * C15334 +
             (C16181 + C16182 + C16183 + C16184) * C15335) *
                C1676 -
            (((C117 * C4582 + C50680 * C4588) * C50525 +
              (C117 * C4579 + C50680 * C4583) * C49742 + C16186 * C50799 +
              C16185 * C49749) *
                 C15335 +
             (C16184 + C16183 + C16182 + C16181) * C15334 +
             (C16180 + C16179 + C16178 + C16177) * C15333) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50862 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50863 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C2092) *
              C50816 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50863 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50862 -
           ((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
             C7954 * C1223 + C7949 * C1229) *
                C50525 +
            (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
             C7954 * C1217 + C7949 * C1224) *
                C49742 +
            (C7956 * C9319 + C7951 * C9322 + C7955 * C3686 + C7950 * C3690 +
             C7954 * C1225 + C7949 * C1230) *
                C50799 +
            (C7956 * C9316 + C7951 * C9320 + C7955 * C3681 + C7950 * C3687 +
             C7954 * C1218 + C7949 * C1226) *
                C49749) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50862 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50863 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C2092) *
              C50816 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50863 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50862 -
           ((C117 * C1219 + C50680 * C1227) * C109 +
            (C117 * C1215 + C50680 * C1220) * C121 +
            (C117 * C1221 + C50680 * C1228) * C108 +
            (C117 * C1216 + C50680 * C1222) * C120 +
            (C117 * C1223 + C50680 * C1229) * C107 +
            (C117 * C1217 + C50680 * C1224) * C119 +
            (C117 * C1225 + C50680 * C1230) * C106 +
            (C117 * C1218 + C50680 * C1226) * C118) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50862 -
           (C17502 * C15335 + (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50863 +
           (C15669 * C15333 + (C15646 + C15645 + C15644 + C15643) * C15334 +
            (C17503 + C17504 + C17497 + C17498) * C15335) *
               C2092) *
              C50816 +
          (((C16165 + C16166 + C16167 + C16168) * C15333 +
            (C16169 + C16170 + C16171 + C16172) * C15334 +
            (C16591 + C16592 + C16585 + C16586) * C15335) *
               C50863 -
           (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C50862 -
           (((C117 * C16577 + C50680 * C16579) * C50525 +
             (C117 * C16576 + C50680 * C16578) * C49742 +
             (C117 * C14726 + C50680 * C14730) * C50799 +
             (C117 * C14724 + C50680 * C14728) * C49749) *
                C15335 +
            (C16586 + C16585 + C16592 + C16591) * C15334 + C16593 * C15333) *
               C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50680 * C129) * C118 +
                (C117 * C130 + C50680 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50710 * C1676 -
               (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
                C529 * C107 + C530 * C119 +
                (C117 * C476 + C50680 * C493) * C106 +
                (C117 * C463 + C50680 * C477) * C118) *
                   C50710 * C50648) *
                  C50568 * C1027 +
              ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
                C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                   C50710 * C50648 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50710 * C1676) *
                  C50568 * C1028 +
              ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
                C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                   C50710 * C1676 -
               ((C117 * C750 + C50680 * C752) * C109 +
                (C117 * C749 + C50680 * C751) * C121 + C759 * C108 +
                C758 * C120 + C525 * C107 + C526 * C119 + C527 * C106 +
                C528 * C118) *
                   C50710 * C50648) *
                  C50568 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50680 * C129) * C118 +
                (C117 * C130 + C50680 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50710 * C1676 -
               (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
                C529 * C107 + C530 * C119 +
                (C117 * C476 + C50680 * C493) * C106 +
                (C117 * C463 + C50680 * C477) * C118) *
                   C50710 * C50648) *
                  C278 +
              (((C117 * C889 + C50680 * C894) * C118 +
                (C117 * C895 + C50680 * C904) * C106 + C922 * C119 +
                C923 * C107 + C924 * C120 + C925 * C108 + C926 * C121 +
                C927 * C109) *
                   C50710 * C50648 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50680 * C316) * C106 +
                (C117 * C286 + C50680 * C300) * C118) *
                   C50710 * C1676) *
                  C279 +
              (((C117 * C287 + C50680 * C301) * C118 +
                (C117 * C302 + C50680 * C317) * C106 + C354 * C119 +
                C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
                C359 * C109) *
                   C50710 * C1676 -
               ((C117 * C1566 + C50680 * C1574) * C109 +
                (C117 * C1562 + C50680 * C1567) * C121 +
                (C117 * C1568 + C50680 * C1575) * C108 +
                (C117 * C1563 + C50680 * C1569) * C120 +
                (C117 * C1570 + C50680 * C1576) * C107 +
                (C117 * C1564 + C50680 * C1571) * C119 +
                (C117 * C1572 + C50680 * C1577) * C106 +
                (C117 * C1565 + C50680 * C1573) * C118) *
                   C50710 * C50648) *
                  C280) *
             C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C1842 -
          (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 + C529 * C107 +
           C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
           (C117 * C463 + C50680 * C477) * C118) *
              C50710 * C1843 +
          ((C117 * C464 + C50680 * C478) * C118 +
           (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
           C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
              C50710 * C1844 -
          ((C117 * C1850 + C50680 * C1858) * C109 +
           (C117 * C1846 + C50680 * C1851) * C121 +
           (C117 * C1852 + C50680 * C1859) * C108 +
           (C117 * C1847 + C50680 * C1853) * C120 +
           (C117 * C1854 + C50680 * C1860) * C107 +
           (C117 * C1848 + C50680 * C1855) * C119 +
           (C117 * C1856 + C50680 * C1861) * C106 +
           (C117 * C1849 + C50680 * C1857) * C118) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50648 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C1676 -
           ((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50525 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C49742 +
            (C8705 + C8704 + C8703) * C50799 +
            (C8702 + C8701 + C8700) * C49749) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C278 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50648 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C1676) *
              C279 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C1676 -
           ((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
             C7954 * C1570 + C7949 * C1576) *
                C50525 +
            (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
             C7954 * C1564 + C7949 * C1571) *
                C49742 +
            (C7956 * C9813 + C7951 * C9816 + C7955 * C4184 + C7950 * C4188 +
             C7954 * C1572 + C7949 * C1577) *
                C50799 +
            (C7956 * C9810 + C7951 * C9814 + C7955 * C4179 + C7950 * C4185 +
             C7954 * C1565 + C7949 * C1573) *
                C49749) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C1842 -
          ((C8366 + C8367 + C8368) * C50525 + (C8369 + C8370 + C8371) * C49742 +
           (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
            C7954 * C476 + C7949 * C493) *
               C50799 +
           (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
            C7954 * C463 + C7949 * C477) *
               C49749) *
              C50710 * C1843 +
          ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
            C7956 * C3681 + C7951 * C3687) *
               C49749 +
           (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
            C7956 * C3686 + C7951 * C3690) *
               C50799 +
           (C8372 + C8373 + C8374) * C49742 +
           (C8375 + C8376 + C8377) * C50525) *
              C50710 * C1844 -
          ((C7956 * C10209 + C7951 * C10213 + C7955 * C4584 + C7950 * C4589 +
            C7954 * C1854 + C7949 * C1860) *
               C50525 +
           (C7956 * C10207 + C7951 * C10210 + C7955 * C4580 + C7950 * C4585 +
            C7954 * C1848 + C7949 * C1855) *
               C49742 +
           (C7956 * C10211 + C7951 * C10214 + C7955 * C4586 + C7950 * C4590 +
            C7954 * C1856 + C7949 * C1861) *
               C50799 +
           (C7956 * C10208 + C7951 * C10212 + C7955 * C4581 + C7950 * C4587 +
            C7954 * C1849 + C7949 * C1857) *
               C49749) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C1676 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50648) *
              C50568 * C1027 +
          (((C15651 + C15652 + C15653 + C15654) * C15333 +
            (C15655 + C15656 + C15657 + C15658) * C15334 +
            (C15659 + C15660 + C15661 + C15662) * C15335) *
               C50648 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
                C15333 +
            (C15963 + C15964 + C15965 + C15966) * C15334 +
            (C15967 + C15968 + C15969 + C15970) * C15335) *
               C1676 -
           (((C117 * C1850 + C50680 * C1858) * C50525 +
             (C117 * C1846 + C50680 * C1851) * C49742 + C5525 * C50799 +
             C5524 * C49749) *
                C15335 +
            (C15970 + C15969 + C15968 + C15967) * C15334 +
            (C15966 + C15965 + C15964 + C15963) * C15333) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C1676 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50648) *
              C278 +
          (((C16165 + C16166 + C16167 + C16168) * C15333 +
            (C16169 + C16170 + C16171 + C16172) * C15334 +
            (C16591 + C16592 + C16585 + C16586) * C15335) *
               C50648 -
           (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C49749 +
             (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
             C355 * C50525) *
                C15333 +
            (C17080 + C17081 + C17082 + C17083) * C15334 +
            (C17092 + C17093 + C17088 + C17089) * C15335) *
               C1676 -
           (((C117 * C10209 + C50680 * C10213) * C50525 +
             (C117 * C10207 + C50680 * C10210) * C49742 +
             (C117 * C10211 + C50680 * C10214) * C50799 +
             (C117 * C10208 + C50680 * C10212) * C49749) *
                C15335 +
            (C17089 + C17088 + C17093 + C17092) * C15334 +
            (C17083 + C17082 + C17081 + C17080) * C15333) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C49749 +
            (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
            C172 * C50525) *
               C15333 +
           (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
              C1842 -
          (C17502 * C15335 + (C15642 + C15641 + C15640 + C15639) * C15334 +
           (C15638 + C15637 + C15636 + C15635) * C15333) *
              C1843 +
          (C15669 * C15333 + (C15646 + C15645 + C15644 + C15643) * C15334 +
           (C17503 + C17504 + C17497 + C17498) * C15335) *
              C1844 -
          (((C117 * C17485 + C50680 * C17489) * C50525 +
            (C117 * C17483 + C50680 * C17486) * C49742 +
            (C117 * C17487 + C50680 * C17490) * C50799 +
            (C117 * C17484 + C50680 * C17488) * C49749) *
               C15335 +
           (C17498 + C17497 + C17504 + C17503) * C15334 + C17502 * C15333) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50862 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50863 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50863 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50862 -
           ((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
             C7954 * C483 + C7949 * C496) *
                C50525 +
            (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
             C7954 * C466 + C7949 * C482) *
                C49742 +
            (C8377 + C8376 + C8375) * C50799 +
            (C8374 + C8373 + C8372) * C49749) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50862 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50863 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C2092) *
              C50568 * C50808 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50863 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50862 -
           ((C117 * C488 + C50680 * C499) * C109 +
            (C117 * C469 + C50680 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C50862 -
           (C17502 * C15335 + (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50863 +
           (C15669 * C15333 + (C15646 + C15645 + C15644 + C15643) * C15334 +
            (C17503 + C17504 + C17497 + C17498) * C15335) *
               C2092) *
              C50568 * C50808 +
          (((C15651 + C15652 + C15653 + C15654) * C15333 +
            (C15655 + C15656 + C15657 + C15658) * C15334 +
            (C15659 + C15660 + C15661 + C15662) * C15335) *
               C50863 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C50862 -
           (((C117 * C7344 + C50680 * C7350) * C50525 +
             (C117 * C7341 + C50680 * C7345) * C49742 + C15665 * C50799 +
             C15664 * C49749) *
                C15335 +
            (C15662 + C15661 + C15660 + C15659) * C15334 + C15670 * C15333) *
               C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C278 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50648 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C1676) *
              C279 +
          (((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C1676 -
           ((C117 * C1566 + C50680 * C1574) * C109 +
            (C117 * C1562 + C50680 * C1567) * C121 +
            (C117 * C1568 + C50680 * C1575) * C108 +
            (C117 * C1563 + C50680 * C1569) * C120 +
            (C117 * C1570 + C50680 * C1576) * C107 +
            (C117 * C1564 + C50680 * C1571) * C119 +
            (C117 * C1572 + C50680 * C1577) * C106 +
            (C117 * C1565 + C50680 * C1573) * C118) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50568 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50648 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C1676 -
           ((C117 * C750 + C50680 * C752) * C109 +
            (C117 * C749 + C50680 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50648 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C1676 -
           ((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50525 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C49742 +
            (C8705 + C8704 + C8703) * C50799 +
            (C8702 + C8701 + C8700) * C49749) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C278 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50648 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C1676) *
              C279 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C1676 -
           ((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
             C7954 * C1570 + C7949 * C1576) *
                C50525 +
            (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
             C7954 * C1564 + C7949 * C1571) *
                C49742 +
            (C7956 * C9813 + C7951 * C9816 + C7955 * C4184 + C7950 * C4188 +
             C7954 * C1572 + C7949 * C1577) *
                C50799 +
            (C7956 * C9810 + C7951 * C9814 + C7955 * C4179 + C7950 * C4185 +
             C7954 * C1565 + C7949 * C1573) *
                C49749) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C1676 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50648) *
              C50568 * C1027 +
          (((C15651 + C15652 + C15653 + C15654) * C15333 +
            (C15655 + C15656 + C15657 + C15658) * C15334 +
            (C15659 + C15660 + C15661 + C15662) * C15335) *
               C50648 -
           (C15670 * C15335 + (C15654 + C15653 + C15652 + C15651) * C15334 +
            (C174 * C50525 + C173 * C49742 + C172 * C50799 + C171 * C49749) *
                C15333) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C49749 + C174 * C50799 + C175 * C49742 + C176 * C50525) *
                C15333 +
            (C15963 + C15964 + C15965 + C15966) * C15334 +
            (C15967 + C15968 + C15969 + C15970) * C15335) *
               C1676 -
           (((C117 * C1850 + C50680 * C1858) * C50525 +
             (C117 * C1846 + C50680 * C1851) * C49742 + C5525 * C50799 +
             C5524 * C49749) *
                C15335 +
            (C15970 + C15969 + C15968 + C15967) * C15334 +
            (C15966 + C15965 + C15964 + C15963) * C15333) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C49749 +
             (C117 * C130 + C50680 * C143) * C50799 + C171 * C49742 +
             C172 * C50525) *
                C15333 +
            (C15635 + C15636 + C15637 + C15638) * C15334 + C15669 * C15335) *
               C1676 -
           ((C15643 + C15644 + C15645 + C15646) * C15335 +
            (C15642 + C15641 + C15640 + C15639) * C15334 +
            (C15638 + C15637 + C15636 + C15635) * C15333) *
               C50648) *
              C278 +
          (((C16165 + C16166 + C16167 + C16168) * C15333 +
            (C16169 + C16170 + C16171 + C16172) * C15334 +
            (C16591 + C16592 + C16585 + C16586) * C15335) *
               C50648 -
           (C16593 * C15335 + (C16168 + C16167 + C16166 + C16165) * C15334 +
            (C352 * C50525 + C353 * C49742 +
             (C117 * C299 + C50680 * C316) * C50799 +
             (C117 * C286 + C50680 * C300) * C49749) *
                C15333) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C49749 +
             (C117 * C302 + C50680 * C317) * C50799 + C354 * C49742 +
             C355 * C50525) *
                C15333 +
            (C17080 + C17081 + C17082 + C17083) * C15334 +
            (C17092 + C17093 + C17088 + C17089) * C15335) *
               C1676 -
           (((C117 * C10209 + C50680 * C10213) * C50525 +
             (C117 * C10207 + C50680 * C10210) * C49742 +
             (C117 * C10211 + C50680 * C10214) * C50799 +
             (C117 * C10208 + C50680 * C10212) * C49749) *
                C15335 +
            (C17089 + C17088 + C17093 + C17092) * C15334 +
            (C17083 + C17082 + C17081 + C17080) * C15333) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C50816 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50620 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C50816) *
              C50859 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50584 * C50816 -
           ((C10775 * C3524 + C10770 * C3530 + C10774 * C1107 + C10769 * C1114 +
             C10773 * C306 + C10768 * C319 + C10772 * C295 + C10767 * C314) *
                C50520 +
            (C10775 * C3521 + C10770 * C3525 + C10774 * C1102 + C10769 * C1108 +
             C10773 * C289 + C10768 * C305 + C10772 * C284 + C10767 * C296) *
                C10776) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C50816 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50620 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C50816) *
              C50859 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50584 * C50816 -
           ((C2295 * C311 + C50696 * C322 + C2294 * C310 + C50826 * C321) *
                C2293 +
            (C2295 * C292 + C50696 * C312 + C2294 * C291 + C50826 * C309) *
                C2298 +
            (C2899 + C2898) * C2292 + (C2897 + C2896) * C2297 + C2886 * C2291 +
            C2887 * C2296) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50584 * C50816 -
           (((C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                 C50520 +
             (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                 C10776) *
                C15335 +
            ((C2295 * C1572 + C50696 * C1577 + C2294 * C895 + C50826 * C904) *
                 C50520 +
             (C2295 * C1565 + C50696 * C1573 + C2294 * C889 + C50826 * C894) *
                 C10776) *
                C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50584 * C50620) *
              C50858 +
          ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
            ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
            ((C2294 * C1217 + C50826 * C1224 + C2295 * C3680 + C50696 * C3685) *
                 C10776 +
             (C2294 * C1223 + C50826 * C1229 + C2295 * C3684 + C50696 * C3689) *
                 C50520) *
                C15335) *
               C50584 * C50620 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50584 * C50816) *
              C50859 +
          (((C2348 * C10776 + C2349 * C50520) * C15333 +
            ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
            ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
               C50584 * C50816 -
           (((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                 C50520 +
             (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                 C10776) *
                C15335 +
            ((C3277 + C3276) * C50520 + (C3275 + C3274) * C10776) * C15334 +
            (C2886 * C50520 + C2887 * C10776) * C15333) *
               C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
              C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                 C10776 +
             (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
              C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 +
              C10769 * C1577 + C10773 * C895 + C10768 * C904 + C10772 * C476 +
              C10767 * C493) *
                 C50520 +
             (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 +
              C10769 * C1573 + C10773 * C889 + C10768 * C894 + C10772 * C463 +
              C10767 * C477) *
                 C10776) *
                C50710 * C50648) *
               C50816 +
           (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
              C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
              C10770 * C9814) *
                 C10776 +
             (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
              C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
              C10770 * C9816) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 +
              C10769 * C1116 + C10773 * C302 + C10768 * C317 + C10772 * C299 +
              C10767 * C316) *
                 C50520 +
             (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 +
              C10769 * C1112 + C10773 * C287 + C10768 * C301 + C10772 * C286 +
              C10767 * C300) *
                 C10776) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
              C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
              C10770 * C4183) *
                 C10776 +
             (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
              C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
              C10770 * C4187) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
              C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                 C50520 +
             (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
              C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                 C10776) *
                C50710 * C50817) *
               C50816 +
           (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
              C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
              C10770 * C3527) *
                 C10776 +
             (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
              C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
              C10770 * C3531) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C9811 + C10770 * C9815 + C10774 * C4182 +
              C10769 * C4187 + C10773 * C1570 + C10768 * C1576 + C10772 * C897 +
              C10767 * C905) *
                 C50520 +
             (C10775 * C9809 + C10770 * C9812 + C10774 * C4178 +
              C10769 * C4183 + C10773 * C1564 + C10768 * C1571 + C10772 * C890 +
              C10767 * C896) *
                 C10776) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C2296 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C2291 +
             (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
             C2349 * C2293) *
                C50710 * C50817 -
            (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
             (C2730 + C2731) * C2297 +
             (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                 C2291 +
             (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                 C2296) *
                C50710 * C50648) *
               C50816 +
           (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                 C2296 +
             (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                 C2291 +
             (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
             (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                C50710 * C50648 -
            (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
             (C2536 + C2537) * C2297 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C2291 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C2296) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
             (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
             (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                C50710 * C50648 -
            (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
             (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
             (C2333 + C2332) * C2296) *
                C50710 * C50817) *
               C50816 +
           (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
             (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
             (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                C50710 * C50817 -
            ((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C2293 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C2298 +
             (C3277 + C3276) * C2292 + (C3275 + C3274) * C2297 +
             (C3273 + C3272) * C2291 + (C3271 + C3270) * C2296) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                  C10776 +
              (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                  C50520) *
                 C15333 +
             ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) *
                 C15334 +
             C18438 * C15335) *
                C50817 -
            (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) *
                 C15335 +
             ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) *
                 C15334 +
             ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                 C15333) *
                C50648) *
               C50816 +
           ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) *
                 C15333 +
             ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) *
                 C15334 +
             ((C2294 * C4581 + C50826 * C4587 + C2295 * C10208 +
               C50696 * C10212) *
                  C10776 +
              (C2294 * C4586 + C50826 * C4590 + C2295 * C10211 +
               C50696 * C10214) *
                  C50520) *
                 C15335) *
                C50648 -
            (((C18956 + C18955) * C50520 + (C18954 + C18953) * C10776) *
                 C15335 +
             ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) *
                 C15334 +
             ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                  C50520 +
              (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                  C10776) *
                 C15333) *
                C50817) *
               C50620) *
              C281 +
          (((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
             ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
             ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                 C15335) *
                C50648 -
            (C18435 * C15335 +
             ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
             ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
                C50817) *
               C50816 +
           ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
             ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
             ((C18957 + C18958) * C10776 + (C18959 + C18960) * C50520) *
                 C15335) *
                C50817 -
            (((C2295 * C10209 + C50696 * C10213 + C2294 * C4584 +
               C50826 * C4589) *
                  C50520 +
              (C2295 * C10207 + C50696 * C10210 + C2294 * C4580 +
               C50826 * C4585) *
                  C10776) *
                 C15335 +
             ((C18960 + C18959) * C50520 + (C18958 + C18957) * C10776) *
                 C15334 +
             ((C3273 + C3272) * C50520 + (C3271 + C3270) * C10776) * C15333) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                   C2296 +
               (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                   C2291 +
               (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 +
               C2348 * C2298 + C2349 * C2293) *
                  C50710 * C50584 * C50568 * C113 -
              (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
               (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
               (C2333 + C2332) * C2296) *
                  C50710 * C50584 * C50568 * C114 +
              (C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
               (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
               (C2346 + C2347) * C2293) *
                  C50710 * C50584 * C50568 * C115 -
              ((C2295 * C640 + C50696 * C642 + C2294 * C140 + C50826 * C148) *
                   C2293 +
               (C2295 * C639 + C50696 * C641 + C2294 * C127 + C50826 * C139) *
                   C2298 +
               (C2347 + C2346) * C2292 + (C2345 + C2344) * C2297 +
               C2350 * C2291 + C2351 * C2296) *
                  C50710 * C50584 * C50568 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                    C2296 +
                (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                    C2291 +
                (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 +
                C2348 * C2298 + C2349 * C2293) *
                   C50710 * C50584 * C278 -
               ((C2530 + C2531) * C2293 + (C2532 + C2533) * C2298 +
                (C2534 + C2535) * C2292 + (C2536 + C2537) * C2297 +
                (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                    C2291 +
                (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                    C2296) *
                   C50710 * C50584 * C279 +
               ((C2294 * C287 + C50826 * C301 + C2295 * C1104 +
                 C50696 * C1112) *
                    C2296 +
                (C2294 * C302 + C50826 * C317 + C2295 * C1111 +
                 C50696 * C1116) *
                    C2291 +
                (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
                (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
                   C50710 * C50584 * C280) *
                  C281 +
              (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
                (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
                (C2294 * C283 + C50826 * C294 + C2295 * C290 + C50696 * C307) *
                    C2298 +
                (C2294 * C293 + C50826 * C313 + C2295 * C308 + C50696 * C320) *
                    C2293) *
                   C50710 * C50584 * C279 -
               (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
                (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
                (C2333 + C2332) * C2296) *
                   C50710 * C50584 * C278 -
               ((C2295 * C1105 + C50696 * C1113 + C2294 * C308 +
                 C50826 * C320) *
                    C2293 +
                (C2295 * C1101 + C50696 * C1106 + C2294 * C290 +
                 C50826 * C307) *
                    C2298 +
                (C2545 + C2544) * C2292 + (C2543 + C2542) * C2297 +
                (C2541 + C2540) * C2291 + (C2539 + C2538) * C2296) *
                   C50710 * C50584 * C280) *
                  C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C457 -
           ((C2724 + C2725) * C2293 + (C2726 + C2727) * C2298 +
            (C2728 + C2729) * C2292 + (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C458 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C459) *
              C50568 * C281 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C2294 * C460 + C50826 * C471 + C2295 * C892 + C50696 * C900) *
                C2298 +
            (C2294 * C470 + C50826 * C490 + C2295 * C901 + C50696 * C907) *
                C2293) *
               C50710 * C458 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C457 -
           ((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                C2293 +
            (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                C2298 +
            (C2739 + C2738) * C2292 + (C2737 + C2736) * C2297 +
            (C2735 + C2734) * C2291 + (C2733 + C2732) * C2296) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C50568 * C113 -
          ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
            C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
               C50520 +
           (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
            C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
               C10776) *
              C50710 * C50584 * C50568 * C114 +
          ((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
            C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
               C10776 +
           (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
            C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
               C50520) *
              C50710 * C50584 * C50568 * C115 -
          ((C10775 * C1105 + C10770 * C1113 + C10774 * C308 + C10769 * C320 +
            C10773 * C293 + C10768 * C313 + C10772 * C136 + C10767 * C146) *
               C50520 +
           (C10775 * C1101 + C10770 * C1106 + C10774 * C290 + C10769 * C307 +
            C10773 * C283 + C10768 * C294 + C10772 * C125 + C10767 * C135) *
               C10776) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C278 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C279 +
           ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50584 * C280) *
              C281 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C279 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C278 -
           ((C10775 * C9163 + C10770 * C9167 + C10774 * C3526 + C10769 * C3531 +
             C10773 * C1109 + C10768 * C1115 + C10772 * C304 + C10767 * C318) *
                C50520 +
            (C10775 * C9161 + C10770 * C9164 + C10774 * C3522 + C10769 * C3527 +
             C10773 * C1103 + C10768 * C1110 + C10772 * C288 + C10767 * C303) *
                C10776) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C457 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C458 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C459) *
              C50568 * C281 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C458 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C457 -
           ((C10775 * C9317 + C10770 * C9321 + C10774 * C3684 + C10769 * C3689 +
             C10773 * C1223 + C10768 * C1229 + C10772 * C481 + C10767 * C495) *
                C50520 +
            (C10775 * C9315 + C10770 * C9318 + C10774 * C3680 + C10769 * C3685 +
             C10773 * C1217 + C10768 * C1224 + C10772 * C465 + C10767 * C480) *
                C10776) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C10776 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C50520) *
               C15333 +
           ((C2294 * C463 + C50826 * C477 + C2295 * C889 + C50696 * C894) *
                C10776 +
            (C2294 * C476 + C50826 * C493 + C2295 * C895 + C50696 * C904) *
                C50520) *
               C15334 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C10776 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C50520) *
               C15335) *
              C50584 * C50568 * C113 -
          (((C2735 + C2734) * C50520 + (C2733 + C2732) * C10776) * C15335 +
           ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
           ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
              C50584 * C50568 * C114 +
          ((C2348 * C10776 + C2349 * C50520) * C15333 +
           ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
           ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
              C50584 * C50568 * C115 -
          (((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                C50520 +
            (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                C10776) *
               C15335 +
           ((C3059 + C3058) * C50520 + (C3057 + C3056) * C10776) * C15334 +
           (C2350 * C50520 + C2351 * C10776) * C15333) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C2294 * C463 + C50826 * C477 + C2295 * C889 + C50696 * C894) *
                 C10776 +
             (C2294 * C476 + C50826 * C493 + C2295 * C895 + C50696 * C904) *
                 C50520) *
                C15334 +
            ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                 C10776 +
             (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                 C50520) *
                C15335) *
               C50584 * C278 -
           (((C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                 C50520 +
             (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                 C10776) *
                C15335 +
            ((C2295 * C1572 + C50696 * C1577 + C2294 * C895 + C50826 * C904) *
                 C50520 +
             (C2295 * C1565 + C50696 * C1573 + C2294 * C889 + C50826 * C894) *
                 C10776) *
                C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50584 * C279 +
           (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C10776 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C50520) *
                C15333 +
            ((C2294 * C1565 + C50826 * C1573 + C2295 * C4179 + C50696 * C4185) *
                 C10776 +
             (C2294 * C1572 + C50826 * C1577 + C2295 * C4184 + C50696 * C4188) *
                 C50520) *
                C15334 +
            ((C2294 * C3681 + C50826 * C3687 + C2295 * C9316 + C50696 * C9320) *
                 C10776 +
             (C2294 * C3686 + C50826 * C3690 + C2295 * C9319 + C50696 * C9322) *
                 C50520) *
                C15335) *
               C50584 * C280) *
              C281 +
          ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
            ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
            ((C2294 * C1217 + C50826 * C1224 + C2295 * C3680 + C50696 * C3685) *
                 C10776 +
             (C2294 * C1223 + C50826 * C1229 + C2295 * C3684 + C50696 * C3689) *
                 C50520) *
                C15335) *
               C50584 * C279 -
           (((C2735 + C2734) * C50520 + (C2733 + C2732) * C10776) * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50584 * C278 -
           (((C2295 * C9317 + C50696 * C9321 + C2294 * C3684 + C50826 * C3689) *
                 C50520 +
             (C2295 * C9315 + C50696 * C9318 + C2294 * C3680 + C50826 * C3685) *
                 C10776) *
                C15335 +
            ((C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                 C50520 +
             (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                 C10776) *
                C15334 +
            ((C2541 + C2540) * C50520 + (C2539 + C2538) * C10776) * C15333) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C457 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C458 +
           (C18438 * C15333 +
            ((C18426 + C18425) * C10776 + (C18424 + C18423) * C50520) * C15334 +
            ((C2294 * C7343 + C50826 * C7349 + C2295 * C14724 +
              C50696 * C14728) *
                 C10776 +
             (C2294 * C7348 + C50826 * C7352 + C2295 * C14726 +
              C50696 * C14730) *
                 C50520) *
                C15335) *
               C459) *
              C50568 * C281 +
          ((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
            ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
            ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                C15335) *
               C458 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C457 -
           (((C2295 * C16577 + C50696 * C16579 + C2294 * C7346 +
              C50826 * C7351) *
                 C50520 +
             (C2295 * C16576 + C50696 * C16578 + C2294 * C7342 +
              C50826 * C7347) *
                 C10776) *
                C15335 +
            ((C18430 + C18429) * C50520 + (C18428 + C18427) * C10776) * C15334 +
            C18435 * C15333) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50817) *
              C50568 * C50859 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C4180 + C10770 * C4186 + C10774 * C1568 + C10769 * C1575 +
             C10773 * C899 + C10768 * C906 + C10772 * C472 + C10767 * C491) *
                C50520 +
            (C10775 * C4177 + C10770 * C4181 + C10774 * C1563 + C10769 * C1569 +
             C10773 * C891 + C10768 * C898 + C10772 * C461 + C10767 * C473) *
                C10776) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50817 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50648 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50817) *
              C50568 * C50859 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50817 -
           ((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C2293 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C2298 +
            (C3059 + C3058) * C2292 + (C3057 + C3056) * C2297 + C3046 * C2291 +
            C3047 * C2296) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50817 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50648) *
              C50568 * C50858 +
          ((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
            ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
            ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                C15335) *
               C50648 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50817) *
              C50568 * C50859 +
          (((C2348 * C10776 + C2349 * C50520) * C15333 +
            ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
            ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
               C50817 -
           (((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
                 C50520 +
             (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
                 C10776) *
                C15335 +
            ((C2739 + C2738) * C50520 + (C2737 + C2736) * C10776) * C15334 +
            (C3046 * C50520 + C3047 * C10776) * C15333) *
               C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C278 -
           ((C2530 + C2531) * C2293 + (C2532 + C2533) * C2298 +
            (C2534 + C2535) * C2292 + (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C279 +
           ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50584 * C280) *
              C281 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2294 * C283 + C50826 * C294 + C2295 * C290 + C50696 * C307) *
                C2298 +
            (C2294 * C293 + C50826 * C313 + C2295 * C308 + C50696 * C320) *
                C2293) *
               C50710 * C50584 * C279 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C278 -
           ((C2295 * C1105 + C50696 * C1113 + C2294 * C308 + C50826 * C320) *
                C2293 +
            (C2295 * C1101 + C50696 * C1106 + C2294 * C290 + C50826 * C307) *
                C2298 +
            (C2545 + C2544) * C2292 + (C2543 + C2542) * C2297 +
            (C2541 + C2540) * C2291 + (C2539 + C2538) * C2296) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C50584 * C50568 * C113 -
          (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
           (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
           (C2333 + C2332) * C2296) *
              C50710 * C50584 * C50568 * C114 +
          (C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
           (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
           (C2346 + C2347) * C2293) *
              C50710 * C50584 * C50568 * C115 -
          ((C2295 * C640 + C50696 * C642 + C2294 * C140 + C50826 * C148) *
               C2293 +
           (C2295 * C639 + C50696 * C641 + C2294 * C127 + C50826 * C139) *
               C2298 +
           (C2347 + C2346) * C2292 + (C2345 + C2344) * C2297 + C2350 * C2291 +
           C2351 * C2296) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C50568 * C113 -
          ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
            C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
               C50520 +
           (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
            C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
               C10776) *
              C50710 * C50584 * C50568 * C114 +
          ((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
            C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
               C10776 +
           (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
            C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
               C50520) *
              C50710 * C50584 * C50568 * C115 -
          ((C10775 * C1105 + C10770 * C1113 + C10774 * C308 + C10769 * C320 +
            C10773 * C293 + C10768 * C313 + C10772 * C136 + C10767 * C146) *
               C50520 +
           (C10775 * C1101 + C10770 * C1106 + C10774 * C290 + C10769 * C307 +
            C10773 * C283 + C10768 * C294 + C10772 * C125 + C10767 * C135) *
               C10776) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C278 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C279 +
           ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50584 * C280) *
              C281 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C279 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C278 -
           ((C10775 * C9163 + C10770 * C9167 + C10774 * C3526 + C10769 * C3531 +
             C10773 * C1109 + C10768 * C1115 + C10772 * C304 + C10767 * C318) *
                C50520 +
            (C10775 * C9161 + C10770 * C9164 + C10774 * C3522 + C10769 * C3527 +
             C10773 * C1103 + C10768 * C1110 + C10772 * C288 + C10767 * C303) *
                C10776) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C10776 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C50520) *
               C15333 +
           ((C2294 * C463 + C50826 * C477 + C2295 * C889 + C50696 * C894) *
                C10776 +
            (C2294 * C476 + C50826 * C493 + C2295 * C895 + C50696 * C904) *
                C50520) *
               C15334 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C10776 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C50520) *
               C15335) *
              C50584 * C50568 * C113 -
          (((C2735 + C2734) * C50520 + (C2733 + C2732) * C10776) * C15335 +
           ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
           ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
              C50584 * C50568 * C114 +
          ((C2348 * C10776 + C2349 * C50520) * C15333 +
           ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
           ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
              C50584 * C50568 * C115 -
          (((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                C50520 +
            (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                C10776) *
               C15335 +
           ((C3059 + C3058) * C50520 + (C3057 + C3056) * C10776) * C15334 +
           (C2350 * C50520 + C2351 * C10776) * C15333) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C2294 * C463 + C50826 * C477 + C2295 * C889 + C50696 * C894) *
                 C10776 +
             (C2294 * C476 + C50826 * C493 + C2295 * C895 + C50696 * C904) *
                 C50520) *
                C15334 +
            ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                 C10776 +
             (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                 C50520) *
                C15335) *
               C50584 * C278 -
           (((C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                 C50520 +
             (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                 C10776) *
                C15335 +
            ((C2295 * C1572 + C50696 * C1577 + C2294 * C895 + C50826 * C904) *
                 C50520 +
             (C2295 * C1565 + C50696 * C1573 + C2294 * C889 + C50826 * C894) *
                 C10776) *
                C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50584 * C279 +
           (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C10776 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C50520) *
                C15333 +
            ((C2294 * C1565 + C50826 * C1573 + C2295 * C4179 + C50696 * C4185) *
                 C10776 +
             (C2294 * C1572 + C50826 * C1577 + C2295 * C4184 + C50696 * C4188) *
                 C50520) *
                C15334 +
            ((C2294 * C3681 + C50826 * C3687 + C2295 * C9316 + C50696 * C9320) *
                 C10776 +
             (C2294 * C3686 + C50826 * C3690 + C2295 * C9319 + C50696 * C9322) *
                 C50520) *
                C15335) *
               C50584 * C280) *
              C281 +
          ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
            ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
            ((C2294 * C1217 + C50826 * C1224 + C2295 * C3680 + C50696 * C3685) *
                 C10776 +
             (C2294 * C1223 + C50826 * C1229 + C2295 * C3684 + C50696 * C3689) *
                 C50520) *
                C15335) *
               C50584 * C279 -
           (((C2735 + C2734) * C50520 + (C2733 + C2732) * C10776) * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50584 * C278 -
           (((C2295 * C9317 + C50696 * C9321 + C2294 * C3684 + C50826 * C3689) *
                 C50520 +
             (C2295 * C9315 + C50696 * C9318 + C2294 * C3680 + C50826 * C3685) *
                 C10776) *
                C15335 +
            ((C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                 C50520 +
             (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                 C10776) *
                C15334 +
            ((C2541 + C2540) * C50520 + (C2539 + C2538) * C10776) * C15333) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C50860 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50861 +
           ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50861 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C50860 -
           ((C10775 * C9163 + C10770 * C9167 + C10774 * C3526 + C10769 * C3531 +
             C10773 * C1109 + C10768 * C1115 + C10772 * C304 + C10767 * C318) *
                C50520 +
            (C10775 * C9161 + C10770 * C9164 + C10774 * C3522 + C10769 * C3527 +
             C10773 * C1103 + C10768 * C1110 + C10772 * C288 + C10767 * C303) *
                C10776) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C50860 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50861 +
           ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50861 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C50860 -
           ((C2295 * C1105 + C50696 * C1113 + C2294 * C308 + C50826 * C320) *
                C2293 +
            (C2295 * C1101 + C50696 * C1106 + C2294 * C290 + C50826 * C307) *
                C2298 +
            (C2545 + C2544) * C2292 + (C2543 + C2542) * C2297 +
            (C2541 + C2540) * C2291 + (C2539 + C2538) * C2296) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50584 * C50860 -
           (C19367 * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50584 * C50861 +
           (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C10776 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C50520) *
                C15333 +
            ((C2294 * C1565 + C50826 * C1573 + C2295 * C4179 + C50696 * C4185) *
                 C10776 +
             (C2294 * C1572 + C50826 * C1577 + C2295 * C4184 + C50696 * C4188) *
                 C50520) *
                C15334 +
            ((C2294 * C3681 + C50826 * C3687 + C2295 * C9316 + C50696 * C9320) *
                 C10776 +
             (C2294 * C3686 + C50826 * C3690 + C2295 * C9319 + C50696 * C9322) *
                 C50520) *
                C15335) *
               C50584 * C1331) *
              C50808 +
          ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
            ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
            ((C18957 + C18958) * C10776 + (C18959 + C18960) * C50520) *
                C15335) *
               C50584 * C50861 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50584 * C50860 -
           (((C2295 * C9317 + C50696 * C9321 + C2294 * C3684 + C50826 * C3689) *
                 C50520 +
             (C2295 * C9315 + C50696 * C9318 + C2294 * C3680 + C50826 * C3685) *
                 C10776) *
                C15335 +
            ((C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                 C50520 +
             (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                 C10776) *
                C15334 +
            ((C2541 + C2540) * C50520 + (C2539 + C2538) * C10776) * C15333) *
               C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50860 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50817) *
              C50861 +
          (((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C11896 + C10770 * C11898 + C10774 * C9813 +
             C10769 * C9816 + C10773 * C4184 + C10768 * C4188 + C10772 * C1572 +
             C10767 * C1577) *
                C50520 +
            (C10775 * C11895 + C10770 * C11897 + C10774 * C9810 +
             C10769 * C9814 + C10773 * C4179 + C10768 * C4185 + C10772 * C1565 +
             C10767 * C1573) *
                C10776) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50817 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50860 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50648 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50817) *
              C50861 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50817 -
           ((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                C2293 +
            (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                C2298 +
            (C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                C2292 +
            (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                C2297 +
            (C2295 * C4184 + C50696 * C4188 + C2294 * C1572 + C50826 * C1577) *
                C2291 +
            (C2295 * C4179 + C50696 * C4185 + C2294 * C1565 + C50826 * C1573) *
                C2296) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50817 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50648) *
              C50860 +
          ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) * C15333 +
            ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) * C15334 +
            ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                C15335) *
               C50648 -
           (C19367 * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50817) *
              C50861 +
          ((((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C10776 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C50520) *
                C15333 +
            ((C19870 + C19871) * C10776 + (C19872 + C19873) * C50520) * C15334 +
            ((C19874 + C19875) * C10776 + (C19876 + C19877) * C50520) *
                C15335) *
               C50817 -
           (((C2295 * C12162 + C50696 * C12164 + C2294 * C10211 +
              C50826 * C10214) *
                 C50520 +
             (C2295 * C12161 + C50696 * C12163 + C2294 * C10208 +
              C50826 * C10212) *
                 C10776) *
                C15335 +
            ((C19877 + C19876) * C50520 + (C19875 + C19874) * C10776) * C15334 +
            ((C19873 + C19872) * C50520 + (C19871 + C19870) * C10776) *
                C15333) *
               C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                    C2296 +
                (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                    C2291 +
                (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 +
                C2348 * C2298 + C2349 * C2293) *
                   C50710 * C50584 * C1025 -
               (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
                (C2536 + C2537) * C2297 +
                (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                    C2291 +
                (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                    C2296) *
                   C50710 * C50584 * C50620) *
                  C1027 +
              (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
                (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
                (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                   C50710 * C50584 * C50620 -
               (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
                (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
                (C2333 + C2332) * C2296) *
                   C50710 * C50584 * C1025) *
                  C1028 +
              ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
                (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
                (C2346 + C2347) * C2293) *
                   C50710 * C50584 * C1025 -
               ((C2295 * C311 + C50696 * C322 + C2294 * C310 + C50826 * C321) *
                    C2293 +
                (C2295 * C292 + C50696 * C312 + C2294 * C291 + C50826 * C309) *
                    C2298 +
                (C2899 + C2898) * C2292 + (C2897 + C2896) * C2297 +
                C2886 * C2291 + C2887 * C2296) *
                   C50710 * C50584 * C50620) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                   C2296 +
               (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                   C2291 +
               (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 +
               C2348 * C2298 + C2349 * C2293) *
                  C50710 * C50584 * C1096 -
              (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
               (C2536 + C2537) * C2297 +
               (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                   C2291 +
               (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                   C2296) *
                  C50710 * C50584 * C1097 +
              ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                   C2296 +
               (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                   C2291 +
               (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
               (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
                  C50710 * C50584 * C1098 -
              ((C2295 * C3524 + C50696 * C3530 + C2294 * C1107 +
                C50826 * C1114) *
                   C2293 +
               (C2295 * C3521 + C50696 * C3525 + C2294 * C1102 +
                C50826 * C1108) *
                   C2298 +
               (C2295 * C3526 + C50696 * C3531 + C2294 * C1109 +
                C50826 * C1115) *
                   C2292 +
               (C2295 * C3522 + C50696 * C3527 + C2294 * C1103 +
                C50826 * C1110) *
                   C2297 +
               (C2295 * C3528 + C50696 * C3532 + C2294 * C1111 +
                C50826 * C1116) *
                   C2291 +
               (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 +
                C50826 * C1112) *
                   C2296) *
                  C50710 * C50584 * C1099) *
             C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C457 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C458 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C459) *
              C1025 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C458 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C457 -
           ((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                C2293 +
            (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                C2298 +
            (C2295 * C3684 + C50696 * C3689 + C2294 * C1223 + C50826 * C1229) *
                C2292 +
            (C2295 * C3680 + C50696 * C3685 + C2294 * C1217 + C50826 * C1224) *
                C2297 +
            (C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                C2291 +
            (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                C2296) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50620 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3524 + C10770 * C3530 + C10774 * C1107 + C10769 * C1114 +
             C10773 * C306 + C10768 * C319 + C10772 * C295 + C10767 * C314) *
                C50520 +
            (C10775 * C3521 + C10770 * C3525 + C10774 * C1102 + C10769 * C1108 +
             C10773 * C289 + C10768 * C305 + C10772 * C284 + C10767 * C296) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C1096 -
          ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
            C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
               C50520 +
           (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
            C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
               C10776) *
              C50710 * C50584 * C1097 +
          ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
            C10774 * C3523 + C10769 * C3529 + C10775 * C9162 + C10770 * C9166) *
               C10776 +
           (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
            C10774 * C3528 + C10769 * C3532 + C10775 * C9165 + C10770 * C9168) *
               C50520) *
              C50710 * C50584 * C1098 -
          ((C10775 * C11464 + C10770 * C11466 + C10774 * C9165 +
            C10769 * C9168 + C10773 * C3528 + C10768 * C3532 + C10772 * C1111 +
            C10767 * C1116) *
               C50520 +
           (C10775 * C11463 + C10770 * C11465 + C10774 * C9162 +
            C10769 * C9166 + C10773 * C3523 + C10768 * C3529 + C10772 * C1104 +
            C10767 * C1112) *
               C10776) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C457 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C458 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C459) *
              C1025 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C458 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C457 -
           ((C10775 * C11566 + C10770 * C11568 + C10774 * C9319 +
             C10769 * C9322 + C10773 * C3686 + C10768 * C3690 + C10772 * C1225 +
             C10767 * C1230) *
                C50520 +
            (C10775 * C11565 + C10770 * C11567 + C10774 * C9316 +
             C10769 * C9320 + C10773 * C3681 + C10768 * C3687 + C10772 * C1218 +
             C10767 * C1226) *
                C10776) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50584 * C1025 -
           (((C18956 + C18955) * C50520 + (C18954 + C18953) * C10776) * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50584 * C50620) *
              C1027 +
          ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
            ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
            ((C18957 + C18958) * C10776 + (C18959 + C18960) * C50520) *
                C15335) *
               C50584 * C50620 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50584 * C1025) *
              C1028 +
          (((C2348 * C10776 + C2349 * C50520) * C15333 +
            ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
            ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
               C50584 * C1025 -
           (((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                 C50520 +
             (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                 C10776) *
                C15335 +
            ((C3277 + C3276) * C50520 + (C3275 + C3274) * C10776) * C15334 +
            (C2886 * C50520 + C2887 * C10776) * C15333) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C10776 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C50520) *
               C15333 +
           ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
           C18438 * C15335) *
              C50584 * C1096 -
          (((C18956 + C18955) * C50520 + (C18954 + C18953) * C10776) * C15335 +
           ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
           ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C50520 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C10776) *
               C15333) *
              C50584 * C1097 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C10776 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C50520) *
               C15333 +
           ((C2294 * C1565 + C50826 * C1573 + C2295 * C4179 + C50696 * C4185) *
                C10776 +
            (C2294 * C1572 + C50826 * C1577 + C2295 * C4184 + C50696 * C4188) *
                C50520) *
               C15334 +
           ((C2294 * C3681 + C50826 * C3687 + C2295 * C9316 + C50696 * C9320) *
                C10776 +
            (C2294 * C3686 + C50826 * C3690 + C2295 * C9319 + C50696 * C9322) *
                C50520) *
               C15335) *
              C50584 * C1098 -
          (((C2295 * C11566 + C50696 * C11568 + C2294 * C9319 +
             C50826 * C9322) *
                C50520 +
            (C2295 * C11565 + C50696 * C11567 + C2294 * C9316 +
             C50826 * C9320) *
                C10776) *
               C15335 +
           ((C2295 * C9813 + C50696 * C9816 + C2294 * C4184 + C50826 * C4188) *
                C50520 +
            (C2295 * C9810 + C50696 * C9814 + C2294 * C4179 + C50826 * C4185) *
                C10776) *
               C15334 +
           ((C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
                C50520 +
            (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
                C10776) *
               C15333) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C457 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C458 +
           (C18438 * C15333 +
            ((C18426 + C18425) * C10776 + (C18424 + C18423) * C50520) * C15334 +
            ((C2294 * C7343 + C50826 * C7349 + C2295 * C14724 +
              C50696 * C14728) *
                 C10776 +
             (C2294 * C7348 + C50826 * C7352 + C2295 * C14726 +
              C50696 * C14730) *
                 C50520) *
                C15335) *
               C459) *
              C1025 +
          ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) * C15333 +
            ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) * C15334 +
            ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                C15335) *
               C458 -
           (C19367 * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C457 -
           (((C2295 * C14725 + C50696 * C14729 + C2294 * C14726 +
              C50826 * C14730) *
                 C50520 +
             (C2295 * C14723 + C50696 * C14727 + C2294 * C14724 +
              C50826 * C14728) *
                 C10776) *
                C15335 +
            ((C19364 + C19363) * C50520 + (C19362 + C19361) * C10776) * C15334 +
            C19367 * C15333) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
              C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                 C10776 +
             (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
              C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 +
              C10769 * C1577 + C10773 * C895 + C10768 * C904 + C10772 * C476 +
              C10767 * C493) *
                 C50520 +
             (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 +
              C10769 * C1573 + C10773 * C889 + C10768 * C894 + C10772 * C463 +
              C10767 * C477) *
                 C10776) *
                C50710 * C50648) *
               C1025 +
           (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
              C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
              C10770 * C9814) *
                 C10776 +
             (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
              C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
              C10770 * C9816) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 +
              C10769 * C1116 + C10773 * C302 + C10768 * C317 + C10772 * C299 +
              C10767 * C316) *
                 C50520 +
             (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 +
              C10769 * C1112 + C10773 * C287 + C10768 * C301 + C10772 * C286 +
              C10767 * C300) *
                 C10776) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
              C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
              C10770 * C4183) *
                 C10776 +
             (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
              C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
              C10770 * C4187) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
              C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                 C50520 +
             (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
              C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                 C10776) *
                C50710 * C50817) *
               C1025 +
           (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
              C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
              C10770 * C3527) *
                 C10776 +
             (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
              C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
              C10770 * C3531) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C9811 + C10770 * C9815 + C10774 * C4182 +
              C10769 * C4187 + C10773 * C1570 + C10768 * C1576 + C10772 * C897 +
              C10767 * C905) *
                 C50520 +
             (C10775 * C9809 + C10770 * C9812 + C10774 * C4178 +
              C10769 * C4183 + C10773 * C1564 + C10768 * C1571 + C10772 * C890 +
              C10767 * C896) *
                 C10776) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C2296 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C2291 +
             (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
             C2349 * C2293) *
                C50710 * C50817 -
            (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
             (C2730 + C2731) * C2297 +
             (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                 C2291 +
             (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                 C2296) *
                C50710 * C50648) *
               C1025 +
           (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                 C2296 +
             (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                 C2291 +
             (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
             (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                C50710 * C50648 -
            (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
             (C2536 + C2537) * C2297 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C2291 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C2296) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
             (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
             (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                C50710 * C50648 -
            (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
             (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
             (C2333 + C2332) * C2296) *
                C50710 * C50817) *
               C1025 +
           (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
             (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
             (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                C50710 * C50817 -
            ((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C2293 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C2298 +
             (C3277 + C3276) * C2292 + (C3275 + C3274) * C2297 +
             (C3273 + C3272) * C2291 + (C3271 + C3270) * C2296) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                  C10776 +
              (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                  C50520) *
                 C15333 +
             ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) *
                 C15334 +
             C18438 * C15335) *
                C50817 -
            (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) *
                 C15335 +
             ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) *
                 C15334 +
             ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                 C15333) *
                C50648) *
               C1025 +
           ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) *
                 C15333 +
             ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) *
                 C15334 +
             ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                 C15335) *
                C50648 -
            (C19367 * C15335 +
             ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) *
                 C15334 +
             ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                  C50520 +
              (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                  C10776) *
                 C15333) *
                C50817) *
               C50620) *
              C50808 +
          (((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
             ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
             ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                 C15335) *
                C50648 -
            (C18435 * C15335 +
             ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
             ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
                C50817) *
               C1025 +
           ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
             ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
             ((C18957 + C18958) * C10776 + (C18959 + C18960) * C50520) *
                 C15335) *
                C50817 -
            (((C2295 * C10209 + C50696 * C10213 + C2294 * C4584 +
               C50826 * C4589) *
                  C50520 +
              (C2295 * C10207 + C50696 * C10210 + C2294 * C4580 +
               C50826 * C4585) *
                  C10776) *
                 C15335 +
             ((C18960 + C18959) * C50520 + (C18958 + C18957) * C10776) *
                 C15334 +
             ((C3273 + C3272) * C50520 + (C3271 + C3270) * C10776) * C15333) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C50584 * C1096 -
          (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
           (C2536 + C2537) * C2297 +
           (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
               C2291 +
           (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
               C2296) *
              C50710 * C50584 * C1097 +
          ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
               C2296 +
           (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
               C2291 +
           (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
           (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
              C50710 * C50584 * C1098 -
          ((C2295 * C3524 + C50696 * C3530 + C2294 * C1107 + C50826 * C1114) *
               C2293 +
           (C2295 * C3521 + C50696 * C3525 + C2294 * C1102 + C50826 * C1108) *
               C2298 +
           (C2295 * C3526 + C50696 * C3531 + C2294 * C1109 + C50826 * C1115) *
               C2292 +
           (C2295 * C3522 + C50696 * C3527 + C2294 * C1103 + C50826 * C1110) *
               C2297 +
           (C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
               C2291 +
           (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
               C2296) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C1025 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50620 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50584 * C1025 -
           ((C2295 * C311 + C50696 * C322 + C2294 * C310 + C50826 * C321) *
                C2293 +
            (C2295 * C292 + C50696 * C312 + C2294 * C291 + C50826 * C309) *
                C2298 +
            (C2899 + C2898) * C2292 + (C2897 + C2896) * C2297 + C2886 * C2291 +
            C2887 * C2296) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50620 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3524 + C10770 * C3530 + C10774 * C1107 + C10769 * C1114 +
             C10773 * C306 + C10768 * C319 + C10772 * C295 + C10767 * C314) *
                C50520 +
            (C10775 * C3521 + C10770 * C3525 + C10774 * C1102 + C10769 * C1108 +
             C10773 * C289 + C10768 * C305 + C10772 * C284 + C10767 * C296) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C1096 -
          ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
            C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
               C50520 +
           (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
            C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
               C10776) *
              C50710 * C50584 * C1097 +
          ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
            C10774 * C3523 + C10769 * C3529 + C10775 * C9162 + C10770 * C9166) *
               C10776 +
           (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
            C10774 * C3528 + C10769 * C3532 + C10775 * C9165 + C10770 * C9168) *
               C50520) *
              C50710 * C50584 * C1098 -
          ((C10775 * C11464 + C10770 * C11466 + C10774 * C9165 +
            C10769 * C9168 + C10773 * C3528 + C10768 * C3532 + C10772 * C1111 +
            C10767 * C1116) *
               C50520 +
           (C10775 * C11463 + C10770 * C11465 + C10774 * C9162 +
            C10769 * C9166 + C10773 * C3523 + C10768 * C3529 + C10772 * C1104 +
            C10767 * C1112) *
               C10776) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50584 * C1025 -
           (((C18956 + C18955) * C50520 + (C18954 + C18953) * C10776) * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50584 * C50620) *
              C1027 +
          ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
            ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
            ((C18957 + C18958) * C10776 + (C18959 + C18960) * C50520) *
                C15335) *
               C50584 * C50620 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50584 * C1025) *
              C1028 +
          (((C2348 * C10776 + C2349 * C50520) * C15333 +
            ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
            ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
               C50584 * C1025 -
           (((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                 C50520 +
             (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                 C10776) *
                C15335 +
            ((C3277 + C3276) * C50520 + (C3275 + C3274) * C10776) * C15334 +
            (C2886 * C50520 + C2887 * C10776) * C15333) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C10776 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C50520) *
               C15333 +
           ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
           C18438 * C15335) *
              C50584 * C1096 -
          (((C18956 + C18955) * C50520 + (C18954 + C18953) * C10776) * C15335 +
           ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
           ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C50520 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C10776) *
               C15333) *
              C50584 * C1097 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C10776 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C50520) *
               C15333 +
           ((C2294 * C1565 + C50826 * C1573 + C2295 * C4179 + C50696 * C4185) *
                C10776 +
            (C2294 * C1572 + C50826 * C1577 + C2295 * C4184 + C50696 * C4188) *
                C50520) *
               C15334 +
           ((C2294 * C3681 + C50826 * C3687 + C2295 * C9316 + C50696 * C9320) *
                C10776 +
            (C2294 * C3686 + C50826 * C3690 + C2295 * C9319 + C50696 * C9322) *
                C50520) *
               C15335) *
              C50584 * C1098 -
          (((C2295 * C11566 + C50696 * C11568 + C2294 * C9319 +
             C50826 * C9322) *
                C50520 +
            (C2295 * C11565 + C50696 * C11567 + C2294 * C9316 +
             C50826 * C9320) *
                C10776) *
               C15335 +
           ((C2295 * C9813 + C50696 * C9816 + C2294 * C4184 + C50826 * C4188) *
                C50520 +
            (C2295 * C9810 + C50696 * C9814 + C2294 * C4179 + C50826 * C4185) *
                C10776) *
               C15334 +
           ((C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
                C50520 +
            (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
                C10776) *
               C15333) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
              C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                 C10776 +
             (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
              C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                 C50520) *
                C50710 * C1676 -
            ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 +
              C10769 * C1577 + C10773 * C895 + C10768 * C904 + C10772 * C476 +
              C10767 * C493) *
                 C50520 +
             (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 +
              C10769 * C1573 + C10773 * C889 + C10768 * C894 + C10772 * C463 +
              C10767 * C477) *
                 C10776) *
                C50710 * C50648) *
               C50816 +
           (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
              C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
              C10770 * C9814) *
                 C10776 +
             (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
              C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
              C10770 * C9816) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 +
              C10769 * C1116 + C10773 * C302 + C10768 * C317 + C10772 * C299 +
              C10767 * C316) *
                 C50520 +
             (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 +
              C10769 * C1112 + C10773 * C287 + C10768 * C301 + C10772 * C286 +
              C10767 * C300) *
                 C10776) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
              C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
              C10770 * C4183) *
                 C10776 +
             (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
              C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
              C10770 * C4187) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
              C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                 C50520 +
             (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
              C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                 C10776) *
                C50710 * C1676) *
               C50816 +
           (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
              C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
              C10770 * C3527) *
                 C10776 +
             (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
              C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
              C10770 * C3531) *
                 C50520) *
                C50710 * C1676 -
            ((C10775 * C9811 + C10770 * C9815 + C10774 * C4182 +
              C10769 * C4187 + C10773 * C1570 + C10768 * C1576 + C10772 * C897 +
              C10767 * C905) *
                 C50520 +
             (C10775 * C9809 + C10770 * C9812 + C10774 * C4178 +
              C10769 * C4183 + C10773 * C1564 + C10768 * C1571 + C10772 * C890 +
              C10767 * C896) *
                 C10776) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C2296 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C2291 +
             (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
             C2349 * C2293) *
                C50710 * C1676 -
            (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
             (C2730 + C2731) * C2297 +
             (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                 C2291 +
             (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                 C2296) *
                C50710 * C50648) *
               C50816 +
           (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                 C2296 +
             (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                 C2291 +
             (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
             (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                C50710 * C50648 -
            (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
             (C2536 + C2537) * C2297 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C2291 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C2296) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
             (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
             (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                C50710 * C50648 -
            (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
             (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
             (C2333 + C2332) * C2296) *
                C50710 * C1676) *
               C50816 +
           (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
             (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
             (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                C50710 * C1676 -
            ((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C2293 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C2298 +
             (C3277 + C3276) * C2292 + (C3275 + C3274) * C2297 +
             (C3273 + C3272) * C2291 + (C3271 + C3270) * C2296) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                  C10776 +
              (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                  C50520) *
                 C15333 +
             ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) *
                 C15334 +
             C18438 * C15335) *
                C1676 -
            (C20288 * C15335 +
             ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) *
                 C15334 +
             ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                 C15333) *
                C50648) *
               C50816 +
           ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) *
                 C15333 +
             ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) *
                 C15334 +
             ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                 C15335) *
                C50648 -
            (C19367 * C15335 +
             ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) *
                 C15334 +
             ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                  C50520 +
              (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                  C10776) *
                 C15333) *
                C1676) *
               C50620) *
              C50808 +
          (((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
             ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
             ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                 C15335) *
                C50648 -
            (C18435 * C15335 +
             ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
             ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
                C1676) *
               C50816 +
           ((((C2537 + C2536) * C10776 + (C2535 + C2534) * C50520) * C15333 +
             ((C3270 + C3271) * C10776 + (C3272 + C3273) * C50520) * C15334 +
             ((C18957 + C18958) * C10776 + (C18959 + C18960) * C50520) *
                 C15335) *
                C1676 -
            (((C2295 * C10209 + C50696 * C10213 + C2294 * C4584 +
               C50826 * C4589) *
                  C50520 +
              (C2295 * C10207 + C50696 * C10210 + C2294 * C4580 +
               C50826 * C4585) *
                  C10776) *
                 C15335 +
             ((C18960 + C18959) * C50520 + (C18958 + C18957) * C10776) *
                 C15334 +
             ((C3273 + C3272) * C50520 + (C3271 + C3270) * C10776) * C15333) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50862 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50863 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C2092) *
              C50816 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50863 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50862 -
           ((C10775 * C11566 + C10770 * C11568 + C10774 * C9319 +
             C10769 * C9322 + C10773 * C3686 + C10768 * C3690 + C10772 * C1225 +
             C10767 * C1230) *
                C50520 +
            (C10775 * C11565 + C10770 * C11567 + C10774 * C9316 +
             C10769 * C9320 + C10773 * C3681 + C10768 * C3687 + C10772 * C1218 +
             C10767 * C1226) *
                C10776) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50862 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50863 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C2092) *
              C50816 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50863 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50862 -
           ((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                C2293 +
            (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                C2298 +
            (C2295 * C3684 + C50696 * C3689 + C2294 * C1223 + C50826 * C1229) *
                C2292 +
            (C2295 * C3680 + C50696 * C3685 + C2294 * C1217 + C50826 * C1224) *
                C2297 +
            (C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                C2291 +
            (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                C2296) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50862 -
           (C20288 * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50863 +
           (C18438 * C15333 +
            ((C18426 + C18425) * C10776 + (C18424 + C18423) * C50520) * C15334 +
            ((C20284 + C20285) * C10776 + (C20286 + C20287) * C50520) *
                C15335) *
               C2092) *
              C50816 +
          ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) * C15333 +
            ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) * C15334 +
            ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                C15335) *
               C50863 -
           (C19367 * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C50862 -
           (((C2295 * C14725 + C50696 * C14729 + C2294 * C14726 +
              C50826 * C14730) *
                 C50520 +
             (C2295 * C14723 + C50696 * C14727 + C2294 * C14724 +
              C50826 * C14728) *
                 C10776) *
                C15335 +
            ((C19364 + C19363) * C50520 + (C19362 + C19361) * C10776) * C15334 +
            C19367 * C15333) *
               C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                    C2296 +
                (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                    C2291 +
                (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 +
                C2348 * C2298 + C2349 * C2293) *
                   C50710 * C1676 -
               (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
                (C2730 + C2731) * C2297 +
                (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                    C2291 +
                (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                    C2296) *
                   C50710 * C50648) *
                  C50568 * C1027 +
              (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
                (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
                (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                   C50710 * C50648 -
               (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
                (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
                (C2333 + C2332) * C2296) *
                   C50710 * C1676) *
                  C50568 * C1028 +
              ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
                (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
                (C2346 + C2347) * C2293) *
                   C50710 * C1676 -
               ((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                    C2293 +
                (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                    C2298 +
                (C3059 + C3058) * C2292 + (C3057 + C3056) * C2297 +
                C3046 * C2291 + C3047 * C2296) *
                   C50710 * C50648) *
                  C50568 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                    C2296 +
                (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                    C2291 +
                (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 +
                C2348 * C2298 + C2349 * C2293) *
                   C50710 * C1676 -
               (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
                (C2730 + C2731) * C2297 +
                (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                    C2291 +
                (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                    C2296) *
                   C50710 * C50648) *
                  C278 +
              (((C2294 * C889 + C50826 * C894 + C2295 * C1565 +
                 C50696 * C1573) *
                    C2296 +
                (C2294 * C895 + C50826 * C904 + C2295 * C1572 +
                 C50696 * C1577) *
                    C2291 +
                (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
                (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                   C50710 * C50648 -
               (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
                (C2536 + C2537) * C2297 +
                (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                    C2291 +
                (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                    C2296) *
                   C50710 * C1676) *
                  C279 +
              (((C2294 * C287 + C50826 * C301 + C2295 * C1104 +
                 C50696 * C1112) *
                    C2296 +
                (C2294 * C302 + C50826 * C317 + C2295 * C1111 +
                 C50696 * C1116) *
                    C2291 +
                (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
                (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
                   C50710 * C1676 -
               ((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 +
                 C50826 * C1575) *
                    C2293 +
                (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 +
                 C50826 * C1569) *
                    C2298 +
                (C2295 * C4182 + C50696 * C4187 + C2294 * C1570 +
                 C50826 * C1576) *
                    C2292 +
                (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 +
                 C50826 * C1571) *
                    C2297 +
                (C2295 * C4184 + C50696 * C4188 + C2294 * C1572 +
                 C50826 * C1577) *
                    C2291 +
                (C2295 * C4179 + C50696 * C4185 + C2294 * C1565 +
                 C50826 * C1573) *
                    C2296) *
                   C50710 * C50648) *
                  C280) *
             C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C1842 -
          (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
           (C2730 + C2731) * C2297 +
           (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
               C2291 +
           (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
               C2296) *
              C50710 * C1843 +
          ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
               C2296 +
           (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
               C2291 +
           (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
           (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
              C50710 * C1844 -
          ((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
               C2293 +
           (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
               C2298 +
           (C2295 * C4584 + C50696 * C4589 + C2294 * C1854 + C50826 * C1860) *
               C2292 +
           (C2295 * C4580 + C50696 * C4585 + C2294 * C1848 + C50826 * C1855) *
               C2297 +
           (C2295 * C4586 + C50696 * C4590 + C2294 * C1856 + C50826 * C1861) *
               C2291 +
           (C2295 * C4581 + C50696 * C4587 + C2294 * C1849 + C50826 * C1857) *
               C2296) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4180 + C10770 * C4186 + C10774 * C1568 + C10769 * C1575 +
             C10773 * C899 + C10768 * C906 + C10772 * C472 + C10767 * C491) *
                C50520 +
            (C10775 * C4177 + C10770 * C4181 + C10774 * C1563 + C10769 * C1569 +
             C10773 * C891 + C10768 * C898 + C10772 * C461 + C10767 * C473) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C278 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C1676) *
              C279 +
          (((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C11896 + C10770 * C11898 + C10774 * C9813 +
             C10769 * C9816 + C10773 * C4184 + C10768 * C4188 + C10772 * C1572 +
             C10767 * C1577) *
                C50520 +
            (C10775 * C11895 + C10770 * C11897 + C10774 * C9810 +
             C10769 * C9814 + C10773 * C4179 + C10768 * C4185 + C10772 * C1565 +
             C10767 * C1573) *
                C10776) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C1842 -
          ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
            C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
               C50520 +
           (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
            C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
               C10776) *
              C50710 * C1843 +
          ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
            C10774 * C3681 + C10769 * C3687 + C10775 * C9316 + C10770 * C9320) *
               C10776 +
           (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
            C10774 * C3686 + C10769 * C3690 + C10775 * C9319 + C10770 * C9322) *
               C50520) *
              C50710 * C1844 -
          ((C10775 * C12162 + C10770 * C12164 + C10774 * C10211 +
            C10769 * C10214 + C10773 * C4586 + C10768 * C4590 + C10772 * C1856 +
            C10767 * C1861) *
               C50520 +
           (C10775 * C12161 + C10770 * C12163 + C10774 * C10208 +
            C10769 * C10212 + C10773 * C4581 + C10768 * C4587 + C10772 * C1849 +
            C10767 * C1857) *
               C10776) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C1676 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50648) *
              C50568 * C1027 +
          ((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
            ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
            ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                C15335) *
               C50648 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C1676) *
              C50568 * C1028 +
          (((C2348 * C10776 + C2349 * C50520) * C15333 +
            ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
            ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
               C1676 -
           (((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
                 C50520 +
             (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
                 C10776) *
                C15335 +
            ((C2739 + C2738) * C50520 + (C2737 + C2736) * C10776) * C15334 +
            (C3046 * C50520 + C3047 * C10776) * C15333) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C1676 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50648) *
              C278 +
          ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) * C15333 +
            ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) * C15334 +
            ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                C15335) *
               C50648 -
           (C19367 * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C1676) *
              C279 +
          ((((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C10776 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C50520) *
                C15333 +
            ((C19870 + C19871) * C10776 + (C19872 + C19873) * C50520) * C15334 +
            ((C19874 + C19875) * C10776 + (C19876 + C19877) * C50520) *
                C15335) *
               C1676 -
           (((C2295 * C12162 + C50696 * C12164 + C2294 * C10211 +
              C50826 * C10214) *
                 C50520 +
             (C2295 * C12161 + C50696 * C12163 + C2294 * C10208 +
              C50826 * C10212) *
                 C10776) *
                C15335 +
            ((C19877 + C19876) * C50520 + (C19875 + C19874) * C10776) * C15334 +
            ((C19873 + C19872) * C50520 + (C19871 + C19870) * C10776) *
                C15333) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C10776 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C50520) *
               C15333 +
           ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
           C18438 * C15335) *
              C1842 -
          (C20288 * C15335 +
           ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
           ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) * C15333) *
              C1843 +
          (C18438 * C15333 +
           ((C18426 + C18425) * C10776 + (C18424 + C18423) * C50520) * C15334 +
           ((C20284 + C20285) * C10776 + (C20286 + C20287) * C50520) * C15335) *
              C1844 -
          (((C2295 * C20268 + C50696 * C20270 + C2294 * C17487 +
             C50826 * C17490) *
                C50520 +
            (C2295 * C20267 + C50696 * C20269 + C2294 * C17484 +
             C50826 * C17488) *
                C10776) *
               C15335 +
           ((C20287 + C20286) * C50520 + (C20285 + C20284) * C10776) * C15334 +
           C20288 * C15333) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50862 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50863 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50863 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50862 -
           ((C10775 * C9317 + C10770 * C9321 + C10774 * C3684 + C10769 * C3689 +
             C10773 * C1223 + C10768 * C1229 + C10772 * C481 + C10767 * C495) *
                C50520 +
            (C10775 * C9315 + C10770 * C9318 + C10774 * C3680 + C10769 * C3685 +
             C10773 * C1217 + C10768 * C1224 + C10772 * C465 + C10767 * C480) *
                C10776) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50862 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50863 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50863 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50862 -
           ((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                C2293 +
            (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                C2298 +
            (C2739 + C2738) * C2292 + (C2737 + C2736) * C2297 +
            (C2735 + C2734) * C2291 + (C2733 + C2732) * C2296) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C50862 -
           (C20288 * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50863 +
           (C18438 * C15333 +
            ((C18426 + C18425) * C10776 + (C18424 + C18423) * C50520) * C15334 +
            ((C20284 + C20285) * C10776 + (C20286 + C20287) * C50520) *
                C15335) *
               C2092) *
              C50568 * C50808 +
          ((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
            ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
            ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                C15335) *
               C50863 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C50862 -
           (((C2295 * C16577 + C50696 * C16579 + C2294 * C7346 +
              C50826 * C7351) *
                 C50520 +
             (C2295 * C16576 + C50696 * C16578 + C2294 * C7342 +
              C50826 * C7347) *
                 C10776) *
                C15335 +
            ((C18430 + C18429) * C50520 + (C18428 + C18427) * C10776) * C15334 +
            C18435 * C15333) *
               C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C1676 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C278 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50648 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C1676) *
              C279 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C1676 -
           ((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                C2293 +
            (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                C2298 +
            (C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                C2292 +
            (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                C2297 +
            (C2295 * C4184 + C50696 * C4188 + C2294 * C1572 + C50826 * C1577) *
                C2291 +
            (C2295 * C4179 + C50696 * C4185 + C2294 * C1565 + C50826 * C1573) *
                C2296) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C1676 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50648 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C1676 -
           ((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C2293 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C2298 +
            (C3059 + C3058) * C2292 + (C3057 + C3056) * C2297 + C3046 * C2291 +
            C3047 * C2296) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4180 + C10770 * C4186 + C10774 * C1568 + C10769 * C1575 +
             C10773 * C899 + C10768 * C906 + C10772 * C472 + C10767 * C491) *
                C50520 +
            (C10775 * C4177 + C10770 * C4181 + C10774 * C1563 + C10769 * C1569 +
             C10773 * C891 + C10768 * C898 + C10772 * C461 + C10767 * C473) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C278 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C1676) *
              C279 +
          (((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C11896 + C10770 * C11898 + C10774 * C9813 +
             C10769 * C9816 + C10773 * C4184 + C10768 * C4188 + C10772 * C1572 +
             C10767 * C1577) *
                C50520 +
            (C10775 * C11895 + C10770 * C11897 + C10774 * C9810 +
             C10769 * C9814 + C10773 * C4179 + C10768 * C4185 + C10772 * C1565 +
             C10767 * C1573) *
                C10776) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C1676 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50648) *
              C50568 * C1027 +
          ((((C2731 + C2730) * C10776 + (C2729 + C2728) * C50520) * C15333 +
            ((C2732 + C2733) * C10776 + (C2734 + C2735) * C50520) * C15334 +
            ((C18427 + C18428) * C10776 + (C18429 + C18430) * C50520) *
                C15335) *
               C50648 -
           (C18435 * C15335 +
            ((C2728 + C2729) * C50520 + (C2730 + C2731) * C10776) * C15334 +
            ((C2335 + C2334) * C50520 + (C2333 + C2332) * C10776) * C15333) *
               C1676) *
              C50568 * C1028 +
          (((C2348 * C10776 + C2349 * C50520) * C15333 +
            ((C2727 + C2726) * C10776 + (C2725 + C2724) * C50520) * C15334 +
            ((C2736 + C2737) * C10776 + (C2738 + C2739) * C50520) * C15335) *
               C1676 -
           (((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
                 C50520 +
             (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
                 C10776) *
                C15335 +
            ((C2739 + C2738) * C50520 + (C2737 + C2736) * C10776) * C15334 +
            (C3046 * C50520 + C3047 * C10776) * C15333) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C10776 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C50520) *
                C15333 +
            ((C18415 + C18416) * C10776 + (C18417 + C18418) * C50520) * C15334 +
            C18438 * C15335) *
               C1676 -
           (((C18423 + C18424) * C50520 + (C18425 + C18426) * C10776) * C15335 +
            ((C18422 + C18421) * C50520 + (C18420 + C18419) * C10776) * C15334 +
            ((C18418 + C18417) * C50520 + (C18416 + C18415) * C10776) *
                C15333) *
               C50648) *
              C278 +
          ((((C18949 + C18950) * C10776 + (C18951 + C18952) * C50520) * C15333 +
            ((C18953 + C18954) * C10776 + (C18955 + C18956) * C50520) * C15334 +
            ((C19361 + C19362) * C10776 + (C19363 + C19364) * C50520) *
                C15335) *
               C50648 -
           (C19367 * C15335 +
            ((C18952 + C18951) * C50520 + (C18950 + C18949) * C10776) * C15334 +
            ((C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C50520 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C10776) *
                C15333) *
               C1676) *
              C279 +
          ((((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C10776 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C50520) *
                C15333 +
            ((C19870 + C19871) * C10776 + (C19872 + C19873) * C50520) * C15334 +
            ((C19874 + C19875) * C10776 + (C19876 + C19877) * C50520) *
                C15335) *
               C1676 -
           (((C2295 * C12162 + C50696 * C12164 + C2294 * C10211 +
              C50826 * C10214) *
                 C50520 +
             (C2295 * C12161 + C50696 * C12163 + C2294 * C10208 +
              C50826 * C10212) *
                 C10776) *
                C15335 +
            ((C19877 + C19876) * C50520 + (C19875 + C19874) * C10776) * C15334 +
            ((C19873 + C19872) * C50520 + (C19871 + C19870) * C10776) *
                C15333) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50584 * C50816 -
           (((C7956 * C4184 + C7951 * C4188 + C7955 * C1572 + C7950 * C1577 +
              C7954 * C895 + C7949 * C904) *
                 C50520 +
             (C7956 * C4179 + C7951 * C4185 + C7955 * C1565 + C7950 * C1573 +
              C7954 * C889 + C7949 * C894) *
                 C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50584 * C50620) *
              C50858 +
          ((((C8189 + C8188 + C8187) * C10776 +
             (C8186 + C8185 + C8184) * C50520) *
                C50828 +
            ((C8912 + C8913 + C8914) * C10776 +
             (C8915 + C8916 + C8917) * C50520) *
                C50722) *
               C50584 * C50620 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50584 * C50816) *
              C50859 +
          ((((C8007 + C8006 + C8005) * C10776 +
             (C8004 + C8003 + C8002) * C50520) *
                C50828 +
            ((C8700 + C8701 + C8702) * C10776 +
             (C8703 + C8704 + C8705) * C50520) *
                C50722) *
               C50584 * C50816 -
           (((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50520 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C10776) *
                C50722 +
            ((C8541 + C8540 + C8539) * C50520 +
             (C8538 + C8537 + C8536) * C10776) *
                C50828) *
               C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50584 * C50816 -
           ((C925 * C2293 + C924 * C2298 + C923 * C2292 + C922 * C2297 +
             (C117 * C895 + C50680 * C904) * C2291 +
             (C117 * C889 + C50680 * C894) * C2296) *
                C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C50584 * C50620) *
              C50858 +
          (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
             C349 * C2298 + C348 * C2293) *
                C50828 +
            (C922 * C2296 + C923 * C2291 + C924 * C2297 + C925 * C2292 +
             C926 * C2298 + C927 * C2293) *
                C50722) *
               C50584 * C50620 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C50584 * C50816) *
              C50859 +
          (((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
             C178 * C2298 + C177 * C2293) *
                C50828 +
            (C528 * C2296 + C527 * C2291 + C526 * C2297 + C525 * C2292 +
             C758 * C2298 + C759 * C2293) *
                C50722) *
               C50584 * C50816 -
           (((C117 * C902 + C50680 * C908) * C2293 +
             (C117 * C893 + C50680 * C903) * C2298 + C927 * C2292 +
             C926 * C2297 + C925 * C2291 + C924 * C2296) *
                C50722 +
            (C649 * C2293 + C648 * C2298 + C348 * C2292 + C349 * C2297 +
             C350 * C2291 + C351 * C2296) *
                C50828) *
               C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50584 * C50816 -
           ((C16589 * C50520 + C16588 * C10776) * C20843 +
            (C6451 * C50520 + C6450 * C10776) * C20842 +
            (C6045 * C50520 + C6044 * C10776) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C50584 * C50620) *
              C50858 +
          (((C353 * C10776 + C352 * C50520) * C20840 +
            (C922 * C10776 + C923 * C50520) * C20841 +
            (C6046 * C10776 + C6047 * C50520) * C20842 +
            (C16185 * C10776 + C16186 * C50520) * C20843) *
               C50584 * C50620 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C50584 * C50816) *
              C50859 +
          (((C173 * C10776 + C174 * C50520) * C20840 +
            (C528 * C10776 + C527 * C50520) * C20841 +
            (C533 * C10776 + C534 * C50520) * C20842 +
            (C5524 * C10776 + C5525 * C50520) * C20843) *
               C50584 * C50816 -
           (((C117 * C4582 + C50680 * C4588) * C50520 +
             (C117 * C4579 + C50680 * C4583) * C10776) *
                C20843 +
            (C6049 * C50520 + C6048 * C10776) * C20842 +
            (C925 * C50520 + C924 * C10776) * C20841 +
            (C350 * C50520 + C351 * C10776) * C20840) *
               C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
               C7956 * C287 + C7951 * C301) *
                  C10776 +
              (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
               C7956 * C302 + C7951 * C317) *
                  C50520) *
                 C50828 +
             ((C12906 + C12907 + C12908) * C10776 +
              (C12909 + C12910 + C12911) * C50520) *
                 C50722) *
                C50817 -
            (((C12912 + C12913 + C12914) * C50520 +
              (C12915 + C12916 + C12917) * C10776) *
                 C50722 +
             ((C12911 + C12910 + C12909) * C50520 +
              (C12908 + C12907 + C12906) * C10776) *
                 C50828) *
                C50648) *
               C50816 +
           ((((C13416 + C13417 + C13418) * C10776 +
              (C13419 + C13420 + C13421) * C50520) *
                 C50828 +
             ((C7954 * C1218 + C7949 * C1226 + C7955 * C3681 + C7950 * C3687 +
               C7956 * C9316 + C7951 * C9320) *
                  C10776 +
              (C7954 * C1225 + C7949 * C1230 + C7955 * C3686 + C7950 * C3690 +
               C7956 * C9319 + C7951 * C9322) *
                  C50520) *
                 C50722) *
                C50648 -
            (((C13421 + C13420 + C13419) * C50520 +
              (C13418 + C13417 + C13416) * C10776) *
                 C50722 +
             ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
               C7954 * C299 + C7949 * C316) *
                  C50520 +
              (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
               C7954 * C286 + C7949 * C300) *
                  C10776) *
                 C50828) *
                C50817) *
               C50620) *
              C281 +
          (((((C8371 + C8370 + C8369) * C10776 +
              (C8368 + C8367 + C8366) * C50520) *
                 C50828 +
             ((C8372 + C8373 + C8374) * C10776 +
              (C8375 + C8376 + C8377) * C50520) *
                 C50722) *
                C50648 -
            (((C8366 + C8367 + C8368) * C50520 +
              (C8369 + C8370 + C8371) * C10776) *
                 C50722 +
             ((C8001 + C8000 + C7999) * C50520 +
              (C7998 + C7997 + C7996) * C10776) *
                 C50828) *
                C50817) *
               C50816 +
           ((((C8189 + C8188 + C8187) * C10776 +
              (C8186 + C8185 + C8184) * C50520) *
                 C50828 +
             ((C8912 + C8913 + C8914) * C10776 +
              (C8915 + C8916 + C8917) * C50520) *
                 C50722) *
                C50817 -
            (((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
               C7954 * C1223 + C7949 * C1229) *
                  C50520 +
              (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
               C7954 * C1217 + C7949 * C1224) *
                  C10776) *
                 C50722 +
             ((C8917 + C8916 + C8915) * C50520 +
              (C8914 + C8913 + C8912) * C10776) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C2296 +
              (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
              C172 * C2292 + C173 * C2298 + C174 * C2293) *
                 C50828 +
             (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                C50817 -
            ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
             (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                C50648) *
               C50816 +
           (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
             ((C117 * C1218 + C50680 * C1226) * C2296 +
              (C117 * C1225 + C50680 * C1230) * C2291 + C6046 * C2297 +
              C6047 * C2292 + C6048 * C2298 + C6049 * C2293) *
                 C50722) *
                C50648 -
            ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
             (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
              (C117 * C299 + C50680 * C316) * C2291 +
              (C117 * C286 + C50680 * C300) * C2296) *
                 C50828) *
                C50817) *
               C50620) *
              C281 +
          ((((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
             (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                C50648 -
            ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
             (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
              C172 * C2291 + C171 * C2296) *
                 C50828) *
                C50817) *
               C50816 +
           (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
              C349 * C2298 + C348 * C2293) *
                 C50828 +
             (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                C50817 -
            (((C117 * C1219 + C50680 * C1227) * C2293 +
              (C117 * C1215 + C50680 * C1220) * C2298 + C6049 * C2292 +
              C6048 * C2297 + C6047 * C2291 + C6046 * C2296) *
                 C50722 +
             (C6043 + C6042 + C6041 + C6040 + C6039 + C6038) * C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C10776 +
              (C117 * C130 + C50680 * C143) * C50520) *
                 C20840 +
             (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
                C50817 -
            ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
             (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
                C50648) *
               C50816 +
           (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
             (C21397 + C21398) * C20842 +
             ((C117 * C14724 + C50680 * C14728) * C10776 +
              (C117 * C14726 + C50680 * C14730) * C50520) *
                 C20843) *
                C50648 -
            ((C21398 + C21397) * C20843 + (C21396 + C21395) * C20842 +
             (C21394 + C21393) * C20841 +
             ((C117 * C299 + C50680 * C316) * C50520 +
              (C117 * C286 + C50680 * C300) * C10776) *
                 C20840) *
                C50817) *
               C50620) *
              C281 +
          ((((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
             (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
                C50648 -
            (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
             (C172 * C50520 + C171 * C10776) * C20840) *
                C50817) *
               C50816 +
           (((C353 * C10776 + C352 * C50520) * C20840 +
             (C21399 + C21400) * C20841 + (C21401 + C21402) * C20842 +
             (C21403 + C21404) * C20843) *
                C50817 -
            (((C117 * C16577 + C50680 * C16579) * C50520 +
              (C117 * C16576 + C50680 * C16578) * C10776) *
                 C20843 +
             (C21404 + C21403) * C20842 + (C21402 + C21401) * C20841 +
             (C21400 + C21399) * C20840) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50680 * C129) * C2296 +
                (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                C172 * C2292 + C173 * C2298 + C174 * C2293) *
                   C50828 +
               ((C117 * C463 + C50680 * C477) * C2296 +
                (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                C529 * C2292 + C528 * C2298 + C527 * C2293) *
                   C50722) *
                  C50584 * C50568 * C113 -
              ((C525 * C2293 + C526 * C2298 + C527 * C2292 + C528 * C2297 +
                C529 * C2291 + C530 * C2296) *
                   C50722 +
               (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                C172 * C2291 + C171 * C2296) *
                   C50828) *
                  C50584 * C50568 * C114 +
              ((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
                C178 * C2298 + C177 * C2293) *
                   C50828 +
               (C528 * C2296 + C527 * C2291 + C526 * C2297 + C525 * C2292 +
                C758 * C2298 + C759 * C2293) *
                   C50722) *
                  C50584 * C50568 * C115 -
              (((C117 * C750 + C50680 * C752) * C2293 +
                (C117 * C749 + C50680 * C751) * C2298 + C759 * C2292 +
                C758 * C2297 + C525 * C2291 + C526 * C2296) *
                   C50722 +
               (C180 * C2293 + C179 * C2298 + C177 * C2292 + C178 * C2297 +
                C176 * C2291 + C175 * C2296) *
                   C50828) *
                  C50584 * C50568 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50680 * C129) * C2296 +
                 (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                 C172 * C2292 + C173 * C2298 + C174 * C2293) *
                    C50828 +
                ((C117 * C463 + C50680 * C477) * C2296 +
                 (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                 C529 * C2292 + C528 * C2298 + C527 * C2293) *
                    C50722) *
                   C50584 * C278 -
               ((C925 * C2293 + C924 * C2298 + C923 * C2292 + C922 * C2297 +
                 (C117 * C895 + C50680 * C904) * C2291 +
                 (C117 * C889 + C50680 * C894) * C2296) *
                    C50722 +
                (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
                 (C117 * C299 + C50680 * C316) * C2291 +
                 (C117 * C286 + C50680 * C300) * C2296) *
                    C50828) *
                   C50584 * C279 +
               (((C117 * C287 + C50680 * C301) * C2296 +
                 (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                 C355 * C2292 + C356 * C2298 + C357 * C2293) *
                    C50828 +
                ((C117 * C1565 + C50680 * C1573) * C2296 +
                 (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                 C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                    C50722) *
                   C50584 * C280) *
                  C281 +
              (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
                 C349 * C2298 + C348 * C2293) *
                    C50828 +
                (C922 * C2296 + C923 * C2291 + C924 * C2297 + C925 * C2292 +
                 C926 * C2298 + C927 * C2293) *
                    C50722) *
                   C50584 * C279 -
               ((C525 * C2293 + C526 * C2298 + C527 * C2292 + C528 * C2297 +
                 C529 * C2291 + C530 * C2296) *
                    C50722 +
                (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                 C172 * C2291 + C171 * C2296) *
                    C50828) *
                   C50584 * C278 -
               (((C117 * C1566 + C50680 * C1574) * C2293 +
                 (C117 * C1562 + C50680 * C1567) * C2298 + C5335 * C2292 +
                 C5334 * C2297 + C5333 * C2291 + C5332 * C2296) *
                    C50722 +
                (C359 * C2293 + C358 * C2298 + C357 * C2292 + C356 * C2297 +
                 C355 * C2291 + C354 * C2296) *
                    C50828) *
                   C50584 * C280) *
                  C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C457 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C458 +
           ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
            ((C117 * C1849 + C50680 * C1857) * C2296 +
             (C117 * C1856 + C50680 * C1861) * C2291 + C5522 * C2297 +
             C5523 * C2292 + C5524 * C2298 + C5525 * C2293) *
                C50722) *
               C459) *
              C50568 * C281 +
          (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
            (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
               C458 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C457 -
           (((C117 * C1850 + C50680 * C1858) * C2293 +
             (C117 * C1846 + C50680 * C1851) * C2298 + C5525 * C2292 +
             C5524 * C2297 + C5523 * C2291 + C5522 * C2296) *
                C50722 +
            (C5517 + C5516 + C5515 + C5514 + C5513 + C5512) * C50828) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C10776 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50520) *
               C50828 +
           ((C7954 * C463 + C7949 * C477 + C7955 * C889 + C7950 * C894 +
             C7956 * C1565 + C7951 * C1573) *
                C10776 +
            (C7954 * C476 + C7949 * C493 + C7955 * C895 + C7950 * C904 +
             C7956 * C1572 + C7951 * C1577) *
                C50520) *
               C50722) *
              C50584 * C50568 * C113 -
          (((C8366 + C8367 + C8368) * C50520 +
            (C8369 + C8370 + C8371) * C10776) *
               C50722 +
           ((C8001 + C8000 + C7999) * C50520 +
            (C7998 + C7997 + C7996) * C10776) *
               C50828) *
              C50584 * C50568 * C114 +
          (((C8007 + C8006 + C8005) * C10776 +
            (C8004 + C8003 + C8002) * C50520) *
               C50828 +
           ((C8700 + C8701 + C8702) * C10776 +
            (C8703 + C8704 + C8705) * C50520) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50520 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C10776) *
               C50722 +
           ((C8013 + C8012 + C8011) * C50520 +
            (C8010 + C8009 + C8008) * C10776) *
               C50828) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C7954 * C463 + C7949 * C477 + C7955 * C889 + C7950 * C894 +
              C7956 * C1565 + C7951 * C1573) *
                 C10776 +
             (C7954 * C476 + C7949 * C493 + C7955 * C895 + C7950 * C904 +
              C7956 * C1572 + C7951 * C1577) *
                 C50520) *
                C50722) *
               C50584 * C278 -
           (((C7956 * C4184 + C7951 * C4188 + C7955 * C1572 + C7950 * C1577 +
              C7954 * C895 + C7949 * C904) *
                 C50520 +
             (C7956 * C4179 + C7951 * C4185 + C7955 * C1565 + C7950 * C1573 +
              C7954 * C889 + C7949 * C894) *
                 C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50584 * C279 +
           (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
              C7956 * C3523 + C7951 * C3529) *
                 C10776 +
             (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
              C7956 * C3528 + C7951 * C3532) *
                 C50520) *
                C50828 +
            ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 + C7950 * C4185 +
              C7956 * C9810 + C7951 * C9814) *
                 C10776 +
             (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 + C7950 * C4188 +
              C7956 * C9813 + C7951 * C9816) *
                 C50520) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C8189 + C8188 + C8187) * C10776 +
             (C8186 + C8185 + C8184) * C50520) *
                C50828 +
            ((C8912 + C8913 + C8914) * C10776 +
             (C8915 + C8916 + C8917) * C50520) *
                C50722) *
               C50584 * C279 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50584 * C278 -
           (((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
              C7954 * C1570 + C7949 * C1576) *
                 C50520 +
             (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
              C7954 * C1564 + C7949 * C1571) *
                 C10776) *
                C50722 +
            ((C8195 + C8194 + C8193) * C50520 +
             (C8192 + C8191 + C8190) * C10776) *
                C50828) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C457 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C458 +
           (((C12917 + C12916 + C12915) * C10776 +
             (C12914 + C12913 + C12912) * C50520) *
                C50828 +
            ((C7954 * C1849 + C7949 * C1857 + C7955 * C4581 + C7950 * C4587 +
              C7956 * C10208 + C7951 * C10212) *
                 C10776 +
             (C7954 * C1856 + C7949 * C1861 + C7955 * C4586 + C7950 * C4590 +
              C7956 * C10211 + C7951 * C10214) *
                 C50520) *
                C50722) *
               C459) *
              C50568 * C281 +
          ((((C8371 + C8370 + C8369) * C10776 +
             (C8368 + C8367 + C8366) * C50520) *
                C50828 +
            ((C8372 + C8373 + C8374) * C10776 +
             (C8375 + C8376 + C8377) * C50520) *
                C50722) *
               C458 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C457 -
           (((C7956 * C10209 + C7951 * C10213 + C7955 * C4584 + C7950 * C4589 +
              C7954 * C1854 + C7949 * C1860) *
                 C50520 +
             (C7956 * C10207 + C7951 * C10210 + C7955 * C4580 + C7950 * C4585 +
              C7954 * C1848 + C7949 * C1855) *
                 C10776) *
                C50722 +
            ((C8377 + C8376 + C8375) * C50520 +
             (C8374 + C8373 + C8372) * C10776) *
                C50828) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C117 * C122 + C50680 * C129) * C10776 +
                                (C117 * C130 + C50680 * C143) * C50520) *
                                   C20840 +
                               (C5518 * C10776 + C5519 * C50520) * C20841 +
                               (C5521 * C10776 + C5520 * C50520) * C20842 +
                               (C7362 * C10776 + C7363 * C50520) * C20843) *
                                  C50584 * C50568 * C113 -
                              ((C5523 * C50520 + C5522 * C10776) * C20843 +
                               (C532 * C50520 + C531 * C10776) * C20842 +
                               (C529 * C50520 + C530 * C10776) * C20841 +
                               (C172 * C50520 + C171 * C10776) * C20840) *
                                  C50584 * C50568 * C114 +
                              ((C173 * C10776 + C174 * C50520) * C20840 +
                               (C528 * C10776 + C527 * C50520) * C20841 +
                               (C533 * C10776 + C534 * C50520) * C20842 +
                               (C5524 * C10776 + C5525 * C50520) * C20843) *
                                  C50584 * C50568 * C115 -
                              (((C117 * C1850 + C50680 * C1858) * C50520 +
                                (C117 * C1846 + C50680 * C1851) * C10776) *
                                   C20843 +
                               (C536 * C50520 + C535 * C10776) * C20842 +
                               (C525 * C50520 + C526 * C10776) * C20841 +
                               (C176 * C50520 + C175 * C10776) * C20840) *
                                  C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C117 * C122 + C50680 * C129) * C10776 +
                                 (C117 * C130 + C50680 * C143) * C50520) *
                                    C20840 +
                                (C5518 * C10776 + C5519 * C50520) * C20841 +
                                (C5521 * C10776 + C5520 * C50520) * C20842 +
                                (C7362 * C10776 + C7363 * C50520) * C20843) *
                                   C50584 * C278 -
                               ((C16589 * C50520 + C16588 * C10776) * C20843 +
                                (C6451 * C50520 + C6450 * C10776) * C20842 +
                                (C6045 * C50520 + C6044 * C10776) * C20841 +
                                ((C117 * C299 + C50680 * C316) * C50520 +
                                 (C117 * C286 + C50680 * C300) * C10776) *
                                    C20840) *
                                   C50584 * C279 +
                               (((C117 * C287 + C50680 * C301) * C10776 +
                                 (C117 * C302 + C50680 * C317) * C50520) *
                                    C20840 +
                                (C6948 * C10776 + C6949 * C50520) * C20841 +
                                (C17090 * C10776 + C17091 * C50520) * C20842 +
                                ((C117 * C10208 + C50680 * C10212) * C10776 +
                                 (C117 * C10211 + C50680 * C10214) * C50520) *
                                    C20843) *
                                   C50584 * C280) *
                                  C281 +
                              (((C353 * C10776 + C352 * C50520) * C20840 +
                                (C922 * C10776 + C923 * C50520) * C20841 +
                                (C6046 * C10776 + C6047 * C50520) * C20842 +
                                (C16185 * C10776 + C16186 * C50520) * C20843) *
                                   C50584 * C279 -
                               ((C5523 * C50520 + C5522 * C10776) * C20843 +
                                (C532 * C50520 + C531 * C10776) * C20842 +
                                (C529 * C50520 + C530 * C10776) * C20841 +
                                (C172 * C50520 + C171 * C10776) * C20840) *
                                   C50584 * C278 -
                               (((C117 * C10209 + C50680 * C10213) * C50520 +
                                 (C117 * C10207 + C50680 * C10210) * C10776) *
                                    C20843 +
                                (C15488 * C50520 + C15487 * C10776) * C20842 +
                                (C5333 * C50520 + C5332 * C10776) * C20841 +
                                (C355 * C50520 + C354 * C10776) * C20840) *
                                   C50584 * C280) *
                                  C50555)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C457 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C458 +
           (C21057 * C20840 + C21058 * C20841 + (C21048 + C21047) * C20842 +
            ((C117 * C17484 + C50680 * C17488) * C10776 +
             (C117 * C17487 + C50680 * C17490) * C50520) *
                C20843) *
               C459) *
              C50568 * C281 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
               C458 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C457 -
           (((C117 * C17485 + C50680 * C17489) * C50520 +
             (C117 * C17483 + C50680 * C17486) * C10776) *
                C20843 +
            (C21056 + C21055) * C20842 + C21059 * C20841 + C21060 * C20840) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50817 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50648) *
              C50568 * C50858 +
          ((((C8371 + C8370 + C8369) * C10776 +
             (C8368 + C8367 + C8366) * C50520) *
                C50828 +
            ((C8372 + C8373 + C8374) * C10776 +
             (C8375 + C8376 + C8377) * C50520) *
                C50722) *
               C50648 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50817) *
              C50568 * C50859 +
          ((((C8007 + C8006 + C8005) * C10776 +
             (C8004 + C8003 + C8002) * C50520) *
                C50828 +
            ((C8700 + C8701 + C8702) * C10776 +
             (C8703 + C8704 + C8705) * C50520) *
                C50722) *
               C50817 -
           (((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
              C7954 * C483 + C7949 * C496) *
                 C50520 +
             (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
              C7954 * C466 + C7949 * C482) *
                 C10776) *
                C50722 +
            ((C8705 + C8704 + C8703) * C50520 +
             (C8702 + C8701 + C8700) * C10776) *
                C50828) *
               C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50817 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C50648) *
              C50568 * C50858 +
          (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
            (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
               C50648 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C50817) *
              C50568 * C50859 +
          (((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
             C178 * C2298 + C177 * C2293) *
                C50828 +
            (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
               C50817 -
           (((C117 * C488 + C50680 * C499) * C2293 +
             (C117 * C469 + C50680 * C489) * C2298 + C536 * C2292 +
             C535 * C2297 + C534 * C2291 + C533 * C2296) *
                C50722 +
            (C5827 + C5826 + C5825 + C5824 + C5823 + C5822) * C50828) *
               C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50817 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50648) *
              C50568 * C50858 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
               C50648 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C50817) *
              C50568 * C50859 +
          (((C173 * C10776 + C174 * C50520) * C20840 +
            (C21257 + C21258) * C20841 + (C21259 + C21260) * C20842 +
            (C21261 + C21262) * C20843) *
               C50817 -
           (((C117 * C7344 + C50680 * C7350) * C50520 +
             (C117 * C7341 + C50680 * C7345) * C10776) *
                C20843 +
            (C21262 + C21261) * C20842 + (C21260 + C21259) * C20841 +
            (C21258 + C21257) * C20840) *
               C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     ((C117 * C463 + C50680 * C477) * C2296 +
                      (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                      C529 * C2292 + C528 * C2298 + C527 * C2293) *
                         C50722) *
                        C50584 * C278 -
                    ((C925 * C2293 + C924 * C2298 + C923 * C2292 +
                      C922 * C2297 + (C117 * C895 + C50680 * C904) * C2291 +
                      (C117 * C889 + C50680 * C894) * C2296) *
                         C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C279 +
                    (((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     ((C117 * C1565 + C50680 * C1573) * C2296 +
                      (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                      C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                         C50722) *
                        C50584 * C280) *
                       C281 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C922 * C2296 + C923 * C2291 + C924 * C2297 +
                      C925 * C2292 + C926 * C2298 + C927 * C2293) *
                         C50722) *
                        C50584 * C279 -
                    ((C525 * C2293 + C526 * C2298 + C527 * C2292 +
                      C528 * C2297 + C529 * C2291 + C530 * C2296) *
                         C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C278 -
                    (((C117 * C1566 + C50680 * C1574) * C2293 +
                      (C117 * C1562 + C50680 * C1567) * C2298 + C5335 * C2292 +
                      C5334 * C2297 + C5333 * C2291 + C5332 * C2296) *
                         C50722 +
                     (C359 * C2293 + C358 * C2298 + C357 * C2292 +
                      C356 * C2297 + C355 * C2291 + C354 * C2296) *
                         C50828) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C2296 +
                     (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                     C172 * C2292 + C173 * C2298 + C174 * C2293) *
                        C50828 +
                    ((C117 * C463 + C50680 * C477) * C2296 +
                     (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                     C529 * C2292 + C528 * C2298 + C527 * C2293) *
                        C50722) *
                       C50584 * C50568 * C113 -
                   ((C525 * C2293 + C526 * C2298 + C527 * C2292 + C528 * C2297 +
                     C529 * C2291 + C530 * C2296) *
                        C50722 +
                    (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                     C172 * C2291 + C171 * C2296) *
                        C50828) *
                       C50584 * C50568 * C114 +
                   ((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
                     C178 * C2298 + C177 * C2293) *
                        C50828 +
                    (C528 * C2296 + C527 * C2291 + C526 * C2297 + C525 * C2292 +
                     C758 * C2298 + C759 * C2293) *
                        C50722) *
                       C50584 * C50568 * C115 -
                   (((C117 * C750 + C50680 * C752) * C2293 +
                     (C117 * C749 + C50680 * C751) * C2298 + C759 * C2292 +
                     C758 * C2297 + C525 * C2291 + C526 * C2296) *
                        C50722 +
                    (C180 * C2293 + C179 * C2298 + C177 * C2292 + C178 * C2297 +
                     C176 * C2291 + C175 * C2296) *
                        C50828) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                      C7950 * C300 + C7956 * C287 + C7951 * C301) *
                         C10776 +
                     (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                      C7950 * C316 + C7956 * C302 + C7951 * C317) *
                         C50520) *
                        C50828 +
                    ((C7954 * C463 + C7949 * C477 + C7955 * C889 +
                      C7950 * C894 + C7956 * C1565 + C7951 * C1573) *
                         C10776 +
                     (C7954 * C476 + C7949 * C493 + C7955 * C895 +
                      C7950 * C904 + C7956 * C1572 + C7951 * C1577) *
                         C50520) *
                        C50722) *
                       C50584 * C50568 * C113 -
                   (((C8366 + C8367 + C8368) * C50520 +
                     (C8369 + C8370 + C8371) * C10776) *
                        C50722 +
                    ((C8001 + C8000 + C7999) * C50520 +
                     (C7998 + C7997 + C7996) * C10776) *
                        C50828) *
                       C50584 * C50568 * C114 +
                   (((C8007 + C8006 + C8005) * C10776 +
                     (C8004 + C8003 + C8002) * C50520) *
                        C50828 +
                    ((C8700 + C8701 + C8702) * C10776 +
                     (C8703 + C8704 + C8705) * C50520) *
                        C50722) *
                       C50584 * C50568 * C115 -
                   (((C7956 * C1566 + C7951 * C1574 + C7955 * C901 +
                      C7950 * C907 + C7954 * C470 + C7949 * C490) *
                         C50520 +
                     (C7956 * C1562 + C7951 * C1567 + C7955 * C892 +
                      C7950 * C900 + C7954 * C460 + C7949 * C471) *
                         C10776) *
                        C50722 +
                    ((C8013 + C8012 + C8011) * C50520 +
                     (C8010 + C8009 + C8008) * C10776) *
                        C50828) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C7954 * C463 + C7949 * C477 + C7955 * C889 +
                       C7950 * C894 + C7956 * C1565 + C7951 * C1573) *
                          C10776 +
                      (C7954 * C476 + C7949 * C493 + C7955 * C895 +
                       C7950 * C904 + C7956 * C1572 + C7951 * C1577) *
                          C50520) *
                         C50722) *
                        C50584 * C278 -
                    (((C7956 * C4184 + C7951 * C4188 + C7955 * C1572 +
                       C7950 * C1577 + C7954 * C895 + C7949 * C904) *
                          C50520 +
                      (C7956 * C4179 + C7951 * C4185 + C7955 * C1565 +
                       C7950 * C1573 + C7954 * C889 + C7949 * C894) *
                          C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C279 +
                    (((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 +
                       C7950 * C4185 + C7956 * C9810 + C7951 * C9814) *
                          C10776 +
                      (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 +
                       C7950 * C4188 + C7956 * C9813 + C7951 * C9816) *
                          C50520) *
                         C50722) *
                        C50584 * C280) *
                       C281 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C279 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C278 -
                    (((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 +
                       C7950 * C4187 + C7954 * C1570 + C7949 * C1576) *
                          C50520 +
                      (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 +
                       C7950 * C4183 + C7954 * C1564 + C7949 * C1571) *
                          C10776) *
                         C50722 +
                     ((C8195 + C8194 + C8193) * C50520 +
                      (C8192 + C8191 + C8190) * C10776) *
                         C50828) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C10776 +
                     (C117 * C130 + C50680 * C143) * C50520) *
                        C20840 +
                    (C5518 * C10776 + C5519 * C50520) * C20841 +
                    (C5521 * C10776 + C5520 * C50520) * C20842 +
                    (C7362 * C10776 + C7363 * C50520) * C20843) *
                       C50584 * C50568 * C113 -
                   ((C5523 * C50520 + C5522 * C10776) * C20843 +
                    (C532 * C50520 + C531 * C10776) * C20842 +
                    (C529 * C50520 + C530 * C10776) * C20841 +
                    (C172 * C50520 + C171 * C10776) * C20840) *
                       C50584 * C50568 * C114 +
                   ((C173 * C10776 + C174 * C50520) * C20840 +
                    (C528 * C10776 + C527 * C50520) * C20841 +
                    (C533 * C10776 + C534 * C50520) * C20842 +
                    (C5524 * C10776 + C5525 * C50520) * C20843) *
                       C50584 * C50568 * C115 -
                   (((C117 * C1850 + C50680 * C1858) * C50520 +
                     (C117 * C1846 + C50680 * C1851) * C10776) *
                        C20843 +
                    (C536 * C50520 + C535 * C10776) * C20842 +
                    (C525 * C50520 + C526 * C10776) * C20841 +
                    (C176 * C50520 + C175 * C10776) * C20840) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C10776 +
                      (C117 * C130 + C50680 * C143) * C50520) *
                         C20840 +
                     (C5518 * C10776 + C5519 * C50520) * C20841 +
                     (C5521 * C10776 + C5520 * C50520) * C20842 +
                     (C7362 * C10776 + C7363 * C50520) * C20843) *
                        C50584 * C278 -
                    ((C16589 * C50520 + C16588 * C10776) * C20843 +
                     (C6451 * C50520 + C6450 * C10776) * C20842 +
                     (C6045 * C50520 + C6044 * C10776) * C20841 +
                     ((C117 * C299 + C50680 * C316) * C50520 +
                      (C117 * C286 + C50680 * C300) * C10776) *
                         C20840) *
                        C50584 * C279 +
                    (((C117 * C287 + C50680 * C301) * C10776 +
                      (C117 * C302 + C50680 * C317) * C50520) *
                         C20840 +
                     (C6948 * C10776 + C6949 * C50520) * C20841 +
                     (C17090 * C10776 + C17091 * C50520) * C20842 +
                     ((C117 * C10208 + C50680 * C10212) * C10776 +
                      (C117 * C10211 + C50680 * C10214) * C50520) *
                         C20843) *
                        C50584 * C280) *
                       C281 +
                   (((C353 * C10776 + C352 * C50520) * C20840 +
                     (C922 * C10776 + C923 * C50520) * C20841 +
                     (C6046 * C10776 + C6047 * C50520) * C20842 +
                     (C16185 * C10776 + C16186 * C50520) * C20843) *
                        C50584 * C279 -
                    ((C5523 * C50520 + C5522 * C10776) * C20843 +
                     (C532 * C50520 + C531 * C10776) * C20842 +
                     (C529 * C50520 + C530 * C10776) * C20841 +
                     (C172 * C50520 + C171 * C10776) * C20840) *
                        C50584 * C278 -
                    (((C117 * C10209 + C50680 * C10213) * C50520 +
                      (C117 * C10207 + C50680 * C10210) * C10776) *
                         C20843 +
                     (C15488 * C50520 + C15487 * C10776) * C20842 +
                     (C5333 * C50520 + C5332 * C10776) * C20841 +
                     (C355 * C50520 + C354 * C10776) * C20840) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50584 * C50860 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50584 * C50861 +
           (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
              C7956 * C3523 + C7951 * C3529) *
                 C10776 +
             (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
              C7956 * C3528 + C7951 * C3532) *
                 C50520) *
                C50828 +
            ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 + C7950 * C4185 +
              C7956 * C9810 + C7951 * C9814) *
                 C10776 +
             (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 + C7950 * C4188 +
              C7956 * C9813 + C7951 * C9816) *
                 C50520) *
                C50722) *
               C50584 * C1331) *
              C50808 +
          ((((C8189 + C8188 + C8187) * C10776 +
             (C8186 + C8185 + C8184) * C50520) *
                C50828 +
            ((C8912 + C8913 + C8914) * C10776 +
             (C8915 + C8916 + C8917) * C50520) *
                C50722) *
               C50584 * C50861 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50584 * C50860 -
           (((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
              C7954 * C1570 + C7949 * C1576) *
                 C50520 +
             (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
              C7954 * C1564 + C7949 * C1571) *
                 C10776) *
                C50722 +
            ((C8195 + C8194 + C8193) * C50520 +
             (C8192 + C8191 + C8190) * C10776) *
                C50828) *
               C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50584 * C50860 -
           ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C50584 * C50861 +
           (((C117 * C287 + C50680 * C301) * C2296 +
             (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
             C355 * C2292 + C356 * C2298 + C357 * C2293) *
                C50828 +
            ((C117 * C1565 + C50680 * C1573) * C2296 +
             (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
             C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                C50722) *
               C50584 * C1331) *
              C50808 +
          (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
             C349 * C2298 + C348 * C2293) *
                C50828 +
            (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
               C50584 * C50861 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C50584 * C50860 -
           (((C117 * C1566 + C50680 * C1574) * C2293 +
             (C117 * C1562 + C50680 * C1567) * C2298 + C5335 * C2292 +
             C5334 * C2297 + C5333 * C2291 + C5332 * C2296) *
                C50722 +
            (C359 * C2293 + C358 * C2298 + C357 * C2292 + C356 * C2297 +
             C355 * C2291 + C354 * C2296) *
                C50828) *
               C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50584 * C50860 -
           (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C50584 * C50861 +
           (((C117 * C287 + C50680 * C301) * C10776 +
             (C117 * C302 + C50680 * C317) * C50520) *
                C20840 +
            (C6948 * C10776 + C6949 * C50520) * C20841 +
            (C17090 * C10776 + C17091 * C50520) * C20842 +
            ((C117 * C10208 + C50680 * C10212) * C10776 +
             (C117 * C10211 + C50680 * C10214) * C50520) *
                C20843) *
               C50584 * C1331) *
              C50808 +
          (((C353 * C10776 + C352 * C50520) * C20840 +
            (C21399 + C21400) * C20841 + (C21401 + C21402) * C20842 +
            (C21403 + C21404) * C20843) *
               C50584 * C50861 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C50584 * C50860 -
           (((C117 * C10209 + C50680 * C10213) * C50520 +
             (C117 * C10207 + C50680 * C10210) * C10776) *
                C20843 +
            (C15488 * C50520 + C15487 * C10776) * C20842 +
            (C5333 * C50520 + C5332 * C10776) * C20841 +
            (C355 * C50520 + C354 * C10776) * C20840) *
               C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50817 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50648) *
              C50860 +
          ((((C13416 + C13417 + C13418) * C10776 +
             (C13419 + C13420 + C13421) * C50520) *
                C50828 +
            ((C13824 + C13825 + C13826) * C10776 +
             (C13827 + C13828 + C13829) * C50520) *
                C50722) *
               C50648 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50817) *
              C50861 +
          ((((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
              C7956 * C3523 + C7951 * C3529) *
                 C10776 +
             (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
              C7956 * C3528 + C7951 * C3532) *
                 C50520) *
                C50828 +
            ((C14328 + C14329 + C14330) * C10776 +
             (C14331 + C14332 + C14333) * C50520) *
                C50722) *
               C50817 -
           (((C7956 * C11566 + C7951 * C11568 + C7955 * C9319 + C7950 * C9322 +
              C7954 * C3686 + C7949 * C3690) *
                 C50520 +
             (C7956 * C11565 + C7951 * C11567 + C7955 * C9316 + C7950 * C9320 +
              C7954 * C3681 + C7949 * C3687) *
                 C10776) *
                C50722 +
            ((C14333 + C14332 + C14331) * C50520 +
             (C14330 + C14329 + C14328) * C10776) *
                C50828) *
               C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50817 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C50648) *
              C50860 +
          (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
            (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
               C50648 -
           ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C50817) *
              C50861 +
          ((((C117 * C287 + C50680 * C301) * C2296 +
             (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
             C355 * C2292 + C356 * C2298 + C357 * C2293) *
                C50828 +
            (C6950 + C6951 + C6944 + C6945 + C6946 + C6947) * C50722) *
               C50817 -
           (((C117 * C3682 + C50680 * C3688) * C2293 +
             (C117 * C3679 + C50680 * C3683) * C2298 +
             (C117 * C3684 + C50680 * C3689) * C2292 +
             (C117 * C3680 + C50680 * C3685) * C2297 +
             (C117 * C3686 + C50680 * C3690) * C2291 +
             (C117 * C3681 + C50680 * C3687) * C2296) *
                C50722 +
            (C6947 + C6946 + C6945 + C6944 + C6951 + C6950) * C50828) *
               C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50817 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50648) *
              C50860 +
          (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
            (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
               C50648 -
           (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C50817) *
              C50861 +
          ((((C117 * C287 + C50680 * C301) * C10776 +
             (C117 * C302 + C50680 * C317) * C50520) *
                C20840 +
            (C22003 + C22004) * C20841 + (C22005 + C22006) * C20842 +
            (C22013 + C22014) * C20843) *
               C50817 -
           (((C117 * C14725 + C50680 * C14729) * C50520 +
             (C117 * C14723 + C50680 * C14727) * C10776) *
                C20843 +
            (C22014 + C22013) * C20842 + (C22006 + C22005) * C20841 +
            (C22004 + C22003) * C20840) *
               C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50680 * C129) * C2296 +
                 (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                 C172 * C2292 + C173 * C2298 + C174 * C2293) *
                    C50828 +
                (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                   C50584 * C1025 -
               ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
                 (C117 * C299 + C50680 * C316) * C2291 +
                 (C117 * C286 + C50680 * C300) * C2296) *
                    C50828) *
                   C50584 * C50620) *
                  C1027 +
              (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
                 C349 * C2298 + C348 * C2293) *
                    C50828 +
                (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                   C50584 * C50620 -
               ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                 C172 * C2291 + C171 * C2296) *
                    C50828) *
                   C50584 * C1025) *
                  C1028 +
              (((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
                 C178 * C2298 + C177 * C2293) *
                    C50828 +
                (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                   C50584 * C1025 -
               (((C117 * C902 + C50680 * C908) * C2293 +
                 (C117 * C893 + C50680 * C903) * C2298 + C927 * C2292 +
                 C926 * C2297 + C925 * C2291 + C924 * C2296) *
                    C50722 +
                (C649 * C2293 + C648 * C2298 + C348 * C2292 + C349 * C2297 +
                 C350 * C2291 + C351 * C2296) *
                    C50828) *
                   C50584 * C50620) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50680 * C129) * C2296 +
                (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                C172 * C2292 + C173 * C2298 + C174 * C2293) *
                   C50828 +
               (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                  C50584 * C1096 -
              ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
               (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
                (C117 * C299 + C50680 * C316) * C2291 +
                (C117 * C286 + C50680 * C300) * C2296) *
                   C50828) *
                  C50584 * C1097 +
              (((C117 * C287 + C50680 * C301) * C2296 +
                (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                C355 * C2292 + C356 * C2298 + C357 * C2293) *
                   C50828 +
               ((C117 * C1565 + C50680 * C1573) * C2296 +
                (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                   C50722) *
                  C50584 * C1098 -
              (((C117 * C4180 + C50680 * C4186) * C2293 +
                (C117 * C4177 + C50680 * C4181) * C2298 +
                (C117 * C4182 + C50680 * C4187) * C2292 +
                (C117 * C4178 + C50680 * C4183) * C2297 +
                (C117 * C4184 + C50680 * C4188) * C2291 +
                (C117 * C4179 + C50680 * C4185) * C2296) *
                   C50722 +
               ((C117 * C1107 + C50680 * C1114) * C2293 +
                (C117 * C1102 + C50680 * C1108) * C2298 +
                (C117 * C1109 + C50680 * C1115) * C2292 +
                (C117 * C1103 + C50680 * C1110) * C2297 +
                (C117 * C1111 + C50680 * C1116) * C2291 +
                (C117 * C1104 + C50680 * C1112) * C2296) *
                   C50828) *
                  C50584 * C1099) *
             C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C457 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C458 +
           ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
            ((C117 * C1849 + C50680 * C1857) * C2296 +
             (C117 * C1856 + C50680 * C1861) * C2291 + C5522 * C2297 +
             C5523 * C2292 + C5524 * C2298 + C5525 * C2293) *
                C50722) *
               C459) *
              C1025 +
          (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
            (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
               C458 -
           ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C457 -
           (((C117 * C4582 + C50680 * C4588) * C2293 +
             (C117 * C4579 + C50680 * C4583) * C2298 +
             (C117 * C4584 + C50680 * C4589) * C2292 +
             (C117 * C4580 + C50680 * C4585) * C2297 +
             (C117 * C4586 + C50680 * C4590) * C2291 +
             (C117 * C4581 + C50680 * C4587) * C2296) *
                C50722 +
            (C6449 + C6448 + C6447 + C6446 + C6453 + C6452) * C50828) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50584 * C1025 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50584 * C50620) *
              C1027 +
          ((((C8189 + C8188 + C8187) * C10776 +
             (C8186 + C8185 + C8184) * C50520) *
                C50828 +
            ((C8912 + C8913 + C8914) * C10776 +
             (C8915 + C8916 + C8917) * C50520) *
                C50722) *
               C50584 * C50620 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50584 * C1025) *
              C1028 +
          ((((C8007 + C8006 + C8005) * C10776 +
             (C8004 + C8003 + C8002) * C50520) *
                C50828 +
            ((C8700 + C8701 + C8702) * C10776 +
             (C8703 + C8704 + C8705) * C50520) *
                C50722) *
               C50584 * C1025 -
           (((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50520 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C10776) *
                C50722 +
            ((C8541 + C8540 + C8539) * C50520 +
             (C8538 + C8537 + C8536) * C10776) *
                C50828) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C10776 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50520) *
               C50828 +
           ((C12906 + C12907 + C12908) * C10776 +
            (C12909 + C12910 + C12911) * C50520) *
               C50722) *
              C50584 * C1096 -
          (((C13421 + C13420 + C13419) * C50520 +
            (C13418 + C13417 + C13416) * C10776) *
               C50722 +
           ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50520 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C10776) *
               C50828) *
              C50584 * C1097 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C10776 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50520) *
               C50828 +
           ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 + C7950 * C4185 +
             C7956 * C9810 + C7951 * C9814) *
                C10776 +
            (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 + C7950 * C4188 +
             C7956 * C9813 + C7951 * C9816) *
                C50520) *
               C50722) *
              C50584 * C1098 -
          (((C7956 * C11896 + C7951 * C11898 + C7955 * C9813 + C7950 * C9816 +
             C7954 * C4184 + C7949 * C4188) *
                C50520 +
            (C7956 * C11895 + C7951 * C11897 + C7955 * C9810 + C7950 * C9814 +
             C7954 * C4179 + C7949 * C4185) *
                C10776) *
               C50722 +
           ((C7956 * C9165 + C7951 * C9168 + C7955 * C3528 + C7950 * C3532 +
             C7954 * C1111 + C7949 * C1116) *
                C50520 +
            (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 + C7950 * C3529 +
             C7954 * C1104 + C7949 * C1112) *
                C10776) *
               C50828) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C457 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C458 +
           (((C12917 + C12916 + C12915) * C10776 +
             (C12914 + C12913 + C12912) * C50520) *
                C50828 +
            ((C7954 * C1849 + C7949 * C1857 + C7955 * C4581 + C7950 * C4587 +
              C7956 * C10208 + C7951 * C10212) *
                 C10776 +
             (C7954 * C1856 + C7949 * C1861 + C7955 * C4586 + C7950 * C4590 +
              C7956 * C10211 + C7951 * C10214) *
                 C50520) *
                C50722) *
               C459) *
              C1025 +
          ((((C13416 + C13417 + C13418) * C10776 +
             (C13419 + C13420 + C13421) * C50520) *
                C50828 +
            ((C13824 + C13825 + C13826) * C10776 +
             (C13827 + C13828 + C13829) * C50520) *
                C50722) *
               C458 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C457 -
           (((C7956 * C12162 + C7951 * C12164 + C7955 * C10211 +
              C7950 * C10214 + C7954 * C4586 + C7949 * C4590) *
                 C50520 +
             (C7956 * C12161 + C7951 * C12163 + C7955 * C10208 +
              C7950 * C10212 + C7954 * C4581 + C7949 * C4587) *
                 C10776) *
                C50722 +
            ((C13829 + C13828 + C13827) * C50520 +
             (C13826 + C13825 + C13824) * C10776) *
                C50828) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50584 * C1025 -
           ((C21398 + C21397) * C20843 + (C21396 + C21395) * C20842 +
            (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C10776 + C352 * C50520) * C20840 +
            (C21399 + C21400) * C20841 + (C21401 + C21402) * C20842 +
            (C21403 + C21404) * C20843) *
               C50584 * C50620 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C10776 + C174 * C50520) * C20840 +
            (C21257 + C21258) * C20841 + (C21259 + C21260) * C20842 +
            (C21261 + C21262) * C20843) *
               C50584 * C1025 -
           (((C117 * C4582 + C50680 * C4588) * C50520 +
             (C117 * C4579 + C50680 * C4583) * C10776) *
                C20843 +
            (C6049 * C50520 + C6048 * C10776) * C20842 +
            (C925 * C50520 + C924 * C10776) * C20841 +
            (C350 * C50520 + C351 * C10776) * C20840) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C10776 +
            (C117 * C130 + C50680 * C143) * C50520) *
               C20840 +
           (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
              C50584 * C1096 -
          ((C21398 + C21397) * C20843 + (C21396 + C21395) * C20842 +
           (C21394 + C21393) * C20841 +
           ((C117 * C299 + C50680 * C316) * C50520 +
            (C117 * C286 + C50680 * C300) * C10776) *
               C20840) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C10776 +
            (C117 * C302 + C50680 * C317) * C50520) *
               C20840 +
           (C6948 * C10776 + C6949 * C50520) * C20841 +
           (C17090 * C10776 + C17091 * C50520) * C20842 +
           ((C117 * C10208 + C50680 * C10212) * C10776 +
            (C117 * C10211 + C50680 * C10214) * C50520) *
               C20843) *
              C50584 * C1098 -
          (((C117 * C12162 + C50680 * C12164) * C50520 +
            (C117 * C12161 + C50680 * C12163) * C10776) *
               C20843 +
           ((C117 * C9319 + C50680 * C9322) * C50520 +
            (C117 * C9316 + C50680 * C9320) * C10776) *
               C20842 +
           ((C117 * C4184 + C50680 * C4188) * C50520 +
            (C117 * C4179 + C50680 * C4185) * C10776) *
               C20841 +
           ((C117 * C1111 + C50680 * C1116) * C50520 +
            (C117 * C1104 + C50680 * C1112) * C10776) *
               C20840) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C457 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C458 +
           (C21057 * C20840 + C21058 * C20841 + (C21048 + C21047) * C20842 +
            ((C117 * C17484 + C50680 * C17488) * C10776 +
             (C117 * C17487 + C50680 * C17490) * C50520) *
                C20843) *
               C459) *
              C1025 +
          (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
            (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
               C458 -
           (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C457 -
           (((C117 * C20268 + C50680 * C20270) * C50520 +
             (C117 * C20267 + C50680 * C20269) * C10776) *
                C20843 +
            (C21676 + C21675) * C20842 + C21671 * C20841 + C21672 * C20840) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
               C7956 * C287 + C7951 * C301) *
                  C10776 +
              (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
               C7956 * C302 + C7951 * C317) *
                  C50520) *
                 C50828 +
             ((C12906 + C12907 + C12908) * C10776 +
              (C12909 + C12910 + C12911) * C50520) *
                 C50722) *
                C50817 -
            (((C12912 + C12913 + C12914) * C50520 +
              (C12915 + C12916 + C12917) * C10776) *
                 C50722 +
             ((C12911 + C12910 + C12909) * C50520 +
              (C12908 + C12907 + C12906) * C10776) *
                 C50828) *
                C50648) *
               C1025 +
           ((((C13416 + C13417 + C13418) * C10776 +
              (C13419 + C13420 + C13421) * C50520) *
                 C50828 +
             ((C13824 + C13825 + C13826) * C10776 +
              (C13827 + C13828 + C13829) * C50520) *
                 C50722) *
                C50648 -
            (((C13421 + C13420 + C13419) * C50520 +
              (C13418 + C13417 + C13416) * C10776) *
                 C50722 +
             ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
               C7954 * C299 + C7949 * C316) *
                  C50520 +
              (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
               C7954 * C286 + C7949 * C300) *
                  C10776) *
                 C50828) *
                C50817) *
               C50620) *
              C50808 +
          (((((C8371 + C8370 + C8369) * C10776 +
              (C8368 + C8367 + C8366) * C50520) *
                 C50828 +
             ((C8372 + C8373 + C8374) * C10776 +
              (C8375 + C8376 + C8377) * C50520) *
                 C50722) *
                C50648 -
            (((C8366 + C8367 + C8368) * C50520 +
              (C8369 + C8370 + C8371) * C10776) *
                 C50722 +
             ((C8001 + C8000 + C7999) * C50520 +
              (C7998 + C7997 + C7996) * C10776) *
                 C50828) *
                C50817) *
               C1025 +
           ((((C8189 + C8188 + C8187) * C10776 +
              (C8186 + C8185 + C8184) * C50520) *
                 C50828 +
             ((C8912 + C8913 + C8914) * C10776 +
              (C8915 + C8916 + C8917) * C50520) *
                 C50722) *
                C50817 -
            (((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
               C7954 * C1223 + C7949 * C1229) *
                  C50520 +
              (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
               C7954 * C1217 + C7949 * C1224) *
                  C10776) *
                 C50722 +
             ((C8917 + C8916 + C8915) * C50520 +
              (C8914 + C8913 + C8912) * C10776) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C2296 +
              (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
              C172 * C2292 + C173 * C2298 + C174 * C2293) *
                 C50828 +
             (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                C50817 -
            ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
             (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                C50648) *
               C1025 +
           (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
             (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                C50648 -
            ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
             (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
              (C117 * C299 + C50680 * C316) * C2291 +
              (C117 * C286 + C50680 * C300) * C2296) *
                 C50828) *
                C50817) *
               C50620) *
              C50808 +
          ((((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
             (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                C50648 -
            ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
             (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
              C172 * C2291 + C171 * C2296) *
                 C50828) *
                C50817) *
               C1025 +
           (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
              C349 * C2298 + C348 * C2293) *
                 C50828 +
             (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                C50817 -
            (((C117 * C1219 + C50680 * C1227) * C2293 +
              (C117 * C1215 + C50680 * C1220) * C2298 + C6049 * C2292 +
              C6048 * C2297 + C6047 * C2291 + C6046 * C2296) *
                 C50722 +
             (C6043 + C6042 + C6041 + C6040 + C6039 + C6038) * C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C10776 +
              (C117 * C130 + C50680 * C143) * C50520) *
                 C20840 +
             (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
                C50817 -
            ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
             (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
                C50648) *
               C1025 +
           (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
             (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
                C50648 -
            (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
             ((C117 * C299 + C50680 * C316) * C50520 +
              (C117 * C286 + C50680 * C300) * C10776) *
                 C20840) *
                C50817) *
               C50620) *
              C50808 +
          ((((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
             (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
                C50648 -
            (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
             (C172 * C50520 + C171 * C10776) * C20840) *
                C50817) *
               C1025 +
           (((C353 * C10776 + C352 * C50520) * C20840 +
             (C21399 + C21400) * C20841 + (C21401 + C21402) * C20842 +
             (C21403 + C21404) * C20843) *
                C50817 -
            (((C117 * C16577 + C50680 * C16579) * C50520 +
              (C117 * C16576 + C50680 * C16578) * C10776) *
                 C20843 +
             (C21404 + C21403) * C20842 + (C21402 + C21401) * C20841 +
             (C21400 + C21399) * C20840) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C2296 +
            (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
            C172 * C2292 + C173 * C2298 + C174 * C2293) *
               C50828 +
           (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
              C50584 * C1096 -
          ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
           (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
            (C117 * C299 + C50680 * C316) * C2291 +
            (C117 * C286 + C50680 * C300) * C2296) *
               C50828) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C2296 +
            (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
            C355 * C2292 + C356 * C2298 + C357 * C2293) *
               C50828 +
           ((C117 * C1565 + C50680 * C1573) * C2296 +
            (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
            C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
               C50722) *
              C50584 * C1098 -
          (((C117 * C4180 + C50680 * C4186) * C2293 +
            (C117 * C4177 + C50680 * C4181) * C2298 +
            (C117 * C4182 + C50680 * C4187) * C2292 +
            (C117 * C4178 + C50680 * C4183) * C2297 +
            (C117 * C4184 + C50680 * C4188) * C2291 +
            (C117 * C4179 + C50680 * C4185) * C2296) *
               C50722 +
           ((C117 * C1107 + C50680 * C1114) * C2293 +
            (C117 * C1102 + C50680 * C1108) * C2298 +
            (C117 * C1109 + C50680 * C1115) * C2292 +
            (C117 * C1103 + C50680 * C1110) * C2297 +
            (C117 * C1111 + C50680 * C1116) * C2291 +
            (C117 * C1104 + C50680 * C1112) * C2296) *
               C50828) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50584 * C1025 -
           ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
             C349 * C2298 + C348 * C2293) *
                C50828 +
            (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
               C50584 * C50620 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
             C178 * C2298 + C177 * C2293) *
                C50828 +
            (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
               C50584 * C1025 -
           (((C117 * C902 + C50680 * C908) * C2293 +
             (C117 * C893 + C50680 * C903) * C2298 + C927 * C2292 +
             C926 * C2297 + C925 * C2291 + C924 * C2296) *
                C50722 +
            (C649 * C2293 + C648 * C2298 + C348 * C2292 + C349 * C2297 +
             C350 * C2291 + C351 * C2296) *
                C50828) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50584 * C1025 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50584 * C50620) *
              C1027 +
          ((((C8189 + C8188 + C8187) * C10776 +
             (C8186 + C8185 + C8184) * C50520) *
                C50828 +
            ((C8912 + C8913 + C8914) * C10776 +
             (C8915 + C8916 + C8917) * C50520) *
                C50722) *
               C50584 * C50620 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50584 * C1025) *
              C1028 +
          ((((C8007 + C8006 + C8005) * C10776 +
             (C8004 + C8003 + C8002) * C50520) *
                C50828 +
            ((C8700 + C8701 + C8702) * C10776 +
             (C8703 + C8704 + C8705) * C50520) *
                C50722) *
               C50584 * C1025 -
           (((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50520 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C10776) *
                C50722 +
            ((C8541 + C8540 + C8539) * C50520 +
             (C8538 + C8537 + C8536) * C10776) *
                C50828) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C10776 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50520) *
               C50828 +
           ((C12906 + C12907 + C12908) * C10776 +
            (C12909 + C12910 + C12911) * C50520) *
               C50722) *
              C50584 * C1096 -
          (((C13421 + C13420 + C13419) * C50520 +
            (C13418 + C13417 + C13416) * C10776) *
               C50722 +
           ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50520 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C10776) *
               C50828) *
              C50584 * C1097 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C10776 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50520) *
               C50828 +
           ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 + C7950 * C4185 +
             C7956 * C9810 + C7951 * C9814) *
                C10776 +
            (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 + C7950 * C4188 +
             C7956 * C9813 + C7951 * C9816) *
                C50520) *
               C50722) *
              C50584 * C1098 -
          (((C7956 * C11896 + C7951 * C11898 + C7955 * C9813 + C7950 * C9816 +
             C7954 * C4184 + C7949 * C4188) *
                C50520 +
            (C7956 * C11895 + C7951 * C11897 + C7955 * C9810 + C7950 * C9814 +
             C7954 * C4179 + C7949 * C4185) *
                C10776) *
               C50722 +
           ((C7956 * C9165 + C7951 * C9168 + C7955 * C3528 + C7950 * C3532 +
             C7954 * C1111 + C7949 * C1116) *
                C50520 +
            (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 + C7950 * C3529 +
             C7954 * C1104 + C7949 * C1112) *
                C10776) *
               C50828) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50584 * C1025 -
           ((C21398 + C21397) * C20843 + (C21396 + C21395) * C20842 +
            (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C10776 + C352 * C50520) * C20840 +
            (C21399 + C21400) * C20841 + (C21401 + C21402) * C20842 +
            (C21403 + C21404) * C20843) *
               C50584 * C50620 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C10776 + C174 * C50520) * C20840 +
            (C21257 + C21258) * C20841 + (C21259 + C21260) * C20842 +
            (C21261 + C21262) * C20843) *
               C50584 * C1025 -
           (((C117 * C4582 + C50680 * C4588) * C50520 +
             (C117 * C4579 + C50680 * C4583) * C10776) *
                C20843 +
            (C6049 * C50520 + C6048 * C10776) * C20842 +
            (C925 * C50520 + C924 * C10776) * C20841 +
            (C350 * C50520 + C351 * C10776) * C20840) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C10776 +
            (C117 * C130 + C50680 * C143) * C50520) *
               C20840 +
           (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
              C50584 * C1096 -
          ((C21398 + C21397) * C20843 + (C21396 + C21395) * C20842 +
           (C21394 + C21393) * C20841 +
           ((C117 * C299 + C50680 * C316) * C50520 +
            (C117 * C286 + C50680 * C300) * C10776) *
               C20840) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C10776 +
            (C117 * C302 + C50680 * C317) * C50520) *
               C20840 +
           (C6948 * C10776 + C6949 * C50520) * C20841 +
           (C17090 * C10776 + C17091 * C50520) * C20842 +
           ((C117 * C10208 + C50680 * C10212) * C10776 +
            (C117 * C10211 + C50680 * C10214) * C50520) *
               C20843) *
              C50584 * C1098 -
          (((C117 * C12162 + C50680 * C12164) * C50520 +
            (C117 * C12161 + C50680 * C12163) * C10776) *
               C20843 +
           ((C117 * C9319 + C50680 * C9322) * C50520 +
            (C117 * C9316 + C50680 * C9320) * C10776) *
               C20842 +
           ((C117 * C4184 + C50680 * C4188) * C50520 +
            (C117 * C4179 + C50680 * C4185) * C10776) *
               C20841 +
           ((C117 * C1111 + C50680 * C1116) * C50520 +
            (C117 * C1104 + C50680 * C1112) * C10776) *
               C20840) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
               C7956 * C287 + C7951 * C301) *
                  C10776 +
              (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
               C7956 * C302 + C7951 * C317) *
                  C50520) *
                 C50828 +
             ((C12906 + C12907 + C12908) * C10776 +
              (C12909 + C12910 + C12911) * C50520) *
                 C50722) *
                C1676 -
            (((C12912 + C12913 + C12914) * C50520 +
              (C12915 + C12916 + C12917) * C10776) *
                 C50722 +
             ((C12911 + C12910 + C12909) * C50520 +
              (C12908 + C12907 + C12906) * C10776) *
                 C50828) *
                C50648) *
               C50816 +
           ((((C13416 + C13417 + C13418) * C10776 +
              (C13419 + C13420 + C13421) * C50520) *
                 C50828 +
             ((C13824 + C13825 + C13826) * C10776 +
              (C13827 + C13828 + C13829) * C50520) *
                 C50722) *
                C50648 -
            (((C13421 + C13420 + C13419) * C50520 +
              (C13418 + C13417 + C13416) * C10776) *
                 C50722 +
             ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
               C7954 * C299 + C7949 * C316) *
                  C50520 +
              (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
               C7954 * C286 + C7949 * C300) *
                  C10776) *
                 C50828) *
                C1676) *
               C50620) *
              C50808 +
          (((((C8371 + C8370 + C8369) * C10776 +
              (C8368 + C8367 + C8366) * C50520) *
                 C50828 +
             ((C8372 + C8373 + C8374) * C10776 +
              (C8375 + C8376 + C8377) * C50520) *
                 C50722) *
                C50648 -
            (((C8366 + C8367 + C8368) * C50520 +
              (C8369 + C8370 + C8371) * C10776) *
                 C50722 +
             ((C8001 + C8000 + C7999) * C50520 +
              (C7998 + C7997 + C7996) * C10776) *
                 C50828) *
                C1676) *
               C50816 +
           ((((C8189 + C8188 + C8187) * C10776 +
              (C8186 + C8185 + C8184) * C50520) *
                 C50828 +
             ((C8912 + C8913 + C8914) * C10776 +
              (C8915 + C8916 + C8917) * C50520) *
                 C50722) *
                C1676 -
            (((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
               C7954 * C1223 + C7949 * C1229) *
                  C50520 +
              (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
               C7954 * C1217 + C7949 * C1224) *
                  C10776) *
                 C50722 +
             ((C8917 + C8916 + C8915) * C50520 +
              (C8914 + C8913 + C8912) * C10776) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C2296 +
              (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
              C172 * C2292 + C173 * C2298 + C174 * C2293) *
                 C50828 +
             (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                C1676 -
            ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
             (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                C50648) *
               C50816 +
           (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
             (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                C50648 -
            ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
             (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
              (C117 * C299 + C50680 * C316) * C2291 +
              (C117 * C286 + C50680 * C300) * C2296) *
                 C50828) *
                C1676) *
               C50620) *
              C50808 +
          ((((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
             (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                C50648 -
            ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
             (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
              C172 * C2291 + C171 * C2296) *
                 C50828) *
                C1676) *
               C50816 +
           (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
              C349 * C2298 + C348 * C2293) *
                 C50828 +
             (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                C1676 -
            (((C117 * C1219 + C50680 * C1227) * C2293 +
              (C117 * C1215 + C50680 * C1220) * C2298 + C6049 * C2292 +
              C6048 * C2297 + C6047 * C2291 + C6046 * C2296) *
                 C50722 +
             (C6043 + C6042 + C6041 + C6040 + C6039 + C6038) * C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C10776 +
              (C117 * C130 + C50680 * C143) * C50520) *
                 C20840 +
             (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
                C1676 -
            (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
             (C21042 + C21041) * C20840) *
                C50648) *
               C50816 +
           (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
             (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
                C50648 -
            (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
             ((C117 * C299 + C50680 * C316) * C50520 +
              (C117 * C286 + C50680 * C300) * C10776) *
                 C20840) *
                C1676) *
               C50620) *
              C50808 +
          ((((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
             (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
                C50648 -
            (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
             (C172 * C50520 + C171 * C10776) * C20840) *
                C1676) *
               C50816 +
           (((C353 * C10776 + C352 * C50520) * C20840 +
             (C21399 + C21400) * C20841 + (C21401 + C21402) * C20842 +
             (C21403 + C21404) * C20843) *
                C1676 -
            (((C117 * C16577 + C50680 * C16579) * C50520 +
              (C117 * C16576 + C50680 * C16578) * C10776) *
                 C20843 +
             (C21404 + C21403) * C20842 + (C21402 + C21401) * C20841 +
             (C21400 + C21399) * C20840) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50862 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50863 +
           (((C12917 + C12916 + C12915) * C10776 +
             (C12914 + C12913 + C12912) * C50520) *
                C50828 +
            ((C14744 + C14745 + C14746) * C10776 +
             (C14747 + C14748 + C14749) * C50520) *
                C50722) *
               C2092) *
              C50816 +
          ((((C13416 + C13417 + C13418) * C10776 +
             (C13419 + C13420 + C13421) * C50520) *
                C50828 +
            ((C13824 + C13825 + C13826) * C10776 +
             (C13827 + C13828 + C13829) * C50520) *
                C50722) *
               C50863 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C50862 -
           (((C7956 * C12162 + C7951 * C12164 + C7955 * C10211 +
              C7950 * C10214 + C7954 * C4586 + C7949 * C4590) *
                 C50520 +
             (C7956 * C12161 + C7951 * C12163 + C7955 * C10208 +
              C7950 * C10212 + C7954 * C4581 + C7949 * C4587) *
                 C10776) *
                C50722 +
            ((C13829 + C13828 + C13827) * C50520 +
             (C13826 + C13825 + C13824) * C10776) *
                C50828) *
               C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50862 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C50863 +
           ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
            (C7364 + C7365 + C7358 + C7359 + C7360 + C7361) * C50722) *
               C2092) *
              C50816 +
          (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
            (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
               C50863 -
           ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C50862 -
           (((C117 * C4582 + C50680 * C4588) * C2293 +
             (C117 * C4579 + C50680 * C4583) * C2298 +
             (C117 * C4584 + C50680 * C4589) * C2292 +
             (C117 * C4580 + C50680 * C4585) * C2297 +
             (C117 * C4586 + C50680 * C4590) * C2291 +
             (C117 * C4581 + C50680 * C4587) * C2296) *
                C50722 +
            (C6449 + C6448 + C6447 + C6446 + C6453 + C6452) * C50828) *
               C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50862 -
           (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
            (C21042 + C21041) * C20840) *
               C50863 +
           (C21057 * C20840 + C21058 * C20841 + (C21048 + C21047) * C20842 +
            (C22289 + C22290) * C20843) *
               C2092) *
              C50816 +
          (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
            (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
               C50863 -
           (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C50862 -
           (((C117 * C20268 + C50680 * C20270) * C50520 +
             (C117 * C20267 + C50680 * C20269) * C10776) *
                C20843 +
            (C21676 + C21675) * C20842 + C21671 * C20841 + C21672 * C20840) *
               C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50680 * C129) * C2296 +
                 (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                 C172 * C2292 + C173 * C2298 + C174 * C2293) *
                    C50828 +
                (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                   C1676 -
               ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                   C50648) *
                  C50568 * C1027 +
              (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
                (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                   C50648 -
               ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                 C172 * C2291 + C171 * C2296) *
                    C50828) *
                   C1676) *
                  C50568 * C1028 +
              (((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
                 C178 * C2298 + C177 * C2293) *
                    C50828 +
                (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                   C1676 -
               (((C117 * C488 + C50680 * C499) * C2293 +
                 (C117 * C469 + C50680 * C489) * C2298 + C536 * C2292 +
                 C535 * C2297 + C534 * C2291 + C533 * C2296) *
                    C50722 +
                (C5827 + C5826 + C5825 + C5824 + C5823 + C5822) * C50828) *
                   C50648) *
                  C50568 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50680 * C129) * C2296 +
                 (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                 C172 * C2292 + C173 * C2298 + C174 * C2293) *
                    C50828 +
                (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                   C1676 -
               ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                   C50648) *
                  C278 +
              (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
                (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                   C50648 -
               ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
                 (C117 * C299 + C50680 * C316) * C2291 +
                 (C117 * C286 + C50680 * C300) * C2296) *
                    C50828) *
                   C1676) *
                  C279 +
              ((((C117 * C287 + C50680 * C301) * C2296 +
                 (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                 C355 * C2292 + C356 * C2298 + C357 * C2293) *
                    C50828 +
                (C6950 + C6951 + C6944 + C6945 + C6946 + C6947) * C50722) *
                   C1676 -
               (((C117 * C3682 + C50680 * C3688) * C2293 +
                 (C117 * C3679 + C50680 * C3683) * C2298 +
                 (C117 * C3684 + C50680 * C3689) * C2292 +
                 (C117 * C3680 + C50680 * C3685) * C2297 +
                 (C117 * C3686 + C50680 * C3690) * C2291 +
                 (C117 * C3681 + C50680 * C3687) * C2296) *
                    C50722 +
                (C6947 + C6946 + C6945 + C6944 + C6951 + C6950) * C50828) *
                   C50648) *
                  C280) *
             C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C2296 +
            (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
            C172 * C2292 + C173 * C2298 + C174 * C2293) *
               C50828 +
           (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
              C1842 -
          ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
           (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
              C1843 +
          ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
           (C7364 + C7365 + C7358 + C7359 + C7360 + C7361) * C50722) *
              C1844 -
          (((C117 * C7344 + C50680 * C7350) * C2293 +
            (C117 * C7341 + C50680 * C7345) * C2298 +
            (C117 * C7346 + C50680 * C7351) * C2292 +
            (C117 * C7342 + C50680 * C7347) * C2297 +
            (C117 * C7348 + C50680 * C7352) * C2291 +
            (C117 * C7343 + C50680 * C7349) * C2296) *
               C50722 +
           (C7361 + C7360 + C7359 + C7358 + C7365 + C7364) * C50828) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C1676 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50648) *
              C50568 * C1027 +
          ((((C8371 + C8370 + C8369) * C10776 +
             (C8368 + C8367 + C8366) * C50520) *
                C50828 +
            ((C8372 + C8373 + C8374) * C10776 +
             (C8375 + C8376 + C8377) * C50520) *
                C50722) *
               C50648 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C1676) *
              C50568 * C1028 +
          ((((C8007 + C8006 + C8005) * C10776 +
             (C8004 + C8003 + C8002) * C50520) *
                C50828 +
            ((C8700 + C8701 + C8702) * C10776 +
             (C8703 + C8704 + C8705) * C50520) *
                C50722) *
               C1676 -
           (((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
              C7954 * C483 + C7949 * C496) *
                 C50520 +
             (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
              C7954 * C466 + C7949 * C482) *
                 C10776) *
                C50722 +
            ((C8705 + C8704 + C8703) * C50520 +
             (C8702 + C8701 + C8700) * C10776) *
                C50828) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C1676 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50648) *
              C278 +
          ((((C13416 + C13417 + C13418) * C10776 +
             (C13419 + C13420 + C13421) * C50520) *
                C50828 +
            ((C13824 + C13825 + C13826) * C10776 +
             (C13827 + C13828 + C13829) * C50520) *
                C50722) *
               C50648 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C1676) *
              C279 +
          ((((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
              C7956 * C3523 + C7951 * C3529) *
                 C10776 +
             (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
              C7956 * C3528 + C7951 * C3532) *
                 C50520) *
                C50828 +
            ((C14328 + C14329 + C14330) * C10776 +
             (C14331 + C14332 + C14333) * C50520) *
                C50722) *
               C1676 -
           (((C7956 * C11566 + C7951 * C11568 + C7955 * C9319 + C7950 * C9322 +
              C7954 * C3686 + C7949 * C3690) *
                 C50520 +
             (C7956 * C11565 + C7951 * C11567 + C7955 * C9316 + C7950 * C9320 +
              C7954 * C3681 + C7949 * C3687) *
                 C10776) *
                C50722 +
            ((C14333 + C14332 + C14331) * C50520 +
             (C14330 + C14329 + C14328) * C10776) *
                C50828) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C10776 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50520) *
               C50828 +
           ((C12906 + C12907 + C12908) * C10776 +
            (C12909 + C12910 + C12911) * C50520) *
               C50722) *
              C1842 -
          (((C12912 + C12913 + C12914) * C50520 +
            (C12915 + C12916 + C12917) * C10776) *
               C50722 +
           ((C12911 + C12910 + C12909) * C50520 +
            (C12908 + C12907 + C12906) * C10776) *
               C50828) *
              C1843 +
          (((C12917 + C12916 + C12915) * C10776 +
            (C12914 + C12913 + C12912) * C50520) *
               C50828 +
           ((C14744 + C14745 + C14746) * C10776 +
            (C14747 + C14748 + C14749) * C50520) *
               C50722) *
              C1844 -
          (((C7956 * C14725 + C7951 * C14729 + C7955 * C14726 + C7950 * C14730 +
             C7954 * C7348 + C7949 * C7352) *
                C50520 +
            (C7956 * C14723 + C7951 * C14727 + C7955 * C14724 + C7950 * C14728 +
             C7954 * C7343 + C7949 * C7349) *
                C10776) *
               C50722 +
           ((C14749 + C14748 + C14747) * C50520 +
            (C14746 + C14745 + C14744) * C10776) *
               C50828) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C1676 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50648) *
              C50568 * C1027 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
               C50648 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C10776 + C174 * C50520) * C20840 +
            (C21257 + C21258) * C20841 + (C21259 + C21260) * C20842 +
            (C21261 + C21262) * C20843) *
               C1676 -
           (((C117 * C7344 + C50680 * C7350) * C50520 +
             (C117 * C7341 + C50680 * C7345) * C10776) *
                C20843 +
            (C21262 + C21261) * C20842 + (C21260 + C21259) * C20841 +
            (C21258 + C21257) * C20840) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C1676 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50648) *
              C278 +
          (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
            (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
               C50648 -
           (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C10776 +
             (C117 * C302 + C50680 * C317) * C50520) *
                C20840 +
            (C22003 + C22004) * C20841 + (C22005 + C22006) * C20842 +
            (C22013 + C22014) * C20843) *
               C1676 -
           (((C117 * C14725 + C50680 * C14729) * C50520 +
             (C117 * C14723 + C50680 * C14727) * C10776) *
                C20843 +
            (C22014 + C22013) * C20842 + (C22006 + C22005) * C20841 +
            (C22004 + C22003) * C20840) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C10776 +
            (C117 * C130 + C50680 * C143) * C50520) *
               C20840 +
           (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
              C1842 -
          (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
           (C21042 + C21041) * C20840) *
              C1843 +
          (C21057 * C20840 + C21058 * C20841 + (C21048 + C21047) * C20842 +
           (C22289 + C22290) * C20843) *
              C1844 -
          (((C117 * C22277 + C50680 * C22279) * C50520 +
            (C117 * C22276 + C50680 * C22278) * C10776) *
               C20843 +
           (C22290 + C22289) * C20842 + C22281 * C20841 + C22282 * C20840) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C50862 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50863 +
           (((C12917 + C12916 + C12915) * C10776 +
             (C12914 + C12913 + C12912) * C50520) *
                C50828 +
            ((C14744 + C14745 + C14746) * C10776 +
             (C14747 + C14748 + C14749) * C50520) *
                C50722) *
               C2092) *
              C50568 * C50808 +
          ((((C8371 + C8370 + C8369) * C10776 +
             (C8368 + C8367 + C8366) * C50520) *
                C50828 +
            ((C8372 + C8373 + C8374) * C10776 +
             (C8375 + C8376 + C8377) * C50520) *
                C50722) *
               C50863 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C50862 -
           (((C7956 * C10209 + C7951 * C10213 + C7955 * C4584 + C7950 * C4589 +
              C7954 * C1854 + C7949 * C1860) *
                 C50520 +
             (C7956 * C10207 + C7951 * C10210 + C7955 * C4580 + C7950 * C4585 +
              C7954 * C1848 + C7949 * C1855) *
                 C10776) *
                C50722 +
            ((C8377 + C8376 + C8375) * C50520 +
             (C8374 + C8373 + C8372) * C10776) *
                C50828) *
               C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C50862 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C50863 +
           ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
            (C7364 + C7365 + C7358 + C7359 + C7360 + C7361) * C50722) *
               C2092) *
              C50568 * C50808 +
          (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
            (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
               C50863 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C50862 -
           (((C117 * C1850 + C50680 * C1858) * C2293 +
             (C117 * C1846 + C50680 * C1851) * C2298 + C5525 * C2292 +
             C5524 * C2297 + C5523 * C2291 + C5522 * C2296) *
                C50722 +
            (C5517 + C5516 + C5515 + C5514 + C5513 + C5512) * C50828) *
               C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C50862 -
           (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
            (C21042 + C21041) * C20840) *
               C50863 +
           (C21057 * C20840 + C21058 * C20841 + (C21048 + C21047) * C20842 +
            (C22289 + C22290) * C20843) *
               C2092) *
              C50568 * C50808 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
               C50863 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C50862 -
           (((C117 * C17485 + C50680 * C17489) * C50520 +
             (C117 * C17483 + C50680 * C17486) * C10776) *
                C20843 +
            (C21056 + C21055) * C20842 + C21059 * C20841 + C21060 * C20840) *
               C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C1676 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C50648) *
              C278 +
          (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
            (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
               C50648 -
           ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
            (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
             (C117 * C299 + C50680 * C316) * C2291 +
             (C117 * C286 + C50680 * C300) * C2296) *
                C50828) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C2296 +
             (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
             C355 * C2292 + C356 * C2298 + C357 * C2293) *
                C50828 +
            (C6950 + C6951 + C6944 + C6945 + C6946 + C6947) * C50722) *
               C1676 -
           (((C117 * C3682 + C50680 * C3688) * C2293 +
             (C117 * C3679 + C50680 * C3683) * C2298 +
             (C117 * C3684 + C50680 * C3689) * C2292 +
             (C117 * C3680 + C50680 * C3685) * C2297 +
             (C117 * C3686 + C50680 * C3690) * C2291 +
             (C117 * C3681 + C50680 * C3687) * C2296) *
                C50722 +
            (C6947 + C6946 + C6945 + C6944 + C6951 + C6950) * C50828) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C2296 +
             (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
             C172 * C2292 + C173 * C2298 + C174 * C2293) *
                C50828 +
            (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
               C1676 -
           ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
            (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
               C50648) *
              C50568 * C1027 +
          (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
            (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
               C50648 -
           ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
            (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
             C172 * C2291 + C171 * C2296) *
                C50828) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
             C178 * C2298 + C177 * C2293) *
                C50828 +
            (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
               C1676 -
           (((C117 * C488 + C50680 * C499) * C2293 +
             (C117 * C469 + C50680 * C489) * C2298 + C536 * C2292 +
             C535 * C2297 + C534 * C2291 + C533 * C2296) *
                C50722 +
            (C5827 + C5826 + C5825 + C5824 + C5823 + C5822) * C50828) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C1676 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50648) *
              C50568 * C1027 +
          ((((C8371 + C8370 + C8369) * C10776 +
             (C8368 + C8367 + C8366) * C50520) *
                C50828 +
            ((C8372 + C8373 + C8374) * C10776 +
             (C8375 + C8376 + C8377) * C50520) *
                C50722) *
               C50648 -
           (((C8366 + C8367 + C8368) * C50520 +
             (C8369 + C8370 + C8371) * C10776) *
                C50722 +
            ((C8001 + C8000 + C7999) * C50520 +
             (C7998 + C7997 + C7996) * C10776) *
                C50828) *
               C1676) *
              C50568 * C1028 +
          ((((C8007 + C8006 + C8005) * C10776 +
             (C8004 + C8003 + C8002) * C50520) *
                C50828 +
            ((C8700 + C8701 + C8702) * C10776 +
             (C8703 + C8704 + C8705) * C50520) *
                C50722) *
               C1676 -
           (((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
              C7954 * C483 + C7949 * C496) *
                 C50520 +
             (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
              C7954 * C466 + C7949 * C482) *
                 C10776) *
                C50722 +
            ((C8705 + C8704 + C8703) * C50520 +
             (C8702 + C8701 + C8700) * C10776) *
                C50828) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C10776 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50520) *
                C50828 +
            ((C12906 + C12907 + C12908) * C10776 +
             (C12909 + C12910 + C12911) * C50520) *
                C50722) *
               C1676 -
           (((C12912 + C12913 + C12914) * C50520 +
             (C12915 + C12916 + C12917) * C10776) *
                C50722 +
            ((C12911 + C12910 + C12909) * C50520 +
             (C12908 + C12907 + C12906) * C10776) *
                C50828) *
               C50648) *
              C278 +
          ((((C13416 + C13417 + C13418) * C10776 +
             (C13419 + C13420 + C13421) * C50520) *
                C50828 +
            ((C13824 + C13825 + C13826) * C10776 +
             (C13827 + C13828 + C13829) * C50520) *
                C50722) *
               C50648 -
           (((C13421 + C13420 + C13419) * C50520 +
             (C13418 + C13417 + C13416) * C10776) *
                C50722 +
            ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50520 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C10776) *
                C50828) *
               C1676) *
              C279 +
          ((((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
              C7956 * C3523 + C7951 * C3529) *
                 C10776 +
             (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
              C7956 * C3528 + C7951 * C3532) *
                 C50520) *
                C50828 +
            ((C14328 + C14329 + C14330) * C10776 +
             (C14331 + C14332 + C14333) * C50520) *
                C50722) *
               C1676 -
           (((C7956 * C11566 + C7951 * C11568 + C7955 * C9319 + C7950 * C9322 +
              C7954 * C3686 + C7949 * C3690) *
                 C50520 +
             (C7956 * C11565 + C7951 * C11567 + C7955 * C9316 + C7950 * C9320 +
              C7954 * C3681 + C7949 * C3687) *
                 C10776) *
                C50722 +
            ((C14333 + C14332 + C14331) * C50520 +
             (C14330 + C14329 + C14328) * C10776) *
                C50828) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C1676 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50648) *
              C50568 * C1027 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21055 + C21056) * C20843) *
               C50648 -
           (C21059 * C20843 + C21060 * C20842 + (C21050 + C21049) * C20841 +
            (C172 * C50520 + C171 * C10776) * C20840) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C10776 + C174 * C50520) * C20840 +
            (C21257 + C21258) * C20841 + (C21259 + C21260) * C20842 +
            (C21261 + C21262) * C20843) *
               C1676 -
           (((C117 * C7344 + C50680 * C7350) * C50520 +
             (C117 * C7341 + C50680 * C7345) * C10776) *
                C20843 +
            (C21262 + C21261) * C20842 + (C21260 + C21259) * C20841 +
            (C21258 + C21257) * C20840) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C10776 +
             (C117 * C130 + C50680 * C143) * C50520) *
                C20840 +
            (C21041 + C21042) * C20841 + C21057 * C20842 + C21058 * C20843) *
               C1676 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50648) *
              C278 +
          (((C21393 + C21394) * C20840 + (C21395 + C21396) * C20841 +
            (C21397 + C21398) * C20842 + (C21675 + C21676) * C20843) *
               C50648 -
           (C21671 * C20843 + C21672 * C20842 + (C21394 + C21393) * C20841 +
            ((C117 * C299 + C50680 * C316) * C50520 +
             (C117 * C286 + C50680 * C300) * C10776) *
                C20840) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C10776 +
             (C117 * C302 + C50680 * C317) * C50520) *
                C20840 +
            (C22003 + C22004) * C20841 + (C22005 + C22006) * C20842 +
            (C22013 + C22014) * C20843) *
               C1676 -
           (((C117 * C14725 + C50680 * C14729) * C50520 +
             (C117 * C14723 + C50680 * C14727) * C10776) *
                C20843 +
            (C22014 + C22013) * C20842 + (C22006 + C22005) * C20841 +
            (C22004 + C22003) * C20840) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50584 * C50816 -
           ((C925 * C22718 + C924 * C22723 + C923 * C50841 + C922 * C22722 +
             C6045 * C50857 + C6044 * C22721) *
                C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50584 * C50620) *
              C50858 +
          (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
             C349 * C22723 + C348 * C22718) *
                C31984 +
            (C922 * C22721 + C923 * C50857 + C924 * C22722 + C925 * C50841 +
             C926 * C22723 + C927 * C22718) *
                C50722) *
               C50584 * C50620 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50584 * C50816) *
              C50859 +
          (((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
             C178 * C22723 + C177 * C22718) *
                C31984 +
            (C528 * C22721 + C527 * C50857 + C526 * C22722 + C525 * C50841 +
             C758 * C22723 + C759 * C22718) *
                C50722) *
               C50584 * C50816 -
           (((C117 * C902 + C50680 * C908) * C22718 +
             (C117 * C893 + C50680 * C903) * C22723 + C927 * C50841 +
             C926 * C22722 + C925 * C50857 + C924 * C22721) *
                C50722 +
            (C649 * C22718 + C648 * C22723 + C348 * C50841 + C349 * C22722 +
             C350 * C50857 + C351 * C22721) *
                C31984) *
               C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C22721 +
              (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
              C172 * C50841 + C173 * C22723 + C174 * C22718) *
                 C31984 +
             (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
                C50817 -
            ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
             (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
                C50648) *
               C50816 +
           (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
             (C6450 * C22721 + C6451 * C50857 + C6046 * C22722 +
              C6047 * C50841 + C6048 * C22723 + C6049 * C22718) *
                 C50722) *
                C50648 -
            ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
             (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
              (C117 * C299 + C50680 * C316) * C50857 +
              (C117 * C286 + C50680 * C300) * C22721) *
                 C31984) *
                C50817) *
               C50620) *
              C281 +
          ((((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
             (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
                C50648 -
            ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
             (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
              C172 * C50857 + C171 * C22721) *
                 C31984) *
                C50817) *
               C50816 +
           (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
              C349 * C22723 + C348 * C22718) *
                 C31984 +
             (C32801 + C32802 + C32803 + C32804 + C32805 + C32806) * C50722) *
                C50817 -
            (((C117 * C1219 + C50680 * C1227) * C22718 +
              (C117 * C1215 + C50680 * C1220) * C22723 + C6049 * C50841 +
              C6048 * C22722 + C6047 * C50857 + C6046 * C22721) *
                 C50722 +
             (C32806 + C32805 + C32804 + C32803 + C32802 + C32801) * C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C5518 * C22721 + C5519 * C50857 + C530 * C22722 + C529 * C50841 +
             C528 * C22723 + C527 * C22718) *
                C50722) *
               C50584 * C278 -
           ((C925 * C22718 + C924 * C22723 + C923 * C50841 + C922 * C22722 +
             C6045 * C50857 + C6044 * C22721) *
                C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50584 * C279 +
           (((C117 * C287 + C50680 * C301) * C22721 +
             (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
             C355 * C50841 + C356 * C22723 + C357 * C22718) *
                C31984 +
            (C6948 * C22721 + C6949 * C50857 + C5332 * C22722 + C5333 * C50841 +
             C5334 * C22723 + C5335 * C22718) *
                C50722) *
               C50584 * C280) *
              C281 +
          (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
             C349 * C22723 + C348 * C22718) *
                C31984 +
            (C922 * C22721 + C923 * C50857 + C924 * C22722 + C925 * C50841 +
             C926 * C22723 + C927 * C22718) *
                C50722) *
               C50584 * C279 -
           ((C525 * C22718 + C526 * C22723 + C527 * C50841 + C528 * C22722 +
             C529 * C50857 + C530 * C22721) *
                C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50584 * C278 -
           (((C117 * C1566 + C50680 * C1574) * C22718 +
             (C117 * C1562 + C50680 * C1567) * C22723 + C5335 * C50841 +
             C5334 * C22722 + C5333 * C50857 + C5332 * C22721) *
                C50722 +
            (C359 * C22718 + C358 * C22723 + C357 * C50841 + C356 * C22722 +
             C355 * C50857 + C354 * C22721) *
                C31984) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C22721 +
            (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
            C172 * C50841 + C173 * C22723 + C174 * C22718) *
               C31984 +
           (C5518 * C22721 + C5519 * C50857 + C530 * C22722 + C529 * C50841 +
            C528 * C22723 + C527 * C22718) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C525 * C22718 + C526 * C22723 + C527 * C50841 + C528 * C22722 +
            C529 * C50857 + C530 * C22721) *
               C50722 +
           (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
            C172 * C50857 + C171 * C22721) *
               C31984) *
              C50584 * C50568 * C114 +
          ((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
            C178 * C22723 + C177 * C22718) *
               C31984 +
           (C528 * C22721 + C527 * C50857 + C526 * C22722 + C525 * C50841 +
            C758 * C22723 + C759 * C22718) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C117 * C750 + C50680 * C752) * C22718 +
            (C117 * C749 + C50680 * C751) * C22723 + C759 * C50841 +
            C758 * C22722 + C525 * C50857 + C526 * C22721) *
               C50722 +
           (C180 * C22718 + C179 * C22723 + C177 * C50841 + C178 * C22722 +
            C176 * C50857 + C175 * C22721) *
               C31984) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C457 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C458 +
           ((C32290 + C32289 + C32288 + C32287 + C32286 + C32285) * C31984 +
            (C7362 * C22721 + C7363 * C50857 + C5522 * C22722 + C5523 * C50841 +
             C5524 * C22723 + C5525 * C22718) *
                C50722) *
               C459) *
              C50568 * C281 +
          (((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
            (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
               C458 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C457 -
           (((C117 * C1850 + C50680 * C1858) * C22718 +
             (C117 * C1846 + C50680 * C1851) * C22723 + C5525 * C50841 +
             C5524 * C22722 + C5523 * C50857 + C5522 * C22721) *
                C50722 +
            (C32302 + C32301 + C32300 + C32299 + C32298 + C32297) * C31984) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50817 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50648) *
              C50568 * C50858 +
          (((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
            (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
               C50648 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50817) *
              C50568 * C50859 +
          (((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
             C178 * C22723 + C177 * C22718) *
                C31984 +
            (C32595 + C32596 + C32597 + C32598 + C32599 + C32600) * C50722) *
               C50817 -
           (((C117 * C488 + C50680 * C499) * C22718 +
             (C117 * C469 + C50680 * C489) * C22723 + C536 * C50841 +
             C535 * C22722 + C534 * C50857 + C533 * C22721) *
                C50722 +
            (C32600 + C32599 + C32598 + C32597 + C32596 + C32595) * C31984) *
               C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C22721 +
            (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
            C172 * C50841 + C173 * C22723 + C174 * C22718) *
               C31984 +
           (C5518 * C22721 + C5519 * C50857 + C530 * C22722 + C529 * C50841 +
            C528 * C22723 + C527 * C22718) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C525 * C22718 + C526 * C22723 + C527 * C50841 + C528 * C22722 +
            C529 * C50857 + C530 * C22721) *
               C50722 +
           (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
            C172 * C50857 + C171 * C22721) *
               C31984) *
              C50584 * C50568 * C114 +
          ((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
            C178 * C22723 + C177 * C22718) *
               C31984 +
           (C528 * C22721 + C527 * C50857 + C526 * C22722 + C525 * C50841 +
            C758 * C22723 + C759 * C22718) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C117 * C750 + C50680 * C752) * C22718 +
            (C117 * C749 + C50680 * C751) * C22723 + C759 * C50841 +
            C758 * C22722 + C525 * C50857 + C526 * C22721) *
               C50722 +
           (C180 * C22718 + C179 * C22723 + C177 * C50841 + C178 * C22722 +
            C176 * C50857 + C175 * C22721) *
               C31984) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C5518 * C22721 + C5519 * C50857 + C530 * C22722 + C529 * C50841 +
             C528 * C22723 + C527 * C22718) *
                C50722) *
               C50584 * C278 -
           ((C925 * C22718 + C924 * C22723 + C923 * C50841 + C922 * C22722 +
             C6045 * C50857 + C6044 * C22721) *
                C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50584 * C279 +
           (((C117 * C287 + C50680 * C301) * C22721 +
             (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
             C355 * C50841 + C356 * C22723 + C357 * C22718) *
                C31984 +
            (C6948 * C22721 + C6949 * C50857 + C5332 * C22722 + C5333 * C50841 +
             C5334 * C22723 + C5335 * C22718) *
                C50722) *
               C50584 * C280) *
              C281 +
          (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
             C349 * C22723 + C348 * C22718) *
                C31984 +
            (C922 * C22721 + C923 * C50857 + C924 * C22722 + C925 * C50841 +
             C926 * C22723 + C927 * C22718) *
                C50722) *
               C50584 * C279 -
           ((C525 * C22718 + C526 * C22723 + C527 * C50841 + C528 * C22722 +
             C529 * C50857 + C530 * C22721) *
                C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50584 * C278 -
           (((C117 * C1566 + C50680 * C1574) * C22718 +
             (C117 * C1562 + C50680 * C1567) * C22723 + C5335 * C50841 +
             C5334 * C22722 + C5333 * C50857 + C5332 * C22721) *
                C50722 +
            (C359 * C22718 + C358 * C22723 + C357 * C50841 + C356 * C22722 +
             C355 * C50857 + C354 * C22721) *
                C31984) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50584 * C50860 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50584 * C50861 +
           (((C117 * C287 + C50680 * C301) * C22721 +
             (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
             C355 * C50841 + C356 * C22723 + C357 * C22718) *
                C31984 +
            (C6948 * C22721 + C6949 * C50857 + C5332 * C22722 + C5333 * C50841 +
             C5334 * C22723 + C5335 * C22718) *
                C50722) *
               C50584 * C1331) *
              C50808 +
          (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
             C349 * C22723 + C348 * C22718) *
                C31984 +
            (C32801 + C32802 + C32803 + C32804 + C32805 + C32806) * C50722) *
               C50584 * C50861 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50584 * C50860 -
           (((C117 * C1566 + C50680 * C1574) * C22718 +
             (C117 * C1562 + C50680 * C1567) * C22723 + C5335 * C50841 +
             C5334 * C22722 + C5333 * C50857 + C5332 * C22721) *
                C50722 +
            (C359 * C22718 + C358 * C22723 + C357 * C50841 + C356 * C22722 +
             C355 * C50857 + C354 * C22721) *
                C31984) *
               C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50817 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50648) *
              C50860 +
          (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
            (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
               C50648 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50817) *
              C50861 +
          ((((C117 * C287 + C50680 * C301) * C22721 +
             (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
             C355 * C50841 + C356 * C22723 + C357 * C22718) *
                C31984 +
            (C33689 + C33690 + C33691 + C33692 + C33693 + C33694) * C50722) *
               C50817 -
           (((C117 * C3682 + C50680 * C3688) * C22718 +
             (C117 * C3679 + C50680 * C3683) * C22723 + C15488 * C50841 +
             C15487 * C22722 + C17091 * C50857 + C17090 * C22721) *
                C50722 +
            (C33694 + C33693 + C33692 + C33691 + C33690 + C33689) * C31984) *
               C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C22721 +
            (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
            C172 * C50841 + C173 * C22723 + C174 * C22718) *
               C31984 +
           (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
              C50584 * C1096 -
          ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
           (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
            (C117 * C299 + C50680 * C316) * C50857 +
            (C117 * C286 + C50680 * C300) * C22721) *
               C31984) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C22721 +
            (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
            C355 * C50841 + C356 * C22723 + C357 * C22718) *
               C31984 +
           (C6948 * C22721 + C6949 * C50857 + C5332 * C22722 + C5333 * C50841 +
            C5334 * C22723 + C5335 * C22718) *
               C50722) *
              C50584 * C1098 -
          (((C117 * C4180 + C50680 * C4186) * C22718 +
            (C117 * C4177 + C50680 * C4181) * C22723 +
            (C117 * C4182 + C50680 * C4187) * C50841 +
            (C117 * C4178 + C50680 * C4183) * C22722 +
            (C117 * C4184 + C50680 * C4188) * C50857 +
            (C117 * C4179 + C50680 * C4185) * C22721) *
               C50722 +
           ((C117 * C1107 + C50680 * C1114) * C22718 +
            (C117 * C1102 + C50680 * C1108) * C22723 +
            (C117 * C1109 + C50680 * C1115) * C50841 +
            (C117 * C1103 + C50680 * C1110) * C22722 +
            (C117 * C1111 + C50680 * C1116) * C50857 +
            (C117 * C1104 + C50680 * C1112) * C22721) *
               C31984) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50584 * C1025 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
             C349 * C22723 + C348 * C22718) *
                C31984 +
            (C32801 + C32802 + C32803 + C32804 + C32805 + C32806) * C50722) *
               C50584 * C50620 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
             C178 * C22723 + C177 * C22718) *
                C31984 +
            (C32595 + C32596 + C32597 + C32598 + C32599 + C32600) * C50722) *
               C50584 * C1025 -
           (((C117 * C902 + C50680 * C908) * C22718 +
             (C117 * C893 + C50680 * C903) * C22723 + C927 * C50841 +
             C926 * C22722 + C925 * C50857 + C924 * C22721) *
                C50722 +
            (C649 * C22718 + C648 * C22723 + C348 * C50841 + C349 * C22722 +
             C350 * C50857 + C351 * C22721) *
                C31984) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C457 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C458 +
           ((C32290 + C32289 + C32288 + C32287 + C32286 + C32285) * C31984 +
            (C7362 * C22721 + C7363 * C50857 + C5522 * C22722 + C5523 * C50841 +
             C5524 * C22723 + C5525 * C22718) *
                C50722) *
               C459) *
              C1025 +
          (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
            (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
               C458 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C457 -
           (((C117 * C4582 + C50680 * C4588) * C22718 +
             (C117 * C4579 + C50680 * C4583) * C22723 + C16186 * C50841 +
             C16185 * C22722 + C16589 * C50857 + C16588 * C22721) *
                C50722 +
            (C33202 + C33201 + C33200 + C33199 + C33198 + C33197) * C31984) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C22721 +
              (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
              C172 * C50841 + C173 * C22723 + C174 * C22718) *
                 C31984 +
             (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
                C50817 -
            ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
             (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
                C50648) *
               C1025 +
           (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
             (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
                C50648 -
            ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
             (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
              (C117 * C299 + C50680 * C316) * C50857 +
              (C117 * C286 + C50680 * C300) * C22721) *
                 C31984) *
                C50817) *
               C50620) *
              C50808 +
          ((((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
             (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
                C50648 -
            ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
             (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
              C172 * C50857 + C171 * C22721) *
                 C31984) *
                C50817) *
               C1025 +
           (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
              C349 * C22723 + C348 * C22718) *
                 C31984 +
             (C32801 + C32802 + C32803 + C32804 + C32805 + C32806) * C50722) *
                C50817 -
            (((C117 * C1219 + C50680 * C1227) * C22718 +
              (C117 * C1215 + C50680 * C1220) * C22723 + C6049 * C50841 +
              C6048 * C22722 + C6047 * C50857 + C6046 * C22721) *
                 C50722 +
             (C32806 + C32805 + C32804 + C32803 + C32802 + C32801) * C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50584 * C1025 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
             C349 * C22723 + C348 * C22718) *
                C31984 +
            (C32801 + C32802 + C32803 + C32804 + C32805 + C32806) * C50722) *
               C50584 * C50620 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
             C178 * C22723 + C177 * C22718) *
                C31984 +
            (C32595 + C32596 + C32597 + C32598 + C32599 + C32600) * C50722) *
               C50584 * C1025 -
           (((C117 * C902 + C50680 * C908) * C22718 +
             (C117 * C893 + C50680 * C903) * C22723 + C927 * C50841 +
             C926 * C22722 + C925 * C50857 + C924 * C22721) *
                C50722 +
            (C649 * C22718 + C648 * C22723 + C348 * C50841 + C349 * C22722 +
             C350 * C50857 + C351 * C22721) *
                C31984) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C22721 +
            (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
            C172 * C50841 + C173 * C22723 + C174 * C22718) *
               C31984 +
           (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
              C50584 * C1096 -
          ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
           (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
            (C117 * C299 + C50680 * C316) * C50857 +
            (C117 * C286 + C50680 * C300) * C22721) *
               C31984) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C22721 +
            (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
            C355 * C50841 + C356 * C22723 + C357 * C22718) *
               C31984 +
           (C6948 * C22721 + C6949 * C50857 + C5332 * C22722 + C5333 * C50841 +
            C5334 * C22723 + C5335 * C22718) *
               C50722) *
              C50584 * C1098 -
          (((C117 * C4180 + C50680 * C4186) * C22718 +
            (C117 * C4177 + C50680 * C4181) * C22723 +
            (C117 * C4182 + C50680 * C4187) * C50841 +
            (C117 * C4178 + C50680 * C4183) * C22722 +
            (C117 * C4184 + C50680 * C4188) * C50857 +
            (C117 * C4179 + C50680 * C4185) * C22721) *
               C50722 +
           ((C117 * C1107 + C50680 * C1114) * C22718 +
            (C117 * C1102 + C50680 * C1108) * C22723 +
            (C117 * C1109 + C50680 * C1115) * C50841 +
            (C117 * C1103 + C50680 * C1110) * C22722 +
            (C117 * C1111 + C50680 * C1116) * C50857 +
            (C117 * C1104 + C50680 * C1112) * C22721) *
               C31984) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C22721 +
              (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
              C172 * C50841 + C173 * C22723 + C174 * C22718) *
                 C31984 +
             (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
                C1676 -
            ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
             (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
                C50648) *
               C50816 +
           (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
             (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
                C50648 -
            ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
             (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
              (C117 * C299 + C50680 * C316) * C50857 +
              (C117 * C286 + C50680 * C300) * C22721) *
                 C31984) *
                C1676) *
               C50620) *
              C50808 +
          ((((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
             (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
                C50648 -
            ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
             (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
              C172 * C50857 + C171 * C22721) *
                 C31984) *
                C1676) *
               C50816 +
           (((C353 * C22721 + C352 * C50857 + C351 * C22722 + C350 * C50841 +
              C349 * C22723 + C348 * C22718) *
                 C31984 +
             (C32801 + C32802 + C32803 + C32804 + C32805 + C32806) * C50722) *
                C1676 -
            (((C117 * C1219 + C50680 * C1227) * C22718 +
              (C117 * C1215 + C50680 * C1220) * C22723 + C6049 * C50841 +
              C6048 * C22722 + C6047 * C50857 + C6046 * C22721) *
                 C50722 +
             (C32806 + C32805 + C32804 + C32803 + C32802 + C32801) * C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50862 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50863 +
           ((C32290 + C32289 + C32288 + C32287 + C32286 + C32285) * C31984 +
            (C34085 + C34086 + C34087 + C34088 + C34089 + C34090) * C50722) *
               C2092) *
              C50816 +
          (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
            (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
               C50863 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C50862 -
           (((C117 * C4582 + C50680 * C4588) * C22718 +
             (C117 * C4579 + C50680 * C4583) * C22723 + C16186 * C50841 +
             C16185 * C22722 + C16589 * C50857 + C16588 * C22721) *
                C50722 +
            (C33202 + C33201 + C33200 + C33199 + C33198 + C33197) * C31984) *
               C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C1676 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50648) *
              C278 +
          (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
            (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
               C50648 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C22721 +
             (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
             C355 * C50841 + C356 * C22723 + C357 * C22718) *
                C31984 +
            (C33689 + C33690 + C33691 + C33692 + C33693 + C33694) * C50722) *
               C1676 -
           (((C117 * C3682 + C50680 * C3688) * C22718 +
             (C117 * C3679 + C50680 * C3683) * C22723 + C15488 * C50841 +
             C15487 * C22722 + C17091 * C50857 + C17090 * C22721) *
                C50722 +
            (C33694 + C33693 + C33692 + C33691 + C33690 + C33689) * C31984) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C1676 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50648) *
              C50568 * C1027 +
          (((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
            (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
               C50648 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
             C178 * C22723 + C177 * C22718) *
                C31984 +
            (C32595 + C32596 + C32597 + C32598 + C32599 + C32600) * C50722) *
               C1676 -
           (((C117 * C488 + C50680 * C499) * C22718 +
             (C117 * C469 + C50680 * C489) * C22723 + C536 * C50841 +
             C535 * C22722 + C534 * C50857 + C533 * C22721) *
                C50722 +
            (C32600 + C32599 + C32598 + C32597 + C32596 + C32595) * C31984) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C22721 +
            (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
            C172 * C50841 + C173 * C22723 + C174 * C22718) *
               C31984 +
           (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
              C1842 -
          ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
           (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
              C1843 +
          ((C32290 + C32289 + C32288 + C32287 + C32286 + C32285) * C31984 +
           (C34085 + C34086 + C34087 + C34088 + C34089 + C34090) * C50722) *
              C1844 -
          (((C117 * C7344 + C50680 * C7350) * C22718 +
            (C117 * C7341 + C50680 * C7345) * C22723 + C15665 * C50841 +
            C15664 * C22722 + C17501 * C50857 + C17500 * C22721) *
               C50722 +
           (C34090 + C34089 + C34088 + C34087 + C34086 + C34085) * C31984) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C50862 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50863 +
           ((C32290 + C32289 + C32288 + C32287 + C32286 + C32285) * C31984 +
            (C34085 + C34086 + C34087 + C34088 + C34089 + C34090) * C50722) *
               C2092) *
              C50568 * C50808 +
          (((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
            (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
               C50863 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C50862 -
           (((C117 * C1850 + C50680 * C1858) * C22718 +
             (C117 * C1846 + C50680 * C1851) * C22723 + C5525 * C50841 +
             C5524 * C22722 + C5523 * C50857 + C5522 * C22721) *
                C50722 +
            (C32302 + C32301 + C32300 + C32299 + C32298 + C32297) * C31984) *
               C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C1676 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50648) *
              C50568 * C1027 +
          (((C32291 + C32292 + C32293 + C32294 + C32295 + C32296) * C31984 +
            (C32297 + C32298 + C32299 + C32300 + C32301 + C32302) * C50722) *
               C50648 -
           ((C32296 + C32295 + C32294 + C32293 + C32292 + C32291) * C50722 +
            (C176 * C22718 + C175 * C22723 + C174 * C50841 + C173 * C22722 +
             C172 * C50857 + C171 * C22721) *
                C31984) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C22721 + C174 * C50857 + C175 * C22722 + C176 * C50841 +
             C178 * C22723 + C177 * C22718) *
                C31984 +
            (C32595 + C32596 + C32597 + C32598 + C32599 + C32600) * C50722) *
               C1676 -
           (((C117 * C488 + C50680 * C499) * C22718 +
             (C117 * C469 + C50680 * C489) * C22723 + C536 * C50841 +
             C535 * C22722 + C534 * C50857 + C533 * C22721) *
                C50722 +
            (C32600 + C32599 + C32598 + C32597 + C32596 + C32595) * C31984) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C22721 +
             (C117 * C130 + C50680 * C143) * C50857 + C171 * C22722 +
             C172 * C50841 + C173 * C22723 + C174 * C22718) *
                C31984 +
            (C32279 + C32280 + C32281 + C32282 + C32283 + C32284) * C50722) *
               C1676 -
           ((C32285 + C32286 + C32287 + C32288 + C32289 + C32290) * C50722 +
            (C32284 + C32283 + C32282 + C32281 + C32280 + C32279) * C31984) *
               C50648) *
              C278 +
          (((C32795 + C32796 + C32797 + C32798 + C32799 + C32800) * C31984 +
            (C33197 + C33198 + C33199 + C33200 + C33201 + C33202) * C50722) *
               C50648 -
           ((C32800 + C32799 + C32798 + C32797 + C32796 + C32795) * C50722 +
            (C350 * C22718 + C351 * C22723 + C352 * C50841 + C353 * C22722 +
             (C117 * C299 + C50680 * C316) * C50857 +
             (C117 * C286 + C50680 * C300) * C22721) *
                C31984) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C22721 +
             (C117 * C302 + C50680 * C317) * C50857 + C354 * C22722 +
             C355 * C50841 + C356 * C22723 + C357 * C22718) *
                C31984 +
            (C33689 + C33690 + C33691 + C33692 + C33693 + C33694) * C50722) *
               C1676 -
           (((C117 * C3682 + C50680 * C3688) * C22718 +
             (C117 * C3679 + C50680 * C3683) * C22723 + C15488 * C50841 +
             C15487 * C22722 + C17091 * C50857 + C17090 * C22721) *
                C50722 +
            (C33694 + C33693 + C33692 + C33691 + C33690 + C33689) * C31984) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50584 * C50816 -
           (((C3273 + C3272) * C50525 + (C3271 + C3270) * C25561 +
             (C18952 + C18951) * C25555 + (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50584 * C50620) *
              C50858 +
          ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
             (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                C31984 +
            ((C3270 + C3271) * C25560 + (C3272 + C3273) * C25555 +
             (C3274 + C3275) * C25561 + (C3276 + C3277) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50584 * C50816) *
              C50859 +
          (((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
             (C2341 + C2340) * C50525) *
                C31984 +
            ((C2727 + C2726) * C25560 + (C2725 + C2724) * C25555 +
             (C3056 + C3057) * C25561 + (C3058 + C3059) * C50525) *
                C50722) *
               C50584 * C50816 -
           (((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C50525 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C25561 +
             (C3277 + C3276) * C25555 + (C3275 + C3274) * C25560) *
                C50722 +
            ((C2899 + C2898) * C50525 + (C2897 + C2896) * C25561 +
             C2886 * C25555 + C2887 * C25560) *
                C31984) *
               C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                  C25560 +
              (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                  C25555 +
              (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                 C31984 +
             ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
              C35107 * C25561 + C35108 * C50525) *
                 C50722) *
                C50817 -
            ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
              (C18420 + C18419) * C25560) *
                 C50722 +
             (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
              (C18416 + C18415) * C25560) *
                 C31984) *
                C50648) *
               C50816 +
           ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
              C35761 * C25561 + C35762 * C50525) *
                 C31984 +
             ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
              (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                 C50722) *
                C50648 -
            ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
              (C18950 + C18949) * C25560) *
                 C50722 +
             ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
              (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                  C25555 +
              (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                  C25560) *
                 C31984) *
                C50817) *
               C50620) *
              C281 +
          ((((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
              C35502 * C50525) *
                 C31984 +
             (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
              (C2738 + C2739) * C50525) *
                 C50722) *
                C50648 -
            ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
              C35110 * C25560) *
                 C50722 +
             ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
              (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                 C31984) *
                C50817) *
               C50816 +
           ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
              (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                 C31984 +
             (C35761 * C25560 + C35762 * C25555 + (C3274 + C3275) * C25561 +
              (C3276 + C3277) * C50525) *
                 C50722) *
                C50817 -
            (((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 +
               C50826 * C1228) *
                  C50525 +
              (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 +
               C50826 * C1222) *
                  C25561 +
              (C18960 + C18959) * C25555 + (C18958 + C18957) * C25560) *
                 C50722 +
             ((C3277 + C3276) * C50525 + (C3275 + C3274) * C25561 +
              C35763 * C25555 + C35764 * C25560) *
                 C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             (C2731 + C2730) * C25561 + (C2729 + C2728) * C50525) *
                C50722) *
               C50584 * C278 -
           (((C3273 + C3272) * C50525 + (C3271 + C3270) * C25561 +
             (C18952 + C18951) * C25555 + (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50584 * C279 +
           (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C25560 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C25555 +
             (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
                C31984 +
            ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
             (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
             (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                C31984 +
            ((C3270 + C3271) * C25560 + (C3272 + C3273) * C25555 +
             (C3274 + C3275) * C25561 + (C3276 + C3277) * C50525) *
                C50722) *
               C50584 * C279 -
           ((C3046 * C50525 + C3047 * C25561 + (C2728 + C2729) * C25555 +
             (C2730 + C2731) * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50584 * C278 -
           (((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                 C50525 +
             (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                 C25561 +
             (C34912 + C34911) * C25555 + (C34910 + C34909) * C25560) *
                C50722 +
            ((C2545 + C2544) * C50525 + (C2543 + C2542) * C25561 +
             (C2541 + C2540) * C25555 + (C2539 + C2538) * C25560) *
                C31984) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C25560 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C25555 +
            (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
               C31984 +
           ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
            (C2731 + C2730) * C25561 + (C2729 + C2728) * C50525) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C3046 * C50525 + C3047 * C25561 + (C2728 + C2729) * C25555 +
            (C2730 + C2731) * C25560) *
               C50722 +
           ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
            (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
               C31984) *
              C50584 * C50568 * C114 +
          ((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
            (C2341 + C2340) * C50525) *
               C31984 +
           ((C2727 + C2726) * C25560 + (C2725 + C2724) * C25555 +
            (C3056 + C3057) * C25561 + (C3058 + C3059) * C50525) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C50525 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C25561 +
            (C3059 + C3058) * C25555 + (C3057 + C3056) * C25560) *
               C50722 +
           ((C2347 + C2346) * C50525 + (C2345 + C2344) * C25561 +
            C2350 * C25555 + C2351 * C25560) *
               C31984) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C457 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C458 +
           ((C18433 * C25560 + C18434 * C25555 + C35111 * C25561 +
             C35112 * C50525) *
                C31984 +
            ((C18426 + C18425) * C25560 + (C18424 + C18423) * C25555 +
             (C18427 + C18428) * C25561 + (C18429 + C18430) * C50525) *
                C50722) *
               C459) *
              C50568 * C281 +
          (((C35107 * C25560 + C35108 * C25555 + (C2727 + C2726) * C25561 +
             (C2725 + C2724) * C50525) *
                C31984 +
            (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
             (C2738 + C2739) * C50525) *
                C50722) *
               C458 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C457 -
           (((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
                 C50525 +
             (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
                 C25561 +
             (C18430 + C18429) * C25555 + (C18428 + C18427) * C25560) *
                C50722 +
            ((C2739 + C2738) * C50525 + (C2737 + C2736) * C25561 +
             C18413 * C25555 + C18414 * C25560) *
                C31984) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50817 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50648) *
              C50568 * C50858 +
          (((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
             C35502 * C50525) *
                C31984 +
            (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
             (C2738 + C2739) * C50525) *
                C50722) *
               C50648 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50817) *
              C50568 * C50859 +
          (((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
             (C2341 + C2340) * C50525) *
                C31984 +
            (C35501 * C25560 + C35502 * C25555 + (C3056 + C3057) * C25561 +
             (C3058 + C3059) * C50525) *
                C50722) *
               C50817 -
           (((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                 C50525 +
             (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                 C25561 +
             (C2739 + C2738) * C25555 + (C2737 + C2736) * C25560) *
                C50722 +
            ((C3059 + C3058) * C50525 + (C3057 + C3056) * C25561 +
             C3046 * C25555 + C3047 * C25560) *
                C31984) *
               C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C25560 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C25555 +
            (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
               C31984 +
           ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
            (C2731 + C2730) * C25561 + (C2729 + C2728) * C50525) *
               C50722) *
              C50584 * C50568 * C113 -
          ((C3046 * C50525 + C3047 * C25561 + (C2728 + C2729) * C25555 +
            (C2730 + C2731) * C25560) *
               C50722 +
           ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
            (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
               C31984) *
              C50584 * C50568 * C114 +
          ((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
            (C2341 + C2340) * C50525) *
               C31984 +
           ((C2727 + C2726) * C25560 + (C2725 + C2724) * C25555 +
            (C3056 + C3057) * C25561 + (C3058 + C3059) * C50525) *
               C50722) *
              C50584 * C50568 * C115 -
          (((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C50525 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C25561 +
            (C3059 + C3058) * C25555 + (C3057 + C3056) * C25560) *
               C50722 +
           ((C2347 + C2346) * C50525 + (C2345 + C2344) * C25561 +
            C2350 * C25555 + C2351 * C25560) *
               C31984) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             (C2731 + C2730) * C25561 + (C2729 + C2728) * C50525) *
                C50722) *
               C50584 * C278 -
           (((C3273 + C3272) * C50525 + (C3271 + C3270) * C25561 +
             (C18952 + C18951) * C25555 + (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50584 * C279 +
           (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C25560 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C25555 +
             (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
                C31984 +
            ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
             (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
                C50722) *
               C50584 * C280) *
              C281 +
          ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
             (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                C31984 +
            ((C3270 + C3271) * C25560 + (C3272 + C3273) * C25555 +
             (C3274 + C3275) * C25561 + (C3276 + C3277) * C50525) *
                C50722) *
               C50584 * C279 -
           ((C3046 * C50525 + C3047 * C25561 + (C2728 + C2729) * C25555 +
             (C2730 + C2731) * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50584 * C278 -
           (((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                 C50525 +
             (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                 C25561 +
             (C34912 + C34911) * C25555 + (C34910 + C34909) * C25560) *
                C50722 +
            ((C2545 + C2544) * C50525 + (C2543 + C2542) * C25561 +
             (C2541 + C2540) * C25555 + (C2539 + C2538) * C25560) *
                C31984) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50584 * C50860 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50584 * C50861 +
           (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C25560 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C25555 +
             (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
                C31984 +
            ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
             (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
                C50722) *
               C50584 * C1331) *
              C50808 +
          ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
             (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                C31984 +
            (C35761 * C25560 + C35762 * C25555 + (C3274 + C3275) * C25561 +
             (C3276 + C3277) * C50525) *
                C50722) *
               C50584 * C50861 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50584 * C50860 -
           (((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                 C50525 +
             (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                 C25561 +
             (C34912 + C34911) * C25555 + (C34910 + C34909) * C25560) *
                C50722 +
            ((C2545 + C2544) * C50525 + (C2543 + C2542) * C25561 +
             (C2541 + C2540) * C25555 + (C2539 + C2538) * C25560) *
                C31984) *
               C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50817 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50648) *
              C50860 +
          ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
             C35761 * C25561 + C35762 * C50525) *
                C31984 +
            ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
             (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                C50722) *
               C50648 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50817) *
              C50861 +
          ((((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C25560 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C25555 +
             (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
                C31984 +
            ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
             (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
                C50722) *
               C50817 -
           (((C2295 * C9317 + C50696 * C9321 + C2294 * C3684 + C50826 * C3689) *
                 C50525 +
             (C2295 * C9315 + C50696 * C9318 + C2294 * C3680 + C50826 * C3685) *
                 C25561 +
             (C19877 + C19876) * C25555 + (C19875 + C19874) * C25560) *
                C50722 +
            ((C34912 + C34911) * C50525 + (C34910 + C34909) * C25561 +
             (C19873 + C19872) * C25555 + (C19871 + C19870) * C25560) *
                C31984) *
               C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C25560 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C25555 +
            (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
               C31984 +
           ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
            C35107 * C25561 + C35108 * C50525) *
               C50722) *
              C50584 * C1096 -
          ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
            (C18950 + C18949) * C25560) *
               C50722 +
           ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C25555 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C25560) *
               C31984) *
              C50584 * C1097 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C25560 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C25555 +
            (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
               C31984 +
           ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
            (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
               C50722) *
              C50584 * C1098 -
          (((C2295 * C9811 + C50696 * C9815 + C2294 * C4182 + C50826 * C4187) *
                C50525 +
            (C2295 * C9809 + C50696 * C9812 + C2294 * C4178 + C50826 * C4183) *
                C25561 +
            (C2295 * C9813 + C50696 * C9816 + C2294 * C4184 + C50826 * C4188) *
                C25555 +
            (C2295 * C9810 + C50696 * C9814 + C2294 * C4179 + C50826 * C4185) *
                C25560) *
               C50722 +
           ((C2295 * C3526 + C50696 * C3531 + C2294 * C1109 + C50826 * C1115) *
                C50525 +
            (C2295 * C3522 + C50696 * C3527 + C2294 * C1103 + C50826 * C1110) *
                C25561 +
            (C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
                C25555 +
            (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
                C25560) *
               C31984) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50584 * C1025 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50584 * C50620) *
              C1027 +
          ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
             (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                C31984 +
            (C35761 * C25560 + C35762 * C25555 + (C3274 + C3275) * C25561 +
             (C3276 + C3277) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50584 * C1025) *
              C1028 +
          (((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
             (C2341 + C2340) * C50525) *
                C31984 +
            (C35501 * C25560 + C35502 * C25555 + (C3056 + C3057) * C25561 +
             (C3058 + C3059) * C50525) *
                C50722) *
               C50584 * C1025 -
           (((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C50525 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C25561 +
             (C3277 + C3276) * C25555 + (C3275 + C3274) * C25560) *
                C50722 +
            ((C2899 + C2898) * C50525 + (C2897 + C2896) * C25561 +
             C2886 * C25555 + C2887 * C25560) *
                C31984) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C457 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C458 +
           ((C18433 * C25560 + C18434 * C25555 + C35111 * C25561 +
             C35112 * C50525) *
                C31984 +
            ((C18426 + C18425) * C25560 + (C18424 + C18423) * C25555 +
             (C18427 + C18428) * C25561 + (C18429 + C18430) * C50525) *
                C50722) *
               C459) *
              C1025 +
          ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
             C35761 * C25561 + C35762 * C50525) *
                C31984 +
            ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
             (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                C50722) *
               C458 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C457 -
           (((C2295 * C10209 + C50696 * C10213 + C2294 * C4584 +
              C50826 * C4589) *
                 C50525 +
             (C2295 * C10207 + C50696 * C10210 + C2294 * C4580 +
              C50826 * C4585) *
                 C25561 +
             (C19364 + C19363) * C25555 + (C19362 + C19361) * C25560) *
                C50722 +
            ((C18960 + C18959) * C50525 + (C18958 + C18957) * C25561 +
             C19359 * C25555 + C19360 * C25560) *
                C31984) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                  C25560 +
              (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                  C25555 +
              (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                 C31984 +
             ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
              C35107 * C25561 + C35108 * C50525) *
                 C50722) *
                C50817 -
            ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
              (C18420 + C18419) * C25560) *
                 C50722 +
             (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
              (C18416 + C18415) * C25560) *
                 C31984) *
                C50648) *
               C1025 +
           ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
              C35761 * C25561 + C35762 * C50525) *
                 C31984 +
             ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
              (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                 C50722) *
                C50648 -
            ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
              (C18950 + C18949) * C25560) *
                 C50722 +
             ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
              (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                  C25555 +
              (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                  C25560) *
                 C31984) *
                C50817) *
               C50620) *
              C50808 +
          ((((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
              C35502 * C50525) *
                 C31984 +
             (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
              (C2738 + C2739) * C50525) *
                 C50722) *
                C50648 -
            ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
              C35110 * C25560) *
                 C50722 +
             ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
              (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                 C31984) *
                C50817) *
               C1025 +
           ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
              (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                 C31984 +
             (C35761 * C25560 + C35762 * C25555 + (C3274 + C3275) * C25561 +
              (C3276 + C3277) * C50525) *
                 C50722) *
                C50817 -
            (((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 +
               C50826 * C1228) *
                  C50525 +
              (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 +
               C50826 * C1222) *
                  C25561 +
              (C18960 + C18959) * C25555 + (C18958 + C18957) * C25560) *
                 C50722 +
             ((C3277 + C3276) * C50525 + (C3275 + C3274) * C25561 +
              C35763 * C25555 + C35764 * C25560) *
                 C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50584 * C1025 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50584 * C50620) *
              C1027 +
          ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
             (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                C31984 +
            (C35761 * C25560 + C35762 * C25555 + (C3274 + C3275) * C25561 +
             (C3276 + C3277) * C50525) *
                C50722) *
               C50584 * C50620 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50584 * C1025) *
              C1028 +
          (((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
             (C2341 + C2340) * C50525) *
                C31984 +
            (C35501 * C25560 + C35502 * C25555 + (C3056 + C3057) * C25561 +
             (C3058 + C3059) * C50525) *
                C50722) *
               C50584 * C1025 -
           (((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C50525 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C25561 +
             (C3277 + C3276) * C25555 + (C3275 + C3274) * C25560) *
                C50722 +
            ((C2899 + C2898) * C50525 + (C2897 + C2896) * C25561 +
             C2886 * C25555 + C2887 * C25560) *
                C31984) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C25560 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C25555 +
            (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
               C31984 +
           ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
            C35107 * C25561 + C35108 * C50525) *
               C50722) *
              C50584 * C1096 -
          ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
            (C18950 + C18949) * C25560) *
               C50722 +
           ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C25555 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C25560) *
               C31984) *
              C50584 * C1097 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C25560 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C25555 +
            (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
               C31984 +
           ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
            (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
               C50722) *
              C50584 * C1098 -
          (((C2295 * C9811 + C50696 * C9815 + C2294 * C4182 + C50826 * C4187) *
                C50525 +
            (C2295 * C9809 + C50696 * C9812 + C2294 * C4178 + C50826 * C4183) *
                C25561 +
            (C2295 * C9813 + C50696 * C9816 + C2294 * C4184 + C50826 * C4188) *
                C25555 +
            (C2295 * C9810 + C50696 * C9814 + C2294 * C4179 + C50826 * C4185) *
                C25560) *
               C50722 +
           ((C2295 * C3526 + C50696 * C3531 + C2294 * C1109 + C50826 * C1115) *
                C50525 +
            (C2295 * C3522 + C50696 * C3527 + C2294 * C1103 + C50826 * C1110) *
                C25561 +
            (C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
                C25555 +
            (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
                C25560) *
               C31984) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                  C25560 +
              (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                  C25555 +
              (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                 C31984 +
             ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
              C35107 * C25561 + C35108 * C50525) *
                 C50722) *
                C1676 -
            ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
              (C18420 + C18419) * C25560) *
                 C50722 +
             (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
              (C18416 + C18415) * C25560) *
                 C31984) *
                C50648) *
               C50816 +
           ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
              C35761 * C25561 + C35762 * C50525) *
                 C31984 +
             ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
              (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                 C50722) *
                C50648 -
            ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
              (C18950 + C18949) * C25560) *
                 C50722 +
             ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
              (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                  C25555 +
              (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                  C25560) *
                 C31984) *
                C1676) *
               C50620) *
              C50808 +
          ((((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
              C35502 * C50525) *
                 C31984 +
             (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
              (C2738 + C2739) * C50525) *
                 C50722) *
                C50648 -
            ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
              C35110 * C25560) *
                 C50722 +
             ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
              (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                 C31984) *
                C1676) *
               C50816 +
           ((((C2537 + C2536) * C25560 + (C2535 + C2534) * C25555 +
              (C2533 + C2532) * C25561 + (C2531 + C2530) * C50525) *
                 C31984 +
             (C35761 * C25560 + C35762 * C25555 + (C3274 + C3275) * C25561 +
              (C3276 + C3277) * C50525) *
                 C50722) *
                C1676 -
            (((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 +
               C50826 * C1228) *
                  C50525 +
              (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 +
               C50826 * C1222) *
                  C25561 +
              (C18960 + C18959) * C25555 + (C18958 + C18957) * C25560) *
                 C50722 +
             ((C3277 + C3276) * C50525 + (C3275 + C3274) * C25561 +
              C35763 * C25555 + C35764 * C25560) *
                 C31984) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50862 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50863 +
           ((C18433 * C25560 + C18434 * C25555 + C35111 * C25561 +
             C35112 * C50525) *
                C31984 +
            ((C18426 + C18425) * C25560 + (C18424 + C18423) * C25555 +
             (C18427 + C18428) * C25561 + (C18429 + C18430) * C50525) *
                C50722) *
               C2092) *
              C50816 +
          ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
             C35761 * C25561 + C35762 * C50525) *
                C31984 +
            ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
             (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                C50722) *
               C50863 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C50862 -
           (((C2295 * C10209 + C50696 * C10213 + C2294 * C4584 +
              C50826 * C4589) *
                 C50525 +
             (C2295 * C10207 + C50696 * C10210 + C2294 * C4580 +
              C50826 * C4585) *
                 C25561 +
             (C19364 + C19363) * C25555 + (C19362 + C19361) * C25560) *
                C50722 +
            ((C18960 + C18959) * C50525 + (C18958 + C18957) * C25561 +
             C19359 * C25555 + C19360 * C25560) *
                C31984) *
               C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C1676 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50648) *
              C278 +
          ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
             C35761 * C25561 + C35762 * C50525) *
                C31984 +
            ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
             (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                C50722) *
               C50648 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C1676) *
              C279 +
          ((((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C25560 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C25555 +
             (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
                C31984 +
            ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
             (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
                C50722) *
               C1676 -
           (((C2295 * C9317 + C50696 * C9321 + C2294 * C3684 + C50826 * C3689) *
                 C50525 +
             (C2295 * C9315 + C50696 * C9318 + C2294 * C3680 + C50826 * C3685) *
                 C25561 +
             (C19877 + C19876) * C25555 + (C19875 + C19874) * C25560) *
                C50722 +
            ((C34912 + C34911) * C50525 + (C34910 + C34909) * C25561 +
             (C19873 + C19872) * C25555 + (C19871 + C19870) * C25560) *
                C31984) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C1676 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50648) *
              C50568 * C1027 +
          (((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
             C35502 * C50525) *
                C31984 +
            (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
             (C2738 + C2739) * C50525) *
                C50722) *
               C50648 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C1676) *
              C50568 * C1028 +
          (((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
             (C2341 + C2340) * C50525) *
                C31984 +
            (C35501 * C25560 + C35502 * C25555 + (C3056 + C3057) * C25561 +
             (C3058 + C3059) * C50525) *
                C50722) *
               C1676 -
           (((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                 C50525 +
             (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                 C25561 +
             (C2739 + C2738) * C25555 + (C2737 + C2736) * C25560) *
                C50722 +
            ((C3059 + C3058) * C50525 + (C3057 + C3056) * C25561 +
             C3046 * C25555 + C3047 * C25560) *
                C31984) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C25560 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C25555 +
            (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
               C31984 +
           ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
            C35107 * C25561 + C35108 * C50525) *
               C50722) *
              C1842 -
          ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
            (C18420 + C18419) * C25560) *
               C50722 +
           (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
            (C18416 + C18415) * C25560) *
               C31984) *
              C1843 +
          ((C18433 * C25560 + C18434 * C25555 + C35111 * C25561 +
            C35112 * C50525) *
               C31984 +
           ((C18426 + C18425) * C25560 + (C18424 + C18423) * C25555 +
            (C18427 + C18428) * C25561 + (C18429 + C18430) * C50525) *
               C50722) *
              C1844 -
          (((C2295 * C16577 + C50696 * C16579 + C2294 * C7346 +
             C50826 * C7351) *
                C50525 +
            (C2295 * C16576 + C50696 * C16578 + C2294 * C7342 +
             C50826 * C7347) *
                C25561 +
            (C20287 + C20286) * C25555 + (C20285 + C20284) * C25560) *
               C50722 +
           ((C18430 + C18429) * C50525 + (C18428 + C18427) * C25561 +
            C20272 * C25555 + C20273 * C25560) *
               C31984) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C50862 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50863 +
           ((C18433 * C25560 + C18434 * C25555 + C35111 * C25561 +
             C35112 * C50525) *
                C31984 +
            ((C18426 + C18425) * C25560 + (C18424 + C18423) * C25555 +
             (C18427 + C18428) * C25561 + (C18429 + C18430) * C50525) *
                C50722) *
               C2092) *
              C50568 * C50808 +
          (((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
             C35502 * C50525) *
                C31984 +
            (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
             (C2738 + C2739) * C50525) *
                C50722) *
               C50863 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C50862 -
           (((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
                 C50525 +
             (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
                 C25561 +
             (C18430 + C18429) * C25555 + (C18428 + C18427) * C25560) *
                C50722 +
            ((C2739 + C2738) * C50525 + (C2737 + C2736) * C25561 +
             C18413 * C25555 + C18414 * C25560) *
                C31984) *
               C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C1676 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50648) *
              C50568 * C1027 +
          (((C35107 * C25560 + C35108 * C25555 + C35501 * C25561 +
             C35502 * C50525) *
                C31984 +
            (C35111 * C25560 + C35112 * C25555 + (C2736 + C2737) * C25561 +
             (C2738 + C2739) * C50525) *
                C50722) *
               C50648 -
           ((C3046 * C50525 + C3047 * C25561 + C35109 * C25555 +
             C35110 * C25560) *
                C50722 +
            ((C2339 + C2338) * C50525 + (C2337 + C2336) * C25561 +
             (C2335 + C2334) * C25555 + (C2333 + C2332) * C25560) *
                C31984) *
               C1676) *
              C50568 * C1028 +
          (((C2348 * C25560 + C2349 * C25555 + (C2343 + C2342) * C25561 +
             (C2341 + C2340) * C50525) *
                C31984 +
            (C35501 * C25560 + C35502 * C25555 + (C3056 + C3057) * C25561 +
             (C3058 + C3059) * C50525) *
                C50722) *
               C1676 -
           (((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                 C50525 +
             (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                 C25561 +
             (C2739 + C2738) * C25555 + (C2737 + C2736) * C25560) *
                C50722 +
            ((C3059 + C3058) * C50525 + (C3057 + C3056) * C25561 +
             C3046 * C25555 + C3047 * C25560) *
                C31984) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C25560 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C25555 +
             (C2332 + C2333) * C25561 + (C2334 + C2335) * C50525) *
                C31984 +
            ((C18415 + C18416) * C25560 + (C18417 + C18418) * C25555 +
             C35107 * C25561 + C35108 * C50525) *
                C50722) *
               C1676 -
           ((C18413 * C50525 + C18414 * C25561 + (C18422 + C18421) * C25555 +
             (C18420 + C18419) * C25560) *
                C50722 +
            (C35109 * C50525 + C35110 * C25561 + (C18418 + C18417) * C25555 +
             (C18416 + C18415) * C25560) *
                C31984) *
               C50648) *
              C278 +
          ((((C18949 + C18950) * C25560 + (C18951 + C18952) * C25555 +
             C35761 * C25561 + C35762 * C50525) *
                C31984 +
            ((C18953 + C18954) * C25560 + (C18955 + C18956) * C25555 +
             (C18957 + C18958) * C25561 + (C18959 + C18960) * C50525) *
                C50722) *
               C50648 -
           ((C35763 * C50525 + C35764 * C25561 + (C18952 + C18951) * C25555 +
             (C18950 + C18949) * C25560) *
                C50722 +
            ((C2534 + C2535) * C50525 + (C2536 + C2537) * C25561 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C25555 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C25560) *
                C31984) *
               C1676) *
              C279 +
          ((((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                 C25560 +
             (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                 C25555 +
             (C2538 + C2539) * C25561 + (C2540 + C2541) * C50525) *
                C31984 +
            ((C19870 + C19871) * C25560 + (C19872 + C19873) * C25555 +
             (C34909 + C34910) * C25561 + (C34911 + C34912) * C50525) *
                C50722) *
               C1676 -
           (((C2295 * C9317 + C50696 * C9321 + C2294 * C3684 + C50826 * C3689) *
                 C50525 +
             (C2295 * C9315 + C50696 * C9318 + C2294 * C3680 + C50826 * C3685) *
                 C25561 +
             (C19877 + C19876) * C25555 + (C19875 + C19874) * C25560) *
                C50722 +
            ((C34912 + C34911) * C50525 + (C34910 + C34909) * C25561 +
             (C19873 + C19872) * C25555 + (C19871 + C19870) * C25560) *
                C31984) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50584 * C50816 -
           ((C6047 * C50525 + C6046 * C25561 + C6451 * C25555 +
             C6450 * C25560) *
                C38192 +
            (C923 * C50525 + C922 * C25561 + C6045 * C25555 + C6044 * C25560) *
                C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50584 * C50620) *
              C50858 +
          (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                C50865 +
            (C922 * C25560 + C923 * C25555 + C924 * C25561 + C925 * C50525) *
                C50856 +
            (C6046 * C25560 + C6047 * C25555 + C6048 * C25561 +
             C6049 * C50525) *
                C38192) *
               C50584 * C50620 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50584 * C50816) *
              C50859 +
          (((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
                C50865 +
            (C528 * C25560 + C527 * C25555 + C526 * C25561 + C525 * C50525) *
                C50856 +
            (C533 * C25560 + C534 * C25555 + C535 * C25561 + C536 * C50525) *
                C38192) *
               C50584 * C50816 -
           (((C117 * C1219 + C50680 * C1227) * C50525 +
             (C117 * C1215 + C50680 * C1220) * C25561 + C6049 * C25555 +
             C6048 * C25560) *
                C38192 +
            (C927 * C50525 + C926 * C25561 + C925 * C25555 + C924 * C25560) *
                C50856 +
            (C348 * C50525 + C349 * C25561 + C350 * C25555 + C351 * C25560) *
                C50865) *
               C50584 * C50620) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C25560 +
              (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
              C172 * C50525) *
                 C50865 +
             (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
                C50817 -
            ((C38494 + C38495 + C38496 + C38497) * C38192 +
             (C38493 + C38492 + C38491 + C38490) * C50856 +
             (C38489 + C38488 + C38487 + C38486) * C50865) *
                C50648) *
               C50816 +
           (((C39010 + C39011 + C39012 + C39013) * C50865 +
             (C39014 + C39015 + C39016 + C39017) * C50856 +
             (C16588 * C25560 + C16589 * C25555 + C16185 * C25561 +
              C16186 * C50525) *
                 C38192) *
                C50648 -
            ((C39017 + C39016 + C39015 + C39014) * C38192 +
             (C39013 + C39012 + C39011 + C39010) * C50856 +
             (C352 * C50525 + C353 * C25561 +
              (C117 * C299 + C50680 * C316) * C25555 +
              (C117 * C286 + C50680 * C300) * C25560) *
                 C50865) *
                C50817) *
               C50620) *
              C281 +
          ((((C38498 + C38499 + C38500 + C38501) * C50865 +
             (C38502 + C38503 + C38504 + C38505) * C50856 +
             (C38506 + C38507 + C38508 + C38509) * C38192) *
                C50648 -
            (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
             (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                 C50865) *
                C50817) *
               C50816 +
           (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                 C50865 +
             (C39018 + C39019 + C39020 + C39021) * C50856 +
             (C39022 + C39023 + C39024 + C39025) * C38192) *
                C50817 -
            (((C117 * C4582 + C50680 * C4588) * C50525 +
              (C117 * C4579 + C50680 * C4583) * C25561 + C16186 * C25555 +
              C16185 * C25560) *
                 C38192 +
             (C39025 + C39024 + C39023 + C39022) * C50856 +
             (C39021 + C39020 + C39019 + C39018) * C50865) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C5518 * C25560 + C5519 * C25555 + C530 * C25561 + C529 * C50525) *
                C50856 +
            (C5521 * C25560 + C5520 * C25555 + C531 * C25561 + C532 * C50525) *
                C38192) *
               C50584 * C278 -
           ((C6047 * C50525 + C6046 * C25561 + C6451 * C25555 +
             C6450 * C25560) *
                C38192 +
            (C923 * C50525 + C922 * C25561 + C6045 * C25555 + C6044 * C25560) *
                C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50584 * C279 +
           (((C117 * C287 + C50680 * C301) * C25560 +
             (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
             C355 * C50525) *
                C50865 +
            (C6948 * C25560 + C6949 * C25555 + C5332 * C25561 +
             C5333 * C50525) *
                C50856 +
            (C17090 * C25560 + C17091 * C25555 + C15487 * C25561 +
             C15488 * C50525) *
                C38192) *
               C50584 * C280) *
              C281 +
          (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                C50865 +
            (C922 * C25560 + C923 * C25555 + C924 * C25561 + C925 * C50525) *
                C50856 +
            (C6046 * C25560 + C6047 * C25555 + C6048 * C25561 +
             C6049 * C50525) *
                C38192) *
               C50584 * C279 -
           ((C534 * C50525 + C533 * C25561 + C532 * C25555 + C531 * C25560) *
                C38192 +
            (C527 * C50525 + C528 * C25561 + C529 * C25555 + C530 * C25560) *
                C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50584 * C278 -
           (((C117 * C3682 + C50680 * C3688) * C50525 +
             (C117 * C3679 + C50680 * C3683) * C25561 + C15488 * C25555 +
             C15487 * C25560) *
                C38192 +
            (C5335 * C50525 + C5334 * C25561 + C5333 * C25555 +
             C5332 * C25560) *
                C50856 +
            (C357 * C50525 + C356 * C25561 + C355 * C25555 + C354 * C25560) *
                C50865) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C25560 +
            (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
            C172 * C50525) *
               C50865 +
           (C5518 * C25560 + C5519 * C25555 + C530 * C25561 + C529 * C50525) *
               C50856 +
           (C5521 * C25560 + C5520 * C25555 + C531 * C25561 + C532 * C50525) *
               C38192) *
              C50584 * C50568 * C113 -
          ((C534 * C50525 + C533 * C25561 + C532 * C25555 + C531 * C25560) *
               C38192 +
           (C527 * C50525 + C528 * C25561 + C529 * C25555 + C530 * C25560) *
               C50856 +
           (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
               C50865) *
              C50584 * C50568 * C114 +
          ((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
               C50865 +
           (C528 * C25560 + C527 * C25555 + C526 * C25561 + C525 * C50525) *
               C50856 +
           (C533 * C25560 + C534 * C25555 + C535 * C25561 + C536 * C50525) *
               C38192) *
              C50584 * C50568 * C115 -
          (((C117 * C488 + C50680 * C499) * C50525 +
            (C117 * C469 + C50680 * C489) * C25561 + C536 * C25555 +
            C535 * C25560) *
               C38192 +
           (C759 * C50525 + C758 * C25561 + C525 * C25555 + C526 * C25560) *
               C50856 +
           (C177 * C50525 + C178 * C25561 + C176 * C25555 + C175 * C25560) *
               C50865) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C457 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C458 +
           (C38514 * C50865 + (C38497 + C38496 + C38495 + C38494) * C50856 +
            (C17500 * C25560 + C17501 * C25555 + C15664 * C25561 +
             C15665 * C50525) *
                C38192) *
               C459) *
              C50568 * C281 +
          (((C38498 + C38499 + C38500 + C38501) * C50865 +
            (C38502 + C38503 + C38504 + C38505) * C50856 +
            (C38506 + C38507 + C38508 + C38509) * C38192) *
               C458 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C457 -
           (((C117 * C7344 + C50680 * C7350) * C50525 +
             (C117 * C7341 + C50680 * C7345) * C25561 + C15665 * C25555 +
             C15664 * C25560) *
                C38192 +
            (C38509 + C38508 + C38507 + C38506) * C50856 + C38515 * C50865) *
               C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50817 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50648) *
              C50568 * C50858 +
          (((C38498 + C38499 + C38500 + C38501) * C50865 +
            (C38502 + C38503 + C38504 + C38505) * C50856 +
            (C38506 + C38507 + C38508 + C38509) * C38192) *
               C50648 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50817) *
              C50568 * C50859 +
          (((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
                C50865 +
            (C38808 + C38809 + C38810 + C38811) * C50856 +
            (C38812 + C38813 + C38814 + C38815) * C38192) *
               C50817 -
           (((C117 * C1850 + C50680 * C1858) * C50525 +
             (C117 * C1846 + C50680 * C1851) * C25561 + C5525 * C25555 +
             C5524 * C25560) *
                C38192 +
            (C38815 + C38814 + C38813 + C38812) * C50856 +
            (C38811 + C38810 + C38809 + C38808) * C50865) *
               C50648) *
              C50568 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C25560 +
            (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
            C172 * C50525) *
               C50865 +
           (C5518 * C25560 + C5519 * C25555 + C530 * C25561 + C529 * C50525) *
               C50856 +
           (C5521 * C25560 + C5520 * C25555 + C531 * C25561 + C532 * C50525) *
               C38192) *
              C50584 * C50568 * C113 -
          ((C534 * C50525 + C533 * C25561 + C532 * C25555 + C531 * C25560) *
               C38192 +
           (C527 * C50525 + C528 * C25561 + C529 * C25555 + C530 * C25560) *
               C50856 +
           (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
               C50865) *
              C50584 * C50568 * C114 +
          ((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
               C50865 +
           (C528 * C25560 + C527 * C25555 + C526 * C25561 + C525 * C50525) *
               C50856 +
           (C533 * C25560 + C534 * C25555 + C535 * C25561 + C536 * C50525) *
               C38192) *
              C50584 * C50568 * C115 -
          (((C117 * C488 + C50680 * C499) * C50525 +
            (C117 * C469 + C50680 * C489) * C25561 + C536 * C25555 +
            C535 * C25560) *
               C38192 +
           (C759 * C50525 + C758 * C25561 + C525 * C25555 + C526 * C25560) *
               C50856 +
           (C177 * C50525 + C178 * C25561 + C176 * C25555 + C175 * C25560) *
               C50865) *
              C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C5518 * C25560 + C5519 * C25555 + C530 * C25561 + C529 * C50525) *
                C50856 +
            (C5521 * C25560 + C5520 * C25555 + C531 * C25561 + C532 * C50525) *
                C38192) *
               C50584 * C278 -
           ((C6047 * C50525 + C6046 * C25561 + C6451 * C25555 +
             C6450 * C25560) *
                C38192 +
            (C923 * C50525 + C922 * C25561 + C6045 * C25555 + C6044 * C25560) *
                C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50584 * C279 +
           (((C117 * C287 + C50680 * C301) * C25560 +
             (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
             C355 * C50525) *
                C50865 +
            (C6948 * C25560 + C6949 * C25555 + C5332 * C25561 +
             C5333 * C50525) *
                C50856 +
            (C17090 * C25560 + C17091 * C25555 + C15487 * C25561 +
             C15488 * C50525) *
                C38192) *
               C50584 * C280) *
              C281 +
          (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                C50865 +
            (C922 * C25560 + C923 * C25555 + C924 * C25561 + C925 * C50525) *
                C50856 +
            (C6046 * C25560 + C6047 * C25555 + C6048 * C25561 +
             C6049 * C50525) *
                C38192) *
               C50584 * C279 -
           ((C534 * C50525 + C533 * C25561 + C532 * C25555 + C531 * C25560) *
                C38192 +
            (C527 * C50525 + C528 * C25561 + C529 * C25555 + C530 * C25560) *
                C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50584 * C278 -
           (((C117 * C3682 + C50680 * C3688) * C50525 +
             (C117 * C3679 + C50680 * C3683) * C25561 + C15488 * C25555 +
             C15487 * C25560) *
                C38192 +
            (C5335 * C50525 + C5334 * C25561 + C5333 * C25555 +
             C5332 * C25560) *
                C50856 +
            (C357 * C50525 + C356 * C25561 + C355 * C25555 + C354 * C25560) *
                C50865) *
               C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50584 * C50860 -
           (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50584 * C50861 +
           (((C117 * C287 + C50680 * C301) * C25560 +
             (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
             C355 * C50525) *
                C50865 +
            (C6948 * C25560 + C6949 * C25555 + C5332 * C25561 +
             C5333 * C50525) *
                C50856 +
            (C17090 * C25560 + C17091 * C25555 + C15487 * C25561 +
             C15488 * C50525) *
                C38192) *
               C50584 * C1331) *
              C50808 +
          (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                C50865 +
            (C39018 + C39019 + C39020 + C39021) * C50856 +
            (C39022 + C39023 + C39024 + C39025) * C38192) *
               C50584 * C50861 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50584 * C50860 -
           (((C117 * C3682 + C50680 * C3688) * C50525 +
             (C117 * C3679 + C50680 * C3683) * C25561 + C15488 * C25555 +
             C15487 * C25560) *
                C38192 +
            (C5335 * C50525 + C5334 * C25561 + C5333 * C25555 +
             C5332 * C25560) *
                C50856 +
            (C357 * C50525 + C356 * C25561 + C355 * C25555 + C354 * C25560) *
                C50865) *
               C50584 * C1331) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50817 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50648) *
              C50860 +
          (((C39010 + C39011 + C39012 + C39013) * C50865 +
            (C39014 + C39015 + C39016 + C39017) * C50856 +
            (C39416 + C39417 + C39418 + C39419) * C38192) *
               C50648 -
           (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50817) *
              C50861 +
          ((((C117 * C287 + C50680 * C301) * C25560 +
             (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
             C355 * C50525) *
                C50865 +
            (C39909 + C39910 + C39911 + C39912) * C50856 +
            (C39913 + C39914 + C39915 + C39916) * C38192) *
               C50817 -
           (((C117 * C10209 + C50680 * C10213) * C50525 +
             (C117 * C10207 + C50680 * C10210) * C25561 + C22012 * C25555 +
             C22011 * C25560) *
                C38192 +
            (C39916 + C39915 + C39914 + C39913) * C50856 +
            (C39912 + C39911 + C39910 + C39909) * C50865) *
               C50648) *
              C1331) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C25560 +
            (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
            C172 * C50525) *
               C50865 +
           (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
              C50584 * C1096 -
          ((C39017 + C39016 + C39015 + C39014) * C38192 +
           (C39013 + C39012 + C39011 + C39010) * C50856 +
           (C352 * C50525 + C353 * C25561 +
            (C117 * C299 + C50680 * C316) * C25555 +
            (C117 * C286 + C50680 * C300) * C25560) *
               C50865) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C25560 +
            (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
            C355 * C50525) *
               C50865 +
           (C6948 * C25560 + C6949 * C25555 + C5332 * C25561 + C5333 * C50525) *
               C50856 +
           (C17090 * C25560 + C17091 * C25555 + C15487 * C25561 +
            C15488 * C50525) *
               C38192) *
              C50584 * C1098 -
          (((C117 * C9317 + C50680 * C9321) * C50525 +
            (C117 * C9315 + C50680 * C9318) * C25561 +
            (C117 * C9319 + C50680 * C9322) * C25555 +
            (C117 * C9316 + C50680 * C9320) * C25560) *
               C38192 +
           ((C117 * C4182 + C50680 * C4187) * C50525 +
            (C117 * C4178 + C50680 * C4183) * C25561 +
            (C117 * C4184 + C50680 * C4188) * C25555 +
            (C117 * C4179 + C50680 * C4185) * C25560) *
               C50856 +
           ((C117 * C1109 + C50680 * C1115) * C50525 +
            (C117 * C1103 + C50680 * C1110) * C25561 +
            (C117 * C1111 + C50680 * C1116) * C25555 +
            (C117 * C1104 + C50680 * C1112) * C25560) *
               C50865) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50584 * C1025 -
           ((C39017 + C39016 + C39015 + C39014) * C38192 +
            (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                C50865 +
            (C39018 + C39019 + C39020 + C39021) * C50856 +
            (C39022 + C39023 + C39024 + C39025) * C38192) *
               C50584 * C50620 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
                C50865 +
            (C38808 + C38809 + C38810 + C38811) * C50856 +
            (C38812 + C38813 + C38814 + C38815) * C38192) *
               C50584 * C1025 -
           (((C117 * C1219 + C50680 * C1227) * C50525 +
             (C117 * C1215 + C50680 * C1220) * C25561 + C6049 * C25555 +
             C6048 * C25560) *
                C38192 +
            (C927 * C50525 + C926 * C25561 + C925 * C25555 + C924 * C25560) *
                C50856 +
            (C348 * C50525 + C349 * C25561 + C350 * C25555 + C351 * C25560) *
                C50865) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C457 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C458 +
           (C38514 * C50865 + (C38497 + C38496 + C38495 + C38494) * C50856 +
            (C17500 * C25560 + C17501 * C25555 + C15664 * C25561 +
             C15665 * C50525) *
                C38192) *
               C459) *
              C1025 +
          (((C39010 + C39011 + C39012 + C39013) * C50865 +
            (C39014 + C39015 + C39016 + C39017) * C50856 +
            (C39416 + C39417 + C39418 + C39419) * C38192) *
               C458 -
           (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C457 -
           (((C117 * C16577 + C50680 * C16579) * C50525 +
             (C117 * C16576 + C50680 * C16578) * C25561 + C21674 * C25555 +
             C21673 * C25560) *
                C38192 +
            (C39419 + C39418 + C39417 + C39416) * C50856 + C39422 * C50865) *
               C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C25560 +
              (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
              C172 * C50525) *
                 C50865 +
             (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
                C50817 -
            ((C38494 + C38495 + C38496 + C38497) * C38192 +
             (C38493 + C38492 + C38491 + C38490) * C50856 +
             (C38489 + C38488 + C38487 + C38486) * C50865) *
                C50648) *
               C1025 +
           (((C39010 + C39011 + C39012 + C39013) * C50865 +
             (C39014 + C39015 + C39016 + C39017) * C50856 +
             (C39416 + C39417 + C39418 + C39419) * C38192) *
                C50648 -
            (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
             (C352 * C50525 + C353 * C25561 +
              (C117 * C299 + C50680 * C316) * C25555 +
              (C117 * C286 + C50680 * C300) * C25560) *
                 C50865) *
                C50817) *
               C50620) *
              C50808 +
          ((((C38498 + C38499 + C38500 + C38501) * C50865 +
             (C38502 + C38503 + C38504 + C38505) * C50856 +
             (C38506 + C38507 + C38508 + C38509) * C38192) *
                C50648 -
            (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
             (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                 C50865) *
                C50817) *
               C1025 +
           (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                 C50865 +
             (C39018 + C39019 + C39020 + C39021) * C50856 +
             (C39022 + C39023 + C39024 + C39025) * C38192) *
                C50817 -
            (((C117 * C4582 + C50680 * C4588) * C50525 +
              (C117 * C4579 + C50680 * C4583) * C25561 + C16186 * C25555 +
              C16185 * C25560) *
                 C38192 +
             (C39025 + C39024 + C39023 + C39022) * C50856 +
             (C39021 + C39020 + C39019 + C39018) * C50865) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50584 * C1025 -
           ((C39017 + C39016 + C39015 + C39014) * C38192 +
            (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50584 * C50620) *
              C1027 +
          (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                C50865 +
            (C39018 + C39019 + C39020 + C39021) * C50856 +
            (C39022 + C39023 + C39024 + C39025) * C38192) *
               C50584 * C50620 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50584 * C1025) *
              C1028 +
          (((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
                C50865 +
            (C38808 + C38809 + C38810 + C38811) * C50856 +
            (C38812 + C38813 + C38814 + C38815) * C38192) *
               C50584 * C1025 -
           (((C117 * C1219 + C50680 * C1227) * C50525 +
             (C117 * C1215 + C50680 * C1220) * C25561 + C6049 * C25555 +
             C6048 * C25560) *
                C38192 +
            (C927 * C50525 + C926 * C25561 + C925 * C25555 + C924 * C25560) *
                C50856 +
            (C348 * C50525 + C349 * C25561 + C350 * C25555 + C351 * C25560) *
                C50865) *
               C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C25560 +
            (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
            C172 * C50525) *
               C50865 +
           (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
              C50584 * C1096 -
          ((C39017 + C39016 + C39015 + C39014) * C38192 +
           (C39013 + C39012 + C39011 + C39010) * C50856 +
           (C352 * C50525 + C353 * C25561 +
            (C117 * C299 + C50680 * C316) * C25555 +
            (C117 * C286 + C50680 * C300) * C25560) *
               C50865) *
              C50584 * C1097 +
          (((C117 * C287 + C50680 * C301) * C25560 +
            (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
            C355 * C50525) *
               C50865 +
           (C6948 * C25560 + C6949 * C25555 + C5332 * C25561 + C5333 * C50525) *
               C50856 +
           (C17090 * C25560 + C17091 * C25555 + C15487 * C25561 +
            C15488 * C50525) *
               C38192) *
              C50584 * C1098 -
          (((C117 * C9317 + C50680 * C9321) * C50525 +
            (C117 * C9315 + C50680 * C9318) * C25561 +
            (C117 * C9319 + C50680 * C9322) * C25555 +
            (C117 * C9316 + C50680 * C9320) * C25560) *
               C38192 +
           ((C117 * C4182 + C50680 * C4187) * C50525 +
            (C117 * C4178 + C50680 * C4183) * C25561 +
            (C117 * C4184 + C50680 * C4188) * C25555 +
            (C117 * C4179 + C50680 * C4185) * C25560) *
               C50856 +
           ((C117 * C1109 + C50680 * C1115) * C50525 +
            (C117 * C1103 + C50680 * C1110) * C25561 +
            (C117 * C1111 + C50680 * C1116) * C25555 +
            (C117 * C1104 + C50680 * C1112) * C25560) *
               C50865) *
              C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C25560 +
              (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
              C172 * C50525) *
                 C50865 +
             (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
                C1676 -
            (C40313 * C38192 + (C38493 + C38492 + C38491 + C38490) * C50856 +
             (C38489 + C38488 + C38487 + C38486) * C50865) *
                C50648) *
               C50816 +
           (((C39010 + C39011 + C39012 + C39013) * C50865 +
             (C39014 + C39015 + C39016 + C39017) * C50856 +
             (C39416 + C39417 + C39418 + C39419) * C38192) *
                C50648 -
            (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
             (C352 * C50525 + C353 * C25561 +
              (C117 * C299 + C50680 * C316) * C25555 +
              (C117 * C286 + C50680 * C300) * C25560) *
                 C50865) *
                C1676) *
               C50620) *
              C50808 +
          ((((C38498 + C38499 + C38500 + C38501) * C50865 +
             (C38502 + C38503 + C38504 + C38505) * C50856 +
             (C38506 + C38507 + C38508 + C38509) * C38192) *
                C50648 -
            (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
             (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                 C50865) *
                C1676) *
               C50816 +
           (((C353 * C25560 + C352 * C25555 + C351 * C25561 + C350 * C50525) *
                 C50865 +
             (C39018 + C39019 + C39020 + C39021) * C50856 +
             (C39022 + C39023 + C39024 + C39025) * C38192) *
                C1676 -
            (((C117 * C4582 + C50680 * C4588) * C50525 +
              (C117 * C4579 + C50680 * C4583) * C25561 + C16186 * C25555 +
              C16185 * C25560) *
                 C38192 +
             (C39025 + C39024 + C39023 + C39022) * C50856 +
             (C39021 + C39020 + C39019 + C39018) * C50865) *
                C50648) *
               C50620) *
              C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50862 -
           (C40313 * C38192 + (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50863 +
           (C38514 * C50865 + (C38497 + C38496 + C38495 + C38494) * C50856 +
            (C40308 + C40309 + C40310 + C40311) * C38192) *
               C2092) *
              C50816 +
          (((C39010 + C39011 + C39012 + C39013) * C50865 +
            (C39014 + C39015 + C39016 + C39017) * C50856 +
            (C39416 + C39417 + C39418 + C39419) * C38192) *
               C50863 -
           (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C50862 -
           (((C117 * C16577 + C50680 * C16579) * C50525 +
             (C117 * C16576 + C50680 * C16578) * C25561 + C21674 * C25555 +
             C21673 * C25560) *
                C38192 +
            (C39419 + C39418 + C39417 + C39416) * C50856 + C39422 * C50865) *
               C2092) *
              C50620) *
         C50549) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C1676 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50648) *
              C278 +
          (((C39010 + C39011 + C39012 + C39013) * C50865 +
            (C39014 + C39015 + C39016 + C39017) * C50856 +
            (C39416 + C39417 + C39418 + C39419) * C38192) *
               C50648 -
           (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C25560 +
             (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
             C355 * C50525) *
                C50865 +
            (C39909 + C39910 + C39911 + C39912) * C50856 +
            (C39913 + C39914 + C39915 + C39916) * C38192) *
               C1676 -
           (((C117 * C10209 + C50680 * C10213) * C50525 +
             (C117 * C10207 + C50680 * C10210) * C25561 + C22012 * C25555 +
             C22011 * C25560) *
                C38192 +
            (C39916 + C39915 + C39914 + C39913) * C50856 +
            (C39912 + C39911 + C39910 + C39909) * C50865) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C1676 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50648) *
              C50568 * C1027 +
          (((C38498 + C38499 + C38500 + C38501) * C50865 +
            (C38502 + C38503 + C38504 + C38505) * C50856 +
            (C38506 + C38507 + C38508 + C38509) * C38192) *
               C50648 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
                C50865 +
            (C38808 + C38809 + C38810 + C38811) * C50856 +
            (C38812 + C38813 + C38814 + C38815) * C38192) *
               C1676 -
           (((C117 * C1850 + C50680 * C1858) * C50525 +
             (C117 * C1846 + C50680 * C1851) * C25561 + C5525 * C25555 +
             C5524 * C25560) *
                C38192 +
            (C38815 + C38814 + C38813 + C38812) * C50856 +
            (C38811 + C38810 + C38809 + C38808) * C50865) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C25560 +
            (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
            C172 * C50525) *
               C50865 +
           (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
              C1842 -
          (C40313 * C38192 + (C38493 + C38492 + C38491 + C38490) * C50856 +
           (C38489 + C38488 + C38487 + C38486) * C50865) *
              C1843 +
          (C38514 * C50865 + (C38497 + C38496 + C38495 + C38494) * C50856 +
           (C40308 + C40309 + C40310 + C40311) * C38192) *
              C1844 -
          (((C117 * C17485 + C50680 * C17489) * C50525 +
            (C117 * C17483 + C50680 * C17486) * C25561 + C22288 * C25555 +
            C22287 * C25560) *
               C38192 +
           (C40311 + C40310 + C40309 + C40308) * C50856 + C40313 * C50865) *
              C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C50862 -
           (C40313 * C38192 + (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50863 +
           (C38514 * C50865 + (C38497 + C38496 + C38495 + C38494) * C50856 +
            (C40308 + C40309 + C40310 + C40311) * C38192) *
               C2092) *
              C50568 * C50808 +
          (((C38498 + C38499 + C38500 + C38501) * C50865 +
            (C38502 + C38503 + C38504 + C38505) * C50856 +
            (C38506 + C38507 + C38508 + C38509) * C38192) *
               C50863 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C50862 -
           (((C117 * C7344 + C50680 * C7350) * C50525 +
             (C117 * C7341 + C50680 * C7345) * C25561 + C15665 * C25555 +
             C15664 * C25560) *
                C38192 +
            (C38509 + C38508 + C38507 + C38506) * C50856 + C38515 * C50865) *
               C2092) *
              C50568 * C50555)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C1676 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50648) *
              C50568 * C1027 +
          (((C38498 + C38499 + C38500 + C38501) * C50865 +
            (C38502 + C38503 + C38504 + C38505) * C50856 +
            (C38506 + C38507 + C38508 + C38509) * C38192) *
               C50648 -
           (C38515 * C38192 + (C38501 + C38500 + C38499 + C38498) * C50856 +
            (C174 * C50525 + C173 * C25561 + C172 * C25555 + C171 * C25560) *
                C50865) *
               C1676) *
              C50568 * C1028 +
          (((C173 * C25560 + C174 * C25555 + C175 * C25561 + C176 * C50525) *
                C50865 +
            (C38808 + C38809 + C38810 + C38811) * C50856 +
            (C38812 + C38813 + C38814 + C38815) * C38192) *
               C1676 -
           (((C117 * C1850 + C50680 * C1858) * C50525 +
             (C117 * C1846 + C50680 * C1851) * C25561 + C5525 * C25555 +
             C5524 * C25560) *
                C38192 +
            (C38815 + C38814 + C38813 + C38812) * C50856 +
            (C38811 + C38810 + C38809 + C38808) * C50865) *
               C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C25560 +
             (C117 * C130 + C50680 * C143) * C25555 + C171 * C25561 +
             C172 * C50525) *
                C50865 +
            (C38486 + C38487 + C38488 + C38489) * C50856 + C38514 * C38192) *
               C1676 -
           ((C38494 + C38495 + C38496 + C38497) * C38192 +
            (C38493 + C38492 + C38491 + C38490) * C50856 +
            (C38489 + C38488 + C38487 + C38486) * C50865) *
               C50648) *
              C278 +
          (((C39010 + C39011 + C39012 + C39013) * C50865 +
            (C39014 + C39015 + C39016 + C39017) * C50856 +
            (C39416 + C39417 + C39418 + C39419) * C38192) *
               C50648 -
           (C39422 * C38192 + (C39013 + C39012 + C39011 + C39010) * C50856 +
            (C352 * C50525 + C353 * C25561 +
             (C117 * C299 + C50680 * C316) * C25555 +
             (C117 * C286 + C50680 * C300) * C25560) *
                C50865) *
               C1676) *
              C279 +
          ((((C117 * C287 + C50680 * C301) * C25560 +
             (C117 * C302 + C50680 * C317) * C25555 + C354 * C25561 +
             C355 * C50525) *
                C50865 +
            (C39909 + C39910 + C39911 + C39912) * C50856 +
            (C39913 + C39914 + C39915 + C39916) * C38192) *
               C1676 -
           (((C117 * C10209 + C50680 * C10213) * C50525 +
             (C117 * C10207 + C50680 * C10210) * C25561 + C22012 * C25555 +
             C22011 * C25560) *
                C38192 +
            (C39916 + C39915 + C39914 + C39913) * C50856 +
            (C39912 + C39911 + C39910 + C39909) * C50865) *
               C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C50816 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50620) *
              C50858 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50620 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C50816) *
              C50859 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50584 * C50816 -
           ((C117 * C640 + C50680 * C642) * C109 +
            (C117 * C639 + C50680 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C50816 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50620 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C50816) *
              C50859 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50584 * C50816 -
           ((C7956 * C1105 + C7951 * C1113 + C7955 * C308 + C7950 * C320 +
             C7954 * C293 + C7949 * C313) *
                C50525 +
            (C7956 * C1101 + C7951 * C1106 + C7955 * C290 + C7950 * C307 +
             C7954 * C283 + C7949 * C294) *
                C49742 +
            (C8541 + C8540 + C8539) * C50799 +
            (C8538 + C8537 + C8536) * C49749) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C118 +
             (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50710 * C50817 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
             (C117 * C463 + C50680 * C477) * C118) *
                C50710 * C50648) *
               C50816 +
           (((C117 * C889 + C50680 * C894) * C118 +
             (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50710 * C50648 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
             (C117 * C286 + C50680 * C300) * C118) *
                C50710 * C50817) *
               C50620) *
              C281 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50710 * C50648 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50710 * C50817) *
               C50816 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50710 * C50817 -
            ((C117 * C902 + C50680 * C908) * C109 +
             (C117 * C893 + C50680 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C49749 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50799 +
             (C7996 + C7997 + C7998) * C49742 +
             (C7999 + C8000 + C8001) * C50525) *
                C50710 * C50817 -
            ((C8366 + C8367 + C8368) * C50525 +
             (C8369 + C8370 + C8371) * C49742 +
             (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
              C7954 * C476 + C7949 * C493) *
                 C50799 +
             (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
              C7954 * C463 + C7949 * C477) *
                 C49749) *
                C50710 * C50648) *
               C50816 +
           (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
              C7956 * C4179 + C7951 * C4185) *
                 C49749 +
             (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
              C7956 * C4184 + C7951 * C4188) *
                 C50799 +
             (C8912 + C8913 + C8914) * C49742 +
             (C8915 + C8916 + C8917) * C50525) *
                C50710 * C50648 -
            ((C8184 + C8185 + C8186) * C50525 +
             (C8187 + C8188 + C8189) * C49742 +
             (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50799 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C49749) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C8371 + C8370 + C8369) * C49749 +
             (C8368 + C8367 + C8366) * C50799 +
             (C8700 + C8701 + C8702) * C49742 +
             (C8703 + C8704 + C8705) * C50525) *
                C50710 * C50648 -
            ((C8002 + C8003 + C8004) * C50525 +
             (C8005 + C8006 + C8007) * C49742 +
             (C8001 + C8000 + C7999) * C50799 +
             (C7998 + C7997 + C7996) * C49749) *
                C50710 * C50817) *
               C50816 +
           (((C8189 + C8188 + C8187) * C49749 +
             (C8186 + C8185 + C8184) * C50799 +
             (C8536 + C8537 + C8538) * C49742 +
             (C8539 + C8540 + C8541) * C50525) *
                C50710 * C50817 -
            ((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50525 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C49742 +
             (C8917 + C8916 + C8915) * C50799 +
             (C8914 + C8913 + C8912) * C49749) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C279 +
           ((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50584 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50680 * C309) * C121 +
            (C117 * C310 + C50680 * C321) * C109) *
               C50710 * C50584 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C278 -
           ((C117 * C311 + C50680 * C322) * C109 +
            (C117 * C292 + C50680 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C50584 * C50568 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50710 * C50584 * C50568 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50710 * C50584 * C50568 * C115 -
          ((C117 * C141 + C50680 * C149) * C109 +
           (C117 * C128 + C50680 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C458 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C459) *
              C50568 * C281 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + (C117 * C468 + C50680 * C486) * C121 +
            (C117 * C487 + C50680 * C498) * C109) *
               C50710 * C458 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C457 -
           ((C117 * C488 + C50680 * C499) * C109 +
            (C117 * C469 + C50680 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C50568 * C113 -
          ((C8002 + C8003 + C8004) * C50525 + (C8005 + C8006 + C8007) * C49742 +
           (C8001 + C8000 + C7999) * C50799 +
           (C7998 + C7997 + C7996) * C49749) *
              C50710 * C50584 * C50568 * C114 +
          ((C8007 + C8006 + C8005) * C49749 + (C8004 + C8003 + C8002) * C50799 +
           (C8008 + C8009 + C8010) * C49742 +
           (C8011 + C8012 + C8013) * C50525) *
              C50710 * C50584 * C50568 * C115 -
          ((C7956 * C311 + C7951 * C322 + C7955 * C310 + C7950 * C321 +
            C7954 * C137 + C7949 * C147) *
               C50525 +
           (C7956 * C292 + C7951 * C312 + C7955 * C291 + C7950 * C309 +
            C7954 * C126 + C7949 * C138) *
               C49742 +
           (C8013 + C8012 + C8011) * C50799 +
           (C8010 + C8009 + C8008) * C49749) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C278 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C279 +
           ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50584 * C280) *
              C281 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C7954 * C284 + C7949 * C296 + C7955 * C289 + C7950 * C305 +
             C7956 * C1102 + C7951 * C1108) *
                C49742 +
            (C7954 * C295 + C7949 * C314 + C7955 * C306 + C7950 * C319 +
             C7956 * C1107 + C7951 * C1114) *
                C50525) *
               C50710 * C50584 * C279 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C278 -
           ((C7956 * C3524 + C7951 * C3530 + C7955 * C1107 + C7950 * C1114 +
             C7954 * C306 + C7949 * C319) *
                C50525 +
            (C7956 * C3521 + C7951 * C3525 + C7955 * C1102 + C7950 * C1108 +
             C7954 * C289 + C7949 * C305) *
                C49742 +
            (C8195 + C8194 + C8193) * C50799 +
            (C8192 + C8191 + C8190) * C49749) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C457 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C458 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C459) *
              C50568 * C281 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C7954 * C461 + C7949 * C473 + C7955 * C891 + C7950 * C898 +
             C7956 * C1563 + C7951 * C1569) *
                C49742 +
            (C7954 * C472 + C7949 * C491 + C7955 * C899 + C7950 * C906 +
             C7956 * C1568 + C7951 * C1575) *
                C50525) *
               C50710 * C458 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C457 -
           ((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
             C7954 * C483 + C7949 * C496) *
                C50525 +
            (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
             C7954 * C466 + C7949 * C482) *
                C49742 +
            (C8377 + C8376 + C8375) * C50799 +
            (C8374 + C8373 + C8372) * C49749) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50817 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50568 * C50858 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50648 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50817) *
              C50568 * C50859 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50817 -
           ((C117 * C750 + C50680 * C752) * C109 +
            (C117 * C749 + C50680 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50817 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50648 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50817) *
              C50568 * C50859 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50817 -
           ((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50525 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C49742 +
            (C8705 + C8704 + C8703) * C50799 +
            (C8702 + C8701 + C8700) * C49749) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C50584 * C50568 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50710 * C50584 * C50568 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50710 * C50584 * C50568 * C115 -
          ((C117 * C141 + C50680 * C149) * C109 +
           (C117 * C128 + C50680 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C279 +
           ((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50584 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50680 * C309) * C121 +
            (C117 * C310 + C50680 * C321) * C109) *
               C50710 * C50584 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C278 -
           ((C117 * C311 + C50680 * C322) * C109 +
            (C117 * C292 + C50680 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C50568 * C113 -
          ((C8002 + C8003 + C8004) * C50525 + (C8005 + C8006 + C8007) * C49742 +
           (C8001 + C8000 + C7999) * C50799 +
           (C7998 + C7997 + C7996) * C49749) *
              C50710 * C50584 * C50568 * C114 +
          ((C8007 + C8006 + C8005) * C49749 + (C8004 + C8003 + C8002) * C50799 +
           (C8008 + C8009 + C8010) * C49742 +
           (C8011 + C8012 + C8013) * C50525) *
              C50710 * C50584 * C50568 * C115 -
          ((C7956 * C311 + C7951 * C322 + C7955 * C310 + C7950 * C321 +
            C7954 * C137 + C7949 * C147) *
               C50525 +
           (C7956 * C292 + C7951 * C312 + C7955 * C291 + C7950 * C309 +
            C7954 * C126 + C7949 * C138) *
               C49742 +
           (C8013 + C8012 + C8011) * C50799 +
           (C8010 + C8009 + C8008) * C49749) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C278 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C279 +
           ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50584 * C280) *
              C281 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C7954 * C284 + C7949 * C296 + C7955 * C289 + C7950 * C305 +
             C7956 * C1102 + C7951 * C1108) *
                C49742 +
            (C7954 * C295 + C7949 * C314 + C7955 * C306 + C7950 * C319 +
             C7956 * C1107 + C7951 * C1114) *
                C50525) *
               C50710 * C50584 * C279 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C278 -
           ((C7956 * C3524 + C7951 * C3530 + C7955 * C1107 + C7950 * C1114 +
             C7954 * C306 + C7949 * C319) *
                C50525 +
            (C7956 * C3521 + C7951 * C3525 + C7955 * C1102 + C7950 * C1108 +
             C7954 * C289 + C7949 * C305) *
                C49742 +
            (C8195 + C8194 + C8193) * C50799 +
            (C8192 + C8191 + C8190) * C49749) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C50860 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50861 +
           ((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50584 * C1331) *
              C50808 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50861 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C50860 -
           ((C117 * C311 + C50680 * C322) * C109 +
            (C117 * C292 + C50680 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C50860 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50861 +
           ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50861 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C50860 -
           ((C7956 * C3524 + C7951 * C3530 + C7955 * C1107 + C7950 * C1114 +
             C7954 * C306 + C7949 * C319) *
                C50525 +
            (C7956 * C3521 + C7951 * C3525 + C7955 * C1102 + C7950 * C1108 +
             C7954 * C289 + C7949 * C305) *
                C49742 +
            (C8195 + C8194 + C8193) * C50799 +
            (C8192 + C8191 + C8190) * C49749) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50817 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50860 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50648 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50817) *
              C50861 +
          (((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C50817 -
           ((C117 * C1566 + C50680 * C1574) * C109 +
            (C117 * C1562 + C50680 * C1567) * C121 +
            (C117 * C1568 + C50680 * C1575) * C108 +
            (C117 * C1563 + C50680 * C1569) * C120 +
            (C117 * C1570 + C50680 * C1576) * C107 +
            (C117 * C1564 + C50680 * C1571) * C119 +
            (C117 * C1572 + C50680 * C1577) * C106 +
            (C117 * C1565 + C50680 * C1573) * C118) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50817 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50860 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50648 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50817) *
              C50861 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C50817 -
           ((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
             C7954 * C1570 + C7949 * C1576) *
                C50525 +
            (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
             C7954 * C1564 + C7949 * C1571) *
                C49742 +
            (C7956 * C9813 + C7951 * C9816 + C7955 * C4184 + C7950 * C4188 +
             C7954 * C1572 + C7949 * C1577) *
                C50799 +
            (C7956 * C9810 + C7951 * C9814 + C7955 * C4179 + C7950 * C4185 +
             C7954 * C1565 + C7949 * C1573) *
                C49749) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C50584 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
           (C117 * C286 + C50680 * C300) * C118) *
              C50710 * C50584 * C1097 +
          ((C117 * C287 + C50680 * C301) * C118 +
           (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50710 * C50584 * C1098 -
          ((C117 * C1105 + C50680 * C1113) * C109 +
           (C117 * C1101 + C50680 * C1106) * C121 +
           (C117 * C1107 + C50680 * C1114) * C108 +
           (C117 * C1102 + C50680 * C1108) * C120 +
           (C117 * C1109 + C50680 * C1115) * C107 +
           (C117 * C1103 + C50680 * C1110) * C119 +
           (C117 * C1111 + C50680 * C1116) * C106 +
           (C117 * C1104 + C50680 * C1112) * C118) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50620) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50620 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50584 * C1025 -
           ((C117 * C640 + C50680 * C642) * C109 +
            (C117 * C639 + C50680 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C458 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C459) *
              C1025 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C458 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C457 -
           ((C117 * C1219 + C50680 * C1227) * C109 +
            (C117 * C1215 + C50680 * C1220) * C121 +
            (C117 * C1221 + C50680 * C1228) * C108 +
            (C117 * C1216 + C50680 * C1222) * C120 +
            (C117 * C1223 + C50680 * C1229) * C107 +
            (C117 * C1217 + C50680 * C1224) * C119 +
            (C117 * C1225 + C50680 * C1230) * C106 +
            (C117 * C1218 + C50680 * C1226) * C118) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C1025 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50620 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50584 * C1025 -
           ((C7956 * C1105 + C7951 * C1113 + C7955 * C308 + C7950 * C320 +
             C7954 * C293 + C7949 * C313) *
                C50525 +
            (C7956 * C1101 + C7951 * C1106 + C7955 * C290 + C7950 * C307 +
             C7954 * C283 + C7949 * C294) *
                C49742 +
            (C8541 + C8540 + C8539) * C50799 +
            (C8538 + C8537 + C8536) * C49749) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C1096 -
          ((C8184 + C8185 + C8186) * C50525 + (C8187 + C8188 + C8189) * C49742 +
           (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
            C7954 * C299 + C7949 * C316) *
               C50799 +
           (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
            C7954 * C286 + C7949 * C300) *
               C49749) *
              C50710 * C50584 * C1097 +
          ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
            C7956 * C3523 + C7951 * C3529) *
               C49749 +
           (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
            C7956 * C3528 + C7951 * C3532) *
               C50799 +
           (C8190 + C8191 + C8192) * C49742 +
           (C8193 + C8194 + C8195) * C50525) *
              C50710 * C50584 * C1098 -
          ((C7956 * C9163 + C7951 * C9167 + C7955 * C3526 + C7950 * C3531 +
            C7954 * C1109 + C7949 * C1115) *
               C50525 +
           (C7956 * C9161 + C7951 * C9164 + C7955 * C3522 + C7950 * C3527 +
            C7954 * C1103 + C7949 * C1110) *
               C49742 +
           (C7956 * C9165 + C7951 * C9168 + C7955 * C3528 + C7950 * C3532 +
            C7954 * C1111 + C7949 * C1116) *
               C50799 +
           (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 + C7950 * C3529 +
            C7954 * C1104 + C7949 * C1112) *
               C49749) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C457 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C458 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C459) *
              C1025 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C458 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C457 -
           ((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
             C7954 * C1223 + C7949 * C1229) *
                C50525 +
            (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
             C7954 * C1217 + C7949 * C1224) *
                C49742 +
            (C7956 * C9319 + C7951 * C9322 + C7955 * C3686 + C7950 * C3690 +
             C7954 * C1225 + C7949 * C1230) *
                C50799 +
            (C7956 * C9316 + C7951 * C9320 + C7955 * C3681 + C7950 * C3687 +
             C7954 * C1218 + C7949 * C1226) *
                C49749) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C118 +
             (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50710 * C50817 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
             (C117 * C463 + C50680 * C477) * C118) *
                C50710 * C50648) *
               C1025 +
           (((C117 * C889 + C50680 * C894) * C118 +
             (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50710 * C50648 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
             (C117 * C286 + C50680 * C300) * C118) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50710 * C50648 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50710 * C50817) *
               C1025 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50710 * C50817 -
            ((C117 * C902 + C50680 * C908) * C109 +
             (C117 * C893 + C50680 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C49749 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50799 +
             (C7996 + C7997 + C7998) * C49742 +
             (C7999 + C8000 + C8001) * C50525) *
                C50710 * C50817 -
            ((C8366 + C8367 + C8368) * C50525 +
             (C8369 + C8370 + C8371) * C49742 +
             (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
              C7954 * C476 + C7949 * C493) *
                 C50799 +
             (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
              C7954 * C463 + C7949 * C477) *
                 C49749) *
                C50710 * C50648) *
               C1025 +
           (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
              C7956 * C4179 + C7951 * C4185) *
                 C49749 +
             (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
              C7956 * C4184 + C7951 * C4188) *
                 C50799 +
             (C8912 + C8913 + C8914) * C49742 +
             (C8915 + C8916 + C8917) * C50525) *
                C50710 * C50648 -
            ((C8184 + C8185 + C8186) * C50525 +
             (C8187 + C8188 + C8189) * C49742 +
             (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50799 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C49749) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C8371 + C8370 + C8369) * C49749 +
             (C8368 + C8367 + C8366) * C50799 +
             (C8700 + C8701 + C8702) * C49742 +
             (C8703 + C8704 + C8705) * C50525) *
                C50710 * C50648 -
            ((C8002 + C8003 + C8004) * C50525 +
             (C8005 + C8006 + C8007) * C49742 +
             (C8001 + C8000 + C7999) * C50799 +
             (C7998 + C7997 + C7996) * C49749) *
                C50710 * C50817) *
               C1025 +
           (((C8189 + C8188 + C8187) * C49749 +
             (C8186 + C8185 + C8184) * C50799 +
             (C8536 + C8537 + C8538) * C49742 +
             (C8539 + C8540 + C8541) * C50525) *
                C50710 * C50817 -
            ((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50525 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C49742 +
             (C8917 + C8916 + C8915) * C50799 +
             (C8914 + C8913 + C8912) * C49749) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50584 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50584 * C50620) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50710 * C50584 * C50620 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C50584 * C1025 -
           ((C117 * C640 + C50680 * C642) * C109 +
            (C117 * C639 + C50680 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C50584 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
           (C117 * C286 + C50680 * C300) * C118) *
              C50710 * C50584 * C1097 +
          ((C117 * C287 + C50680 * C301) * C118 +
           (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50710 * C50584 * C1098 -
          ((C117 * C1105 + C50680 * C1113) * C109 +
           (C117 * C1101 + C50680 * C1106) * C121 +
           (C117 * C1107 + C50680 * C1114) * C108 +
           (C117 * C1102 + C50680 * C1108) * C120 +
           (C117 * C1109 + C50680 * C1115) * C107 +
           (C117 * C1103 + C50680 * C1110) * C119 +
           (C117 * C1111 + C50680 * C1116) * C106 +
           (C117 * C1104 + C50680 * C1112) * C118) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50584 * C1025 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C8189 + C8188 + C8187) * C49749 +
            (C8186 + C8185 + C8184) * C50799 +
            (C8536 + C8537 + C8538) * C49742 +
            (C8539 + C8540 + C8541) * C50525) *
               C50710 * C50584 * C50620 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C50584 * C1025 -
           ((C7956 * C1105 + C7951 * C1113 + C7955 * C308 + C7950 * C320 +
             C7954 * C293 + C7949 * C313) *
                C50525 +
            (C7956 * C1101 + C7951 * C1106 + C7955 * C290 + C7950 * C307 +
             C7954 * C283 + C7949 * C294) *
                C49742 +
            (C8541 + C8540 + C8539) * C50799 +
            (C8538 + C8537 + C8536) * C49749) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C50584 * C1096 -
          ((C8184 + C8185 + C8186) * C50525 + (C8187 + C8188 + C8189) * C49742 +
           (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
            C7954 * C299 + C7949 * C316) *
               C50799 +
           (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
            C7954 * C286 + C7949 * C300) *
               C49749) *
              C50710 * C50584 * C1097 +
          ((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
            C7956 * C3523 + C7951 * C3529) *
               C49749 +
           (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
            C7956 * C3528 + C7951 * C3532) *
               C50799 +
           (C8190 + C8191 + C8192) * C49742 +
           (C8193 + C8194 + C8195) * C50525) *
              C50710 * C50584 * C1098 -
          ((C7956 * C9163 + C7951 * C9167 + C7955 * C3526 + C7950 * C3531 +
            C7954 * C1109 + C7949 * C1115) *
               C50525 +
           (C7956 * C9161 + C7951 * C9164 + C7955 * C3522 + C7950 * C3527 +
            C7954 * C1103 + C7949 * C1110) *
               C49742 +
           (C7956 * C9165 + C7951 * C9168 + C7955 * C3528 + C7950 * C3532 +
            C7954 * C1111 + C7949 * C1116) *
               C50799 +
           (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 + C7950 * C3529 +
            C7954 * C1104 + C7949 * C1112) *
               C49749) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50680 * C129) * C118 +
             (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50710 * C1676 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
             (C117 * C463 + C50680 * C477) * C118) *
                C50710 * C50648) *
               C50816 +
           (((C117 * C889 + C50680 * C894) * C118 +
             (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50710 * C50648 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
             (C117 * C286 + C50680 * C300) * C118) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50710 * C50648 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50710 * C1676) *
               C50816 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50710 * C1676 -
            ((C117 * C902 + C50680 * C908) * C109 +
             (C117 * C893 + C50680 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
              C7956 * C287 + C7951 * C301) *
                 C49749 +
             (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
              C7956 * C302 + C7951 * C317) *
                 C50799 +
             (C7996 + C7997 + C7998) * C49742 +
             (C7999 + C8000 + C8001) * C50525) *
                C50710 * C1676 -
            ((C8366 + C8367 + C8368) * C50525 +
             (C8369 + C8370 + C8371) * C49742 +
             (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
              C7954 * C476 + C7949 * C493) *
                 C50799 +
             (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
              C7954 * C463 + C7949 * C477) *
                 C49749) *
                C50710 * C50648) *
               C50816 +
           (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
              C7956 * C4179 + C7951 * C4185) *
                 C49749 +
             (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
              C7956 * C4184 + C7951 * C4188) *
                 C50799 +
             (C8912 + C8913 + C8914) * C49742 +
             (C8915 + C8916 + C8917) * C50525) *
                C50710 * C50648 -
            ((C8184 + C8185 + C8186) * C50525 +
             (C8187 + C8188 + C8189) * C49742 +
             (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
              C7954 * C299 + C7949 * C316) *
                 C50799 +
             (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
              C7954 * C286 + C7949 * C300) *
                 C49749) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C8371 + C8370 + C8369) * C49749 +
             (C8368 + C8367 + C8366) * C50799 +
             (C8700 + C8701 + C8702) * C49742 +
             (C8703 + C8704 + C8705) * C50525) *
                C50710 * C50648 -
            ((C8002 + C8003 + C8004) * C50525 +
             (C8005 + C8006 + C8007) * C49742 +
             (C8001 + C8000 + C7999) * C50799 +
             (C7998 + C7997 + C7996) * C49749) *
                C50710 * C1676) *
               C50816 +
           (((C8189 + C8188 + C8187) * C49749 +
             (C8186 + C8185 + C8184) * C50799 +
             (C8536 + C8537 + C8538) * C49742 +
             (C8539 + C8540 + C8541) * C50525) *
                C50710 * C1676 -
            ((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 + C7950 * C1575 +
              C7954 * C899 + C7949 * C906) *
                 C50525 +
             (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 + C7950 * C1569 +
              C7954 * C891 + C7949 * C898) *
                 C49742 +
             (C8917 + C8916 + C8915) * C50799 +
             (C8914 + C8913 + C8912) * C49749) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50862 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50863 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C2092) *
              C50816 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50863 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C50862 -
           ((C117 * C1219 + C50680 * C1227) * C109 +
            (C117 * C1215 + C50680 * C1220) * C121 +
            (C117 * C1221 + C50680 * C1228) * C108 +
            (C117 * C1216 + C50680 * C1222) * C120 +
            (C117 * C1223 + C50680 * C1229) * C107 +
            (C117 * C1217 + C50680 * C1224) * C119 +
            (C117 * C1225 + C50680 * C1230) * C106 +
            (C117 * C1218 + C50680 * C1226) * C118) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50862 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50863 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C2092) *
              C50816 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50863 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C50862 -
           ((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
             C7954 * C1223 + C7949 * C1229) *
                C50525 +
            (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
             C7954 * C1217 + C7949 * C1224) *
                C49742 +
            (C7956 * C9319 + C7951 * C9322 + C7955 * C3686 + C7950 * C3690 +
             C7954 * C1225 + C7949 * C1230) *
                C50799 +
            (C7956 * C9316 + C7951 * C9320 + C7955 * C3681 + C7950 * C3687 +
             C7954 * C1218 + C7949 * C1226) *
                C49749) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C278 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50648 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C1676) *
              C279 +
          (((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C1676 -
           ((C117 * C1566 + C50680 * C1574) * C109 +
            (C117 * C1562 + C50680 * C1567) * C121 +
            (C117 * C1568 + C50680 * C1575) * C108 +
            (C117 * C1563 + C50680 * C1569) * C120 +
            (C117 * C1570 + C50680 * C1576) * C107 +
            (C117 * C1564 + C50680 * C1571) * C119 +
            (C117 * C1572 + C50680 * C1577) * C106 +
            (C117 * C1565 + C50680 * C1573) * C118) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50568 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50648 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C1676 -
           ((C117 * C750 + C50680 * C752) * C109 +
            (C117 * C749 + C50680 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50680 * C129) * C118 +
           (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50710 * C1842 -
          (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 + C529 * C107 +
           C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
           (C117 * C463 + C50680 * C477) * C118) *
              C50710 * C1843 +
          ((C117 * C464 + C50680 * C478) * C118 +
           (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
           C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
              C50710 * C1844 -
          ((C117 * C1850 + C50680 * C1858) * C109 +
           (C117 * C1846 + C50680 * C1851) * C121 +
           (C117 * C1852 + C50680 * C1859) * C108 +
           (C117 * C1847 + C50680 * C1853) * C120 +
           (C117 * C1854 + C50680 * C1860) * C107 +
           (C117 * C1848 + C50680 * C1855) * C119 +
           (C117 * C1856 + C50680 * C1861) * C106 +
           (C117 * C1849 + C50680 * C1857) * C118) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50648 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C1676 -
           ((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50525 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C49742 +
            (C8705 + C8704 + C8703) * C50799 +
            (C8702 + C8701 + C8700) * C49749) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C278 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50648 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C1676) *
              C279 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C1676 -
           ((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
             C7954 * C1570 + C7949 * C1576) *
                C50525 +
            (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
             C7954 * C1564 + C7949 * C1571) *
                C49742 +
            (C7956 * C9813 + C7951 * C9816 + C7955 * C4184 + C7950 * C4188 +
             C7954 * C1572 + C7949 * C1577) *
                C50799 +
            (C7956 * C9810 + C7951 * C9814 + C7955 * C4179 + C7950 * C4185 +
             C7954 * C1565 + C7949 * C1573) *
                C49749) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
            C7956 * C287 + C7951 * C301) *
               C49749 +
           (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
            C7956 * C302 + C7951 * C317) *
               C50799 +
           (C7996 + C7997 + C7998) * C49742 +
           (C7999 + C8000 + C8001) * C50525) *
              C50710 * C1842 -
          ((C8366 + C8367 + C8368) * C50525 + (C8369 + C8370 + C8371) * C49742 +
           (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
            C7954 * C476 + C7949 * C493) *
               C50799 +
           (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
            C7954 * C463 + C7949 * C477) *
               C49749) *
              C50710 * C1843 +
          ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
            C7956 * C3681 + C7951 * C3687) *
               C49749 +
           (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
            C7956 * C3686 + C7951 * C3690) *
               C50799 +
           (C8372 + C8373 + C8374) * C49742 +
           (C8375 + C8376 + C8377) * C50525) *
              C50710 * C1844 -
          ((C7956 * C10209 + C7951 * C10213 + C7955 * C4584 + C7950 * C4589 +
            C7954 * C1854 + C7949 * C1860) *
               C50525 +
           (C7956 * C10207 + C7951 * C10210 + C7955 * C4580 + C7950 * C4585 +
            C7954 * C1848 + C7949 * C1855) *
               C49742 +
           (C7956 * C10211 + C7951 * C10214 + C7955 * C4586 + C7950 * C4590 +
            C7954 * C1856 + C7949 * C1861) *
               C50799 +
           (C7956 * C10208 + C7951 * C10212 + C7955 * C4581 + C7950 * C4587 +
            C7954 * C1849 + C7949 * C1857) *
               C49749) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C50862 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50863 +
           ((C117 * C464 + C50680 * C478) * C118 +
            (C117 * C479 + C50680 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50710 * C2092) *
              C50568 * C50808 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50863 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C50862 -
           ((C117 * C488 + C50680 * C499) * C109 +
            (C117 * C469 + C50680 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C50862 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50863 +
           ((C7954 * C464 + C7949 * C478 + C7955 * C1218 + C7950 * C1226 +
             C7956 * C3681 + C7951 * C3687) *
                C49749 +
            (C7954 * C479 + C7949 * C494 + C7955 * C1225 + C7950 * C1230 +
             C7956 * C3686 + C7951 * C3690) *
                C50799 +
            (C8372 + C8373 + C8374) * C49742 +
            (C8375 + C8376 + C8377) * C50525) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50863 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C50862 -
           ((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 + C7950 * C1228 +
             C7954 * C483 + C7949 * C496) *
                C50525 +
            (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 + C7950 * C1222 +
             C7954 * C466 + C7949 * C482) *
                C49742 +
            (C8377 + C8376 + C8375) * C50799 +
            (C8374 + C8373 + C8372) * C49749) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C50568 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50710 * C50648 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50710 * C1676 -
           ((C117 * C750 + C50680 * C752) * C109 +
            (C117 * C749 + C50680 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50680 * C129) * C118 +
            (C117 * C130 + C50680 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50710 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50680 * C493) * C106 +
            (C117 * C463 + C50680 * C477) * C118) *
               C50710 * C50648) *
              C278 +
          (((C117 * C889 + C50680 * C894) * C118 +
            (C117 * C895 + C50680 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50710 * C50648 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50680 * C316) * C106 +
            (C117 * C286 + C50680 * C300) * C118) *
               C50710 * C1676) *
              C279 +
          (((C117 * C287 + C50680 * C301) * C118 +
            (C117 * C302 + C50680 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50710 * C1676 -
           ((C117 * C1566 + C50680 * C1574) * C109 +
            (C117 * C1562 + C50680 * C1567) * C121 +
            (C117 * C1568 + C50680 * C1575) * C108 +
            (C117 * C1563 + C50680 * C1569) * C120 +
            (C117 * C1570 + C50680 * C1576) * C107 +
            (C117 * C1564 + C50680 * C1571) * C119 +
            (C117 * C1572 + C50680 * C1577) * C106 +
            (C117 * C1565 + C50680 * C1573) * C118) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C8371 + C8370 + C8369) * C49749 +
            (C8368 + C8367 + C8366) * C50799 +
            (C8700 + C8701 + C8702) * C49742 +
            (C8703 + C8704 + C8705) * C50525) *
               C50710 * C50648 -
           ((C8002 + C8003 + C8004) * C50525 +
            (C8005 + C8006 + C8007) * C49742 +
            (C8001 + C8000 + C7999) * C50799 +
            (C7998 + C7997 + C7996) * C49749) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C8007 + C8006 + C8005) * C49749 +
            (C8004 + C8003 + C8002) * C50799 +
            (C8008 + C8009 + C8010) * C49742 +
            (C8011 + C8012 + C8013) * C50525) *
               C50710 * C1676 -
           ((C7956 * C1566 + C7951 * C1574 + C7955 * C901 + C7950 * C907 +
             C7954 * C470 + C7949 * C490) *
                C50525 +
            (C7956 * C1562 + C7951 * C1567 + C7955 * C892 + C7950 * C900 +
             C7954 * C460 + C7949 * C471) *
                C49742 +
            (C8705 + C8704 + C8703) * C50799 +
            (C8702 + C8701 + C8700) * C49749) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
             C7956 * C287 + C7951 * C301) *
                C49749 +
            (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
             C7956 * C302 + C7951 * C317) *
                C50799 +
            (C7996 + C7997 + C7998) * C49742 +
            (C7999 + C8000 + C8001) * C50525) *
               C50710 * C1676 -
           ((C8366 + C8367 + C8368) * C50525 +
            (C8369 + C8370 + C8371) * C49742 +
            (C7956 * C1572 + C7951 * C1577 + C7955 * C895 + C7950 * C904 +
             C7954 * C476 + C7949 * C493) *
                C50799 +
            (C7956 * C1565 + C7951 * C1573 + C7955 * C889 + C7950 * C894 +
             C7954 * C463 + C7949 * C477) *
                C49749) *
               C50710 * C50648) *
              C278 +
          (((C7954 * C889 + C7949 * C894 + C7955 * C1565 + C7950 * C1573 +
             C7956 * C4179 + C7951 * C4185) *
                C49749 +
            (C7954 * C895 + C7949 * C904 + C7955 * C1572 + C7950 * C1577 +
             C7956 * C4184 + C7951 * C4188) *
                C50799 +
            (C8912 + C8913 + C8914) * C49742 +
            (C8915 + C8916 + C8917) * C50525) *
               C50710 * C50648 -
           ((C8184 + C8185 + C8186) * C50525 +
            (C8187 + C8188 + C8189) * C49742 +
            (C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
             C7954 * C299 + C7949 * C316) *
                C50799 +
            (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
             C7954 * C286 + C7949 * C300) *
                C49749) *
               C50710 * C1676) *
              C279 +
          (((C7954 * C287 + C7949 * C301 + C7955 * C1104 + C7950 * C1112 +
             C7956 * C3523 + C7951 * C3529) *
                C49749 +
            (C7954 * C302 + C7949 * C317 + C7955 * C1111 + C7950 * C1116 +
             C7956 * C3528 + C7951 * C3532) *
                C50799 +
            (C8190 + C8191 + C8192) * C49742 +
            (C8193 + C8194 + C8195) * C50525) *
               C50710 * C1676 -
           ((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 + C7950 * C4187 +
             C7954 * C1570 + C7949 * C1576) *
                C50525 +
            (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 + C7950 * C4183 +
             C7954 * C1564 + C7949 * C1571) *
                C49742 +
            (C7956 * C9813 + C7951 * C9816 + C7955 * C4184 + C7950 * C4188 +
             C7954 * C1572 + C7949 * C1577) *
                C50799 +
            (C7956 * C9810 + C7951 * C9814 + C7955 * C4179 + C7950 * C4185 +
             C7954 * C1565 + C7949 * C1573) *
                C49749) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C50816 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50620 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C50816) *
              C50859 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50584 * C50816 -
           ((C2295 * C311 + C50696 * C322 + C2294 * C310 + C50826 * C321) *
                C2293 +
            (C2295 * C292 + C50696 * C312 + C2294 * C291 + C50826 * C309) *
                C2298 +
            (C2899 + C2898) * C2292 + (C2897 + C2896) * C2297 + C2886 * C2291 +
            C2887 * C2296) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C50816 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50620) *
              C50858 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50620 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C50816) *
              C50859 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50584 * C50816 -
           ((C10775 * C3524 + C10770 * C3530 + C10774 * C1107 + C10769 * C1114 +
             C10773 * C306 + C10768 * C319 + C10772 * C295 + C10767 * C314) *
                C50520 +
            (C10775 * C3521 + C10770 * C3525 + C10774 * C1102 + C10769 * C1108 +
             C10773 * C289 + C10768 * C305 + C10772 * C284 + C10767 * C296) *
                C10776) *
               C50710 * C50584 * C50620) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C2296 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C2291 +
             (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
             C2349 * C2293) *
                C50710 * C50817 -
            (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
             (C2730 + C2731) * C2297 +
             (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                 C2291 +
             (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                 C2296) *
                C50710 * C50648) *
               C50816 +
           (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                 C2296 +
             (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                 C2291 +
             (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
             (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                C50710 * C50648 -
            (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
             (C2536 + C2537) * C2297 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C2291 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C2296) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
             (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
             (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                C50710 * C50648 -
            (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
             (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
             (C2333 + C2332) * C2296) *
                C50710 * C50817) *
               C50816 +
           (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
             (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
             (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                C50710 * C50817 -
            ((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C2293 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C2298 +
             (C3277 + C3276) * C2292 + (C3275 + C3274) * C2297 +
             (C3273 + C3272) * C2291 + (C3271 + C3270) * C2296) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
              C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                 C10776 +
             (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
              C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 +
              C10769 * C1577 + C10773 * C895 + C10768 * C904 + C10772 * C476 +
              C10767 * C493) *
                 C50520 +
             (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 +
              C10769 * C1573 + C10773 * C889 + C10768 * C894 + C10772 * C463 +
              C10767 * C477) *
                 C10776) *
                C50710 * C50648) *
               C50816 +
           (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
              C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
              C10770 * C9814) *
                 C10776 +
             (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
              C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
              C10770 * C9816) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 +
              C10769 * C1116 + C10773 * C302 + C10768 * C317 + C10772 * C299 +
              C10767 * C316) *
                 C50520 +
             (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 +
              C10769 * C1112 + C10773 * C287 + C10768 * C301 + C10772 * C286 +
              C10767 * C300) *
                 C10776) *
                C50710 * C50817) *
               C50620) *
              C281 +
          ((((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
              C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
              C10770 * C4183) *
                 C10776 +
             (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
              C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
              C10770 * C4187) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
              C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                 C50520 +
             (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
              C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                 C10776) *
                C50710 * C50817) *
               C50816 +
           (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
              C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
              C10770 * C3527) *
                 C10776 +
             (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
              C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
              C10770 * C3531) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C9811 + C10770 * C9815 + C10774 * C4182 +
              C10769 * C4187 + C10773 * C1570 + C10768 * C1576 + C10772 * C897 +
              C10767 * C905) *
                 C50520 +
             (C10775 * C9809 + C10770 * C9812 + C10774 * C4178 +
              C10769 * C4183 + C10773 * C1564 + C10768 * C1571 + C10772 * C890 +
              C10767 * C896) *
                 C10776) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C278 -
           ((C2530 + C2531) * C2293 + (C2532 + C2533) * C2298 +
            (C2534 + C2535) * C2292 + (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C279 +
           ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50584 * C280) *
              C281 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2294 * C283 + C50826 * C294 + C2295 * C290 + C50696 * C307) *
                C2298 +
            (C2294 * C293 + C50826 * C313 + C2295 * C308 + C50696 * C320) *
                C2293) *
               C50710 * C50584 * C279 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C278 -
           ((C2295 * C1105 + C50696 * C1113 + C2294 * C308 + C50826 * C320) *
                C2293 +
            (C2295 * C1101 + C50696 * C1106 + C2294 * C290 + C50826 * C307) *
                C2298 +
            (C2545 + C2544) * C2292 + (C2543 + C2542) * C2297 +
            (C2541 + C2540) * C2291 + (C2539 + C2538) * C2296) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C50584 * C50568 * C113 -
          (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
           (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
           (C2333 + C2332) * C2296) *
              C50710 * C50584 * C50568 * C114 +
          (C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
           (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
           (C2346 + C2347) * C2293) *
              C50710 * C50584 * C50568 * C115 -
          ((C2295 * C640 + C50696 * C642 + C2294 * C140 + C50826 * C148) *
               C2293 +
           (C2295 * C639 + C50696 * C641 + C2294 * C127 + C50826 * C139) *
               C2298 +
           (C2347 + C2346) * C2292 + (C2345 + C2344) * C2297 + C2350 * C2291 +
           C2351 * C2296) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C457 -
           ((C2724 + C2725) * C2293 + (C2726 + C2727) * C2298 +
            (C2728 + C2729) * C2292 + (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C458 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C459) *
              C50568 * C281 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C2294 * C460 + C50826 * C471 + C2295 * C892 + C50696 * C900) *
                C2298 +
            (C2294 * C470 + C50826 * C490 + C2295 * C901 + C50696 * C907) *
                C2293) *
               C50710 * C458 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C457 -
           ((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                C2293 +
            (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                C2298 +
            (C2739 + C2738) * C2292 + (C2737 + C2736) * C2297 +
            (C2735 + C2734) * C2291 + (C2733 + C2732) * C2296) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C50568 * C113 -
          ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
            C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
               C50520 +
           (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
            C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
               C10776) *
              C50710 * C50584 * C50568 * C114 +
          ((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
            C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
               C10776 +
           (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
            C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
               C50520) *
              C50710 * C50584 * C50568 * C115 -
          ((C10775 * C1105 + C10770 * C1113 + C10774 * C308 + C10769 * C320 +
            C10773 * C293 + C10768 * C313 + C10772 * C136 + C10767 * C146) *
               C50520 +
           (C10775 * C1101 + C10770 * C1106 + C10774 * C290 + C10769 * C307 +
            C10773 * C283 + C10768 * C294 + C10772 * C125 + C10767 * C135) *
               C10776) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C278 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C279 +
           ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50584 * C280) *
              C281 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C279 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C278 -
           ((C10775 * C9163 + C10770 * C9167 + C10774 * C3526 + C10769 * C3531 +
             C10773 * C1109 + C10768 * C1115 + C10772 * C304 + C10767 * C318) *
                C50520 +
            (C10775 * C9161 + C10770 * C9164 + C10774 * C3522 + C10769 * C3527 +
             C10773 * C1103 + C10768 * C1110 + C10772 * C288 + C10767 * C303) *
                C10776) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C457 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C458 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C459) *
              C50568 * C281 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C458 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C457 -
           ((C10775 * C9317 + C10770 * C9321 + C10774 * C3684 + C10769 * C3689 +
             C10773 * C1223 + C10768 * C1229 + C10772 * C481 + C10767 * C495) *
                C50520 +
            (C10775 * C9315 + C10770 * C9318 + C10774 * C3680 + C10769 * C3685 +
             C10773 * C1217 + C10768 * C1224 + C10772 * C465 + C10767 * C480) *
                C10776) *
               C50710 * C459) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50817 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50648 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50817) *
              C50568 * C50859 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50817 -
           ((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C2293 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C2298 +
            (C3059 + C3058) * C2292 + (C3057 + C3056) * C2297 + C3046 * C2291 +
            C3047 * C2296) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50568 * C50858 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50817) *
              C50568 * C50859 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C4180 + C10770 * C4186 + C10774 * C1568 + C10769 * C1575 +
             C10773 * C899 + C10768 * C906 + C10772 * C472 + C10767 * C491) *
                C50520 +
            (C10775 * C4177 + C10770 * C4181 + C10774 * C1563 + C10769 * C1569 +
             C10773 * C891 + C10768 * C898 + C10772 * C461 + C10767 * C473) *
                C10776) *
               C50710 * C50648) *
              C50568 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C50584 * C50568 * C113 -
          (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
           (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
           (C2333 + C2332) * C2296) *
              C50710 * C50584 * C50568 * C114 +
          (C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
           (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
           (C2346 + C2347) * C2293) *
              C50710 * C50584 * C50568 * C115 -
          ((C2295 * C640 + C50696 * C642 + C2294 * C140 + C50826 * C148) *
               C2293 +
           (C2295 * C639 + C50696 * C641 + C2294 * C127 + C50826 * C139) *
               C2298 +
           (C2347 + C2346) * C2292 + (C2345 + C2344) * C2297 + C2350 * C2291 +
           C2351 * C2296) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C278 -
           ((C2530 + C2531) * C2293 + (C2532 + C2533) * C2298 +
            (C2534 + C2535) * C2292 + (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C279 +
           ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50584 * C280) *
              C281 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2294 * C283 + C50826 * C294 + C2295 * C290 + C50696 * C307) *
                C2298 +
            (C2294 * C293 + C50826 * C313 + C2295 * C308 + C50696 * C320) *
                C2293) *
               C50710 * C50584 * C279 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C278 -
           ((C2295 * C1105 + C50696 * C1113 + C2294 * C308 + C50826 * C320) *
                C2293 +
            (C2295 * C1101 + C50696 * C1106 + C2294 * C290 + C50826 * C307) *
                C2298 +
            (C2545 + C2544) * C2292 + (C2543 + C2542) * C2297 +
            (C2541 + C2540) * C2291 + (C2539 + C2538) * C2296) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C50568 * C113 -
          ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
            C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
               C50520 +
           (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
            C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
               C10776) *
              C50710 * C50584 * C50568 * C114 +
          ((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
            C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
               C10776 +
           (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
            C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
               C50520) *
              C50710 * C50584 * C50568 * C115 -
          ((C10775 * C1105 + C10770 * C1113 + C10774 * C308 + C10769 * C320 +
            C10773 * C293 + C10768 * C313 + C10772 * C136 + C10767 * C146) *
               C50520 +
           (C10775 * C1101 + C10770 * C1106 + C10774 * C290 + C10769 * C307 +
            C10773 * C283 + C10768 * C294 + C10772 * C125 + C10767 * C135) *
               C10776) *
              C50710 * C50584 * C50568 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C278 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C279 +
           ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50584 * C280) *
              C281 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C279 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C278 -
           ((C10775 * C9163 + C10770 * C9167 + C10774 * C3526 + C10769 * C3531 +
             C10773 * C1109 + C10768 * C1115 + C10772 * C304 + C10767 * C318) *
                C50520 +
            (C10775 * C9161 + C10770 * C9164 + C10774 * C3522 + C10769 * C3527 +
             C10773 * C1103 + C10768 * C1110 + C10772 * C288 + C10767 * C303) *
                C10776) *
               C50710 * C50584 * C280) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C50860 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50861 +
           ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50861 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C50860 -
           ((C2295 * C1105 + C50696 * C1113 + C2294 * C308 + C50826 * C320) *
                C2293 +
            (C2295 * C1101 + C50696 * C1106 + C2294 * C290 + C50826 * C307) *
                C2298 +
            (C2545 + C2544) * C2292 + (C2543 + C2542) * C2297 +
            (C2541 + C2540) * C2291 + (C2539 + C2538) * C2296) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C50860 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50861 +
           ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50584 * C1331) *
              C50808 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50861 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C50860 -
           ((C10775 * C9163 + C10770 * C9167 + C10774 * C3526 + C10769 * C3531 +
             C10773 * C1109 + C10768 * C1115 + C10772 * C304 + C10767 * C318) *
                C50520 +
            (C10775 * C9161 + C10770 * C9164 + C10774 * C3522 + C10769 * C3527 +
             C10773 * C1103 + C10768 * C1110 + C10772 * C288 + C10767 * C303) *
                C10776) *
               C50710 * C50584 * C1331) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50817 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50860 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50648 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50817) *
              C50861 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C50817 -
           ((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                C2293 +
            (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                C2298 +
            (C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                C2292 +
            (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                C2297 +
            (C2295 * C4184 + C50696 * C4188 + C2294 * C1572 + C50826 * C1577) *
                C2291 +
            (C2295 * C4179 + C50696 * C4185 + C2294 * C1565 + C50826 * C1573) *
                C2296) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50860 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50817) *
              C50861 +
          (((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C50817 -
           ((C10775 * C11896 + C10770 * C11898 + C10774 * C9813 +
             C10769 * C9816 + C10773 * C4184 + C10768 * C4188 + C10772 * C1572 +
             C10767 * C1577) *
                C50520 +
            (C10775 * C11895 + C10770 * C11897 + C10774 * C9810 +
             C10769 * C9814 + C10773 * C4179 + C10768 * C4185 + C10772 * C1565 +
             C10767 * C1573) *
                C10776) *
               C50710 * C50648) *
              C1331) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C50584 * C1096 -
          (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
           (C2536 + C2537) * C2297 +
           (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
               C2291 +
           (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
               C2296) *
              C50710 * C50584 * C1097 +
          ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
               C2296 +
           (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
               C2291 +
           (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
           (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
              C50710 * C50584 * C1098 -
          ((C2295 * C3524 + C50696 * C3530 + C2294 * C1107 + C50826 * C1114) *
               C2293 +
           (C2295 * C3521 + C50696 * C3525 + C2294 * C1102 + C50826 * C1108) *
               C2298 +
           (C2295 * C3526 + C50696 * C3531 + C2294 * C1109 + C50826 * C1115) *
               C2292 +
           (C2295 * C3522 + C50696 * C3527 + C2294 * C1103 + C50826 * C1110) *
               C2297 +
           (C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
               C2291 +
           (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
               C2296) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C1025 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50620 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50584 * C1025 -
           ((C2295 * C311 + C50696 * C322 + C2294 * C310 + C50826 * C321) *
                C2293 +
            (C2295 * C292 + C50696 * C312 + C2294 * C291 + C50826 * C309) *
                C2298 +
            (C2899 + C2898) * C2292 + (C2897 + C2896) * C2297 + C2886 * C2291 +
            C2887 * C2296) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C457 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C458 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C459) *
              C1025 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C458 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C457 -
           ((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                C2293 +
            (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                C2298 +
            (C2295 * C3684 + C50696 * C3689 + C2294 * C1223 + C50826 * C1229) *
                C2292 +
            (C2295 * C3680 + C50696 * C3685 + C2294 * C1217 + C50826 * C1224) *
                C2297 +
            (C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                C2291 +
            (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                C2296) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50620 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3524 + C10770 * C3530 + C10774 * C1107 + C10769 * C1114 +
             C10773 * C306 + C10768 * C319 + C10772 * C295 + C10767 * C314) *
                C50520 +
            (C10775 * C3521 + C10770 * C3525 + C10774 * C1102 + C10769 * C1108 +
             C10773 * C289 + C10768 * C305 + C10772 * C284 + C10767 * C296) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C1096 -
          ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
            C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
               C50520 +
           (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
            C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
               C10776) *
              C50710 * C50584 * C1097 +
          ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
            C10774 * C3523 + C10769 * C3529 + C10775 * C9162 + C10770 * C9166) *
               C10776 +
           (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
            C10774 * C3528 + C10769 * C3532 + C10775 * C9165 + C10770 * C9168) *
               C50520) *
              C50710 * C50584 * C1098 -
          ((C10775 * C11464 + C10770 * C11466 + C10774 * C9165 +
            C10769 * C9168 + C10773 * C3528 + C10768 * C3532 + C10772 * C1111 +
            C10767 * C1116) *
               C50520 +
           (C10775 * C11463 + C10770 * C11465 + C10774 * C9162 +
            C10769 * C9166 + C10773 * C3523 + C10768 * C3529 + C10772 * C1104 +
            C10767 * C1112) *
               C10776) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C457 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C458 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C459) *
              C1025 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C458 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C457 -
           ((C10775 * C11566 + C10770 * C11568 + C10774 * C9319 +
             C10769 * C9322 + C10773 * C3686 + C10768 * C3690 + C10772 * C1225 +
             C10767 * C1230) *
                C50520 +
            (C10775 * C11565 + C10770 * C11567 + C10774 * C9316 +
             C10769 * C9320 + C10773 * C3681 + C10768 * C3687 + C10772 * C1218 +
             C10767 * C1226) *
                C10776) *
               C50710 * C459) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C2296 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C2291 +
             (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
             C2349 * C2293) *
                C50710 * C50817 -
            (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
             (C2730 + C2731) * C2297 +
             (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                 C2291 +
             (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                 C2296) *
                C50710 * C50648) *
               C1025 +
           (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                 C2296 +
             (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                 C2291 +
             (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
             (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                C50710 * C50648 -
            (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
             (C2536 + C2537) * C2297 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C2291 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C2296) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
             (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
             (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                C50710 * C50648 -
            (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
             (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
             (C2333 + C2332) * C2296) *
                C50710 * C50817) *
               C1025 +
           (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
             (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
             (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                C50710 * C50817 -
            ((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C2293 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C2298 +
             (C3277 + C3276) * C2292 + (C3275 + C3274) * C2297 +
             (C3273 + C3272) * C2291 + (C3271 + C3270) * C2296) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
              C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                 C10776 +
             (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
              C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 +
              C10769 * C1577 + C10773 * C895 + C10768 * C904 + C10772 * C476 +
              C10767 * C493) *
                 C50520 +
             (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 +
              C10769 * C1573 + C10773 * C889 + C10768 * C894 + C10772 * C463 +
              C10767 * C477) *
                 C10776) *
                C50710 * C50648) *
               C1025 +
           (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
              C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
              C10770 * C9814) *
                 C10776 +
             (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
              C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
              C10770 * C9816) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 +
              C10769 * C1116 + C10773 * C302 + C10768 * C317 + C10772 * C299 +
              C10767 * C316) *
                 C50520 +
             (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 +
              C10769 * C1112 + C10773 * C287 + C10768 * C301 + C10772 * C286 +
              C10767 * C300) *
                 C10776) *
                C50710 * C50817) *
               C50620) *
              C50808 +
          ((((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
              C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
              C10770 * C4183) *
                 C10776 +
             (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
              C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
              C10770 * C4187) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
              C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                 C50520 +
             (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
              C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                 C10776) *
                C50710 * C50817) *
               C1025 +
           (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
              C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
              C10770 * C3527) *
                 C10776 +
             (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
              C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
              C10770 * C3531) *
                 C50520) *
                C50710 * C50817 -
            ((C10775 * C9811 + C10770 * C9815 + C10774 * C4182 +
              C10769 * C4187 + C10773 * C1570 + C10768 * C1576 + C10772 * C897 +
              C10767 * C905) *
                 C50520 +
             (C10775 * C9809 + C10770 * C9812 + C10774 * C4178 +
              C10769 * C4183 + C10773 * C1564 + C10768 * C1571 + C10772 * C890 +
              C10767 * C896) *
                 C10776) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50584 * C1025 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
            (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
            (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
               C50710 * C50584 * C50620 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50584 * C1025) *
              C1028 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C50584 * C1025 -
           ((C2295 * C311 + C50696 * C322 + C2294 * C310 + C50826 * C321) *
                C2293 +
            (C2295 * C292 + C50696 * C312 + C2294 * C291 + C50826 * C309) *
                C2298 +
            (C2899 + C2898) * C2292 + (C2897 + C2896) * C2297 + C2886 * C2291 +
            C2887 * C2296) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C50584 * C1096 -
          (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
           (C2536 + C2537) * C2297 +
           (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
               C2291 +
           (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
               C2296) *
              C50710 * C50584 * C1097 +
          ((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
               C2296 +
           (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
               C2291 +
           (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
           (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
              C50710 * C50584 * C1098 -
          ((C2295 * C3524 + C50696 * C3530 + C2294 * C1107 + C50826 * C1114) *
               C2293 +
           (C2295 * C3521 + C50696 * C3525 + C2294 * C1102 + C50826 * C1108) *
               C2298 +
           (C2295 * C3526 + C50696 * C3531 + C2294 * C1109 + C50826 * C1115) *
               C2292 +
           (C2295 * C3522 + C50696 * C3527 + C2294 * C1103 + C50826 * C1110) *
               C2297 +
           (C2295 * C3528 + C50696 * C3532 + C2294 * C1111 + C50826 * C1116) *
               C2291 +
           (C2295 * C3523 + C50696 * C3529 + C2294 * C1104 + C50826 * C1112) *
               C2296) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1027 +
          (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
             C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
             C10770 * C3527) *
                C10776 +
            (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
             C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
             C10770 * C3531) *
                C50520) *
               C50710 * C50584 * C50620 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50584 * C1025) *
              C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C50584 * C1025 -
           ((C10775 * C3524 + C10770 * C3530 + C10774 * C1107 + C10769 * C1114 +
             C10773 * C306 + C10768 * C319 + C10772 * C295 + C10767 * C314) *
                C50520 +
            (C10775 * C3521 + C10770 * C3525 + C10774 * C1102 + C10769 * C1108 +
             C10773 * C289 + C10768 * C305 + C10772 * C284 + C10767 * C296) *
                C10776) *
               C50710 * C50584 * C50620) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C50584 * C1096 -
          ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
            C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
               C50520 +
           (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
            C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
               C10776) *
              C50710 * C50584 * C1097 +
          ((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
            C10774 * C3523 + C10769 * C3529 + C10775 * C9162 + C10770 * C9166) *
               C10776 +
           (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
            C10774 * C3528 + C10769 * C3532 + C10775 * C9165 + C10770 * C9168) *
               C50520) *
              C50710 * C50584 * C1098 -
          ((C10775 * C11464 + C10770 * C11466 + C10774 * C9165 +
            C10769 * C9168 + C10773 * C3528 + C10768 * C3532 + C10772 * C1111 +
            C10767 * C1116) *
               C50520 +
           (C10775 * C11463 + C10770 * C11465 + C10774 * C9162 +
            C10769 * C9166 + C10773 * C3523 + C10768 * C3529 + C10772 * C1104 +
            C10767 * C1112) *
               C10776) *
              C50710 * C50584 * C1099) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                 C2296 +
             (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                 C2291 +
             (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
             C2349 * C2293) *
                C50710 * C1676 -
            (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
             (C2730 + C2731) * C2297 +
             (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                 C2291 +
             (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                 C2296) *
                C50710 * C50648) *
               C50816 +
           (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                 C2296 +
             (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                 C2291 +
             (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
             (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
                C50710 * C50648 -
            (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
             (C2536 + C2537) * C2297 +
             (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                 C2291 +
             (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                 C2296) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
             (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
             (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
                C50710 * C50648 -
            (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
             (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
             (C2333 + C2332) * C2296) *
                C50710 * C1676) *
               C50816 +
           (((C2537 + C2536) * C2296 + (C2535 + C2534) * C2291 +
             (C2533 + C2532) * C2297 + (C2531 + C2530) * C2292 +
             (C2896 + C2897) * C2298 + (C2898 + C2899) * C2293) *
                C50710 * C1676 -
            ((C2295 * C1566 + C50696 * C1574 + C2294 * C901 + C50826 * C907) *
                 C2293 +
             (C2295 * C1562 + C50696 * C1567 + C2294 * C892 + C50826 * C900) *
                 C2298 +
             (C3277 + C3276) * C2292 + (C3275 + C3274) * C2297 +
             (C3273 + C3272) * C2291 + (C3271 + C3270) * C2296) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
              C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                 C10776 +
             (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
              C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                 C50520) *
                C50710 * C1676 -
            ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 +
              C10769 * C1577 + C10773 * C895 + C10768 * C904 + C10772 * C476 +
              C10767 * C493) *
                 C50520 +
             (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 +
              C10769 * C1573 + C10773 * C889 + C10768 * C894 + C10772 * C463 +
              C10767 * C477) *
                 C10776) *
                C50710 * C50648) *
               C50816 +
           (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
              C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
              C10770 * C9814) *
                 C10776 +
             (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
              C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
              C10770 * C9816) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 +
              C10769 * C1116 + C10773 * C302 + C10768 * C317 + C10772 * C299 +
              C10767 * C316) *
                 C50520 +
             (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 +
              C10769 * C1112 + C10773 * C287 + C10768 * C301 + C10772 * C286 +
              C10767 * C300) *
                 C10776) *
                C50710 * C1676) *
               C50620) *
              C50808 +
          ((((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
              C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
              C10770 * C4183) *
                 C10776 +
             (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
              C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
              C10770 * C4187) *
                 C50520) *
                C50710 * C50648 -
            ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
              C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                 C50520 +
             (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
              C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                 C10776) *
                C50710 * C1676) *
               C50816 +
           (((C10772 * C285 + C10767 * C298 + C10773 * C288 + C10768 * C303 +
              C10774 * C1103 + C10769 * C1110 + C10775 * C3522 +
              C10770 * C3527) *
                 C10776 +
             (C10772 * C297 + C10767 * C315 + C10773 * C304 + C10768 * C318 +
              C10774 * C1109 + C10769 * C1115 + C10775 * C3526 +
              C10770 * C3531) *
                 C50520) *
                C50710 * C1676 -
            ((C10775 * C9811 + C10770 * C9815 + C10774 * C4182 +
              C10769 * C4187 + C10773 * C1570 + C10768 * C1576 + C10772 * C897 +
              C10767 * C905) *
                 C50520 +
             (C10775 * C9809 + C10770 * C9812 + C10774 * C4178 +
              C10769 * C4183 + C10773 * C1564 + C10768 * C1571 + C10772 * C890 +
              C10767 * C896) *
                 C10776) *
                C50710 * C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50862 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50863 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C2092) *
              C50816 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50863 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C50862 -
           ((C2295 * C3682 + C50696 * C3688 + C2294 * C1221 + C50826 * C1228) *
                C2293 +
            (C2295 * C3679 + C50696 * C3683 + C2294 * C1216 + C50826 * C1222) *
                C2298 +
            (C2295 * C3684 + C50696 * C3689 + C2294 * C1223 + C50826 * C1229) *
                C2292 +
            (C2295 * C3680 + C50696 * C3685 + C2294 * C1217 + C50826 * C1224) *
                C2297 +
            (C2295 * C3686 + C50696 * C3690 + C2294 * C1225 + C50826 * C1230) *
                C2291 +
            (C2295 * C3681 + C50696 * C3687 + C2294 * C1218 + C50826 * C1226) *
                C2296) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50862 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50863 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C2092) *
              C50816 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50863 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C50862 -
           ((C10775 * C11566 + C10770 * C11568 + C10774 * C9319 +
             C10769 * C9322 + C10773 * C3686 + C10768 * C3690 + C10772 * C1225 +
             C10767 * C1230) *
                C50520 +
            (C10775 * C11565 + C10770 * C11567 + C10774 * C9316 +
             C10769 * C9320 + C10773 * C3681 + C10768 * C3687 + C10772 * C1218 +
             C10767 * C1226) *
                C10776) *
               C50710 * C2092) *
              C50620) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C1676 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C278 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50648 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C1676) *
              C279 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C1676 -
           ((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                C2293 +
            (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                C2298 +
            (C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                C2292 +
            (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                C2297 +
            (C2295 * C4184 + C50696 * C4188 + C2294 * C1572 + C50826 * C1577) *
                C2291 +
            (C2295 * C4179 + C50696 * C4185 + C2294 * C1565 + C50826 * C1573) *
                C2296) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C1676 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50648 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C1676 -
           ((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C2293 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C2298 +
            (C3059 + C3058) * C2292 + (C3057 + C3056) * C2297 + C3046 * C2291 +
            C3047 * C2296) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
               C2296 +
           (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
               C2291 +
           (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
           C2349 * C2293) *
              C50710 * C1842 -
          (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
           (C2730 + C2731) * C2297 +
           (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
               C2291 +
           (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
               C2296) *
              C50710 * C1843 +
          ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
               C2296 +
           (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
               C2291 +
           (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
           (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
              C50710 * C1844 -
          ((C2295 * C4582 + C50696 * C4588 + C2294 * C1852 + C50826 * C1859) *
               C2293 +
           (C2295 * C4579 + C50696 * C4583 + C2294 * C1847 + C50826 * C1853) *
               C2298 +
           (C2295 * C4584 + C50696 * C4589 + C2294 * C1854 + C50826 * C1860) *
               C2292 +
           (C2295 * C4580 + C50696 * C4585 + C2294 * C1848 + C50826 * C1855) *
               C2297 +
           (C2295 * C4586 + C50696 * C4590 + C2294 * C1856 + C50826 * C1861) *
               C2291 +
           (C2295 * C4581 + C50696 * C4587 + C2294 * C1849 + C50826 * C1857) *
               C2296) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4180 + C10770 * C4186 + C10774 * C1568 + C10769 * C1575 +
             C10773 * C899 + C10768 * C906 + C10772 * C472 + C10767 * C491) *
                C50520 +
            (C10775 * C4177 + C10770 * C4181 + C10774 * C1563 + C10769 * C1569 +
             C10773 * C891 + C10768 * C898 + C10772 * C461 + C10767 * C473) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C278 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C1676) *
              C279 +
          (((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C11896 + C10770 * C11898 + C10774 * C9813 +
             C10769 * C9816 + C10773 * C4184 + C10768 * C4188 + C10772 * C1572 +
             C10767 * C1577) *
                C50520 +
            (C10775 * C11895 + C10770 * C11897 + C10774 * C9810 +
             C10769 * C9814 + C10773 * C4179 + C10768 * C4185 + C10772 * C1565 +
             C10767 * C1573) *
                C10776) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
            C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
               C10776 +
           (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
            C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
               C50520) *
              C50710 * C1842 -
          ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
            C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
               C50520 +
           (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
            C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
               C10776) *
              C50710 * C1843 +
          ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
            C10774 * C3681 + C10769 * C3687 + C10775 * C9316 + C10770 * C9320) *
               C10776 +
           (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
            C10774 * C3686 + C10769 * C3690 + C10775 * C9319 + C10770 * C9322) *
               C50520) *
              C50710 * C1844 -
          ((C10775 * C12162 + C10770 * C12164 + C10774 * C10211 +
            C10769 * C10214 + C10773 * C4586 + C10768 * C4590 + C10772 * C1856 +
            C10767 * C1861) *
               C50520 +
           (C10775 * C12161 + C10770 * C12163 + C10774 * C10208 +
            C10769 * C10212 + C10773 * C4581 + C10768 * C4587 + C10772 * C1849 +
            C10767 * C1857) *
               C10776) *
              C50710 * C1845) *
         C50568 * C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C50862 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50863 +
           ((C2294 * C464 + C50826 * C478 + C2295 * C1218 + C50696 * C1226) *
                C2296 +
            (C2294 * C479 + C50826 * C494 + C2295 * C1225 + C50696 * C1230) *
                C2291 +
            (C2732 + C2733) * C2297 + (C2734 + C2735) * C2292 +
            (C2736 + C2737) * C2298 + (C2738 + C2739) * C2293) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50863 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C50862 -
           ((C2295 * C1219 + C50696 * C1227 + C2294 * C485 + C50826 * C497) *
                C2293 +
            (C2295 * C1215 + C50696 * C1220 + C2294 * C467 + C50826 * C484) *
                C2298 +
            (C2739 + C2738) * C2292 + (C2737 + C2736) * C2297 +
            (C2735 + C2734) * C2291 + (C2733 + C2732) * C2296) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C50862 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50863 +
           ((C10772 * C464 + C10767 * C478 + C10773 * C1218 + C10768 * C1226 +
             C10774 * C3681 + C10769 * C3687 + C10775 * C9316 +
             C10770 * C9320) *
                C10776 +
            (C10772 * C479 + C10767 * C494 + C10773 * C1225 + C10768 * C1230 +
             C10774 * C3686 + C10769 * C3690 + C10775 * C9319 +
             C10770 * C9322) *
                C50520) *
               C50710 * C2092) *
              C50568 * C50808 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50863 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C50862 -
           ((C10775 * C9317 + C10770 * C9321 + C10774 * C3684 + C10769 * C3689 +
             C10773 * C1223 + C10768 * C1229 + C10772 * C481 + C10767 * C495) *
                C50520 +
            (C10775 * C9315 + C10770 * C9318 + C10774 * C3680 + C10769 * C3685 +
             C10773 * C1217 + C10768 * C1224 + C10772 * C465 + C10767 * C480) *
                C10776) *
               C50710 * C2092) *
              C50568 * C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C1676 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C2731 + C2730) * C2296 + (C2729 + C2728) * C2291 +
            (C2727 + C2726) * C2297 + (C2725 + C2724) * C2292 +
            (C3056 + C3057) * C2298 + (C3058 + C3059) * C2293) *
               C50710 * C50648 -
           (C2350 * C2293 + C2351 * C2298 + (C2339 + C2338) * C2292 +
            (C2337 + C2336) * C2297 + (C2335 + C2334) * C2291 +
            (C2333 + C2332) * C2296) *
               C50710 * C1676) *
              C50568 * C1028 +
          ((C2348 * C2296 + C2349 * C2291 + (C2343 + C2342) * C2297 +
            (C2341 + C2340) * C2292 + (C2344 + C2345) * C2298 +
            (C2346 + C2347) * C2293) *
               C50710 * C1676 -
           ((C2295 * C902 + C50696 * C908 + C2294 * C487 + C50826 * C498) *
                C2293 +
            (C2295 * C893 + C50696 * C903 + C2294 * C468 + C50826 * C486) *
                C2298 +
            (C3059 + C3058) * C2292 + (C3057 + C3056) * C2297 + C3046 * C2291 +
            C3047 * C2296) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2294 * C122 + C50826 * C129 + C2295 * C286 + C50696 * C300) *
                C2296 +
            (C2294 * C130 + C50826 * C143 + C2295 * C299 + C50696 * C316) *
                C2291 +
            (C2332 + C2333) * C2297 + (C2334 + C2335) * C2292 + C2348 * C2298 +
            C2349 * C2293) *
               C50710 * C1676 -
           (C3046 * C2293 + C3047 * C2298 + (C2728 + C2729) * C2292 +
            (C2730 + C2731) * C2297 +
            (C2295 * C895 + C50696 * C904 + C2294 * C476 + C50826 * C493) *
                C2291 +
            (C2295 * C889 + C50696 * C894 + C2294 * C463 + C50826 * C477) *
                C2296) *
               C50710 * C50648) *
              C278 +
          (((C2294 * C889 + C50826 * C894 + C2295 * C1565 + C50696 * C1573) *
                C2296 +
            (C2294 * C895 + C50826 * C904 + C2295 * C1572 + C50696 * C1577) *
                C2291 +
            (C3270 + C3271) * C2297 + (C3272 + C3273) * C2292 +
            (C3274 + C3275) * C2298 + (C3276 + C3277) * C2293) *
               C50710 * C50648 -
           (C2886 * C2293 + C2887 * C2298 + (C2534 + C2535) * C2292 +
            (C2536 + C2537) * C2297 +
            (C2295 * C302 + C50696 * C317 + C2294 * C299 + C50826 * C316) *
                C2291 +
            (C2295 * C287 + C50696 * C301 + C2294 * C286 + C50826 * C300) *
                C2296) *
               C50710 * C1676) *
              C279 +
          (((C2294 * C287 + C50826 * C301 + C2295 * C1104 + C50696 * C1112) *
                C2296 +
            (C2294 * C302 + C50826 * C317 + C2295 * C1111 + C50696 * C1116) *
                C2291 +
            (C2538 + C2539) * C2297 + (C2540 + C2541) * C2292 +
            (C2542 + C2543) * C2298 + (C2544 + C2545) * C2293) *
               C50710 * C1676 -
           ((C2295 * C4180 + C50696 * C4186 + C2294 * C1568 + C50826 * C1575) *
                C2293 +
            (C2295 * C4177 + C50696 * C4181 + C2294 * C1563 + C50826 * C1569) *
                C2298 +
            (C2295 * C4182 + C50696 * C4187 + C2294 * C1570 + C50826 * C1576) *
                C2292 +
            (C2295 * C4178 + C50696 * C4183 + C2294 * C1564 + C50826 * C1571) *
                C2297 +
            (C2295 * C4184 + C50696 * C4188 + C2294 * C1572 + C50826 * C1577) *
                C2291 +
            (C2295 * C4179 + C50696 * C4185 + C2294 * C1565 + C50826 * C1573) *
                C2296) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1027 +
          (((C10772 * C462 + C10767 * C475 + C10773 * C890 + C10768 * C896 +
             C10774 * C1564 + C10769 * C1571 + C10775 * C4178 +
             C10770 * C4183) *
                C10776 +
            (C10772 * C474 + C10767 * C492 + C10773 * C897 + C10768 * C905 +
             C10774 * C1570 + C10769 * C1576 + C10775 * C4182 +
             C10770 * C4187) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C1109 + C10770 * C1115 + C10774 * C304 + C10769 * C318 +
             C10773 * C297 + C10768 * C315 + C10772 * C132 + C10767 * C144) *
                C50520 +
            (C10775 * C1103 + C10770 * C1110 + C10774 * C288 + C10769 * C303 +
             C10773 * C285 + C10768 * C298 + C10772 * C123 + C10767 * C131) *
                C10776) *
               C50710 * C1676) *
              C50568 * C1028 +
          (((C10772 * C124 + C10767 * C133 + C10773 * C284 + C10768 * C296 +
             C10774 * C289 + C10769 * C305 + C10775 * C1102 + C10770 * C1108) *
                C10776 +
            (C10772 * C134 + C10767 * C145 + C10773 * C295 + C10768 * C314 +
             C10774 * C306 + C10769 * C319 + C10775 * C1107 + C10770 * C1114) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4180 + C10770 * C4186 + C10774 * C1568 + C10769 * C1575 +
             C10773 * C899 + C10768 * C906 + C10772 * C472 + C10767 * C491) *
                C50520 +
            (C10775 * C4177 + C10770 * C4181 + C10774 * C1563 + C10769 * C1569 +
             C10773 * C891 + C10768 * C898 + C10772 * C461 + C10767 * C473) *
                C10776) *
               C50710 * C50648) *
              C50568 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10772 * C122 + C10767 * C129 + C10773 * C286 + C10768 * C300 +
             C10774 * C287 + C10769 * C301 + C10775 * C1104 + C10770 * C1112) *
                C10776 +
            (C10772 * C130 + C10767 * C143 + C10773 * C299 + C10768 * C316 +
             C10774 * C302 + C10769 * C317 + C10775 * C1111 + C10770 * C1116) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C4184 + C10770 * C4188 + C10774 * C1572 + C10769 * C1577 +
             C10773 * C895 + C10768 * C904 + C10772 * C476 + C10767 * C493) *
                C50520 +
            (C10775 * C4179 + C10770 * C4185 + C10774 * C1565 + C10769 * C1573 +
             C10773 * C889 + C10768 * C894 + C10772 * C463 + C10767 * C477) *
                C10776) *
               C50710 * C50648) *
              C278 +
          (((C10772 * C889 + C10767 * C894 + C10773 * C1565 + C10768 * C1573 +
             C10774 * C4179 + C10769 * C4185 + C10775 * C9810 +
             C10770 * C9814) *
                C10776 +
            (C10772 * C895 + C10767 * C904 + C10773 * C1572 + C10768 * C1577 +
             C10774 * C4184 + C10769 * C4188 + C10775 * C9813 +
             C10770 * C9816) *
                C50520) *
               C50710 * C50648 -
           ((C10775 * C3528 + C10770 * C3532 + C10774 * C1111 + C10769 * C1116 +
             C10773 * C302 + C10768 * C317 + C10772 * C299 + C10767 * C316) *
                C50520 +
            (C10775 * C3523 + C10770 * C3529 + C10774 * C1104 + C10769 * C1112 +
             C10773 * C287 + C10768 * C301 + C10772 * C286 + C10767 * C300) *
                C10776) *
               C50710 * C1676) *
              C279 +
          (((C10772 * C287 + C10767 * C301 + C10773 * C1104 + C10768 * C1112 +
             C10774 * C3523 + C10769 * C3529 + C10775 * C9162 +
             C10770 * C9166) *
                C10776 +
            (C10772 * C302 + C10767 * C317 + C10773 * C1111 + C10768 * C1116 +
             C10774 * C3528 + C10769 * C3532 + C10775 * C9165 +
             C10770 * C9168) *
                C50520) *
               C50710 * C1676 -
           ((C10775 * C11896 + C10770 * C11898 + C10774 * C9813 +
             C10769 * C9816 + C10773 * C4184 + C10768 * C4188 + C10772 * C1572 +
             C10767 * C1577) *
                C50520 +
            (C10775 * C11895 + C10770 * C11897 + C10774 * C9810 +
             C10769 * C9814 + C10773 * C4179 + C10768 * C4185 + C10772 * C1565 +
             C10767 * C1573) *
                C10776) *
               C50710 * C50648) *
              C280) *
         C50549) /
            (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50584 * C50816 -
                    ((C925 * C2293 + C924 * C2298 + C923 * C2292 +
                      C922 * C2297 + (C117 * C895 + C50680 * C904) * C2291 +
                      (C117 * C889 + C50680 * C894) * C2296) *
                         C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C50620) *
                       C50858 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C922 * C2296 + C923 * C2291 + C924 * C2297 +
                      C925 * C2292 + C926 * C2298 + C927 * C2293) *
                         C50722) *
                        C50584 * C50620 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C50816) *
                       C50859 +
                   (((C173 * C2296 + C174 * C2291 + C175 * C2297 +
                      C176 * C2292 + C178 * C2298 + C177 * C2293) *
                         C50828 +
                     (C528 * C2296 + C527 * C2291 + C526 * C2297 +
                      C525 * C2292 + C758 * C2298 + C759 * C2293) *
                         C50722) *
                        C50584 * C50816 -
                    (((C117 * C902 + C50680 * C908) * C2293 +
                      (C117 * C893 + C50680 * C903) * C2298 + C927 * C2292 +
                      C926 * C2297 + C925 * C2291 + C924 * C2296) *
                         C50722 +
                     (C649 * C2293 + C648 * C2298 + C348 * C2292 +
                      C349 * C2297 + C350 * C2291 + C351 * C2296) *
                         C50828) *
                        C50584 * C50620) *
                       C638)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50584 * C50816 -
                    (((C7956 * C4184 + C7951 * C4188 + C7955 * C1572 +
                       C7950 * C1577 + C7954 * C895 + C7949 * C904) *
                          C50520 +
                      (C7956 * C4179 + C7951 * C4185 + C7955 * C1565 +
                       C7950 * C1573 + C7954 * C889 + C7949 * C894) *
                          C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C50620) *
                       C50858 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C50620 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C50816) *
                       C50859 +
                   ((((C8007 + C8006 + C8005) * C10776 +
                      (C8004 + C8003 + C8002) * C50520) *
                         C50828 +
                     ((C8700 + C8701 + C8702) * C10776 +
                      (C8703 + C8704 + C8705) * C50520) *
                         C50722) *
                        C50584 * C50816 -
                    (((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 +
                       C7950 * C1575 + C7954 * C899 + C7949 * C906) *
                          C50520 +
                      (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 +
                       C7950 * C1569 + C7954 * C891 + C7949 * C898) *
                          C10776) *
                         C50722 +
                     ((C8541 + C8540 + C8539) * C50520 +
                      (C8538 + C8537 + C8536) * C10776) *
                         C50828) *
                        C50584 * C50620) *
                       C638)) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C2296 +
              (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
              C172 * C2292 + C173 * C2298 + C174 * C2293) *
                 C50828 +
             (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                C50817 -
            ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
             (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                C50648) *
               C50816 +
           (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
             ((C117 * C1218 + C50680 * C1226) * C2296 +
              (C117 * C1225 + C50680 * C1230) * C2291 + C6046 * C2297 +
              C6047 * C2292 + C6048 * C2298 + C6049 * C2293) *
                 C50722) *
                C50648 -
            ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
             (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
              (C117 * C299 + C50680 * C316) * C2291 +
              (C117 * C286 + C50680 * C300) * C2296) *
                 C50828) *
                C50817) *
               C50620) *
              C281 +
          ((((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
             (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                C50648 -
            ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
             (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
              C172 * C2291 + C171 * C2296) *
                 C50828) *
                C50817) *
               C50816 +
           (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
              C349 * C2298 + C348 * C2293) *
                 C50828 +
             (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                C50817 -
            (((C117 * C1219 + C50680 * C1227) * C2293 +
              (C117 * C1215 + C50680 * C1220) * C2298 + C6049 * C2292 +
              C6048 * C2297 + C6047 * C2291 + C6046 * C2296) *
                 C50722 +
             (C6043 + C6042 + C6041 + C6040 + C6039 + C6038) * C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
               C7956 * C287 + C7951 * C301) *
                  C10776 +
              (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
               C7956 * C302 + C7951 * C317) *
                  C50520) *
                 C50828 +
             ((C12906 + C12907 + C12908) * C10776 +
              (C12909 + C12910 + C12911) * C50520) *
                 C50722) *
                C50817 -
            (((C12912 + C12913 + C12914) * C50520 +
              (C12915 + C12916 + C12917) * C10776) *
                 C50722 +
             ((C12911 + C12910 + C12909) * C50520 +
              (C12908 + C12907 + C12906) * C10776) *
                 C50828) *
                C50648) *
               C50816 +
           ((((C13416 + C13417 + C13418) * C10776 +
              (C13419 + C13420 + C13421) * C50520) *
                 C50828 +
             ((C7954 * C1218 + C7949 * C1226 + C7955 * C3681 + C7950 * C3687 +
               C7956 * C9316 + C7951 * C9320) *
                  C10776 +
              (C7954 * C1225 + C7949 * C1230 + C7955 * C3686 + C7950 * C3690 +
               C7956 * C9319 + C7951 * C9322) *
                  C50520) *
                 C50722) *
                C50648 -
            (((C13421 + C13420 + C13419) * C50520 +
              (C13418 + C13417 + C13416) * C10776) *
                 C50722 +
             ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
               C7954 * C299 + C7949 * C316) *
                  C50520 +
              (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
               C7954 * C286 + C7949 * C300) *
                  C10776) *
                 C50828) *
                C50817) *
               C50620) *
              C281 +
          (((((C8371 + C8370 + C8369) * C10776 +
              (C8368 + C8367 + C8366) * C50520) *
                 C50828 +
             ((C8372 + C8373 + C8374) * C10776 +
              (C8375 + C8376 + C8377) * C50520) *
                 C50722) *
                C50648 -
            (((C8366 + C8367 + C8368) * C50520 +
              (C8369 + C8370 + C8371) * C10776) *
                 C50722 +
             ((C8001 + C8000 + C7999) * C50520 +
              (C7998 + C7997 + C7996) * C10776) *
                 C50828) *
                C50817) *
               C50816 +
           ((((C8189 + C8188 + C8187) * C10776 +
              (C8186 + C8185 + C8184) * C50520) *
                 C50828 +
             ((C8912 + C8913 + C8914) * C10776 +
              (C8915 + C8916 + C8917) * C50520) *
                 C50722) *
                C50817 -
            (((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
               C7954 * C1223 + C7949 * C1229) *
                  C50520 +
              (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
               C7954 * C1217 + C7949 * C1224) *
                  C10776) *
                 C50722 +
             ((C8917 + C8916 + C8915) * C50520 +
              (C8914 + C8913 + C8912) * C10776) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     ((C117 * C463 + C50680 * C477) * C2296 +
                      (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                      C529 * C2292 + C528 * C2298 + C527 * C2293) *
                         C50722) *
                        C50584 * C278 -
                    ((C925 * C2293 + C924 * C2298 + C923 * C2292 +
                      C922 * C2297 + (C117 * C895 + C50680 * C904) * C2291 +
                      (C117 * C889 + C50680 * C894) * C2296) *
                         C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C279 +
                    (((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     ((C117 * C1565 + C50680 * C1573) * C2296 +
                      (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                      C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                         C50722) *
                        C50584 * C280) *
                       C281 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C922 * C2296 + C923 * C2291 + C924 * C2297 +
                      C925 * C2292 + C926 * C2298 + C927 * C2293) *
                         C50722) *
                        C50584 * C279 -
                    ((C525 * C2293 + C526 * C2298 + C527 * C2292 +
                      C528 * C2297 + C529 * C2291 + C530 * C2296) *
                         C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C278 -
                    (((C117 * C1566 + C50680 * C1574) * C2293 +
                      (C117 * C1562 + C50680 * C1567) * C2298 + C5335 * C2292 +
                      C5334 * C2297 + C5333 * C2291 + C5332 * C2296) *
                         C50722 +
                     (C359 * C2293 + C358 * C2298 + C357 * C2292 +
                      C356 * C2297 + C355 * C2291 + C354 * C2296) *
                         C50828) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C2296 +
                     (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                     C172 * C2292 + C173 * C2298 + C174 * C2293) *
                        C50828 +
                    ((C117 * C463 + C50680 * C477) * C2296 +
                     (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                     C529 * C2292 + C528 * C2298 + C527 * C2293) *
                        C50722) *
                       C50584 * C50568 * C113 -
                   ((C525 * C2293 + C526 * C2298 + C527 * C2292 + C528 * C2297 +
                     C529 * C2291 + C530 * C2296) *
                        C50722 +
                    (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                     C172 * C2291 + C171 * C2296) *
                        C50828) *
                       C50584 * C50568 * C114 +
                   ((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
                     C178 * C2298 + C177 * C2293) *
                        C50828 +
                    (C528 * C2296 + C527 * C2291 + C526 * C2297 + C525 * C2292 +
                     C758 * C2298 + C759 * C2293) *
                        C50722) *
                       C50584 * C50568 * C115 -
                   (((C117 * C750 + C50680 * C752) * C2293 +
                     (C117 * C749 + C50680 * C751) * C2298 + C759 * C2292 +
                     C758 * C2297 + C525 * C2291 + C526 * C2296) *
                        C50722 +
                    (C180 * C2293 + C179 * C2298 + C177 * C2292 + C178 * C2297 +
                     C176 * C2291 + C175 * C2296) *
                        C50828) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C457 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C458 +
                    ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
                     ((C117 * C1849 + C50680 * C1857) * C2296 +
                      (C117 * C1856 + C50680 * C1861) * C2291 + C5522 * C2297 +
                      C5523 * C2292 + C5524 * C2298 + C5525 * C2293) *
                         C50722) *
                        C459) *
                       C50568 * C281 +
                   (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
                     (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                        C458 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C457 -
                    (((C117 * C1850 + C50680 * C1858) * C2293 +
                      (C117 * C1846 + C50680 * C1851) * C2298 + C5525 * C2292 +
                      C5524 * C2297 + C5523 * C2291 + C5522 * C2296) *
                         C50722 +
                     (C5517 + C5516 + C5515 + C5514 + C5513 + C5512) * C50828) *
                        C459) *
                       C50568 * C50555)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                      C7950 * C300 + C7956 * C287 + C7951 * C301) *
                         C10776 +
                     (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                      C7950 * C316 + C7956 * C302 + C7951 * C317) *
                         C50520) *
                        C50828 +
                    ((C7954 * C463 + C7949 * C477 + C7955 * C889 +
                      C7950 * C894 + C7956 * C1565 + C7951 * C1573) *
                         C10776 +
                     (C7954 * C476 + C7949 * C493 + C7955 * C895 +
                      C7950 * C904 + C7956 * C1572 + C7951 * C1577) *
                         C50520) *
                        C50722) *
                       C50584 * C50568 * C113 -
                   (((C8366 + C8367 + C8368) * C50520 +
                     (C8369 + C8370 + C8371) * C10776) *
                        C50722 +
                    ((C8001 + C8000 + C7999) * C50520 +
                     (C7998 + C7997 + C7996) * C10776) *
                        C50828) *
                       C50584 * C50568 * C114 +
                   (((C8007 + C8006 + C8005) * C10776 +
                     (C8004 + C8003 + C8002) * C50520) *
                        C50828 +
                    ((C8700 + C8701 + C8702) * C10776 +
                     (C8703 + C8704 + C8705) * C50520) *
                        C50722) *
                       C50584 * C50568 * C115 -
                   (((C7956 * C1566 + C7951 * C1574 + C7955 * C901 +
                      C7950 * C907 + C7954 * C470 + C7949 * C490) *
                         C50520 +
                     (C7956 * C1562 + C7951 * C1567 + C7955 * C892 +
                      C7950 * C900 + C7954 * C460 + C7949 * C471) *
                         C10776) *
                        C50722 +
                    ((C8013 + C8012 + C8011) * C50520 +
                     (C8010 + C8009 + C8008) * C10776) *
                        C50828) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C7954 * C463 + C7949 * C477 + C7955 * C889 +
                       C7950 * C894 + C7956 * C1565 + C7951 * C1573) *
                          C10776 +
                      (C7954 * C476 + C7949 * C493 + C7955 * C895 +
                       C7950 * C904 + C7956 * C1572 + C7951 * C1577) *
                          C50520) *
                         C50722) *
                        C50584 * C278 -
                    (((C7956 * C4184 + C7951 * C4188 + C7955 * C1572 +
                       C7950 * C1577 + C7954 * C895 + C7949 * C904) *
                          C50520 +
                      (C7956 * C4179 + C7951 * C4185 + C7955 * C1565 +
                       C7950 * C1573 + C7954 * C889 + C7949 * C894) *
                          C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C279 +
                    (((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 +
                       C7950 * C4185 + C7956 * C9810 + C7951 * C9814) *
                          C10776 +
                      (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 +
                       C7950 * C4188 + C7956 * C9813 + C7951 * C9816) *
                          C50520) *
                         C50722) *
                        C50584 * C280) *
                       C281 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C279 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C278 -
                    (((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 +
                       C7950 * C4187 + C7954 * C1570 + C7949 * C1576) *
                          C50520 +
                      (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 +
                       C7950 * C4183 + C7954 * C1564 + C7949 * C1571) *
                          C10776) *
                         C50722 +
                     ((C8195 + C8194 + C8193) * C50520 +
                      (C8192 + C8191 + C8190) * C10776) *
                         C50828) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C457 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C458 +
                    (((C12917 + C12916 + C12915) * C10776 +
                      (C12914 + C12913 + C12912) * C50520) *
                         C50828 +
                     ((C7954 * C1849 + C7949 * C1857 + C7955 * C4581 +
                       C7950 * C4587 + C7956 * C10208 + C7951 * C10212) *
                          C10776 +
                      (C7954 * C1856 + C7949 * C1861 + C7955 * C4586 +
                       C7950 * C4590 + C7956 * C10211 + C7951 * C10214) *
                          C50520) *
                         C50722) *
                        C459) *
                       C50568 * C281 +
                   ((((C8371 + C8370 + C8369) * C10776 +
                      (C8368 + C8367 + C8366) * C50520) *
                         C50828 +
                     ((C8372 + C8373 + C8374) * C10776 +
                      (C8375 + C8376 + C8377) * C50520) *
                         C50722) *
                        C458 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C457 -
                    (((C7956 * C10209 + C7951 * C10213 + C7955 * C4584 +
                       C7950 * C4589 + C7954 * C1854 + C7949 * C1860) *
                          C50520 +
                      (C7956 * C10207 + C7951 * C10210 + C7955 * C4580 +
                       C7950 * C4585 + C7954 * C1848 + C7949 * C1855) *
                          C10776) *
                         C50722 +
                     ((C8377 + C8376 + C8375) * C50520 +
                      (C8374 + C8373 + C8372) * C10776) *
                         C50828) *
                        C459) *
                       C50568 * C50555)) /
                     (p * q * std::sqrt(p + q));
    d2ee[213] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50817 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50648) *
                       C50568 * C50858 +
                   (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
                     (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                        C50648 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50817) *
                       C50568 * C50859 +
                   (((C173 * C2296 + C174 * C2291 + C175 * C2297 +
                      C176 * C2292 + C178 * C2298 + C177 * C2293) *
                         C50828 +
                     (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                        C50817 -
                    (((C117 * C488 + C50680 * C499) * C2293 +
                      (C117 * C469 + C50680 * C489) * C2298 + C536 * C2292 +
                      C535 * C2297 + C534 * C2291 + C533 * C2296) *
                         C50722 +
                     (C5827 + C5826 + C5825 + C5824 + C5823 + C5822) * C50828) *
                        C50648) *
                       C50568 * C638)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50817 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50648) *
                       C50568 * C50858 +
                   ((((C8371 + C8370 + C8369) * C10776 +
                      (C8368 + C8367 + C8366) * C50520) *
                         C50828 +
                     ((C8372 + C8373 + C8374) * C10776 +
                      (C8375 + C8376 + C8377) * C50520) *
                         C50722) *
                        C50648 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50817) *
                       C50568 * C50859 +
                   ((((C8007 + C8006 + C8005) * C10776 +
                      (C8004 + C8003 + C8002) * C50520) *
                         C50828 +
                     ((C8700 + C8701 + C8702) * C10776 +
                      (C8703 + C8704 + C8705) * C50520) *
                         C50722) *
                        C50817 -
                    (((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 +
                       C7950 * C1228 + C7954 * C483 + C7949 * C496) *
                          C50520 +
                      (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 +
                       C7950 * C1222 + C7954 * C466 + C7949 * C482) *
                          C10776) *
                         C50722 +
                     ((C8705 + C8704 + C8703) * C50520 +
                      (C8702 + C8701 + C8700) * C10776) *
                         C50828) *
                        C50648) *
                       C50568 * C638)) /
                     (p * q * std::sqrt(p + q));
    d2ee[214] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C2296 +
                     (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                     C172 * C2292 + C173 * C2298 + C174 * C2293) *
                        C50828 +
                    ((C117 * C463 + C50680 * C477) * C2296 +
                     (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                     C529 * C2292 + C528 * C2298 + C527 * C2293) *
                        C50722) *
                       C50584 * C50568 * C113 -
                   ((C525 * C2293 + C526 * C2298 + C527 * C2292 + C528 * C2297 +
                     C529 * C2291 + C530 * C2296) *
                        C50722 +
                    (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
                     C172 * C2291 + C171 * C2296) *
                        C50828) *
                       C50584 * C50568 * C114 +
                   ((C173 * C2296 + C174 * C2291 + C175 * C2297 + C176 * C2292 +
                     C178 * C2298 + C177 * C2293) *
                        C50828 +
                    (C528 * C2296 + C527 * C2291 + C526 * C2297 + C525 * C2292 +
                     C758 * C2298 + C759 * C2293) *
                        C50722) *
                       C50584 * C50568 * C115 -
                   (((C117 * C750 + C50680 * C752) * C2293 +
                     (C117 * C749 + C50680 * C751) * C2298 + C759 * C2292 +
                     C758 * C2297 + C525 * C2291 + C526 * C2296) *
                        C50722 +
                    (C180 * C2293 + C179 * C2298 + C177 * C2292 + C178 * C2297 +
                     C176 * C2291 + C175 * C2296) *
                        C50828) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     ((C117 * C463 + C50680 * C477) * C2296 +
                      (C117 * C476 + C50680 * C493) * C2291 + C530 * C2297 +
                      C529 * C2292 + C528 * C2298 + C527 * C2293) *
                         C50722) *
                        C50584 * C278 -
                    ((C925 * C2293 + C924 * C2298 + C923 * C2292 +
                      C922 * C2297 + (C117 * C895 + C50680 * C904) * C2291 +
                      (C117 * C889 + C50680 * C894) * C2296) *
                         C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C279 +
                    (((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     ((C117 * C1565 + C50680 * C1573) * C2296 +
                      (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                      C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                         C50722) *
                        C50584 * C280) *
                       C281 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C922 * C2296 + C923 * C2291 + C924 * C2297 +
                      C925 * C2292 + C926 * C2298 + C927 * C2293) *
                         C50722) *
                        C50584 * C279 -
                    ((C525 * C2293 + C526 * C2298 + C527 * C2292 +
                      C528 * C2297 + C529 * C2291 + C530 * C2296) *
                         C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C278 -
                    (((C117 * C1566 + C50680 * C1574) * C2293 +
                      (C117 * C1562 + C50680 * C1567) * C2298 + C5335 * C2292 +
                      C5334 * C2297 + C5333 * C2291 + C5332 * C2296) *
                         C50722 +
                     (C359 * C2293 + C358 * C2298 + C357 * C2292 +
                      C356 * C2297 + C355 * C2291 + C354 * C2296) *
                         C50828) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                      C7950 * C300 + C7956 * C287 + C7951 * C301) *
                         C10776 +
                     (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                      C7950 * C316 + C7956 * C302 + C7951 * C317) *
                         C50520) *
                        C50828 +
                    ((C7954 * C463 + C7949 * C477 + C7955 * C889 +
                      C7950 * C894 + C7956 * C1565 + C7951 * C1573) *
                         C10776 +
                     (C7954 * C476 + C7949 * C493 + C7955 * C895 +
                      C7950 * C904 + C7956 * C1572 + C7951 * C1577) *
                         C50520) *
                        C50722) *
                       C50584 * C50568 * C113 -
                   (((C8366 + C8367 + C8368) * C50520 +
                     (C8369 + C8370 + C8371) * C10776) *
                        C50722 +
                    ((C8001 + C8000 + C7999) * C50520 +
                     (C7998 + C7997 + C7996) * C10776) *
                        C50828) *
                       C50584 * C50568 * C114 +
                   (((C8007 + C8006 + C8005) * C10776 +
                     (C8004 + C8003 + C8002) * C50520) *
                        C50828 +
                    ((C8700 + C8701 + C8702) * C10776 +
                     (C8703 + C8704 + C8705) * C50520) *
                        C50722) *
                       C50584 * C50568 * C115 -
                   (((C7956 * C1566 + C7951 * C1574 + C7955 * C901 +
                      C7950 * C907 + C7954 * C470 + C7949 * C490) *
                         C50520 +
                     (C7956 * C1562 + C7951 * C1567 + C7955 * C892 +
                      C7950 * C900 + C7954 * C460 + C7949 * C471) *
                         C10776) *
                        C50722 +
                    ((C8013 + C8012 + C8011) * C50520 +
                     (C8010 + C8009 + C8008) * C10776) *
                        C50828) *
                       C50584 * C50568 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C7954 * C463 + C7949 * C477 + C7955 * C889 +
                       C7950 * C894 + C7956 * C1565 + C7951 * C1573) *
                          C10776 +
                      (C7954 * C476 + C7949 * C493 + C7955 * C895 +
                       C7950 * C904 + C7956 * C1572 + C7951 * C1577) *
                          C50520) *
                         C50722) *
                        C50584 * C278 -
                    (((C7956 * C4184 + C7951 * C4188 + C7955 * C1572 +
                       C7950 * C1577 + C7954 * C895 + C7949 * C904) *
                          C50520 +
                      (C7956 * C4179 + C7951 * C4185 + C7955 * C1565 +
                       C7950 * C1573 + C7954 * C889 + C7949 * C894) *
                          C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C279 +
                    (((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 +
                       C7950 * C4185 + C7956 * C9810 + C7951 * C9814) *
                          C10776 +
                      (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 +
                       C7950 * C4188 + C7956 * C9813 + C7951 * C9816) *
                          C50520) *
                         C50722) *
                        C50584 * C280) *
                       C281 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C279 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C278 -
                    (((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 +
                       C7950 * C4187 + C7954 * C1570 + C7949 * C1576) *
                          C50520 +
                      (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 +
                       C7950 * C4183 + C7954 * C1564 + C7949 * C1571) *
                          C10776) *
                         C50722 +
                     ((C8195 + C8194 + C8193) * C50520 +
                      (C8192 + C8191 + C8190) * C10776) *
                         C50828) *
                        C50584 * C280) *
                       C50555)) /
                     (p * q * std::sqrt(p + q));
    d2ee[215] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50584 * C50860 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C50861 +
                    (((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     ((C117 * C1565 + C50680 * C1573) * C2296 +
                      (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                      C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                         C50722) *
                        C50584 * C1331) *
                       C50808 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                        C50584 * C50861 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C50860 -
                    (((C117 * C1566 + C50680 * C1574) * C2293 +
                      (C117 * C1562 + C50680 * C1567) * C2298 + C5335 * C2292 +
                      C5334 * C2297 + C5333 * C2291 + C5332 * C2296) *
                         C50722 +
                     (C359 * C2293 + C358 * C2298 + C357 * C2292 +
                      C356 * C2297 + C355 * C2291 + C354 * C2296) *
                         C50828) *
                        C50584 * C1331) *
                       C50555)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50584 * C50860 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C50861 +
                    (((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 +
                       C7950 * C4185 + C7956 * C9810 + C7951 * C9814) *
                          C10776 +
                      (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 +
                       C7950 * C4188 + C7956 * C9813 + C7951 * C9816) *
                          C50520) *
                         C50722) *
                        C50584 * C1331) *
                       C50808 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C50861 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C50860 -
                    (((C7956 * C9811 + C7951 * C9815 + C7955 * C4182 +
                       C7950 * C4187 + C7954 * C1570 + C7949 * C1576) *
                          C50520 +
                      (C7956 * C9809 + C7951 * C9812 + C7955 * C4178 +
                       C7950 * C4183 + C7954 * C1564 + C7949 * C1571) *
                          C10776) *
                         C50722 +
                     ((C8195 + C8194 + C8193) * C50520 +
                      (C8192 + C8191 + C8190) * C10776) *
                         C50828) *
                        C50584 * C1331) *
                       C50555)) /
                     (p * q * std::sqrt(p + q));
    d2ee[216] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50817 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50648) *
                       C50860 +
                   (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
                     (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                        C50648 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50817) *
                       C50861 +
                   ((((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     (C6950 + C6951 + C6944 + C6945 + C6946 + C6947) * C50722) *
                        C50817 -
                    (((C117 * C3682 + C50680 * C3688) * C2293 +
                      (C117 * C3679 + C50680 * C3683) * C2298 +
                      (C117 * C3684 + C50680 * C3689) * C2292 +
                      (C117 * C3680 + C50680 * C3685) * C2297 +
                      (C117 * C3686 + C50680 * C3690) * C2291 +
                      (C117 * C3681 + C50680 * C3687) * C2296) *
                         C50722 +
                     (C6947 + C6946 + C6945 + C6944 + C6951 + C6950) * C50828) *
                        C50648) *
                       C1331) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50817 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50648) *
                       C50860 +
                   ((((C13416 + C13417 + C13418) * C10776 +
                      (C13419 + C13420 + C13421) * C50520) *
                         C50828 +
                     ((C13824 + C13825 + C13826) * C10776 +
                      (C13827 + C13828 + C13829) * C50520) *
                         C50722) *
                        C50648 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50817) *
                       C50861 +
                   ((((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C14328 + C14329 + C14330) * C10776 +
                      (C14331 + C14332 + C14333) * C50520) *
                         C50722) *
                        C50817 -
                    (((C7956 * C11566 + C7951 * C11568 + C7955 * C9319 +
                       C7950 * C9322 + C7954 * C3686 + C7949 * C3690) *
                          C50520 +
                      (C7956 * C11565 + C7951 * C11567 + C7955 * C9316 +
                       C7950 * C9320 + C7954 * C3681 + C7949 * C3687) *
                          C10776) *
                         C50722 +
                     ((C14333 + C14332 + C14331) * C50520 +
                      (C14330 + C14329 + C14328) * C10776) *
                         C50828) *
                        C50648) *
                       C1331) *
                  C50549) /
                     (p * q * std::sqrt(p + q));
    d2ee[217] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C2296 +
                     (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                     C172 * C2292 + C173 * C2298 + C174 * C2293) *
                        C50828 +
                    (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                       C50584 * C1096 -
                   ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                    (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
                     (C117 * C299 + C50680 * C316) * C2291 +
                     (C117 * C286 + C50680 * C300) * C2296) *
                        C50828) *
                       C50584 * C1097 +
                   (((C117 * C287 + C50680 * C301) * C2296 +
                     (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                     C355 * C2292 + C356 * C2298 + C357 * C2293) *
                        C50828 +
                    ((C117 * C1565 + C50680 * C1573) * C2296 +
                     (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                     C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                        C50722) *
                       C50584 * C1098 -
                   (((C117 * C4180 + C50680 * C4186) * C2293 +
                     (C117 * C4177 + C50680 * C4181) * C2298 +
                     (C117 * C4182 + C50680 * C4187) * C2292 +
                     (C117 * C4178 + C50680 * C4183) * C2297 +
                     (C117 * C4184 + C50680 * C4188) * C2291 +
                     (C117 * C4179 + C50680 * C4185) * C2296) *
                        C50722 +
                    ((C117 * C1107 + C50680 * C1114) * C2293 +
                     (C117 * C1102 + C50680 * C1108) * C2298 +
                     (C117 * C1109 + C50680 * C1115) * C2292 +
                     (C117 * C1103 + C50680 * C1110) * C2297 +
                     (C117 * C1111 + C50680 * C1116) * C2291 +
                     (C117 * C1104 + C50680 * C1112) * C2296) *
                        C50828) *
                       C50584 * C1099) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50584 * C1025 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C50620) *
                       C1027 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                        C50584 * C50620 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C1025) *
                       C1028 +
                   (((C173 * C2296 + C174 * C2291 + C175 * C2297 +
                      C176 * C2292 + C178 * C2298 + C177 * C2293) *
                         C50828 +
                     (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                        C50584 * C1025 -
                    (((C117 * C902 + C50680 * C908) * C2293 +
                      (C117 * C893 + C50680 * C903) * C2298 + C927 * C2292 +
                      C926 * C2297 + C925 * C2291 + C924 * C2296) *
                         C50722 +
                     (C649 * C2293 + C648 * C2298 + C348 * C2292 +
                      C349 * C2297 + C350 * C2291 + C351 * C2296) *
                         C50828) *
                        C50584 * C50620) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C457 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C458 +
                    ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
                     ((C117 * C1849 + C50680 * C1857) * C2296 +
                      (C117 * C1856 + C50680 * C1861) * C2291 + C5522 * C2297 +
                      C5523 * C2292 + C5524 * C2298 + C5525 * C2293) *
                         C50722) *
                        C459) *
                       C1025 +
                   (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
                     (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                        C458 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C457 -
                    (((C117 * C4582 + C50680 * C4588) * C2293 +
                      (C117 * C4579 + C50680 * C4583) * C2298 +
                      (C117 * C4584 + C50680 * C4589) * C2292 +
                      (C117 * C4580 + C50680 * C4585) * C2297 +
                      (C117 * C4586 + C50680 * C4590) * C2291 +
                      (C117 * C4581 + C50680 * C4587) * C2296) *
                         C50722 +
                     (C6449 + C6448 + C6447 + C6446 + C6453 + C6452) * C50828) *
                        C459) *
                       C50620) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50584 * C1025 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C50620) *
                       C1027 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C50620 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C1025) *
                       C1028 +
                   ((((C8007 + C8006 + C8005) * C10776 +
                      (C8004 + C8003 + C8002) * C50520) *
                         C50828 +
                     ((C8700 + C8701 + C8702) * C10776 +
                      (C8703 + C8704 + C8705) * C50520) *
                         C50722) *
                        C50584 * C1025 -
                    (((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 +
                       C7950 * C1575 + C7954 * C899 + C7949 * C906) *
                          C50520 +
                      (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 +
                       C7950 * C1569 + C7954 * C891 + C7949 * C898) *
                          C10776) *
                         C50722 +
                     ((C8541 + C8540 + C8539) * C50520 +
                      (C8538 + C8537 + C8536) * C10776) *
                         C50828) *
                        C50584 * C50620) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                      C7950 * C300 + C7956 * C287 + C7951 * C301) *
                         C10776 +
                     (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                      C7950 * C316 + C7956 * C302 + C7951 * C317) *
                         C50520) *
                        C50828 +
                    ((C12906 + C12907 + C12908) * C10776 +
                     (C12909 + C12910 + C12911) * C50520) *
                        C50722) *
                       C50584 * C1096 -
                   (((C13421 + C13420 + C13419) * C50520 +
                     (C13418 + C13417 + C13416) * C10776) *
                        C50722 +
                    ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                      C7950 * C317 + C7954 * C299 + C7949 * C316) *
                         C50520 +
                     (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                      C7950 * C301 + C7954 * C286 + C7949 * C300) *
                         C10776) *
                        C50828) *
                       C50584 * C1097 +
                   (((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                      C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                         C10776 +
                     (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                      C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                         C50520) *
                        C50828 +
                    ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 +
                      C7950 * C4185 + C7956 * C9810 + C7951 * C9814) *
                         C10776 +
                     (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 +
                      C7950 * C4188 + C7956 * C9813 + C7951 * C9816) *
                         C50520) *
                        C50722) *
                       C50584 * C1098 -
                   (((C7956 * C11896 + C7951 * C11898 + C7955 * C9813 +
                      C7950 * C9816 + C7954 * C4184 + C7949 * C4188) *
                         C50520 +
                     (C7956 * C11895 + C7951 * C11897 + C7955 * C9810 +
                      C7950 * C9814 + C7954 * C4179 + C7949 * C4185) *
                         C10776) *
                        C50722 +
                    ((C7956 * C9165 + C7951 * C9168 + C7955 * C3528 +
                      C7950 * C3532 + C7954 * C1111 + C7949 * C1116) *
                         C50520 +
                     (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 +
                      C7950 * C3529 + C7954 * C1104 + C7949 * C1112) *
                         C10776) *
                        C50828) *
                       C50584 * C1099) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C457 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C458 +
                    (((C12917 + C12916 + C12915) * C10776 +
                      (C12914 + C12913 + C12912) * C50520) *
                         C50828 +
                     ((C7954 * C1849 + C7949 * C1857 + C7955 * C4581 +
                       C7950 * C4587 + C7956 * C10208 + C7951 * C10212) *
                          C10776 +
                      (C7954 * C1856 + C7949 * C1861 + C7955 * C4586 +
                       C7950 * C4590 + C7956 * C10211 + C7951 * C10214) *
                          C50520) *
                         C50722) *
                        C459) *
                       C1025 +
                   ((((C13416 + C13417 + C13418) * C10776 +
                      (C13419 + C13420 + C13421) * C50520) *
                         C50828 +
                     ((C13824 + C13825 + C13826) * C10776 +
                      (C13827 + C13828 + C13829) * C50520) *
                         C50722) *
                        C458 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C457 -
                    (((C7956 * C12162 + C7951 * C12164 + C7955 * C10211 +
                       C7950 * C10214 + C7954 * C4586 + C7949 * C4590) *
                          C50520 +
                      (C7956 * C12161 + C7951 * C12163 + C7955 * C10208 +
                       C7950 * C10212 + C7954 * C4581 + C7949 * C4587) *
                          C10776) *
                         C50722 +
                     ((C13829 + C13828 + C13827) * C50520 +
                      (C13826 + C13825 + C13824) * C10776) *
                         C50828) *
                        C459) *
                       C50620) *
                  C50549) /
                     (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C2296 +
              (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
              C172 * C2292 + C173 * C2298 + C174 * C2293) *
                 C50828 +
             (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                C50817 -
            ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
             (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                C50648) *
               C1025 +
           (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
             (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                C50648 -
            ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
             (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
              (C117 * C299 + C50680 * C316) * C2291 +
              (C117 * C286 + C50680 * C300) * C2296) *
                 C50828) *
                C50817) *
               C50620) *
              C50808 +
          ((((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
             (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                C50648 -
            ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
             (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
              C172 * C2291 + C171 * C2296) *
                 C50828) *
                C50817) *
               C1025 +
           (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
              C349 * C2298 + C348 * C2293) *
                 C50828 +
             (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                C50817 -
            (((C117 * C1219 + C50680 * C1227) * C2293 +
              (C117 * C1215 + C50680 * C1220) * C2298 + C6049 * C2292 +
              C6048 * C2297 + C6047 * C2291 + C6046 * C2296) *
                 C50722 +
             (C6043 + C6042 + C6041 + C6040 + C6039 + C6038) * C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
               C7956 * C287 + C7951 * C301) *
                  C10776 +
              (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
               C7956 * C302 + C7951 * C317) *
                  C50520) *
                 C50828 +
             ((C12906 + C12907 + C12908) * C10776 +
              (C12909 + C12910 + C12911) * C50520) *
                 C50722) *
                C50817 -
            (((C12912 + C12913 + C12914) * C50520 +
              (C12915 + C12916 + C12917) * C10776) *
                 C50722 +
             ((C12911 + C12910 + C12909) * C50520 +
              (C12908 + C12907 + C12906) * C10776) *
                 C50828) *
                C50648) *
               C1025 +
           ((((C13416 + C13417 + C13418) * C10776 +
              (C13419 + C13420 + C13421) * C50520) *
                 C50828 +
             ((C13824 + C13825 + C13826) * C10776 +
              (C13827 + C13828 + C13829) * C50520) *
                 C50722) *
                C50648 -
            (((C13421 + C13420 + C13419) * C50520 +
              (C13418 + C13417 + C13416) * C10776) *
                 C50722 +
             ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
               C7954 * C299 + C7949 * C316) *
                  C50520 +
              (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
               C7954 * C286 + C7949 * C300) *
                  C10776) *
                 C50828) *
                C50817) *
               C50620) *
              C50808 +
          (((((C8371 + C8370 + C8369) * C10776 +
              (C8368 + C8367 + C8366) * C50520) *
                 C50828 +
             ((C8372 + C8373 + C8374) * C10776 +
              (C8375 + C8376 + C8377) * C50520) *
                 C50722) *
                C50648 -
            (((C8366 + C8367 + C8368) * C50520 +
              (C8369 + C8370 + C8371) * C10776) *
                 C50722 +
             ((C8001 + C8000 + C7999) * C50520 +
              (C7998 + C7997 + C7996) * C10776) *
                 C50828) *
                C50817) *
               C1025 +
           ((((C8189 + C8188 + C8187) * C10776 +
              (C8186 + C8185 + C8184) * C50520) *
                 C50828 +
             ((C8912 + C8913 + C8914) * C10776 +
              (C8915 + C8916 + C8917) * C50520) *
                 C50722) *
                C50817 -
            (((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
               C7954 * C1223 + C7949 * C1229) *
                  C50520 +
              (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
               C7954 * C1217 + C7949 * C1224) *
                  C10776) *
                 C50722 +
             ((C8917 + C8916 + C8915) * C50520 +
              (C8914 + C8913 + C8912) * C10776) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50584 * C1025 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50584 * C50620) *
                       C1027 +
                   (((C353 * C2296 + C352 * C2291 + C351 * C2297 +
                      C350 * C2292 + C349 * C2298 + C348 * C2293) *
                         C50828 +
                     (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                        C50584 * C50620 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50584 * C1025) *
                       C1028 +
                   (((C173 * C2296 + C174 * C2291 + C175 * C2297 +
                      C176 * C2292 + C178 * C2298 + C177 * C2293) *
                         C50828 +
                     (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                        C50584 * C1025 -
                    (((C117 * C902 + C50680 * C908) * C2293 +
                      (C117 * C893 + C50680 * C903) * C2298 + C927 * C2292 +
                      C926 * C2297 + C925 * C2291 + C924 * C2296) *
                         C50722 +
                     (C649 * C2293 + C648 * C2298 + C348 * C2292 +
                      C349 * C2297 + C350 * C2291 + C351 * C2296) *
                         C50828) *
                        C50584 * C50620) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C2296 +
                     (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                     C172 * C2292 + C173 * C2298 + C174 * C2293) *
                        C50828 +
                    (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                       C50584 * C1096 -
                   ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                    (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
                     (C117 * C299 + C50680 * C316) * C2291 +
                     (C117 * C286 + C50680 * C300) * C2296) *
                        C50828) *
                       C50584 * C1097 +
                   (((C117 * C287 + C50680 * C301) * C2296 +
                     (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                     C355 * C2292 + C356 * C2298 + C357 * C2293) *
                        C50828 +
                    ((C117 * C1565 + C50680 * C1573) * C2296 +
                     (C117 * C1572 + C50680 * C1577) * C2291 + C5332 * C2297 +
                     C5333 * C2292 + C5334 * C2298 + C5335 * C2293) *
                        C50722) *
                       C50584 * C1098 -
                   (((C117 * C4180 + C50680 * C4186) * C2293 +
                     (C117 * C4177 + C50680 * C4181) * C2298 +
                     (C117 * C4182 + C50680 * C4187) * C2292 +
                     (C117 * C4178 + C50680 * C4183) * C2297 +
                     (C117 * C4184 + C50680 * C4188) * C2291 +
                     (C117 * C4179 + C50680 * C4185) * C2296) *
                        C50722 +
                    ((C117 * C1107 + C50680 * C1114) * C2293 +
                     (C117 * C1102 + C50680 * C1108) * C2298 +
                     (C117 * C1109 + C50680 * C1115) * C2292 +
                     (C117 * C1103 + C50680 * C1110) * C2297 +
                     (C117 * C1111 + C50680 * C1116) * C2291 +
                     (C117 * C1104 + C50680 * C1112) * C2296) *
                        C50828) *
                       C50584 * C1099) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50584 * C1025 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50584 * C50620) *
                       C1027 +
                   ((((C8189 + C8188 + C8187) * C10776 +
                      (C8186 + C8185 + C8184) * C50520) *
                         C50828 +
                     ((C8912 + C8913 + C8914) * C10776 +
                      (C8915 + C8916 + C8917) * C50520) *
                         C50722) *
                        C50584 * C50620 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50584 * C1025) *
                       C1028 +
                   ((((C8007 + C8006 + C8005) * C10776 +
                      (C8004 + C8003 + C8002) * C50520) *
                         C50828 +
                     ((C8700 + C8701 + C8702) * C10776 +
                      (C8703 + C8704 + C8705) * C50520) *
                         C50722) *
                        C50584 * C1025 -
                    (((C7956 * C4180 + C7951 * C4186 + C7955 * C1568 +
                       C7950 * C1575 + C7954 * C899 + C7949 * C906) *
                          C50520 +
                      (C7956 * C4177 + C7951 * C4181 + C7955 * C1563 +
                       C7950 * C1569 + C7954 * C891 + C7949 * C898) *
                          C10776) *
                         C50722 +
                     ((C8541 + C8540 + C8539) * C50520 +
                      (C8538 + C8537 + C8536) * C10776) *
                         C50828) *
                        C50584 * C50620) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                      C7950 * C300 + C7956 * C287 + C7951 * C301) *
                         C10776 +
                     (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                      C7950 * C316 + C7956 * C302 + C7951 * C317) *
                         C50520) *
                        C50828 +
                    ((C12906 + C12907 + C12908) * C10776 +
                     (C12909 + C12910 + C12911) * C50520) *
                        C50722) *
                       C50584 * C1096 -
                   (((C13421 + C13420 + C13419) * C50520 +
                     (C13418 + C13417 + C13416) * C10776) *
                        C50722 +
                    ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                      C7950 * C317 + C7954 * C299 + C7949 * C316) *
                         C50520 +
                     (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                      C7950 * C301 + C7954 * C286 + C7949 * C300) *
                         C10776) *
                        C50828) *
                       C50584 * C1097 +
                   (((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                      C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                         C10776 +
                     (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                      C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                         C50520) *
                        C50828 +
                    ((C7954 * C1565 + C7949 * C1573 + C7955 * C4179 +
                      C7950 * C4185 + C7956 * C9810 + C7951 * C9814) *
                         C10776 +
                     (C7954 * C1572 + C7949 * C1577 + C7955 * C4184 +
                      C7950 * C4188 + C7956 * C9813 + C7951 * C9816) *
                         C50520) *
                        C50722) *
                       C50584 * C1098 -
                   (((C7956 * C11896 + C7951 * C11898 + C7955 * C9813 +
                      C7950 * C9816 + C7954 * C4184 + C7949 * C4188) *
                         C50520 +
                     (C7956 * C11895 + C7951 * C11897 + C7955 * C9810 +
                      C7950 * C9814 + C7954 * C4179 + C7949 * C4185) *
                         C10776) *
                        C50722 +
                    ((C7956 * C9165 + C7951 * C9168 + C7955 * C3528 +
                      C7950 * C3532 + C7954 * C1111 + C7949 * C1116) *
                         C50520 +
                     (C7956 * C9162 + C7951 * C9166 + C7955 * C3523 +
                      C7950 * C3529 + C7954 * C1104 + C7949 * C1112) *
                         C10776) *
                        C50828) *
                       C50584 * C1099) *
                  C50549) /
                     (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50680 * C129) * C2296 +
              (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
              C172 * C2292 + C173 * C2298 + C174 * C2293) *
                 C50828 +
             (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                C1676 -
            ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
             (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                C50648) *
               C50816 +
           (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
             (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                C50648 -
            ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
             (C350 * C2293 + C351 * C2298 + C352 * C2292 + C353 * C2297 +
              (C117 * C299 + C50680 * C316) * C2291 +
              (C117 * C286 + C50680 * C300) * C2296) *
                 C50828) *
                C1676) *
               C50620) *
              C50808 +
          ((((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
             (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                C50648 -
            ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
             (C176 * C2293 + C175 * C2298 + C174 * C2292 + C173 * C2297 +
              C172 * C2291 + C171 * C2296) *
                 C50828) *
                C1676) *
               C50816 +
           (((C353 * C2296 + C352 * C2291 + C351 * C2297 + C350 * C2292 +
              C349 * C2298 + C348 * C2293) *
                 C50828 +
             (C6038 + C6039 + C6040 + C6041 + C6042 + C6043) * C50722) *
                C1676 -
            (((C117 * C1219 + C50680 * C1227) * C2293 +
              (C117 * C1215 + C50680 * C1220) * C2298 + C6049 * C2292 +
              C6048 * C2297 + C6047 * C2291 + C6046 * C2296) *
                 C50722 +
             (C6043 + C6042 + C6041 + C6040 + C6039 + C6038) * C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C7954 * C122 + C7949 * C129 + C7955 * C286 + C7950 * C300 +
               C7956 * C287 + C7951 * C301) *
                  C10776 +
              (C7954 * C130 + C7949 * C143 + C7955 * C299 + C7950 * C316 +
               C7956 * C302 + C7951 * C317) *
                  C50520) *
                 C50828 +
             ((C12906 + C12907 + C12908) * C10776 +
              (C12909 + C12910 + C12911) * C50520) *
                 C50722) *
                C1676 -
            (((C12912 + C12913 + C12914) * C50520 +
              (C12915 + C12916 + C12917) * C10776) *
                 C50722 +
             ((C12911 + C12910 + C12909) * C50520 +
              (C12908 + C12907 + C12906) * C10776) *
                 C50828) *
                C50648) *
               C50816 +
           ((((C13416 + C13417 + C13418) * C10776 +
              (C13419 + C13420 + C13421) * C50520) *
                 C50828 +
             ((C13824 + C13825 + C13826) * C10776 +
              (C13827 + C13828 + C13829) * C50520) *
                 C50722) *
                C50648 -
            (((C13421 + C13420 + C13419) * C50520 +
              (C13418 + C13417 + C13416) * C10776) *
                 C50722 +
             ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 + C7950 * C317 +
               C7954 * C299 + C7949 * C316) *
                  C50520 +
              (C7956 * C1104 + C7951 * C1112 + C7955 * C287 + C7950 * C301 +
               C7954 * C286 + C7949 * C300) *
                  C10776) *
                 C50828) *
                C1676) *
               C50620) *
              C50808 +
          (((((C8371 + C8370 + C8369) * C10776 +
              (C8368 + C8367 + C8366) * C50520) *
                 C50828 +
             ((C8372 + C8373 + C8374) * C10776 +
              (C8375 + C8376 + C8377) * C50520) *
                 C50722) *
                C50648 -
            (((C8366 + C8367 + C8368) * C50520 +
              (C8369 + C8370 + C8371) * C10776) *
                 C50722 +
             ((C8001 + C8000 + C7999) * C50520 +
              (C7998 + C7997 + C7996) * C10776) *
                 C50828) *
                C1676) *
               C50816 +
           ((((C8189 + C8188 + C8187) * C10776 +
              (C8186 + C8185 + C8184) * C50520) *
                 C50828 +
             ((C8912 + C8913 + C8914) * C10776 +
              (C8915 + C8916 + C8917) * C50520) *
                 C50722) *
                C1676 -
            (((C7956 * C9317 + C7951 * C9321 + C7955 * C3684 + C7950 * C3689 +
               C7954 * C1223 + C7949 * C1229) *
                  C50520 +
              (C7956 * C9315 + C7951 * C9318 + C7955 * C3680 + C7950 * C3685 +
               C7954 * C1217 + C7949 * C1224) *
                  C10776) *
                 C50722 +
             ((C8917 + C8916 + C8915) * C50520 +
              (C8914 + C8913 + C8912) * C10776) *
                 C50828) *
                C50648) *
               C50620) *
              C50555)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50862 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50863 +
                    ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
                     (C7364 + C7365 + C7358 + C7359 + C7360 + C7361) * C50722) *
                        C2092) *
                       C50816 +
                   (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
                     (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                        C50863 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C50862 -
                    (((C117 * C4582 + C50680 * C4588) * C2293 +
                      (C117 * C4579 + C50680 * C4583) * C2298 +
                      (C117 * C4584 + C50680 * C4589) * C2292 +
                      (C117 * C4580 + C50680 * C4585) * C2297 +
                      (C117 * C4586 + C50680 * C4590) * C2291 +
                      (C117 * C4581 + C50680 * C4587) * C2296) *
                         C50722 +
                     (C6449 + C6448 + C6447 + C6446 + C6453 + C6452) * C50828) *
                        C2092) *
                       C50620) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50862 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50863 +
                    (((C12917 + C12916 + C12915) * C10776 +
                      (C12914 + C12913 + C12912) * C50520) *
                         C50828 +
                     ((C14744 + C14745 + C14746) * C10776 +
                      (C14747 + C14748 + C14749) * C50520) *
                         C50722) *
                        C2092) *
                       C50816 +
                   ((((C13416 + C13417 + C13418) * C10776 +
                      (C13419 + C13420 + C13421) * C50520) *
                         C50828 +
                     ((C13824 + C13825 + C13826) * C10776 +
                      (C13827 + C13828 + C13829) * C50520) *
                         C50722) *
                        C50863 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C50862 -
                    (((C7956 * C12162 + C7951 * C12164 + C7955 * C10211 +
                       C7950 * C10214 + C7954 * C4586 + C7949 * C4590) *
                          C50520 +
                      (C7956 * C12161 + C7951 * C12163 + C7955 * C10208 +
                       C7950 * C10212 + C7954 * C4581 + C7949 * C4587) *
                          C10776) *
                         C50722 +
                     ((C13829 + C13828 + C13827) * C50520 +
                      (C13826 + C13825 + C13824) * C10776) *
                         C50828) *
                        C2092) *
                       C50620) *
                  C50549) /
                     (p * q * std::sqrt(p + q));
    d2ee[222] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C1676 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50648) *
                       C278 +
                   (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
                     (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                        C50648 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C1676) *
                       C279 +
                   ((((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     (C6950 + C6951 + C6944 + C6945 + C6946 + C6947) * C50722) *
                        C1676 -
                    (((C117 * C3682 + C50680 * C3688) * C2293 +
                      (C117 * C3679 + C50680 * C3683) * C2298 +
                      (C117 * C3684 + C50680 * C3689) * C2292 +
                      (C117 * C3680 + C50680 * C3685) * C2297 +
                      (C117 * C3686 + C50680 * C3690) * C2291 +
                      (C117 * C3681 + C50680 * C3687) * C2296) *
                         C50722 +
                     (C6947 + C6946 + C6945 + C6944 + C6951 + C6950) * C50828) *
                        C50648) *
                       C280) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C1676 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50648) *
                       C50568 * C1027 +
                   (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
                     (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                        C50648 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C1676) *
                       C50568 * C1028 +
                   (((C173 * C2296 + C174 * C2291 + C175 * C2297 +
                      C176 * C2292 + C178 * C2298 + C177 * C2293) *
                         C50828 +
                     (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                        C1676 -
                    (((C117 * C488 + C50680 * C499) * C2293 +
                      (C117 * C469 + C50680 * C489) * C2298 + C536 * C2292 +
                      C535 * C2297 + C534 * C2291 + C533 * C2296) *
                         C50722 +
                     (C5827 + C5826 + C5825 + C5824 + C5823 + C5822) * C50828) *
                        C50648) *
                       C50568 * C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C122 + C50680 * C129) * C2296 +
                     (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                     C172 * C2292 + C173 * C2298 + C174 * C2293) *
                        C50828 +
                    (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                       C1842 -
                   ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                    (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                       C1843 +
                   ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
                    (C7364 + C7365 + C7358 + C7359 + C7360 + C7361) * C50722) *
                       C1844 -
                   (((C117 * C7344 + C50680 * C7350) * C2293 +
                     (C117 * C7341 + C50680 * C7345) * C2298 +
                     (C117 * C7346 + C50680 * C7351) * C2292 +
                     (C117 * C7342 + C50680 * C7347) * C2297 +
                     (C117 * C7348 + C50680 * C7352) * C2291 +
                     (C117 * C7343 + C50680 * C7349) * C2296) *
                        C50722 +
                    (C7361 + C7360 + C7359 + C7358 + C7365 + C7364) * C50828) *
                       C1845) *
                  C50568 * C50549) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C1676 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50648) *
                       C50568 * C1027 +
                   ((((C8371 + C8370 + C8369) * C10776 +
                      (C8368 + C8367 + C8366) * C50520) *
                         C50828 +
                     ((C8372 + C8373 + C8374) * C10776 +
                      (C8375 + C8376 + C8377) * C50520) *
                         C50722) *
                        C50648 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C1676) *
                       C50568 * C1028 +
                   ((((C8007 + C8006 + C8005) * C10776 +
                      (C8004 + C8003 + C8002) * C50520) *
                         C50828 +
                     ((C8700 + C8701 + C8702) * C10776 +
                      (C8703 + C8704 + C8705) * C50520) *
                         C50722) *
                        C1676 -
                    (((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 +
                       C7950 * C1228 + C7954 * C483 + C7949 * C496) *
                          C50520 +
                      (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 +
                       C7950 * C1222 + C7954 * C466 + C7949 * C482) *
                          C10776) *
                         C50722 +
                     ((C8705 + C8704 + C8703) * C50520 +
                      (C8702 + C8701 + C8700) * C10776) *
                         C50828) *
                        C50648) *
                       C50568 * C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C1676 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50648) *
                       C278 +
                   ((((C13416 + C13417 + C13418) * C10776 +
                      (C13419 + C13420 + C13421) * C50520) *
                         C50828 +
                     ((C13824 + C13825 + C13826) * C10776 +
                      (C13827 + C13828 + C13829) * C50520) *
                         C50722) *
                        C50648 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C1676) *
                       C279 +
                   ((((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C14328 + C14329 + C14330) * C10776 +
                      (C14331 + C14332 + C14333) * C50520) *
                         C50722) *
                        C1676 -
                    (((C7956 * C11566 + C7951 * C11568 + C7955 * C9319 +
                       C7950 * C9322 + C7954 * C3686 + C7949 * C3690) *
                          C50520 +
                      (C7956 * C11565 + C7951 * C11567 + C7955 * C9316 +
                       C7950 * C9320 + C7954 * C3681 + C7949 * C3687) *
                          C10776) *
                         C50722 +
                     ((C14333 + C14332 + C14331) * C50520 +
                      (C14330 + C14329 + C14328) * C10776) *
                         C50828) *
                        C50648) *
                       C280) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                      C7950 * C300 + C7956 * C287 + C7951 * C301) *
                         C10776 +
                     (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                      C7950 * C316 + C7956 * C302 + C7951 * C317) *
                         C50520) *
                        C50828 +
                    ((C12906 + C12907 + C12908) * C10776 +
                     (C12909 + C12910 + C12911) * C50520) *
                        C50722) *
                       C1842 -
                   (((C12912 + C12913 + C12914) * C50520 +
                     (C12915 + C12916 + C12917) * C10776) *
                        C50722 +
                    ((C12911 + C12910 + C12909) * C50520 +
                     (C12908 + C12907 + C12906) * C10776) *
                        C50828) *
                       C1843 +
                   (((C12917 + C12916 + C12915) * C10776 +
                     (C12914 + C12913 + C12912) * C50520) *
                        C50828 +
                    ((C14744 + C14745 + C14746) * C10776 +
                     (C14747 + C14748 + C14749) * C50520) *
                        C50722) *
                       C1844 -
                   (((C7956 * C14725 + C7951 * C14729 + C7955 * C14726 +
                      C7950 * C14730 + C7954 * C7348 + C7949 * C7352) *
                         C50520 +
                     (C7956 * C14723 + C7951 * C14727 + C7955 * C14724 +
                      C7950 * C14728 + C7954 * C7343 + C7949 * C7349) *
                         C10776) *
                        C50722 +
                    ((C14749 + C14748 + C14747) * C50520 +
                     (C14746 + C14745 + C14744) * C10776) *
                        C50828) *
                       C1845) *
                  C50568 * C50549) /
                     (p * q * std::sqrt(p + q));
    d2ee[223] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C50862 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50863 +
                    ((C5529 + C5528 + C5493 + C5492 + C5491 + C5490) * C50828 +
                     (C7364 + C7365 + C7358 + C7359 + C7360 + C7361) * C50722) *
                        C2092) *
                       C50568 * C50808 +
                   (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
                     (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                        C50863 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C50862 -
                    (((C117 * C1850 + C50680 * C1858) * C2293 +
                      (C117 * C1846 + C50680 * C1851) * C2298 + C5525 * C2292 +
                      C5524 * C2297 + C5523 * C2291 + C5522 * C2296) *
                         C50722 +
                     (C5517 + C5516 + C5515 + C5514 + C5513 + C5512) * C50828) *
                        C2092) *
                       C50568 * C50555)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C50862 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50863 +
                    (((C12917 + C12916 + C12915) * C10776 +
                      (C12914 + C12913 + C12912) * C50520) *
                         C50828 +
                     ((C14744 + C14745 + C14746) * C10776 +
                      (C14747 + C14748 + C14749) * C50520) *
                         C50722) *
                        C2092) *
                       C50568 * C50808 +
                   ((((C8371 + C8370 + C8369) * C10776 +
                      (C8368 + C8367 + C8366) * C50520) *
                         C50828 +
                     ((C8372 + C8373 + C8374) * C10776 +
                      (C8375 + C8376 + C8377) * C50520) *
                         C50722) *
                        C50863 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C50862 -
                    (((C7956 * C10209 + C7951 * C10213 + C7955 * C4584 +
                       C7950 * C4589 + C7954 * C1854 + C7949 * C1860) *
                          C50520 +
                      (C7956 * C10207 + C7951 * C10210 + C7955 * C4580 +
                       C7950 * C4585 + C7954 * C1848 + C7949 * C1855) *
                          C10776) *
                         C50722 +
                     ((C8377 + C8376 + C8375) * C50520 +
                      (C8374 + C8373 + C8372) * C10776) *
                         C50828) *
                        C2092) *
                       C50568 * C50555)) /
                     (p * q * std::sqrt(p + q));
    d2ee[224] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C1676 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50648) *
                       C50568 * C1027 +
                   (((C5506 + C5507 + C5508 + C5509 + C5510 + C5511) * C50828 +
                     (C5512 + C5513 + C5514 + C5515 + C5516 + C5517) * C50722) *
                        C50648 -
                    ((C5511 + C5510 + C5509 + C5508 + C5507 + C5506) * C50722 +
                     (C176 * C2293 + C175 * C2298 + C174 * C2292 +
                      C173 * C2297 + C172 * C2291 + C171 * C2296) *
                         C50828) *
                        C1676) *
                       C50568 * C1028 +
                   (((C173 * C2296 + C174 * C2291 + C175 * C2297 +
                      C176 * C2292 + C178 * C2298 + C177 * C2293) *
                         C50828 +
                     (C5822 + C5823 + C5824 + C5825 + C5826 + C5827) * C50722) *
                        C1676 -
                    (((C117 * C488 + C50680 * C499) * C2293 +
                      (C117 * C469 + C50680 * C489) * C2298 + C536 * C2292 +
                      C535 * C2297 + C534 * C2291 + C533 * C2296) *
                         C50722 +
                     (C5827 + C5826 + C5825 + C5824 + C5823 + C5822) * C50828) *
                        C50648) *
                       C50568 * C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C122 + C50680 * C129) * C2296 +
                      (C117 * C130 + C50680 * C143) * C2291 + C171 * C2297 +
                      C172 * C2292 + C173 * C2298 + C174 * C2293) *
                         C50828 +
                     (C5526 + C5527 + C5486 + C5487 + C5488 + C5489) * C50722) *
                        C1676 -
                    ((C5490 + C5491 + C5492 + C5493 + C5528 + C5529) * C50722 +
                     (C5489 + C5488 + C5487 + C5486 + C5527 + C5526) * C50828) *
                        C50648) *
                       C278 +
                   (((C6050 + C6051 + C6026 + C6027 + C6028 + C6029) * C50828 +
                     (C6452 + C6453 + C6446 + C6447 + C6448 + C6449) * C50722) *
                        C50648 -
                    ((C6029 + C6028 + C6027 + C6026 + C6051 + C6050) * C50722 +
                     (C350 * C2293 + C351 * C2298 + C352 * C2292 +
                      C353 * C2297 + (C117 * C299 + C50680 * C316) * C2291 +
                      (C117 * C286 + C50680 * C300) * C2296) *
                         C50828) *
                        C1676) *
                       C279 +
                   ((((C117 * C287 + C50680 * C301) * C2296 +
                      (C117 * C302 + C50680 * C317) * C2291 + C354 * C2297 +
                      C355 * C2292 + C356 * C2298 + C357 * C2293) *
                         C50828 +
                     (C6950 + C6951 + C6944 + C6945 + C6946 + C6947) * C50722) *
                        C1676 -
                    (((C117 * C3682 + C50680 * C3688) * C2293 +
                      (C117 * C3679 + C50680 * C3683) * C2298 +
                      (C117 * C3684 + C50680 * C3689) * C2292 +
                      (C117 * C3680 + C50680 * C3685) * C2297 +
                      (C117 * C3686 + C50680 * C3690) * C2291 +
                      (C117 * C3681 + C50680 * C3687) * C2296) *
                         C50722 +
                     (C6947 + C6946 + C6945 + C6944 + C6951 + C6950) * C50828) *
                        C50648) *
                       C280) *
                  C50549) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C1676 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50648) *
                       C50568 * C1027 +
                   ((((C8371 + C8370 + C8369) * C10776 +
                      (C8368 + C8367 + C8366) * C50520) *
                         C50828 +
                     ((C8372 + C8373 + C8374) * C10776 +
                      (C8375 + C8376 + C8377) * C50520) *
                         C50722) *
                        C50648 -
                    (((C8366 + C8367 + C8368) * C50520 +
                      (C8369 + C8370 + C8371) * C10776) *
                         C50722 +
                     ((C8001 + C8000 + C7999) * C50520 +
                      (C7998 + C7997 + C7996) * C10776) *
                         C50828) *
                        C1676) *
                       C50568 * C1028 +
                   ((((C8007 + C8006 + C8005) * C10776 +
                      (C8004 + C8003 + C8002) * C50520) *
                         C50828 +
                     ((C8700 + C8701 + C8702) * C10776 +
                      (C8703 + C8704 + C8705) * C50520) *
                         C50722) *
                        C1676 -
                    (((C7956 * C3682 + C7951 * C3688 + C7955 * C1221 +
                       C7950 * C1228 + C7954 * C483 + C7949 * C496) *
                          C50520 +
                      (C7956 * C3679 + C7951 * C3683 + C7955 * C1216 +
                       C7950 * C1222 + C7954 * C466 + C7949 * C482) *
                          C10776) *
                         C50722 +
                     ((C8705 + C8704 + C8703) * C50520 +
                      (C8702 + C8701 + C8700) * C10776) *
                         C50828) *
                        C50648) *
                       C50568 * C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C7954 * C122 + C7949 * C129 + C7955 * C286 +
                       C7950 * C300 + C7956 * C287 + C7951 * C301) *
                          C10776 +
                      (C7954 * C130 + C7949 * C143 + C7955 * C299 +
                       C7950 * C316 + C7956 * C302 + C7951 * C317) *
                          C50520) *
                         C50828 +
                     ((C12906 + C12907 + C12908) * C10776 +
                      (C12909 + C12910 + C12911) * C50520) *
                         C50722) *
                        C1676 -
                    (((C12912 + C12913 + C12914) * C50520 +
                      (C12915 + C12916 + C12917) * C10776) *
                         C50722 +
                     ((C12911 + C12910 + C12909) * C50520 +
                      (C12908 + C12907 + C12906) * C10776) *
                         C50828) *
                        C50648) *
                       C278 +
                   ((((C13416 + C13417 + C13418) * C10776 +
                      (C13419 + C13420 + C13421) * C50520) *
                         C50828 +
                     ((C13824 + C13825 + C13826) * C10776 +
                      (C13827 + C13828 + C13829) * C50520) *
                         C50722) *
                        C50648 -
                    (((C13421 + C13420 + C13419) * C50520 +
                      (C13418 + C13417 + C13416) * C10776) *
                         C50722 +
                     ((C7956 * C1111 + C7951 * C1116 + C7955 * C302 +
                       C7950 * C317 + C7954 * C299 + C7949 * C316) *
                          C50520 +
                      (C7956 * C1104 + C7951 * C1112 + C7955 * C287 +
                       C7950 * C301 + C7954 * C286 + C7949 * C300) *
                          C10776) *
                         C50828) *
                        C1676) *
                       C279 +
                   ((((C7954 * C287 + C7949 * C301 + C7955 * C1104 +
                       C7950 * C1112 + C7956 * C3523 + C7951 * C3529) *
                          C10776 +
                      (C7954 * C302 + C7949 * C317 + C7955 * C1111 +
                       C7950 * C1116 + C7956 * C3528 + C7951 * C3532) *
                          C50520) *
                         C50828 +
                     ((C14328 + C14329 + C14330) * C10776 +
                      (C14331 + C14332 + C14333) * C50520) *
                         C50722) *
                        C1676 -
                    (((C7956 * C11566 + C7951 * C11568 + C7955 * C9319 +
                       C7950 * C9322 + C7954 * C3686 + C7949 * C3690) *
                          C50520 +
                      (C7956 * C11565 + C7951 * C11567 + C7955 * C9316 +
                       C7950 * C9320 + C7954 * C3681 + C7949 * C3687) *
                          C10776) *
                         C50722 +
                     ((C14333 + C14332 + C14331) * C50520 +
                      (C14330 + C14329 + C14328) * C10776) *
                         C50828) *
                        C50648) *
                       C280) *
                  C50549) /
                     (p * q * std::sqrt(p + q));
}
