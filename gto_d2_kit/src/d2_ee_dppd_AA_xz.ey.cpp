/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49726 = 0 * ae;
    const double C49725 = ae * be;
    const double C49724 = 0 * be;
    const double C49723 = ae + be;
    const double C49722 = 0 * be;
    const double C49721 = xA - xB;
    const double C49768 = zA - zB;
    const double C49782 = 0 * be;
    const double C49800 = 0 * ae;
    const double C49796 = 0 * be;
    const double C49848 = xP - xQ;
    const double C49847 = zP - zQ;
    const double C49846 = p + q;
    const double C49845 = p * q;
    const double C49855 = std::pow(ae, 2);
    const double C49853 = bs[3];
    const double C49863 = bs[4];
    const double C49872 = bs[5];
    const double C49886 = bs[6];
    const double C49908 = bs[7];
    const double C50017 = yP - yQ;
    const double C50226 = bs[2];
    const double C122 = bs[0];
    const double C50653 = ce + de;
    const double C50652 = ce * de;
    const double C50651 = xC - xD;
    const double C50675 = yC - yD;
    const double C50691 = zC - zD;
    const double C50779 = yA - yB;
    const double C49731 = C49726 / C49723;
    const double C49728 = 2 * C49723;
    const double C49727 = std::pow(C49723, 2);
    const double C49730 = C49725 * C49721;
    const double C49729 = C49721 * C49724;
    const double C50628 = C49721 * be;
    const double C50627 = C49721 * ae;
    const double C50626 = std::pow(C49721, 2);
    const double C49783 = C49725 * C49768;
    const double C50818 = std::pow(C49768, 2);
    const double C50830 = C49768 * be;
    const double C50829 = C49768 * ae;
    const double C49797 = C49768 * C49782;
    const double C49805 = C49800 / C49723;
    const double C49873 = std::pow(C49848, 2);
    const double C49941 = C49848 * ae;
    const double C49856 = C49847 * ae;
    const double C49854 = C49848 * C49847;
    const double C50071 = std::pow(C49847, 2);
    const double C49849 = 2 * C49845;
    const double C50035 = std::pow(C50017, 2);
    const double C50655 = 2 * C50653;
    const double C50665 = std::pow(C50653, 2);
    const double C50657 = C50651 * de;
    const double C50656 = C50651 * ce;
    const double C50654 = std::pow(C50651, 2);
    const double C50676 = std::pow(C50675, 2);
    const double C50728 = C50675 * de;
    const double C50727 = C50675 * ce;
    const double C50692 = std::pow(C50691, 2);
    const double C50756 = C50691 * de;
    const double C50755 = C50691 * ce;
    const double C50792 = std::pow(C50779, 2);
    const double C50806 = C50779 * be;
    const double C50805 = C50779 * ae;
    const double C50636 = std::pow(C49728, -1);
    const double C50938 = std::pow(C49728, -2);
    const double C49732 = 2 * C49727;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C49727;
    const double C50917 = 4 * C49727;
    const double C49733 = C49729 / C49723;
    const double C50629 = C50626 * C49725;
    const double C50819 = C50818 * C49725;
    const double C49802 = C49797 / C49723;
    const double C49944 = C49863 * C49941;
    const double C49950 = C49853 * C49941;
    const double C49957 = C49872 * C49941;
    const double C49969 = C49886 * C49941;
    const double C49990 = C49908 * C49941;
    const double C49859 = C49853 * C49856;
    const double C49865 = C49863 * C49856;
    const double C49875 = C49872 * C49856;
    const double C49890 = C49886 * C49856;
    const double C49914 = C49908 * C49856;
    const double C49858 = C49854 * C49855;
    const double C49850 = C49849 / C49846;
    const double C129 = (-(bs[1] * C49856 * C49849) / C49846) / C49723;
    const double C130 = (-(bs[1] * C49941 * C49849) / C49846) / C49723;
    const double C123 = -(C49848 * bs[1] * C49849) / C49846;
    const double C286 = -(C50017 * bs[1] * C49849) / C49846;
    const double C463 = -(C49847 * bs[1] * C49849) / C49846;
    const double C50666 = std::pow(C50655, -1);
    const double C50926 = std::pow(C50655, -2);
    const double C50670 = 2 * C50665;
    const double C50924 = 4 * C50665;
    const double C50658 = C50654 * C50652;
    const double C50677 = C50676 * C50652;
    const double C50693 = C50692 * C50652;
    const double C50793 = C50792 * C49725;
    const double C49738 = C49724 / C49732;
    const double C49736 = C49722 / C49732;
    const double C49799 = C49782 / C49732;
    const double C49803 = C49796 / C49732;
    const double C49735 = 0 - C49733;
    const double C50630 = C50629 / C49723;
    const double C50820 = C50819 / C49723;
    const double C49806 = 0 - C49802;
    const double C49864 = C49863 * C49858;
    const double C49874 = C49872 * C49858;
    const double C49888 = C49886 * C49858;
    const double C49912 = C49908 * C49858;
    const double C49852 = -C49850;
    const double C49862 = std::pow(C49850, 4);
    const double C49885 = std::pow(C49850, 6);
    const double C144 = (ae * std::pow(C49850, 2) * bs[2] * C49847 * ae +
                         C49848 * std::pow(-C49850, 3) * bs[3] * C49848 *
                             C49847 * std::pow(ae, 2)) /
                        C49727;
    const double C50225 = std::pow(C49850, 2);
    const double C131 =
        (C49848 * std::pow(C49850, 2) * bs[2] * C49856) / C49723;
    const double C132 =
        (C49848 * std::pow(C49850, 2) * bs[2] * C49941) / C49723 -
        (ae * bs[1] * C49849) / (C49846 * C49723);
    const double C50659 = C50658 / C50653;
    const double C50678 = C50677 / C50653;
    const double C50694 = C50693 / C50653;
    const double C50794 = C50793 / C49723;
    const double C49740 = C49735 * ae;
    const double C50631 = -C50630;
    const double C50821 = -C50820;
    const double C49809 = C49806 * ae;
    const double C49857 = std::pow(C49852, 3);
    const double C49871 = std::pow(C49852, 5);
    const double C49907 = std::pow(C49852, 7);
    const double C49867 = C49862 * C49865;
    const double C49866 = C49862 * C49864;
    const double C49943 = C49863 * C49862;
    const double C49945 = C49862 * C49944;
    const double C49893 = C49885 * C49890;
    const double C49892 = C49885 * C49888;
    const double C49971 = C49885 * C49969;
    const double C49991 = C49886 * C49885;
    const double C50227 = C50226 * C50225;
    const double C299 = (C50017 * C50225 * C50226 * C49941) / C49723;
    const double C300 = (C50017 * C50225 * C50226 * C49856) / C49723;
    const double C476 = (C49847 * C50225 * C50226 * C49941) / C49723;
    const double C477 = (C49847 * C50225 * C50226 * C49856) / C49723 -
                        (ae * bs[1] * C49849) / (C49846 * C49723);
    const double C50660 = -C50659;
    const double C50679 = -C50678;
    const double C50695 = -C50694;
    const double C50795 = -C50794;
    const double C49743 = C49740 / C49723;
    const double C50632 = std::exp(C50631);
    const double C50822 = std::exp(C50821);
    const double C49811 = C49809 / C49723;
    const double C49860 = C49857 * C49859;
    const double C49942 = C49853 * C49857;
    const double C49951 = C49857 * C49950;
    const double C316 = ((yP - yQ) * C49857 * C49853 * C49858) / C49727;
    const double C493 = (ae * std::pow(C49850, 2) * bs[2] * C49941 +
                         C49847 * C49857 * C49853 * C49858) /
                        C49727;
    const double C49877 = C49871 * C49875;
    const double C49876 = C49871 * C49874;
    const double C49960 = C49871 * C49957;
    const double C49970 = C49872 * C49871;
    const double C49917 = C49907 * C49914;
    const double C49916 = C49907 * C49912;
    const double C49993 = C49907 * C49990;
    const double C49870 = ae * C49867;
    const double C49869 = C49848 * C49867;
    const double C50369 = C50017 * C49867;
    const double C50387 = C49847 * C49867;
    const double C317 =
        (C49857 * C49853 * C49858 + C49866 * std::pow(yP - yQ, 2)) / C49727;
    const double C49959 = C49848 * C49943;
    const double C49958 = C49943 * ae;
    const double C50232 = C49943 * C49873;
    const double C50351 = C49943 * C50035;
    const double C50370 = C50017 * C49943;
    const double C50389 = C49943 * C50071;
    const double C50488 = C49847 * C49943;
    const double C49953 = C49848 * C49945;
    const double C50033 = C50017 * C49945;
    const double C50084 = ae * C49945;
    const double C50083 = C49847 * C49945;
    const double C49895 = C49893 * C49873;
    const double C49906 = ae * C49893;
    const double C49905 = C49848 * C49893;
    const double C50425 = C49893 * C50035;
    const double C50501 = C50017 * C49893;
    const double C50519 = C49847 * C49893;
    const double C49894 = C49848 * C49892;
    const double C50093 = C49892 * C50035;
    const double C50112 = C50017 * C49892;
    const double C50170 = C49847 * C49892;
    const double C49975 = C49848 * C49971;
    const double C50103 = C49971 * C50035;
    const double C50120 = C50017 * C49971;
    const double C50171 = C49971 * C50071;
    const double C50201 = ae * C49971;
    const double C50200 = C49847 * C49971;
    const double C49996 = C49991 * C49873;
    const double C49995 = C49848 * C49991;
    const double C49994 = C49991 * ae;
    const double C50434 = C49991 * C50035;
    const double C50504 = C50017 * C49991;
    const double C50522 = C49991 * C50071;
    const double C124 = C50227 * C49873 - (bs[1] * C49849) / C49846;
    const double C285 = C50017 * C49848 * C50227;
    const double C287 = C50227 * C50035 - (bs[1] * C49849) / C49846;
    const double C462 = C49847 * C49848 * C50227;
    const double C464 = C50227 * C50071 - (bs[1] * C49849) / C49846;
    const double C889 = C49847 * C50017 * C50227;
    const double C50661 = std::exp(C50660);
    const double C50680 = std::exp(C50679);
    const double C50696 = std::exp(C50695);
    const double C50796 = std::exp(C50795);
    const double C49745 = C49743 - C49736;
    const double C49734 = C49730 * C50632;
    const double C50633 = C50632 * C50627;
    const double C50637 = C50636 * C50632;
    const double C50913 = C50632 / C49728;
    const double C50912 = C50632 * C50628;
    const double C2291 = C50938 * C50632;
    const double C154 = C50822 * C144;
    const double C152 = C50822 * C131;
    const double C2445 = C50822 * C300;
    const double C49784 = C49783 * C50822;
    const double C117 = -(2 * ae * be * (zA - zB) * C50822) / (ae + be);
    const double C5107 =
        ((C50822 - (C49768 * 2 * C49725 * C49768 * C50822) / C49723) * ae) /
            C49723 -
        (0 * be) / C49732;
    const double C5108 =
        (0 * ae) / C49723 - (C49725 * C49768 * C50822) / C49727;
    const double C50831 = C50822 * C50829;
    const double C50834 = C50636 * C50822;
    const double C50947 = C50822 * C50830;
    const double C50946 = C50822 / C49728;
    const double C15374 = C50938 * C50822;
    const double C49813 = C49811 - C49803;
    const double C145 = (C49857 * C49853 * C49858 + ae * C49848 * C49860 +
                         C49848 * (ae * C49860 + C49848 * std::pow(C49850, 4) *
                                                     bs[4] * C49858)) /
                        C49727;
    const double C146 =
        (2 * (ae * C49860 + C49848 * C49866) +
         ae * (C49860 + C49867 * std::pow(C49848, 2)) +
         C49848 * (C49866 + ae * C49848 * C49867 +
                   C49848 * (ae * C49867 +
                             C49848 * std::pow(C49852, 5) * bs[5] * C49858))) /
        C49727;
    const double C315 = ((yP - yQ) * (ae * C49860 + C49848 * C49866)) / C49727;
    const double C492 = (ae * (C49848 * C49857 * C49853 * C49941 +
                               bs[2] * std::pow(C49850, 2) * ae) +
                         C49847 * (ae * C49860 + C49848 * C49866)) /
                        C49727;
    const double C133 =
        (std::pow(C49850, 2) * bs[2] * C49856 + C49860 * C49873) / C49723;
    const double C135 =
        (2 * C49848 * C49860 + C49848 * (C49860 + C49867 * C49873)) / C49723;
    const double C296 = (C50017 * (C49860 + C49867 * C49873)) / C49723;
    const double C298 = (C50017 * C49848 * C49860) / C49723;
    const double C301 = (C50225 * C50226 * C49856 + C49860 * C50035) / C49723;
    const double C475 =
        (C49847 * C49848 * C49860 + C49848 * C50227 * ae) / C49723;
    const double C478 =
        (C50225 * C50226 * C49856 + C49847 * (C49847 * C49860 + C50227 * ae) +
         C49847 * C50227 * ae) /
        C49723;
    const double C894 =
        (C49847 * C50017 * C49860 + C50017 * C50227 * ae) / C49723;
    const double C1112 =
        (2 * C50017 * C49860 + C50017 * (C49860 + C49867 * C50035)) / C49723;
    const double C49954 = C49942 * ae;
    const double C50231 = C49848 * C49942;
    const double C50318 = C50017 * C49942;
    const double C50388 = C49847 * C49942;
    const double C473 = (C49847 * (C49860 + C49867 * C49873) +
                         (C50227 + C49942 * C49873) * ae) /
                        C49723;
    const double C1573 = (C49847 * (C49860 + C49867 * C50035) +
                          (C50227 + C49942 * C50035) * ae) /
                         C49723;
    const double C125 =
        2 * C49848 * C50227 + C49848 * (C50227 + C49942 * C49873);
    const double C284 = C50017 * (C50227 + C49942 * C49873);
    const double C461 = C49847 * (C50227 + C49942 * C49873);
    const double C1104 =
        2 * C50017 * C50227 + C50017 * (C50227 + C49942 * C50035);
    const double C1565 = C49847 * (C50227 + C49942 * C50035);
    const double C1849 =
        2 * C49847 * C50227 + C49847 * (C50227 + C49942 * C50071);
    const double C494 = (C49857 * C49853 * C49858 + ae * C49847 * C49951 +
                         C49847 * (ae * C49951 + C49847 * C49866)) /
                        C49727;
    const double C904 =
        (ae * C50017 * C49951 + C49847 * C50017 * C49866) / C49727;
    const double C134 =
        (C50225 * C50226 * C49941 + C49848 * (C49848 * C49951 + C50227 * ae) +
         C49848 * C50227 * ae) /
        C49723;
    const double C297 = (C50017 * (C49848 * C49951 + C50227 * ae)) / C49723;
    const double C302 = (C50225 * C50226 * C49941 + C49951 * C50035) / C49723;
    const double C474 = (C49847 * (C49848 * C49951 + C50227 * ae)) / C49723;
    const double C479 = (C50225 * C50226 * C49941 + C49951 * C50071) / C49723;
    const double C895 = (C49847 * C50017 * C49951) / C49723;
    const double C1111 =
        (2 * C50017 * C49951 + C50017 * (C49951 + C49945 * C50035)) / C49723;
    const double C1572 = (C49847 * (C49951 + C49945 * C50035)) / C49723;
    const double C1856 =
        (2 * C49847 * C49951 + C49847 * (C49951 + C49945 * C50071)) / C49723;
    const double C2447 = C50822 * C316;
    const double C49879 = C49877 * C49873;
    const double C49884 = ae * C49877;
    const double C49883 = C49848 * C49877;
    const double C50398 = C49877 * C50035;
    const double C50424 = C50017 * C49877;
    const double C50487 = C49847 * C49877;
    const double C3423 =
        (3 * (C49860 + C49867 * C50035) +
         C50017 * (2 * C50017 * C49867 + C50017 * (C49867 + C49877 * C50035))) /
        C49723;
    const double C49878 = C49848 * C49876;
    const double C50065 = C50017 * C49876;
    const double C50085 = C49847 * C49876;
    const double C1116 = (2 * C50017 * C49866 +
                          C50017 * (C49866 + C49876 * std::pow(C50017, 2))) /
                         C49727;
    const double C1577 = (ae * (C49951 + C49945 * C50035) +
                          C49847 * (C49866 + C49876 * C50035)) /
                         C49727;
    const double C1861 = (2 * (ae * C49951 + C49847 * C49866) +
                          ae * (C49951 + C49945 * std::pow(C49847, 2)) +
                          C49847 * (C49866 + ae * C49847 * C49945 +
                                    C49847 * (ae * C49945 + C49847 * C49876))) /
                         C49727;
    const double C3426 =
        (3 * (C49866 + C49876 * C50035) +
         C50017 * (2 * C50017 * C49876 + C50017 * (C49876 + C49892 * C50035))) /
        C49727;
    const double C49962 = C49848 * C49960;
    const double C50053 = C49960 * C50035;
    const double C50066 = C50017 * C49960;
    const double C50086 = C49960 * C50071;
    const double C50169 = ae * C49960;
    const double C50168 = C49847 * C49960;
    const double C49974 = C49970 * C49873;
    const double C49973 = C49848 * C49970;
    const double C49972 = C49970 * ae;
    const double C50410 = C49970 * C50035;
    const double C50433 = C50017 * C49970;
    const double C50489 = C49970 * C50071;
    const double C50520 = C49847 * C49970;
    const double C49919 = C49917 * C49873;
    const double C49918 = C49848 * C49916;
    const double C50113 = C49916 * C50035;
    const double C50184 = C50017 * C49916;
    const double C50202 = C49847 * C49916;
    const double C49997 = C49848 * C49993;
    const double C50121 = C49993 * C50035;
    const double C50185 = C50017 * C49993;
    const double C50204 = C49993 * C50071;
    const double C303 = (C49848 * C49860 + C49869 * C50035) / C49723;
    const double C2457 = C50822 * C317;
    const double C49961 = C49959 * ae;
    const double C50237 = 2 * C49959;
    const double C50315 = C50017 * C49959;
    const double C50381 = C49847 * C49959;
    const double C50233 = C49942 + C50232;
    const double C50352 = C49942 + C50351;
    const double C50409 = 2 * C50370;
    const double C50457 = C49847 * C50370;
    const double C50456 = C50370 * ae;
    const double C50391 = C49942 + C50389;
    const double C50493 = 2 * C50488;
    const double C50491 = C50488 * ae;
    const double C1230 = (C50017 * C49866 + ae * C49847 * C50033 +
                          C49847 * (ae * C50033 + C49847 * C50017 * C49876)) /
                         C49727;
    const double C1225 = (C50017 * C49951 + C50033 * C50071) / C49723;
    const double C49897 = C49877 + C49895;
    const double C49913 = 2 * C49905;
    const double C49911 = ae * C49905;
    const double C50394 = C49905 * C50035;
    const double C50463 = C50017 * C49905;
    const double C50473 = C49847 * C49905;
    const double C50427 = C49877 + C50425;
    const double C50505 = C49847 * C50501;
    const double C50094 = C49876 + C50093;
    const double C50114 = 2 * C50112;
    const double C50140 = C49847 * C50112;
    const double C50104 = C49960 + C50103;
    const double C50122 = 2 * C50120;
    const double C50141 = C50120 * C50071;
    const double C50183 = ae * C50120;
    const double C50182 = C49847 * C50120;
    const double C50175 = C49960 + C50171;
    const double C50208 = 2 * C50200;
    const double C50206 = ae * C50200;
    const double C49999 = C49970 + C49996;
    const double C49998 = C49995 * ae;
    const double C50403 = C49995 * C50035;
    const double C50466 = C50017 * C49995;
    const double C50475 = C49995 * C50071;
    const double C50436 = C49970 + C50434;
    const double C50507 = C50504 * C50071;
    const double C50526 = C49970 + C50522;
    const double C50662 = C50661 * C50656;
    const double C50667 = C50666 * C50661;
    const double C50921 = C50661 * C50657;
    const double C50918 = C50661 / C50655;
    const double C1029 = C50926 * C50661;
    const double C50729 = C50680 * C50727;
    const double C50732 = C50666 * C50680;
    const double C50930 = C50680 * C50728;
    const double C50925 = C50680 / C50655;
    const double C280 = C50926 * C50680;
    const double C50757 = C50696 * C50755;
    const double C50760 = C50666 * C50696;
    const double C50934 = C50696 * C50756;
    const double C50927 = C50696 / C50655;
    const double C459 = C50926 * C50696;
    const double C50807 = C50796 * C50805;
    const double C50810 = C50636 * C50796;
    const double C50942 = C50796 * C50806;
    const double C50941 = C50796 / C49728;
    const double C7953 = C50938 * C50796;
    const double C49739 = C49734 / C49727;
    const double C49737 = 2 * C49734;
    const double C50915 = C50633 / C49732;
    const double C50914 = C50633 * C50628;
    const double C50911 = C50633 / C49723;
    const double C50640 = C50637 * C50628;
    const double C109 = C50637 / C50917;
    const double C22716 = C50637 / C49728;
    const double C2289 = (C50632 * std::pow(C50628, 2)) / C49727 + C50913;
    const double C50951 = C50912 / C49723;
    const double C2290 = (-2 * C50636 * C50912) / C49723;
    const double C49785 = 2 * C49784;
    const double C49801 = C49784 / C49727;
    const double C155 = C117 * C124;
    const double C153 = C117 * C132;
    const double C151 = C117 * C123;
    const double C334 = C117 * C285;
    const double C511 = C117 * C462;
    const double C2458 = C117 * C287;
    const double C2446 = C117 * C299;
    const double C2444 = C117 * C286;
    const double C3148 = C117 * C889;
    const double C5118 = C5107 * C124;
    const double C5114 = C5107 * C132;
    const double C5110 = C5107 * C123;
    const double C5322 = C5107 * C285;
    const double C5516 = C5107 * C462;
    const double C12739 = C5107 * C287;
    const double C12735 = C5107 * C299;
    const double C12731 = C5107 * C286;
    const double C13435 = C5107 * C889;
    const double C5112 = C5108 * C462;
    const double C12733 = C5108 * C889;
    const double C50949 = C50831 / C49732;
    const double C50948 = C50831 * C50830;
    const double C50940 = C50831 / C49723;
    const double C50837 = C50834 * C50830;
    const double C20909 = C50834 / C50917;
    const double C38085 = C50834 / C49728;
    const double C50966 = C50947 / C49723;
    const double C15373 = (-2 * C50636 * C50947) / C49723;
    const double C15372 = (C50822 * std::pow(C50830, 2)) / C49727 + C50946;
    const double C158 = C50822 * C145;
    const double C162 = C50822 * C146;
    const double C333 = C50822 * C315;
    const double C510 = C50822 * C492;
    const double C5117 = C50834 * C492;
    const double C31649 = C50834 * C492;
    const double C156 = C50822 * C133;
    const double C160 = C50822 * C135;
    const double C331 = C50822 * C296;
    const double C335 = C50822 * C298;
    const double C2459 = C50822 * C301;
    const double C512 = C50822 * C475;
    const double C5113 = C50834 * C475;
    const double C31645 = C50834 * C475;
    const double C3149 = C50822 * C894;
    const double C12734 = C50834 * C894;
    const double C34699 = C50834 * C894;
    const double C3429 = C50822 * C1112;
    const double C49955 = C49953 + C49954;
    const double C50390 = C50387 + C49954;
    const double C1857 =
        (2 * (C49847 * C49860 + C50227 * ae) +
         C49847 * (C49860 + C49847 * (C49847 * C49867 + C49954) +
                   C49847 * C49942 * ae) +
         (C50227 + C49942 * C50071) * ae) /
        C49723;
    const double C480 =
        (C49848 * C49860 + C49847 * (C49847 * C49869 + C50231 * ae) +
         C49847 * C50231 * ae) /
        C49723;
    const double C896 =
        (C49847 * C50017 * C49869 + C50017 * C50231 * ae) / C49723;
    const double C288 = C49848 * C50227 + C50231 * C50035;
    const double C465 = C49848 * C50227 + C50231 * C50071;
    const double C890 = C49847 * C50017 * C50231;
    const double C1103 =
        2 * C50017 * C50231 + C50017 * (C50231 + C49959 * C50035);
    const double C1564 = C49847 * (C50231 + C49959 * C50035);
    const double C1848 =
        2 * C49847 * C50231 + C49847 * (C50231 + C49959 * C50071);
    const double C1226 =
        (C50017 * C49860 + C49847 * (C49847 * C50017 * C49867 + C50318 * ae) +
         C49847 * C50318 * ae) /
        C49723;
    const double C4517 =
        (2 * (C49847 * C50369 + C50318 * ae) +
         C49847 * (C50369 + C49847 * (C49847 * C50017 * C49877 + C50370 * ae) +
                   C49847 * C50370 * ae) +
         (C50318 + C50370 * C50071) * ae) /
        C49723;
    const double C1218 = C50017 * C50227 + C50318 * C50071;
    const double C4511 =
        2 * C49847 * C50318 + C49847 * (C50318 + C50370 * C50071);
    const double C508 = C50822 * C473;
    const double C5121 = C50834 * C473;
    const double C31653 = C50834 * C473;
    const double C4109 = C50822 * C1573;
    const double C12742 = C50834 * C1573;
    const double C34713 = C50834 * C1573;
    const double C159 = C117 * C125;
    const double C5132 = C5107 * C125;
    const double C330 = C117 * C284;
    const double C5314 = C5107 * C284;
    const double C507 = C117 * C461;
    const double C5120 = C5108 * C461;
    const double C5508 = C5107 * C461;
    const double C3428 = C117 * C1104;
    const double C12753 = C5107 * C1104;
    const double C4108 = C117 * C1565;
    const double C12741 = C5108 * C1565;
    const double C13427 = C5107 * C1565;
    const double C3147 = C50822 * C904;
    const double C12738 = C50834 * C904;
    const double C34703 = C50834 * C904;
    const double C157 = C117 * C134;
    const double C5122 = C5107 * C134;
    const double C332 = C117 * C297;
    const double C5318 = C5107 * C297;
    const double C2456 = C117 * C302;
    const double C12743 = C5107 * C302;
    const double C509 = C117 * C474;
    const double C5116 = C5108 * C474;
    const double C5512 = C5107 * C474;
    const double C3146 = C117 * C895;
    const double C12737 = C5108 * C895;
    const double C13431 = C5107 * C895;
    const double C3430 = C117 * C1111;
    const double C12749 = C5107 * C1111;
    const double C4110 = C117 * C1572;
    const double C12745 = C5108 * C1572;
    const double C13423 = C5107 * C1572;
    const double C49881 = C49867 + C49879;
    const double C49896 = C49884 + C49894;
    const double C49889 = 2 * C49883;
    const double C49887 = ae * C49883;
    const double C50365 = C50017 * C49883;
    const double C50380 = C49847 * C49883;
    const double C1110 =
        (2 * C50017 * C49869 + C50017 * (C49869 + C49883 * C50035)) / C49723;
    const double C1571 = (C49847 * (C49869 + C49883 * C50035) +
                          (C50231 + C49959 * C50035) * ae) /
                         C49723;
    const double C3421 =
        (3 * (C49869 + C49883 * C50035) +
         C50017 * (2 * C50017 * C49883 + C50017 * (C49883 + C49905 * C50035))) /
        C49723;
    const double C50399 = C49867 + C50398;
    const double C50426 = 2 * C50424;
    const double C50455 = C49847 * C50424;
    const double C50490 = C50487 + C49958;
    const double C9061 = C50822 * C3423;
    const double C49880 = C49870 + C49878;
    const double C50087 = C50084 + C50085;
    const double C3431 = C50822 * C1116;
    const double C4111 = C50822 * C1577;
    const double C12746 = C50834 * C1577;
    const double C34709 = C50834 * C1577;
    const double C9063 = C50822 * C3426;
    const double C49963 = C49962 + C49958;
    const double C50054 = C49945 + C50053;
    const double C50102 = 2 * C50066;
    const double C50139 = ae * C50066;
    const double C50138 = C49847 * C50066;
    const double C4520 =
        (2 * (ae * C50033 + C49847 * C50065) +
         ae * (C50033 + C50066 * std::pow(C49847, 2)) +
         C49847 * (C50065 + ae * C49847 * C50066 +
                   C49847 * (ae * C50066 + C49847 * C50017 * C49892))) /
        C49727;
    const double C4516 =
        (2 * C49847 * C50033 + C49847 * (C50033 + C50066 * C50071)) / C49723;
    const double C50088 = C49945 + C50086;
    const double C50173 = C50169 + C50170;
    const double C50174 = 2 * C50168;
    const double C50172 = ae * C50168;
    const double C49977 = C49943 + C49974;
    const double C49976 = C49973 * ae;
    const double C49992 = 2 * C49973;
    const double C50347 = C49973 * C50035;
    const double C50366 = C50017 * C49973;
    const double C50382 = C49973 * C50071;
    const double C50474 = C49847 * C49973;
    const double C49978 = C49975 + C49972;
    const double C50524 = C50519 + C49972;
    const double C50411 = C49943 + C50410;
    const double C50435 = 2 * C50433;
    const double C50458 = C50433 * C50071;
    const double C50503 = C49847 * C50433;
    const double C50502 = C50433 * ae;
    const double C50492 = C49943 + C50489;
    const double C50527 = 2 * C50520;
    const double C50525 = C50520 * ae;
    const double C49921 = C49893 + C49919;
    const double C49920 = C49906 + C49918;
    const double C50115 = C49892 + C50113;
    const double C50187 = C49847 * C50184;
    const double C50207 = C50201 + C50202;
    const double C50000 = C49997 + C49994;
    const double C50123 = C49971 + C50121;
    const double C50189 = C50185 * C50071;
    const double C50209 = C49971 + C50204;
    const double C337 = C50822 * C303;
    const double C1855 =
        (2 * (C49847 * C49869 + C50231 * ae) +
         C49847 * (C49869 + C49847 * (C49847 * C49883 + C49961) +
                   C49847 * C49959 * ae) +
         (C50231 + C49959 * C50071) * ae) /
        C49723;
    const double C1224 =
        (C50017 * C49869 + C49847 * (C49847 * C50017 * C49883 + C50315 * ae) +
         C49847 * C50315 * ae) /
        C49723;
    const double C1217 = C50017 * C50231 + C50315 * C50071;
    const double C126 = 3 * (C50227 + C49942 * C49873) +
                        C49848 * (2 * C50231 + C49848 * C50233);
    const double C283 = C50017 * (2 * C50231 + C49848 * C50233);
    const double C289 = C50227 + C49942 * C49873 + C50233 * C50035;
    const double C460 = C49847 * (2 * C50231 + C49848 * C50233);
    const double C466 = C50227 + C49942 * C49873 + C50233 * C50071;
    const double C891 = C49847 * C50017 * C50233;
    const double C3593 =
        (C49860 + C49867 * C50035 +
         C49847 * (C49847 * (C49867 + C49877 * C50035) + C50352 * ae) +
         C49847 * C50352 * ae) /
        C49723;
    const double C4103 =
        (C49847 * (2 * C50017 * C49867 + C50017 * (C49867 + C49877 * C50035)) +
         (2 * C50318 + C50017 * C50352) * ae) /
        C49723;
    const double C3417 = 3 * (C50227 + C49942 * C50035) +
                         C50017 * (2 * C50318 + C50017 * C50352);
    const double C3587 = C50227 + C49942 * C50035 + C50352 * C50071;
    const double C4097 = C49847 * (2 * C50318 + C50017 * C50352);
    const double C7355 = 3 * (C50227 + C49942 * C50071) +
                         C49847 * (2 * C50388 + C49847 * C50391);
    const double C3601 = C50822 * C1230;
    const double C13430 = C50834 * C1230;
    const double C18356 = C15374 * C1230;
    const double C35597 = C50834 * C1230;
    const double C3600 = C117 * C1225;
    const double C13429 = C5108 * C1225;
    const double C13868 = C5107 * C1225;
    const double C49899 = C49848 * C49897;
    const double C49909 = 3 * C49897;
    const double C49904 = ae * C49897;
    const double C50361 = C50017 * C49897;
    const double C50373 = C49847 * C49897;
    const double C49915 = C49892 + C49911;
    const double C50395 = C49883 + C50394;
    const double C50467 = C49847 * C50463;
    const double C50428 = C50017 * C50427;
    const double C50447 = C49847 * C50427;
    const double C9057 =
        (4 * (2 * C50065 + C50017 * C50094) +
         C50017 *
             (3 * C50094 + C50017 * (2 * C50017 * C49892 +
                                     C50017 * (C49892 + C49916 * C50035)))) /
        C49727;
    const double C50105 = C50017 * C50104;
    const double C50119 = 3 * C50104;
    const double C50132 = ae * C50104;
    const double C50131 = C49847 * C50104;
    const double C50143 = C50066 + C50141;
    const double C50188 = 2 * C50182;
    const double C50186 = ae * C50182;
    const double C50178 = C49847 * C50175;
    const double C50203 = 3 * C50175;
    const double C50199 = ae * C50175;
    const double C50210 = C49892 + C50206;
    const double C50002 = C49848 * C49999;
    const double C50001 = C49999 * ae;
    const double C50343 = C49999 * C50035;
    const double C50362 = C50017 * C49999;
    const double C50375 = C49999 * C50071;
    const double C50404 = C49973 + C50403;
    const double C50468 = C50466 * C50071;
    const double C50478 = C49973 + C50475;
    const double C50437 = C50017 * C50436;
    const double C50450 = C50436 * C50071;
    const double C50510 = C50433 + C50507;
    const double C50529 = C49847 * C50526;
    const double C50922 = C50662 / C50670;
    const double C50920 = C50662 / C50653;
    const double C50919 = C50662 * C50657;
    const double C1028 = (2 * C50666 * C50662) / C50653;
    const double C50923 = C50667 * C50657;
    const double C116 = C50667 / C50924;
    const double C638 = C50667 / C50655;
    const double C50955 = C50921 / C50653;
    const double C1027 = (C50661 * std::pow(C50656, 2)) / C50665 + C50918;
    const double C50932 = C50729 / C50670;
    const double C50931 = C50729 * C50728;
    const double C50928 = C50729 / C50653;
    const double C279 = (2 * C50666 * C50729) / C50653;
    const double C50933 = C50732 * C50728;
    const double C1099 = C50732 / C50924;
    const double C1331 = C50732 / C50655;
    const double C50957 = C50930 / C50653;
    const double C278 = (C50680 * std::pow(C50727, 2)) / C50665 + C50925;
    const double C50936 = C50757 / C50670;
    const double C50935 = C50757 * C50756;
    const double C50929 = C50757 / C50653;
    const double C458 = (2 * C50666 * C50757) / C50653;
    const double C50937 = C50760 * C50756;
    const double C1845 = C50760 / C50924;
    const double C2092 = C50760 / C50655;
    const double C50960 = C50934 / C50653;
    const double C457 = (C50696 * std::pow(C50755, 2)) / C50665 + C50927;
    const double C50944 = C50807 / C49732;
    const double C50943 = C50807 * C50806;
    const double C50939 = C50807 / C49723;
    const double C50813 = C50810 * C50806;
    const double C10700 = C50810 / C50917;
    const double C25414 = C50810 / C49728;
    const double C50963 = C50942 / C49723;
    const double C7952 = (-2 * C50636 * C50942) / C49723;
    const double C7951 = (C50796 * std::pow(C50806, 2)) / C49727 + C50941;
    const double C49742 = C49731 - C49739;
    const double C49741 = C49721 * C49737;
    const double C2296 =
        ((-C49737 / C49723) / C49728 - (0 * be) / C49723) / C49728 -
        (0 * be) / C49723;
    const double C10701 = -C49737 / C49723;
    const double C25416 = (-C49737 / C49723) / C49728 - (0 * be) / C49723;
    const double C50952 = C50914 / C49727;
    const double C50916 = C50640 / C49723;
    const double C25410 = -C50951;
    const double C49798 = C49768 * C49785;
    const double C15376 =
        ((-C49782 / C49723) / C49728 -
         ((C50822 - (C49768 * C49785) / C49723) * be) / C49723) /
            C49728 -
        ((C49768 * ((-C49785 / C49723) / C49728 - (0 * be) / C49723) + C50834) *
         be) /
            C49723;
    const double C15377 =
        ((-C49785 / C49723) / C49728 - (0 * be) / C49723) / C49728 -
        (0 * be) / C49723;
    const double C31640 = (-C49785 / C49723) / C49728 - (0 * be) / C49723;
    const double C49808 = C49805 - C49801;
    const double C172 = C153 + C154;
    const double C171 = C151 + C152;
    const double C2481 = C2446 + C2447;
    const double C2480 = C2444 + C2445;
    const double C50967 = C50948 / C49727;
    const double C5133 = C50940 * C135;
    const double C5129 = C50940 * C146;
    const double C5123 = C50940 * C145;
    const double C5119 = C50940 * C133;
    const double C5115 = C50940 * C144;
    const double C5111 = C50940 * C131;
    const double C5325 = C50940 * C303;
    const double C5323 = C50940 * C298;
    const double C5319 = C50940 * C315;
    const double C5315 = C50940 * C296;
    const double C5517 = C50940 * C475;
    const double C5513 = C50940 * C492;
    const double C5509 = C50940 * C473;
    const double C12754 = C50940 * C1112;
    const double C12750 = C50940 * C1116;
    const double C12744 = C50940 * C317;
    const double C12740 = C50940 * C301;
    const double C12736 = C50940 * C316;
    const double C12732 = C50940 * C300;
    const double C13436 = C50940 * C894;
    const double C13432 = C50940 * C904;
    const double C13428 = C50940 * C1573;
    const double C13424 = C50940 * C1577;
    const double C13708 = C50940 * C3426;
    const double C13704 = C50940 * C3423;
    const double C13869 = C50940 * C1230;
    const double C50950 = C50837 / C49723;
    const double C47229 = C38085 * C1230;
    const double C31637 = -C50966;
    const double C15400 = C15373 * C473;
    const double C15388 = C15373 * C492;
    const double C15382 = C15373 * C475;
    const double C18366 = C15373 * C1573;
    const double C18360 = C15373 * C1577;
    const double C18354 = C15373 * C904;
    const double C18348 = C15373 * C894;
    const double C19016 = C15373 * C1230;
    const double C15410 = C15372 * C146;
    const double C15404 = C15372 * C135;
    const double C15402 = C15372 * C133;
    const double C15396 = C15372 * C145;
    const double C15386 = C15372 * C144;
    const double C15380 = C15372 * C131;
    const double C15592 = C15372 * C303;
    const double C15590 = C15372 * C298;
    const double C15584 = C15372 * C315;
    const double C15772 = C15372 * C475;
    const double C15766 = C15372 * C492;
    const double C15944 = C15372 * C296;
    const double C16108 = C15372 * C473;
    const double C18368 = C15372 * C301;
    const double C18362 = C15372 * C317;
    const double C18352 = C15372 * C316;
    const double C18346 = C15372 * C300;
    const double C19024 = C15372 * C894;
    const double C19018 = C15372 * C904;
    const double C19282 = C15372 * C1116;
    const double C19276 = C15372 * C1112;
    const double C19446 = C15372 * C1230;
    const double C19950 = C15372 * C1577;
    const double C19944 = C15372 * C1573;
    const double C173 = C155 + C156;
    const double C353 = C334 + C335;
    const double C2483 = C2458 + C2459;
    const double C530 = C511 + C512;
    const double C5143 = C5112 + C5113;
    const double C3165 = C3148 + C3149;
    const double C12766 = C12733 + C12734;
    const double C136 =
        (2 * (C49848 * C49951 + C50227 * ae) +
         C49848 * (C49951 + C49848 * C49955 + C49848 * C49942 * ae) +
         (C50227 + C49942 * C49873) * ae) /
        C49723;
    const double C295 =
        (C50017 * (C49951 + C49848 * C49955 + C50231 * ae)) / C49723;
    const double C304 =
        (C49848 * C49951 + C50227 * ae + C49955 * C50035) / C49723;
    const double C472 =
        (C49847 * (C49951 + C49848 * C49955 + C50231 * ae)) / C49723;
    const double C481 =
        (C49848 * C49951 + C50227 * ae + C49955 * C50071) / C49723;
    const double C897 = (C49847 * C50017 * C49955) / C49723;
    const double C7361 =
        (3 * (C49860 + C49847 * C50390 + C50388 * ae) +
         C49847 * (2 * C50390 +
                   C49847 * (C49867 + C49847 * (C49847 * C49877 + C49958) +
                             C49847 * C49943 * ae) +
                   C50391 * ae) +
         (2 * C50388 + C49847 * C50391) * ae) /
        C49723;
    const double C514 = C50822 * C480;
    const double C5519 = C50940 * C480;
    const double C5515 = C50834 * C480;
    const double C15384 = C15374 * C480;
    const double C15774 = C15372 * C480;
    const double C15770 = C15373 * C480;
    const double C32047 = C50834 * C480;
    const double C38095 = C38085 * C480;
    const double C911 = C50822 * C896;
    const double C5321 = C50834 * C896;
    const double C6065 = C50940 * C896;
    const double C15588 = C15373 * C896;
    const double C16320 = C15372 * C896;
    const double C31853 = C50834 * C896;
    const double C336 = C117 * C288;
    const double C5324 = C5107 * C288;
    const double C513 = C117 * C465;
    const double C5518 = C5107 * C465;
    const double C5514 = C5108 * C465;
    const double C910 = C117 * C890;
    const double C5320 = C5108 * C890;
    const double C6064 = C5107 * C890;
    const double C2460 = C117 * C1103;
    const double C12755 = C5107 * C1103;
    const double C3150 = C117 * C1564;
    const double C5326 = C5108 * C1564;
    const double C13437 = C5107 * C1564;
    const double C5520 = C5108 * C1848;
    const double C3599 = C50822 * C1226;
    const double C13434 = C50834 * C1226;
    const double C13865 = C50940 * C1226;
    const double C18350 = C15374 * C1226;
    const double C19022 = C15373 * C1226;
    const double C19440 = C15372 * C1226;
    const double C35601 = C50834 * C1226;
    const double C47223 = C38085 * C1226;
    const double C13867 = C50834 * C4517;
    const double C19020 = C15374 * C4517;
    const double C19442 = C15373 * C4517;
    const double C36155 = C50834 * C4517;
    const double C47893 = C38085 * C4517;
    const double C3598 = C117 * C1218;
    const double C13433 = C5108 * C1218;
    const double C13864 = C5107 * C1218;
    const double C13866 = C5108 * C4511;
    const double C175 = C159 + C160;
    const double C351 = C330 + C331;
    const double C528 = C507 + C508;
    const double C5147 = C5120 + C5121;
    const double C3436 = C3428 + C3429;
    const double C4116 = C4108 + C4109;
    const double C12770 = C12741 + C12742;
    const double C174 = C157 + C158;
    const double C352 = C332 + C333;
    const double C2482 = C2456 + C2457;
    const double C529 = C509 + C510;
    const double C5145 = C5116 + C5117;
    const double C3164 = C3146 + C3147;
    const double C12768 = C12737 + C12738;
    const double C138 = (3 * (C49860 + C49867 * C49873) +
                         C49848 * (2 * C49869 + C49848 * C49881)) /
                        C49723;
    const double C294 = (C50017 * (2 * C49869 + C49848 * C49881)) / C49723;
    const double C305 = (C49860 + C49867 * C49873 + C49881 * C50035) / C49723;
    const double C471 = (C49847 * (2 * C49869 + C49848 * C49881) +
                         (2 * C50231 + C49848 * C50233) * ae) /
                        C49723;
    const double C482 =
        (C49860 + C49867 * C49873 + C49847 * (C49847 * C49881 + C50233 * ae) +
         C49847 * C50233 * ae) /
        C49723;
    const double C898 =
        (C49847 * C50017 * C49881 + C50017 * C50233 * ae) / C49723;
    const double C1108 =
        (2 * C50017 * C49881 + C50017 * (C49881 + C49897 * C50035)) / C49723;
    const double C49898 = C49848 * C49896;
    const double C49903 = 2 * C49896;
    const double C50062 = C50017 * C49896;
    const double C50078 = C49847 * C49896;
    const double C49891 = C49876 + C49887;
    const double C50383 = C50380 + C49961;
    const double C2461 = C50822 * C1110;
    const double C12756 = C50940 * C1110;
    const double C3151 = C50822 * C1571;
    const double C5327 = C50834 * C1571;
    const double C13438 = C50940 * C1571;
    const double C15594 = C15373 * C1571;
    const double C31859 = C50834 * C1571;
    const double C8116 = C50822 * C3421;
    const double C9055 =
        (4 * (2 * C50369 + C50017 * C50399) +
         C50017 *
             (3 * C50399 + C50017 * (2 * C50017 * C49877 +
                                     C50017 * (C49877 + C49893 * C50035)))) /
        C49723;
    const double C50459 = C50455 + C50456;
    const double C50494 = C49847 * C50490;
    const double C50518 = 2 * C50490;
    const double C147 =
        (3 * (C49866 + ae * C49869 + C49848 * C49880) +
         ae * (2 * C49869 + C49848 * C49881) +
         C49848 *
             (2 * C49880 + ae * C49881 +
              C49848 * (C49876 + ae * C49848 * C49877 +
                        C49848 * (ae * C49877 + C49848 * std::pow(C49850, 6) *
                                                    bs[6] * C49858)))) /
        C49727;
    const double C314 =
        ((yP - yQ) * (C49866 + ae * C49869 + C49848 * C49880)) / C49727;
    const double C318 =
        (ae * C49860 + C49848 * C49866 + C49880 * std::pow(yP - yQ, 2)) /
        C49727;
    const double C491 = (ae * (C49857 * C49853 * C49941 +
                               C49848 * (C49848 * C49945 + C49942 * ae) +
                               C49848 * C49942 * ae) +
                         C49847 * (C49866 + ae * C49869 + C49848 * C49880)) /
                        C49727;
    const double C495 = (ae * C49860 + C49848 * C49866 + ae * C49847 * C49955 +
                         C49847 * (ae * C49955 + C49847 * C49880)) /
                        C49727;
    const double C905 =
        (ae * C50017 * C49955 + C49847 * C50017 * C49880) / C49727;
    const double C1115 = (2 * C50017 * C49880 +
                          C50017 * (C49880 + C49896 * std::pow(C50017, 2))) /
                         C49727;
    const double C3437 = C3430 + C3431;
    const double C4117 = C4110 + C4111;
    const double C12772 = C12745 + C12746;
    const double C49964 = C49848 * C49963;
    const double C49968 = 2 * C49963;
    const double C50031 = C50017 * C49963;
    const double C50077 = ae * C49963;
    const double C50076 = C49847 * C49963;
    const double C1576 = (ae * (C49955 + C49963 * C50035) +
                          C49847 * (C49880 + C49896 * C50035)) /
                         C49727;
    const double C1860 = (2 * (ae * C49955 + C49847 * C49880) +
                          ae * (C49955 + C49963 * std::pow(C49847, 2)) +
                          C49847 * (C49880 + ae * C49847 * C49963 +
                                    C49847 * (ae * C49963 + C49847 * C49896))) /
                         C49727;
    const double C1109 =
        (2 * C50017 * C49955 + C50017 * (C49955 + C49963 * C50035)) / C49723;
    const double C1570 = (C49847 * (C49955 + C49963 * C50035)) / C49723;
    const double C1854 =
        (2 * C49847 * C49955 + C49847 * (C49955 + C49963 * C50071)) / C49723;
    const double C3596 =
        (C49866 + C49876 * C50035 + ae * C49847 * C50054 +
         C49847 * (ae * C50054 + C49847 * (C49876 + C49892 * C50035))) /
        C49727;
    const double C4106 =
        (ae * (2 * C50033 + C50017 * C50054) +
         C49847 * (2 * C50017 * C49876 + C50017 * (C49876 + C49892 * C50035))) /
        C49727;
    const double C10143 =
        (2 * (ae * C50054 + C49847 * C50094) + ae * (C50054 + C50104 * C50071) +
         C49847 *
             (C50094 + ae * C49847 * C50104 +
              C49847 * (ae * C50104 + C49847 * (C49892 + C49916 * C50035)))) /
        C49727;
    const double C3422 = (3 * (C49951 + C49945 * C50035) +
                          C50017 * (2 * C50033 + C50017 * C50054)) /
                         C49723;
    const double C3592 = (C49951 + C49945 * C50035 + C50054 * C50071) / C49723;
    const double C4102 = (C49847 * (2 * C50033 + C50017 * C50054)) / C49723;
    const double C10140 =
        (2 * C49847 * C50054 + C49847 * (C50054 + C50104 * C50071)) / C49723;
    const double C50142 = C50139 + C50140;
    const double C13871 = C50834 * C4520;
    const double C19014 = C15374 * C4520;
    const double C19448 = C15373 * C4520;
    const double C36159 = C50834 * C4520;
    const double C47887 = C38085 * C4520;
    const double C13870 = C5108 * C4516;
    const double C7364 =
        (3 * (C49866 + ae * C50083 + C49847 * C50087) +
         ae * (2 * C50083 + C49847 * C50088) +
         C49847 * (2 * C50087 + ae * C50088 +
                   C49847 * (C49876 + ae * C49847 * C49960 +
                             C49847 * (ae * C49960 + C49847 * C49892)))) /
        C49727;
    const double C7360 = (3 * (C49951 + C49945 * C50071) +
                          C49847 * (2 * C50083 + C49847 * C50088)) /
                         C49723;
    const double C50177 = C49847 * C50173;
    const double C50198 = 2 * C50173;
    const double C50176 = C49876 + C50172;
    const double C49979 = C49977 * ae;
    const double C50238 = C49848 * C49977;
    const double C50241 = 3 * C49977;
    const double C50312 = C50017 * C49977;
    const double C50374 = C49847 * C49977;
    const double C1569 = (C49847 * (C49881 + C49897 * C50035) +
                          (C50233 + C49977 * C50035) * ae) /
                         C49723;
    const double C1102 =
        2 * C50017 * C50233 + C50017 * (C50233 + C49977 * C50035);
    const double C1563 = C49847 * (C50233 + C49977 * C50035);
    const double C1847 =
        2 * C49847 * C50233 + C49847 * (C50233 + C49977 * C50071);
    const double C50476 = C50473 + C49976;
    const double C50348 = C49959 + C50347;
    const double C50402 = 2 * C50366;
    const double C50465 = C49847 * C50366;
    const double C50464 = C50366 * ae;
    const double C4515 =
        (2 * (C49847 * C50365 + C50315 * ae) +
         C49847 * (C50365 + C49847 * (C49847 * C50017 * C49905 + C50366 * ae) +
                   C49847 * C50366 * ae) +
         (C50315 + C50366 * C50071) * ae) /
        C49723;
    const double C4510 =
        2 * C49847 * C50315 + C49847 * (C50315 + C50366 * C50071);
    const double C50384 = C49959 + C50382;
    const double C50479 = 2 * C50474;
    const double C50477 = C50474 * ae;
    const double C49980 = C49848 * C49978;
    const double C49989 = 2 * C49978;
    const double C50050 = C49978 * C50035;
    const double C50063 = C50017 * C49978;
    const double C50079 = C49978 * C50071;
    const double C50155 = ae * C49978;
    const double C50154 = C49847 * C49978;
    const double C50528 = C49847 * C50524;
    const double C50412 = C50017 * C50411;
    const double C50432 = 3 * C50411;
    const double C50449 = C49847 * C50411;
    const double C50448 = C50411 * ae;
    const double C10141 =
        (2 * (C49847 * C50399 + C50352 * ae) +
         C49847 *
             (C50399 +
              C49847 * (C49847 * (C49877 + C49893 * C50035) + C50411 * ae) +
              C49847 * C50411 * ae) +
         (C50352 + C50411 * C50071) * ae) /
        C49723;
    const double C10137 =
        2 * C49847 * C50352 + C49847 * (C50352 + C50411 * C50071);
    const double C50460 = C50370 + C50458;
    const double C50508 = 2 * C50503;
    const double C50506 = C50503 * ae;
    const double C50509 = C50505 + C50502;
    const double C50495 = C49847 * C50492;
    const double C50523 = 3 * C50492;
    const double C50521 = C50492 * ae;
    const double C49923 = C49848 * C49921;
    const double C3419 =
        (3 * (C49881 + C49897 * C50035) +
         C50017 * (2 * C50017 * C49897 + C50017 * (C49897 + C49921 * C50035))) /
        C49723;
    const double C49922 = C49848 * C49920;
    const double C50090 = C49920 * C50035;
    const double C50147 = C50017 * C49920;
    const double C50156 = C49847 * C49920;
    const double C3425 =
        (3 * (C49880 + C49896 * C50035) +
         C50017 * (2 * C50017 * C49896 + C50017 * (C49896 + C49920 * C50035))) /
        C49727;
    const double C50116 = C50017 * C50115;
    const double C50133 = C49847 * C50115;
    const double C50191 = C50183 + C50187;
    const double C50211 = C49847 * C50207;
    const double C50003 = C49848 * C50000;
    const double C50097 = C50000 * C50035;
    const double C50148 = C50017 * C50000;
    const double C50157 = C50000 * C50071;
    const double C50124 = C50017 * C50123;
    const double C50134 = C50123 * C50071;
    const double C50192 = C50120 + C50189;
    const double C50212 = C49847 * C50209;
    const double C5521 = C50834 * C1855;
    const double C15776 = C15373 * C1855;
    const double C15768 = C15374 * C1855;
    const double C32053 = C50834 * C1855;
    const double C38479 = C38085 * C1855;
    const double C2639 = C50822 * C1224;
    const double C6067 = C50834 * C1224;
    const double C15586 = C15374 * C1224;
    const double C16322 = C15373 * C1224;
    const double C28549 = C50940 * C1224;
    const double C32599 = C50834 * C1224;
    const double C38297 = C38085 * C1224;
    const double C2638 = C117 * C1217;
    const double C6066 = C5108 * C1217;
    const double C28548 = C5107 * C1217;
    const double C165 = C117 * C126;
    const double C5134 = C5107 * C126;
    const double C326 = C117 * C283;
    const double C5698 = C5107 * C283;
    const double C340 = C117 * C289;
    const double C5332 = C5107 * C289;
    const double C503 = C117 * C460;
    const double C5130 = C5108 * C460;
    const double C5858 = C5107 * C460;
    const double C517 = C117 * C466;
    const double C5526 = C5107 * C466;
    const double C5506 = C5108 * C466;
    const double C914 = C117 * C891;
    const double C5312 = C5108 * C891;
    const double C6072 = C5107 * C891;
    const double C9231 = C50822 * C3593;
    const double C13426 = C50834 * C3593;
    const double C13873 = C50940 * C3593;
    const double C18364 = C15374 * C3593;
    const double C19946 = C15373 * C3593;
    const double C36813 = C50834 * C3593;
    const double C47237 = C38085 * C3593;
    const double C9736 = C50822 * C4103;
    const double C12752 = C50834 * C4103;
    const double C14377 = C50940 * C4103;
    const double C19278 = C15373 * C4103;
    const double C35949 = C50834 * C4103;
    const double C9060 = C117 * C3417;
    const double C13703 = C5107 * C3417;
    const double C9230 = C117 * C3587;
    const double C13425 = C5108 * C3587;
    const double C13872 = C5107 * C3587;
    const double C9735 = C117 * C4097;
    const double C12751 = C5108 * C4097;
    const double C14376 = C5107 * C4097;
    const double C3607 = C3600 + C3601;
    const double C13449 = C13429 + C13430;
    const double C49901 = C49889 + C49899;
    const double C9053 =
        (4 * (2 * C50365 + C50017 * C50395) +
         C50017 * (3 * C50395 +
                   C50017 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50035)))) /
        C49723;
    const double C50429 = C50426 + C50428;
    const double C11436 = C50822 * C9057;
    const double C50106 = C50102 + C50105;
    const double C14784 = (3 * (C50033 + C50066 * C50071) +
                           C49847 * (2 * C50138 + C49847 * C50143)) /
                          C49723;
    const double C50190 = C50112 + C50186;
    const double C50180 = C50174 + C50178;
    const double C50004 = C49992 + C50002;
    const double C50344 = C49977 + C50343;
    const double C50377 = C49977 + C50375;
    const double C50405 = C50017 * C50404;
    const double C50470 = C50366 + C50468;
    const double C50481 = C49847 * C50478;
    const double C50438 = C50435 + C50437;
    const double C50452 = C50411 + C50450;
    const double C50512 = C49847 * C50510;
    const double C50531 = C50527 + C50529;
    const double C50954 = C50919 / C50665;
    const double C50956 = C50923 / C50653;
    const double C281 = -C50955;
    const double C50958 = C50931 / C50665;
    const double C50959 = C50933 / C50653;
    const double C1025 = -C50957;
    const double C50961 = C50935 / C50665;
    const double C50962 = C50937 / C50653;
    const double C1676 = -C50960;
    const double C50964 = C50943 / C49727;
    const double C50945 = C50813 / C49723;
    const double C22717 = -C50963;
    const double C121 =
        (C49742 / C49728 - (0 * be) / C49723) / C49728 - (0 * be) / C49723;
    const double C22721 = C49742 / C49728 - (0 * be) / C49723;
    const double C49744 = C49741 / C49723;
    const double C50969 = C50913 - C50952;
    const double C50953 = C50915 - C50916;
    const double C49804 = C49798 / C49723;
    const double C15405 = C15376 * C460;
    const double C15399 = C15376 * C461;
    const double C15387 = C15376 * C474;
    const double C15381 = C15376 * C462;
    const double C15593 = C15376 * C1564;
    const double C15587 = C15376 * C890;
    const double C15775 = C15376 * C1848;
    const double C15769 = C15376 * C465;
    const double C15945 = C15376 * C891;
    const double C16109 = C15376 * C466;
    const double C16321 = C15376 * C1217;
    const double C18365 = C15376 * C1565;
    const double C18359 = C15376 * C1572;
    const double C18353 = C15376 * C895;
    const double C18347 = C15376 * C889;
    const double C19021 = C15376 * C1218;
    const double C19015 = C15376 * C1225;
    const double C19277 = C15376 * C4097;
    const double C19447 = C15376 * C4516;
    const double C19441 = C15376 * C4511;
    const double C19945 = C15376 * C3587;
    const double C15397 = C15377 * C466;
    const double C15383 = C15377 * C465;
    const double C15585 = C15377 * C1217;
    const double C15767 = C15377 * C1848;
    const double C18363 = C15377 * C3587;
    const double C18355 = C15377 * C1225;
    const double C18349 = C15377 * C1218;
    const double C19019 = C15377 * C4511;
    const double C19013 = C15377 * C4516;
    const double C31662 = C31640 * C460;
    const double C31652 = C31640 * C461;
    const double C31648 = C31640 * C474;
    const double C31644 = C31640 * C462;
    const double C31858 = C31640 * C1564;
    const double C31852 = C31640 * C890;
    const double C31844 = C31640 * C891;
    const double C32052 = C31640 * C1848;
    const double C32046 = C31640 * C465;
    const double C32038 = C31640 * C466;
    const double C32598 = C31640 * C1217;
    const double C34712 = C31640 * C1565;
    const double C34708 = C31640 * C1572;
    const double C34702 = C31640 * C895;
    const double C34698 = C31640 * C889;
    const double C35600 = C31640 * C1218;
    const double C35596 = C31640 * C1225;
    const double C35948 = C31640 * C4097;
    const double C36158 = C31640 * C4516;
    const double C36154 = C31640 * C4511;
    const double C36812 = C31640 * C3587;
    const double C20913 =
        (C49808 / C49728 - (0 * be) / C49723) / C49728 - (0 * be) / C49723;
    const double C38088 = C49808 / C49728 - (0 * be) / C49723;
    const double C2489 = C2481 * C2289;
    const double C8104 = C2481 * C50911;
    const double C10802 = C2481 * C50632;
    const double C25565 = C2481 * C25410;
    const double C10801 = C2480 * C10701;
    const double C50977 = C50946 - C50967;
    const double C5153 = C5132 + C5133;
    const double C5148 = C5122 + C5123;
    const double C5146 = C5118 + C5119;
    const double C5144 = C5114 + C5115;
    const double C5142 = C5110 + C5111;
    const double C5347 = C5322 + C5323;
    const double C5345 = C5318 + C5319;
    const double C5343 = C5314 + C5315;
    const double C5541 = C5516 + C5517;
    const double C5539 = C5512 + C5513;
    const double C5537 = C5508 + C5509;
    const double C12776 = C12753 + C12754;
    const double C12774 = C12749 + C12750;
    const double C12771 = C12743 + C12744;
    const double C12769 = C12739 + C12740;
    const double C12767 = C12735 + C12736;
    const double C12765 = C12731 + C12732;
    const double C13452 = C13435 + C13436;
    const double C13450 = C13431 + C13432;
    const double C13448 = C13427 + C13428;
    const double C13446 = C13423 + C13424;
    const double C13882 = C13868 + C13869;
    const double C50968 = C50949 - C50950;
    const double C31665 = C31637 * C135;
    const double C31661 = C31637 * C146;
    const double C31655 = C31637 * C145;
    const double C31651 = C31637 * C133;
    const double C31647 = C31637 * C144;
    const double C31643 = C31637 * C131;
    const double C31857 = C31637 * C303;
    const double C31855 = C31637 * C298;
    const double C31851 = C31637 * C315;
    const double C31847 = C31637 * C296;
    const double C32051 = C31637 * C480;
    const double C32049 = C31637 * C475;
    const double C32045 = C31637 * C492;
    const double C32041 = C31637 * C473;
    const double C32597 = C31637 * C896;
    const double C34721 = C31637 * C1110;
    const double C34715 = C31637 * C301;
    const double C34711 = C31637 * C317;
    const double C34701 = C31637 * C316;
    const double C34697 = C31637 * C300;
    const double C34935 = C31637 * C1224;
    const double C35607 = C31637 * C1571;
    const double C35603 = C31637 * C894;
    const double C35599 = C31637 * C904;
    const double C35951 = C31637 * C1116;
    const double C35947 = C31637 * C1112;
    const double C36157 = C31637 * C1230;
    const double C36153 = C31637 * C1226;
    const double C36815 = C31637 * C1577;
    const double C36811 = C31637 * C1573;
    const double C45427 = C31637 * C3426;
    const double C45423 = C31637 * C3423;
    const double C45584 = C31637 * C3593;
    const double C46084 = C31637 * C4103;
    const double C15375 =
        ((-(0 * be) / C49723) / C49728 -
         ((0 - (C49768 * C49782) / C49723) * be) / C49723) /
            C49728 -
        ((C49768 * ((-C49782 / C49723) / C49728 -
                    ((C50822 - (C49768 * C49785) / C49723) * be) / C49723) +
          C31637) *
         be) /
            C49723 +
        (-C49785 / C49723) / C49728 - (0 * be) / C49723;
    const double C8105 = C353 * C49742;
    const double C10809 = C353 * C10701;
    const double C25566 = C353 * C25416;
    const double C10803 = C2483 * C10701;
    const double C11256 = C3165 * C10701;
    const double C161 = C117 * C136;
    const double C5128 = C5107 * C136;
    const double C328 = C117 * C295;
    const double C5310 = C5107 * C295;
    const double C338 = C117 * C304;
    const double C5328 = C5107 * C304;
    const double C505 = C117 * C472;
    const double C5124 = C5108 * C472;
    const double C5504 = C5107 * C472;
    const double C15393 = C15376 * C472;
    const double C31656 = C31640 * C472;
    const double C515 = C117 * C481;
    const double C5522 = C5107 * C481;
    const double C5510 = C5108 * C481;
    const double C15389 = C15377 * C481;
    const double C15763 = C15376 * C481;
    const double C32042 = C31640 * C481;
    const double C912 = C117 * C897;
    const double C5316 = C5108 * C897;
    const double C6068 = C5107 * C897;
    const double C15581 = C15376 * C897;
    const double C31848 = C31640 * C897;
    const double C354 = C336 + C337;
    const double C5348 = C5324 + C5325;
    const double C531 = C513 + C514;
    const double C5542 = C5518 + C5519;
    const double C5540 = C5514 + C5515;
    const double C922 = C910 + C911;
    const double C5346 = C5320 + C5321;
    const double C6080 = C6064 + C6065;
    const double C3606 = C3598 + C3599;
    const double C13451 = C13433 + C13434;
    const double C13880 = C13864 + C13865;
    const double C13881 = C13866 + C13867;
    const double C2450 = C351 * C2296;
    const double C8121 = C351 * C49742;
    const double C11017 = C351 * C10701;
    const double C25578 = C351 * C25416;
    const double C10805 = C3436 * C10701;
    const double C11254 = C4116 * C10701;
    const double C2469 = C352 * C2289;
    const double C2449 = C352 * C2290;
    const double C8120 = C352 * C50911;
    const double C8106 = C352 * C50637;
    const double C10810 = C352 * C50632;
    const double C25577 = C352 * C25410;
    const double C25567 = C352 * C50637;
    const double C2490 = C2482 * C2289;
    const double C8108 = C2482 * C50911;
    const double C10804 = C2482 * C50632;
    const double C25569 = C2482 * C25410;
    const double C3170 = C3164 * C2289;
    const double C8791 = C3164 * C50911;
    const double C11255 = C3164 * C50632;
    const double C26240 = C3164 * C25410;
    const double C166 = C50822 * C138;
    const double C5135 = C50940 * C138;
    const double C31667 = C31637 * C138;
    const double C327 = C50822 * C294;
    const double C5699 = C50940 * C294;
    const double C32231 = C31637 * C294;
    const double C341 = C50822 * C305;
    const double C5333 = C50940 * C305;
    const double C31865 = C31637 * C305;
    const double C504 = C50822 * C471;
    const double C5131 = C50834 * C471;
    const double C5859 = C50940 * C471;
    const double C15406 = C15373 * C471;
    const double C31663 = C50834 * C471;
    const double C32391 = C31637 * C471;
    const double C518 = C50822 * C482;
    const double C5527 = C50940 * C482;
    const double C5507 = C50834 * C482;
    const double C15398 = C15374 * C482;
    const double C16110 = C15373 * C482;
    const double C32059 = C31637 * C482;
    const double C32039 = C50834 * C482;
    const double C38109 = C38085 * C482;
    const double C915 = C50822 * C898;
    const double C5313 = C50834 * C898;
    const double C6073 = C50940 * C898;
    const double C15946 = C15373 * C898;
    const double C31845 = C50834 * C898;
    const double C32605 = C31637 * C898;
    const double C2465 = C50822 * C1108;
    const double C49910 = C49903 + C49904;
    const double C49900 = C49891 + C49898;
    const double C2484 = C2460 + C2461;
    const double C12777 = C12755 + C12756;
    const double C3166 = C3150 + C3151;
    const double C5349 = C5326 + C5327;
    const double C13453 = C13437 + C13438;
    const double C11434 = C50822 * C9055;
    const double C50496 = C49867 + C50494;
    const double C164 = C50822 * C147;
    const double C5139 = C50940 * C147;
    const double C31671 = C31637 * C147;
    const double C329 = C50822 * C314;
    const double C5311 = C50940 * C314;
    const double C15950 = C15372 * C314;
    const double C31843 = C31637 * C314;
    const double C339 = C50822 * C318;
    const double C5329 = C50940 * C318;
    const double C15598 = C15372 * C318;
    const double C31861 = C31637 * C318;
    const double C506 = C50822 * C491;
    const double C5125 = C50834 * C491;
    const double C5505 = C50940 * C491;
    const double C15394 = C15373 * C491;
    const double C16114 = C15372 * C491;
    const double C31657 = C50834 * C491;
    const double C32037 = C31637 * C491;
    const double C516 = C50822 * C495;
    const double C5523 = C50940 * C495;
    const double C5511 = C50834 * C495;
    const double C15390 = C15374 * C495;
    const double C15780 = C15372 * C495;
    const double C15764 = C15373 * C495;
    const double C32055 = C31637 * C495;
    const double C32043 = C50834 * C495;
    const double C38101 = C38085 * C495;
    const double C913 = C50822 * C905;
    const double C5317 = C50834 * C905;
    const double C6069 = C50940 * C905;
    const double C15582 = C15373 * C905;
    const double C16326 = C15372 * C905;
    const double C31849 = C50834 * C905;
    const double C32601 = C31637 * C905;
    const double C2463 = C50822 * C1115;
    const double C12760 = C50940 * C1115;
    const double C34725 = C31637 * C1115;
    const double C3439 = C3437 * C2289;
    const double C8113 = C3437 * C50911;
    const double C10806 = C3437 * C50632;
    const double C25574 = C3437 * C25410;
    const double C4119 = C4117 * C2289;
    const double C8787 = C4117 * C50911;
    const double C11253 = C4117 * C50632;
    const double C26236 = C4117 * C25410;
    const double C49965 = C49945 + C49964;
    const double C1229 = (C50017 * C49880 + ae * C49847 * C50031 +
                          C49847 * (ae * C50031 + C49847 * C50017 * C49896)) /
                         C49727;
    const double C1223 = (C50017 * C49955 + C50031 * C50071) / C49723;
    const double C50080 = C50077 + C50078;
    const double C3153 = C50822 * C1576;
    const double C5331 = C50834 * C1576;
    const double C13442 = C50940 * C1576;
    const double C15600 = C15373 * C1576;
    const double C31863 = C50834 * C1576;
    const double C35611 = C31637 * C1576;
    const double C5525 = C50834 * C1860;
    const double C15782 = C15373 * C1860;
    const double C15762 = C15374 * C1860;
    const double C32057 = C50834 * C1860;
    const double C38473 = C38085 * C1860;
    const double C2462 = C117 * C1109;
    const double C12759 = C5107 * C1109;
    const double C3152 = C117 * C1570;
    const double C5330 = C5108 * C1570;
    const double C13441 = C5107 * C1570;
    const double C15599 = C15376 * C1570;
    const double C31862 = C31640 * C1570;
    const double C5524 = C5108 * C1854;
    const double C15781 = C15376 * C1854;
    const double C15761 = C15377 * C1854;
    const double C32056 = C31640 * C1854;
    const double C9233 = C50822 * C3596;
    const double C13422 = C50834 * C3596;
    const double C13877 = C50940 * C3596;
    const double C18358 = C15374 * C3596;
    const double C19952 = C15373 * C3596;
    const double C36817 = C50834 * C3596;
    const double C45588 = C31637 * C3596;
    const double C47231 = C38085 * C3596;
    const double C9738 = C50822 * C4106;
    const double C12748 = C50834 * C4106;
    const double C14381 = C50940 * C4106;
    const double C19284 = C15373 * C4106;
    const double C35953 = C50834 * C4106;
    const double C46088 = C31637 * C4106;
    const double C13879 = C50834 * C10143;
    const double C19954 = C15374 * C10143;
    const double C45590 = C50834 * C10143;
    const double C48827 = C38085 * C10143;
    const double C9062 = C117 * C3422;
    const double C13707 = C5107 * C3422;
    const double C9232 = C117 * C3592;
    const double C13421 = C5108 * C3592;
    const double C13876 = C5107 * C3592;
    const double C18357 = C15377 * C3592;
    const double C19951 = C15376 * C3592;
    const double C36816 = C31640 * C3592;
    const double C9737 = C117 * C4102;
    const double C12747 = C5108 * C4102;
    const double C14380 = C5107 * C4102;
    const double C19283 = C15376 * C4102;
    const double C35952 = C31640 * C4102;
    const double C13878 = C5108 * C10140;
    const double C19953 = C15377 * C10140;
    const double C45589 = C31640 * C10140;
    const double C14787 =
        (3 * (C50065 + ae * C50138 + C49847 * C50142) +
         ae * (2 * C50138 + C49847 * C50143) +
         C49847 *
             (2 * C50142 + ae * C50143 +
              C49847 * (C50112 + ae * C49847 * C50120 +
                        C49847 * (ae * C50120 + C49847 * C50017 * C49916)))) /
        C49727;
    const double C13883 = C13870 + C13871;
    const double C50205 = C50198 + C50199;
    const double C50179 = C50176 + C50177;
    const double C50376 = C50373 + C49979;
    const double C1853 =
        (2 * (C49847 * C49881 + C50233 * ae) +
         C49847 * (C49881 + C49847 * (C49847 * C49897 + C49979) +
                   C49847 * C49977 * ae) +
         (C50233 + C49977 * C50071) * ae) /
        C49723;
    const double C50239 = C50237 + C50238;
    const double C1222 =
        (C50017 * C49881 + C49847 * (C49847 * C50017 * C49897 + C50312 * ae) +
         C49847 * C50312 * ae) /
        C49723;
    const double C4513 =
        (2 * (C49847 * C50361 + C50312 * ae) +
         C49847 * (C50361 + C49847 * (C49847 * C50017 * C49921 + C50362 * ae) +
                   C49847 * C50362 * ae) +
         (C50312 + C50362 * C50071) * ae) /
        C49723;
    const double C1216 = C50017 * C50233 + C50312 * C50071;
    const double C4509 =
        2 * C49847 * C50312 + C49847 * (C50312 + C50362 * C50071);
    const double C3155 = C50822 * C1569;
    const double C5335 = C50834 * C1569;
    const double C31867 = C50834 * C1569;
    const double C2464 = C117 * C1102;
    const double C3154 = C117 * C1563;
    const double C5334 = C5108 * C1563;
    const double C31866 = C31640 * C1563;
    const double C5528 = C5108 * C1847;
    const double C16111 = C15377 * C1847;
    const double C32060 = C31640 * C1847;
    const double C50480 = C49847 * C50476;
    const double C3591 =
        (C49869 + C49883 * C50035 +
         C49847 * (C49847 * (C49883 + C49905 * C50035) + C50348 * ae) +
         C49847 * C50348 * ae) /
        C49723;
    const double C4101 =
        (C49847 * (2 * C50017 * C49883 + C50017 * (C49883 + C49905 * C50035)) +
         (2 * C50315 + C50017 * C50348) * ae) /
        C49723;
    const double C10139 =
        (2 * (C49847 * C50395 + C50348 * ae) +
         C49847 * (C50395 +
                   C49847 * (C49847 * (C49905 + C49848 * C49917 * C50035) +
                             C50404 * ae) +
                   C49847 * C50404 * ae) +
         (C50348 + C50404 * C50071) * ae) /
        C49723;
    const double C3416 = 3 * (C50231 + C49959 * C50035) +
                         C50017 * (2 * C50315 + C50017 * C50348);
    const double C3586 = C50231 + C49959 * C50035 + C50348 * C50071;
    const double C4096 = C49847 * (2 * C50315 + C50017 * C50348);
    const double C10136 =
        2 * C49847 * C50348 + C49847 * (C50348 + C50404 * C50071);
    const double C50469 = C50467 + C50464;
    const double C16324 = C15374 * C4515;
    const double C28551 = C50834 * C4515;
    const double C34937 = C50834 * C4515;
    const double C39035 = C38085 * C4515;
    const double C16323 = C15377 * C4510;
    const double C28550 = C5108 * C4510;
    const double C34936 = C31640 * C4510;
    const double C7359 =
        (3 * (C49869 + C49847 * C50383 + C50381 * ae) +
         C49847 * (2 * C50383 +
                   C49847 * (C49883 + C49847 * (C49847 * C49905 + C49976) +
                             C49847 * C49973 * ae) +
                   C50384 * ae) +
         (2 * C50381 + C49847 * C50384) * ae) /
        C49723;
    const double C7354 = 3 * (C50231 + C49959 * C50071) +
                         C49847 * (2 * C50381 + C49847 * C50384);
    const double C49981 = C49960 + C49980;
    const double C50051 = C49963 + C50050;
    const double C50096 = 2 * C50063;
    const double C50146 = ae * C50063;
    const double C50145 = C49847 * C50063;
    const double C4519 =
        (2 * (ae * C50031 + C49847 * C50062) +
         ae * (C50031 + C50063 * std::pow(C49847, 2)) +
         C49847 * (C50062 + ae * C49847 * C50063 +
                   C49847 * (ae * C50063 + C49847 * C50017 * C49920))) /
        C49727;
    const double C4514 =
        (2 * C49847 * C50031 + C49847 * (C50031 + C50063 * C50071)) / C49723;
    const double C50081 = C49963 + C50079;
    const double C50160 = 2 * C50154;
    const double C50158 = ae * C50154;
    const double C50530 = C49877 + C50528;
    const double C50413 = C50409 + C50412;
    const double C50451 = C50447 + C50448;
    const double C13875 = C50834 * C10141;
    const double C19948 = C15374 * C10141;
    const double C45586 = C50834 * C10141;
    const double C48821 = C38085 * C10141;
    const double C13874 = C5108 * C10137;
    const double C19947 = C15377 * C10137;
    const double C45585 = C31640 * C10137;
    const double C14785 =
        (3 * (C50369 + C49847 * C50459 + C50457 * ae) +
         C49847 * (2 * C50459 +
                   C49847 * (C50424 +
                             C49847 * (C49847 * C50017 * C49893 + C50433 * ae) +
                             C49847 * C50433 * ae) +
                   C50460 * ae) +
         (2 * C50457 + C49847 * C50460) * ae) /
        C49723;
    const double C14781 = 3 * (C50318 + C50370 * C50071) +
                          C49847 * (2 * C50457 + C49847 * C50460);
    const double C50511 = C49847 * C50509;
    const double C50497 = C50493 + C50495;
    const double C49925 = C49913 + C49923;
    const double C49924 = C49915 + C49922;
    const double C50091 = C49896 + C50090;
    const double C50149 = C49847 * C50147;
    const double C50159 = C50155 + C50156;
    const double C8118 = C50822 * C3425;
    const double C50117 = C50114 + C50116;
    const double C50135 = C50132 + C50133;
    const double C50193 = C49847 * C50191;
    const double C50213 = C50210 + C50211;
    const double C50005 = C49971 + C50003;
    const double C50098 = C49978 + C50097;
    const double C50150 = C50148 * C50071;
    const double C50161 = C49978 + C50157;
    const double C50125 = C50122 + C50124;
    const double C50136 = C50104 + C50134;
    const double C50194 = C49847 * C50192;
    const double C50214 = C50208 + C50212;
    const double C5543 = C5520 + C5521;
    const double C2646 = C2638 + C2639;
    const double C6081 = C6066 + C6067;
    const double C28556 = C28548 + C28549;
    const double C9067 = C9060 + C9061;
    const double C13713 = C13703 + C13704;
    const double C9236 = C9230 + C9231;
    const double C13447 = C13425 + C13426;
    const double C13884 = C13872 + C13873;
    const double C9742 = C9735 + C9736;
    const double C12775 = C12751 + C12752;
    const double C14386 = C14376 + C14377;
    const double C3609 = C3607 * C2289;
    const double C9227 = C3607 * C50911;
    const double C11544 = C3607 * C50632;
    const double C26648 = C3607 * C25410;
    const double C139 = (4 * (2 * C49869 + C49848 * C49881) +
                         C49848 * (3 * C49881 + C49848 * C49901)) /
                        C49723;
    const double C307 =
        (2 * C49869 + C49848 * C49881 + C49901 * C50035) / C49723;
    const double C309 = (C50017 * (3 * C49881 + C49848 * C49901)) / C49723;
    const double C11428 =
        (5 * (3 * C50399 + C50017 * C50429) +
         C50017 * (4 * C50429 +
                   C50017 * (3 * C50427 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035))))) /
        C49723;
    const double C9224 =
        (2 * C50065 + C50017 * C50094 + ae * C49847 * C50106 +
         C49847 *
             (ae * C50106 + C49847 * (2 * C50017 * C49892 +
                                      C50017 * (C49892 + C49916 * C50035)))) /
        C49727;
    const double C9732 =
        (ae * (3 * C50054 + C50017 * C50106) +
         C49847 *
             (3 * C50094 + C50017 * (2 * C50017 * C49892 +
                                     C50017 * (C49892 + C49916 * C50035)))) /
        C49727;
    const double C9054 = (4 * (2 * C50033 + C50017 * C50054) +
                          C50017 * (3 * C50054 + C50017 * C50106)) /
                         C49723;
    const double C9221 =
        (2 * C50033 + C50017 * C50054 + C50106 * C50071) / C49723;
    const double C9729 = (C49847 * (3 * C50054 + C50017 * C50106)) / C49723;
    const double C19449 = C15377 * C14784;
    const double C17610 = (4 * (2 * C50083 + C49847 * C50088) +
                           C49847 * (3 * C50088 + C49847 * C50180)) /
                          C49723;
    const double C50006 = C50004 * ae;
    const double C50242 = C49848 * C50004;
    const double C50309 = C50017 * C50004;
    const double C3589 =
        (C49881 + C49897 * C50035 +
         C49847 * (C49847 * (C49897 + C49921 * C50035) + C50344 * ae) +
         C49847 * C50344 * ae) /
        C49723;
    const double C4099 =
        (C49847 * (2 * C50017 * C49897 + C50017 * (C49897 + C49921 * C50035)) +
         (2 * C50312 + C50017 * C50344) * ae) /
        C49723;
    const double C3415 = 3 * (C50233 + C49977 * C50035) +
                         C50017 * (2 * C50312 + C50017 * C50344);
    const double C3585 = C50233 + C49977 * C50035 + C50344 * C50071;
    const double C4095 = C49847 * (2 * C50312 + C50017 * C50344);
    const double C7353 = 3 * (C50233 + C49977 * C50071) +
                         C49847 * (2 * C50374 + C49847 * C50377);
    const double C50406 = C50402 + C50405;
    const double C16726 = 3 * (C50315 + C50366 * C50071) +
                          C49847 * (2 * C50465 + C49847 * C50470);
    const double C50483 = C50479 + C50481;
    const double C50439 = C50017 * C50438;
    const double C14780 = 3 * (C50352 + C50411 * C50071) +
                          C49847 * (2 * C50449 + C49847 * C50452);
    const double C50514 = C50508 + C50512;
    const double C50533 = C49847 * C50531;
    const double C50970 = C50918 - C50954;
    const double C50971 = C50922 - C50956;
    const double C50972 = C50925 - C50958;
    const double C50973 = C50932 - C50959;
    const double C50974 = C50927 - C50961;
    const double C50975 = C50936 - C50962;
    const double C50976 = C50941 - C50964;
    const double C50965 = C50944 - C50945;
    const double C22873 = C351 * C22721;
    const double C49746 = C50632 - C49744;
    const double C22882 = C352 * C50969;
    const double C22879 = C2482 * C50969;
    const double C22870 = C2481 * C50969;
    const double C23535 = C3164 * C50969;
    const double C23788 = C3437 * C50969;
    const double C23940 = C3607 * C50969;
    const double C24432 = C4117 * C50969;
    const double C106 = (C50911 - C50951) / C49728 - (C50969 * C50628) / C49723;
    const double C22872 = C352 * C50953;
    const double C107 =
        (2 * C50637 + C50969) / C49728 - (C50953 * C50628) / C49723;
    const double C108 = C50953 / C49728 - C50640 / C49732;
    const double C49807 = C50822 - C49804;
    const double C15425 = C15399 + C15400;
    const double C15419 = C15387 + C15388;
    const double C15416 = C15381 + C15382;
    const double C15610 = C15593 + C15594;
    const double C15607 = C15587 + C15588;
    const double C15792 = C15775 + C15776;
    const double C15789 = C15769 + C15770;
    const double C16332 = C16321 + C16322;
    const double C18379 = C18365 + C18366;
    const double C18376 = C18359 + C18360;
    const double C18373 = C18353 + C18354;
    const double C18370 = C18347 + C18348;
    const double C19029 = C19021 + C19022;
    const double C19026 = C19015 + C19016;
    const double C19288 = C19277 + C19278;
    const double C19455 = C19447 + C19448;
    const double C19452 = C19441 + C19442;
    const double C19956 = C19945 + C19946;
    const double C15417 = C15383 + C15384;
    const double C15606 = C15585 + C15586;
    const double C15788 = C15767 + C15768;
    const double C18378 = C18363 + C18364;
    const double C18374 = C18355 + C18356;
    const double C18371 = C18349 + C18350;
    const double C19028 = C19019 + C19020;
    const double C19025 = C19013 + C19014;
    const double C31679 = C31652 + C31653;
    const double C31677 = C31648 + C31649;
    const double C31675 = C31644 + C31645;
    const double C31881 = C31858 + C31859;
    const double C31878 = C31852 + C31853;
    const double C32075 = C32052 + C32053;
    const double C32072 = C32046 + C32047;
    const double C32613 = C32598 + C32599;
    const double C34734 = C34712 + C34713;
    const double C34732 = C34708 + C34709;
    const double C34731 = C34702 + C34703;
    const double C34729 = C34698 + C34699;
    const double C35616 = C35600 + C35601;
    const double C35614 = C35596 + C35597;
    const double C35955 = C35948 + C35949;
    const double C36163 = C36158 + C36159;
    const double C36161 = C36154 + C36155;
    const double C36819 = C36812 + C36813;
    const double C38108 = C38088 * C466;
    const double C38100 = C38088 * C481;
    const double C38094 = C38088 * C465;
    const double C38296 = C38088 * C1217;
    const double C38478 = C38088 * C1848;
    const double C38472 = C38088 * C1854;
    const double C38822 = C38088 * C1847;
    const double C39034 = C38088 * C4510;
    const double C47236 = C38088 * C3587;
    const double C47230 = C38088 * C3592;
    const double C47228 = C38088 * C1225;
    const double C47222 = C38088 * C1218;
    const double C47892 = C38088 * C4511;
    const double C47886 = C38088 * C4516;
    const double C48322 = C38088 * C14784;
    const double C48826 = C38088 * C10140;
    const double C48820 = C38088 * C10137;
    const double C38121 = C50977 * C146;
    const double C38115 = C50977 * C135;
    const double C38113 = C50977 * C133;
    const double C38107 = C50977 * C145;
    const double C38097 = C50977 * C144;
    const double C38091 = C50977 * C131;
    const double C38309 = C50977 * C318;
    const double C38303 = C50977 * C303;
    const double C38301 = C50977 * C298;
    const double C38295 = C50977 * C315;
    const double C38491 = C50977 * C495;
    const double C38485 = C50977 * C480;
    const double C38483 = C50977 * C475;
    const double C38477 = C50977 * C492;
    const double C38661 = C50977 * C314;
    const double C38655 = C50977 * C296;
    const double C38825 = C50977 * C491;
    const double C38819 = C50977 * C473;
    const double C39037 = C50977 * C905;
    const double C39031 = C50977 * C896;
    const double C47241 = C50977 * C301;
    const double C47235 = C50977 * C317;
    const double C47225 = C50977 * C316;
    const double C47219 = C50977 * C300;
    const double C47897 = C50977 * C894;
    const double C47891 = C50977 * C904;
    const double C48155 = C50977 * C1116;
    const double C48149 = C50977 * C1112;
    const double C48319 = C50977 * C1230;
    const double C48313 = C50977 * C1226;
    const double C48823 = C50977 * C1577;
    const double C48817 = C50977 * C1573;
    const double C20906 =
        (C50940 - C50966) / C49728 - (C50977 * C50830) / C49723;
    const double C5158 = C5146 + C5147;
    const double C12784 = C12771 + C12772;
    const double C12783 = C12769 + C12770;
    const double C38117 = C50968 * C471;
    const double C38111 = C50968 * C473;
    const double C38105 = C50968 * C491;
    const double C38099 = C50968 * C492;
    const double C38093 = C50968 * C475;
    const double C38311 = C50968 * C1576;
    const double C38305 = C50968 * C1571;
    const double C38299 = C50968 * C896;
    const double C38293 = C50968 * C905;
    const double C38493 = C50968 * C1860;
    const double C38487 = C50968 * C1855;
    const double C38481 = C50968 * C480;
    const double C38475 = C50968 * C495;
    const double C38657 = C50968 * C898;
    const double C38821 = C50968 * C482;
    const double C39033 = C50968 * C1224;
    const double C47239 = C50968 * C1573;
    const double C47233 = C50968 * C1577;
    const double C47227 = C50968 * C904;
    const double C47221 = C50968 * C894;
    const double C47895 = C50968 * C1226;
    const double C47889 = C50968 * C1230;
    const double C48157 = C50968 * C4106;
    const double C48151 = C50968 * C4103;
    const double C48321 = C50968 * C4520;
    const double C48315 = C50968 * C4517;
    const double C48825 = C50968 * C3596;
    const double C48819 = C50968 * C3593;
    const double C20907 =
        (2 * C50834 + C50977) / C49728 - (C50968 * C50830) / C49723;
    const double C20908 = C50968 / C49728 - C50837 / C49732;
    const double C15409 = C15375 * C136;
    const double C15403 = C15375 * C125;
    const double C15401 = C15375 * C124;
    const double C15395 = C15375 * C134;
    const double C15385 = C15375 * C132;
    const double C15379 = C15375 * C123;
    const double C15597 = C15375 * C304;
    const double C15591 = C15375 * C288;
    const double C15589 = C15375 * C285;
    const double C15583 = C15375 * C297;
    const double C15779 = C15375 * C481;
    const double C15773 = C15375 * C465;
    const double C15771 = C15375 * C462;
    const double C15765 = C15375 * C474;
    const double C15949 = C15375 * C295;
    const double C15943 = C15375 * C284;
    const double C16113 = C15375 * C472;
    const double C16107 = C15375 * C461;
    const double C16325 = C15375 * C897;
    const double C16319 = C15375 * C890;
    const double C18367 = C15375 * C287;
    const double C18361 = C15375 * C302;
    const double C18351 = C15375 * C299;
    const double C18345 = C15375 * C286;
    const double C19023 = C15375 * C889;
    const double C19017 = C15375 * C895;
    const double C19281 = C15375 * C1111;
    const double C19275 = C15375 * C1104;
    const double C19445 = C15375 * C1225;
    const double C19439 = C15375 * C1218;
    const double C19949 = C15375 * C1572;
    const double C19943 = C15375 * C1565;
    const double C176 = C161 + C162;
    const double C5151 = C5128 + C5129;
    const double C8109 = C354 * C49742;
    const double C10811 = C354 * C10701;
    const double C25570 = C354 * C25416;
    const double C8790 = C922 * C49742;
    const double C11257 = C922 * C10701;
    const double C26239 = C922 * C25416;
    const double C28351 = C5346 + C5347;
    const double C28348 = C5347 + C5346;
    const double C11543 = C3606 * C10701;
    const double C10817 = C10803 + C10804;
    const double C178 = C165 + C166;
    const double C5154 = C5134 + C5135;
    const double C349 = C326 + C327;
    const double C5706 = C5698 + C5699;
    const double C356 = C340 + C341;
    const double C5352 = C5332 + C5333;
    const double C526 = C503 + C504;
    const double C5152 = C5130 + C5131;
    const double C5866 = C5858 + C5859;
    const double C15428 = C15405 + C15406;
    const double C31684 = C31662 + C31663;
    const double C533 = C517 + C518;
    const double C5546 = C5526 + C5527;
    const double C5536 = C5506 + C5507;
    const double C15424 = C15397 + C15398;
    const double C16120 = C16109 + C16110;
    const double C32068 = C32038 + C32039;
    const double C924 = C914 + C915;
    const double C5342 = C5312 + C5313;
    const double C6084 = C6072 + C6073;
    const double C15956 = C15945 + C15946;
    const double C31874 = C31844 + C31845;
    const double C148 =
        (4 * (2 * C49880 + ae * C49881 + C49848 * C49900) +
         ae * (3 * C49881 + C49848 * C49901) +
         C49848 * (3 * C49900 + ae * C49901 +
                   C49848 * (2 * C49896 + ae * C49897 +
                             C49848 * (C49892 + ae * C49848 * C49893 +
                                       C49848 * (ae * C49893 +
                                                 C49848 * std::pow(C49852, 7) *
                                                     bs[7] * C49858))))) /
        C49727;
    const double C313 =
        ((yP - yQ) * (2 * C49880 + ae * C49881 + C49848 * C49900)) / C49727;
    const double C319 = (C49866 + ae * C49869 + C49848 * C49880 +
                         C49900 * std::pow(yP - yQ, 2)) /
                        C49727;
    const double C490 =
        (ae * (2 * (C49848 * C49945 + C49942 * ae) +
               C49848 *
                   (C49945 +
                    C49848 * (C49848 * C49871 * C49872 * C49941 + C49943 * ae) +
                    C49848 * C49943 * ae) +
               (C49942 + C49943 * C49873) * ae) +
         C49847 * (2 * C49880 + ae * C49881 + C49848 * C49900)) /
        C49727;
    const double C8112 = C2484 * C49742;
    const double C10813 = C2484 * C10701;
    const double C25573 = C2484 * C25416;
    const double C8786 = C3166 * C49742;
    const double C11259 = C3166 * C10701;
    const double C26235 = C3166 * C25416;
    const double C12764 = C5349 + C5348;
    const double C28352 = C5348 + C5349;
    const double C50498 = C50496 + C50491;
    const double C350 = C328 + C329;
    const double C5341 = C5310 + C5311;
    const double C355 = C338 + C339;
    const double C5350 = C5328 + C5329;
    const double C527 = C505 + C506;
    const double C5149 = C5124 + C5125;
    const double C5535 = C5504 + C5505;
    const double C15422 = C15393 + C15394;
    const double C31681 = C31656 + C31657;
    const double C532 = C515 + C516;
    const double C5544 = C5522 + C5523;
    const double C5538 = C5510 + C5511;
    const double C15420 = C15389 + C15390;
    const double C15786 = C15763 + C15764;
    const double C32070 = C32042 + C32043;
    const double C923 = C912 + C913;
    const double C5344 = C5316 + C5317;
    const double C6082 = C6068 + C6069;
    const double C15604 = C15581 + C15582;
    const double C31876 = C31848 + C31849;
    const double C10818 = C10805 + C10806;
    const double C11432 = C10806 + C10805;
    const double C11886 = C11253 + C11254;
    const double C49966 = C49965 + C49961;
    const double C2641 = C50822 * C1229;
    const double C6071 = C50834 * C1229;
    const double C15580 = C15374 * C1229;
    const double C16328 = C15373 * C1229;
    const double C28553 = C50940 * C1229;
    const double C32603 = C50834 * C1229;
    const double C34939 = C31637 * C1229;
    const double C38291 = C38085 * C1229;
    const double C39039 = C50968 * C1229;
    const double C2640 = C117 * C1223;
    const double C6070 = C5108 * C1223;
    const double C15579 = C15377 * C1223;
    const double C16327 = C15376 * C1223;
    const double C28552 = C5107 * C1223;
    const double C32602 = C31640 * C1223;
    const double C38290 = C38088 * C1223;
    const double C2485 = C2462 + C2463;
    const double C12779 = C12759 + C12760;
    const double C3167 = C3152 + C3153;
    const double C5351 = C5330 + C5331;
    const double C13455 = C13441 + C13442;
    const double C15613 = C15599 + C15600;
    const double C31883 = C31862 + C31863;
    const double C5545 = C5524 + C5525;
    const double C15795 = C15781 + C15782;
    const double C15785 = C15761 + C15762;
    const double C32077 = C32056 + C32057;
    const double C9068 = C9062 + C9063;
    const double C13715 = C13707 + C13708;
    const double C9237 = C9232 + C9233;
    const double C13445 = C13421 + C13422;
    const double C13886 = C13876 + C13877;
    const double C18375 = C18357 + C18358;
    const double C19959 = C19951 + C19952;
    const double C36821 = C36816 + C36817;
    const double C9743 = C9737 + C9738;
    const double C12773 = C12747 + C12748;
    const double C14388 = C14380 + C14381;
    const double C19291 = C19283 + C19284;
    const double C35957 = C35952 + C35953;
    const double C13887 = C13878 + C13879;
    const double C19960 = C19953 + C19954;
    const double C45594 = C45589 + C45590;
    const double C19450 = C15374 * C14787;
    const double C48323 = C38085 * C14787;
    const double C17613 =
        (4 * (2 * C50087 + ae * C50088 + C49847 * C50179) +
         ae * (3 * C50088 + C49847 * C50180) +
         C49847 *
             (3 * C50179 + ae * C50180 +
              C49847 * (2 * C50173 + ae * C50175 +
                        C49847 * (C49892 + ae * C49847 * C49971 +
                                  C49847 * (ae * C49971 + C49847 * C49916))))) /
        C49727;
    const double C7357 =
        (3 * (C49881 + C49847 * C50376 + C50374 * ae) +
         C49847 * (2 * C50376 +
                   C49847 * (C49897 + C49847 * (C49847 * C49921 + C50001) +
                             C49847 * C49999 * ae) +
                   C50377 * ae) +
         (2 * C50374 + C49847 * C50377) * ae) /
        C49723;
    const double C5529 = C50834 * C1853;
    const double C16112 = C15374 * C1853;
    const double C32061 = C50834 * C1853;
    const double C38823 = C38085 * C1853;
    const double C484 =
        (2 * C49869 + C49848 * C49881 +
         C49847 * (C49847 * C49901 + C50239 * ae) + C49847 * C50239 * ae) /
        C49723;
    const double C486 = (C49847 * (3 * C49881 + C49848 * C49901) +
                         (3 * C50233 + C49848 * C50239) * ae) /
                        C49723;
    const double C900 =
        (C49847 * C50017 * C49901 + C50017 * C50239 * ae) / C49723;
    const double C127 = 4 * (2 * C50231 + C49848 * C50233) +
                        C49848 * (3 * C50233 + C49848 * C50239);
    const double C290 = 2 * C50231 + C49848 * C50233 + C50239 * C50035;
    const double C291 = C50017 * (3 * C50233 + C49848 * C50239);
    const double C467 = 2 * C50231 + C49848 * C50233 + C50239 * C50071;
    const double C468 = C49847 * (3 * C50233 + C49848 * C50239);
    const double C892 = C49847 * C50017 * C50239;
    const double C1101 =
        2 * C50017 * C50239 + C50017 * (C50239 + C50004 * C50035);
    const double C1562 = C49847 * (C50239 + C50004 * C50035);
    const double C1846 =
        2 * C49847 * C50239 + C49847 * (C50239 + C50004 * C50071);
    const double C2643 = C50822 * C1222;
    const double C6075 = C50834 * C1222;
    const double C15948 = C15374 * C1222;
    const double C32607 = C50834 * C1222;
    const double C38659 = C38085 * C1222;
    const double C2642 = C117 * C1216;
    const double C6074 = C5108 * C1216;
    const double C15947 = C15377 * C1216;
    const double C32606 = C31640 * C1216;
    const double C38658 = C38088 * C1216;
    const double C2486 = C2464 + C2465;
    const double C3168 = C3154 + C3155;
    const double C5353 = C5334 + C5335;
    const double C31885 = C31866 + C31867;
    const double C50482 = C49883 + C50480;
    const double C8286 = C50822 * C3591;
    const double C13440 = C50834 * C3591;
    const double C15596 = C15374 * C3591;
    const double C35609 = C50834 * C3591;
    const double C38307 = C38085 * C3591;
    const double C8794 = C50822 * C4101;
    const double C12758 = C50834 * C4101;
    const double C34723 = C50834 * C4101;
    const double C8115 = C117 * C3416;
    const double C8285 = C117 * C3586;
    const double C13439 = C5108 * C3586;
    const double C15595 = C15377 * C3586;
    const double C35608 = C31640 * C3586;
    const double C38306 = C38088 * C3586;
    const double C8793 = C117 * C4096;
    const double C12757 = C5108 * C4096;
    const double C34722 = C31640 * C4096;
    const double C16728 =
        (3 * (C50365 + C49847 * C50469 + C50465 * ae) +
         C49847 * (2 * C50469 +
                   C49847 * (C50463 +
                             C49847 * (C49847 * C50017 * C49848 * C49917 +
                                       C50466 * ae) +
                             C49847 * C50466 * ae) +
                   C50470 * ae) +
         (2 * C50465 + C49847 * C50470) * ae) /
        C49723;
    const double C16333 = C16323 + C16324;
    const double C28557 = C28550 + C28551;
    const double C34943 = C34936 + C34937;
    const double C15778 = C15374 * C7359;
    const double C38489 = C38085 * C7359;
    const double C15777 = C15377 * C7354;
    const double C38488 = C38088 * C7354;
    const double C49982 = C49981 + C49976;
    const double C3595 =
        (C49880 + C49896 * C50035 + ae * C49847 * C50051 +
         C49847 * (ae * C50051 + C49847 * (C49896 + C49920 * C50035))) /
        C49727;
    const double C4105 =
        (ae * (2 * C50031 + C50017 * C50051) +
         C49847 * (2 * C50017 * C49896 + C50017 * (C49896 + C49920 * C50035))) /
        C49727;
    const double C3420 = (3 * (C49955 + C49963 * C50035) +
                          C50017 * (2 * C50031 + C50017 * C50051)) /
                         C49723;
    const double C3590 = (C49955 + C49963 * C50035 + C50051 * C50071) / C49723;
    const double C4100 = (C49847 * (2 * C50031 + C50017 * C50051)) / C49723;
    const double C16330 = C15374 * C4519;
    const double C28555 = C50834 * C4519;
    const double C34941 = C50834 * C4519;
    const double C39041 = C38085 * C4519;
    const double C16329 = C15377 * C4514;
    const double C28554 = C5108 * C4514;
    const double C34940 = C31640 * C4514;
    const double C39040 = C38088 * C4514;
    const double C7363 =
        (3 * (C49880 + ae * C50076 + C49847 * C50080) +
         ae * (2 * C50076 + C49847 * C50081) +
         C49847 * (2 * C50080 + ae * C50081 +
                   C49847 * (C49896 + ae * C49847 * C49978 +
                             C49847 * (ae * C49978 + C49847 * C49920)))) /
        C49727;
    const double C7358 = (3 * (C49955 + C49963 * C50071) +
                          C49847 * (2 * C50076 + C49847 * C50081)) /
                         C49723;
    const double C50162 = C49896 + C50158;
    const double C50532 = C50530 + C50525;
    const double C9222 =
        (2 * C50369 + C50017 * C50399 +
         C49847 * (C49847 * (2 * C50017 * C49877 +
                             C50017 * (C49877 + C49893 * C50035)) +
                   C50413 * ae) +
         C49847 * C50413 * ae) /
        C49723;
    const double C9730 =
        (C49847 *
             (3 * C50399 + C50017 * (2 * C50017 * C49877 +
                                     C50017 * (C49877 + C49893 * C50035))) +
         (3 * C50352 + C50017 * C50413) * ae) /
        C49723;
    const double C12158 =
        (2 * (C49847 * C50429 + C50413 * ae) +
         C49847 * (C50429 +
                   C49847 * (C49847 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035)) +
                             C50438 * ae) +
                   C49847 * C50438 * ae) +
         (C50413 + C50438 * C50071) * ae) /
        C49723;
    const double C9051 = 4 * (2 * C50318 + C50017 * C50352) +
                         C50017 * (3 * C50352 + C50017 * C50413);
    const double C9218 = 2 * C50318 + C50017 * C50352 + C50413 * C50071;
    const double C9726 = C49847 * (3 * C50352 + C50017 * C50413);
    const double C12156 =
        2 * C49847 * C50413 + C49847 * (C50413 + C50438 * C50071);
    const double C14783 =
        (3 * (C50399 + C49847 * C50451 + C50449 * ae) +
         C49847 * (2 * C50451 +
                   C49847 * (C50427 +
                             C49847 * (C49847 * (C49893 + C49917 * C50035) +
                                       C50436 * ae) +
                             C49847 * C50436 * ae) +
                   C50452 * ae) +
         (2 * C50449 + C49847 * C50452) * ae) /
        C49723;
    const double C13885 = C13874 + C13875;
    const double C19957 = C19947 + C19948;
    const double C45592 = C45585 + C45586;
    const double C19444 = C15374 * C14785;
    const double C48317 = C38085 * C14785;
    const double C19443 = C15377 * C14781;
    const double C48316 = C38088 * C14781;
    const double C50513 = C50424 + C50511;
    const double C17607 = 4 * (2 * C50388 + C49847 * C50391) +
                          C49847 * (3 * C50391 + C49847 * C50497);
    const double C49927 = C49848 * C49925;
    const double C1106 =
        (2 * C50017 * C49901 + C50017 * (C49901 + C49925 * C50035)) / C49723;
    const double C1567 = (C49847 * (C49901 + C49925 * C50035) +
                          (C50239 + C50004 * C50035) * ae) /
                         C49723;
    const double C49926 = C49848 * C49924;
    const double C50059 = C50017 * C49924;
    const double C50070 = C49847 * C49924;
    const double C1114 = (2 * C50017 * C49900 +
                          C50017 * (C49900 + C49924 * std::pow(C50017, 2))) /
                         C49727;
    const double C3424 =
        (3 * (C49900 + C49924 * C50035) +
         C50017 * (2 * C50017 * C49924 +
                   C50017 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50035))) /
        C49727;
    const double C9056 =
        (4 * (2 * C50062 + C50017 * C50091) +
         C50017 * (3 * C50091 +
                   C50017 * (2 * C50017 * C49920 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49727;
    const double C50151 = C50146 + C50149;
    const double C50163 = C49847 * C50159;
    const double C11429 =
        (5 * (3 * C50094 + C50017 * C50117) +
         C50017 * (4 * C50117 +
                   C50017 * (3 * C50115 +
                             C50017 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49727;
    const double C50195 = C50190 + C50193;
    const double C50215 = C49847 * C50213;
    const double C50007 = C50005 + C49998;
    const double C50099 = C50017 * C50098;
    const double C10142 =
        (2 * (ae * C50051 + C49847 * C50091) + ae * (C50051 + C50098 * C50071) +
         C49847 * (C50091 + ae * C49847 * C50098 +
                   C49847 * (ae * C50098 +
                             C49847 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49727;
    const double C10138 =
        (2 * C49847 * C50051 + C49847 * (C50051 + C50098 * C50071)) / C49723;
    const double C50152 = C50063 + C50150;
    const double C50164 = C49847 * C50161;
    const double C50126 = C50017 * C50125;
    const double C12159 =
        (2 * (ae * C50106 + C49847 * C50117) + ae * (C50106 + C50125 * C50071) +
         C49847 * (C50117 + ae * C49847 * C50125 +
                   C49847 * (ae * C50125 +
                             C49847 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49727;
    const double C12157 =
        (2 * C49847 * C50106 + C49847 * (C50106 + C50125 * C50071)) / C49723;
    const double C14786 =
        (3 * (C50094 + ae * C50131 + C49847 * C50135) +
         ae * (2 * C50131 + C49847 * C50136) +
         C49847 * (2 * C50135 + ae * C50136 +
                   C49847 * (C50115 + ae * C49847 * C50123 +
                             C49847 * (ae * C50123 +
                                       C49847 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49727;
    const double C14782 = (3 * (C50054 + C50104 * C50071) +
                           C49847 * (2 * C50131 + C49847 * C50136)) /
                          C49723;
    const double C50196 = C50188 + C50194;
    const double C50216 = C49847 * C50214;
    const double C9228 = C2646 * C49742;
    const double C26649 = C2646 * C25416;
    const double C29210 = C6080 + C6081;
    const double C29209 = C6081 + C6080;
    const double C10808 = C9067 * C10701;
    const double C11545 = C9236 * C10701;
    const double C14375 = C13447 + C13448;
    const double C11252 = C9742 * C10701;
    const double C13702 = C12775 + C12776;
    const double C168 = C50822 * C139;
    const double C345 = C50822 * C307;
    const double C645 = C50822 * C309;
    const double C11550 = C50822 * C9224;
    const double C14383 = C50834 * C9224;
    const double C19286 = C15374 * C9224;
    const double C46090 = C50834 * C9224;
    const double C48159 = C38085 * C9224;
    const double C11890 = C50822 * C9732;
    const double C13710 = C50834 * C9732;
    const double C45429 = C50834 * C9732;
    const double C11435 = C117 * C9054;
    const double C11549 = C117 * C9221;
    const double C14382 = C5108 * C9221;
    const double C19285 = C15377 * C9221;
    const double C46089 = C31640 * C9221;
    const double C48158 = C38088 * C9221;
    const double C11889 = C117 * C9729;
    const double C13709 = C5108 * C9729;
    const double C45428 = C31640 * C9729;
    const double C1851 =
        (2 * (C49847 * C49901 + C50239 * ae) +
         C49847 * (C49901 + C49847 * (C49847 * C49925 + C50006) +
                   C49847 * C50004 * ae) +
         (C50239 + C50004 * C50071) * ae) /
        C49723;
    const double C50243 = C50241 + C50242;
    const double C1220 =
        (C50017 * C49901 + C49847 * (C49847 * C50017 * C49925 + C50309 * ae) +
         C49847 * C50309 * ae) /
        C49723;
    const double C1215 = C50017 * C50239 + C50309 * C50071;
    const double C9220 =
        (2 * C50365 + C50017 * C50395 +
         C49847 * (C49847 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50035)) +
                   C50406 * ae) +
         C49847 * C50406 * ae) /
        C49723;
    const double C9728 =
        (C49847 * (3 * C50395 +
                   C50017 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50035))) +
         (3 * C50348 + C50017 * C50406) * ae) /
        C49723;
    const double C9050 = 4 * (2 * C50315 + C50017 * C50348) +
                         C50017 * (3 * C50348 + C50017 * C50406);
    const double C9217 = 2 * C50315 + C50017 * C50348 + C50406 * C50071;
    const double C9725 = C49847 * (3 * C50348 + C50017 * C50406);
    const double C17606 = 4 * (2 * C50381 + C49847 * C50384) +
                          C49847 * (3 * C50384 + C49847 * C50483);
    const double C50440 = C50432 + C50439;
    const double C20350 = 4 * (2 * C50457 + C49847 * C50460) +
                          C49847 * (3 * C50460 + C49847 * C50514);
    const double C50535 = C50523 + C50533;
    const double C113 = (C50970 * C50656) / C50653 + (C50920 - C50955) / C50655;
    const double C114 =
        (C50971 * C50656) / C50653 + (2 * C50667 + C50970) / C50655;
    const double C115 = (C50656 * C50667) / C50670 + C50971 / C50655;
    const double C1096 =
        (C50972 * C50727) / C50653 + (C50928 - C50957) / C50655;
    const double C1097 =
        (C50973 * C50727) / C50653 + (2 * C50732 + C50972) / C50655;
    const double C1098 = (C50727 * C50732) / C50670 + C50973 / C50655;
    const double C1842 =
        (C50974 * C50755) / C50653 + (C50929 - C50960) / C50655;
    const double C1843 =
        (C50975 * C50755) / C50653 + (2 * C50760 + C50974) / C50655;
    const double C1844 = (C50755 * C50760) / C50670 + C50975 / C50655;
    const double C10697 =
        (C50939 - C50963) / C49728 - (C50976 * C50806) / C49723;
    const double C10698 =
        (2 * C50810 + C50976) / C49728 - (C50965 * C50806) / C49723;
    const double C10699 = C50965 / C49728 - C50813 / C49732;
    const double C49747 = C49746 * ae;
    const double C2294 =
        ((-C49722 / C49723) / C49728 - (C49735 * be) / C49723) / C49728 -
        ((C49721 * ((-C49724 / C49723) / C49728 - (C49746 * be) / C49723) +
          C25410) *
         be) /
            C49723 +
        (-C49737 / C49723) / C49728 - (0 * be) / C49723;
    const double C2295 =
        ((-C49724 / C49723) / C49728 - (C49746 * be) / C49723) / C49728 -
        ((C49721 * ((-C49737 / C49723) / C49728 - (0 * be) / C49723) + C50637) *
         be) /
            C49723;
    const double C25415 = (-C49724 / C49723) / C49728 - (C49746 * be) / C49723;
    const double C49810 = C49807 * ae;
    const double C31639 = (-C49782 / C49723) / C49728 - (C49807 * be) / C49723;
    const double C38135 = C38108 + C38109;
    const double C38131 = C38100 + C38101;
    const double C38128 = C38094 + C38095;
    const double C38317 = C38296 + C38297;
    const double C38499 = C38478 + C38479;
    const double C38496 = C38472 + C38473;
    const double C39044 = C39034 + C39035;
    const double C47251 = C47236 + C47237;
    const double C47248 = C47230 + C47231;
    const double C47247 = C47228 + C47229;
    const double C47244 = C47222 + C47223;
    const double C47901 = C47892 + C47893;
    const double C47898 = C47886 + C47887;
    const double C48833 = C48826 + C48827;
    const double C48830 = C48820 + C48821;
    const double C12787 = C12784 * C50632;
    const double C12786 = C12783 * C10701;
    const double C15430 = C15409 + C15410;
    const double C15427 = C15403 + C15404;
    const double C15426 = C15401 + C15402;
    const double C15423 = C15395 + C15396;
    const double C15418 = C15385 + C15386;
    const double C15415 = C15379 + C15380;
    const double C15612 = C15597 + C15598;
    const double C15609 = C15591 + C15592;
    const double C15608 = C15589 + C15590;
    const double C15605 = C15583 + C15584;
    const double C15794 = C15779 + C15780;
    const double C15791 = C15773 + C15774;
    const double C15790 = C15771 + C15772;
    const double C15787 = C15765 + C15766;
    const double C15958 = C15949 + C15950;
    const double C15955 = C15943 + C15944;
    const double C16122 = C16113 + C16114;
    const double C16119 = C16107 + C16108;
    const double C16334 = C16325 + C16326;
    const double C16331 = C16319 + C16320;
    const double C18380 = C18367 + C18368;
    const double C18377 = C18361 + C18362;
    const double C18372 = C18351 + C18352;
    const double C18369 = C18345 + C18346;
    const double C19030 = C19023 + C19024;
    const double C19027 = C19017 + C19018;
    const double C19290 = C19281 + C19282;
    const double C19287 = C19275 + C19276;
    const double C19454 = C19445 + C19446;
    const double C19451 = C19439 + C19440;
    const double C19958 = C19949 + C19950;
    const double C19955 = C19943 + C19944;
    const double C2472 = C349 * C2296;
    const double C8439 = C349 * C49742;
    const double C22885 = C349 * C22721;
    const double C25888 = C349 * C25416;
    const double C2453 = C356 * C2296;
    const double C8125 = C356 * C49742;
    const double C11019 = C356 * C10701;
    const double C22876 = C356 * C22721;
    const double C25582 = C356 * C25416;
    const double C5161 = C5152 + C5153;
    const double C5857 = C5536 + C5537;
    const double C3143 = C924 * C2296;
    const double C8799 = C924 * C49742;
    const double C23532 = C924 * C22721;
    const double C26244 = C924 * C25416;
    const double C5697 = C5342 + C5343;
    const double C28754 = C5343 + C5342;
    const double C170 = C50822 * C148;
    const double C325 = C50822 * C313;
    const double C5703 = C50940 * C313;
    const double C32235 = C31637 * C313;
    const double C343 = C50822 * C319;
    const double C5337 = C50940 * C319;
    const double C31869 = C31637 * C319;
    const double C502 = C50822 * C490;
    const double C5127 = C50834 * C490;
    const double C5863 = C50940 * C490;
    const double C15412 = C15373 * C490;
    const double C31659 = C50834 * C490;
    const double C32395 = C31637 * C490;
    const double C38123 = C50968 * C490;
    const double C12782 = C12764 * C10701;
    const double C17611 =
        (4 * (2 * C50390 + C49847 * C50498 + C50391 * ae) +
         C49847 *
             (3 * C50498 +
              C49847 * (2 * C50490 +
                        C49847 * (C49877 + C49847 * (C49847 * C49893 + C49972) +
                                  C49847 * C49970 * ae) +
                        C50492 * ae) +
              C50497 * ae) +
         (3 * C50391 + C49847 * C50497) * ae) /
        C49723;
    const double C2471 = C350 * C2290;
    const double C2451 = C350 * C2291;
    const double C2797 = C350 * C2289;
    const double C8122 = C350 * C50637;
    const double C8438 = C350 * C50911;
    const double C11018 = C350 * C50632;
    const double C22884 = C350 * C50953;
    const double C22874 = C350 * C22716;
    const double C23186 = C350 * C50969;
    const double C25579 = C350 * C50637;
    const double C25887 = C350 * C25410;
    const double C2475 = C355 * C2289;
    const double C2454 = C355 * C2290;
    const double C8124 = C355 * C50911;
    const double C8110 = C355 * C50637;
    const double C10812 = C355 * C50632;
    const double C22888 = C355 * C50969;
    const double C22877 = C355 * C50953;
    const double C25581 = C355 * C25410;
    const double C25571 = C355 * C50637;
    const double C5159 = C5148 + C5149;
    const double C3159 = C923 * C2289;
    const double C3144 = C923 * C2290;
    const double C8798 = C923 * C50911;
    const double C8789 = C923 * C50637;
    const double C11258 = C923 * C50632;
    const double C23538 = C923 * C50969;
    const double C23533 = C923 * C50953;
    const double C26243 = C923 * C25410;
    const double C26238 = C923 * C50637;
    const double C28350 = C5344 + C5345;
    const double C28349 = C5345 + C5344;
    const double C496 =
        (C49866 + ae * C49869 + C49848 * C49880 + ae * C49847 * C49966 +
         C49847 * (ae * C49966 + C49847 * C49900)) /
        C49727;
    const double C906 =
        (ae * C50017 * C49966 + C49847 * C50017 * C49900) / C49727;
    const double C137 = (3 * (C49951 + C49848 * C49955 + C50231 * ae) +
                         C49848 * (2 * C49955 + C49848 * C49966 + C50233 * ae) +
                         (2 * C50231 + C49848 * C50233) * ae) /
                        C49723;
    const double C293 =
        (C50017 * (2 * C49955 + C49848 * C49966 + C50233 * ae)) / C49723;
    const double C306 =
        (C49951 + C49848 * C49955 + C50231 * ae + C49966 * C50035) / C49723;
    const double C470 =
        (C49847 * (2 * C49955 + C49848 * C49966 + C50233 * ae)) / C49723;
    const double C483 =
        (C49951 + C49848 * C49955 + C50231 * ae + C49966 * C50071) / C49723;
    const double C899 = (C49847 * C50017 * C49966) / C49723;
    const double C2647 = C2640 + C2641;
    const double C6083 = C6070 + C6071;
    const double C15603 = C15579 + C15580;
    const double C16335 = C16327 + C16328;
    const double C28558 = C28552 + C28553;
    const double C32615 = C32602 + C32603;
    const double C38314 = C38290 + C38291;
    const double C3433 = C2485 * C2290;
    const double C8128 = C2485 * C50911;
    const double C8111 = C2485 * C50637;
    const double C10814 = C2485 * C50632;
    const double C23790 = C2485 * C50953;
    const double C25585 = C2485 * C25410;
    const double C25572 = C2485 * C50637;
    const double C4113 = C3167 * C2290;
    const double C8802 = C3167 * C50911;
    const double C8785 = C3167 * C50637;
    const double C11260 = C3167 * C50632;
    const double C24434 = C3167 * C50953;
    const double C26247 = C3167 * C25410;
    const double C26234 = C3167 * C50637;
    const double C12763 = C5351 + C5350;
    const double C28353 = C5350 + C5351;
    const double C9071 = C9068 * C50911;
    const double C10807 = C9068 * C50632;
    const double C26496 = C9068 * C25410;
    const double C9239 = C9237 * C50911;
    const double C11546 = C9237 * C50632;
    const double C26652 = C9237 * C25410;
    const double C14374 = C13445 + C13446;
    const double C9746 = C9743 * C50911;
    const double C11251 = C9743 * C50632;
    const double C27143 = C9743 * C25410;
    const double C13701 = C12773 + C12774;
    const double C19456 = C19449 + C19450;
    const double C48329 = C48322 + C48323;
    const double C5547 = C5528 + C5529;
    const double C16121 = C16111 + C16112;
    const double C32079 = C32060 + C32061;
    const double C38832 = C38822 + C38823;
    const double C522 = C50822 * C484;
    const double C5861 = C50834 * C484;
    const double C15408 = C15374 * C484;
    const double C32393 = C50834 * C484;
    const double C38119 = C38085 * C484;
    const double C755 = C50822 * C486;
    const double C5137 = C50834 * C486;
    const double C31669 = C50834 * C486;
    const double C919 = C50822 * C900;
    const double C5701 = C50834 * C900;
    const double C32233 = C50834 * C900;
    const double C167 = C117 * C127;
    const double C344 = C117 * C290;
    const double C644 = C117 * C291;
    const double C521 = C117 * C467;
    const double C5860 = C5108 * C467;
    const double C15407 = C15377 * C467;
    const double C32392 = C31640 * C467;
    const double C38118 = C38088 * C467;
    const double C754 = C117 * C468;
    const double C5136 = C5108 * C468;
    const double C31668 = C31640 * C468;
    const double C918 = C117 * C892;
    const double C5700 = C5108 * C892;
    const double C32232 = C31640 * C892;
    const double C2648 = C2642 + C2643;
    const double C6085 = C6074 + C6075;
    const double C15957 = C15947 + C15948;
    const double C32617 = C32606 + C32607;
    const double C38668 = C38658 + C38659;
    const double C3434 = C2486 * C2296;
    const double C8129 = C2486 * C49742;
    const double C11021 = C2486 * C10701;
    const double C23791 = C2486 * C22721;
    const double C25586 = C2486 * C25416;
    const double C4114 = C3168 * C2296;
    const double C8803 = C3168 * C49742;
    const double C24435 = C3168 * C22721;
    const double C26248 = C3168 * C25416;
    const double C50484 = C50482 + C50477;
    const double C8132 = C8115 + C8116;
    const double C8289 = C8285 + C8286;
    const double C13454 = C13439 + C13440;
    const double C15611 = C15595 + C15596;
    const double C35619 = C35608 + C35609;
    const double C38322 = C38306 + C38307;
    const double C8805 = C8793 + C8794;
    const double C12778 = C12757 + C12758;
    const double C34737 = C34722 + C34723;
    const double C15793 = C15777 + C15778;
    const double C38504 = C38488 + C38489;
    const double C49983 = C49848 * C49982;
    const double C49988 = 3 * C49982;
    const double C50029 = C50017 * C49982;
    const double C50069 = ae * C49982;
    const double C50068 = C49847 * C49982;
    const double C1575 = (ae * (C49966 + C49982 * C50035) +
                          C49847 * (C49900 + C49924 * C50035)) /
                         C49727;
    const double C1859 = (2 * (ae * C49966 + C49847 * C49900) +
                          ae * (C49966 + C49982 * std::pow(C49847, 2)) +
                          C49847 * (C49900 + ae * C49847 * C49982 +
                                    C49847 * (ae * C49982 + C49847 * C49924))) /
                         C49727;
    const double C1107 =
        (2 * C50017 * C49966 + C50017 * (C49966 + C49982 * C50035)) / C49723;
    const double C1568 = (C49847 * (C49966 + C49982 * C50035)) / C49723;
    const double C1852 =
        (2 * C49847 * C49966 + C49847 * (C49966 + C49982 * C50071)) / C49723;
    const double C8288 = C50822 * C3595;
    const double C13444 = C50834 * C3595;
    const double C15602 = C15374 * C3595;
    const double C35613 = C50834 * C3595;
    const double C38313 = C38085 * C3595;
    const double C8796 = C50822 * C4105;
    const double C12762 = C50834 * C4105;
    const double C34727 = C50834 * C4105;
    const double C8117 = C117 * C3420;
    const double C8287 = C117 * C3590;
    const double C13443 = C5108 * C3590;
    const double C15601 = C15377 * C3590;
    const double C35612 = C31640 * C3590;
    const double C38312 = C38088 * C3590;
    const double C8795 = C117 * C4100;
    const double C12761 = C5108 * C4100;
    const double C34726 = C31640 * C4100;
    const double C16336 = C16329 + C16330;
    const double C28559 = C28554 + C28555;
    const double C34945 = C34940 + C34941;
    const double C39047 = C39040 + C39041;
    const double C15784 = C15374 * C7363;
    const double C38495 = C38085 * C7363;
    const double C15783 = C15377 * C7358;
    const double C38494 = C38088 * C7358;
    const double C50534 = C49847 * C50532;
    const double C11548 = C50822 * C9222;
    const double C14379 = C50834 * C9222;
    const double C19280 = C15374 * C9222;
    const double C46086 = C50834 * C9222;
    const double C48153 = C38085 * C9222;
    const double C11888 = C50822 * C9730;
    const double C13706 = C50834 * C9730;
    const double C45425 = C50834 * C9730;
    const double C11433 = C117 * C9051;
    const double C11547 = C117 * C9218;
    const double C14378 = C5108 * C9218;
    const double C19279 = C15377 * C9218;
    const double C46085 = C31640 * C9218;
    const double C48152 = C38088 * C9218;
    const double C11887 = C117 * C9726;
    const double C13705 = C5108 * C9726;
    const double C45424 = C31640 * C9726;
    const double C19453 = C19443 + C19444;
    const double C48326 = C48316 + C48317;
    const double C50515 = C50513 + C50506;
    const double C49929 = C49909 + C49927;
    const double C49928 = C49910 + C49926;
    const double C2467 = C50822 * C1114;
    const double C50165 = C50162 + C50163;
    const double C50217 = C50205 + C50215;
    const double C50008 = C49848 * C50007;
    const double C50047 = C50007 * C50035;
    const double C50060 = C50017 * C50007;
    const double C50073 = C50007 * C50071;
    const double C50100 = C50096 + C50099;
    const double C16729 =
        (3 * (C50062 + ae * C50145 + C49847 * C50151) +
         ae * (2 * C50145 + C49847 * C50152) +
         C49847 * (2 * C50151 + ae * C50152 +
                   C49847 * (C50147 + ae * C49847 * C50148 +
                             C49847 * (ae * C50148 +
                                       C49847 * C50017 *
                                           (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49727;
    const double C16727 = (3 * (C50031 + C50063 * C50071) +
                           C49847 * (2 * C50145 + C49847 * C50152)) /
                          C49723;
    const double C50166 = C50160 + C50164;
    const double C50127 = C50119 + C50126;
    const double C20353 =
        (4 * (2 * C50142 + ae * C50143 + C49847 * C50195) +
         ae * (3 * C50143 + C49847 * C50196) +
         C49847 * (3 * C50195 + ae * C50196 +
                   C49847 * (2 * C50191 + ae * C50192 +
                             C49847 * (C50184 + ae * C49847 * C50185 +
                                       C49847 * (ae * C50185 +
                                                 C49847 * C50017 *
                                                     std::pow(C49850, 8) *
                                                     bs[8] * C49858))))) /
        C49727;
    const double C20351 = (4 * (2 * C50138 + C49847 * C50143) +
                           C49847 * (3 * C50143 + C49847 * C50196)) /
                          C49723;
    const double C50218 = C50203 + C50216;
    const double C14385 = C14375 * C10701;
    const double C13712 = C13702 * C10701;
    const double C11438 = C11435 + C11436;
    const double C11552 = C11549 + C11550;
    const double C14389 = C14382 + C14383;
    const double C19292 = C19285 + C19286;
    const double C46096 = C46089 + C46090;
    const double C48165 = C48158 + C48159;
    const double C11892 = C11889 + C11890;
    const double C13716 = C13709 + C13710;
    const double C45435 = C45428 + C45429;
    const double C128 = 5 * (3 * C50233 + C49848 * C50239) +
                        C49848 * (4 * C50239 + C49848 * C50243);
    const double C292 = 3 * C50233 + C49848 * C50239 + C50243 * C50035;
    const double C469 = 3 * C50233 + C49848 * C50239 + C50243 * C50071;
    const double C639 = C50017 * (4 * C50239 + C49848 * C50243);
    const double C749 = C49847 * (4 * C50239 + C49848 * C50243);
    const double C893 = C49847 * C50017 * C50243;
    const double C11540 =
        (3 * C50399 + C50017 * C50429 +
         C49847 * (C49847 * (3 * C50427 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035))) +
                   C50440 * ae) +
         C49847 * C50440 * ae) /
        C49723;
    const double C11882 =
        (C49847 * (4 * C50429 +
                   C50017 * (3 * C50427 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035)))) +
         (4 * C50413 + C50017 * C50440) * ae) /
        C49723;
    const double C11426 = 5 * (3 * C50352 + C50017 * C50413) +
                          C50017 * (4 * C50413 + C50017 * C50440);
    const double C11538 = 3 * C50352 + C50017 * C50413 + C50440 * C50071;
    const double C11880 = C49847 * (4 * C50413 + C50017 * C50440);
    const double C22286 = 5 * (3 * C50391 + C49847 * C50497) +
                          C49847 * (4 * C50497 + C49847 * C50535);
    const double C49748 = C49747 / C49723;
    const double C2474 = C354 * C2294;
    const double C2468 = C353 * C2294;
    const double C2491 = C2483 * C2294;
    const double C2488 = C2480 * C2294;
    const double C2796 = C351 * C2294;
    const double C3158 = C922 * C2294;
    const double C3171 = C3165 * C2294;
    const double C3438 = C3436 * C2294;
    const double C3608 = C3606 * C2294;
    const double C4118 = C4116 * C2294;
    const double C2476 = C356 * C2295;
    const double C2470 = C351 * C2295;
    const double C2455 = C354 * C2295;
    const double C2448 = C353 * C2295;
    const double C2798 = C349 * C2295;
    const double C3160 = C924 * C2295;
    const double C3145 = C922 * C2295;
    const double C3432 = C2484 * C2295;
    const double C3602 = C2646 * C2295;
    const double C4112 = C3166 * C2295;
    const double C25584 = C2484 * C25415;
    const double C25580 = C354 * C25415;
    const double C25576 = C353 * C25415;
    const double C25575 = C3436 * C25415;
    const double C25568 = C2483 * C25415;
    const double C25564 = C2480 * C25415;
    const double C25890 = C356 * C25415;
    const double C25886 = C351 * C25415;
    const double C26246 = C3166 * C25415;
    const double C26242 = C922 * C25415;
    const double C26241 = C3165 * C25415;
    const double C26237 = C4116 * C25415;
    const double C26495 = C9067 * C25415;
    const double C26651 = C9236 * C25415;
    const double C26647 = C3606 * C25415;
    const double C27142 = C9742 * C25415;
    const double C49812 = C49810 / C49723;
    const double C31666 = C31639 * C126;
    const double C31664 = C31639 * C125;
    const double C31660 = C31639 * C136;
    const double C31654 = C31639 * C134;
    const double C31650 = C31639 * C124;
    const double C31646 = C31639 * C132;
    const double C31642 = C31639 * C123;
    const double C31864 = C31639 * C289;
    const double C31860 = C31639 * C304;
    const double C31856 = C31639 * C288;
    const double C31854 = C31639 * C285;
    const double C31850 = C31639 * C297;
    const double C31846 = C31639 * C284;
    const double C31842 = C31639 * C295;
    const double C32058 = C31639 * C466;
    const double C32054 = C31639 * C481;
    const double C32050 = C31639 * C465;
    const double C32048 = C31639 * C462;
    const double C32044 = C31639 * C474;
    const double C32040 = C31639 * C461;
    const double C32036 = C31639 * C472;
    const double C32230 = C31639 * C283;
    const double C32390 = C31639 * C460;
    const double C32604 = C31639 * C891;
    const double C32600 = C31639 * C897;
    const double C32596 = C31639 * C890;
    const double C34724 = C31639 * C1109;
    const double C34720 = C31639 * C1103;
    const double C34714 = C31639 * C287;
    const double C34710 = C31639 * C302;
    const double C34700 = C31639 * C299;
    const double C34696 = C31639 * C286;
    const double C34938 = C31639 * C1223;
    const double C34934 = C31639 * C1217;
    const double C35610 = C31639 * C1570;
    const double C35606 = C31639 * C1564;
    const double C35602 = C31639 * C889;
    const double C35598 = C31639 * C895;
    const double C35950 = C31639 * C1111;
    const double C35946 = C31639 * C1104;
    const double C36156 = C31639 * C1225;
    const double C36152 = C31639 * C1218;
    const double C36814 = C31639 * C1572;
    const double C36810 = C31639 * C1565;
    const double C45426 = C31639 * C3422;
    const double C45422 = C31639 * C3417;
    const double C45587 = C31639 * C3592;
    const double C45583 = C31639 * C3587;
    const double C46087 = C31639 * C4102;
    const double C46083 = C31639 * C4097;
    const double C12788 = C12786 + C12787;
    const double C10820 = C10812 + C10811;
    const double C520 = C50822 * C496;
    const double C5531 = C50940 * C496;
    const double C5503 = C50834 * C496;
    const double C15392 = C15374 * C496;
    const double C16116 = C15373 * C496;
    const double C32063 = C31637 * C496;
    const double C32035 = C50834 * C496;
    const double C38103 = C38085 * C496;
    const double C38827 = C50968 * C496;
    const double C917 = C50822 * C906;
    const double C5309 = C50834 * C906;
    const double C6077 = C50940 * C906;
    const double C15952 = C15373 * C906;
    const double C31841 = C50834 * C906;
    const double C32609 = C31637 * C906;
    const double C38663 = C50968 * C906;
    const double C163 = C117 * C137;
    const double C5138 = C5107 * C137;
    const double C31670 = C31639 * C137;
    const double C324 = C117 * C293;
    const double C5702 = C5107 * C293;
    const double C32234 = C31639 * C293;
    const double C342 = C117 * C306;
    const double C5336 = C5107 * C306;
    const double C31868 = C31639 * C306;
    const double C501 = C117 * C470;
    const double C5126 = C5108 * C470;
    const double C5862 = C5107 * C470;
    const double C15411 = C15376 * C470;
    const double C31658 = C31640 * C470;
    const double C32394 = C31639 * C470;
    const double C519 = C117 * C483;
    const double C5530 = C5107 * C483;
    const double C5502 = C5108 * C483;
    const double C15391 = C15377 * C483;
    const double C16115 = C15376 * C483;
    const double C32062 = C31639 * C483;
    const double C32034 = C31640 * C483;
    const double C38102 = C38088 * C483;
    const double C916 = C117 * C899;
    const double C5308 = C5108 * C899;
    const double C6076 = C5107 * C899;
    const double C15951 = C15376 * C899;
    const double C31840 = C31640 * C899;
    const double C32608 = C31639 * C899;
    const double C3603 = C2647 * C2290;
    const double C9229 = C2647 * C50637;
    const double C23942 = C2647 * C50953;
    const double C26650 = C2647 * C50637;
    const double C29211 = C6082 + C6083;
    const double C29208 = C6083 + C6082;
    const double C10819 = C10814 + C10813;
    const double C12781 = C12763 * C50632;
    const double C11431 = C10807 + C10808;
    const double C14384 = C14374 * C50632;
    const double C11885 = C11251 + C11252;
    const double C13711 = C13701 * C50632;
    const double C179 = C167 + C168;
    const double C358 = C344 + C345;
    const double C648 = C644 + C645;
    const double C535 = C521 + C522;
    const double C5867 = C5860 + C5861;
    const double C15429 = C15407 + C15408;
    const double C32399 = C32392 + C32393;
    const double C38140 = C38118 + C38119;
    const double C758 = C754 + C755;
    const double C5155 = C5136 + C5137;
    const double C31687 = C31668 + C31669;
    const double C926 = C918 + C919;
    const double C5707 = C5700 + C5701;
    const double C32239 = C32232 + C32233;
    const double C3604 = C2648 * C2296;
    const double C23943 = C2648 * C22721;
    const double C17609 =
        (4 * (2 * C50383 + C49847 * C50484 + C50384 * ae) +
         C49847 *
             (3 * C50484 +
              C49847 * (2 * C50476 +
                        C49847 * (C49905 +
                                  C49847 * (C49847 * C49848 * C49917 + C49998) +
                                  C49847 * C49995 * ae) +
                        C50478 * ae) +
              C50483 * ae) +
         (3 * C50384 + C49847 * C50483) * ae) /
        C49723;
    const double C9064 = C8132 * C49742;
    const double C10815 = C8132 * C10701;
    const double C26497 = C8132 * C25416;
    const double C9234 = C8289 * C49742;
    const double C26653 = C8289 * C25416;
    const double C9739 = C8805 * C49742;
    const double C11261 = C8805 * C10701;
    const double C27144 = C8805 * C25416;
    const double C49984 = C49968 + C49983;
    const double C1228 = (C50017 * C49900 + ae * C49847 * C50029 +
                          C49847 * (ae * C50029 + C49847 * C50017 * C49924)) /
                         C49727;
    const double C1221 = (C50017 * C49966 + C50029 * C50071) / C49723;
    const double C50072 = C50069 + C50070;
    const double C3157 = C50822 * C1575;
    const double C5339 = C50834 * C1575;
    const double C31871 = C50834 * C1575;
    const double C5533 = C50834 * C1859;
    const double C16118 = C15374 * C1859;
    const double C32065 = C50834 * C1859;
    const double C38829 = C38085 * C1859;
    const double C2466 = C117 * C1107;
    const double C3156 = C117 * C1568;
    const double C5338 = C5108 * C1568;
    const double C31870 = C31640 * C1568;
    const double C5532 = C5108 * C1852;
    const double C16117 = C15377 * C1852;
    const double C32064 = C31640 * C1852;
    const double C38828 = C38088 * C1852;
    const double C8133 = C8117 + C8118;
    const double C8290 = C8287 + C8288;
    const double C13456 = C13443 + C13444;
    const double C15614 = C15601 + C15602;
    const double C35621 = C35612 + C35613;
    const double C38325 = C38312 + C38313;
    const double C8806 = C8795 + C8796;
    const double C12780 = C12761 + C12762;
    const double C34739 = C34726 + C34727;
    const double C15796 = C15783 + C15784;
    const double C38507 = C38494 + C38495;
    const double C50536 = C50518 + C50534;
    const double C11437 = C11433 + C11434;
    const double C11551 = C11547 + C11548;
    const double C14387 = C14378 + C14379;
    const double C19289 = C19279 + C19280;
    const double C46094 = C46085 + C46086;
    const double C48162 = C48152 + C48153;
    const double C11891 = C11887 + C11888;
    const double C13714 = C13705 + C13706;
    const double C45433 = C45424 + C45425;
    const double C20352 =
        (4 * (2 * C50459 + C49847 * C50515 + C50460 * ae) +
         C49847 * (3 * C50515 +
                   C49847 * (2 * C50509 +
                             C49847 * (C50501 +
                                       C49847 * (C49847 * C50017 * C49917 +
                                                 C50504 * ae) +
                                       C49847 * C50504 * ae) +
                             C50510 * ae) +
                   C50514 * ae) +
         (3 * C50460 + C49847 * C50514) * ae) /
        C49723;
    const double C142 = (5 * (3 * C49881 + C49848 * C49901) +
                         C49848 * (4 * C49901 + C49848 * C49929)) /
                        C49723;
    const double C312 =
        (3 * C49881 + C49848 * C49901 + C49929 * C50035) / C49723;
    const double C489 =
        (3 * C49881 + C49848 * C49901 +
         C49847 * (C49847 * C49929 + C50243 * ae) + C49847 * C50243 * ae) /
        C49723;
    const double C641 = (C50017 * (4 * C49901 + C49848 * C49929)) / C49723;
    const double C751 = (C49847 * (4 * C49901 + C49848 * C49929) +
                         (4 * C50239 + C49848 * C50243) * ae) /
                        C49723;
    const double C903 =
        (C49847 * C50017 * C49929 + C50017 * C50243 * ae) / C49723;
    const double C149 =
        (5 * (3 * C49900 + ae * C49901 + C49848 * C49928) +
         ae * (4 * C49901 + C49848 * C49929) +
         C49848 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C320 = (2 * C49880 + ae * C49881 + C49848 * C49900 +
                         C49928 * std::pow(yP - yQ, 2)) /
                        C49727;
    const double C321 =
        ((yP - yQ) * (3 * C49900 + ae * C49901 + C49848 * C49928)) / C49727;
    const double C322 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 +
         (3 * C49924 + ae * C49925 +
          C49848 *
              (2 * C49920 + ae * C49921 +
               C49848 * (C49916 + ae * C49848 * C49917 +
                         C49848 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             std::pow(yP - yQ, 2)) /
        C49727;
    const double C642 =
        ((yP - yQ) *
         (4 * C49928 + ae * C49929 +
          C49848 * (3 * C49924 + ae * C49925 +
                    C49848 * (2 * C49920 + ae * C49921 +
                              C49848 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49727;
    const double C1113 =
        (2 * C50017 * C49928 +
         C50017 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                std::pow(C50017, 2))) /
        C49727;
    const double C50009 = C49989 + C50008;
    const double C50048 = C49982 + C50047;
    const double C4518 =
        (2 * (ae * C50029 + C49847 * C50059) +
         ae * (C50029 + C50060 * std::pow(C49847, 2)) +
         C49847 * (C50059 + ae * C49847 * C50060 +
                   C49847 * (ae * C50060 +
                             C49847 * C50017 *
                                 (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49727;
    const double C4512 =
        (2 * C49847 * C50029 + C49847 * (C50029 + C50060 * C50071)) / C49723;
    const double C50074 = C49982 + C50073;
    const double C9223 =
        (2 * C50062 + C50017 * C50091 + ae * C49847 * C50100 +
         C49847 * (ae * C50100 +
                   C49847 * (2 * C50017 * C49920 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49727;
    const double C9731 =
        (ae * (3 * C50051 + C50017 * C50100) +
         C49847 * (3 * C50091 +
                   C50017 * (2 * C50017 * C49920 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49727;
    const double C9052 = (4 * (2 * C50031 + C50017 * C50051) +
                          C50017 * (3 * C50051 + C50017 * C50100)) /
                         C49723;
    const double C9219 =
        (2 * C50031 + C50017 * C50051 + C50100 * C50071) / C49723;
    const double C9727 = (C49847 * (3 * C50051 + C50017 * C50100)) / C49723;
    const double C17612 =
        (4 * (2 * C50080 + ae * C50081 + C49847 * C50165) +
         ae * (3 * C50081 + C49847 * C50166) +
         C49847 *
             (3 * C50165 + ae * C50166 +
              C49847 *
                  (2 * C50159 + ae * C50161 +
                   C49847 * (C49920 + ae * C49847 * C50000 +
                             C49847 * (ae * C50000 +
                                       C49847 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C17608 = (4 * (2 * C50076 + C49847 * C50081) +
                           C49847 * (3 * C50081 + C49847 * C50166)) /
                          C49723;
    const double C11541 =
        (3 * C50094 + C50017 * C50117 + ae * C49847 * C50127 +
         C49847 * (ae * C50127 +
                   C49847 * (3 * C50115 +
                             C50017 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49727;
    const double C11883 =
        (ae * (4 * C50106 + C50017 * C50127) +
         C49847 * (4 * C50117 +
                   C50017 * (3 * C50115 +
                             C50017 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49727;
    const double C11427 = (5 * (3 * C50054 + C50017 * C50106) +
                           C50017 * (4 * C50106 + C50017 * C50127)) /
                          C49723;
    const double C11539 =
        (3 * C50054 + C50017 * C50106 + C50127 * C50071) / C49723;
    const double C11881 = (C49847 * (4 * C50106 + C50017 * C50127)) / C49723;
    const double C22289 =
        (5 * (3 * C50179 + ae * C50180 + C49847 * C50217) +
         ae * (4 * C50180 + C49847 * C50218) +
         C49847 *
             (4 * C50217 + ae * C50218 +
              C49847 *
                  (3 * C50213 + ae * C50214 +
                   C49847 * (2 * C50207 + ae * C50209 +
                             C49847 * (C49916 + ae * C49847 * C49993 +
                                       C49847 * (ae * C49993 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C22287 = (5 * (3 * C50088 + C49847 * C50180) +
                           C49847 * (4 * C50180 + C49847 * C50218)) /
                          C49723;
    const double C11440 = C11438 * C50632;
    const double C11554 = C11552 * C50632;
    const double C11894 = C11892 * C50632;
    const double C49749 = C49748 - C49738;
    const double C25589 = C25581 + C25580;
    const double C26494 = C25574 + C25575;
    const double C25588 = C25568 + C25569;
    const double C27141 = C26236 + C26237;
    const double C49814 = C49812 - C49799;
    const double C31686 = C31666 + C31667;
    const double C31685 = C31664 + C31665;
    const double C31683 = C31660 + C31661;
    const double C31680 = C31654 + C31655;
    const double C31678 = C31650 + C31651;
    const double C31676 = C31646 + C31647;
    const double C31674 = C31642 + C31643;
    const double C31884 = C31864 + C31865;
    const double C31882 = C31860 + C31861;
    const double C31880 = C31856 + C31857;
    const double C31879 = C31854 + C31855;
    const double C31877 = C31850 + C31851;
    const double C31875 = C31846 + C31847;
    const double C31873 = C31842 + C31843;
    const double C32078 = C32058 + C32059;
    const double C32076 = C32054 + C32055;
    const double C32074 = C32050 + C32051;
    const double C32073 = C32048 + C32049;
    const double C32071 = C32044 + C32045;
    const double C32069 = C32040 + C32041;
    const double C32067 = C32036 + C32037;
    const double C32238 = C32230 + C32231;
    const double C32398 = C32390 + C32391;
    const double C32616 = C32604 + C32605;
    const double C32614 = C32600 + C32601;
    const double C32612 = C32596 + C32597;
    const double C34738 = C34724 + C34725;
    const double C34736 = C34720 + C34721;
    const double C34735 = C34714 + C34715;
    const double C34733 = C34710 + C34711;
    const double C34730 = C34700 + C34701;
    const double C34728 = C34696 + C34697;
    const double C34944 = C34938 + C34939;
    const double C34942 = C34934 + C34935;
    const double C35620 = C35610 + C35611;
    const double C35618 = C35606 + C35607;
    const double C35617 = C35602 + C35603;
    const double C35615 = C35598 + C35599;
    const double C35956 = C35950 + C35951;
    const double C35954 = C35946 + C35947;
    const double C36162 = C36156 + C36157;
    const double C36160 = C36152 + C36153;
    const double C36820 = C36814 + C36815;
    const double C36818 = C36810 + C36811;
    const double C45434 = C45426 + C45427;
    const double C45432 = C45422 + C45423;
    const double C45593 = C45587 + C45588;
    const double C45591 = C45583 + C45584;
    const double C46095 = C46087 + C46088;
    const double C46093 = C46083 + C46084;
    const double C177 = C163 + C164;
    const double C5156 = C5138 + C5139;
    const double C31688 = C31670 + C31671;
    const double C348 = C324 + C325;
    const double C5708 = C5702 + C5703;
    const double C32240 = C32234 + C32235;
    const double C357 = C342 + C343;
    const double C5354 = C5336 + C5337;
    const double C31886 = C31868 + C31869;
    const double C525 = C501 + C502;
    const double C5150 = C5126 + C5127;
    const double C5868 = C5862 + C5863;
    const double C15431 = C15411 + C15412;
    const double C31682 = C31658 + C31659;
    const double C32400 = C32394 + C32395;
    const double C534 = C519 + C520;
    const double C5548 = C5530 + C5531;
    const double C5534 = C5502 + C5503;
    const double C15421 = C15391 + C15392;
    const double C16123 = C16115 + C16116;
    const double C32080 = C32062 + C32063;
    const double C32066 = C32034 + C32035;
    const double C38132 = C38102 + C38103;
    const double C925 = C916 + C917;
    const double C5340 = C5308 + C5309;
    const double C6086 = C6076 + C6077;
    const double C15959 = C15951 + C15952;
    const double C31872 = C31840 + C31841;
    const double C32618 = C32608 + C32609;
    const double C12785 = C12781 + C12782;
    const double C14390 = C14384 + C14385;
    const double C13717 = C13711 + C13712;
    const double C2478 = C358 * C2296;
    const double C8443 = C358 * C49742;
    const double C22891 = C358 * C22721;
    const double C25892 = C358 * C25416;
    const double C2800 = C648 * C2296;
    const double C23189 = C648 * C22721;
    const double C3162 = C926 * C2296;
    const double C23541 = C926 * C22721;
    const double C49985 = C49984 + C49979;
    const double C2645 = C50822 * C1228;
    const double C6079 = C50834 * C1228;
    const double C15954 = C15374 * C1228;
    const double C32611 = C50834 * C1228;
    const double C38665 = C38085 * C1228;
    const double C2644 = C117 * C1221;
    const double C6078 = C5108 * C1221;
    const double C15953 = C15377 * C1221;
    const double C32610 = C31640 * C1221;
    const double C38664 = C38088 * C1221;
    const double C2487 = C2466 + C2467;
    const double C3169 = C3156 + C3157;
    const double C5355 = C5338 + C5339;
    const double C31887 = C31870 + C31871;
    const double C5549 = C5532 + C5533;
    const double C16124 = C16117 + C16118;
    const double C32081 = C32064 + C32065;
    const double C38835 = C38828 + C38829;
    const double C9065 = C8133 * C50637;
    const double C10816 = C8133 * C50632;
    const double C26498 = C8133 * C50637;
    const double C9235 = C8290 * C50637;
    const double C26654 = C8290 * C50637;
    const double C9740 = C8806 * C50637;
    const double C11262 = C8806 * C50632;
    const double C27145 = C8806 * C50637;
    const double C50537 = C50536 + C50521;
    const double C11439 = C11437 * C10701;
    const double C11553 = C11551 * C10701;
    const double C11893 = C11891 * C10701;
    const double C347 = C50822 * C320;
    const double C647 = C50822 * C321;
    const double C50010 = C50009 + C50001;
    const double C3594 =
        (C49900 + C49924 * C50035 + ae * C49847 * C50048 +
         C49847 * (ae * C50048 +
                   C49847 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50035))) /
        C49727;
    const double C4104 =
        (ae * (2 * C50029 + C50017 * C50048) +
         C49847 * (2 * C50017 * C49924 +
                   C50017 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50035))) /
        C49727;
    const double C3418 = (3 * (C49966 + C49982 * C50035) +
                          C50017 * (2 * C50029 + C50017 * C50048)) /
                         C49723;
    const double C3588 = (C49966 + C49982 * C50035 + C50048 * C50071) / C49723;
    const double C4098 = (C49847 * (2 * C50029 + C50017 * C50048)) / C49723;
    const double C7362 =
        (3 * (C49900 + ae * C50068 + C49847 * C50072) +
         ae * (2 * C50068 + C49847 * C50074) +
         C49847 *
             (2 * C50072 + ae * C50074 +
              C49847 *
                  (C49924 + ae * C49847 * C50007 +
                   C49847 * (ae * C50007 +
                             C49847 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C7356 = (3 * (C49966 + C49982 * C50071) +
                          C49847 * (2 * C50068 + C49847 * C50074)) /
                         C49723;
    const double C8127 = C2484 * C49749;
    const double C8123 = C354 * C49749;
    const double C8119 = C353 * C49749;
    const double C8114 = C3436 * C49749;
    const double C8107 = C2483 * C49749;
    const double C8103 = C2480 * C49749;
    const double C8441 = C356 * C49749;
    const double C8437 = C351 * C49749;
    const double C8801 = C3166 * C49749;
    const double C8797 = C922 * C49749;
    const double C8792 = C3165 * C49749;
    const double C8788 = C4116 * C49749;
    const double C9070 = C9067 * C49749;
    const double C9226 = C3606 * C49749;
    const double C9238 = C9236 * C49749;
    const double C9745 = C9742 * C49749;
    const double C118 =
        ((((0 - (C49721 * C49722) / C49723) * ae) / C49723 - (0 * be) / C49732 +
          C49724 / C49723) /
             C49728 -
         ((C49721 * C49745 + 0) * be) / C49723) /
            C49728 -
        ((C49721 * (C49745 / C49728 -
                    ((C49721 * C49749 + C50911) * be) / C49723 + C49742) +
          C50969) *
         be) /
            C49723 +
        C49749 / C49728 - ((C49721 * C49742 + C50637) * be) / C49723;
    const double C119 =
        (C49745 / C49728 - ((C49721 * C49749 + C50911) * be) / C49723 +
         C49742) /
            C49728 -
        ((C49721 *
              (C49749 / C49728 - ((C49721 * C49742 + C50637) * be) / C49723) +
          C50953) *
         be) /
            C49723 +
        2 * (C49742 / C49728 - (0 * be) / C49723);
    const double C120 =
        (C49749 / C49728 - ((C49721 * C49742 + C50637) * be) / C49723) /
            C49728 -
        ((C49721 * (C49742 / C49728 - (0 * be) / C49723) + C22716) * be) /
            C49723;
    const double C22719 =
        C49745 / C49728 - ((C49721 * C49749 + C50911) * be) / C49723 + C49742;
    const double C22720 =
        C49749 / C49728 - ((C49721 * C49742 + C50637) * be) / C49723;
    const double C25591 = C25582 + C25589;
    const double C26499 = C25573 + C26494;
    const double C25590 = C25588 + C25570;
    const double C27146 = C26235 + C27141;
    const double C20910 =
        ((((0 - (C49768 * C49796) / C49723) * ae) / C49723 - (0 * be) / C49732 +
          C49782 / C49723) /
             C49728 -
         ((C49768 * C49813 + 0) * be) / C49723) /
            C49728 -
        ((C49768 * (C49813 / C49728 -
                    ((C49768 * C49814 + C50940) * be) / C49723 + C49808) +
          C50977) *
         be) /
            C49723 +
        C49814 / C49728 - ((C49768 * C49808 + C50834) * be) / C49723;
    const double C20911 =
        (C49813 / C49728 - ((C49768 * C49814 + C50940) * be) / C49723 +
         C49808) /
            C49728 -
        ((C49768 *
              (C49814 / C49728 - ((C49768 * C49808 + C50834) * be) / C49723) +
          C50968) *
         be) /
            C49723 +
        2 * (C49808 / C49728 - (0 * be) / C49723);
    const double C20912 =
        (C49814 / C49728 - ((C49768 * C49808 + C50834) * be) / C49723) /
            C49728 -
        ((C49768 * (C49808 / C49728 - (0 * be) / C49723) + C38085) * be) /
            C49723;
    const double C38086 =
        C49813 / C49728 - ((C49768 * C49814 + C50940) * be) / C49723 + C49808;
    const double C38087 =
        C49814 / C49728 - ((C49768 * C49808 + C50834) * be) / C49723;
    const double C31693 = C31684 + C31685;
    const double C31691 = C31680 + C31681;
    const double C31690 = C31678 + C31679;
    const double C34719 = C31882 + C31883;
    const double C34706 = C31883 + C31882;
    const double C34718 = C31880 + C31881;
    const double C34707 = C31881 + C31880;
    const double C34717 = C31878 + C31879;
    const double C34704 = C31879 + C31878;
    const double C34716 = C31876 + C31877;
    const double C34705 = C31877 + C31876;
    const double C32229 = C31874 + C31875;
    const double C35140 = C31875 + C31874;
    const double C32389 = C32068 + C32069;
    const double C35605 = C32614 + C32615;
    const double C35594 = C32615 + C32614;
    const double C35604 = C32612 + C32613;
    const double C35595 = C32613 + C32612;
    const double C44536 = C34735 + C34734;
    const double C44537 = C34733 + C34732;
    const double C45420 = C35957 + C35956;
    const double C45421 = C35955 + C35954;
    const double C46081 = C36821 + C36820;
    const double C46082 = C36819 + C36818;
    const double C2473 = C348 * C2291;
    const double C2799 = C348 * C2290;
    const double C8440 = C348 * C50637;
    const double C22886 = C348 * C22716;
    const double C23188 = C348 * C50953;
    const double C25889 = C348 * C50637;
    const double C2477 = C357 * C2290;
    const double C2452 = C357 * C2291;
    const double C8126 = C357 * C50637;
    const double C8442 = C357 * C50911;
    const double C11020 = C357 * C50632;
    const double C22890 = C357 * C50953;
    const double C22875 = C357 * C22716;
    const double C25583 = C357 * C50637;
    const double C25891 = C357 * C25410;
    const double C5160 = C5150 + C5151;
    const double C31692 = C31682 + C31683;
    const double C5856 = C5534 + C5535;
    const double C32388 = C32066 + C32067;
    const double C3161 = C925 * C2290;
    const double C3142 = C925 * C2291;
    const double C8800 = C925 * C50637;
    const double C23540 = C925 * C50953;
    const double C23531 = C925 * C22716;
    const double C26245 = C925 * C50637;
    const double C5696 = C5340 + C5341;
    const double C28755 = C5341 + C5340;
    const double C32228 = C31872 + C31873;
    const double C35141 = C31873 + C31872;
    const double C497 =
        (2 * C49880 + ae * C49881 + C49848 * C49900 + ae * C49847 * C49985 +
         C49847 * (ae * C49985 + C49847 * C49928)) /
        C49727;
    const double C498 =
        (ae * (3 * C49966 + C49848 * C49985 +
               (2 * C49959 + C49848 * C49977) * ae) +
         C49847 * (3 * C49900 + ae * C49901 + C49848 * C49928)) /
        C49727;
    const double C907 =
        (ae * C50017 * C49985 + C49847 * C50017 * C49928) / C49727;
    const double C140 = (4 * (2 * C49955 + C49848 * C49966 + C50233 * ae) +
                         C49848 * (3 * C49966 + C49848 * C49985 + C50239 * ae) +
                         (3 * C50233 + C49848 * C50239) * ae) /
                        C49723;
    const double C308 =
        (2 * C49955 + C49848 * C49966 + C50233 * ae + C49985 * C50035) / C49723;
    const double C310 =
        (C50017 * (3 * C49966 + C49848 * C49985 + C50239 * ae)) / C49723;
    const double C485 =
        (2 * C49955 + C49848 * C49966 + C50233 * ae + C49985 * C50071) / C49723;
    const double C487 =
        (C49847 * (3 * C49966 + C49848 * C49985 + C50239 * ae)) / C49723;
    const double C901 = (C49847 * C50017 * C49985) / C49723;
    const double C2649 = C2644 + C2645;
    const double C6087 = C6078 + C6079;
    const double C15960 = C15953 + C15954;
    const double C32619 = C32610 + C32611;
    const double C38671 = C38664 + C38665;
    const double C3435 = C2487 * C2291;
    const double C8130 = C2487 * C50637;
    const double C11022 = C2487 * C50632;
    const double C23792 = C2487 * C22716;
    const double C25587 = C2487 * C50637;
    const double C4115 = C3169 * C2291;
    const double C8804 = C3169 * C50637;
    const double C24436 = C3169 * C22716;
    const double C26249 = C3169 * C50637;
    const double C22288 =
        (5 * (3 * C50498 + C49847 * C50537 + C50497 * ae) +
         C49847 *
             (4 * C50537 +
              C49847 *
                  (3 * C50532 +
                   C49847 *
                       (2 * C50524 +
                        C49847 * (C49893 + C49847 * (C49847 * C49917 + C49994) +
                                  C49847 * C49991 * ae) +
                        C50526 * ae) +
                   C50531 * ae) +
              C50535 * ae) +
         (4 * C50497 + C49847 * C50535) * ae) /
        C49723;
    const double C50011 = C49848 * C50010;
    const double C50027 = C50017 * C50010;
    const double C1574 =
        (ae * (C49985 + C50010 * C50035) +
         C49847 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                C50035)) /
        C49727;
    const double C1858 =
        (2 * (ae * C49985 + C49847 * C49928) +
         ae * (C49985 + C50010 * std::pow(C49847, 2)) +
         C49847 *
             (C49928 + ae * C49847 * C50010 +
              C49847 *
                  (ae * C50010 +
                   C49847 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C1105 =
        (2 * C50017 * C49985 + C50017 * (C49985 + C50010 * C50035)) / C49723;
    const double C1566 = (C49847 * (C49985 + C50010 * C50035)) / C49723;
    const double C1850 =
        (2 * C49847 * C49985 + C49847 * (C49985 + C50010 * C50071)) / C49723;
    const double C8134 = C8124 + C8123;
    const double C9059 = C8113 + C8114;
    const double C8131 = C8107 + C8108;
    const double C9734 = C8787 + C8788;
    const double C22887 = C354 * C22719;
    const double C22881 = C353 * C22719;
    const double C22880 = C2483 * C22719;
    const double C22869 = C2480 * C22719;
    const double C23185 = C351 * C22719;
    const double C23537 = C922 * C22719;
    const double C23536 = C3165 * C22719;
    const double C23787 = C3436 * C22719;
    const double C23939 = C3606 * C22719;
    const double C24431 = C4116 * C22719;
    const double C22889 = C356 * C22720;
    const double C22883 = C351 * C22720;
    const double C22878 = C354 * C22720;
    const double C22871 = C353 * C22720;
    const double C23187 = C349 * C22720;
    const double C23539 = C924 * C22720;
    const double C23534 = C922 * C22720;
    const double C23789 = C2484 * C22720;
    const double C23941 = C2646 * C22720;
    const double C24433 = C3166 * C22720;
    const double C26500 = C25572 + C26499;
    const double C25592 = C25590 + C25571;
    const double C27147 = C26234 + C27146;
    const double C38120 = C38086 * C136;
    const double C38114 = C38086 * C125;
    const double C38112 = C38086 * C124;
    const double C38106 = C38086 * C134;
    const double C38096 = C38086 * C132;
    const double C38090 = C38086 * C123;
    const double C38308 = C38086 * C304;
    const double C38302 = C38086 * C288;
    const double C38300 = C38086 * C285;
    const double C38294 = C38086 * C297;
    const double C38490 = C38086 * C481;
    const double C38484 = C38086 * C465;
    const double C38482 = C38086 * C462;
    const double C38476 = C38086 * C474;
    const double C38660 = C38086 * C295;
    const double C38654 = C38086 * C284;
    const double C38824 = C38086 * C472;
    const double C38818 = C38086 * C461;
    const double C39036 = C38086 * C897;
    const double C39030 = C38086 * C890;
    const double C47240 = C38086 * C287;
    const double C47234 = C38086 * C302;
    const double C47224 = C38086 * C299;
    const double C47218 = C38086 * C286;
    const double C47896 = C38086 * C889;
    const double C47890 = C38086 * C895;
    const double C48154 = C38086 * C1111;
    const double C48148 = C38086 * C1104;
    const double C48318 = C38086 * C1225;
    const double C48312 = C38086 * C1218;
    const double C48822 = C38086 * C1572;
    const double C48816 = C38086 * C1565;
    const double C38122 = C38087 * C470;
    const double C38116 = C38087 * C460;
    const double C38110 = C38087 * C461;
    const double C38104 = C38087 * C472;
    const double C38098 = C38087 * C474;
    const double C38092 = C38087 * C462;
    const double C38310 = C38087 * C1570;
    const double C38304 = C38087 * C1564;
    const double C38298 = C38087 * C890;
    const double C38292 = C38087 * C897;
    const double C38492 = C38087 * C1854;
    const double C38486 = C38087 * C1848;
    const double C38480 = C38087 * C465;
    const double C38474 = C38087 * C481;
    const double C38662 = C38087 * C899;
    const double C38656 = C38087 * C891;
    const double C38826 = C38087 * C483;
    const double C38820 = C38087 * C466;
    const double C39038 = C38087 * C1223;
    const double C39032 = C38087 * C1217;
    const double C47238 = C38087 * C1565;
    const double C47232 = C38087 * C1572;
    const double C47226 = C38087 * C895;
    const double C47220 = C38087 * C889;
    const double C47894 = C38087 * C1218;
    const double C47888 = C38087 * C1225;
    const double C48156 = C38087 * C4102;
    const double C48150 = C38087 * C4097;
    const double C48320 = C38087 * C4516;
    const double C48314 = C38087 * C4511;
    const double C48824 = C38087 * C3592;
    const double C48818 = C38087 * C3587;
    const double C44538 = C34706 * C50632;
    const double C44539 = C34707 * C10701;
    const double C44540 = C44536 * C10701;
    const double C44541 = C44537 * C50632;
    const double C45430 = C45420 * C50632;
    const double C45431 = C45421 * C10701;
    const double C46091 = C46081 * C50632;
    const double C46092 = C46082 * C10701;
    const double C25593 = C25583 + C25591;
    const double C524 = C50822 * C497;
    const double C5865 = C50834 * C497;
    const double C15414 = C15374 * C497;
    const double C32397 = C50834 * C497;
    const double C38125 = C38085 * C497;
    const double C757 = C50822 * C498;
    const double C5141 = C50834 * C498;
    const double C31673 = C50834 * C498;
    const double C921 = C50822 * C907;
    const double C5705 = C50834 * C907;
    const double C32237 = C50834 * C907;
    const double C169 = C117 * C140;
    const double C346 = C117 * C308;
    const double C646 = C117 * C310;
    const double C523 = C117 * C485;
    const double C5864 = C5108 * C485;
    const double C15413 = C15377 * C485;
    const double C32396 = C31640 * C485;
    const double C38124 = C38088 * C485;
    const double C756 = C117 * C487;
    const double C5140 = C5108 * C487;
    const double C31672 = C31640 * C487;
    const double C920 = C117 * C901;
    const double C5704 = C5108 * C901;
    const double C32236 = C31640 * C901;
    const double C3605 = C2649 * C2291;
    const double C23944 = C2649 * C22716;
    const double C50012 = C49988 + C50011;
    const double C1227 =
        (C50017 * C49928 + ae * C49847 * C50027 +
         C49847 * (ae * C50027 +
                   C49847 * C50017 *
                       (2 * C49920 + ae * C49921 +
                        C49848 * (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49727;
    const double C1219 = (C50017 * C49985 + C50027 * C50071) / C49723;
    const double C8136 = C8125 + C8134;
    const double C9066 = C8112 + C9059;
    const double C8135 = C8131 + C8109;
    const double C9741 = C8786 + C9734;
    const double C38141 = C38120 + C38121;
    const double C38138 = C38114 + C38115;
    const double C38137 = C38112 + C38113;
    const double C38134 = C38106 + C38107;
    const double C38129 = C38096 + C38097;
    const double C38126 = C38090 + C38091;
    const double C38323 = C38308 + C38309;
    const double C38320 = C38302 + C38303;
    const double C38319 = C38300 + C38301;
    const double C38316 = C38294 + C38295;
    const double C38505 = C38490 + C38491;
    const double C38502 = C38484 + C38485;
    const double C38501 = C38482 + C38483;
    const double C38498 = C38476 + C38477;
    const double C38669 = C38660 + C38661;
    const double C38666 = C38654 + C38655;
    const double C38833 = C38824 + C38825;
    const double C38830 = C38818 + C38819;
    const double C39045 = C39036 + C39037;
    const double C39042 = C39030 + C39031;
    const double C47253 = C47240 + C47241;
    const double C47250 = C47234 + C47235;
    const double C47245 = C47224 + C47225;
    const double C47242 = C47218 + C47219;
    const double C47903 = C47896 + C47897;
    const double C47900 = C47890 + C47891;
    const double C48163 = C48154 + C48155;
    const double C48160 = C48148 + C48149;
    const double C48327 = C48318 + C48319;
    const double C48324 = C48312 + C48313;
    const double C48831 = C48822 + C48823;
    const double C48828 = C48816 + C48817;
    const double C38142 = C38122 + C38123;
    const double C38139 = C38116 + C38117;
    const double C38136 = C38110 + C38111;
    const double C38133 = C38104 + C38105;
    const double C38130 = C38098 + C38099;
    const double C38127 = C38092 + C38093;
    const double C38324 = C38310 + C38311;
    const double C38321 = C38304 + C38305;
    const double C38318 = C38298 + C38299;
    const double C38315 = C38292 + C38293;
    const double C38506 = C38492 + C38493;
    const double C38503 = C38486 + C38487;
    const double C38500 = C38480 + C38481;
    const double C38497 = C38474 + C38475;
    const double C38670 = C38662 + C38663;
    const double C38667 = C38656 + C38657;
    const double C38834 = C38826 + C38827;
    const double C38831 = C38820 + C38821;
    const double C39046 = C39038 + C39039;
    const double C39043 = C39032 + C39033;
    const double C47252 = C47238 + C47239;
    const double C47249 = C47232 + C47233;
    const double C47246 = C47226 + C47227;
    const double C47243 = C47220 + C47221;
    const double C47902 = C47894 + C47895;
    const double C47899 = C47888 + C47889;
    const double C48164 = C48156 + C48157;
    const double C48161 = C48150 + C48151;
    const double C48328 = C48320 + C48321;
    const double C48325 = C48314 + C48315;
    const double C48832 = C48824 + C48825;
    const double C48829 = C48818 + C48819;
    const double C44542 = C44538 + C44539;
    const double C44543 = C44540 + C44541;
    const double C45436 = C45430 + C45431;
    const double C46097 = C46091 + C46092;
    const double C180 = C169 + C170;
    const double C359 = C346 + C347;
    const double C649 = C646 + C647;
    const double C536 = C523 + C524;
    const double C5869 = C5864 + C5865;
    const double C15432 = C15413 + C15414;
    const double C32401 = C32396 + C32397;
    const double C38143 = C38124 + C38125;
    const double C759 = C756 + C757;
    const double C5157 = C5140 + C5141;
    const double C31689 = C31672 + C31673;
    const double C927 = C920 + C921;
    const double C5709 = C5704 + C5705;
    const double C32241 = C32236 + C32237;
    const double C50013 = C50012 + C50006;
    const double C8138 = C8126 + C8136;
    const double C9069 = C8111 + C9066;
    const double C8137 = C8135 + C8110;
    const double C9744 = C8785 + C9741;
    const double C2479 = C359 * C2291;
    const double C8444 = C359 * C50637;
    const double C22892 = C359 * C22716;
    const double C25893 = C359 * C50637;
    const double C2801 = C649 * C2291;
    const double C23190 = C649 * C22716;
    const double C3163 = C927 * C2291;
    const double C23542 = C927 * C22716;
    const double C499 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 + ae * C49847 * C50013 +
         C49847 *
             (ae * C50013 +
              C49847 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C752 =
        (ae * (4 * C49985 + C49848 * C50013 +
               (3 * C49977 + C49848 * C50004) * ae) +
         C49847 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49727;
    const double C908 =
        (ae * C50017 * C50013 +
         C49847 * C50017 *
             (3 * C49924 + ae * C49925 +
              C49848 * (2 * C49920 + ae * C49921 +
                        C49848 * (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49727;
    const double C141 = (5 * (3 * C49966 + C49848 * C49985 + C50239 * ae) +
                         C49848 * (4 * C49985 + C49848 * C50013 + C50243 * ae) +
                         (4 * C50239 + C49848 * C50243) * ae) /
                        C49723;
    const double C311 =
        (3 * C49966 + C49848 * C49985 + C50239 * ae + C50013 * C50035) / C49723;
    const double C488 =
        (3 * C49966 + C49848 * C49985 + C50239 * ae + C50013 * C50071) / C49723;
    const double C640 =
        (C50017 * (4 * C49985 + C49848 * C50013 + C50243 * ae)) / C49723;
    const double C750 =
        (C49847 * (4 * C49985 + C49848 * C50013 + C50243 * ae)) / C49723;
    const double C902 = (C49847 * C50017 * C50013) / C49723;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50696 * C50928 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50696 * C50732) *
              C50970 +
          (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
            (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
               C50696 * C50732 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
             C178 * C22721 + C177 * C22716) *
                C22717 +
            (C23185 + C23186 + C23187 + C23188 + C23189 + C23190) * C50810) *
               C50696 * C50928 -
           (((C117 * C311 + C50822 * C322) * C22716 +
             (C117 * C292 + C50822 * C312) * C22721 + C359 * C50953 +
             C358 * C22720 + C357 * C50969 + C356 * C22719) *
                C50810 +
            (C23190 + C23189 + C23188 + C23187 + C23186 + C23185) * C22717) *
               C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C22719 +
              (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
              C172 * C50953 + C173 * C22721 + C174 * C22716) *
                 C22717 +
             (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
                C50929 -
            ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
             (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
              (C117 * C476 + C50822 * C493) * C50969 +
              (C117 * C463 + C50822 * C477) * C22719) *
                 C22717) *
                C50760) *
               C50928 +
           (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
             (C4116 * C22719 + C4117 * C50969 + C3166 * C22720 +
              C3167 * C50953 + C3168 * C22721 + C3169 * C22716) *
                 C50810) *
                C50760 -
            ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
             (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
              C526 * C22721 + C525 * C22716) *
                 C22717 +
             (C23537 + C23538 + C23539 + C23540 + C23541 + C23542) * C50810) *
                C50760 -
            ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
             (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
              C172 * C50969 + C171 * C22719) *
                 C22717) *
                C50929) *
               C50928 +
           (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
             (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
                C50929 -
            (((C117 * C1566 + C50822 * C1574) * C22716 +
              (C117 * C1562 + C50822 * C1567) * C22721 + C3169 * C50953 +
              C3168 * C22720 + C3167 * C50969 + C3166 * C22719) *
                 C50810 +
             (C23542 + C23541 + C23540 + C23539 + C23538 + C23537) * C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50696 * C278 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50696 * C279 +
           ((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
            (C3436 * C22719 + C3437 * C50969 + C2484 * C22720 + C2485 * C50953 +
             C2486 * C22721 + C2487 * C22716) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
            (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
               C50696 * C279 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50696 * C278 -
           (((C117 * C1105 + C50822 * C1113) * C22716 +
             (C117 * C1101 + C50822 * C1106) * C22721 + C2487 * C50953 +
             C2486 * C22720 + C2485 * C50969 + C2484 * C22719) *
                C50810 +
            (C22892 + C22891 + C22890 + C22889 + C22888 + C22887) * C22717) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C22719 +
            (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
            C172 * C50953 + C173 * C22721 + C174 * C22716) *
               C22717 +
           (C2480 * C22719 + C2481 * C50969 + C353 * C22720 + C352 * C50953 +
            C351 * C22721 + C350 * C22716) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C348 * C22716 + C349 * C22721 + C350 * C50953 + C351 * C22720 +
            C352 * C50969 + C353 * C22719) *
               C50810 +
           (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
            C172 * C50969 + C171 * C22719) *
               C22717) *
              C50696 * C50680 * C114 +
          ((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
            C178 * C22721 + C177 * C22716) *
               C22717 +
           (C351 * C22719 + C350 * C50969 + C349 * C22720 + C348 * C50953 +
            C648 * C22721 + C649 * C22716) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C117 * C640 + C50822 * C642) * C22716 +
            (C117 * C639 + C50822 * C641) * C22721 + C649 * C50953 +
            C648 * C22720 + C348 * C50969 + C349 * C22719) *
               C50810 +
           (C180 * C22716 + C179 * C22721 + C177 * C50953 + C178 * C22720 +
            C176 * C50969 + C175 * C22719) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C457 -
           ((C925 * C22716 + C924 * C22721 + C923 * C50953 + C922 * C22720 +
             C3164 * C50969 + C3165 * C22719) *
                C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C22719 +
             (C117 * C479 + C50822 * C494) * C50969 + C531 * C22720 +
             C532 * C50953 + C533 * C22721 + C534 * C22716) *
                C22717 +
            (C3606 * C22719 + C3607 * C50969 + C2646 * C22720 + C2647 * C50953 +
             C2648 * C22721 + C2649 * C22716) *
                C50810) *
               C459) *
              C50680 * C281 +
          (((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
             C526 * C22721 + C525 * C22716) *
                C22717 +
            (C922 * C22719 + C923 * C50969 + C924 * C22720 + C925 * C50953 +
             C926 * C22721 + C927 * C22716) *
                C50810) *
               C458 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C457 -
           (((C117 * C1219 + C50822 * C1227) * C22716 +
             (C117 * C1215 + C50822 * C1220) * C22721 + C2649 * C50953 +
             C2648 * C22720 + C2647 * C50969 + C2646 * C22719) *
                C50810 +
            (C536 * C22716 + C535 * C22721 + C534 * C50953 + C533 * C22720 +
             C532 * C50969 + C531 * C22719) *
                C22717) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50929 -
           ((C925 * C22716 + C924 * C22721 + C923 * C50953 + C922 * C22720 +
             C3164 * C50969 + C3165 * C22719) *
                C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
             C526 * C22721 + C525 * C22716) *
                C22717 +
            (C922 * C22719 + C923 * C50969 + C924 * C22720 + C925 * C50953 +
             C926 * C22721 + C927 * C22716) *
                C50810) *
               C50760 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
             C178 * C22721 + C177 * C22716) *
                C22717 +
            (C23185 + C23186 + C23187 + C23188 + C23189 + C23190) * C50810) *
               C50929 -
           (((C117 * C902 + C50822 * C908) * C22716 +
             (C117 * C893 + C50822 * C903) * C22721 + C927 * C50953 +
             C926 * C22720 + C925 * C50969 + C924 * C22719) *
                C50810 +
            (C759 * C22716 + C758 * C22721 + C525 * C50953 + C526 * C22720 +
             C527 * C50969 + C528 * C22719) *
                C22717) *
               C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C22719 +
            (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
            C172 * C50953 + C173 * C22721 + C174 * C22716) *
               C22717 +
           (C2480 * C22719 + C2481 * C50969 + C353 * C22720 + C352 * C50953 +
            C351 * C22721 + C350 * C22716) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C348 * C22716 + C349 * C22721 + C350 * C50953 + C351 * C22720 +
            C352 * C50969 + C353 * C22719) *
               C50810 +
           (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
            C172 * C50969 + C171 * C22719) *
               C22717) *
              C50696 * C50680 * C114 +
          ((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
            C178 * C22721 + C177 * C22716) *
               C22717 +
           (C351 * C22719 + C350 * C50969 + C349 * C22720 + C348 * C50953 +
            C648 * C22721 + C649 * C22716) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C117 * C640 + C50822 * C642) * C22716 +
            (C117 * C639 + C50822 * C641) * C22721 + C649 * C50953 +
            C648 * C22720 + C348 * C50969 + C349 * C22719) *
               C50810 +
           (C180 * C22716 + C179 * C22721 + C177 * C50953 + C178 * C22720 +
            C176 * C50969 + C175 * C22719) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50696 * C278 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50696 * C279 +
           ((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
            (C3436 * C22719 + C3437 * C50969 + C2484 * C22720 + C2485 * C50953 +
             C2486 * C22721 + C2487 * C22716) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
            (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
               C50696 * C279 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50696 * C278 -
           (((C117 * C1105 + C50822 * C1113) * C22716 +
             (C117 * C1101 + C50822 * C1106) * C22721 + C2487 * C50953 +
             C2486 * C22720 + C2485 * C50969 + C2484 * C22719) *
                C50810 +
            (C22892 + C22891 + C22890 + C22889 + C22888 + C22887) * C22717) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50696 * C50972 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50696 * C50973 +
           ((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
            (C23787 + C23788 + C23789 + C23790 + C23791 + C23792) * C50810) *
               C50696 * C1331) *
              C50920 +
          (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
            (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
               C50696 * C50973 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50696 * C50972 -
           (((C117 * C1105 + C50822 * C1113) * C22716 +
             (C117 * C1101 + C50822 * C1106) * C22721 + C2487 * C50953 +
             C2486 * C22720 + C2485 * C50969 + C2484 * C22719) *
                C50810 +
            (C22892 + C22891 + C22890 + C22889 + C22888 + C22887) * C22717) *
               C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50929 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50760) *
              C50972 +
          (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
            (C24431 + C24432 + C24433 + C24434 + C24435 + C24436) * C50810) *
               C50760 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50929) *
              C50973 +
          (((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
            (C23787 + C23788 + C23789 + C23790 + C23791 + C23792) * C50810) *
               C50929 -
           (((C117 * C4098 + C50822 * C4104) * C22716 +
             (C117 * C4095 + C50822 * C4099) * C22721 + C8806 * C50953 +
             C8805 * C22720 + C9743 * C50969 + C9742 * C22719) *
                C50810 +
            (C24436 + C24435 + C24434 + C24433 + C24432 + C24431) * C22717) *
               C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C22719 +
            (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
            C172 * C50953 + C173 * C22721 + C174 * C22716) *
               C22717 +
           (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
              C50696 * C1096 -
          ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
           (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
              C50696 * C1097 +
          ((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
           (C23787 + C23788 + C23789 + C23790 + C23791 + C23792) * C50810) *
              C50696 * C1098 -
          (((C117 * C3418 + C50822 * C3424) * C22716 +
            (C117 * C3415 + C50822 * C3419) * C22721 + C8133 * C50953 +
            C8132 * C22720 + C9068 * C50969 + C9067 * C22719) *
               C50810 +
           (C23792 + C23791 + C23790 + C23789 + C23788 + C23787) * C22717) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50696 * C1025 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50696 * C50732) *
              C1027 +
          (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
            (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
               C50696 * C50732 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
             C178 * C22721 + C177 * C22716) *
                C22717 +
            (C23185 + C23186 + C23187 + C23188 + C23189 + C23190) * C50810) *
               C50696 * C1025 -
           (((C117 * C311 + C50822 * C322) * C22716 +
             (C117 * C292 + C50822 * C312) * C22721 + C359 * C50953 +
             C358 * C22720 + C357 * C50969 + C356 * C22719) *
                C50810 +
            (C23190 + C23189 + C23188 + C23187 + C23186 + C23185) * C22717) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C457 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C22719 +
             (C117 * C479 + C50822 * C494) * C50969 + C531 * C22720 +
             C532 * C50953 + C533 * C22721 + C534 * C22716) *
                C22717 +
            (C23939 + C23940 + C23941 + C23942 + C23943 + C23944) * C50810) *
               C459) *
              C1025 +
          (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
            (C4116 * C22719 + C4117 * C50969 + C3166 * C22720 + C3167 * C50953 +
             C3168 * C22721 + C3169 * C22716) *
                C50810) *
               C458 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C457 -
           (((C117 * C3588 + C50822 * C3594) * C22716 +
             (C117 * C3585 + C50822 * C3589) * C22721 + C8290 * C50953 +
             C8289 * C22720 + C9237 * C50969 + C9236 * C22719) *
                C50810 +
            (C23944 + C23943 + C23942 + C23941 + C23940 + C23939) * C22717) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C22719 +
              (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
              C172 * C50953 + C173 * C22721 + C174 * C22716) *
                 C22717 +
             (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
                C50929 -
            ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
             (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
              (C117 * C476 + C50822 * C493) * C50969 +
              (C117 * C463 + C50822 * C477) * C22719) *
                 C22717) *
                C50760) *
               C1025 +
           (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
             (C4116 * C22719 + C4117 * C50969 + C3166 * C22720 +
              C3167 * C50953 + C3168 * C22721 + C3169 * C22716) *
                 C50810) *
                C50760 -
            ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
             (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
              C526 * C22721 + C525 * C22716) *
                 C22717 +
             (C23537 + C23538 + C23539 + C23540 + C23541 + C23542) * C50810) *
                C50760 -
            ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
             (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
              C172 * C50969 + C171 * C22719) *
                 C22717) *
                C50929) *
               C1025 +
           (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
             (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
                C50929 -
            (((C117 * C1566 + C50822 * C1574) * C22716 +
              (C117 * C1562 + C50822 * C1567) * C22721 + C3169 * C50953 +
              C3168 * C22720 + C3167 * C50969 + C3166 * C22719) *
                 C50810 +
             (C23542 + C23541 + C23540 + C23539 + C23538 + C23537) * C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50696 * C1025 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50696 * C50732) *
              C1027 +
          (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
            (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
               C50696 * C50732 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
             C178 * C22721 + C177 * C22716) *
                C22717 +
            (C23185 + C23186 + C23187 + C23188 + C23189 + C23190) * C50810) *
               C50696 * C1025 -
           (((C117 * C311 + C50822 * C322) * C22716 +
             (C117 * C292 + C50822 * C312) * C22721 + C359 * C50953 +
             C358 * C22720 + C357 * C50969 + C356 * C22719) *
                C50810 +
            (C23190 + C23189 + C23188 + C23187 + C23186 + C23185) * C22717) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C22719 +
            (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
            C172 * C50953 + C173 * C22721 + C174 * C22716) *
               C22717 +
           (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
              C50696 * C1096 -
          ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
           (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
              C50696 * C1097 +
          ((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
           (C23787 + C23788 + C23789 + C23790 + C23791 + C23792) * C50810) *
              C50696 * C1098 -
          (((C117 * C3418 + C50822 * C3424) * C22716 +
            (C117 * C3415 + C50822 * C3419) * C22721 + C8133 * C50953 +
            C8132 * C22720 + C9068 * C50969 + C9067 * C22719) *
               C50810 +
           (C23792 + C23791 + C23790 + C23789 + C23788 + C23787) * C22717) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C22719 +
              (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
              C172 * C50953 + C173 * C22721 + C174 * C22716) *
                 C22717 +
             (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
                C1676 -
            ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
             (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
              (C117 * C476 + C50822 * C493) * C50969 +
              (C117 * C463 + C50822 * C477) * C22719) *
                 C22717) *
                C50760) *
               C50928 +
           (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
             (C24431 + C24432 + C24433 + C24434 + C24435 + C24436) * C50810) *
                C50760 -
            ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
             (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
              C526 * C22721 + C525 * C22716) *
                 C22717 +
             (C23537 + C23538 + C23539 + C23540 + C23541 + C23542) * C50810) *
                C50760 -
            ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
             (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
              C172 * C50969 + C171 * C22719) *
                 C22717) *
                C1676) *
               C50928 +
           (((C22881 + C22882 + C22883 + C22884 + C22885 + C22886) * C22717 +
             (C22887 + C22888 + C22889 + C22890 + C22891 + C22892) * C50810) *
                C1676 -
            (((C117 * C1566 + C50822 * C1574) * C22716 +
              (C117 * C1562 + C50822 * C1567) * C22721 + C3169 * C50953 +
              C3168 * C22720 + C3167 * C50969 + C3166 * C22719) *
                 C50810 +
             (C23542 + C23541 + C23540 + C23539 + C23538 + C23537) * C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50974 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C22719 +
             (C117 * C479 + C50822 * C494) * C50969 + C531 * C22720 +
             C532 * C50953 + C533 * C22721 + C534 * C22716) *
                C22717 +
            (C23939 + C23940 + C23941 + C23942 + C23943 + C23944) * C50810) *
               C2092) *
              C50928 +
          (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
            (C24431 + C24432 + C24433 + C24434 + C24435 + C24436) * C50810) *
               C50975 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C50974 -
           (((C117 * C3588 + C50822 * C3594) * C22716 +
             (C117 * C3585 + C50822 * C3589) * C22721 + C8290 * C50953 +
             C8289 * C22720 + C9237 * C50969 + C9236 * C22719) *
                C50810 +
            (C23944 + C23943 + C23942 + C23941 + C23940 + C23939) * C22717) *
               C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C1676 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50760) *
              C278 +
          (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
            (C24431 + C24432 + C24433 + C24434 + C24435 + C24436) * C50810) *
               C50760 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C1676) *
              C279 +
          (((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
            (C23787 + C23788 + C23789 + C23790 + C23791 + C23792) * C50810) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C22716 +
             (C117 * C4095 + C50822 * C4099) * C22721 + C8806 * C50953 +
             C8805 * C22720 + C9743 * C50969 + C9742 * C22719) *
                C50810 +
            (C24436 + C24435 + C24434 + C24433 + C24432 + C24431) * C22717) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C1676 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
             C526 * C22721 + C525 * C22716) *
                C22717 +
            (C23537 + C23538 + C23539 + C23540 + C23541 + C23542) * C50810) *
               C50760 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
             C178 * C22721 + C177 * C22716) *
                C22717 +
            (C23185 + C23186 + C23187 + C23188 + C23189 + C23190) * C50810) *
               C1676 -
           (((C117 * C902 + C50822 * C908) * C22716 +
             (C117 * C893 + C50822 * C903) * C22721 + C927 * C50953 +
             C926 * C22720 + C925 * C50969 + C924 * C22719) *
                C50810 +
            (C759 * C22716 + C758 * C22721 + C525 * C50953 + C526 * C22720 +
             C527 * C50969 + C528 * C22719) *
                C22717) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C22719 +
            (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
            C172 * C50953 + C173 * C22721 + C174 * C22716) *
               C22717 +
           (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
              C1842 -
          ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
           (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
            (C117 * C476 + C50822 * C493) * C50969 +
            (C117 * C463 + C50822 * C477) * C22719) *
               C22717) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C22719 +
            (C117 * C479 + C50822 * C494) * C50969 + C531 * C22720 +
            C532 * C50953 + C533 * C22721 + C534 * C22716) *
               C22717 +
           (C23939 + C23940 + C23941 + C23942 + C23943 + C23944) * C50810) *
              C1844 -
          (((C117 * C4512 + C50822 * C4518) * C22716 +
            (C117 * C4509 + C50822 * C4513) * C22721 +
            (C117 * C4514 + C50822 * C4519) * C50953 +
            (C117 * C4510 + C50822 * C4515) * C22720 +
            (C117 * C4516 + C50822 * C4520) * C50969 +
            (C117 * C4511 + C50822 * C4517) * C22719) *
               C50810 +
           ((C117 * C1852 + C50822 * C1859) * C22716 +
            (C117 * C1847 + C50822 * C1853) * C22721 +
            (C117 * C1854 + C50822 * C1860) * C50953 +
            (C117 * C1848 + C50822 * C1855) * C22720 +
            (C117 * C1856 + C50822 * C1861) * C50969 +
            (C117 * C1849 + C50822 * C1857) * C22719) *
               C22717) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C50974 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C22719 +
             (C117 * C479 + C50822 * C494) * C50969 + C531 * C22720 +
             C532 * C50953 + C533 * C22721 + C534 * C22716) *
                C22717 +
            (C23939 + C23940 + C23941 + C23942 + C23943 + C23944) * C50810) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
             C526 * C22721 + C525 * C22716) *
                C22717 +
            (C23537 + C23538 + C23539 + C23540 + C23541 + C23542) * C50810) *
               C50975 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C50974 -
           (((C117 * C1219 + C50822 * C1227) * C22716 +
             (C117 * C1215 + C50822 * C1220) * C22721 + C2649 * C50953 +
             C2648 * C22720 + C2647 * C50969 + C2646 * C22719) *
                C50810 +
            (C536 * C22716 + C535 * C22721 + C534 * C50953 + C533 * C22720 +
             C532 * C50969 + C531 * C22719) *
                C22717) *
               C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C1676 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C22719 + C529 * C50969 + C528 * C22720 + C527 * C50953 +
             C526 * C22721 + C525 * C22716) *
                C22717 +
            (C23537 + C23538 + C23539 + C23540 + C23541 + C23542) * C50810) *
               C50760 -
           ((C22886 + C22885 + C22884 + C22883 + C22882 + C22881) * C50810 +
            (C176 * C22716 + C175 * C22721 + C174 * C50953 + C173 * C22720 +
             C172 * C50969 + C171 * C22719) *
                C22717) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C22719 + C174 * C50969 + C175 * C22720 + C176 * C50953 +
             C178 * C22721 + C177 * C22716) *
                C22717 +
            (C23185 + C23186 + C23187 + C23188 + C23189 + C23190) * C50810) *
               C1676 -
           (((C117 * C902 + C50822 * C908) * C22716 +
             (C117 * C893 + C50822 * C903) * C22721 + C927 * C50953 +
             C926 * C22720 + C925 * C50969 + C924 * C22719) *
                C50810 +
            (C759 * C22716 + C758 * C22721 + C525 * C50953 + C526 * C22720 +
             C527 * C50969 + C528 * C22719) *
                C22717) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C22719 +
             (C117 * C130 + C50822 * C143) * C50969 + C171 * C22720 +
             C172 * C50953 + C173 * C22721 + C174 * C22716) *
                C22717 +
            (C22869 + C22870 + C22871 + C22872 + C22873 + C22874) * C50810) *
               C1676 -
           ((C23531 + C23532 + C23533 + C23534 + C23535 + C23536) * C50810 +
            (C527 * C22716 + C528 * C22721 + C529 * C50953 + C530 * C22720 +
             (C117 * C476 + C50822 * C493) * C50969 +
             (C117 * C463 + C50822 * C477) * C22719) *
                C22717) *
               C50760) *
              C278 +
          (((C23536 + C23535 + C23534 + C23533 + C23532 + C23531) * C22717 +
            (C24431 + C24432 + C24433 + C24434 + C24435 + C24436) * C50810) *
               C50760 -
           ((C22875 + C22876 + C22877 + C22878 + C22879 + C22880) * C50810 +
            (C22874 + C22873 + C22872 + C22871 + C22870 + C22869) * C22717) *
               C1676) *
              C279 +
          (((C22880 + C22879 + C22878 + C22877 + C22876 + C22875) * C22717 +
            (C23787 + C23788 + C23789 + C23790 + C23791 + C23792) * C50810) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C22716 +
             (C117 * C4095 + C50822 * C4099) * C22721 + C8806 * C50953 +
             C8805 * C22720 + C9743 * C50969 + C9742 * C22719) *
                C50810 +
            (C24436 + C24435 + C24434 + C24433 + C24432 + C24431) * C22717) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50696 * C50928 -
           ((C25572 + C25573 + C25574 + C25575) * C25414 +
            (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50696 * C50732) *
              C50970 +
          (((C25576 + C25577 + C25578 + C25579) * C50976 +
            (C25580 + C25581 + C25582 + C25583) * C50965 +
            (C25584 + C25585 + C25586 + C25587) * C25414) *
               C50696 * C50732 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
                C50976 +
            (C25886 + C25887 + C25888 + C25889) * C50965 +
            (C25890 + C25891 + C25892 + C25893) * C25414) *
               C50696 * C50928 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C25416 + C2487 * C25410 +
             C2486 * C25415) *
                C25414 +
            (C25893 + C25892 + C25891 + C25890) * C50965 +
            (C25889 + C25888 + C25887 + C25886) * C50976) *
               C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C25415 +
              (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
              C172 * C50637) *
                 C50976 +
             (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
                C50929 -
            ((C26234 + C26235 + C26236 + C26237) * C25414 +
             (C26238 + C26239 + C26240 + C26241) * C50965 +
             (C529 * C50637 + C530 * C25416 +
              (C117 * C476 + C50822 * C493) * C25410 +
              (C117 * C463 + C50822 * C477) * C25415) *
                 C50976) *
                C50760) *
               C50928 +
           (((C26241 + C26240 + C26239 + C26238) * C50976 +
             (C26237 + C26236 + C26235 + C26234) * C50965 +
             (C9742 * C25415 + C9743 * C25410 + C8805 * C25416 +
              C8806 * C50637) *
                 C25414) *
                C50760 -
            ((C25572 + C25573 + C25574 + C25575) * C25414 +
             (C25571 + C25570 + C25569 + C25568) * C50965 +
             (C25567 + C25566 + C25565 + C25564) * C50976) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                 C50976 +
             (C26242 + C26243 + C26244 + C26245) * C50965 +
             (C26246 + C26247 + C26248 + C26249) * C25414) *
                C50760 -
            (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
             (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                 C50976) *
                C50929) *
               C50928 +
           (((C25576 + C25577 + C25578 + C25579) * C50976 +
             (C25580 + C25581 + C25582 + C25583) * C50965 +
             (C25584 + C25585 + C25586 + C25587) * C25414) *
                C50929 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C25416 + C8806 * C25410 +
              C8805 * C25415) *
                 C25414 +
             (C26249 + C26248 + C26247 + C26246) * C50965 +
             (C26245 + C26244 + C26243 + C26242) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50696 * C278 -
           ((C25572 + C25573 + C25574 + C25575) * C25414 +
            (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50696 * C279 +
           (C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
            (C9067 * C25415 + C9068 * C25410 + C8132 * C25416 +
             C8133 * C50637) *
                C25414) *
               C50696 * C280) *
              C281 +
          (((C25576 + C25577 + C25578 + C25579) * C50976 +
            (C25580 + C25581 + C25582 + C25583) * C50965 +
            (C25584 + C25585 + C25586 + C25587) * C25414) *
               C50696 * C279 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50696 * C278 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C25416 + C8133 * C25410 +
             C8132 * C25415) *
                C25414 +
            (C25587 + C25586 + C25585 + C25584) * C50965 + C25593 * C50976) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C25415 +
            (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
            C172 * C50637) *
               C50976 +
           (C2480 * C25415 + C2481 * C25410 + C353 * C25416 + C352 * C50637) *
               C50965 +
           (C2483 * C25415 + C2482 * C25410 + C354 * C25416 + C355 * C50637) *
               C25414) *
              C50696 * C50680 * C113 -
          ((C357 * C50637 + C356 * C25416 + C355 * C25410 + C354 * C25415) *
               C25414 +
           (C350 * C50637 + C351 * C25416 + C352 * C25410 + C353 * C25415) *
               C50965 +
           (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
               C50976) *
              C50696 * C50680 * C114 +
          ((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
               C50976 +
           (C351 * C25415 + C350 * C25410 + C349 * C25416 + C348 * C50637) *
               C50965 +
           (C356 * C25415 + C357 * C25410 + C358 * C25416 + C359 * C50637) *
               C25414) *
              C50696 * C50680 * C115 -
          (((C117 * C311 + C50822 * C322) * C50637 +
            (C117 * C292 + C50822 * C312) * C25416 + C359 * C25410 +
            C358 * C25415) *
               C25414 +
           (C649 * C50637 + C648 * C25416 + C348 * C25410 + C349 * C25415) *
               C50965 +
           (C177 * C50637 + C178 * C25416 + C176 * C25410 + C175 * C25415) *
               C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C457 -
           ((C3167 * C50637 + C3166 * C25416 + C4117 * C25410 +
             C4116 * C25415) *
                C25414 +
            (C923 * C50637 + C922 * C25416 + C3164 * C25410 + C3165 * C25415) *
                C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C25415 +
             (C117 * C479 + C50822 * C494) * C25410 + C531 * C25416 +
             C532 * C50637) *
                C50976 +
            (C3606 * C25415 + C3607 * C25410 + C2646 * C25416 +
             C2647 * C50637) *
                C50965 +
            (C9236 * C25415 + C9237 * C25410 + C8289 * C25416 +
             C8290 * C50637) *
                C25414) *
               C459) *
              C50680 * C281 +
          (((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                C50976 +
            (C922 * C25415 + C923 * C25410 + C924 * C25416 + C925 * C50637) *
                C50965 +
            (C3166 * C25415 + C3167 * C25410 + C3168 * C25416 +
             C3169 * C50637) *
                C25414) *
               C458 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C457 -
           (((C117 * C3588 + C50822 * C3594) * C50637 +
             (C117 * C3585 + C50822 * C3589) * C25416 + C8290 * C25410 +
             C8289 * C25415) *
                C25414 +
            (C2649 * C50637 + C2648 * C25416 + C2647 * C25410 +
             C2646 * C25415) *
                C50965 +
            (C534 * C50637 + C533 * C25416 + C532 * C25410 + C531 * C25415) *
                C50976) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50929 -
           ((C3167 * C50637 + C3166 * C25416 + C4117 * C25410 +
             C4116 * C25415) *
                C25414 +
            (C923 * C50637 + C922 * C25416 + C3164 * C25410 + C3165 * C25415) *
                C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                C50976 +
            (C922 * C25415 + C923 * C25410 + C924 * C25416 + C925 * C50637) *
                C50965 +
            (C3166 * C25415 + C3167 * C25410 + C3168 * C25416 +
             C3169 * C50637) *
                C25414) *
               C50760 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
                C50976 +
            (C25886 + C25887 + C25888 + C25889) * C50965 +
            (C25890 + C25891 + C25892 + C25893) * C25414) *
               C50929 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C25416 + C3169 * C25410 +
             C3168 * C25415) *
                C25414 +
            (C927 * C50637 + C926 * C25416 + C925 * C25410 + C924 * C25415) *
                C50965 +
            (C525 * C50637 + C526 * C25416 + C527 * C25410 + C528 * C25415) *
                C50976) *
               C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C25415 +
            (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
            C172 * C50637) *
               C50976 +
           (C2480 * C25415 + C2481 * C25410 + C353 * C25416 + C352 * C50637) *
               C50965 +
           (C2483 * C25415 + C2482 * C25410 + C354 * C25416 + C355 * C50637) *
               C25414) *
              C50696 * C50680 * C113 -
          ((C357 * C50637 + C356 * C25416 + C355 * C25410 + C354 * C25415) *
               C25414 +
           (C350 * C50637 + C351 * C25416 + C352 * C25410 + C353 * C25415) *
               C50965 +
           (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
               C50976) *
              C50696 * C50680 * C114 +
          ((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
               C50976 +
           (C351 * C25415 + C350 * C25410 + C349 * C25416 + C348 * C50637) *
               C50965 +
           (C356 * C25415 + C357 * C25410 + C358 * C25416 + C359 * C50637) *
               C25414) *
              C50696 * C50680 * C115 -
          (((C117 * C311 + C50822 * C322) * C50637 +
            (C117 * C292 + C50822 * C312) * C25416 + C359 * C25410 +
            C358 * C25415) *
               C25414 +
           (C649 * C50637 + C648 * C25416 + C348 * C25410 + C349 * C25415) *
               C50965 +
           (C177 * C50637 + C178 * C25416 + C176 * C25410 + C175 * C25415) *
               C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50696 * C278 -
           ((C25572 + C25573 + C25574 + C25575) * C25414 +
            (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50696 * C279 +
           (C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
            (C9067 * C25415 + C9068 * C25410 + C8132 * C25416 +
             C8133 * C50637) *
                C25414) *
               C50696 * C280) *
              C281 +
          (((C25576 + C25577 + C25578 + C25579) * C50976 +
            (C25580 + C25581 + C25582 + C25583) * C50965 +
            (C25584 + C25585 + C25586 + C25587) * C25414) *
               C50696 * C279 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50696 * C278 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C25416 + C8133 * C25410 +
             C8132 * C25415) *
                C25414 +
            (C25587 + C25586 + C25585 + C25584) * C50965 + C25593 * C50976) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50696 * C50972 -
           (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50696 * C50973 +
           (C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
            (C26495 + C26496 + C26497 + C26498) * C25414) *
               C50696 * C1331) *
              C50920 +
          (((C25576 + C25577 + C25578 + C25579) * C50976 +
            (C25580 + C25581 + C25582 + C25583) * C50965 +
            (C25584 + C25585 + C25586 + C25587) * C25414) *
               C50696 * C50973 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50696 * C50972 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C25416 + C8133 * C25410 +
             C8132 * C25415) *
                C25414 +
            (C25587 + C25586 + C25585 + C25584) * C50965 + C25593 * C50976) *
               C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50929 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50760) *
              C50972 +
          (((C26241 + C26240 + C26239 + C26238) * C50976 +
            (C26237 + C26236 + C26235 + C26234) * C50965 +
            (C27142 + C27143 + C27144 + C27145) * C25414) *
               C50760 -
           (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50929) *
              C50973 +
          ((C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
            (C26495 + C26496 + C26497 + C26498) * C25414) *
               C50929 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C25416 + C11892 * C25410 +
             C11891 * C25415) *
                C25414 +
            (C27145 + C27144 + C27143 + C27142) * C50965 + C27147 * C50976) *
               C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C25415 +
            (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
            C172 * C50637) *
               C50976 +
           (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
              C50696 * C1096 -
          (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
           (C25567 + C25566 + C25565 + C25564) * C50976) *
              C50696 * C1097 +
          (C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
           (C26495 + C26496 + C26497 + C26498) * C25414) *
              C50696 * C1098 -
          (((C117 * C9052 + C50822 * C9056) * C50637 +
            (C117 * C9050 + C50822 * C9053) * C25416 + C11438 * C25410 +
            C11437 * C25415) *
               C25414 +
           (C26498 + C26497 + C26496 + C26495) * C50965 + C26500 * C50976) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50696 * C1025 -
           ((C25572 + C25573 + C25574 + C25575) * C25414 +
            (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50696 * C50732) *
              C1027 +
          (((C25576 + C25577 + C25578 + C25579) * C50976 +
            (C25580 + C25581 + C25582 + C25583) * C50965 +
            (C25584 + C25585 + C25586 + C25587) * C25414) *
               C50696 * C50732 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
                C50976 +
            (C25886 + C25887 + C25888 + C25889) * C50965 +
            (C25890 + C25891 + C25892 + C25893) * C25414) *
               C50696 * C1025 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C25416 + C2487 * C25410 +
             C2486 * C25415) *
                C25414 +
            (C25893 + C25892 + C25891 + C25890) * C50965 +
            (C25889 + C25888 + C25887 + C25886) * C50976) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C457 -
           ((C26234 + C26235 + C26236 + C26237) * C25414 +
            (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C25415 +
             (C117 * C479 + C50822 * C494) * C25410 + C531 * C25416 +
             C532 * C50637) *
                C50976 +
            (C26647 + C26648 + C26649 + C26650) * C50965 +
            (C26651 + C26652 + C26653 + C26654) * C25414) *
               C459) *
              C1025 +
          (((C26241 + C26240 + C26239 + C26238) * C50976 +
            (C26237 + C26236 + C26235 + C26234) * C50965 +
            (C9742 * C25415 + C9743 * C25410 + C8805 * C25416 +
             C8806 * C50637) *
                C25414) *
               C458 -
           (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C457 -
           (((C117 * C9219 + C50822 * C9223) * C50637 +
             (C117 * C9217 + C50822 * C9220) * C25416 + C11552 * C25410 +
             C11551 * C25415) *
                C25414 +
            (C26654 + C26653 + C26652 + C26651) * C50965 +
            (C26650 + C26649 + C26648 + C26647) * C50976) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C25415 +
              (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
              C172 * C50637) *
                 C50976 +
             (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
                C50929 -
            ((C26234 + C26235 + C26236 + C26237) * C25414 +
             (C26238 + C26239 + C26240 + C26241) * C50965 +
             (C529 * C50637 + C530 * C25416 +
              (C117 * C476 + C50822 * C493) * C25410 +
              (C117 * C463 + C50822 * C477) * C25415) *
                 C50976) *
                C50760) *
               C1025 +
           (((C26241 + C26240 + C26239 + C26238) * C50976 +
             (C26237 + C26236 + C26235 + C26234) * C50965 +
             (C9742 * C25415 + C9743 * C25410 + C8805 * C25416 +
              C8806 * C50637) *
                 C25414) *
                C50760 -
            (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
             (C25567 + C25566 + C25565 + C25564) * C50976) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                 C50976 +
             (C26242 + C26243 + C26244 + C26245) * C50965 +
             (C26246 + C26247 + C26248 + C26249) * C25414) *
                C50760 -
            (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
             (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                 C50976) *
                C50929) *
               C1025 +
           (((C25576 + C25577 + C25578 + C25579) * C50976 +
             (C25580 + C25581 + C25582 + C25583) * C50965 +
             (C25584 + C25585 + C25586 + C25587) * C25414) *
                C50929 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C25416 + C8806 * C25410 +
              C8805 * C25415) *
                 C25414 +
             (C26249 + C26248 + C26247 + C26246) * C50965 +
             (C26245 + C26244 + C26243 + C26242) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50696 * C1025 -
           ((C25572 + C25573 + C25574 + C25575) * C25414 +
            (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50696 * C50732) *
              C1027 +
          (((C25576 + C25577 + C25578 + C25579) * C50976 +
            (C25580 + C25581 + C25582 + C25583) * C50965 +
            (C25584 + C25585 + C25586 + C25587) * C25414) *
               C50696 * C50732 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
                C50976 +
            (C25886 + C25887 + C25888 + C25889) * C50965 +
            (C25890 + C25891 + C25892 + C25893) * C25414) *
               C50696 * C1025 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C25416 + C2487 * C25410 +
             C2486 * C25415) *
                C25414 +
            (C25893 + C25892 + C25891 + C25890) * C50965 +
            (C25889 + C25888 + C25887 + C25886) * C50976) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C25415 +
            (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
            C172 * C50637) *
               C50976 +
           (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
              C50696 * C1096 -
          (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
           (C25567 + C25566 + C25565 + C25564) * C50976) *
              C50696 * C1097 +
          (C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
           (C26495 + C26496 + C26497 + C26498) * C25414) *
              C50696 * C1098 -
          (((C117 * C9052 + C50822 * C9056) * C50637 +
            (C117 * C9050 + C50822 * C9053) * C25416 + C11438 * C25410 +
            C11437 * C25415) *
               C25414 +
           (C26498 + C26497 + C26496 + C26495) * C50965 + C26500 * C50976) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C25415 +
              (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
              C172 * C50637) *
                 C50976 +
             (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
                C1676 -
            (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
             (C529 * C50637 + C530 * C25416 +
              (C117 * C476 + C50822 * C493) * C25410 +
              (C117 * C463 + C50822 * C477) * C25415) *
                 C50976) *
                C50760) *
               C50928 +
           (((C26241 + C26240 + C26239 + C26238) * C50976 +
             (C26237 + C26236 + C26235 + C26234) * C50965 +
             (C27142 + C27143 + C27144 + C27145) * C25414) *
                C50760 -
            (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
             (C25567 + C25566 + C25565 + C25564) * C50976) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                 C50976 +
             (C26242 + C26243 + C26244 + C26245) * C50965 +
             (C26246 + C26247 + C26248 + C26249) * C25414) *
                C50760 -
            (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
             (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                 C50976) *
                C1676) *
               C50928 +
           (((C25576 + C25577 + C25578 + C25579) * C50976 +
             (C25580 + C25581 + C25582 + C25583) * C50965 +
             (C25584 + C25585 + C25586 + C25587) * C25414) *
                C1676 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C25416 + C8806 * C25410 +
              C8805 * C25415) *
                 C25414 +
             (C26249 + C26248 + C26247 + C26246) * C50965 +
             (C26245 + C26244 + C26243 + C26242) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50974 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C25415 +
             (C117 * C479 + C50822 * C494) * C25410 + C531 * C25416 +
             C532 * C50637) *
                C50976 +
            (C26647 + C26648 + C26649 + C26650) * C50965 +
            (C26651 + C26652 + C26653 + C26654) * C25414) *
               C2092) *
              C50928 +
          (((C26241 + C26240 + C26239 + C26238) * C50976 +
            (C26237 + C26236 + C26235 + C26234) * C50965 +
            (C27142 + C27143 + C27144 + C27145) * C25414) *
               C50975 -
           (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C50974 -
           (((C117 * C9219 + C50822 * C9223) * C50637 +
             (C117 * C9217 + C50822 * C9220) * C25416 + C11552 * C25410 +
             C11551 * C25415) *
                C25414 +
            (C26654 + C26653 + C26652 + C26651) * C50965 +
            (C26650 + C26649 + C26648 + C26647) * C50976) *
               C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C1676 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50760) *
              C278 +
          (((C26241 + C26240 + C26239 + C26238) * C50976 +
            (C26237 + C26236 + C26235 + C26234) * C50965 +
            (C27142 + C27143 + C27144 + C27145) * C25414) *
               C50760 -
           (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C1676) *
              C279 +
          ((C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
            (C26495 + C26496 + C26497 + C26498) * C25414) *
               C1676 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C25416 + C11892 * C25410 +
             C11891 * C25415) *
                C25414 +
            (C27145 + C27144 + C27143 + C27142) * C50965 + C27147 * C50976) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C1676 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                C50976 +
            (C26242 + C26243 + C26244 + C26245) * C50965 +
            (C26246 + C26247 + C26248 + C26249) * C25414) *
               C50760 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
                C50976 +
            (C25886 + C25887 + C25888 + C25889) * C50965 +
            (C25890 + C25891 + C25892 + C25893) * C25414) *
               C1676 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C25416 + C3169 * C25410 +
             C3168 * C25415) *
                C25414 +
            (C927 * C50637 + C926 * C25416 + C925 * C25410 + C924 * C25415) *
                C50965 +
            (C525 * C50637 + C526 * C25416 + C527 * C25410 + C528 * C25415) *
                C50976) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C25415 +
            (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
            C172 * C50637) *
               C50976 +
           (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
              C1842 -
          (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
           (C529 * C50637 + C530 * C25416 +
            (C117 * C476 + C50822 * C493) * C25410 +
            (C117 * C463 + C50822 * C477) * C25415) *
               C50976) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C25415 +
            (C117 * C479 + C50822 * C494) * C25410 + C531 * C25416 +
            C532 * C50637) *
               C50976 +
           (C26647 + C26648 + C26649 + C26650) * C50965 +
           (C26651 + C26652 + C26653 + C26654) * C25414) *
              C1844 -
          (((C117 * C10138 + C50822 * C10142) * C50637 +
            (C117 * C10136 + C50822 * C10139) * C25416 +
            (C117 * C10140 + C50822 * C10143) * C25410 +
            (C117 * C10137 + C50822 * C10141) * C25415) *
               C25414 +
           ((C117 * C4514 + C50822 * C4519) * C50637 +
            (C117 * C4510 + C50822 * C4515) * C25416 +
            (C117 * C4516 + C50822 * C4520) * C25410 +
            (C117 * C4511 + C50822 * C4517) * C25415) *
               C50965 +
           ((C117 * C1854 + C50822 * C1860) * C50637 +
            (C117 * C1848 + C50822 * C1855) * C25416 +
            (C117 * C1856 + C50822 * C1861) * C25410 +
            (C117 * C1849 + C50822 * C1857) * C25415) *
               C50976) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C50974 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C25415 +
             (C117 * C479 + C50822 * C494) * C25410 + C531 * C25416 +
             C532 * C50637) *
                C50976 +
            (C26647 + C26648 + C26649 + C26650) * C50965 +
            (C26651 + C26652 + C26653 + C26654) * C25414) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                C50976 +
            (C26242 + C26243 + C26244 + C26245) * C50965 +
            (C26246 + C26247 + C26248 + C26249) * C25414) *
               C50975 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C50974 -
           (((C117 * C3588 + C50822 * C3594) * C50637 +
             (C117 * C3585 + C50822 * C3589) * C25416 + C8290 * C25410 +
             C8289 * C25415) *
                C25414 +
            (C2649 * C50637 + C2648 * C25416 + C2647 * C25410 +
             C2646 * C25415) *
                C50965 +
            (C534 * C50637 + C533 * C25416 + C532 * C25410 + C531 * C25415) *
                C50976) *
               C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C1676 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C25415 + C529 * C25410 + C528 * C25416 + C527 * C50637) *
                C50976 +
            (C26242 + C26243 + C26244 + C26245) * C50965 +
            (C26246 + C26247 + C26248 + C26249) * C25414) *
               C50760 -
           (C25593 * C25414 + (C25579 + C25578 + C25577 + C25576) * C50965 +
            (C174 * C50637 + C173 * C25416 + C172 * C25410 + C171 * C25415) *
                C50976) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C25415 + C174 * C25410 + C175 * C25416 + C176 * C50637) *
                C50976 +
            (C25886 + C25887 + C25888 + C25889) * C50965 +
            (C25890 + C25891 + C25892 + C25893) * C25414) *
               C1676 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C25416 + C3169 * C25410 +
             C3168 * C25415) *
                C25414 +
            (C927 * C50637 + C926 * C25416 + C925 * C25410 + C924 * C25415) *
                C50965 +
            (C525 * C50637 + C526 * C25416 + C527 * C25410 + C528 * C25415) *
                C50976) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C25415 +
             (C117 * C130 + C50822 * C143) * C25410 + C171 * C25416 +
             C172 * C50637) *
                C50976 +
            (C25564 + C25565 + C25566 + C25567) * C50965 + C25592 * C25414) *
               C1676 -
           (C27147 * C25414 + (C26238 + C26239 + C26240 + C26241) * C50965 +
            (C529 * C50637 + C530 * C25416 +
             (C117 * C476 + C50822 * C493) * C25410 +
             (C117 * C463 + C50822 * C477) * C25415) *
                C50976) *
               C50760) *
              C278 +
          (((C26241 + C26240 + C26239 + C26238) * C50976 +
            (C26237 + C26236 + C26235 + C26234) * C50965 +
            (C27142 + C27143 + C27144 + C27145) * C25414) *
               C50760 -
           (C26500 * C25414 + (C25571 + C25570 + C25569 + C25568) * C50965 +
            (C25567 + C25566 + C25565 + C25564) * C50976) *
               C1676) *
              C279 +
          ((C25592 * C50976 + (C25575 + C25574 + C25573 + C25572) * C50965 +
            (C26495 + C26496 + C26497 + C26498) * C25414) *
               C1676 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C25416 + C11892 * C25410 +
             C11891 * C25415) *
                C25414 +
            (C27145 + C27144 + C27143 + C27142) * C50965 + C27147 * C50976) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50696 * C50928 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50696 * C50732) *
              C50970 +
          (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
             C28755 * C50637) *
                C22717 +
            (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
             (C5354 + C5355) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50696 * C50928) *
              C50971 +
          (((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
             (C5151 + C5150) * C50637) *
                C22717 +
            (C28754 * C25415 + C28755 * C25410 + (C5706 + C5707) * C25416 +
             (C5708 + C5709) * C50637) *
                C50810) *
               C50696 * C50928 -
           (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                 C50637 +
             (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                 C25416 +
             (C5355 + C5354) * C25410 + (C5353 + C5352) * C25415) *
                C50810 +
            ((C5709 + C5708) * C50637 + (C5707 + C5706) * C25416 +
             C5696 * C25410 + C5697 * C25415) *
                C22717) *
               C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C25415 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C25410 +
              (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                 C22717 +
             ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
              C28348 * C25416 + C28349 * C50637) *
                 C50810) *
                C50929 -
            ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
              (C13451 + C13452) * C25415) *
                 C50810 +
             ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
              (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C25410 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C25415) *
                 C22717) *
                C50760) *
               C50928 +
           ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
              C29210 * C25416 + C29211 * C50637) *
                 C22717 +
             ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
              (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                 C50810) *
                C50760 -
            ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
              (C12770 + C12769) * C25415) *
                 C50810 +
             (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
              (C12766 + C12765) * C25415) *
                 C22717) *
                C50929) *
               C50732) *
              C281 +
          (((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
              (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                 C22717 +
             (C29210 * C25415 + C29211 * C25410 + (C6084 + C6085) * C25416 +
              (C6086 + C6087) * C50637) *
                 C50810) *
                C50760 -
            ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
              C28351 * C25415) *
                 C50810 +
             ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
              (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                 C22717) *
                C50929) *
               C50928 +
           (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
              C28755 * C50637) *
                 C22717 +
             (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
              (C5354 + C5355) * C50637) *
                 C50810) *
                C50929 -
            (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 +
               C50940 * C1575) *
                  C50637 +
              (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 +
               C50940 * C1569) *
                  C25416 +
              (C13456 + C13455) * C25410 + (C13454 + C13453) * C25415) *
                 C50810 +
             ((C6087 + C6086) * C50637 + (C6085 + C6084) * C25416 +
              C29208 * C25410 + C29209 * C25415) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50696 * C278 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50696 * C279 +
           ((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
             C28353 * C50637) *
                C22717 +
            ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
             (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C28348 * C25415 + C28349 * C25410 + (C5343 + C5342) * C25416 +
             (C5341 + C5340) * C50637) *
                C22717 +
            (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
             (C5354 + C5355) * C50637) *
                C50810) *
               C50696 * C279 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50696 * C278 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50637 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C25416 +
             (C12780 + C12779) * C25410 + (C12778 + C12777) * C25415) *
                C50810 +
            ((C5355 + C5354) * C50637 + (C5353 + C5352) * C25416 +
             C12763 * C25410 + C12764 * C25415) *
                C22717) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C25415 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C25410 +
            (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
               C22717 +
           ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
            (C5347 + C5346) * C25416 + (C5345 + C5344) * C50637) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C5696 * C50637 + C5697 * C25416 + (C5344 + C5345) * C25410 +
            (C5346 + C5347) * C25415) *
               C50810 +
           ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
            (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
               C22717) *
              C50696 * C50680 * C114 +
          ((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
            (C5151 + C5150) * C50637) *
               C22717 +
           ((C5343 + C5342) * C25415 + (C5341 + C5340) * C25410 +
            (C5706 + C5707) * C25416 + (C5708 + C5709) * C50637) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C50637 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C25416 +
            (C5709 + C5708) * C25410 + (C5707 + C5706) * C25415) *
               C50810 +
           ((C5157 + C5156) * C50637 + (C5155 + C5154) * C25416 +
            C5160 * C25410 + C5161 * C25415) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C457 -
           (((C6083 + C6082) * C50637 + (C6081 + C6080) * C25416 +
             (C13449 + C13450) * C25410 + (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C458 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C25415 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C25410 +
             (C5542 + C5543) * C25416 + (C5544 + C5545) * C50637) *
                C22717 +
            ((C13880 + C13881) * C25415 + (C13882 + C13883) * C25410 +
             (C28556 + C28557) * C25416 + (C28558 + C28559) * C50637) *
                C50810) *
               C459) *
              C50680 * C281 +
          ((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
             (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                C22717 +
            ((C6080 + C6081) * C25415 + (C6082 + C6083) * C25410 +
             (C6084 + C6085) * C25416 + (C6086 + C6087) * C50637) *
                C50810) *
               C458 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C457 -
           (((C5108 * C4512 + C50834 * C4518 + C5107 * C1221 + C50940 * C1228) *
                 C50637 +
             (C5108 * C4509 + C50834 * C4513 + C5107 * C1216 + C50940 * C1222) *
                 C25416 +
             (C28559 + C28558) * C25410 + (C28557 + C28556) * C25415) *
                C50810 +
            ((C5549 + C5548) * C50637 + (C5547 + C5546) * C25416 +
             (C5545 + C5544) * C25410 + (C5543 + C5542) * C25415) *
                C22717) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50929 -
           (((C6083 + C6082) * C50637 + (C6081 + C6080) * C25416 +
             (C13449 + C13450) * C25410 + (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50760) *
              C50680 * C50970 +
          ((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
             (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                C22717 +
            ((C6080 + C6081) * C25415 + (C6082 + C6083) * C25410 +
             (C6084 + C6085) * C25416 + (C6086 + C6087) * C50637) *
                C50810) *
               C50760 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50929) *
              C50680 * C50971 +
          (((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
             (C5151 + C5150) * C50637) *
                C22717 +
            (C28754 * C25415 + C28755 * C25410 + (C5706 + C5707) * C25416 +
             (C5708 + C5709) * C50637) *
                C50810) *
               C50929 -
           (((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C50637 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C25416 +
             (C6087 + C6086) * C25410 + (C6085 + C6084) * C25415) *
                C50810 +
            ((C5869 + C5868) * C50637 + (C5867 + C5866) * C25416 +
             C5856 * C25410 + C5857 * C25415) *
                C22717) *
               C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C25415 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C25410 +
            (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
               C22717 +
           ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
            (C5347 + C5346) * C25416 + (C5345 + C5344) * C50637) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C5696 * C50637 + C5697 * C25416 + (C5344 + C5345) * C25410 +
            (C5346 + C5347) * C25415) *
               C50810 +
           ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
            (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
               C22717) *
              C50696 * C50680 * C114 +
          ((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
            (C5151 + C5150) * C50637) *
               C22717 +
           ((C5343 + C5342) * C25415 + (C5341 + C5340) * C25410 +
            (C5706 + C5707) * C25416 + (C5708 + C5709) * C50637) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C50637 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C25416 +
            (C5709 + C5708) * C25410 + (C5707 + C5706) * C25415) *
               C50810 +
           ((C5157 + C5156) * C50637 + (C5155 + C5154) * C25416 +
            C5160 * C25410 + C5161 * C25415) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50696 * C278 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50696 * C279 +
           ((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
             C28353 * C50637) *
                C22717 +
            ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
             (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C28348 * C25415 + C28349 * C25410 + (C5343 + C5342) * C25416 +
             (C5341 + C5340) * C50637) *
                C22717 +
            (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
             (C5354 + C5355) * C50637) *
                C50810) *
               C50696 * C279 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50696 * C278 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50637 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C25416 +
             (C12780 + C12779) * C25410 + (C12778 + C12777) * C25415) *
                C50810 +
            ((C5355 + C5354) * C50637 + (C5353 + C5352) * C25416 +
             C12763 * C25410 + C12764 * C25415) *
                C22717) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50696 * C50972 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50696 * C50973 +
           ((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
             C28353 * C50637) *
                C22717 +
            ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
             (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
                C50810) *
               C50696 * C1331) *
              C50920 +
          (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
             C28755 * C50637) *
                C22717 +
            (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
             (C5354 + C5355) * C50637) *
                C50810) *
               C50696 * C50973 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50696 * C50972 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50637 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C25416 +
             (C12780 + C12779) * C25410 + (C12778 + C12777) * C25415) *
                C50810 +
            ((C5355 + C5354) * C50637 + (C5353 + C5352) * C25416 +
             C12763 * C25410 + C12764 * C25415) *
                C22717) *
               C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50929 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50760) *
              C50972 +
          ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
             C29210 * C25416 + C29211 * C50637) *
                C22717 +
            ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
             (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                C50810) *
               C50760 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50929) *
              C50973 +
          (((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
             C28353 * C50637) *
                C22717 +
            ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
             (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
                C50810) *
               C50929 -
           (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 + C50940 * C4105) *
                 C50637 +
             (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 + C50940 * C4101) *
                 C25416 +
             (C14389 + C14388) * C25410 + (C14387 + C14386) * C25415) *
                C50810 +
            ((C13456 + C13455) * C50637 + (C13454 + C13453) * C25416 +
             C14374 * C25410 + C14375 * C25415) *
                C22717) *
               C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C25415 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C25410 +
            (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
               C22717 +
           ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
            C28348 * C25416 + C28349 * C50637) *
               C50810) *
              C50696 * C1096 -
          ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
            (C12770 + C12769) * C25415) *
               C50810 +
           (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
            (C12766 + C12765) * C25415) *
               C22717) *
              C50696 * C1097 +
          ((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
            C28353 * C50637) *
               C22717 +
           ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
            (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
               C50810) *
              C50696 * C1098 -
          (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                C50637 +
            (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                C25416 +
            (C13716 + C13715) * C25410 + (C13714 + C13713) * C25415) *
               C50810 +
           ((C12780 + C12779) * C50637 + (C12778 + C12777) * C25416 +
            C13701 * C25410 + C13702 * C25415) *
               C22717) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50696 * C1025 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50696 * C50732) *
              C1027 +
          (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
             C28755 * C50637) *
                C22717 +
            (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
             (C5354 + C5355) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50696 * C1025) *
              C1028 +
          (((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
             (C5151 + C5150) * C50637) *
                C22717 +
            (C28754 * C25415 + C28755 * C25410 + (C5706 + C5707) * C25416 +
             (C5708 + C5709) * C50637) *
                C50810) *
               C50696 * C1025 -
           (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                 C50637 +
             (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                 C25416 +
             (C5355 + C5354) * C25410 + (C5353 + C5352) * C25415) *
                C50810 +
            ((C5709 + C5708) * C50637 + (C5707 + C5706) * C25416 +
             C5696 * C25410 + C5697 * C25415) *
                C22717) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C457 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C458 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C25415 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C25410 +
             (C5542 + C5543) * C25416 + (C5544 + C5545) * C50637) *
                C22717 +
            ((C13880 + C13881) * C25415 + (C13882 + C13883) * C25410 +
             (C28556 + C28557) * C25416 + (C28558 + C28559) * C50637) *
                C50810) *
               C459) *
              C1025 +
          ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
             C29210 * C25416 + C29211 * C50637) *
                C22717 +
            ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
             (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                C50810) *
               C458 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C457 -
           (((C5108 * C10138 + C50834 * C10142 + C5107 * C3590 +
              C50940 * C3595) *
                 C50637 +
             (C5108 * C10136 + C50834 * C10139 + C5107 * C3586 +
              C50940 * C3591) *
                 C25416 +
             (C13887 + C13886) * C25410 + (C13885 + C13884) * C25415) *
                C50810 +
            ((C28559 + C28558) * C50637 + (C28557 + C28556) * C25416 +
             (C13883 + C13882) * C25410 + (C13881 + C13880) * C25415) *
                C22717) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C25415 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C25410 +
              (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                 C22717 +
             ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
              C28348 * C25416 + C28349 * C50637) *
                 C50810) *
                C50929 -
            ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
              (C13451 + C13452) * C25415) *
                 C50810 +
             ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
              (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C25410 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C25415) *
                 C22717) *
                C50760) *
               C1025 +
           ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
              C29210 * C25416 + C29211 * C50637) *
                 C22717 +
             ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
              (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                 C50810) *
                C50760 -
            ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
              (C12770 + C12769) * C25415) *
                 C50810 +
             (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
              (C12766 + C12765) * C25415) *
                 C22717) *
                C50929) *
               C50732) *
              C50920 +
          (((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
              (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                 C22717 +
             (C29210 * C25415 + C29211 * C25410 + (C6084 + C6085) * C25416 +
              (C6086 + C6087) * C50637) *
                 C50810) *
                C50760 -
            ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
              C28351 * C25415) *
                 C50810 +
             ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
              (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                 C22717) *
                C50929) *
               C1025 +
           (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
              C28755 * C50637) *
                 C22717 +
             (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
              (C5354 + C5355) * C50637) *
                 C50810) *
                C50929 -
            (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 +
               C50940 * C1575) *
                  C50637 +
              (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 +
               C50940 * C1569) *
                  C25416 +
              (C13456 + C13455) * C25410 + (C13454 + C13453) * C25415) *
                 C50810 +
             ((C6087 + C6086) * C50637 + (C6085 + C6084) * C25416 +
              C29208 * C25410 + C29209 * C25415) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50696 * C1025 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50696 * C50732) *
              C1027 +
          (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
             C28755 * C50637) *
                C22717 +
            (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
             (C5354 + C5355) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50696 * C1025) *
              C1028 +
          (((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
             (C5151 + C5150) * C50637) *
                C22717 +
            (C28754 * C25415 + C28755 * C25410 + (C5706 + C5707) * C25416 +
             (C5708 + C5709) * C50637) *
                C50810) *
               C50696 * C1025 -
           (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                 C50637 +
             (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                 C25416 +
             (C5355 + C5354) * C25410 + (C5353 + C5352) * C25415) *
                C50810 +
            ((C5709 + C5708) * C50637 + (C5707 + C5706) * C25416 +
             C5696 * C25410 + C5697 * C25415) *
                C22717) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C25415 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C25410 +
            (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
               C22717 +
           ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
            C28348 * C25416 + C28349 * C50637) *
               C50810) *
              C50696 * C1096 -
          ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
            (C12770 + C12769) * C25415) *
               C50810 +
           (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
            (C12766 + C12765) * C25415) *
               C22717) *
              C50696 * C1097 +
          ((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
            C28353 * C50637) *
               C22717 +
           ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
            (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
               C50810) *
              C50696 * C1098 -
          (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                C50637 +
            (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                C25416 +
            (C13716 + C13715) * C25410 + (C13714 + C13713) * C25415) *
               C50810 +
           ((C12780 + C12779) * C50637 + (C12778 + C12777) * C25416 +
            C13701 * C25410 + C13702 * C25415) *
               C22717) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C25415 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C25410 +
              (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                 C22717 +
             ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
              C28348 * C25416 + C28349 * C50637) *
                 C50810) *
                C1676 -
            ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
              (C13451 + C13452) * C25415) *
                 C50810 +
             ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
              (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C25410 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C25415) *
                 C22717) *
                C50760) *
               C50928 +
           ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
              C29210 * C25416 + C29211 * C50637) *
                 C22717 +
             ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
              (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                 C50810) *
                C50760 -
            ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
              (C12770 + C12769) * C25415) *
                 C50810 +
             (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
              (C12766 + C12765) * C25415) *
                 C22717) *
                C1676) *
               C50732) *
              C50920 +
          (((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
              (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                 C22717 +
             (C29210 * C25415 + C29211 * C25410 + (C6084 + C6085) * C25416 +
              (C6086 + C6087) * C50637) *
                 C50810) *
                C50760 -
            ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
              C28351 * C25415) *
                 C50810 +
             ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
              (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                 C22717) *
                C1676) *
               C50928 +
           (((C28348 * C25415 + C28349 * C25410 + C28754 * C25416 +
              C28755 * C50637) *
                 C22717 +
             (C28352 * C25415 + C28353 * C25410 + (C5352 + C5353) * C25416 +
              (C5354 + C5355) * C50637) *
                 C50810) *
                C1676 -
            (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 +
               C50940 * C1575) *
                  C50637 +
              (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 +
               C50940 * C1569) *
                  C25416 +
              (C13456 + C13455) * C25410 + (C13454 + C13453) * C25415) *
                 C50810 +
             ((C6087 + C6086) * C50637 + (C6085 + C6084) * C25416 +
              C29208 * C25410 + C29209 * C25415) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50974 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50975 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C25415 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C25410 +
             (C5542 + C5543) * C25416 + (C5544 + C5545) * C50637) *
                C22717 +
            ((C13880 + C13881) * C25415 + (C13882 + C13883) * C25410 +
             (C28556 + C28557) * C25416 + (C28558 + C28559) * C50637) *
                C50810) *
               C2092) *
              C50928 +
          ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
             C29210 * C25416 + C29211 * C50637) *
                C22717 +
            ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
             (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                C50810) *
               C50975 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C50974 -
           (((C5108 * C10138 + C50834 * C10142 + C5107 * C3590 +
              C50940 * C3595) *
                 C50637 +
             (C5108 * C10136 + C50834 * C10139 + C5107 * C3586 +
              C50940 * C3591) *
                 C25416 +
             (C13887 + C13886) * C25410 + (C13885 + C13884) * C25415) *
                C50810 +
            ((C28559 + C28558) * C50637 + (C28557 + C28556) * C25416 +
             (C13883 + C13882) * C25410 + (C13881 + C13880) * C25415) *
                C22717) *
               C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C1676 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50760) *
              C278 +
          ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
             C29210 * C25416 + C29211 * C50637) *
                C22717 +
            ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
             (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                C50810) *
               C50760 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C1676) *
              C279 +
          (((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
             C28353 * C50637) *
                C22717 +
            ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
             (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
                C50810) *
               C1676 -
           (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 + C50940 * C4105) *
                 C50637 +
             (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 + C50940 * C4101) *
                 C25416 +
             (C14389 + C14388) * C25410 + (C14387 + C14386) * C25415) *
                C50810 +
            ((C13456 + C13455) * C50637 + (C13454 + C13453) * C25416 +
             C14374 * C25410 + C14375 * C25415) *
                C22717) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C1676 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50760) *
              C50680 * C1027 +
          ((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
             (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                C22717 +
            (C29210 * C25415 + C29211 * C25410 + (C6084 + C6085) * C25416 +
             (C6086 + C6087) * C50637) *
                C50810) *
               C50760 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C1676) *
              C50680 * C1028 +
          (((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
             (C5151 + C5150) * C50637) *
                C22717 +
            (C28754 * C25415 + C28755 * C25410 + (C5706 + C5707) * C25416 +
             (C5708 + C5709) * C50637) *
                C50810) *
               C1676 -
           (((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C50637 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C25416 +
             (C6087 + C6086) * C25410 + (C6085 + C6084) * C25415) *
                C50810 +
            ((C5869 + C5868) * C50637 + (C5867 + C5866) * C25416 +
             C5856 * C25410 + C5857 * C25415) *
                C22717) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C25415 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C25410 +
            (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
               C22717 +
           ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
            C28348 * C25416 + C28349 * C50637) *
               C50810) *
              C1842 -
          ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
            (C13451 + C13452) * C25415) *
               C50810 +
           ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C25410 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C25415) *
               C22717) *
              C1843 +
          (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C25415 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C25410 +
            (C5542 + C5543) * C25416 + (C5544 + C5545) * C50637) *
               C22717 +
           ((C13880 + C13881) * C25415 + (C13882 + C13883) * C25410 +
            (C28556 + C28557) * C25416 + (C28558 + C28559) * C50637) *
               C50810) *
              C1844 -
          (((C5108 * C16727 + C50834 * C16729 + C5107 * C4514 +
             C50940 * C4519) *
                C50637 +
            (C5108 * C16726 + C50834 * C16728 + C5107 * C4510 +
             C50940 * C4515) *
                C25416 +
            (C5108 * C14784 + C50834 * C14787 + C5107 * C4516 +
             C50940 * C4520) *
                C25410 +
            (C5108 * C14781 + C50834 * C14785 + C5107 * C4511 +
             C50940 * C4517) *
                C25415) *
               C50810 +
           ((C5108 * C7358 + C50834 * C7363 + C5107 * C1854 + C50940 * C1860) *
                C50637 +
            (C5108 * C7354 + C50834 * C7359 + C5107 * C1848 + C50940 * C1855) *
                C25416 +
            (C5108 * C7360 + C50834 * C7364 + C5107 * C1856 + C50940 * C1861) *
                C25410 +
            (C5108 * C7355 + C50834 * C7361 + C5107 * C1849 + C50940 * C1857) *
                C25415) *
               C22717) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C50974 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50975 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C25415 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C25410 +
             (C5542 + C5543) * C25416 + (C5544 + C5545) * C50637) *
                C22717 +
            ((C13880 + C13881) * C25415 + (C13882 + C13883) * C25410 +
             (C28556 + C28557) * C25416 + (C28558 + C28559) * C50637) *
                C50810) *
               C2092) *
              C50680 * C50920 +
          ((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
             (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                C22717 +
            (C29210 * C25415 + C29211 * C25410 + (C6084 + C6085) * C25416 +
             (C6086 + C6087) * C50637) *
                C50810) *
               C50975 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C50974 -
           (((C5108 * C4512 + C50834 * C4518 + C5107 * C1221 + C50940 * C1228) *
                 C50637 +
             (C5108 * C4509 + C50834 * C4513 + C5107 * C1216 + C50940 * C1222) *
                 C25416 +
             (C28559 + C28558) * C25410 + (C28557 + C28556) * C25415) *
                C50810 +
            ((C5549 + C5548) * C50637 + (C5547 + C5546) * C25416 +
             (C5545 + C5544) * C25410 + (C5543 + C5542) * C25415) *
                C22717) *
               C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C1676 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50760) *
              C50680 * C1027 +
          ((((C5541 + C5540) * C25415 + (C5539 + C5538) * C25410 +
             (C5537 + C5536) * C25416 + (C5535 + C5534) * C50637) *
                C22717 +
            (C29210 * C25415 + C29211 * C25410 + (C6084 + C6085) * C25416 +
             (C6086 + C6087) * C50637) *
                C50810) *
               C50760 -
           ((C5696 * C50637 + C5697 * C25416 + C28350 * C25410 +
             C28351 * C25415) *
                C50810 +
            ((C5149 + C5148) * C50637 + (C5147 + C5146) * C25416 +
             (C5145 + C5144) * C25410 + (C5143 + C5142) * C25415) *
                C22717) *
               C1676) *
              C50680 * C1028 +
          (((C5158 * C25415 + C5159 * C25410 + (C5153 + C5152) * C25416 +
             (C5151 + C5150) * C50637) *
                C22717 +
            (C28754 * C25415 + C28755 * C25410 + (C5706 + C5707) * C25416 +
             (C5708 + C5709) * C50637) *
                C50810) *
               C1676 -
           (((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C50637 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C25416 +
             (C6087 + C6086) * C25410 + (C6085 + C6084) * C25415) *
                C50810 +
            ((C5869 + C5868) * C50637 + (C5867 + C5866) * C25416 +
             C5856 * C25410 + C5857 * C25415) *
                C22717) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C25415 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C25410 +
             (C5142 + C5143) * C25416 + (C5144 + C5145) * C50637) *
                C22717 +
            ((C12765 + C12766) * C25415 + (C12767 + C12768) * C25410 +
             C28348 * C25416 + C28349 * C50637) *
                C50810) *
               C1676 -
           ((C29208 * C50637 + C29209 * C25416 + (C13449 + C13450) * C25410 +
             (C13451 + C13452) * C25415) *
                C50810 +
            ((C5538 + C5539) * C50637 + (C5540 + C5541) * C25416 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C25410 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C25415) *
                C22717) *
               C50760) *
              C278 +
          ((((C13452 + C13451) * C25415 + (C13450 + C13449) * C25410 +
             C29210 * C25416 + C29211 * C50637) *
                C22717 +
            ((C13448 + C13447) * C25415 + (C13446 + C13445) * C25410 +
             (C13453 + C13454) * C25416 + (C13455 + C13456) * C50637) *
                C50810) *
               C50760 -
           ((C12763 * C50637 + C12764 * C25416 + (C12772 + C12771) * C25410 +
             (C12770 + C12769) * C25415) *
                C50810 +
            (C28350 * C50637 + C28351 * C25416 + (C12768 + C12767) * C25410 +
             (C12766 + C12765) * C25415) *
                C22717) *
               C1676) *
              C279 +
          (((C12783 * C25415 + C12784 * C25410 + C28352 * C25416 +
             C28353 * C50637) *
                C22717 +
            ((C12776 + C12775) * C25415 + (C12774 + C12773) * C25410 +
             (C12777 + C12778) * C25416 + (C12779 + C12780) * C50637) *
                C50810) *
               C1676 -
           (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 + C50940 * C4105) *
                 C50637 +
             (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 + C50940 * C4101) *
                 C25416 +
             (C14389 + C14388) * C25410 + (C14387 + C14386) * C25415) *
                C50810 +
            ((C13456 + C13455) * C50637 + (C13454 + C13453) * C25416 +
             C14374 * C25410 + C14375 * C25415) *
                C22717) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50696 * C50928 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50696 * C50732) *
              C50970 +
          (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
             C35141 * C50637) *
                C22717 +
            (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50696 * C50928) *
              C50971 +
          (((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
             (C31683 + C31682) * C50637) *
                C22717 +
            (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50696 * C50928 -
           (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                 C50637 +
             (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                 C49742 +
             (C31887 + C31886) * C50911 + (C31885 + C31884) * C49749) *
                C50810 +
            ((C32241 + C32240) * C50637 + (C32239 + C32238) * C49742 +
             C32228 * C50911 + C32229 * C49749) *
                C22717) *
               C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C49749 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C50911 +
              (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                 C22717 +
             ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
              C34704 * C49742 + C34705 * C50637) *
                 C50810) *
                C50929 -
            ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
              (C35616 + C35617) * C49749) *
                 C50810 +
             ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
              (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C50911 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C49749) *
                 C22717) *
                C50760) *
               C50928 +
           ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
              C35604 * C49742 + C35605 * C50637) *
                 C22717 +
             ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
              (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                 C50810) *
                C50760 -
            ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
              (C34734 + C34735) * C49749) *
                 C50810 +
             (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
              (C34729 + C34728) * C49749) *
                 C22717) *
                C50929) *
               C50732) *
              C281 +
          (((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
              (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                 C22717 +
             (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
              (C32618 + C32619) * C50637) *
                 C50810) *
                C50760 -
            ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
              C34717 * C49749) *
                 C50810 +
             ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
              (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                 C22717) *
                C50929) *
               C50928 +
           (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
              C35141 * C50637) *
                 C22717 +
             (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
              (C31886 + C31887) * C50637) *
                 C50810) *
                C50929 -
            (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
               C31637 * C1575) *
                  C50637 +
              (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
               C31637 * C1569) *
                  C49742 +
              (C35621 + C35620) * C50911 + (C35619 + C35618) * C49749) *
                 C50810 +
             ((C32619 + C32618) * C50637 + (C32617 + C32616) * C49742 +
              C35594 * C50911 + C35595 * C49749) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50696 * C278 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50696 * C279 +
           (((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
             C34718 * C49742 + C34719 * C50637) *
                C22717 +
            ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
             (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
             C35141 * C50637) *
                C22717 +
            (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C279 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50696 * C278 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50637 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C49742 +
             (C34739 + C34738) * C50911 + (C34737 + C34736) * C49749) *
                C50810 +
            ((C31887 + C31886) * C50637 + (C31885 + C31884) * C49742 +
             C34706 * C50911 + C34707 * C49749) *
                C22717) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C49749 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50911 +
            (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
               C22717 +
           ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
            C34704 * C49742 + C34705 * C50637) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
            C34717 * C49749) *
               C50810 +
           ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
            (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
               C22717) *
              C50696 * C50680 * C114 +
          ((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
            (C31683 + C31682) * C50637) *
               C22717 +
           (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
            (C32240 + C32241) * C50637) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C50637 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C49742 +
            (C32241 + C32240) * C50911 + (C32239 + C32238) * C49749) *
               C50810 +
           ((C31689 + C31688) * C50637 + (C31687 + C31686) * C49742 +
            C31692 * C50911 + C31693 * C49749) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C457 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C458 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C49749 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50911 +
             (C32074 + C32075) * C49742 + (C32076 + C32077) * C50637) *
                C22717 +
            ((C36160 + C36161) * C49749 + (C36162 + C36163) * C50911 +
             (C34942 + C34943) * C49742 + (C34944 + C34945) * C50637) *
                C50810) *
               C459) *
              C50680 * C281 +
          ((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
             (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                C22717 +
            (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C458 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C457 -
           (((C31640 * C4512 + C50834 * C4518 + C31639 * C1221 +
              C31637 * C1228) *
                 C50637 +
             (C31640 * C4509 + C50834 * C4513 + C31639 * C1216 +
              C31637 * C1222) *
                 C49742 +
             (C34945 + C34944) * C50911 + (C34943 + C34942) * C49749) *
                C50810 +
            ((C32081 + C32080) * C50637 + (C32079 + C32078) * C49742 +
             (C32077 + C32076) * C50911 + (C32075 + C32074) * C49749) *
                C22717) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50929 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50760) *
              C50680 * C50970 +
          ((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
             (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                C22717 +
            (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50760 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50929) *
              C50680 * C50971 +
          (((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
             (C31683 + C31682) * C50637) *
                C22717 +
            (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50929 -
           (((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C50637 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C49742 +
             (C32619 + C32618) * C50911 + (C32617 + C32616) * C49749) *
                C50810 +
            ((C32401 + C32400) * C50637 + (C32399 + C32398) * C49742 +
             C32388 * C50911 + C32389 * C49749) *
                C22717) *
               C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C49749 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50911 +
            (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
               C22717 +
           ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
            C34704 * C49742 + C34705 * C50637) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
            C34717 * C49749) *
               C50810 +
           ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
            (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
               C22717) *
              C50696 * C50680 * C114 +
          ((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
            (C31683 + C31682) * C50637) *
               C22717 +
           (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
            (C32240 + C32241) * C50637) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C50637 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C49742 +
            (C32241 + C32240) * C50911 + (C32239 + C32238) * C49749) *
               C50810 +
           ((C31689 + C31688) * C50637 + (C31687 + C31686) * C49742 +
            C31692 * C50911 + C31693 * C49749) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50696 * C278 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50696 * C279 +
           (((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
             C34718 * C49742 + C34719 * C50637) *
                C22717 +
            ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
             (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
             C35141 * C50637) *
                C22717 +
            (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C279 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50696 * C278 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50637 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C49742 +
             (C34739 + C34738) * C50911 + (C34737 + C34736) * C49749) *
                C50810 +
            ((C31887 + C31886) * C50637 + (C31885 + C31884) * C49742 +
             C34706 * C50911 + C34707 * C49749) *
                C22717) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50696 * C50972 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50696 * C50973 +
           (((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
             C34718 * C49742 + C34719 * C50637) *
                C22717 +
            ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
             (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
                C50810) *
               C50696 * C1331) *
              C50920 +
          (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
             C35141 * C50637) *
                C22717 +
            (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50973 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50696 * C50972 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50637 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C49742 +
             (C34739 + C34738) * C50911 + (C34737 + C34736) * C49749) *
                C50810 +
            ((C31887 + C31886) * C50637 + (C31885 + C31884) * C49742 +
             C34706 * C50911 + C34707 * C49749) *
                C22717) *
               C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50929 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50760) *
              C50972 +
          ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
             C35604 * C49742 + C35605 * C50637) *
                C22717 +
            ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
             (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                C50810) *
               C50760 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50929) *
              C50973 +
          ((((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
             C34718 * C49742 + C34719 * C50637) *
                C22717 +
            ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
             (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
                C50810) *
               C50929 -
           (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
              C31637 * C4105) *
                 C50637 +
             (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
              C31637 * C4101) *
                 C49742 +
             (C31640 * C9221 + C50834 * C9224 + C31639 * C4102 +
              C31637 * C4106) *
                 C50911 +
             (C31640 * C9218 + C50834 * C9222 + C31639 * C4097 +
              C31637 * C4103) *
                 C49749) *
                C50810 +
            ((C35621 + C35620) * C50637 + (C35619 + C35618) * C49742 +
             (C36821 + C36820) * C50911 + (C36819 + C36818) * C49749) *
                C22717) *
               C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C49749 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50911 +
            (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
               C22717 +
           ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
            C34704 * C49742 + C34705 * C50637) *
               C50810) *
              C50696 * C1096 -
          ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
            (C34734 + C34735) * C49749) *
               C50810 +
           (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
            (C34729 + C34728) * C49749) *
               C22717) *
              C50696 * C1097 +
          (((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
            C34718 * C49742 + C34719 * C50637) *
               C22717 +
           ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
            (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
               C50810) *
              C50696 * C1098 -
          (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
             C31637 * C3425) *
                C50637 +
            (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
             C31637 * C3421) *
                C49742 +
            (C31640 * C9729 + C50834 * C9732 + C31639 * C3422 +
             C31637 * C3426) *
                C50911 +
            (C31640 * C9726 + C50834 * C9730 + C31639 * C3417 +
             C31637 * C3423) *
                C49749) *
               C50810 +
           ((C34739 + C34738) * C50637 + (C34737 + C34736) * C49742 +
            (C35957 + C35956) * C50911 + (C35955 + C35954) * C49749) *
               C22717) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50696 * C1025 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50696 * C50732) *
              C1027 +
          (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
             C35141 * C50637) *
                C22717 +
            (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50696 * C1025) *
              C1028 +
          (((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
             (C31683 + C31682) * C50637) *
                C22717 +
            (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50696 * C1025 -
           (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                 C50637 +
             (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                 C49742 +
             (C31887 + C31886) * C50911 + (C31885 + C31884) * C49749) *
                C50810 +
            ((C32241 + C32240) * C50637 + (C32239 + C32238) * C49742 +
             C32228 * C50911 + C32229 * C49749) *
                C22717) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C457 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C458 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C49749 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50911 +
             (C32074 + C32075) * C49742 + (C32076 + C32077) * C50637) *
                C22717 +
            ((C36160 + C36161) * C49749 + (C36162 + C36163) * C50911 +
             (C34942 + C34943) * C49742 + (C34944 + C34945) * C50637) *
                C50810) *
               C459) *
              C1025 +
          ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
             C35604 * C49742 + C35605 * C50637) *
                C22717 +
            ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
             (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                C50810) *
               C458 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C457 -
           (((C31640 * C10138 + C50834 * C10142 + C31639 * C3590 +
              C31637 * C3595) *
                 C50637 +
             (C31640 * C10136 + C50834 * C10139 + C31639 * C3586 +
              C31637 * C3591) *
                 C49742 +
             (C31640 * C10140 + C50834 * C10143 + C31639 * C3592 +
              C31637 * C3596) *
                 C50911 +
             (C31640 * C10137 + C50834 * C10141 + C31639 * C3587 +
              C31637 * C3593) *
                 C49749) *
                C50810 +
            ((C34945 + C34944) * C50637 + (C34943 + C34942) * C49742 +
             (C36163 + C36162) * C50911 + (C36161 + C36160) * C49749) *
                C22717) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C49749 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C50911 +
              (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                 C22717 +
             ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
              C34704 * C49742 + C34705 * C50637) *
                 C50810) *
                C50929 -
            ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
              (C35616 + C35617) * C49749) *
                 C50810 +
             ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
              (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C50911 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C49749) *
                 C22717) *
                C50760) *
               C1025 +
           ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
              C35604 * C49742 + C35605 * C50637) *
                 C22717 +
             ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
              (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                 C50810) *
                C50760 -
            ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
              (C34734 + C34735) * C49749) *
                 C50810 +
             (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
              (C34729 + C34728) * C49749) *
                 C22717) *
                C50929) *
               C50732) *
              C50920 +
          (((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
              (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                 C22717 +
             (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
              (C32618 + C32619) * C50637) *
                 C50810) *
                C50760 -
            ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
              C34717 * C49749) *
                 C50810 +
             ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
              (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                 C22717) *
                C50929) *
               C1025 +
           (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
              C35141 * C50637) *
                 C22717 +
             (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
              (C31886 + C31887) * C50637) *
                 C50810) *
                C50929 -
            (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
               C31637 * C1575) *
                  C50637 +
              (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
               C31637 * C1569) *
                  C49742 +
              (C35621 + C35620) * C50911 + (C35619 + C35618) * C49749) *
                 C50810 +
             ((C32619 + C32618) * C50637 + (C32617 + C32616) * C49742 +
              C35594 * C50911 + C35595 * C49749) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50696 * C1025 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50696 * C50732) *
              C1027 +
          (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
             C35141 * C50637) *
                C22717 +
            (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50696 * C1025) *
              C1028 +
          (((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
             (C31683 + C31682) * C50637) *
                C22717 +
            (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50696 * C1025 -
           (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                 C50637 +
             (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                 C49742 +
             (C31887 + C31886) * C50911 + (C31885 + C31884) * C49749) *
                C50810 +
            ((C32241 + C32240) * C50637 + (C32239 + C32238) * C49742 +
             C32228 * C50911 + C32229 * C49749) *
                C22717) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C49749 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50911 +
            (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
               C22717 +
           ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
            C34704 * C49742 + C34705 * C50637) *
               C50810) *
              C50696 * C1096 -
          ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
            (C34734 + C34735) * C49749) *
               C50810 +
           (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
            (C34729 + C34728) * C49749) *
               C22717) *
              C50696 * C1097 +
          (((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
            C34718 * C49742 + C34719 * C50637) *
               C22717 +
           ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
            (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
               C50810) *
              C50696 * C1098 -
          (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
             C31637 * C3425) *
                C50637 +
            (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
             C31637 * C3421) *
                C49742 +
            (C31640 * C9729 + C50834 * C9732 + C31639 * C3422 +
             C31637 * C3426) *
                C50911 +
            (C31640 * C9726 + C50834 * C9730 + C31639 * C3417 +
             C31637 * C3423) *
                C49749) *
               C50810 +
           ((C34739 + C34738) * C50637 + (C34737 + C34736) * C49742 +
            (C35957 + C35956) * C50911 + (C35955 + C35954) * C49749) *
               C22717) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C49749 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C50911 +
              (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                 C22717 +
             ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
              C34704 * C49742 + C34705 * C50637) *
                 C50810) *
                C1676 -
            ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
              (C35616 + C35617) * C49749) *
                 C50810 +
             ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
              (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C50911 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C49749) *
                 C22717) *
                C50760) *
               C50928 +
           ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
              C35604 * C49742 + C35605 * C50637) *
                 C22717 +
             ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
              (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                 C50810) *
                C50760 -
            ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
              (C34734 + C34735) * C49749) *
                 C50810 +
             (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
              (C34729 + C34728) * C49749) *
                 C22717) *
                C1676) *
               C50732) *
              C50920 +
          (((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
              (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                 C22717 +
             (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
              (C32618 + C32619) * C50637) *
                 C50810) *
                C50760 -
            ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
              C34717 * C49749) *
                 C50810 +
             ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
              (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                 C22717) *
                C1676) *
               C50928 +
           (((C34704 * C49749 + C34705 * C50911 + C35140 * C49742 +
              C35141 * C50637) *
                 C22717 +
             (C34718 * C49749 + C34719 * C50911 + (C31884 + C31885) * C49742 +
              (C31886 + C31887) * C50637) *
                 C50810) *
                C1676 -
            (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
               C31637 * C1575) *
                  C50637 +
              (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
               C31637 * C1569) *
                  C49742 +
              (C35621 + C35620) * C50911 + (C35619 + C35618) * C49749) *
                 C50810 +
             ((C32619 + C32618) * C50637 + (C32617 + C32616) * C49742 +
              C35594 * C50911 + C35595 * C49749) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50974 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50975 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C49749 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50911 +
             (C32074 + C32075) * C49742 + (C32076 + C32077) * C50637) *
                C22717 +
            ((C36160 + C36161) * C49749 + (C36162 + C36163) * C50911 +
             (C34942 + C34943) * C49742 + (C34944 + C34945) * C50637) *
                C50810) *
               C2092) *
              C50928 +
          ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
             C35604 * C49742 + C35605 * C50637) *
                C22717 +
            ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
             (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                C50810) *
               C50975 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C50974 -
           (((C31640 * C10138 + C50834 * C10142 + C31639 * C3590 +
              C31637 * C3595) *
                 C50637 +
             (C31640 * C10136 + C50834 * C10139 + C31639 * C3586 +
              C31637 * C3591) *
                 C49742 +
             (C31640 * C10140 + C50834 * C10143 + C31639 * C3592 +
              C31637 * C3596) *
                 C50911 +
             (C31640 * C10137 + C50834 * C10141 + C31639 * C3587 +
              C31637 * C3593) *
                 C49749) *
                C50810 +
            ((C34945 + C34944) * C50637 + (C34943 + C34942) * C49742 +
             (C36163 + C36162) * C50911 + (C36161 + C36160) * C49749) *
                C22717) *
               C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50760) *
              C278 +
          ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
             C35604 * C49742 + C35605 * C50637) *
                C22717 +
            ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
             (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                C50810) *
               C50760 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C1676) *
              C279 +
          ((((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
             C34718 * C49742 + C34719 * C50637) *
                C22717 +
            ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
             (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
              C31637 * C4105) *
                 C50637 +
             (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
              C31637 * C4101) *
                 C49742 +
             (C31640 * C9221 + C50834 * C9224 + C31639 * C4102 +
              C31637 * C4106) *
                 C50911 +
             (C31640 * C9218 + C50834 * C9222 + C31639 * C4097 +
              C31637 * C4103) *
                 C49749) *
                C50810 +
            ((C35621 + C35620) * C50637 + (C35619 + C35618) * C49742 +
             (C36821 + C36820) * C50911 + (C36819 + C36818) * C49749) *
                C22717) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50760) *
              C50680 * C1027 +
          ((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
             (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                C22717 +
            (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50760 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C1676) *
              C50680 * C1028 +
          (((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
             (C31683 + C31682) * C50637) *
                C22717 +
            (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C50637 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C49742 +
             (C32619 + C32618) * C50911 + (C32617 + C32616) * C49749) *
                C50810 +
            ((C32401 + C32400) * C50637 + (C32399 + C32398) * C49742 +
             C32388 * C50911 + C32389 * C49749) *
                C22717) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C49749 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50911 +
            (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
               C22717 +
           ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
            C34704 * C49742 + C34705 * C50637) *
               C50810) *
              C1842 -
          ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
            (C35616 + C35617) * C49749) *
               C50810 +
           ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50911 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C49749) *
               C22717) *
              C1843 +
          (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C49749 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C50911 +
            (C32074 + C32075) * C49742 + (C32076 + C32077) * C50637) *
               C22717 +
           ((C36160 + C36161) * C49749 + (C36162 + C36163) * C50911 +
            (C34942 + C34943) * C49742 + (C34944 + C34945) * C50637) *
               C50810) *
              C1844 -
          (((C31640 * C16727 + C50834 * C16729 + C31639 * C4514 +
             C31637 * C4519) *
                C50637 +
            (C31640 * C16726 + C50834 * C16728 + C31639 * C4510 +
             C31637 * C4515) *
                C49742 +
            (C31640 * C14784 + C50834 * C14787 + C31639 * C4516 +
             C31637 * C4520) *
                C50911 +
            (C31640 * C14781 + C50834 * C14785 + C31639 * C4511 +
             C31637 * C4517) *
                C49749) *
               C50810 +
           ((C31640 * C7358 + C50834 * C7363 + C31639 * C1854 +
             C31637 * C1860) *
                C50637 +
            (C31640 * C7354 + C50834 * C7359 + C31639 * C1848 +
             C31637 * C1855) *
                C49742 +
            (C31640 * C7360 + C50834 * C7364 + C31639 * C1856 +
             C31637 * C1861) *
                C50911 +
            (C31640 * C7355 + C50834 * C7361 + C31639 * C1849 +
             C31637 * C1857) *
                C49749) *
               C22717) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C50974 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50975 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C49749 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50911 +
             (C32074 + C32075) * C49742 + (C32076 + C32077) * C50637) *
                C22717 +
            ((C36160 + C36161) * C49749 + (C36162 + C36163) * C50911 +
             (C34942 + C34943) * C49742 + (C34944 + C34945) * C50637) *
                C50810) *
               C2092) *
              C50680 * C50920 +
          ((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
             (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                C22717 +
            (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50975 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C50974 -
           (((C31640 * C4512 + C50834 * C4518 + C31639 * C1221 +
              C31637 * C1228) *
                 C50637 +
             (C31640 * C4509 + C50834 * C4513 + C31639 * C1216 +
              C31637 * C1222) *
                 C49742 +
             (C34945 + C34944) * C50911 + (C34943 + C34942) * C49749) *
                C50810 +
            ((C32081 + C32080) * C50637 + (C32079 + C32078) * C49742 +
             (C32077 + C32076) * C50911 + (C32075 + C32074) * C49749) *
                C22717) *
               C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50760) *
              C50680 * C1027 +
          ((((C32073 + C32072) * C49749 + (C32071 + C32070) * C50911 +
             (C32069 + C32068) * C49742 + (C32067 + C32066) * C50637) *
                C22717 +
            (C35604 * C49749 + C35605 * C50911 + (C32616 + C32617) * C49742 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50760 -
           ((C32228 * C50637 + C32229 * C49742 + C34716 * C50911 +
             C34717 * C49749) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C49742 +
             (C31677 + C31676) * C50911 + (C31675 + C31674) * C49749) *
                C22717) *
               C1676) *
              C50680 * C1028 +
          (((C31690 * C49749 + C31691 * C50911 + (C31685 + C31684) * C49742 +
             (C31683 + C31682) * C50637) *
                C22717 +
            (C35140 * C49749 + C35141 * C50911 + (C32238 + C32239) * C49742 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C50637 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C49742 +
             (C32619 + C32618) * C50911 + (C32617 + C32616) * C49749) *
                C50810 +
            ((C32401 + C32400) * C50637 + (C32399 + C32398) * C49742 +
             C32388 * C50911 + C32389 * C49749) *
                C22717) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C49749 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50911 +
             (C31674 + C31675) * C49742 + (C31676 + C31677) * C50637) *
                C22717 +
            ((C34728 + C34729) * C49749 + (C34730 + C34731) * C50911 +
             C34704 * C49742 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C49742 + (C35614 + C35615) * C50911 +
             (C35616 + C35617) * C49749) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C49742 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50911 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C49749) *
                C22717) *
               C50760) *
              C278 +
          ((((C35617 + C35616) * C49749 + (C35615 + C35614) * C50911 +
             C35604 * C49742 + C35605 * C50637) *
                C22717 +
            ((C36818 + C36819) * C49749 + (C36820 + C36821) * C50911 +
             (C35618 + C35619) * C49742 + (C35620 + C35621) * C50637) *
                C50810) *
               C50760 -
           ((C34706 * C50637 + C34707 * C49742 + (C34732 + C34733) * C50911 +
             (C34734 + C34735) * C49749) *
                C50810 +
            (C34716 * C50637 + C34717 * C49742 + (C34731 + C34730) * C50911 +
             (C34729 + C34728) * C49749) *
                C22717) *
               C1676) *
              C279 +
          ((((C34735 + C34734) * C49749 + (C34733 + C34732) * C50911 +
             C34718 * C49742 + C34719 * C50637) *
                C22717 +
            ((C35954 + C35955) * C49749 + (C35956 + C35957) * C50911 +
             (C34736 + C34737) * C49742 + (C34738 + C34739) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
              C31637 * C4105) *
                 C50637 +
             (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
              C31637 * C4101) *
                 C49742 +
             (C31640 * C9221 + C50834 * C9224 + C31639 * C4102 +
              C31637 * C4106) *
                 C50911 +
             (C31640 * C9218 + C50834 * C9222 + C31639 * C4097 +
              C31637 * C4103) *
                 C49749) *
                C50810 +
            ((C35621 + C35620) * C50637 + (C35619 + C35618) * C49742 +
             (C36821 + C36820) * C50911 + (C36819 + C36818) * C49749) *
                C22717) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50696 * C50928 -
           (((C35957 + C35956) * C50632 + (C35955 + C35954) * C10701) * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50696 * C50732) *
              C50970 +
          (((C34704 * C10701 + C34705 * C50632) * C50976 +
            (C34718 * C10701 + C34719 * C50632) * C50965 +
            ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                C25414) *
               C50696 * C50732 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50696 * C50928) *
              C50971 +
          (((C31690 * C10701 + C31691 * C50632) * C50976 +
            (C35140 * C10701 + C35141 * C50632) * C50965 +
            ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) *
                C25414) *
               C50696 * C50928 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50632 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C10701) *
                C25414 +
            ((C31887 + C31886) * C50632 + (C31885 + C31884) * C10701) * C50965 +
            (C32228 * C50632 + C32229 * C10701) * C50976) *
               C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C10701 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C50632) *
                 C50976 +
             ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) *
                 C50965 +
             C44543 * C25414) *
                C50929 -
            (((C36821 + C36820) * C50632 + (C36819 + C36818) * C10701) *
                 C25414 +
             ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) *
                 C50965 +
             ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C50632 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C10701) *
                 C50976) *
                C50760) *
               C50928 +
           ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) *
                 C50976 +
             ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) *
                 C50965 +
             ((C31639 * C4097 + C31637 * C4103 + C31640 * C9218 +
               C50834 * C9222) *
                  C10701 +
              (C31639 * C4102 + C31637 * C4106 + C31640 * C9221 +
               C50834 * C9224) *
                  C50632) *
                 C25414) *
                C50760 -
            (((C35957 + C35956) * C50632 + (C35955 + C35954) * C10701) *
                 C25414 +
             ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) *
                 C50965 +
             ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                 C50976) *
                C50929) *
               C50732) *
              C281 +
          (((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) *
                 C50976 +
             (C35604 * C10701 + C35605 * C50632) * C50965 +
             ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                 C25414) *
                C50760 -
            (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
             ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                 C50976) *
                C50929) *
               C50928 +
           (((C34704 * C10701 + C34705 * C50632) * C50976 +
             (C34718 * C10701 + C34719 * C50632) * C50965 +
             ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                 C25414) *
                C50929 -
            (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
               C31637 * C4105) *
                  C50632 +
              (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
               C31637 * C4101) *
                  C10701) *
                 C25414 +
             ((C35621 + C35620) * C50632 + (C35619 + C35618) * C10701) *
                 C50965 +
             (C35594 * C50632 + C35595 * C10701) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50696 * C278 -
           (((C35957 + C35956) * C50632 + (C35955 + C35954) * C10701) * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50696 * C279 +
           (C44543 * C50976 +
            ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
            ((C31639 * C3417 + C31637 * C3423 + C31640 * C9726 +
              C50834 * C9730) *
                 C10701 +
             (C31639 * C3422 + C31637 * C3426 + C31640 * C9729 +
              C50834 * C9732) *
                 C50632) *
                C25414) *
               C50696 * C280) *
              C281 +
          (((C34704 * C10701 + C34705 * C50632) * C50976 +
            (C34718 * C10701 + C34719 * C50632) * C50965 +
            ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                C25414) *
               C50696 * C279 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50696 * C278 -
           (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
              C31637 * C3425) *
                 C50632 +
             (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
              C31637 * C3421) *
                 C10701) *
                C25414 +
            ((C34739 + C34738) * C50632 + (C34737 + C34736) * C10701) * C50965 +
            C44542 * C50976) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C10701 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50632) *
               C50976 +
           ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
           ((C34735 + C34734) * C10701 + (C34733 + C34732) * C50632) * C25414) *
              C50696 * C50680 * C113 -
          ((C34706 * C50632 + C34707 * C10701) * C25414 +
           (C34716 * C50632 + C34717 * C10701) * C50965 +
           ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) * C50976) *
              C50696 * C50680 * C114 +
          ((C31690 * C10701 + C31691 * C50632) * C50976 +
           (C35140 * C10701 + C35141 * C50632) * C50965 +
           ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) * C25414) *
              C50696 * C50680 * C115 -
          (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                C50632 +
            (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                C10701) *
               C25414 +
           ((C32241 + C32240) * C50632 + (C32239 + C32238) * C10701) * C50965 +
           (C31692 * C50632 + C31693 * C10701) * C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C457 -
           (((C36821 + C36820) * C50632 + (C36819 + C36818) * C10701) * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C458 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C10701 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50632) *
                C50976 +
            ((C36160 + C36161) * C10701 + (C36162 + C36163) * C50632) * C50965 +
            ((C31639 * C3587 + C31637 * C3593 + C31640 * C10137 +
              C50834 * C10141) *
                 C10701 +
             (C31639 * C3592 + C31637 * C3596 + C31640 * C10140 +
              C50834 * C10143) *
                 C50632) *
                C25414) *
               C459) *
              C50680 * C281 +
          ((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) * C50976 +
            (C35604 * C10701 + C35605 * C50632) * C50965 +
            ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                C25414) *
               C458 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C457 -
           (((C31640 * C10138 + C50834 * C10142 + C31639 * C3590 +
              C31637 * C3595) *
                 C50632 +
             (C31640 * C10136 + C50834 * C10139 + C31639 * C3586 +
              C31637 * C3591) *
                 C10701) *
                C25414 +
            ((C34945 + C34944) * C50632 + (C34943 + C34942) * C10701) * C50965 +
            ((C32077 + C32076) * C50632 + (C32075 + C32074) * C10701) *
                C50976) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50929 -
           (((C36821 + C36820) * C50632 + (C36819 + C36818) * C10701) * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50760) *
              C50680 * C50970 +
          ((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) * C50976 +
            (C35604 * C10701 + C35605 * C50632) * C50965 +
            ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                C25414) *
               C50760 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50929) *
              C50680 * C50971 +
          (((C31690 * C10701 + C31691 * C50632) * C50976 +
            (C35140 * C10701 + C35141 * C50632) * C50965 +
            ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) *
                C25414) *
               C50929 -
           (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
              C31637 * C1575) *
                 C50632 +
             (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
              C31637 * C1569) *
                 C10701) *
                C25414 +
            ((C32619 + C32618) * C50632 + (C32617 + C32616) * C10701) * C50965 +
            (C32388 * C50632 + C32389 * C10701) * C50976) *
               C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C10701 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50632) *
               C50976 +
           ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
           ((C34735 + C34734) * C10701 + (C34733 + C34732) * C50632) * C25414) *
              C50696 * C50680 * C113 -
          ((C34706 * C50632 + C34707 * C10701) * C25414 +
           (C34716 * C50632 + C34717 * C10701) * C50965 +
           ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) * C50976) *
              C50696 * C50680 * C114 +
          ((C31690 * C10701 + C31691 * C50632) * C50976 +
           (C35140 * C10701 + C35141 * C50632) * C50965 +
           ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) * C25414) *
              C50696 * C50680 * C115 -
          (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                C50632 +
            (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                C10701) *
               C25414 +
           ((C32241 + C32240) * C50632 + (C32239 + C32238) * C10701) * C50965 +
           (C31692 * C50632 + C31693 * C10701) * C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50696 * C278 -
           (((C35957 + C35956) * C50632 + (C35955 + C35954) * C10701) * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50696 * C279 +
           (C44543 * C50976 +
            ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
            ((C31639 * C3417 + C31637 * C3423 + C31640 * C9726 +
              C50834 * C9730) *
                 C10701 +
             (C31639 * C3422 + C31637 * C3426 + C31640 * C9729 +
              C50834 * C9732) *
                 C50632) *
                C25414) *
               C50696 * C280) *
              C281 +
          (((C34704 * C10701 + C34705 * C50632) * C50976 +
            (C34718 * C10701 + C34719 * C50632) * C50965 +
            ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                C25414) *
               C50696 * C279 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50696 * C278 -
           (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
              C31637 * C3425) *
                 C50632 +
             (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
              C31637 * C3421) *
                 C10701) *
                C25414 +
            ((C34739 + C34738) * C50632 + (C34737 + C34736) * C10701) * C50965 +
            C44542 * C50976) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50696 * C50972 -
           (C45436 * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50696 * C50973 +
           (C44543 * C50976 +
            ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
            ((C45432 + C45433) * C10701 + (C45434 + C45435) * C50632) *
                C25414) *
               C50696 * C1331) *
              C50920 +
          (((C34704 * C10701 + C34705 * C50632) * C50976 +
            (C34718 * C10701 + C34719 * C50632) * C50965 +
            ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                C25414) *
               C50696 * C50973 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50696 * C50972 -
           (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
              C31637 * C3425) *
                 C50632 +
             (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
              C31637 * C3421) *
                 C10701) *
                C25414 +
            ((C34739 + C34738) * C50632 + (C34737 + C34736) * C10701) * C50965 +
            C44542 * C50976) *
               C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50929 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50760) *
              C50972 +
          ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) * C50976 +
            ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) * C50965 +
            ((C46093 + C46094) * C10701 + (C46095 + C46096) * C50632) *
                C25414) *
               C50760 -
           (C45436 * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50929) *
              C50973 +
          ((C44543 * C50976 +
            ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
            ((C45432 + C45433) * C10701 + (C45434 + C45435) * C50632) *
                C25414) *
               C50929 -
           (((C31640 * C11539 + C50834 * C11541 + C31639 * C9729 +
              C31637 * C9732) *
                 C50632 +
             (C31640 * C11538 + C50834 * C11540 + C31639 * C9726 +
              C31637 * C9730) *
                 C10701) *
                C25414 +
            ((C46096 + C46095) * C50632 + (C46094 + C46093) * C10701) * C50965 +
            C46097 * C50976) *
               C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C10701 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50632) *
               C50976 +
           ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
           C44543 * C25414) *
              C50696 * C1096 -
          (C45436 * C25414 +
           ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
           ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) * C50976) *
              C50696 * C1097 +
          (C44543 * C50976 +
           ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
           ((C45432 + C45433) * C10701 + (C45434 + C45435) * C50632) * C25414) *
              C50696 * C1098 -
          (((C31640 * C11881 + C50834 * C11883 + C31639 * C9054 +
             C31637 * C9057) *
                C50632 +
            (C31640 * C11880 + C50834 * C11882 + C31639 * C9051 +
             C31637 * C9055) *
                C10701) *
               C25414 +
           ((C45435 + C45434) * C50632 + (C45433 + C45432) * C10701) * C50965 +
           C45436 * C50976) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50696 * C1025 -
           (((C35957 + C35956) * C50632 + (C35955 + C35954) * C10701) * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50696 * C50732) *
              C1027 +
          (((C34704 * C10701 + C34705 * C50632) * C50976 +
            (C34718 * C10701 + C34719 * C50632) * C50965 +
            ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                C25414) *
               C50696 * C50732 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50696 * C1025) *
              C1028 +
          (((C31690 * C10701 + C31691 * C50632) * C50976 +
            (C35140 * C10701 + C35141 * C50632) * C50965 +
            ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) *
                C25414) *
               C50696 * C1025 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50632 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C10701) *
                C25414 +
            ((C31887 + C31886) * C50632 + (C31885 + C31884) * C10701) * C50965 +
            (C32228 * C50632 + C32229 * C10701) * C50976) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C457 -
           (((C36821 + C36820) * C50632 + (C36819 + C36818) * C10701) * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C458 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C10701 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50632) *
                C50976 +
            ((C36160 + C36161) * C10701 + (C36162 + C36163) * C50632) * C50965 +
            ((C45591 + C45592) * C10701 + (C45593 + C45594) * C50632) *
                C25414) *
               C459) *
              C1025 +
          ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) * C50976 +
            ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) * C50965 +
            ((C31639 * C4097 + C31637 * C4103 + C31640 * C9218 +
              C50834 * C9222) *
                 C10701 +
             (C31639 * C4102 + C31637 * C4106 + C31640 * C9221 +
              C50834 * C9224) *
                 C50632) *
                C25414) *
               C458 -
           (C45436 * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C457 -
           (((C31640 * C12157 + C50834 * C12159 + C31639 * C9221 +
              C31637 * C9224) *
                 C50632 +
             (C31640 * C12156 + C50834 * C12158 + C31639 * C9218 +
              C31637 * C9222) *
                 C10701) *
                C25414 +
            ((C45594 + C45593) * C50632 + (C45592 + C45591) * C10701) * C50965 +
            ((C36163 + C36162) * C50632 + (C36161 + C36160) * C10701) *
                C50976) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C10701 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C50632) *
                 C50976 +
             ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) *
                 C50965 +
             C44543 * C25414) *
                C50929 -
            (((C36821 + C36820) * C50632 + (C36819 + C36818) * C10701) *
                 C25414 +
             ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) *
                 C50965 +
             ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C50632 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C10701) *
                 C50976) *
                C50760) *
               C1025 +
           ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) *
                 C50976 +
             ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) *
                 C50965 +
             ((C31639 * C4097 + C31637 * C4103 + C31640 * C9218 +
               C50834 * C9222) *
                  C10701 +
              (C31639 * C4102 + C31637 * C4106 + C31640 * C9221 +
               C50834 * C9224) *
                  C50632) *
                 C25414) *
                C50760 -
            (C45436 * C25414 +
             ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) *
                 C50965 +
             ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                 C50976) *
                C50929) *
               C50732) *
              C50920 +
          (((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) *
                 C50976 +
             (C35604 * C10701 + C35605 * C50632) * C50965 +
             ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                 C25414) *
                C50760 -
            (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
             ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                 C50976) *
                C50929) *
               C1025 +
           (((C34704 * C10701 + C34705 * C50632) * C50976 +
             (C34718 * C10701 + C34719 * C50632) * C50965 +
             ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                 C25414) *
                C50929 -
            (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
               C31637 * C4105) *
                  C50632 +
              (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
               C31637 * C4101) *
                  C10701) *
                 C25414 +
             ((C35621 + C35620) * C50632 + (C35619 + C35618) * C10701) *
                 C50965 +
             (C35594 * C50632 + C35595 * C10701) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50696 * C1025 -
           (((C35957 + C35956) * C50632 + (C35955 + C35954) * C10701) * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50696 * C50732) *
              C1027 +
          (((C34704 * C10701 + C34705 * C50632) * C50976 +
            (C34718 * C10701 + C34719 * C50632) * C50965 +
            ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                C25414) *
               C50696 * C50732 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50696 * C1025) *
              C1028 +
          (((C31690 * C10701 + C31691 * C50632) * C50976 +
            (C35140 * C10701 + C35141 * C50632) * C50965 +
            ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) *
                C25414) *
               C50696 * C1025 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50632 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C10701) *
                C25414 +
            ((C31887 + C31886) * C50632 + (C31885 + C31884) * C10701) * C50965 +
            (C32228 * C50632 + C32229 * C10701) * C50976) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C10701 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50632) *
               C50976 +
           ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
           C44543 * C25414) *
              C50696 * C1096 -
          (C45436 * C25414 +
           ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
           ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) * C50976) *
              C50696 * C1097 +
          (C44543 * C50976 +
           ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
           ((C45432 + C45433) * C10701 + (C45434 + C45435) * C50632) * C25414) *
              C50696 * C1098 -
          (((C31640 * C11881 + C50834 * C11883 + C31639 * C9054 +
             C31637 * C9057) *
                C50632 +
            (C31640 * C11880 + C50834 * C11882 + C31639 * C9051 +
             C31637 * C9055) *
                C10701) *
               C25414 +
           ((C45435 + C45434) * C50632 + (C45433 + C45432) * C10701) * C50965 +
           C45436 * C50976) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C10701 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C50632) *
                 C50976 +
             ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) *
                 C50965 +
             C44543 * C25414) *
                C1676 -
            (C46097 * C25414 +
             ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) *
                 C50965 +
             ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C50632 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C10701) *
                 C50976) *
                C50760) *
               C50928 +
           ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) *
                 C50976 +
             ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) *
                 C50965 +
             ((C46093 + C46094) * C10701 + (C46095 + C46096) * C50632) *
                 C25414) *
                C50760 -
            (C45436 * C25414 +
             ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) *
                 C50965 +
             ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                 C50976) *
                C1676) *
               C50732) *
              C50920 +
          (((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) *
                 C50976 +
             (C35604 * C10701 + C35605 * C50632) * C50965 +
             ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                 C25414) *
                C50760 -
            (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
             ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                 C50976) *
                C1676) *
               C50928 +
           (((C34704 * C10701 + C34705 * C50632) * C50976 +
             (C34718 * C10701 + C34719 * C50632) * C50965 +
             ((C34736 + C34737) * C10701 + (C34738 + C34739) * C50632) *
                 C25414) *
                C1676 -
            (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
               C31637 * C4105) *
                  C50632 +
              (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
               C31637 * C4101) *
                  C10701) *
                 C25414 +
             ((C35621 + C35620) * C50632 + (C35619 + C35618) * C10701) *
                 C50965 +
             (C35594 * C50632 + C35595 * C10701) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50974 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50975 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C10701 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50632) *
                C50976 +
            ((C36160 + C36161) * C10701 + (C36162 + C36163) * C50632) * C50965 +
            ((C45591 + C45592) * C10701 + (C45593 + C45594) * C50632) *
                C25414) *
               C2092) *
              C50928 +
          ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) * C50976 +
            ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) * C50965 +
            ((C46093 + C46094) * C10701 + (C46095 + C46096) * C50632) *
                C25414) *
               C50975 -
           (C45436 * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C50974 -
           (((C31640 * C12157 + C50834 * C12159 + C31639 * C9221 +
              C31637 * C9224) *
                 C50632 +
             (C31640 * C12156 + C50834 * C12158 + C31639 * C9218 +
              C31637 * C9222) *
                 C10701) *
                C25414 +
            ((C45594 + C45593) * C50632 + (C45592 + C45591) * C10701) * C50965 +
            ((C36163 + C36162) * C50632 + (C36161 + C36160) * C10701) *
                C50976) *
               C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C1676 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50760) *
              C278 +
          ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) * C50976 +
            ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) * C50965 +
            ((C46093 + C46094) * C10701 + (C46095 + C46096) * C50632) *
                C25414) *
               C50760 -
           (C45436 * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C1676) *
              C279 +
          ((C44543 * C50976 +
            ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
            ((C45432 + C45433) * C10701 + (C45434 + C45435) * C50632) *
                C25414) *
               C1676 -
           (((C31640 * C11539 + C50834 * C11541 + C31639 * C9729 +
              C31637 * C9732) *
                 C50632 +
             (C31640 * C11538 + C50834 * C11540 + C31639 * C9726 +
              C31637 * C9730) *
                 C10701) *
                C25414 +
            ((C46096 + C46095) * C50632 + (C46094 + C46093) * C10701) * C50965 +
            C46097 * C50976) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C1676 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50760) *
              C50680 * C1027 +
          ((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) * C50976 +
            (C35604 * C10701 + C35605 * C50632) * C50965 +
            ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                C25414) *
               C50760 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C1676) *
              C50680 * C1028 +
          (((C31690 * C10701 + C31691 * C50632) * C50976 +
            (C35140 * C10701 + C35141 * C50632) * C50965 +
            ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) *
                C25414) *
               C1676 -
           (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
              C31637 * C1575) *
                 C50632 +
             (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
              C31637 * C1569) *
                 C10701) *
                C25414 +
            ((C32619 + C32618) * C50632 + (C32617 + C32616) * C10701) * C50965 +
            (C32388 * C50632 + C32389 * C10701) * C50976) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C10701 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50632) *
               C50976 +
           ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
           C44543 * C25414) *
              C1842 -
          (C46097 * C25414 +
           ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
           ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50632 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C10701) *
               C50976) *
              C1843 +
          (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C10701 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C50632) *
               C50976 +
           ((C36160 + C36161) * C10701 + (C36162 + C36163) * C50632) * C50965 +
           ((C45591 + C45592) * C10701 + (C45593 + C45594) * C50632) * C25414) *
              C1844 -
          (((C31640 * C14782 + C50834 * C14786 + C31639 * C10140 +
             C31637 * C10143) *
                C50632 +
            (C31640 * C14780 + C50834 * C14783 + C31639 * C10137 +
             C31637 * C10141) *
                C10701) *
               C25414 +
           ((C31640 * C14784 + C50834 * C14787 + C31639 * C4516 +
             C31637 * C4520) *
                C50632 +
            (C31640 * C14781 + C50834 * C14785 + C31639 * C4511 +
             C31637 * C4517) *
                C10701) *
               C50965 +
           ((C31640 * C7360 + C50834 * C7364 + C31639 * C1856 +
             C31637 * C1861) *
                C50632 +
            (C31640 * C7355 + C50834 * C7361 + C31639 * C1849 +
             C31637 * C1857) *
                C10701) *
               C50976) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C50974 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50975 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C10701 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C50632) *
                C50976 +
            ((C36160 + C36161) * C10701 + (C36162 + C36163) * C50632) * C50965 +
            ((C45591 + C45592) * C10701 + (C45593 + C45594) * C50632) *
                C25414) *
               C2092) *
              C50680 * C50920 +
          ((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) * C50976 +
            (C35604 * C10701 + C35605 * C50632) * C50965 +
            ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                C25414) *
               C50975 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C50974 -
           (((C31640 * C10138 + C50834 * C10142 + C31639 * C3590 +
              C31637 * C3595) *
                 C50632 +
             (C31640 * C10136 + C50834 * C10139 + C31639 * C3586 +
              C31637 * C3591) *
                 C10701) *
                C25414 +
            ((C34945 + C34944) * C50632 + (C34943 + C34942) * C10701) * C50965 +
            ((C32077 + C32076) * C50632 + (C32075 + C32074) * C10701) *
                C50976) *
               C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C1676 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50760) *
              C50680 * C1027 +
          ((((C32073 + C32072) * C10701 + (C32071 + C32070) * C50632) * C50976 +
            (C35604 * C10701 + C35605 * C50632) * C50965 +
            ((C35618 + C35619) * C10701 + (C35620 + C35621) * C50632) *
                C25414) *
               C50760 -
           (C44542 * C25414 + (C34716 * C50632 + C34717 * C10701) * C50965 +
            ((C31677 + C31676) * C50632 + (C31675 + C31674) * C10701) *
                C50976) *
               C1676) *
              C50680 * C1028 +
          (((C31690 * C10701 + C31691 * C50632) * C50976 +
            (C35140 * C10701 + C35141 * C50632) * C50965 +
            ((C31884 + C31885) * C10701 + (C31886 + C31887) * C50632) *
                C25414) *
               C1676 -
           (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
              C31637 * C1575) *
                 C50632 +
             (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
              C31637 * C1569) *
                 C10701) *
                C25414 +
            ((C32619 + C32618) * C50632 + (C32617 + C32616) * C10701) * C50965 +
            (C32388 * C50632 + C32389 * C10701) * C50976) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C10701 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50632) *
                C50976 +
            ((C34728 + C34729) * C10701 + (C34730 + C34731) * C50632) * C50965 +
            C44543 * C25414) *
               C1676 -
           (C46097 * C25414 +
            ((C35614 + C35615) * C50632 + (C35616 + C35617) * C10701) * C50965 +
            ((C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50632 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C10701) *
                C50976) *
               C50760) *
              C278 +
          ((((C35617 + C35616) * C10701 + (C35615 + C35614) * C50632) * C50976 +
            ((C36818 + C36819) * C10701 + (C36820 + C36821) * C50632) * C50965 +
            ((C46093 + C46094) * C10701 + (C46095 + C46096) * C50632) *
                C25414) *
               C50760 -
           (C45436 * C25414 +
            ((C34732 + C34733) * C50632 + (C34734 + C34735) * C10701) * C50965 +
            ((C34731 + C34730) * C50632 + (C34729 + C34728) * C10701) *
                C50976) *
               C1676) *
              C279 +
          ((C44543 * C50976 +
            ((C35954 + C35955) * C10701 + (C35956 + C35957) * C50632) * C50965 +
            ((C45432 + C45433) * C10701 + (C45434 + C45435) * C50632) *
                C25414) *
               C1676 -
           (((C31640 * C11539 + C50834 * C11541 + C31639 * C9729 +
              C31637 * C9732) *
                 C50632 +
             (C31640 * C11538 + C50834 * C11540 + C31639 * C9726 +
              C31637 * C9730) *
                 C10701) *
                C25414 +
            ((C46096 + C46095) * C50632 + (C46094 + C46093) * C10701) * C50965 +
            C46097 * C50976) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50696 * C50928 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50696 * C50732) *
                      C50970 +
                  ((((C38319 + C38318 + C38317) * C10701 +
                     (C38316 + C38315 + C38314) * C50632) *
                        C22717 +
                    ((C38320 + C38321 + C38322) * C10701 +
                     (C38323 + C38324 + C38325) * C50632) *
                        C50810) *
                       C50696 * C50732 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50696 * C50928) *
                      C50971 +
                  ((((C38137 + C38136 + C38135) * C10701 +
                     (C38134 + C38133 + C38132) * C50632) *
                        C22717 +
                    ((C38666 + C38667 + C38668) * C10701 +
                     (C38669 + C38670 + C38671) * C50632) *
                        C50810) *
                       C50696 * C50928 -
                   (((C38088 * C3588 + C38085 * C3594 + C38087 * C1568 +
                      C50968 * C1575 + C38086 * C306 + C50977 * C319) *
                         C50632 +
                     (C38088 * C3585 + C38085 * C3589 + C38087 * C1563 +
                      C50968 * C1569 + C38086 * C289 + C50977 * C305) *
                         C10701) *
                        C50810 +
                    ((C38671 + C38670 + C38669) * C50632 +
                     (C38668 + C38667 + C38666) * C10701) *
                        C22717) *
                       C50696 * C50732) *
                      C638)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                       C50968 * C477 + C38088 * C464 + C38085 * C478) *
                          C10701 +
                      (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                       C50968 * C493 + C38088 * C479 + C38085 * C494) *
                          C50632) *
                         C22717 +
                     ((C47242 + C47243 + C47244) * C10701 +
                      (C47245 + C47246 + C47247) * C50632) *
                         C50810) *
                        C50929 -
                    (((C47898 + C47899 + C47900) * C50632 +
                      (C47901 + C47902 + C47903) * C10701) *
                         C50810 +
                     ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                       C50968 * C494 + C38086 * C476 + C50977 * C493) *
                          C50632 +
                      (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                       C50968 * C478 + C38086 * C463 + C50977 * C477) *
                          C10701) *
                         C22717) *
                        C50760) *
                       C50928 +
                   ((((C47903 + C47902 + C47901) * C10701 +
                      (C47900 + C47899 + C47898) * C50632) *
                         C22717 +
                     ((C38086 * C1565 + C50977 * C1573 + C38087 * C3587 +
                       C50968 * C3593 + C38088 * C10137 + C38085 * C10141) *
                          C10701 +
                      (C38086 * C1572 + C50977 * C1577 + C38087 * C3592 +
                       C50968 * C3596 + C38088 * C10140 + C38085 * C10143) *
                          C50632) *
                         C50810) *
                        C50760 -
                    (((C47248 + C47249 + C47250) * C50632 +
                      (C47251 + C47252 + C47253) * C10701) *
                         C50810 +
                     ((C47247 + C47246 + C47245) * C50632 +
                      (C47244 + C47243 + C47242) * C10701) *
                         C22717) *
                        C50929) *
                       C50732) *
                      C281 +
                  (((((C38501 + C38500 + C38499) * C10701 +
                      (C38498 + C38497 + C38496) * C50632) *
                         C22717 +
                     ((C39042 + C39043 + C39044) * C10701 +
                      (C39045 + C39046 + C39047) * C50632) *
                         C50810) *
                        C50760 -
                    (((C38314 + C38315 + C38316) * C50632 +
                      (C38317 + C38318 + C38319) * C10701) *
                         C50810 +
                     ((C38131 + C38130 + C38129) * C50632 +
                      (C38128 + C38127 + C38126) * C10701) *
                         C22717) *
                        C50929) *
                       C50928 +
                   ((((C38319 + C38318 + C38317) * C10701 +
                      (C38316 + C38315 + C38314) * C50632) *
                         C22717 +
                     ((C38320 + C38321 + C38322) * C10701 +
                      (C38323 + C38324 + C38325) * C50632) *
                         C50810) *
                        C50929 -
                    (((C38088 * C10138 + C38085 * C10142 + C38087 * C3590 +
                       C50968 * C3595 + C38086 * C1570 + C50977 * C1576) *
                          C50632 +
                      (C38088 * C10136 + C38085 * C10139 + C38087 * C3586 +
                       C50968 * C3591 + C38086 * C1564 + C50977 * C1571) *
                          C10701) *
                         C50810 +
                     ((C39047 + C39046 + C39045) * C50632 +
                      (C39044 + C39043 + C39042) * C10701) *
                         C22717) *
                        C50760) *
                       C50732) *
                      C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50696 * C278 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50696 * C279 +
                   (((C47253 + C47252 + C47251) * C10701 +
                     (C47250 + C47249 + C47248) * C50632) *
                        C22717 +
                    ((C38086 * C1104 + C50977 * C1112 + C38087 * C4097 +
                      C50968 * C4103 + C38088 * C9218 + C38085 * C9222) *
                         C10701 +
                     (C38086 * C1111 + C50977 * C1116 + C38087 * C4102 +
                      C50968 * C4106 + C38088 * C9221 + C38085 * C9224) *
                         C50632) *
                        C50810) *
                       C50696 * C280) *
                      C281 +
                  ((((C38319 + C38318 + C38317) * C10701 +
                     (C38316 + C38315 + C38314) * C50632) *
                        C22717 +
                    ((C38320 + C38321 + C38322) * C10701 +
                     (C38323 + C38324 + C38325) * C50632) *
                        C50810) *
                       C50696 * C279 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50696 * C278 -
                   (((C38088 * C9219 + C38085 * C9223 + C38087 * C4100 +
                      C50968 * C4105 + C38086 * C1109 + C50977 * C1115) *
                         C50632 +
                     (C38088 * C9217 + C38085 * C9220 + C38087 * C4096 +
                      C50968 * C4101 + C38086 * C1103 + C50977 * C1110) *
                         C10701) *
                        C50810 +
                    ((C38325 + C38324 + C38323) * C50632 +
                     (C38322 + C38321 + C38320) * C10701) *
                        C22717) *
                       C50696 * C280) *
                      C50667)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C10701 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C50632) *
                       C22717 +
                   ((C38086 * C286 + C50977 * C300 + C38087 * C889 +
                     C50968 * C894 + C38088 * C1218 + C38085 * C1226) *
                        C10701 +
                    (C38086 * C299 + C50977 * C316 + C38087 * C895 +
                     C50968 * C904 + C38088 * C1225 + C38085 * C1230) *
                        C50632) *
                       C50810) *
                      C50696 * C50680 * C113 -
                  (((C38314 + C38315 + C38316) * C50632 +
                    (C38317 + C38318 + C38319) * C10701) *
                       C50810 +
                   ((C38131 + C38130 + C38129) * C50632 +
                    (C38128 + C38127 + C38126) * C10701) *
                       C22717) *
                      C50696 * C50680 * C114 +
                  (((C38137 + C38136 + C38135) * C10701 +
                    (C38134 + C38133 + C38132) * C50632) *
                       C22717 +
                   ((C38666 + C38667 + C38668) * C10701 +
                    (C38669 + C38670 + C38671) * C50632) *
                       C50810) *
                      C50696 * C50680 * C115 -
                  (((C38088 * C1219 + C38085 * C1227 + C38087 * C901 +
                     C50968 * C907 + C38086 * C293 + C50977 * C313) *
                        C50632 +
                    (C38088 * C1215 + C38085 * C1220 + C38087 * C892 +
                     C50968 * C900 + C38086 * C283 + C50977 * C294) *
                        C10701) *
                       C50810 +
                   ((C38143 + C38142 + C38141) * C50632 +
                    (C38140 + C38139 + C38138) * C10701) *
                       C22717) *
                      C50696 * C50680 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C457 -
                   (((C38088 * C4516 + C38085 * C4520 + C38087 * C1225 +
                      C50968 * C1230 + C38086 * C895 + C50977 * C904) *
                         C50632 +
                     (C38088 * C4511 + C38085 * C4517 + C38087 * C1218 +
                      C50968 * C1226 + C38086 * C889 + C50977 * C894) *
                         C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C458 +
                   (((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C10701 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C50632) *
                        C22717 +
                    ((C38086 * C1218 + C50977 * C1226 + C38087 * C4511 +
                      C50968 * C4517 + C38088 * C14781 + C38085 * C14785) *
                         C10701 +
                     (C38086 * C1225 + C50977 * C1230 + C38087 * C4516 +
                      C50968 * C4520 + C38088 * C14784 + C38085 * C14787) *
                         C50632) *
                        C50810) *
                       C459) *
                      C50680 * C281 +
                  ((((C38501 + C38500 + C38499) * C10701 +
                     (C38498 + C38497 + C38496) * C50632) *
                        C22717 +
                    ((C39042 + C39043 + C39044) * C10701 +
                     (C39045 + C39046 + C39047) * C50632) *
                        C50810) *
                       C458 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C457 -
                   (((C38088 * C16727 + C38085 * C16729 + C38087 * C4514 +
                      C50968 * C4519 + C38086 * C1223 + C50977 * C1229) *
                         C50632 +
                     (C38088 * C16726 + C38085 * C16728 + C38087 * C4510 +
                      C50968 * C4515 + C38086 * C1217 + C50977 * C1224) *
                         C10701) *
                        C50810 +
                    ((C38507 + C38506 + C38505) * C50632 +
                     (C38504 + C38503 + C38502) * C10701) *
                        C22717) *
                       C459) *
                      C50680 * C50667)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50929 -
                   (((C38088 * C4516 + C38085 * C4520 + C38087 * C1225 +
                      C50968 * C1230 + C38086 * C895 + C50977 * C904) *
                         C50632 +
                     (C38088 * C4511 + C38085 * C4517 + C38087 * C1218 +
                      C50968 * C1226 + C38086 * C889 + C50977 * C894) *
                         C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50760) *
                      C50680 * C50970 +
                  ((((C38501 + C38500 + C38499) * C10701 +
                     (C38498 + C38497 + C38496) * C50632) *
                        C22717 +
                    ((C39042 + C39043 + C39044) * C10701 +
                     (C39045 + C39046 + C39047) * C50632) *
                        C50810) *
                       C50760 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50929) *
                      C50680 * C50971 +
                  ((((C38137 + C38136 + C38135) * C10701 +
                     (C38134 + C38133 + C38132) * C50632) *
                        C22717 +
                    ((C38666 + C38667 + C38668) * C10701 +
                     (C38669 + C38670 + C38671) * C50632) *
                        C50810) *
                       C50929 -
                   (((C38088 * C4512 + C38085 * C4518 + C38087 * C1221 +
                      C50968 * C1228 + C38086 * C899 + C50977 * C906) *
                         C50632 +
                     (C38088 * C4509 + C38085 * C4513 + C38087 * C1216 +
                      C50968 * C1222 + C38086 * C891 + C50977 * C898) *
                         C10701) *
                        C50810 +
                    ((C38835 + C38834 + C38833) * C50632 +
                     (C38832 + C38831 + C38830) * C10701) *
                        C22717) *
                       C50760) *
                      C50680 * C638)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C10701 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C50632) *
                       C22717 +
                   ((C38086 * C286 + C50977 * C300 + C38087 * C889 +
                     C50968 * C894 + C38088 * C1218 + C38085 * C1226) *
                        C10701 +
                    (C38086 * C299 + C50977 * C316 + C38087 * C895 +
                     C50968 * C904 + C38088 * C1225 + C38085 * C1230) *
                        C50632) *
                       C50810) *
                      C50696 * C50680 * C113 -
                  (((C38314 + C38315 + C38316) * C50632 +
                    (C38317 + C38318 + C38319) * C10701) *
                       C50810 +
                   ((C38131 + C38130 + C38129) * C50632 +
                    (C38128 + C38127 + C38126) * C10701) *
                       C22717) *
                      C50696 * C50680 * C114 +
                  (((C38137 + C38136 + C38135) * C10701 +
                    (C38134 + C38133 + C38132) * C50632) *
                       C22717 +
                   ((C38666 + C38667 + C38668) * C10701 +
                    (C38669 + C38670 + C38671) * C50632) *
                       C50810) *
                      C50696 * C50680 * C115 -
                  (((C38088 * C1219 + C38085 * C1227 + C38087 * C901 +
                     C50968 * C907 + C38086 * C293 + C50977 * C313) *
                        C50632 +
                    (C38088 * C1215 + C38085 * C1220 + C38087 * C892 +
                     C50968 * C900 + C38086 * C283 + C50977 * C294) *
                        C10701) *
                       C50810 +
                   ((C38143 + C38142 + C38141) * C50632 +
                    (C38140 + C38139 + C38138) * C10701) *
                       C22717) *
                      C50696 * C50680 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50696 * C278 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50696 * C279 +
                   (((C47253 + C47252 + C47251) * C10701 +
                     (C47250 + C47249 + C47248) * C50632) *
                        C22717 +
                    ((C38086 * C1104 + C50977 * C1112 + C38087 * C4097 +
                      C50968 * C4103 + C38088 * C9218 + C38085 * C9222) *
                         C10701 +
                     (C38086 * C1111 + C50977 * C1116 + C38087 * C4102 +
                      C50968 * C4106 + C38088 * C9221 + C38085 * C9224) *
                         C50632) *
                        C50810) *
                       C50696 * C280) *
                      C281 +
                  ((((C38319 + C38318 + C38317) * C10701 +
                     (C38316 + C38315 + C38314) * C50632) *
                        C22717 +
                    ((C38320 + C38321 + C38322) * C10701 +
                     (C38323 + C38324 + C38325) * C50632) *
                        C50810) *
                       C50696 * C279 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50696 * C278 -
                   (((C38088 * C9219 + C38085 * C9223 + C38087 * C4100 +
                      C50968 * C4105 + C38086 * C1109 + C50977 * C1115) *
                         C50632 +
                     (C38088 * C9217 + C38085 * C9220 + C38087 * C4096 +
                      C50968 * C4101 + C38086 * C1103 + C50977 * C1110) *
                         C10701) *
                        C50810 +
                    ((C38325 + C38324 + C38323) * C50632 +
                     (C38322 + C38321 + C38320) * C10701) *
                        C22717) *
                       C50696 * C280) *
                      C50667)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50696 * C50972 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50696 * C50973 +
                   (((C47253 + C47252 + C47251) * C10701 +
                     (C47250 + C47249 + C47248) * C50632) *
                        C22717 +
                    ((C48160 + C48161 + C48162) * C10701 +
                     (C48163 + C48164 + C48165) * C50632) *
                        C50810) *
                       C50696 * C1331) *
                      C50920 +
                  ((((C38319 + C38318 + C38317) * C10701 +
                     (C38316 + C38315 + C38314) * C50632) *
                        C22717 +
                    ((C38320 + C38321 + C38322) * C10701 +
                     (C38323 + C38324 + C38325) * C50632) *
                        C50810) *
                       C50696 * C50973 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50696 * C50972 -
                   (((C38088 * C9219 + C38085 * C9223 + C38087 * C4100 +
                      C50968 * C4105 + C38086 * C1109 + C50977 * C1115) *
                         C50632 +
                     (C38088 * C9217 + C38085 * C9220 + C38087 * C4096 +
                      C50968 * C4101 + C38086 * C1103 + C50977 * C1110) *
                         C10701) *
                        C50810 +
                    ((C38325 + C38324 + C38323) * C50632 +
                     (C38322 + C38321 + C38320) * C10701) *
                        C22717) *
                       C50696 * C1331) *
                      C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50929 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50760) *
                      C50972 +
                  ((((C47903 + C47902 + C47901) * C10701 +
                     (C47900 + C47899 + C47898) * C50632) *
                        C22717 +
                    ((C48828 + C48829 + C48830) * C10701 +
                     (C48831 + C48832 + C48833) * C50632) *
                        C50810) *
                       C50760 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50929) *
                      C50973 +
                  ((((C47253 + C47252 + C47251) * C10701 +
                     (C47250 + C47249 + C47248) * C50632) *
                        C22717 +
                    ((C48160 + C48161 + C48162) * C10701 +
                     (C48163 + C48164 + C48165) * C50632) *
                        C50810) *
                       C50929 -
                   (((C38088 * C12157 + C38085 * C12159 + C38087 * C9221 +
                      C50968 * C9224 + C38086 * C4102 + C50977 * C4106) *
                         C50632 +
                     (C38088 * C12156 + C38085 * C12158 + C38087 * C9218 +
                      C50968 * C9222 + C38086 * C4097 + C50977 * C4103) *
                         C10701) *
                        C50810 +
                    ((C48833 + C48832 + C48831) * C50632 +
                     (C48830 + C48829 + C48828) * C10701) *
                        C22717) *
                       C50760) *
                      C1331) *
                 C50661) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C10701 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C50632) *
                       C22717 +
                   ((C47242 + C47243 + C47244) * C10701 +
                    (C47245 + C47246 + C47247) * C50632) *
                       C50810) *
                      C50696 * C1096 -
                  (((C47248 + C47249 + C47250) * C50632 +
                    (C47251 + C47252 + C47253) * C10701) *
                       C50810 +
                   ((C47247 + C47246 + C47245) * C50632 +
                    (C47244 + C47243 + C47242) * C10701) *
                       C22717) *
                      C50696 * C1097 +
                  (((C47253 + C47252 + C47251) * C10701 +
                    (C47250 + C47249 + C47248) * C50632) *
                       C22717 +
                   ((C48160 + C48161 + C48162) * C10701 +
                    (C48163 + C48164 + C48165) * C50632) *
                       C50810) *
                      C50696 * C1098 -
                  (((C38088 * C11539 + C38085 * C11541 + C38087 * C9729 +
                     C50968 * C9732 + C38086 * C3422 + C50977 * C3426) *
                        C50632 +
                    (C38088 * C11538 + C38085 * C11540 + C38087 * C9726 +
                     C50968 * C9730 + C38086 * C3417 + C50977 * C3423) *
                        C10701) *
                       C50810 +
                   ((C48165 + C48164 + C48163) * C50632 +
                    (C48162 + C48161 + C48160) * C10701) *
                       C22717) *
                      C50696 * C1099) *
                 C50661) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50696 * C1025 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50696 * C50732) *
                      C1027 +
                  ((((C38319 + C38318 + C38317) * C10701 +
                     (C38316 + C38315 + C38314) * C50632) *
                        C22717 +
                    ((C38320 + C38321 + C38322) * C10701 +
                     (C38323 + C38324 + C38325) * C50632) *
                        C50810) *
                       C50696 * C50732 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50696 * C1025) *
                      C1028 +
                  ((((C38137 + C38136 + C38135) * C10701 +
                     (C38134 + C38133 + C38132) * C50632) *
                        C22717 +
                    ((C38666 + C38667 + C38668) * C10701 +
                     (C38669 + C38670 + C38671) * C50632) *
                        C50810) *
                       C50696 * C1025 -
                   (((C38088 * C3588 + C38085 * C3594 + C38087 * C1568 +
                      C50968 * C1575 + C38086 * C306 + C50977 * C319) *
                         C50632 +
                     (C38088 * C3585 + C38085 * C3589 + C38087 * C1563 +
                      C50968 * C1569 + C38086 * C289 + C50977 * C305) *
                         C10701) *
                        C50810 +
                    ((C38671 + C38670 + C38669) * C50632 +
                     (C38668 + C38667 + C38666) * C10701) *
                        C22717) *
                       C50696 * C50732) *
                      C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C457 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C458 +
                   (((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C10701 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C50632) *
                        C22717 +
                    ((C48324 + C48325 + C48326) * C10701 +
                     (C48327 + C48328 + C48329) * C50632) *
                        C50810) *
                       C459) *
                      C1025 +
                  ((((C47903 + C47902 + C47901) * C10701 +
                     (C47900 + C47899 + C47898) * C50632) *
                        C22717 +
                    ((C38086 * C1565 + C50977 * C1573 + C38087 * C3587 +
                      C50968 * C3593 + C38088 * C10137 + C38085 * C10141) *
                         C10701 +
                     (C38086 * C1572 + C50977 * C1577 + C38087 * C3592 +
                      C50968 * C3596 + C38088 * C10140 + C38085 * C10143) *
                         C50632) *
                        C50810) *
                       C458 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C457 -
                   (((C38088 * C14782 + C38085 * C14786 + C38087 * C10140 +
                      C50968 * C10143 + C38086 * C3592 + C50977 * C3596) *
                         C50632 +
                     (C38088 * C14780 + C38085 * C14783 + C38087 * C10137 +
                      C50968 * C10141 + C38086 * C3587 + C50977 * C3593) *
                         C10701) *
                        C50810 +
                    ((C48329 + C48328 + C48327) * C50632 +
                     (C48326 + C48325 + C48324) * C10701) *
                        C22717) *
                       C459) *
                      C50732) *
                 C50661) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                       C50968 * C477 + C38088 * C464 + C38085 * C478) *
                          C10701 +
                      (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                       C50968 * C493 + C38088 * C479 + C38085 * C494) *
                          C50632) *
                         C22717 +
                     ((C47242 + C47243 + C47244) * C10701 +
                      (C47245 + C47246 + C47247) * C50632) *
                         C50810) *
                        C50929 -
                    (((C47898 + C47899 + C47900) * C50632 +
                      (C47901 + C47902 + C47903) * C10701) *
                         C50810 +
                     ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                       C50968 * C494 + C38086 * C476 + C50977 * C493) *
                          C50632 +
                      (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                       C50968 * C478 + C38086 * C463 + C50977 * C477) *
                          C10701) *
                         C22717) *
                        C50760) *
                       C1025 +
                   ((((C47903 + C47902 + C47901) * C10701 +
                      (C47900 + C47899 + C47898) * C50632) *
                         C22717 +
                     ((C38086 * C1565 + C50977 * C1573 + C38087 * C3587 +
                       C50968 * C3593 + C38088 * C10137 + C38085 * C10141) *
                          C10701 +
                      (C38086 * C1572 + C50977 * C1577 + C38087 * C3592 +
                       C50968 * C3596 + C38088 * C10140 + C38085 * C10143) *
                          C50632) *
                         C50810) *
                        C50760 -
                    (((C47248 + C47249 + C47250) * C50632 +
                      (C47251 + C47252 + C47253) * C10701) *
                         C50810 +
                     ((C47247 + C47246 + C47245) * C50632 +
                      (C47244 + C47243 + C47242) * C10701) *
                         C22717) *
                        C50929) *
                       C50732) *
                      C50920 +
                  (((((C38501 + C38500 + C38499) * C10701 +
                      (C38498 + C38497 + C38496) * C50632) *
                         C22717 +
                     ((C39042 + C39043 + C39044) * C10701 +
                      (C39045 + C39046 + C39047) * C50632) *
                         C50810) *
                        C50760 -
                    (((C38314 + C38315 + C38316) * C50632 +
                      (C38317 + C38318 + C38319) * C10701) *
                         C50810 +
                     ((C38131 + C38130 + C38129) * C50632 +
                      (C38128 + C38127 + C38126) * C10701) *
                         C22717) *
                        C50929) *
                       C1025 +
                   ((((C38319 + C38318 + C38317) * C10701 +
                      (C38316 + C38315 + C38314) * C50632) *
                         C22717 +
                     ((C38320 + C38321 + C38322) * C10701 +
                      (C38323 + C38324 + C38325) * C50632) *
                         C50810) *
                        C50929 -
                    (((C38088 * C10138 + C38085 * C10142 + C38087 * C3590 +
                       C50968 * C3595 + C38086 * C1570 + C50977 * C1576) *
                          C50632 +
                      (C38088 * C10136 + C38085 * C10139 + C38087 * C3586 +
                       C50968 * C3591 + C38086 * C1564 + C50977 * C1571) *
                          C10701) *
                         C50810 +
                     ((C39047 + C39046 + C39045) * C50632 +
                      (C39044 + C39043 + C39042) * C10701) *
                         C22717) *
                        C50760) *
                       C50732) *
                      C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50696 * C1025 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50696 * C50732) *
                      C1027 +
                  ((((C38319 + C38318 + C38317) * C10701 +
                     (C38316 + C38315 + C38314) * C50632) *
                        C22717 +
                    ((C38320 + C38321 + C38322) * C10701 +
                     (C38323 + C38324 + C38325) * C50632) *
                        C50810) *
                       C50696 * C50732 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50696 * C1025) *
                      C1028 +
                  ((((C38137 + C38136 + C38135) * C10701 +
                     (C38134 + C38133 + C38132) * C50632) *
                        C22717 +
                    ((C38666 + C38667 + C38668) * C10701 +
                     (C38669 + C38670 + C38671) * C50632) *
                        C50810) *
                       C50696 * C1025 -
                   (((C38088 * C3588 + C38085 * C3594 + C38087 * C1568 +
                      C50968 * C1575 + C38086 * C306 + C50977 * C319) *
                         C50632 +
                     (C38088 * C3585 + C38085 * C3589 + C38087 * C1563 +
                      C50968 * C1569 + C38086 * C289 + C50977 * C305) *
                         C10701) *
                        C50810 +
                    ((C38671 + C38670 + C38669) * C50632 +
                     (C38668 + C38667 + C38666) * C10701) *
                        C22717) *
                       C50696 * C50732) *
                      C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C10701 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C50632) *
                       C22717 +
                   ((C47242 + C47243 + C47244) * C10701 +
                    (C47245 + C47246 + C47247) * C50632) *
                       C50810) *
                      C50696 * C1096 -
                  (((C47248 + C47249 + C47250) * C50632 +
                    (C47251 + C47252 + C47253) * C10701) *
                       C50810 +
                   ((C47247 + C47246 + C47245) * C50632 +
                    (C47244 + C47243 + C47242) * C10701) *
                       C22717) *
                      C50696 * C1097 +
                  (((C47253 + C47252 + C47251) * C10701 +
                    (C47250 + C47249 + C47248) * C50632) *
                       C22717 +
                   ((C48160 + C48161 + C48162) * C10701 +
                    (C48163 + C48164 + C48165) * C50632) *
                       C50810) *
                      C50696 * C1098 -
                  (((C38088 * C11539 + C38085 * C11541 + C38087 * C9729 +
                     C50968 * C9732 + C38086 * C3422 + C50977 * C3426) *
                        C50632 +
                    (C38088 * C11538 + C38085 * C11540 + C38087 * C9726 +
                     C50968 * C9730 + C38086 * C3417 + C50977 * C3423) *
                        C10701) *
                       C50810 +
                   ((C48165 + C48164 + C48163) * C50632 +
                    (C48162 + C48161 + C48160) * C10701) *
                       C22717) *
                      C50696 * C1099) *
                 C50661) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                       C50968 * C477 + C38088 * C464 + C38085 * C478) *
                          C10701 +
                      (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                       C50968 * C493 + C38088 * C479 + C38085 * C494) *
                          C50632) *
                         C22717 +
                     ((C47242 + C47243 + C47244) * C10701 +
                      (C47245 + C47246 + C47247) * C50632) *
                         C50810) *
                        C1676 -
                    (((C47898 + C47899 + C47900) * C50632 +
                      (C47901 + C47902 + C47903) * C10701) *
                         C50810 +
                     ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                       C50968 * C494 + C38086 * C476 + C50977 * C493) *
                          C50632 +
                      (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                       C50968 * C478 + C38086 * C463 + C50977 * C477) *
                          C10701) *
                         C22717) *
                        C50760) *
                       C50928 +
                   ((((C47903 + C47902 + C47901) * C10701 +
                      (C47900 + C47899 + C47898) * C50632) *
                         C22717 +
                     ((C48828 + C48829 + C48830) * C10701 +
                      (C48831 + C48832 + C48833) * C50632) *
                         C50810) *
                        C50760 -
                    (((C47248 + C47249 + C47250) * C50632 +
                      (C47251 + C47252 + C47253) * C10701) *
                         C50810 +
                     ((C47247 + C47246 + C47245) * C50632 +
                      (C47244 + C47243 + C47242) * C10701) *
                         C22717) *
                        C1676) *
                       C50732) *
                      C50920 +
                  (((((C38501 + C38500 + C38499) * C10701 +
                      (C38498 + C38497 + C38496) * C50632) *
                         C22717 +
                     ((C39042 + C39043 + C39044) * C10701 +
                      (C39045 + C39046 + C39047) * C50632) *
                         C50810) *
                        C50760 -
                    (((C38314 + C38315 + C38316) * C50632 +
                      (C38317 + C38318 + C38319) * C10701) *
                         C50810 +
                     ((C38131 + C38130 + C38129) * C50632 +
                      (C38128 + C38127 + C38126) * C10701) *
                         C22717) *
                        C1676) *
                       C50928 +
                   ((((C38319 + C38318 + C38317) * C10701 +
                      (C38316 + C38315 + C38314) * C50632) *
                         C22717 +
                     ((C38320 + C38321 + C38322) * C10701 +
                      (C38323 + C38324 + C38325) * C50632) *
                         C50810) *
                        C1676 -
                    (((C38088 * C10138 + C38085 * C10142 + C38087 * C3590 +
                       C50968 * C3595 + C38086 * C1570 + C50977 * C1576) *
                          C50632 +
                      (C38088 * C10136 + C38085 * C10139 + C38087 * C3586 +
                       C50968 * C3591 + C38086 * C1564 + C50977 * C1571) *
                          C10701) *
                         C50810 +
                     ((C39047 + C39046 + C39045) * C50632 +
                      (C39044 + C39043 + C39042) * C10701) *
                         C22717) *
                        C50760) *
                       C50732) *
                      C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50974 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50975 +
                   (((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C10701 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C50632) *
                        C22717 +
                    ((C48324 + C48325 + C48326) * C10701 +
                     (C48327 + C48328 + C48329) * C50632) *
                        C50810) *
                       C2092) *
                      C50928 +
                  ((((C47903 + C47902 + C47901) * C10701 +
                     (C47900 + C47899 + C47898) * C50632) *
                        C22717 +
                    ((C48828 + C48829 + C48830) * C10701 +
                     (C48831 + C48832 + C48833) * C50632) *
                        C50810) *
                       C50975 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C50974 -
                   (((C38088 * C14782 + C38085 * C14786 + C38087 * C10140 +
                      C50968 * C10143 + C38086 * C3592 + C50977 * C3596) *
                         C50632 +
                     (C38088 * C14780 + C38085 * C14783 + C38087 * C10137 +
                      C50968 * C10141 + C38086 * C3587 + C50977 * C3593) *
                         C10701) *
                        C50810 +
                    ((C48329 + C48328 + C48327) * C50632 +
                     (C48326 + C48325 + C48324) * C10701) *
                        C22717) *
                       C2092) *
                      C50732) *
                 C50661) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C1676 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50760) *
                      C278 +
                  ((((C47903 + C47902 + C47901) * C10701 +
                     (C47900 + C47899 + C47898) * C50632) *
                        C22717 +
                    ((C48828 + C48829 + C48830) * C10701 +
                     (C48831 + C48832 + C48833) * C50632) *
                        C50810) *
                       C50760 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C1676) *
                      C279 +
                  ((((C47253 + C47252 + C47251) * C10701 +
                     (C47250 + C47249 + C47248) * C50632) *
                        C22717 +
                    ((C48160 + C48161 + C48162) * C10701 +
                     (C48163 + C48164 + C48165) * C50632) *
                        C50810) *
                       C1676 -
                   (((C38088 * C12157 + C38085 * C12159 + C38087 * C9221 +
                      C50968 * C9224 + C38086 * C4102 + C50977 * C4106) *
                         C50632 +
                     (C38088 * C12156 + C38085 * C12158 + C38087 * C9218 +
                      C50968 * C9222 + C38086 * C4097 + C50977 * C4103) *
                         C10701) *
                        C50810 +
                    ((C48833 + C48832 + C48831) * C50632 +
                     (C48830 + C48829 + C48828) * C10701) *
                        C22717) *
                       C50760) *
                      C280) *
                 C50661) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C1676 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50760) *
                      C50680 * C1027 +
                  ((((C38501 + C38500 + C38499) * C10701 +
                     (C38498 + C38497 + C38496) * C50632) *
                        C22717 +
                    ((C39042 + C39043 + C39044) * C10701 +
                     (C39045 + C39046 + C39047) * C50632) *
                        C50810) *
                       C50760 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C1676) *
                      C50680 * C1028 +
                  ((((C38137 + C38136 + C38135) * C10701 +
                     (C38134 + C38133 + C38132) * C50632) *
                        C22717 +
                    ((C38666 + C38667 + C38668) * C10701 +
                     (C38669 + C38670 + C38671) * C50632) *
                        C50810) *
                       C1676 -
                   (((C38088 * C4512 + C38085 * C4518 + C38087 * C1221 +
                      C50968 * C1228 + C38086 * C899 + C50977 * C906) *
                         C50632 +
                     (C38088 * C4509 + C38085 * C4513 + C38087 * C1216 +
                      C50968 * C1222 + C38086 * C891 + C50977 * C898) *
                         C10701) *
                        C50810 +
                    ((C38835 + C38834 + C38833) * C50632 +
                     (C38832 + C38831 + C38830) * C10701) *
                        C22717) *
                       C50760) *
                      C50680 * C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C10701 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C50632) *
                       C22717 +
                   ((C47242 + C47243 + C47244) * C10701 +
                    (C47245 + C47246 + C47247) * C50632) *
                       C50810) *
                      C1842 -
                  (((C47898 + C47899 + C47900) * C50632 +
                    (C47901 + C47902 + C47903) * C10701) *
                       C50810 +
                   ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                     C50968 * C494 + C38086 * C476 + C50977 * C493) *
                        C50632 +
                    (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                     C50968 * C478 + C38086 * C463 + C50977 * C477) *
                        C10701) *
                       C22717) *
                      C1843 +
                  (((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                     C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                        C10701 +
                    (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                     C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                        C50632) *
                       C22717 +
                   ((C48324 + C48325 + C48326) * C10701 +
                    (C48327 + C48328 + C48329) * C50632) *
                       C50810) *
                      C1844 -
                  (((C38088 * C20351 + C38085 * C20353 + C38087 * C14784 +
                     C50968 * C14787 + C38086 * C4516 + C50977 * C4520) *
                        C50632 +
                    (C38088 * C20350 + C38085 * C20352 + C38087 * C14781 +
                     C50968 * C14785 + C38086 * C4511 + C50977 * C4517) *
                        C10701) *
                       C50810 +
                   ((C38088 * C17610 + C38085 * C17613 + C38087 * C7360 +
                     C50968 * C7364 + C38086 * C1856 + C50977 * C1861) *
                        C50632 +
                    (C38088 * C17607 + C38085 * C17611 + C38087 * C7355 +
                     C50968 * C7361 + C38086 * C1849 + C50977 * C1857) *
                        C10701) *
                       C22717) *
                      C1845) *
                 C50680 * C50661) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C50974 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50975 +
                   (((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C10701 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C50632) *
                        C22717 +
                    ((C48324 + C48325 + C48326) * C10701 +
                     (C48327 + C48328 + C48329) * C50632) *
                        C50810) *
                       C2092) *
                      C50680 * C50920 +
                  ((((C38501 + C38500 + C38499) * C10701 +
                     (C38498 + C38497 + C38496) * C50632) *
                        C22717 +
                    ((C39042 + C39043 + C39044) * C10701 +
                     (C39045 + C39046 + C39047) * C50632) *
                        C50810) *
                       C50975 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C50974 -
                   (((C38088 * C16727 + C38085 * C16729 + C38087 * C4514 +
                      C50968 * C4519 + C38086 * C1223 + C50977 * C1229) *
                         C50632 +
                     (C38088 * C16726 + C38085 * C16728 + C38087 * C4510 +
                      C50968 * C4515 + C38086 * C1217 + C50977 * C1224) *
                         C10701) *
                        C50810 +
                    ((C38507 + C38506 + C38505) * C50632 +
                     (C38504 + C38503 + C38502) * C10701) *
                        C22717) *
                       C2092) *
                      C50680 * C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C1676 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50760) *
                      C50680 * C1027 +
                  ((((C38501 + C38500 + C38499) * C10701 +
                     (C38498 + C38497 + C38496) * C50632) *
                        C22717 +
                    ((C39042 + C39043 + C39044) * C10701 +
                     (C39045 + C39046 + C39047) * C50632) *
                        C50810) *
                       C50760 -
                   (((C38314 + C38315 + C38316) * C50632 +
                     (C38317 + C38318 + C38319) * C10701) *
                        C50810 +
                    ((C38131 + C38130 + C38129) * C50632 +
                     (C38128 + C38127 + C38126) * C10701) *
                        C22717) *
                       C1676) *
                      C50680 * C1028 +
                  ((((C38137 + C38136 + C38135) * C10701 +
                     (C38134 + C38133 + C38132) * C50632) *
                        C22717 +
                    ((C38666 + C38667 + C38668) * C10701 +
                     (C38669 + C38670 + C38671) * C50632) *
                        C50810) *
                       C1676 -
                   (((C38088 * C4512 + C38085 * C4518 + C38087 * C1221 +
                      C50968 * C1228 + C38086 * C899 + C50977 * C906) *
                         C50632 +
                     (C38088 * C4509 + C38085 * C4513 + C38087 * C1216 +
                      C50968 * C1222 + C38086 * C891 + C50977 * C898) *
                         C10701) *
                        C50810 +
                    ((C38835 + C38834 + C38833) * C50632 +
                     (C38832 + C38831 + C38830) * C10701) *
                        C22717) *
                       C50760) *
                      C50680 * C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C10701 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C50632) *
                        C22717 +
                    ((C47242 + C47243 + C47244) * C10701 +
                     (C47245 + C47246 + C47247) * C50632) *
                        C50810) *
                       C1676 -
                   (((C47898 + C47899 + C47900) * C50632 +
                     (C47901 + C47902 + C47903) * C10701) *
                        C50810 +
                    ((C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C50632 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C10701) *
                        C22717) *
                       C50760) *
                      C278 +
                  ((((C47903 + C47902 + C47901) * C10701 +
                     (C47900 + C47899 + C47898) * C50632) *
                        C22717 +
                    ((C48828 + C48829 + C48830) * C10701 +
                     (C48831 + C48832 + C48833) * C50632) *
                        C50810) *
                       C50760 -
                   (((C47248 + C47249 + C47250) * C50632 +
                     (C47251 + C47252 + C47253) * C10701) *
                        C50810 +
                    ((C47247 + C47246 + C47245) * C50632 +
                     (C47244 + C47243 + C47242) * C10701) *
                        C22717) *
                       C1676) *
                      C279 +
                  ((((C47253 + C47252 + C47251) * C10701 +
                     (C47250 + C47249 + C47248) * C50632) *
                        C22717 +
                    ((C48160 + C48161 + C48162) * C10701 +
                     (C48163 + C48164 + C48165) * C50632) *
                        C50810) *
                       C1676 -
                   (((C38088 * C12157 + C38085 * C12159 + C38087 * C9221 +
                      C50968 * C9224 + C38086 * C4102 + C50977 * C4106) *
                         C50632 +
                     (C38088 * C12156 + C38085 * C12158 + C38087 * C9218 +
                      C50968 * C9222 + C38086 * C4097 + C50977 * C4103) *
                         C10701) *
                        C50810 +
                    ((C48833 + C48832 + C48831) * C50632 +
                     (C48830 + C48829 + C48828) * C10701) *
                        C22717) *
                       C50760) *
                      C280) *
                 C50661) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C50928 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50732) *
              C50970 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50732 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50696 * C50928 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C49742 + C2487 * C50911 +
             C2486 * C49749) *
                C7953 +
            (C8444 + C8443 + C8442 + C8441) * C7952 +
            (C8440 + C8439 + C8438 + C8437) * C7951) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C50928 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50732) *
              C50970 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50732 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C50928) *
              C50971 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50696 * C50928 -
           ((C117 * C640 + C50822 * C642) * C109 +
            (C117 * C639 + C50822 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50796 * C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50696 * C50928 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C15608 + C15607 + C15606) * C49749 +
            (C15605 + C15604 + C15603) * C50911 +
            (C15955 + C15956 + C15957) * C49742 +
            (C15958 + C15959 + C15960) * C50637) *
               C50796 * C50696 * C50732 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C15426 + C15425 + C15424) * C49749 +
            (C15423 + C15422 + C15421) * C50911 +
            (C15427 + C15428 + C15429) * C49742 +
            (C15430 + C15431 + C15432) * C50637) *
               C50796 * C50696 * C50928 -
           ((C15377 * C1219 + C15374 * C1227 + C15376 * C901 + C15373 * C907 +
             C15375 * C293 + C15372 * C313) *
                C50637 +
            (C15377 * C1215 + C15374 * C1220 + C15376 * C892 + C15373 * C900 +
             C15375 * C283 + C15372 * C294) *
                C49742 +
            (C15960 + C15959 + C15958) * C50911 +
            (C15957 + C15956 + C15955) * C49749) *
               C50796 * C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C49749 +
              (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
              C172 * C50637) *
                 C7951 +
             (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
                C50929 -
            ((C8785 + C8786 + C8787 + C8788) * C7953 +
             (C8789 + C8790 + C8791 + C8792) * C7952 +
             (C529 * C50637 + C530 * C49742 +
              (C117 * C476 + C50822 * C493) * C50911 +
              (C117 * C463 + C50822 * C477) * C49749) *
                 C7951) *
                C50760) *
               C50928 +
           (((C8792 + C8791 + C8790 + C8789) * C7951 +
             (C8788 + C8787 + C8786 + C8785) * C7952 +
             ((C117 * C4097 + C50822 * C4103) * C49749 +
              (C117 * C4102 + C50822 * C4106) * C50911 + C8805 * C49742 +
              C8806 * C50637) *
                 C7953) *
                C50760 -
            ((C8111 + C8112 + C8113 + C8114) * C7953 +
             (C8110 + C8109 + C8108 + C8107) * C7952 +
             (C8106 + C8105 + C8104 + C8103) * C7951) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                 C7951 +
             (C8797 + C8798 + C8799 + C8800) * C7952 +
             (C8801 + C8802 + C8803 + C8804) * C7953) *
                C50760 -
            (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
             (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                 C7951) *
                C50929) *
               C50928 +
           (((C8119 + C8120 + C8121 + C8122) * C7951 +
             (C8123 + C8124 + C8125 + C8126) * C7952 +
             (C8127 + C8128 + C8129 + C8130) * C7953) *
                C50929 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C49742 + C8806 * C50911 +
              C8805 * C49749) *
                 C7953 +
             (C8804 + C8803 + C8802 + C8801) * C7952 +
             (C8800 + C8799 + C8798 + C8797) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C118 +
             (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50796 * C50929 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
             (C117 * C463 + C50822 * C477) * C118) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C889 + C50822 * C894) * C118 +
             (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50796 * C50760 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
             (C117 * C286 + C50822 * C300) * C118) *
                C50796 * C50929) *
               C50732) *
              C281 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50796 * C50760 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50796 * C50929) *
               C50928 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50796 * C50929 -
            ((C117 * C902 + C50822 * C908) * C109 +
             (C117 * C893 + C50822 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C49749 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50911 +
             (C15415 + C15416 + C15417) * C49742 +
             (C15418 + C15419 + C15420) * C50637) *
                C50796 * C50929 -
            ((C15785 + C15786 + C15787) * C50637 +
             (C15788 + C15789 + C15790) * C49742 +
             (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50911 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C49749) *
                C50796 * C50760) *
               C50928 +
           (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
              C15377 * C4511 + C15374 * C4517) *
                 C49749 +
             (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
              C15377 * C4516 + C15374 * C4520) *
                 C50911 +
             (C16331 + C16332 + C16333) * C49742 +
             (C16334 + C16335 + C16336) * C50637) *
                C50796 * C50760 -
            ((C15603 + C15604 + C15605) * C50637 +
             (C15606 + C15607 + C15608) * C49742 +
             (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
              C15375 * C299 + C15372 * C316) *
                 C50911 +
             (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
              C15375 * C286 + C15372 * C300) *
                 C49749) *
                C50796 * C50929) *
               C50732) *
              C281 +
          ((((C15790 + C15789 + C15788) * C49749 +
             (C15787 + C15786 + C15785) * C50911 +
             (C16119 + C16120 + C16121) * C49742 +
             (C16122 + C16123 + C16124) * C50637) *
                C50796 * C50760 -
            ((C15421 + C15422 + C15423) * C50637 +
             (C15424 + C15425 + C15426) * C49742 +
             (C15420 + C15419 + C15418) * C50911 +
             (C15417 + C15416 + C15415) * C49749) *
                C50796 * C50929) *
               C50928 +
           (((C15608 + C15607 + C15606) * C49749 +
             (C15605 + C15604 + C15603) * C50911 +
             (C15955 + C15956 + C15957) * C49742 +
             (C15958 + C15959 + C15960) * C50637) *
                C50796 * C50929 -
            ((C15377 * C4512 + C15374 * C4518 + C15376 * C1221 +
              C15373 * C1228 + C15375 * C899 + C15372 * C906) *
                 C50637 +
             (C15377 * C4509 + C15374 * C4513 + C15376 * C1216 +
              C15373 * C1222 + C15375 * C891 + C15372 * C898) *
                 C49742 +
             (C16336 + C16335 + C16334) * C50911 +
             (C16333 + C16332 + C16331) * C49749) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50822 * C129) * C118 +
               (C117 * C130 + C50822 * C143) * C106 + C171 * C119 +
               C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
               C176 * C109) *
                  C50796 * C50696 * C50680 * C113 -
              (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
               C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                  C50796 * C50696 * C50680 * C114 +
              (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
               C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                  C50796 * C50696 * C50680 * C115 -
              ((C117 * C141 + C50822 * C149) * C109 +
               (C117 * C128 + C50822 * C142) * C121 + C180 * C108 +
               C179 * C120 + C177 * C107 + C178 * C119 + C176 * C106 +
               C175 * C118) *
                  C50796 * C50696 * C50680 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50822 * C129) * C118 +
                (C117 * C130 + C50822 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50796 * C50696 * C278 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50822 * C316) * C106 +
                (C117 * C286 + C50822 * C300) * C118) *
                   C50796 * C50696 * C279 +
               ((C117 * C287 + C50822 * C301) * C118 +
                (C117 * C302 + C50822 * C317) * C106 + C354 * C119 +
                C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
                C359 * C109) *
                   C50796 * C50696 * C280) *
                  C281 +
              ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
                C349 * C120 + C348 * C108 +
                (C117 * C291 + C50822 * C309) * C121 +
                (C117 * C310 + C50822 * C321) * C109) *
                   C50796 * C50696 * C279 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50796 * C50696 * C278 -
               ((C117 * C311 + C50822 * C322) * C109 +
                (C117 * C292 + C50822 * C312) * C121 + C359 * C108 +
                C358 * C120 + C357 * C107 + C356 * C119 + C355 * C106 +
                C354 * C118) *
                   C50796 * C50696 * C280) *
                  C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C458 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C459) *
              C50680 * C281 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + (C117 * C468 + C50822 * C486) * C121 +
            (C117 * C487 + C50822 * C498) * C109) *
               C50796 * C458 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C457 -
           ((C117 * C488 + C50822 * C499) * C109 +
            (C117 * C469 + C50822 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C2480 * C49749 + C2481 * C50911 + C353 * C49742 + C352 * C50637) *
               C7952 +
           (C2483 * C49749 + C2482 * C50911 + C354 * C49742 + C355 * C50637) *
               C7953) *
              C50696 * C50680 * C113 -
          ((C357 * C50637 + C356 * C49742 + C355 * C50911 + C354 * C49749) *
               C7953 +
           (C350 * C50637 + C351 * C49742 + C352 * C50911 + C353 * C49749) *
               C7952 +
           (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
               C7951) *
              C50696 * C50680 * C114 +
          ((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
               C7951 +
           (C351 * C49749 + C350 * C50911 + C349 * C49742 + C348 * C50637) *
               C7952 +
           (C356 * C49749 + C357 * C50911 + C358 * C49742 + C359 * C50637) *
               C7953) *
              C50696 * C50680 * C115 -
          (((C117 * C311 + C50822 * C322) * C50637 +
            (C117 * C292 + C50822 * C312) * C49742 + C359 * C50911 +
            C358 * C49749) *
               C7953 +
           (C649 * C50637 + C648 * C49742 + C348 * C50911 + C349 * C49749) *
               C7952 +
           (C177 * C50637 + C178 * C49742 + C176 * C50911 + C175 * C49749) *
               C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C278 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C279 +
           (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            ((C117 * C3417 + C50822 * C3423) * C49749 +
             (C117 * C3422 + C50822 * C3426) * C50911 + C8132 * C49742 +
             C8133 * C50637) *
                C7953) *
               C50696 * C280) *
              C281 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C279 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C278 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C49742 + C8133 * C50911 +
             C8132 * C49749) *
                C7953 +
            (C8130 + C8129 + C8128 + C8127) * C7952 + C8138 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C457 -
           ((C3167 * C50637 + C3166 * C49742 + C4117 * C50911 +
             C4116 * C49749) *
                C7953 +
            (C923 * C50637 + C922 * C49742 + C3164 * C50911 + C3165 * C49749) *
                C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C3606 * C49749 + C3607 * C50911 + C2646 * C49742 +
             C2647 * C50637) *
                C7952 +
            ((C117 * C3587 + C50822 * C3593) * C49749 +
             (C117 * C3592 + C50822 * C3596) * C50911 + C8289 * C49742 +
             C8290 * C50637) *
                C7953) *
               C459) *
              C50680 * C281 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C922 * C49749 + C923 * C50911 + C924 * C49742 + C925 * C50637) *
                C7952 +
            (C3166 * C49749 + C3167 * C50911 + C3168 * C49742 +
             C3169 * C50637) *
                C7953) *
               C458 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C457 -
           (((C117 * C3588 + C50822 * C3594) * C50637 +
             (C117 * C3585 + C50822 * C3589) * C49742 + C8290 * C50911 +
             C8289 * C49749) *
                C7953 +
            (C2649 * C50637 + C2648 * C49742 + C2647 * C50911 +
             C2646 * C49749) *
                C7952 +
            (C534 * C50637 + C533 * C49742 + C532 * C50911 + C531 * C49749) *
                C7951) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C15375 * C122 + C15372 * C129 + C15376 * C463 +
                                C15373 * C477 + C15377 * C464 + C15374 * C478) *
                                   C49749 +
                               (C15375 * C130 + C15372 * C143 + C15376 * C476 +
                                C15373 * C493 + C15377 * C479 + C15374 * C494) *
                                   C50911 +
                               (C15415 + C15416 + C15417) * C49742 +
                               (C15418 + C15419 + C15420) * C50637) *
                                  C50796 * C50696 * C50680 * C113 -
                              ((C15421 + C15422 + C15423) * C50637 +
                               (C15424 + C15425 + C15426) * C49742 +
                               (C15420 + C15419 + C15418) * C50911 +
                               (C15417 + C15416 + C15415) * C49749) *
                                  C50796 * C50696 * C50680 * C114 +
                              ((C15426 + C15425 + C15424) * C49749 +
                               (C15423 + C15422 + C15421) * C50911 +
                               (C15427 + C15428 + C15429) * C49742 +
                               (C15430 + C15431 + C15432) * C50637) *
                                  C50796 * C50696 * C50680 * C115 -
                              ((C15377 * C488 + C15374 * C499 + C15376 * C487 +
                                C15373 * C498 + C15375 * C137 + C15372 * C147) *
                                   C50637 +
                               (C15377 * C469 + C15374 * C489 + C15376 * C468 +
                                C15373 * C486 + C15375 * C126 + C15372 * C138) *
                                   C49742 +
                               (C15432 + C15431 + C15430) * C50911 +
                               (C15429 + C15428 + C15427) * C49749) *
                                  C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50696 * C278 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50696 * C279 +
           ((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
             C15377 * C3587 + C15374 * C3593) *
                C49749 +
            (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
             C15377 * C3592 + C15374 * C3596) *
                C50911 +
            (C15609 + C15610 + C15611) * C49742 +
            (C15612 + C15613 + C15614) * C50637) *
               C50796 * C50696 * C280) *
              C281 +
          (((C15608 + C15607 + C15606) * C49749 +
            (C15605 + C15604 + C15603) * C50911 +
            (C15375 * C284 + C15372 * C296 + C15376 * C891 + C15373 * C898 +
             C15377 * C1216 + C15374 * C1222) *
                C49742 +
            (C15375 * C295 + C15372 * C314 + C15376 * C899 + C15373 * C906 +
             C15377 * C1221 + C15374 * C1228) *
                C50637) *
               C50796 * C50696 * C279 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50696 * C278 -
           ((C15377 * C3588 + C15374 * C3594 + C15376 * C1568 + C15373 * C1575 +
             C15375 * C306 + C15372 * C319) *
                C50637 +
            (C15377 * C3585 + C15374 * C3589 + C15376 * C1563 + C15373 * C1569 +
             C15375 * C289 + C15372 * C305) *
                C49742 +
            (C15614 + C15613 + C15612) * C50911 +
            (C15611 + C15610 + C15609) * C49749) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C457 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C458 +
           ((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
             C15377 * C7355 + C15374 * C7361) *
                C49749 +
            (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
             C15377 * C7360 + C15374 * C7364) *
                C50911 +
            (C15791 + C15792 + C15793) * C49742 +
            (C15794 + C15795 + C15796) * C50637) *
               C50796 * C459) *
              C50680 * C281 +
          (((C15790 + C15789 + C15788) * C49749 +
            (C15787 + C15786 + C15785) * C50911 +
            (C15375 * C461 + C15372 * C473 + C15376 * C466 + C15373 * C482 +
             C15377 * C1847 + C15374 * C1853) *
                C49742 +
            (C15375 * C472 + C15372 * C491 + C15376 * C483 + C15373 * C496 +
             C15377 * C1852 + C15374 * C1859) *
                C50637) *
               C50796 * C458 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C457 -
           ((C15377 * C7356 + C15374 * C7362 + C15376 * C1852 + C15373 * C1859 +
             C15375 * C483 + C15372 * C496) *
                C50637 +
            (C15377 * C7353 + C15374 * C7357 + C15376 * C1847 + C15373 * C1853 +
             C15375 * C466 + C15372 * C482) *
                C49742 +
            (C15796 + C15795 + C15794) * C50911 +
            (C15793 + C15792 + C15791) * C49749) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50929 -
           ((C3167 * C50637 + C3166 * C49742 + C4117 * C50911 +
             C4116 * C49749) *
                C7953 +
            (C923 * C50637 + C922 * C49742 + C3164 * C50911 + C3165 * C49749) *
                C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C922 * C49749 + C923 * C50911 + C924 * C49742 + C925 * C50637) *
                C7952 +
            (C3166 * C49749 + C3167 * C50911 + C3168 * C49742 +
             C3169 * C50637) *
                C7953) *
               C50760 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50929 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C49742 + C3169 * C50911 +
             C3168 * C49749) *
                C7953 +
            (C927 * C50637 + C926 * C49742 + C925 * C50911 + C924 * C49749) *
                C7952 +
            (C525 * C50637 + C526 * C49742 + C527 * C50911 + C528 * C49749) *
                C7951) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50929 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50680 * C50970 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50760 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50929) *
              C50680 * C50971 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50929 -
           ((C117 * C750 + C50822 * C752) * C109 +
            (C117 * C749 + C50822 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50796 * C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50929 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C15790 + C15789 + C15788) * C49749 +
            (C15787 + C15786 + C15785) * C50911 +
            (C16119 + C16120 + C16121) * C49742 +
            (C16122 + C16123 + C16124) * C50637) *
               C50796 * C50760 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C15426 + C15425 + C15424) * C49749 +
            (C15423 + C15422 + C15421) * C50911 +
            (C15427 + C15428 + C15429) * C49742 +
            (C15430 + C15431 + C15432) * C50637) *
               C50796 * C50929 -
           ((C15377 * C1850 + C15374 * C1858 + C15376 * C485 + C15373 * C497 +
             C15375 * C470 + C15372 * C490) *
                C50637 +
            (C15377 * C1846 + C15374 * C1851 + C15376 * C467 + C15373 * C484 +
             C15375 * C460 + C15372 * C471) *
                C49742 +
            (C16124 + C16123 + C16122) * C50911 +
            (C16121 + C16120 + C16119) * C49749) *
               C50796 * C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C279 +
           ((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50696 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50822 * C309) * C121 +
            (C117 * C310 + C50822 * C321) * C109) *
               C50796 * C50696 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C278 -
           ((C117 * C311 + C50822 * C322) * C109 +
            (C117 * C292 + C50822 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C50696 * C50680 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50796 * C50696 * C50680 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50796 * C50696 * C50680 * C115 -
          ((C117 * C141 + C50822 * C149) * C109 +
           (C117 * C128 + C50822 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C2480 * C49749 + C2481 * C50911 + C353 * C49742 + C352 * C50637) *
               C7952 +
           (C2483 * C49749 + C2482 * C50911 + C354 * C49742 + C355 * C50637) *
               C7953) *
              C50696 * C50680 * C113 -
          ((C357 * C50637 + C356 * C49742 + C355 * C50911 + C354 * C49749) *
               C7953 +
           (C350 * C50637 + C351 * C49742 + C352 * C50911 + C353 * C49749) *
               C7952 +
           (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
               C7951) *
              C50696 * C50680 * C114 +
          ((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
               C7951 +
           (C351 * C49749 + C350 * C50911 + C349 * C49742 + C348 * C50637) *
               C7952 +
           (C356 * C49749 + C357 * C50911 + C358 * C49742 + C359 * C50637) *
               C7953) *
              C50696 * C50680 * C115 -
          (((C117 * C311 + C50822 * C322) * C50637 +
            (C117 * C292 + C50822 * C312) * C49742 + C359 * C50911 +
            C358 * C49749) *
               C7953 +
           (C649 * C50637 + C648 * C49742 + C348 * C50911 + C349 * C49749) *
               C7952 +
           (C177 * C50637 + C178 * C49742 + C176 * C50911 + C175 * C49749) *
               C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C278 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C279 +
           (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            ((C117 * C3417 + C50822 * C3423) * C49749 +
             (C117 * C3422 + C50822 * C3426) * C50911 + C8132 * C49742 +
             C8133 * C50637) *
                C7953) *
               C50696 * C280) *
              C281 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C279 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C278 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C49742 + C8133 * C50911 +
             C8132 * C49749) *
                C7953 +
            (C8130 + C8129 + C8128 + C8127) * C7952 + C8138 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
            C15377 * C464 + C15374 * C478) *
               C49749 +
           (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
            C15377 * C479 + C15374 * C494) *
               C50911 +
           (C15415 + C15416 + C15417) * C49742 +
           (C15418 + C15419 + C15420) * C50637) *
              C50796 * C50696 * C50680 * C113 -
          ((C15421 + C15422 + C15423) * C50637 +
           (C15424 + C15425 + C15426) * C49742 +
           (C15420 + C15419 + C15418) * C50911 +
           (C15417 + C15416 + C15415) * C49749) *
              C50796 * C50696 * C50680 * C114 +
          ((C15426 + C15425 + C15424) * C49749 +
           (C15423 + C15422 + C15421) * C50911 +
           (C15427 + C15428 + C15429) * C49742 +
           (C15430 + C15431 + C15432) * C50637) *
              C50796 * C50696 * C50680 * C115 -
          ((C15377 * C488 + C15374 * C499 + C15376 * C487 + C15373 * C498 +
            C15375 * C137 + C15372 * C147) *
               C50637 +
           (C15377 * C469 + C15374 * C489 + C15376 * C468 + C15373 * C486 +
            C15375 * C126 + C15372 * C138) *
               C49742 +
           (C15432 + C15431 + C15430) * C50911 +
           (C15429 + C15428 + C15427) * C49749) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50696 * C278 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50696 * C279 +
           ((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
             C15377 * C3587 + C15374 * C3593) *
                C49749 +
            (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
             C15377 * C3592 + C15374 * C3596) *
                C50911 +
            (C15609 + C15610 + C15611) * C49742 +
            (C15612 + C15613 + C15614) * C50637) *
               C50796 * C50696 * C280) *
              C281 +
          (((C15608 + C15607 + C15606) * C49749 +
            (C15605 + C15604 + C15603) * C50911 +
            (C15375 * C284 + C15372 * C296 + C15376 * C891 + C15373 * C898 +
             C15377 * C1216 + C15374 * C1222) *
                C49742 +
            (C15375 * C295 + C15372 * C314 + C15376 * C899 + C15373 * C906 +
             C15377 * C1221 + C15374 * C1228) *
                C50637) *
               C50796 * C50696 * C279 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50696 * C278 -
           ((C15377 * C3588 + C15374 * C3594 + C15376 * C1568 + C15373 * C1575 +
             C15375 * C306 + C15372 * C319) *
                C50637 +
            (C15377 * C3585 + C15374 * C3589 + C15376 * C1563 + C15373 * C1569 +
             C15375 * C289 + C15372 * C305) *
                C49742 +
            (C15614 + C15613 + C15612) * C50911 +
            (C15611 + C15610 + C15609) * C49749) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C50972 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50973 +
           (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C50696 * C1331) *
              C50920 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50973 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C50972 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C49742 + C8133 * C50911 +
             C8132 * C49749) *
                C7953 +
            (C8130 + C8129 + C8128 + C8127) * C7952 + C8138 * C7951) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C50972 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50973 +
           ((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50696 * C1331) *
              C50920 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50973 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C50972 -
           ((C117 * C311 + C50822 * C322) * C109 +
            (C117 * C292 + C50822 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50796 * C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50696 * C50972 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50696 * C50973 +
           ((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
             C15377 * C3587 + C15374 * C3593) *
                C49749 +
            (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
             C15377 * C3592 + C15374 * C3596) *
                C50911 +
            (C15609 + C15610 + C15611) * C49742 +
            (C15612 + C15613 + C15614) * C50637) *
               C50796 * C50696 * C1331) *
              C50920 +
          (((C15608 + C15607 + C15606) * C49749 +
            (C15605 + C15604 + C15603) * C50911 +
            (C15955 + C15956 + C15957) * C49742 +
            (C15958 + C15959 + C15960) * C50637) *
               C50796 * C50696 * C50973 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50696 * C50972 -
           ((C15377 * C3588 + C15374 * C3594 + C15376 * C1568 + C15373 * C1575 +
             C15375 * C306 + C15372 * C319) *
                C50637 +
            (C15377 * C3585 + C15374 * C3589 + C15376 * C1563 + C15373 * C1569 +
             C15375 * C289 + C15372 * C305) *
                C49742 +
            (C15614 + C15613 + C15612) * C50911 +
            (C15611 + C15610 + C15609) * C49749) *
               C50796 * C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50929 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50972 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50760 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50929) *
              C50973 +
          ((C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C50929 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C49742 +
             (C117 * C9729 + C50822 * C9732) * C50911 +
             (C117 * C9726 + C50822 * C9730) * C49749) *
                C7953 +
            (C9740 + C9739 + C9746 + C9745) * C7952 + C9744 * C7951) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50929 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50972 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50760 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50929) *
              C50973 +
          (((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50929 -
           ((C117 * C1566 + C50822 * C1574) * C109 +
            (C117 * C1562 + C50822 * C1567) * C121 +
            (C117 * C1568 + C50822 * C1575) * C108 +
            (C117 * C1563 + C50822 * C1569) * C120 +
            (C117 * C1570 + C50822 * C1576) * C107 +
            (C117 * C1564 + C50822 * C1571) * C119 +
            (C117 * C1572 + C50822 * C1577) * C106 +
            (C117 * C1565 + C50822 * C1573) * C118) *
               C50796 * C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50929 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50760) *
              C50972 +
          (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
             C15377 * C4511 + C15374 * C4517) *
                C49749 +
            (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
             C15377 * C4516 + C15374 * C4520) *
                C50911 +
            (C16331 + C16332 + C16333) * C49742 +
            (C16334 + C16335 + C16336) * C50637) *
               C50796 * C50760 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50929) *
              C50973 +
          (((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
             C15377 * C3587 + C15374 * C3593) *
                C49749 +
            (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
             C15377 * C3592 + C15374 * C3596) *
                C50911 +
            (C15609 + C15610 + C15611) * C49742 +
            (C15612 + C15613 + C15614) * C50637) *
               C50796 * C50929 -
           ((C15377 * C10138 + C15374 * C10142 + C15376 * C3590 +
             C15373 * C3595 + C15375 * C1570 + C15372 * C1576) *
                C50637 +
            (C15377 * C10136 + C15374 * C10139 + C15376 * C3586 +
             C15373 * C3591 + C15375 * C1564 + C15372 * C1571) *
                C49742 +
            (C15377 * C10140 + C15374 * C10143 + C15376 * C3592 +
             C15373 * C3596 + C15375 * C1572 + C15372 * C1577) *
                C50911 +
            (C15377 * C10137 + C15374 * C10141 + C15376 * C3587 +
             C15373 * C3593 + C15375 * C1565 + C15372 * C1573) *
                C49749) *
               C50796 * C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50822 * C129) * C118 +
                (C117 * C130 + C50822 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50796 * C50696 * C1025 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50822 * C316) * C106 +
                (C117 * C286 + C50822 * C300) * C118) *
                   C50796 * C50696 * C50732) *
                  C1027 +
              ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
                C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                   C50796 * C50696 * C50732 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50796 * C50696 * C1025) *
                  C1028 +
              ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
                C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                   C50796 * C50696 * C1025 -
               ((C117 * C640 + C50822 * C642) * C109 +
                (C117 * C639 + C50822 * C641) * C121 + C649 * C108 +
                C648 * C120 + C348 * C107 + C349 * C119 + C350 * C106 +
                C351 * C118) *
                   C50796 * C50696 * C50732) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50822 * C129) * C118 +
               (C117 * C130 + C50822 * C143) * C106 + C171 * C119 +
               C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
               C176 * C109) *
                  C50796 * C50696 * C1096 -
              (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
               C352 * C107 + C353 * C119 +
               (C117 * C299 + C50822 * C316) * C106 +
               (C117 * C286 + C50822 * C300) * C118) *
                  C50796 * C50696 * C1097 +
              ((C117 * C287 + C50822 * C301) * C118 +
               (C117 * C302 + C50822 * C317) * C106 + C354 * C119 +
               C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
               C359 * C109) *
                  C50796 * C50696 * C1098 -
              ((C117 * C1105 + C50822 * C1113) * C109 +
               (C117 * C1101 + C50822 * C1106) * C121 +
               (C117 * C1107 + C50822 * C1114) * C108 +
               (C117 * C1102 + C50822 * C1108) * C120 +
               (C117 * C1109 + C50822 * C1115) * C107 +
               (C117 * C1103 + C50822 * C1110) * C119 +
               (C117 * C1111 + C50822 * C1116) * C106 +
               (C117 * C1104 + C50822 * C1112) * C118) *
                  C50796 * C50696 * C1099) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C458 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C459) *
              C1025 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C458 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C457 -
           ((C117 * C1219 + C50822 * C1227) * C109 +
            (C117 * C1215 + C50822 * C1220) * C121 +
            (C117 * C1221 + C50822 * C1228) * C108 +
            (C117 * C1216 + C50822 * C1222) * C120 +
            (C117 * C1223 + C50822 * C1229) * C107 +
            (C117 * C1217 + C50822 * C1224) * C119 +
            (C117 * C1225 + C50822 * C1230) * C106 +
            (C117 * C1218 + C50822 * C1226) * C118) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C1025 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50732) *
              C1027 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50732 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50696 * C1025 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C49742 + C2487 * C50911 +
             C2486 * C49749) *
                C7953 +
            (C8444 + C8443 + C8442 + C8441) * C7952 +
            (C8440 + C8439 + C8438 + C8437) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
              C50696 * C1096 -
          (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
           (C8106 + C8105 + C8104 + C8103) * C7951) *
              C50696 * C1097 +
          (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
           (C9070 + C9071 + C9064 + C9065) * C7953) *
              C50696 * C1098 -
          (((C117 * C9052 + C50822 * C9056) * C50637 +
            (C117 * C9050 + C50822 * C9053) * C49742 +
            (C117 * C9054 + C50822 * C9057) * C50911 +
            (C117 * C9051 + C50822 * C9055) * C49749) *
               C7953 +
           (C9065 + C9064 + C9071 + C9070) * C7952 + C9069 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C457 -
           ((C8785 + C8786 + C8787 + C8788) * C7953 +
            (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C9226 + C9227 + C9228 + C9229) * C7952 +
            (C9238 + C9239 + C9234 + C9235) * C7953) *
               C459) *
              C1025 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            ((C117 * C4097 + C50822 * C4103) * C49749 +
             (C117 * C4102 + C50822 * C4106) * C50911 + C8805 * C49742 +
             C8806 * C50637) *
                C7953) *
               C458 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C457 -
           (((C117 * C9219 + C50822 * C9223) * C50637 +
             (C117 * C9217 + C50822 * C9220) * C49742 +
             (C117 * C9221 + C50822 * C9224) * C50911 +
             (C117 * C9218 + C50822 * C9222) * C49749) *
                C7953 +
            (C9235 + C9234 + C9239 + C9238) * C7952 +
            (C9229 + C9228 + C9227 + C9226) * C7951) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50696 * C1025 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C15608 + C15607 + C15606) * C49749 +
            (C15605 + C15604 + C15603) * C50911 +
            (C15955 + C15956 + C15957) * C49742 +
            (C15958 + C15959 + C15960) * C50637) *
               C50796 * C50696 * C50732 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50696 * C1025) *
              C1028 +
          (((C15426 + C15425 + C15424) * C49749 +
            (C15423 + C15422 + C15421) * C50911 +
            (C15427 + C15428 + C15429) * C49742 +
            (C15430 + C15431 + C15432) * C50637) *
               C50796 * C50696 * C1025 -
           ((C15377 * C1219 + C15374 * C1227 + C15376 * C901 + C15373 * C907 +
             C15375 * C293 + C15372 * C313) *
                C50637 +
            (C15377 * C1215 + C15374 * C1220 + C15376 * C892 + C15373 * C900 +
             C15375 * C283 + C15372 * C294) *
                C49742 +
            (C15960 + C15959 + C15958) * C50911 +
            (C15957 + C15956 + C15955) * C49749) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
            C15377 * C464 + C15374 * C478) *
               C49749 +
           (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
            C15377 * C479 + C15374 * C494) *
               C50911 +
           (C15415 + C15416 + C15417) * C49742 +
           (C15418 + C15419 + C15420) * C50637) *
              C50796 * C50696 * C1096 -
          ((C15603 + C15604 + C15605) * C50637 +
           (C15606 + C15607 + C15608) * C49742 +
           (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
            C15375 * C299 + C15372 * C316) *
               C50911 +
           (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
            C15375 * C286 + C15372 * C300) *
               C49749) *
              C50796 * C50696 * C1097 +
          ((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
            C15377 * C3587 + C15374 * C3593) *
               C49749 +
           (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
            C15377 * C3592 + C15374 * C3596) *
               C50911 +
           (C15609 + C15610 + C15611) * C49742 +
           (C15612 + C15613 + C15614) * C50637) *
              C50796 * C50696 * C1098 -
          ((C15377 * C9219 + C15374 * C9223 + C15376 * C4100 + C15373 * C4105 +
            C15375 * C1109 + C15372 * C1115) *
               C50637 +
           (C15377 * C9217 + C15374 * C9220 + C15376 * C4096 + C15373 * C4101 +
            C15375 * C1103 + C15372 * C1110) *
               C49742 +
           (C15377 * C9221 + C15374 * C9224 + C15376 * C4102 + C15373 * C4106 +
            C15375 * C1111 + C15372 * C1116) *
               C50911 +
           (C15377 * C9218 + C15374 * C9222 + C15376 * C4097 + C15373 * C4103 +
            C15375 * C1104 + C15372 * C1112) *
               C49749) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C457 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C458 +
           ((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
             C15377 * C7355 + C15374 * C7361) *
                C49749 +
            (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
             C15377 * C7360 + C15374 * C7364) *
                C50911 +
            (C15791 + C15792 + C15793) * C49742 +
            (C15794 + C15795 + C15796) * C50637) *
               C50796 * C459) *
              C1025 +
          (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
             C15377 * C4511 + C15374 * C4517) *
                C49749 +
            (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
             C15377 * C4516 + C15374 * C4520) *
                C50911 +
            (C16331 + C16332 + C16333) * C49742 +
            (C16334 + C16335 + C16336) * C50637) *
               C50796 * C458 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C457 -
           ((C15377 * C16727 + C15374 * C16729 + C15376 * C4514 +
             C15373 * C4519 + C15375 * C1223 + C15372 * C1229) *
                C50637 +
            (C15377 * C16726 + C15374 * C16728 + C15376 * C4510 +
             C15373 * C4515 + C15375 * C1217 + C15372 * C1224) *
                C49742 +
            (C15377 * C14784 + C15374 * C14787 + C15376 * C4516 +
             C15373 * C4520 + C15375 * C1225 + C15372 * C1230) *
                C50911 +
            (C15377 * C14781 + C15374 * C14785 + C15376 * C4511 +
             C15373 * C4517 + C15375 * C1218 + C15372 * C1226) *
                C49749) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C49749 +
              (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
              C172 * C50637) *
                 C7951 +
             (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
                C50929 -
            ((C8785 + C8786 + C8787 + C8788) * C7953 +
             (C8789 + C8790 + C8791 + C8792) * C7952 +
             (C529 * C50637 + C530 * C49742 +
              (C117 * C476 + C50822 * C493) * C50911 +
              (C117 * C463 + C50822 * C477) * C49749) *
                 C7951) *
                C50760) *
               C1025 +
           (((C8792 + C8791 + C8790 + C8789) * C7951 +
             (C8788 + C8787 + C8786 + C8785) * C7952 +
             ((C117 * C4097 + C50822 * C4103) * C49749 +
              (C117 * C4102 + C50822 * C4106) * C50911 + C8805 * C49742 +
              C8806 * C50637) *
                 C7953) *
                C50760 -
            (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
             (C8106 + C8105 + C8104 + C8103) * C7951) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                 C7951 +
             (C8797 + C8798 + C8799 + C8800) * C7952 +
             (C8801 + C8802 + C8803 + C8804) * C7953) *
                C50760 -
            (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
             (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                 C7951) *
                C50929) *
               C1025 +
           (((C8119 + C8120 + C8121 + C8122) * C7951 +
             (C8123 + C8124 + C8125 + C8126) * C7952 +
             (C8127 + C8128 + C8129 + C8130) * C7953) *
                C50929 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C49742 + C8806 * C50911 +
              C8805 * C49749) *
                 C7953 +
             (C8804 + C8803 + C8802 + C8801) * C7952 +
             (C8800 + C8799 + C8798 + C8797) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C118 +
             (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50796 * C50929 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
             (C117 * C463 + C50822 * C477) * C118) *
                C50796 * C50760) *
               C1025 +
           (((C117 * C889 + C50822 * C894) * C118 +
             (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50796 * C50760 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
             (C117 * C286 + C50822 * C300) * C118) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50796 * C50760 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50796 * C50929) *
               C1025 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50796 * C50929 -
            ((C117 * C902 + C50822 * C908) * C109 +
             (C117 * C893 + C50822 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C49749 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50911 +
             (C15415 + C15416 + C15417) * C49742 +
             (C15418 + C15419 + C15420) * C50637) *
                C50796 * C50929 -
            ((C15785 + C15786 + C15787) * C50637 +
             (C15788 + C15789 + C15790) * C49742 +
             (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50911 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C49749) *
                C50796 * C50760) *
               C1025 +
           (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
              C15377 * C4511 + C15374 * C4517) *
                 C49749 +
             (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
              C15377 * C4516 + C15374 * C4520) *
                 C50911 +
             (C16331 + C16332 + C16333) * C49742 +
             (C16334 + C16335 + C16336) * C50637) *
                C50796 * C50760 -
            ((C15603 + C15604 + C15605) * C50637 +
             (C15606 + C15607 + C15608) * C49742 +
             (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
              C15375 * C299 + C15372 * C316) *
                 C50911 +
             (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
              C15375 * C286 + C15372 * C300) *
                 C49749) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C15790 + C15789 + C15788) * C49749 +
             (C15787 + C15786 + C15785) * C50911 +
             (C16119 + C16120 + C16121) * C49742 +
             (C16122 + C16123 + C16124) * C50637) *
                C50796 * C50760 -
            ((C15421 + C15422 + C15423) * C50637 +
             (C15424 + C15425 + C15426) * C49742 +
             (C15420 + C15419 + C15418) * C50911 +
             (C15417 + C15416 + C15415) * C49749) *
                C50796 * C50929) *
               C1025 +
           (((C15608 + C15607 + C15606) * C49749 +
             (C15605 + C15604 + C15603) * C50911 +
             (C15955 + C15956 + C15957) * C49742 +
             (C15958 + C15959 + C15960) * C50637) *
                C50796 * C50929 -
            ((C15377 * C4512 + C15374 * C4518 + C15376 * C1221 +
              C15373 * C1228 + C15375 * C899 + C15372 * C906) *
                 C50637 +
             (C15377 * C4509 + C15374 * C4513 + C15376 * C1216 +
              C15373 * C1222 + C15375 * C891 + C15372 * C898) *
                 C49742 +
             (C16336 + C16335 + C16334) * C50911 +
             (C16333 + C16332 + C16331) * C49749) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C50696 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
           (C117 * C286 + C50822 * C300) * C118) *
              C50796 * C50696 * C1097 +
          ((C117 * C287 + C50822 * C301) * C118 +
           (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50796 * C50696 * C1098 -
          ((C117 * C1105 + C50822 * C1113) * C109 +
           (C117 * C1101 + C50822 * C1106) * C121 +
           (C117 * C1107 + C50822 * C1114) * C108 +
           (C117 * C1102 + C50822 * C1108) * C120 +
           (C117 * C1109 + C50822 * C1115) * C107 +
           (C117 * C1103 + C50822 * C1110) * C119 +
           (C117 * C1111 + C50822 * C1116) * C106 +
           (C117 * C1104 + C50822 * C1112) * C118) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50732) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50732 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50696 * C1025 -
           ((C117 * C640 + C50822 * C642) * C109 +
            (C117 * C639 + C50822 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C1025 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50732) *
              C1027 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50732 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50696 * C1025 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C49742 + C2487 * C50911 +
             C2486 * C49749) *
                C7953 +
            (C8444 + C8443 + C8442 + C8441) * C7952 +
            (C8440 + C8439 + C8438 + C8437) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
              C50696 * C1096 -
          (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
           (C8106 + C8105 + C8104 + C8103) * C7951) *
              C50696 * C1097 +
          (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
           (C9070 + C9071 + C9064 + C9065) * C7953) *
              C50696 * C1098 -
          (((C117 * C9052 + C50822 * C9056) * C50637 +
            (C117 * C9050 + C50822 * C9053) * C49742 +
            (C117 * C9054 + C50822 * C9057) * C50911 +
            (C117 * C9051 + C50822 * C9055) * C49749) *
               C7953 +
           (C9065 + C9064 + C9071 + C9070) * C7952 + C9069 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50696 * C1025 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C15608 + C15607 + C15606) * C49749 +
            (C15605 + C15604 + C15603) * C50911 +
            (C15955 + C15956 + C15957) * C49742 +
            (C15958 + C15959 + C15960) * C50637) *
               C50796 * C50696 * C50732 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50696 * C1025) *
              C1028 +
          (((C15426 + C15425 + C15424) * C49749 +
            (C15423 + C15422 + C15421) * C50911 +
            (C15427 + C15428 + C15429) * C49742 +
            (C15430 + C15431 + C15432) * C50637) *
               C50796 * C50696 * C1025 -
           ((C15377 * C1219 + C15374 * C1227 + C15376 * C901 + C15373 * C907 +
             C15375 * C293 + C15372 * C313) *
                C50637 +
            (C15377 * C1215 + C15374 * C1220 + C15376 * C892 + C15373 * C900 +
             C15375 * C283 + C15372 * C294) *
                C49742 +
            (C15960 + C15959 + C15958) * C50911 +
            (C15957 + C15956 + C15955) * C49749) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
            C15377 * C464 + C15374 * C478) *
               C49749 +
           (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
            C15377 * C479 + C15374 * C494) *
               C50911 +
           (C15415 + C15416 + C15417) * C49742 +
           (C15418 + C15419 + C15420) * C50637) *
              C50796 * C50696 * C1096 -
          ((C15603 + C15604 + C15605) * C50637 +
           (C15606 + C15607 + C15608) * C49742 +
           (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
            C15375 * C299 + C15372 * C316) *
               C50911 +
           (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
            C15375 * C286 + C15372 * C300) *
               C49749) *
              C50796 * C50696 * C1097 +
          ((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
            C15377 * C3587 + C15374 * C3593) *
               C49749 +
           (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
            C15377 * C3592 + C15374 * C3596) *
               C50911 +
           (C15609 + C15610 + C15611) * C49742 +
           (C15612 + C15613 + C15614) * C50637) *
              C50796 * C50696 * C1098 -
          ((C15377 * C9219 + C15374 * C9223 + C15376 * C4100 + C15373 * C4105 +
            C15375 * C1109 + C15372 * C1115) *
               C50637 +
           (C15377 * C9217 + C15374 * C9220 + C15376 * C4096 + C15373 * C4101 +
            C15375 * C1103 + C15372 * C1110) *
               C49742 +
           (C15377 * C9221 + C15374 * C9224 + C15376 * C4102 + C15373 * C4106 +
            C15375 * C1111 + C15372 * C1116) *
               C50911 +
           (C15377 * C9218 + C15374 * C9222 + C15376 * C4097 + C15373 * C4103 +
            C15375 * C1104 + C15372 * C1112) *
               C49749) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C49749 +
              (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
              C172 * C50637) *
                 C7951 +
             (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
                C1676 -
            (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
             (C529 * C50637 + C530 * C49742 +
              (C117 * C476 + C50822 * C493) * C50911 +
              (C117 * C463 + C50822 * C477) * C49749) *
                 C7951) *
                C50760) *
               C50928 +
           (((C8792 + C8791 + C8790 + C8789) * C7951 +
             (C8788 + C8787 + C8786 + C8785) * C7952 +
             (C9745 + C9746 + C9739 + C9740) * C7953) *
                C50760 -
            (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
             (C8106 + C8105 + C8104 + C8103) * C7951) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                 C7951 +
             (C8797 + C8798 + C8799 + C8800) * C7952 +
             (C8801 + C8802 + C8803 + C8804) * C7953) *
                C50760 -
            (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
             (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                 C7951) *
                C1676) *
               C50928 +
           (((C8119 + C8120 + C8121 + C8122) * C7951 +
             (C8123 + C8124 + C8125 + C8126) * C7952 +
             (C8127 + C8128 + C8129 + C8130) * C7953) *
                C1676 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C49742 + C8806 * C50911 +
              C8805 * C49749) *
                 C7953 +
             (C8804 + C8803 + C8802 + C8801) * C7952 +
             (C8800 + C8799 + C8798 + C8797) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C118 +
             (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50796 * C1676 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
             (C117 * C463 + C50822 * C477) * C118) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C889 + C50822 * C894) * C118 +
             (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50796 * C50760 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
             (C117 * C286 + C50822 * C300) * C118) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50796 * C50760 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50796 * C1676) *
               C50928 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50796 * C1676 -
            ((C117 * C902 + C50822 * C908) * C109 +
             (C117 * C893 + C50822 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C49749 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50911 +
             (C15415 + C15416 + C15417) * C49742 +
             (C15418 + C15419 + C15420) * C50637) *
                C50796 * C1676 -
            ((C15785 + C15786 + C15787) * C50637 +
             (C15788 + C15789 + C15790) * C49742 +
             (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50911 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C49749) *
                C50796 * C50760) *
               C50928 +
           (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
              C15377 * C4511 + C15374 * C4517) *
                 C49749 +
             (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
              C15377 * C4516 + C15374 * C4520) *
                 C50911 +
             (C16331 + C16332 + C16333) * C49742 +
             (C16334 + C16335 + C16336) * C50637) *
                C50796 * C50760 -
            ((C15603 + C15604 + C15605) * C50637 +
             (C15606 + C15607 + C15608) * C49742 +
             (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
              C15375 * C299 + C15372 * C316) *
                 C50911 +
             (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
              C15375 * C286 + C15372 * C300) *
                 C49749) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          ((((C15790 + C15789 + C15788) * C49749 +
             (C15787 + C15786 + C15785) * C50911 +
             (C16119 + C16120 + C16121) * C49742 +
             (C16122 + C16123 + C16124) * C50637) *
                C50796 * C50760 -
            ((C15421 + C15422 + C15423) * C50637 +
             (C15424 + C15425 + C15426) * C49742 +
             (C15420 + C15419 + C15418) * C50911 +
             (C15417 + C15416 + C15415) * C49749) *
                C50796 * C1676) *
               C50928 +
           (((C15608 + C15607 + C15606) * C49749 +
             (C15605 + C15604 + C15603) * C50911 +
             (C15955 + C15956 + C15957) * C49742 +
             (C15958 + C15959 + C15960) * C50637) *
                C50796 * C1676 -
            ((C15377 * C4512 + C15374 * C4518 + C15376 * C1221 +
              C15373 * C1228 + C15375 * C899 + C15372 * C906) *
                 C50637 +
             (C15377 * C4509 + C15374 * C4513 + C15376 * C1216 +
              C15373 * C1222 + C15375 * C891 + C15372 * C898) *
                 C49742 +
             (C16336 + C16335 + C16334) * C50911 +
             (C16333 + C16332 + C16331) * C49749) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50974 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C9226 + C9227 + C9228 + C9229) * C7952 +
            (C9238 + C9239 + C9234 + C9235) * C7953) *
               C2092) *
              C50928 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50975 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50974 -
           (((C117 * C9219 + C50822 * C9223) * C50637 +
             (C117 * C9217 + C50822 * C9220) * C49742 +
             (C117 * C9221 + C50822 * C9224) * C50911 +
             (C117 * C9218 + C50822 * C9222) * C49749) *
                C7953 +
            (C9235 + C9234 + C9239 + C9238) * C7952 +
            (C9229 + C9228 + C9227 + C9226) * C7951) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50974 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50975 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C2092) *
              C50928 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50975 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50974 -
           ((C117 * C1219 + C50822 * C1227) * C109 +
            (C117 * C1215 + C50822 * C1220) * C121 +
            (C117 * C1221 + C50822 * C1228) * C108 +
            (C117 * C1216 + C50822 * C1222) * C120 +
            (C117 * C1223 + C50822 * C1229) * C107 +
            (C117 * C1217 + C50822 * C1224) * C119 +
            (C117 * C1225 + C50822 * C1230) * C106 +
            (C117 * C1218 + C50822 * C1226) * C118) *
               C50796 * C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50974 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50975 +
           ((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
             C15377 * C7355 + C15374 * C7361) *
                C49749 +
            (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
             C15377 * C7360 + C15374 * C7364) *
                C50911 +
            (C15791 + C15792 + C15793) * C49742 +
            (C15794 + C15795 + C15796) * C50637) *
               C50796 * C2092) *
              C50928 +
          (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
             C15377 * C4511 + C15374 * C4517) *
                C49749 +
            (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
             C15377 * C4516 + C15374 * C4520) *
                C50911 +
            (C16331 + C16332 + C16333) * C49742 +
            (C16334 + C16335 + C16336) * C50637) *
               C50796 * C50975 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C50974 -
           ((C15377 * C16727 + C15374 * C16729 + C15376 * C4514 +
             C15373 * C4519 + C15375 * C1223 + C15372 * C1229) *
                C50637 +
            (C15377 * C16726 + C15374 * C16728 + C15376 * C4510 +
             C15373 * C4515 + C15375 * C1217 + C15372 * C1224) *
                C49742 +
            (C15377 * C14784 + C15374 * C14787 + C15376 * C4516 +
             C15373 * C4520 + C15375 * C1225 + C15372 * C1230) *
                C50911 +
            (C15377 * C14781 + C15374 * C14785 + C15376 * C4511 +
             C15373 * C4517 + C15375 * C1218 + C15372 * C1226) *
                C49749) *
               C50796 * C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50822 * C129) * C118 +
                (C117 * C130 + C50822 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50796 * C1676 -
               (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
                C529 * C107 + C530 * C119 +
                (C117 * C476 + C50822 * C493) * C106 +
                (C117 * C463 + C50822 * C477) * C118) *
                   C50796 * C50760) *
                  C50680 * C1027 +
              ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
                C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                   C50796 * C50760 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50796 * C1676) *
                  C50680 * C1028 +
              ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
                C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                   C50796 * C1676 -
               ((C117 * C750 + C50822 * C752) * C109 +
                (C117 * C749 + C50822 * C751) * C121 + C759 * C108 +
                C758 * C120 + C525 * C107 + C526 * C119 + C527 * C106 +
                C528 * C118) *
                   C50796 * C50760) *
                  C50680 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50822 * C129) * C118 +
                (C117 * C130 + C50822 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50796 * C1676 -
               (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
                C529 * C107 + C530 * C119 +
                (C117 * C476 + C50822 * C493) * C106 +
                (C117 * C463 + C50822 * C477) * C118) *
                   C50796 * C50760) *
                  C278 +
              (((C117 * C889 + C50822 * C894) * C118 +
                (C117 * C895 + C50822 * C904) * C106 + C922 * C119 +
                C923 * C107 + C924 * C120 + C925 * C108 + C926 * C121 +
                C927 * C109) *
                   C50796 * C50760 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50822 * C316) * C106 +
                (C117 * C286 + C50822 * C300) * C118) *
                   C50796 * C1676) *
                  C279 +
              (((C117 * C287 + C50822 * C301) * C118 +
                (C117 * C302 + C50822 * C317) * C106 + C354 * C119 +
                C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
                C359 * C109) *
                   C50796 * C1676 -
               ((C117 * C1566 + C50822 * C1574) * C109 +
                (C117 * C1562 + C50822 * C1567) * C121 +
                (C117 * C1568 + C50822 * C1575) * C108 +
                (C117 * C1563 + C50822 * C1569) * C120 +
                (C117 * C1570 + C50822 * C1576) * C107 +
                (C117 * C1564 + C50822 * C1571) * C119 +
                (C117 * C1572 + C50822 * C1577) * C106 +
                (C117 * C1565 + C50822 * C1573) * C118) *
                   C50796 * C50760) *
                  C280) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C1842 -
          (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 + C529 * C107 +
           C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
           (C117 * C463 + C50822 * C477) * C118) *
              C50796 * C1843 +
          ((C117 * C464 + C50822 * C478) * C118 +
           (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
           C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
              C50796 * C1844 -
          ((C117 * C1850 + C50822 * C1858) * C109 +
           (C117 * C1846 + C50822 * C1851) * C121 +
           (C117 * C1852 + C50822 * C1859) * C108 +
           (C117 * C1847 + C50822 * C1853) * C120 +
           (C117 * C1854 + C50822 * C1860) * C107 +
           (C117 * C1848 + C50822 * C1855) * C119 +
           (C117 * C1856 + C50822 * C1861) * C106 +
           (C117 * C1849 + C50822 * C1857) * C118) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C8797 + C8798 + C8799 + C8800) * C7952 +
            (C8801 + C8802 + C8803 + C8804) * C7953) *
               C50760 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C1676 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C49742 + C3169 * C50911 +
             C3168 * C49749) *
                C7953 +
            (C927 * C50637 + C926 * C49742 + C925 * C50911 + C924 * C49749) *
                C7952 +
            (C525 * C50637 + C526 * C49742 + C527 * C50911 + C528 * C49749) *
                C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C278 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50760 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C1676) *
              C279 +
          ((C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C1676 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C49742 +
             (C117 * C9729 + C50822 * C9732) * C50911 +
             (C117 * C9726 + C50822 * C9730) * C49749) *
                C7953 +
            (C9740 + C9739 + C9746 + C9745) * C7952 + C9744 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
              C1842 -
          (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
           (C529 * C50637 + C530 * C49742 +
            (C117 * C476 + C50822 * C493) * C50911 +
            (C117 * C463 + C50822 * C477) * C49749) *
               C7951) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C49749 +
            (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
            C532 * C50637) *
               C7951 +
           (C9226 + C9227 + C9228 + C9229) * C7952 +
           (C9238 + C9239 + C9234 + C9235) * C7953) *
              C1844 -
          (((C117 * C10138 + C50822 * C10142) * C50637 +
            (C117 * C10136 + C50822 * C10139) * C49742 +
            (C117 * C10140 + C50822 * C10143) * C50911 +
            (C117 * C10137 + C50822 * C10141) * C49749) *
               C7953 +
           ((C117 * C4514 + C50822 * C4519) * C50637 +
            (C117 * C4510 + C50822 * C4515) * C49742 +
            (C117 * C4516 + C50822 * C4520) * C50911 +
            (C117 * C4511 + C50822 * C4517) * C49749) *
               C7952 +
           ((C117 * C1854 + C50822 * C1860) * C50637 +
            (C117 * C1848 + C50822 * C1855) * C49742 +
            (C117 * C1856 + C50822 * C1861) * C50911 +
            (C117 * C1849 + C50822 * C1857) * C49749) *
               C7951) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C1676 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C15790 + C15789 + C15788) * C49749 +
            (C15787 + C15786 + C15785) * C50911 +
            (C16119 + C16120 + C16121) * C49742 +
            (C16122 + C16123 + C16124) * C50637) *
               C50796 * C50760 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C1676) *
              C50680 * C1028 +
          (((C15426 + C15425 + C15424) * C49749 +
            (C15423 + C15422 + C15421) * C50911 +
            (C15427 + C15428 + C15429) * C49742 +
            (C15430 + C15431 + C15432) * C50637) *
               C50796 * C1676 -
           ((C15377 * C1850 + C15374 * C1858 + C15376 * C485 + C15373 * C497 +
             C15375 * C470 + C15372 * C490) *
                C50637 +
            (C15377 * C1846 + C15374 * C1851 + C15376 * C467 + C15373 * C484 +
             C15375 * C460 + C15372 * C471) *
                C49742 +
            (C16124 + C16123 + C16122) * C50911 +
            (C16121 + C16120 + C16119) * C49749) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C1676 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50760) *
              C278 +
          (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
             C15377 * C4511 + C15374 * C4517) *
                C49749 +
            (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
             C15377 * C4516 + C15374 * C4520) *
                C50911 +
            (C16331 + C16332 + C16333) * C49742 +
            (C16334 + C16335 + C16336) * C50637) *
               C50796 * C50760 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C1676) *
              C279 +
          (((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
             C15377 * C3587 + C15374 * C3593) *
                C49749 +
            (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
             C15377 * C3592 + C15374 * C3596) *
                C50911 +
            (C15609 + C15610 + C15611) * C49742 +
            (C15612 + C15613 + C15614) * C50637) *
               C50796 * C1676 -
           ((C15377 * C10138 + C15374 * C10142 + C15376 * C3590 +
             C15373 * C3595 + C15375 * C1570 + C15372 * C1576) *
                C50637 +
            (C15377 * C10136 + C15374 * C10139 + C15376 * C3586 +
             C15373 * C3591 + C15375 * C1564 + C15372 * C1571) *
                C49742 +
            (C15377 * C10140 + C15374 * C10143 + C15376 * C3592 +
             C15373 * C3596 + C15375 * C1572 + C15372 * C1577) *
                C50911 +
            (C15377 * C10137 + C15374 * C10141 + C15376 * C3587 +
             C15373 * C3593 + C15375 * C1565 + C15372 * C1573) *
                C49749) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
            C15377 * C464 + C15374 * C478) *
               C49749 +
           (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
            C15377 * C479 + C15374 * C494) *
               C50911 +
           (C15415 + C15416 + C15417) * C49742 +
           (C15418 + C15419 + C15420) * C50637) *
              C50796 * C1842 -
          ((C15785 + C15786 + C15787) * C50637 +
           (C15788 + C15789 + C15790) * C49742 +
           (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
            C15375 * C476 + C15372 * C493) *
               C50911 +
           (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
            C15375 * C463 + C15372 * C477) *
               C49749) *
              C50796 * C1843 +
          ((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
            C15377 * C7355 + C15374 * C7361) *
               C49749 +
           (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
            C15377 * C7360 + C15374 * C7364) *
               C50911 +
           (C15791 + C15792 + C15793) * C49742 +
           (C15794 + C15795 + C15796) * C50637) *
              C50796 * C1844 -
          ((C15377 * C17608 + C15374 * C17612 + C15376 * C7358 +
            C15373 * C7363 + C15375 * C1854 + C15372 * C1860) *
               C50637 +
           (C15377 * C17606 + C15374 * C17609 + C15376 * C7354 +
            C15373 * C7359 + C15375 * C1848 + C15372 * C1855) *
               C49742 +
           (C15377 * C17610 + C15374 * C17613 + C15376 * C7360 +
            C15373 * C7364 + C15375 * C1856 + C15372 * C1861) *
               C50911 +
           (C15377 * C17607 + C15374 * C17611 + C15376 * C7355 +
            C15373 * C7361 + C15375 * C1849 + C15372 * C1857) *
               C49749) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50974 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C9226 + C9227 + C9228 + C9229) * C7952 +
            (C9238 + C9239 + C9234 + C9235) * C7953) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C8797 + C8798 + C8799 + C8800) * C7952 +
            (C8801 + C8802 + C8803 + C8804) * C7953) *
               C50975 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50974 -
           (((C117 * C3588 + C50822 * C3594) * C50637 +
             (C117 * C3585 + C50822 * C3589) * C49742 + C8290 * C50911 +
             C8289 * C49749) *
                C7953 +
            (C2649 * C50637 + C2648 * C49742 + C2647 * C50911 +
             C2646 * C49749) *
                C7952 +
            (C534 * C50637 + C533 * C49742 + C532 * C50911 + C531 * C49749) *
                C7951) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50974 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50975 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C2092) *
              C50680 * C50920 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50975 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50974 -
           ((C117 * C488 + C50822 * C499) * C109 +
            (C117 * C469 + C50822 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50796 * C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C50974 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50975 +
           ((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
             C15377 * C7355 + C15374 * C7361) *
                C49749 +
            (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
             C15377 * C7360 + C15374 * C7364) *
                C50911 +
            (C15791 + C15792 + C15793) * C49742 +
            (C15794 + C15795 + C15796) * C50637) *
               C50796 * C2092) *
              C50680 * C50920 +
          (((C15790 + C15789 + C15788) * C49749 +
            (C15787 + C15786 + C15785) * C50911 +
            (C16119 + C16120 + C16121) * C49742 +
            (C16122 + C16123 + C16124) * C50637) *
               C50796 * C50975 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C50974 -
           ((C15377 * C7356 + C15374 * C7362 + C15376 * C1852 + C15373 * C1859 +
             C15375 * C483 + C15372 * C496) *
                C50637 +
            (C15377 * C7353 + C15374 * C7357 + C15376 * C1847 + C15373 * C1853 +
             C15375 * C466 + C15372 * C482) *
                C49742 +
            (C15796 + C15795 + C15794) * C50911 +
            (C15793 + C15792 + C15791) * C49749) *
               C50796 * C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C278 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50760 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C1676) *
              C279 +
          (((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C1676 -
           ((C117 * C1566 + C50822 * C1574) * C109 +
            (C117 * C1562 + C50822 * C1567) * C121 +
            (C117 * C1568 + C50822 * C1575) * C108 +
            (C117 * C1563 + C50822 * C1569) * C120 +
            (C117 * C1570 + C50822 * C1576) * C107 +
            (C117 * C1564 + C50822 * C1571) * C119 +
            (C117 * C1572 + C50822 * C1577) * C106 +
            (C117 * C1565 + C50822 * C1573) * C118) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50680 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50760 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C1676 -
           ((C117 * C750 + C50822 * C752) * C109 +
            (C117 * C749 + C50822 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C8797 + C8798 + C8799 + C8800) * C7952 +
            (C8801 + C8802 + C8803 + C8804) * C7953) *
               C50760 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C1676 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C49742 + C3169 * C50911 +
             C3168 * C49749) *
                C7953 +
            (C927 * C50637 + C926 * C49742 + C925 * C50911 + C924 * C49749) *
                C7952 +
            (C525 * C50637 + C526 * C49742 + C527 * C50911 + C528 * C49749) *
                C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C278 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50760 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C1676) *
              C279 +
          ((C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C1676 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C49742 +
             (C117 * C9729 + C50822 * C9732) * C50911 +
             (C117 * C9726 + C50822 * C9730) * C49749) *
                C7953 +
            (C9740 + C9739 + C9746 + C9745) * C7952 + C9744 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C1676 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C15790 + C15789 + C15788) * C49749 +
            (C15787 + C15786 + C15785) * C50911 +
            (C16119 + C16120 + C16121) * C49742 +
            (C16122 + C16123 + C16124) * C50637) *
               C50796 * C50760 -
           ((C15421 + C15422 + C15423) * C50637 +
            (C15424 + C15425 + C15426) * C49742 +
            (C15420 + C15419 + C15418) * C50911 +
            (C15417 + C15416 + C15415) * C49749) *
               C50796 * C1676) *
              C50680 * C1028 +
          (((C15426 + C15425 + C15424) * C49749 +
            (C15423 + C15422 + C15421) * C50911 +
            (C15427 + C15428 + C15429) * C49742 +
            (C15430 + C15431 + C15432) * C50637) *
               C50796 * C1676 -
           ((C15377 * C1850 + C15374 * C1858 + C15376 * C485 + C15373 * C497 +
             C15375 * C470 + C15372 * C490) *
                C50637 +
            (C15377 * C1846 + C15374 * C1851 + C15376 * C467 + C15373 * C484 +
             C15375 * C460 + C15372 * C471) *
                C49742 +
            (C16124 + C16123 + C16122) * C50911 +
            (C16121 + C16120 + C16119) * C49749) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C49749 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50911 +
            (C15415 + C15416 + C15417) * C49742 +
            (C15418 + C15419 + C15420) * C50637) *
               C50796 * C1676 -
           ((C15785 + C15786 + C15787) * C50637 +
            (C15788 + C15789 + C15790) * C49742 +
            (C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50911 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C49749) *
               C50796 * C50760) *
              C278 +
          (((C15375 * C889 + C15372 * C894 + C15376 * C1218 + C15373 * C1226 +
             C15377 * C4511 + C15374 * C4517) *
                C49749 +
            (C15375 * C895 + C15372 * C904 + C15376 * C1225 + C15373 * C1230 +
             C15377 * C4516 + C15374 * C4520) *
                C50911 +
            (C16331 + C16332 + C16333) * C49742 +
            (C16334 + C16335 + C16336) * C50637) *
               C50796 * C50760 -
           ((C15603 + C15604 + C15605) * C50637 +
            (C15606 + C15607 + C15608) * C49742 +
            (C15377 * C1225 + C15374 * C1230 + C15376 * C895 + C15373 * C904 +
             C15375 * C299 + C15372 * C316) *
                C50911 +
            (C15377 * C1218 + C15374 * C1226 + C15376 * C889 + C15373 * C894 +
             C15375 * C286 + C15372 * C300) *
                C49749) *
               C50796 * C1676) *
              C279 +
          (((C15375 * C287 + C15372 * C301 + C15376 * C1565 + C15373 * C1573 +
             C15377 * C3587 + C15374 * C3593) *
                C49749 +
            (C15375 * C302 + C15372 * C317 + C15376 * C1572 + C15373 * C1577 +
             C15377 * C3592 + C15374 * C3596) *
                C50911 +
            (C15609 + C15610 + C15611) * C49742 +
            (C15612 + C15613 + C15614) * C50637) *
               C50796 * C1676 -
           ((C15377 * C10138 + C15374 * C10142 + C15376 * C3590 +
             C15373 * C3595 + C15375 * C1570 + C15372 * C1576) *
                C50637 +
            (C15377 * C10136 + C15374 * C10139 + C15376 * C3586 +
             C15373 * C3591 + C15375 * C1564 + C15372 * C1571) *
                C49742 +
            (C15377 * C10140 + C15374 * C10143 + C15376 * C3592 +
             C15373 * C3596 + C15375 * C1572 + C15372 * C1577) *
                C50911 +
            (C15377 * C10137 + C15374 * C10141 + C15376 * C3587 +
             C15373 * C3593 + C15375 * C1565 + C15372 * C1573) *
                C49749) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C50928 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C50732) *
              C50970 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50732 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50696 * C50928 -
           (((C117 * C3418 + C50822 * C3424) * C50632 +
             (C117 * C3415 + C50822 * C3419) * C10701) *
                C10700 +
            (C11022 + C11021) * C10699 + (C11020 + C11019) * C10698 +
            (C11018 + C11017) * C10697) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C50928 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50732) *
              C50970 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50732 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50696 * C50928 -
           (((C117 * C311 + C50822 * C322) * C2291 +
             (C117 * C292 + C50822 * C312) * C2296 + C359 * C2290 +
             C358 * C2295 + C357 * C2289 + C356 * C2294) *
                C50810 +
            (C2801 + C2800 + C2799 + C2798 + C2797 + C2796) * C50939) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50696 * C50928 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50696 * C50732) *
              C50970 +
          ((((C15608 + C15607 + C15606) * C10701 +
             (C15605 + C15604 + C15603) * C50632) *
                C50939 +
            ((C15609 + C15610 + C15611) * C10701 +
             (C15612 + C15613 + C15614) * C50632) *
                C50810) *
               C50696 * C50732 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          ((((C15426 + C15425 + C15424) * C10701 +
             (C15423 + C15422 + C15421) * C50632) *
                C50939 +
            ((C15955 + C15956 + C15957) * C10701 +
             (C15958 + C15959 + C15960) * C50632) *
                C50810) *
               C50696 * C50928 -
           (((C15377 * C3588 + C15374 * C3594 + C15376 * C1568 +
              C15373 * C1575 + C15375 * C306 + C15372 * C319) *
                 C50632 +
             (C15377 * C3585 + C15374 * C3589 + C15376 * C1563 +
              C15373 * C1569 + C15375 * C289 + C15372 * C305) *
                 C10701) *
                C50810 +
            ((C15960 + C15959 + C15958) * C50632 +
             (C15957 + C15956 + C15955) * C10701) *
                C50939) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C10701 +
              (C117 * C130 + C50822 * C143) * C50632) *
                 C10697 +
             (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
                C50929 -
            ((C11251 + C11252) * C10700 + (C11253 + C11254) * C10699 +
             (C11255 + C11256) * C10698 +
             ((C117 * C476 + C50822 * C493) * C50632 +
              (C117 * C463 + C50822 * C477) * C10701) *
                 C10697) *
                C50760) *
               C50928 +
           (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
             (C11252 + C11251) * C10699 +
             ((C117 * C9726 + C50822 * C9730) * C10701 +
              (C117 * C9729 + C50822 * C9732) * C50632) *
                 C10700) *
                C50760 -
            ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
             (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C10701 + C529 * C50632) * C10697 +
             (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
             (C11261 + C11262) * C10700) *
                C50760 -
            (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
             (C172 * C50632 + C171 * C10701) * C10697) *
                C50929) *
               C50928 +
           (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
             (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
                C50929 -
            (((C117 * C9727 + C50822 * C9731) * C50632 +
              (C117 * C9725 + C50822 * C9728) * C10701) *
                 C10700 +
             (C11262 + C11261) * C10699 + (C11260 + C11259) * C10698 +
             (C11258 + C11257) * C10697) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C2294 +
              (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
              C172 * C2290 + C173 * C2296 + C174 * C2291) *
                 C50939 +
             (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                C50929 -
            ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
             (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
              (C117 * C476 + C50822 * C493) * C2289 +
              (C117 * C463 + C50822 * C477) * C2294) *
                 C50939) *
                C50760) *
               C50928 +
           (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
             ((C117 * C1565 + C50822 * C1573) * C2294 +
              (C117 * C1572 + C50822 * C1577) * C2289 + C3166 * C2295 +
              C3167 * C2290 + C3168 * C2296 + C3169 * C2291) *
                 C50810) *
                C50760 -
            ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
             (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
              C526 * C2296 + C525 * C2291) *
                 C50939 +
             (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                C50760 -
            ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
             (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
              C172 * C2289 + C171 * C2294) *
                 C50939) *
                C50929) *
               C50928 +
           (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
             (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                C50929 -
            (((C117 * C1566 + C50822 * C1574) * C2291 +
              (C117 * C1562 + C50822 * C1567) * C2296 + C3169 * C2290 +
              C3168 * C2295 + C3167 * C2289 + C3166 * C2294) *
                 C50810 +
             (C3163 + C3162 + C3161 + C3160 + C3159 + C3158) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
               C15377 * C464 + C15374 * C478) *
                  C10701 +
              (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
               C15377 * C479 + C15374 * C494) *
                  C50632) *
                 C50939 +
             ((C18369 + C18370 + C18371) * C10701 +
              (C18372 + C18373 + C18374) * C50632) *
                 C50810) *
                C50929 -
            (((C19025 + C19026 + C19027) * C50632 +
              (C19028 + C19029 + C19030) * C10701) *
                 C50810 +
             ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
               C15375 * C476 + C15372 * C493) *
                  C50632 +
              (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
               C15375 * C463 + C15372 * C477) *
                  C10701) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C19030 + C19029 + C19028) * C10701 +
              (C19027 + C19026 + C19025) * C50632) *
                 C50939 +
             ((C15375 * C1565 + C15372 * C1573 + C15376 * C3587 +
               C15373 * C3593 + C15377 * C10137 + C15374 * C10141) *
                  C10701 +
              (C15375 * C1572 + C15372 * C1577 + C15376 * C3592 +
               C15373 * C3596 + C15377 * C10140 + C15374 * C10143) *
                  C50632) *
                 C50810) *
                C50760 -
            (((C18375 + C18376 + C18377) * C50632 +
              (C18378 + C18379 + C18380) * C10701) *
                 C50810 +
             ((C18374 + C18373 + C18372) * C50632 +
              (C18371 + C18370 + C18369) * C10701) *
                 C50939) *
                C50929) *
               C50732) *
              C281 +
          (((((C15790 + C15789 + C15788) * C10701 +
              (C15787 + C15786 + C15785) * C50632) *
                 C50939 +
             ((C16331 + C16332 + C16333) * C10701 +
              (C16334 + C16335 + C16336) * C50632) *
                 C50810) *
                C50760 -
            (((C15603 + C15604 + C15605) * C50632 +
              (C15606 + C15607 + C15608) * C10701) *
                 C50810 +
             ((C15420 + C15419 + C15418) * C50632 +
              (C15417 + C15416 + C15415) * C10701) *
                 C50939) *
                C50929) *
               C50928 +
           ((((C15608 + C15607 + C15606) * C10701 +
              (C15605 + C15604 + C15603) * C50632) *
                 C50939 +
             ((C15609 + C15610 + C15611) * C10701 +
              (C15612 + C15613 + C15614) * C50632) *
                 C50810) *
                C50929 -
            (((C15377 * C10138 + C15374 * C10142 + C15376 * C3590 +
               C15373 * C3595 + C15375 * C1570 + C15372 * C1576) *
                  C50632 +
              (C15377 * C10136 + C15374 * C10139 + C15376 * C3586 +
               C15373 * C3591 + C15375 * C1564 + C15372 * C1571) *
                  C10701) *
                 C50810 +
             ((C16336 + C16335 + C16334) * C50632 +
              (C16333 + C16332 + C16331) * C10701) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50822 * C129) * C2294 +
                (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
                C172 * C2290 + C173 * C2296 + C174 * C2291) *
                   C50939 +
               ((C117 * C286 + C50822 * C300) * C2294 +
                (C117 * C299 + C50822 * C316) * C2289 + C353 * C2295 +
                C352 * C2290 + C351 * C2296 + C350 * C2291) *
                   C50810) *
                  C50696 * C50680 * C113 -
              ((C348 * C2291 + C349 * C2296 + C350 * C2290 + C351 * C2295 +
                C352 * C2289 + C353 * C2294) *
                   C50810 +
               (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
                C172 * C2289 + C171 * C2294) *
                   C50939) *
                  C50696 * C50680 * C114 +
              ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
                C178 * C2296 + C177 * C2291) *
                   C50939 +
               (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C2290 +
                C648 * C2296 + C649 * C2291) *
                   C50810) *
                  C50696 * C50680 * C115 -
              (((C117 * C640 + C50822 * C642) * C2291 +
                (C117 * C639 + C50822 * C641) * C2296 + C649 * C2290 +
                C648 * C2295 + C348 * C2289 + C349 * C2294) *
                   C50810 +
               (C180 * C2291 + C179 * C2296 + C177 * C2290 + C178 * C2295 +
                C176 * C2289 + C175 * C2294) *
                   C50939) *
                  C50696 * C50680 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50822 * C129) * C2294 +
                 (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
                 C172 * C2290 + C173 * C2296 + C174 * C2291) *
                    C50939 +
                (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                   C50696 * C278 -
               ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
                (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                   C50696 * C279 +
               ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
                ((C117 * C1104 + C50822 * C1112) * C2294 +
                 (C117 * C1111 + C50822 * C1116) * C2289 + C2484 * C2295 +
                 C2485 * C2290 + C2486 * C2296 + C2487 * C2291) *
                    C50810) *
                   C50696 * C280) *
                  C281 +
              (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
                (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                   C50696 * C279 -
               ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
                (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
                 C172 * C2289 + C171 * C2294) *
                    C50939) *
                   C50696 * C278 -
               (((C117 * C1105 + C50822 * C1113) * C2291 +
                 (C117 * C1101 + C50822 * C1106) * C2296 + C2487 * C2290 +
                 C2486 * C2295 + C2485 * C2289 + C2484 * C2294) *
                    C50810 +
                (C2479 + C2478 + C2477 + C2476 + C2475 + C2474) * C50939) *
                   C50696 * C280) *
                  C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C457 -
           ((C925 * C2291 + C924 * C2296 + C923 * C2290 + C922 * C2295 +
             (C117 * C895 + C50822 * C904) * C2289 +
             (C117 * C889 + C50822 * C894) * C2294) *
                C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            ((C117 * C1218 + C50822 * C1226) * C2294 +
             (C117 * C1225 + C50822 * C1230) * C2289 + C2646 * C2295 +
             C2647 * C2290 + C2648 * C2296 + C2649 * C2291) *
                C50810) *
               C459) *
              C50680 * C281 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C2290 +
             C926 * C2296 + C927 * C2291) *
                C50810) *
               C458 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C457 -
           (((C117 * C1219 + C50822 * C1227) * C2291 +
             (C117 * C1215 + C50822 * C1220) * C2296 + C2649 * C2290 +
             C2648 * C2295 + C2647 * C2289 + C2646 * C2294) *
                C50810 +
            (C536 * C2291 + C535 * C2296 + C534 * C2290 + C533 * C2295 +
             C532 * C2289 + C531 * C2294) *
                C50939) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C2480 * C10701 + C2481 * C50632) * C10698 +
           (C2483 * C10701 + C2482 * C50632) * C10699 +
           (C3436 * C10701 + C3437 * C50632) * C10700) *
              C50696 * C50680 * C113 -
          ((C2485 * C50632 + C2484 * C10701) * C10700 +
           (C355 * C50632 + C354 * C10701) * C10699 +
           (C352 * C50632 + C353 * C10701) * C10698 +
           (C172 * C50632 + C171 * C10701) * C10697) *
              C50696 * C50680 * C114 +
          ((C173 * C10701 + C174 * C50632) * C10697 +
           (C351 * C10701 + C350 * C50632) * C10698 +
           (C356 * C10701 + C357 * C50632) * C10699 +
           (C2486 * C10701 + C2487 * C50632) * C10700) *
              C50696 * C50680 * C115 -
          (((C117 * C1105 + C50822 * C1113) * C50632 +
            (C117 * C1101 + C50822 * C1106) * C10701) *
               C10700 +
           (C359 * C50632 + C358 * C10701) * C10699 +
           (C348 * C50632 + C349 * C10701) * C10698 +
           (C176 * C50632 + C175 * C10701) * C10697) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C278 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C279 +
           (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            ((C117 * C9051 + C50822 * C9055) * C10701 +
             (C117 * C9054 + C50822 * C9057) * C50632) *
                C10700) *
               C50696 * C280) *
              C281 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C279 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C278 -
           (((C117 * C9052 + C50822 * C9056) * C50632 +
             (C117 * C9050 + C50822 * C9053) * C10701) *
                C10700 +
            (C10816 + C10815) * C10699 + C10819 * C10698 + C10820 * C10697) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C457 -
           ((C9743 * C50632 + C9742 * C10701) * C10700 +
            (C4117 * C50632 + C4116 * C10701) * C10699 +
            (C3164 * C50632 + C3165 * C10701) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C3606 * C10701 + C3607 * C50632) * C10698 +
            (C9236 * C10701 + C9237 * C50632) * C10699 +
            ((C117 * C9218 + C50822 * C9222) * C10701 +
             (C117 * C9221 + C50822 * C9224) * C50632) *
                C10700) *
               C459) *
              C50680 * C281 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C922 * C10701 + C923 * C50632) * C10698 +
            (C3166 * C10701 + C3167 * C50632) * C10699 +
            (C8805 * C10701 + C8806 * C50632) * C10700) *
               C458 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C457 -
           (((C117 * C9219 + C50822 * C9223) * C50632 +
             (C117 * C9217 + C50822 * C9220) * C10701) *
                C10700 +
            (C8290 * C50632 + C8289 * C10701) * C10699 +
            (C2647 * C50632 + C2646 * C10701) * C10698 +
            (C532 * C50632 + C531 * C10701) * C10697) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C10701 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50632) *
               C50939 +
           ((C15375 * C286 + C15372 * C300 + C15376 * C889 + C15373 * C894 +
             C15377 * C1218 + C15374 * C1226) *
                C10701 +
            (C15375 * C299 + C15372 * C316 + C15376 * C895 + C15373 * C904 +
             C15377 * C1225 + C15374 * C1230) *
                C50632) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C15603 + C15604 + C15605) * C50632 +
            (C15606 + C15607 + C15608) * C10701) *
               C50810 +
           ((C15420 + C15419 + C15418) * C50632 +
            (C15417 + C15416 + C15415) * C10701) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C15426 + C15425 + C15424) * C10701 +
            (C15423 + C15422 + C15421) * C50632) *
               C50939 +
           ((C15955 + C15956 + C15957) * C10701 +
            (C15958 + C15959 + C15960) * C50632) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C15377 * C1219 + C15374 * C1227 + C15376 * C901 + C15373 * C907 +
             C15375 * C293 + C15372 * C313) *
                C50632 +
            (C15377 * C1215 + C15374 * C1220 + C15376 * C892 + C15373 * C900 +
             C15375 * C283 + C15372 * C294) *
                C10701) *
               C50810 +
           ((C15432 + C15431 + C15430) * C50632 +
            (C15429 + C15428 + C15427) * C10701) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50696 * C278 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50696 * C279 +
           (((C18380 + C18379 + C18378) * C10701 +
             (C18377 + C18376 + C18375) * C50632) *
                C50939 +
            ((C15375 * C1104 + C15372 * C1112 + C15376 * C4097 +
              C15373 * C4103 + C15377 * C9218 + C15374 * C9222) *
                 C10701 +
             (C15375 * C1111 + C15372 * C1116 + C15376 * C4102 +
              C15373 * C4106 + C15377 * C9221 + C15374 * C9224) *
                 C50632) *
                C50810) *
               C50696 * C280) *
              C281 +
          ((((C15608 + C15607 + C15606) * C10701 +
             (C15605 + C15604 + C15603) * C50632) *
                C50939 +
            ((C15609 + C15610 + C15611) * C10701 +
             (C15612 + C15613 + C15614) * C50632) *
                C50810) *
               C50696 * C279 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50696 * C278 -
           (((C15377 * C9219 + C15374 * C9223 + C15376 * C4100 +
              C15373 * C4105 + C15375 * C1109 + C15372 * C1115) *
                 C50632 +
             (C15377 * C9217 + C15374 * C9220 + C15376 * C4096 +
              C15373 * C4101 + C15375 * C1103 + C15372 * C1110) *
                 C10701) *
                C50810 +
            ((C15614 + C15613 + C15612) * C50632 +
             (C15611 + C15610 + C15609) * C10701) *
                C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C457 -
           (((C15377 * C4516 + C15374 * C4520 + C15376 * C1225 +
              C15373 * C1230 + C15375 * C895 + C15372 * C904) *
                 C50632 +
             (C15377 * C4511 + C15374 * C4517 + C15376 * C1218 +
              C15373 * C1226 + C15375 * C889 + C15372 * C894) *
                 C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C458 +
           (((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
              C15377 * C7355 + C15374 * C7361) *
                 C10701 +
             (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
              C15377 * C7360 + C15374 * C7364) *
                 C50632) *
                C50939 +
            ((C15375 * C1218 + C15372 * C1226 + C15376 * C4511 +
              C15373 * C4517 + C15377 * C14781 + C15374 * C14785) *
                 C10701 +
             (C15375 * C1225 + C15372 * C1230 + C15376 * C4516 +
              C15373 * C4520 + C15377 * C14784 + C15374 * C14787) *
                 C50632) *
                C50810) *
               C459) *
              C50680 * C281 +
          ((((C15790 + C15789 + C15788) * C10701 +
             (C15787 + C15786 + C15785) * C50632) *
                C50939 +
            ((C16331 + C16332 + C16333) * C10701 +
             (C16334 + C16335 + C16336) * C50632) *
                C50810) *
               C458 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C457 -
           (((C15377 * C16727 + C15374 * C16729 + C15376 * C4514 +
              C15373 * C4519 + C15375 * C1223 + C15372 * C1229) *
                 C50632 +
             (C15377 * C16726 + C15374 * C16728 + C15376 * C4510 +
              C15373 * C4515 + C15375 * C1217 + C15372 * C1224) *
                 C10701) *
                C50810 +
            ((C15796 + C15795 + C15794) * C50632 +
             (C15793 + C15792 + C15791) * C10701) *
                C50939) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50929 -
           ((C9743 * C50632 + C9742 * C10701) * C10700 +
            (C4117 * C50632 + C4116 * C10701) * C10699 +
            (C3164 * C50632 + C3165 * C10701) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C922 * C10701 + C923 * C50632) * C10698 +
            (C3166 * C10701 + C3167 * C50632) * C10699 +
            (C8805 * C10701 + C8806 * C50632) * C10700) *
               C50760 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50929 -
           (((C117 * C4098 + C50822 * C4104) * C50632 +
             (C117 * C4095 + C50822 * C4099) * C10701) *
                C10700 +
            (C3169 * C50632 + C3168 * C10701) * C10699 +
            (C925 * C50632 + C924 * C10701) * C10698 +
            (C527 * C50632 + C528 * C10701) * C10697) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50929 -
           ((C925 * C2291 + C924 * C2296 + C923 * C2290 + C922 * C2295 +
             (C117 * C895 + C50822 * C904) * C2289 +
             (C117 * C889 + C50822 * C894) * C2294) *
                C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C2290 +
             C926 * C2296 + C927 * C2291) *
                C50810) *
               C50760 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50929 -
           (((C117 * C902 + C50822 * C908) * C2291 +
             (C117 * C893 + C50822 * C903) * C2296 + C927 * C2290 +
             C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C50810 +
            (C759 * C2291 + C758 * C2296 + C525 * C2290 + C526 * C2295 +
             C527 * C2289 + C528 * C2294) *
                C50939) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50929 -
           (((C15377 * C4516 + C15374 * C4520 + C15376 * C1225 +
              C15373 * C1230 + C15375 * C895 + C15372 * C904) *
                 C50632 +
             (C15377 * C4511 + C15374 * C4517 + C15376 * C1218 +
              C15373 * C1226 + C15375 * C889 + C15372 * C894) *
                 C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          ((((C15790 + C15789 + C15788) * C10701 +
             (C15787 + C15786 + C15785) * C50632) *
                C50939 +
            ((C16331 + C16332 + C16333) * C10701 +
             (C16334 + C16335 + C16336) * C50632) *
                C50810) *
               C50760 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          ((((C15426 + C15425 + C15424) * C10701 +
             (C15423 + C15422 + C15421) * C50632) *
                C50939 +
            ((C15955 + C15956 + C15957) * C10701 +
             (C15958 + C15959 + C15960) * C50632) *
                C50810) *
               C50929 -
           (((C15377 * C4512 + C15374 * C4518 + C15376 * C1221 +
              C15373 * C1228 + C15375 * C899 + C15372 * C906) *
                 C50632 +
             (C15377 * C4509 + C15374 * C4513 + C15376 * C1216 +
              C15373 * C1222 + C15375 * C891 + C15372 * C898) *
                 C10701) *
                C50810 +
            ((C16124 + C16123 + C16122) * C50632 +
             (C16121 + C16120 + C16119) * C10701) *
                C50939) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C278 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C279 +
           ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            ((C117 * C1104 + C50822 * C1112) * C2294 +
             (C117 * C1111 + C50822 * C1116) * C2289 + C2484 * C2295 +
             C2485 * C2290 + C2486 * C2296 + C2487 * C2291) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C279 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C278 -
           (((C117 * C1105 + C50822 * C1113) * C2291 +
             (C117 * C1101 + C50822 * C1106) * C2296 + C2487 * C2290 +
             C2486 * C2295 + C2485 * C2289 + C2484 * C2294) *
                C50810 +
            (C2479 + C2478 + C2477 + C2476 + C2475 + C2474) * C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           ((C117 * C286 + C50822 * C300) * C2294 +
            (C117 * C299 + C50822 * C316) * C2289 + C353 * C2295 +
            C352 * C2290 + C351 * C2296 + C350 * C2291) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C348 * C2291 + C349 * C2296 + C350 * C2290 + C351 * C2295 +
            C352 * C2289 + C353 * C2294) *
               C50810 +
           (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
            C172 * C2289 + C171 * C2294) *
               C50939) *
              C50696 * C50680 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
            C178 * C2296 + C177 * C2291) *
               C50939 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C2290 +
            C648 * C2296 + C649 * C2291) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C117 * C640 + C50822 * C642) * C2291 +
            (C117 * C639 + C50822 * C641) * C2296 + C649 * C2290 +
            C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C50810 +
           (C180 * C2291 + C179 * C2296 + C177 * C2290 + C178 * C2295 +
            C176 * C2289 + C175 * C2294) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C2480 * C10701 + C2481 * C50632) * C10698 +
           (C2483 * C10701 + C2482 * C50632) * C10699 +
           (C3436 * C10701 + C3437 * C50632) * C10700) *
              C50696 * C50680 * C113 -
          ((C2485 * C50632 + C2484 * C10701) * C10700 +
           (C355 * C50632 + C354 * C10701) * C10699 +
           (C352 * C50632 + C353 * C10701) * C10698 +
           (C172 * C50632 + C171 * C10701) * C10697) *
              C50696 * C50680 * C114 +
          ((C173 * C10701 + C174 * C50632) * C10697 +
           (C351 * C10701 + C350 * C50632) * C10698 +
           (C356 * C10701 + C357 * C50632) * C10699 +
           (C2486 * C10701 + C2487 * C50632) * C10700) *
              C50696 * C50680 * C115 -
          (((C117 * C1105 + C50822 * C1113) * C50632 +
            (C117 * C1101 + C50822 * C1106) * C10701) *
               C10700 +
           (C359 * C50632 + C358 * C10701) * C10699 +
           (C348 * C50632 + C349 * C10701) * C10698 +
           (C176 * C50632 + C175 * C10701) * C10697) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C278 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C279 +
           (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            ((C117 * C9051 + C50822 * C9055) * C10701 +
             (C117 * C9054 + C50822 * C9057) * C50632) *
                C10700) *
               C50696 * C280) *
              C281 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C279 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C278 -
           (((C117 * C9052 + C50822 * C9056) * C50632 +
             (C117 * C9050 + C50822 * C9053) * C10701) *
                C10700 +
            (C10816 + C10815) * C10699 + C10819 * C10698 + C10820 * C10697) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C10701 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50632) *
               C50939 +
           ((C15375 * C286 + C15372 * C300 + C15376 * C889 + C15373 * C894 +
             C15377 * C1218 + C15374 * C1226) *
                C10701 +
            (C15375 * C299 + C15372 * C316 + C15376 * C895 + C15373 * C904 +
             C15377 * C1225 + C15374 * C1230) *
                C50632) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C15603 + C15604 + C15605) * C50632 +
            (C15606 + C15607 + C15608) * C10701) *
               C50810 +
           ((C15420 + C15419 + C15418) * C50632 +
            (C15417 + C15416 + C15415) * C10701) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C15426 + C15425 + C15424) * C10701 +
            (C15423 + C15422 + C15421) * C50632) *
               C50939 +
           ((C15955 + C15956 + C15957) * C10701 +
            (C15958 + C15959 + C15960) * C50632) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C15377 * C1219 + C15374 * C1227 + C15376 * C901 + C15373 * C907 +
             C15375 * C293 + C15372 * C313) *
                C50632 +
            (C15377 * C1215 + C15374 * C1220 + C15376 * C892 + C15373 * C900 +
             C15375 * C283 + C15372 * C294) *
                C10701) *
               C50810 +
           ((C15432 + C15431 + C15430) * C50632 +
            (C15429 + C15428 + C15427) * C10701) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50696 * C278 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50696 * C279 +
           (((C18380 + C18379 + C18378) * C10701 +
             (C18377 + C18376 + C18375) * C50632) *
                C50939 +
            ((C15375 * C1104 + C15372 * C1112 + C15376 * C4097 +
              C15373 * C4103 + C15377 * C9218 + C15374 * C9222) *
                 C10701 +
             (C15375 * C1111 + C15372 * C1116 + C15376 * C4102 +
              C15373 * C4106 + C15377 * C9221 + C15374 * C9224) *
                 C50632) *
                C50810) *
               C50696 * C280) *
              C281 +
          ((((C15608 + C15607 + C15606) * C10701 +
             (C15605 + C15604 + C15603) * C50632) *
                C50939 +
            ((C15609 + C15610 + C15611) * C10701 +
             (C15612 + C15613 + C15614) * C50632) *
                C50810) *
               C50696 * C279 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50696 * C278 -
           (((C15377 * C9219 + C15374 * C9223 + C15376 * C4100 +
              C15373 * C4105 + C15375 * C1109 + C15372 * C1115) *
                 C50632 +
             (C15377 * C9217 + C15374 * C9220 + C15376 * C4096 +
              C15373 * C4101 + C15375 * C1103 + C15372 * C1110) *
                 C10701) *
                C50810 +
            ((C15614 + C15613 + C15612) * C50632 +
             (C15611 + C15610 + C15609) * C10701) *
                C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C50972 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C50696 * C50973 +
           (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C50696 * C1331) *
              C50920 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50973 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C50972 -
           (((C117 * C9052 + C50822 * C9056) * C50632 +
             (C117 * C9050 + C50822 * C9053) * C10701) *
                C10700 +
            (C10816 + C10815) * C10699 + C10819 * C10698 + C10820 * C10697) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C50972 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50973 +
           ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C50696 * C1331) *
              C50920 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50973 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C50972 -
           (((C117 * C1105 + C50822 * C1113) * C2291 +
             (C117 * C1101 + C50822 * C1106) * C2296 + C2487 * C2290 +
             C2486 * C2295 + C2485 * C2289 + C2484 * C2294) *
                C50810 +
            (C2479 + C2478 + C2477 + C2476 + C2475 + C2474) * C50939) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50696 * C50972 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50696 * C50973 +
           (((C18380 + C18379 + C18378) * C10701 +
             (C18377 + C18376 + C18375) * C50632) *
                C50939 +
            ((C19287 + C19288 + C19289) * C10701 +
             (C19290 + C19291 + C19292) * C50632) *
                C50810) *
               C50696 * C1331) *
              C50920 +
          ((((C15608 + C15607 + C15606) * C10701 +
             (C15605 + C15604 + C15603) * C50632) *
                C50939 +
            ((C15609 + C15610 + C15611) * C10701 +
             (C15612 + C15613 + C15614) * C50632) *
                C50810) *
               C50696 * C50973 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50696 * C50972 -
           (((C15377 * C9219 + C15374 * C9223 + C15376 * C4100 +
              C15373 * C4105 + C15375 * C1109 + C15372 * C1115) *
                 C50632 +
             (C15377 * C9217 + C15374 * C9220 + C15376 * C4096 +
              C15373 * C4101 + C15375 * C1103 + C15372 * C1110) *
                 C10701) *
                C50810 +
            ((C15614 + C15613 + C15612) * C50632 +
             (C15611 + C15610 + C15609) * C10701) *
                C50939) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50929 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50972 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50760 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C50929) *
              C50973 +
          ((C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C50929 -
           (((C117 * C11881 + C50822 * C11883) * C50632 +
             (C117 * C11880 + C50822 * C11882) * C10701) *
                C10700 +
            (C11894 + C11893) * C10699 + C11885 * C10698 + C11886 * C10697) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50929 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50972 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50760 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50929) *
              C50973 +
          (((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C50929 -
           (((C117 * C4098 + C50822 * C4104) * C2291 +
             (C117 * C4095 + C50822 * C4099) * C2296 +
             (C117 * C4100 + C50822 * C4105) * C2290 +
             (C117 * C4096 + C50822 * C4101) * C2295 +
             (C117 * C4102 + C50822 * C4106) * C2289 +
             (C117 * C4097 + C50822 * C4103) * C2294) *
                C50810 +
            (C4115 + C4114 + C4113 + C4112 + C4119 + C4118) * C50939) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50929 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50760) *
              C50972 +
          ((((C19030 + C19029 + C19028) * C10701 +
             (C19027 + C19026 + C19025) * C50632) *
                C50939 +
            ((C19955 + C19956 + C19957) * C10701 +
             (C19958 + C19959 + C19960) * C50632) *
                C50810) *
               C50760 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50929) *
              C50973 +
          ((((C18380 + C18379 + C18378) * C10701 +
             (C18377 + C18376 + C18375) * C50632) *
                C50939 +
            ((C19287 + C19288 + C19289) * C10701 +
             (C19290 + C19291 + C19292) * C50632) *
                C50810) *
               C50929 -
           (((C15377 * C12157 + C15374 * C12159 + C15376 * C9221 +
              C15373 * C9224 + C15375 * C4102 + C15372 * C4106) *
                 C50632 +
             (C15377 * C12156 + C15374 * C12158 + C15376 * C9218 +
              C15373 * C9222 + C15375 * C4097 + C15372 * C4103) *
                 C10701) *
                C50810 +
            ((C19960 + C19959 + C19958) * C50632 +
             (C19957 + C19956 + C19955) * C10701) *
                C50939) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50822 * C129) * C2294 +
                 (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
                 C172 * C2290 + C173 * C2296 + C174 * C2291) *
                    C50939 +
                (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                   C50696 * C1025 -
               ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
                (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                   C50696 * C50732) *
                  C1027 +
              (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
                (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                   C50696 * C50732 -
               ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
                (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
                 C172 * C2289 + C171 * C2294) *
                    C50939) *
                   C50696 * C1025) *
                  C1028 +
              (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
                 C178 * C2296 + C177 * C2291) *
                    C50939 +
                (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
                   C50696 * C1025 -
               (((C117 * C311 + C50822 * C322) * C2291 +
                 (C117 * C292 + C50822 * C312) * C2296 + C359 * C2290 +
                 C358 * C2295 + C357 * C2289 + C356 * C2294) *
                    C50810 +
                (C2801 + C2800 + C2799 + C2798 + C2797 + C2796) * C50939) *
                   C50696 * C50732) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50822 * C129) * C2294 +
                (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
                C172 * C2290 + C173 * C2296 + C174 * C2291) *
                   C50939 +
               (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                  C50696 * C1096 -
              ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
               (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                  C50696 * C1097 +
              ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
               (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
                  C50696 * C1098 -
              (((C117 * C3418 + C50822 * C3424) * C2291 +
                (C117 * C3415 + C50822 * C3419) * C2296 +
                (C117 * C3420 + C50822 * C3425) * C2290 +
                (C117 * C3416 + C50822 * C3421) * C2295 +
                (C117 * C3422 + C50822 * C3426) * C2289 +
                (C117 * C3417 + C50822 * C3423) * C2294) *
                   C50810 +
               (C3435 + C3434 + C3433 + C3432 + C3439 + C3438) * C50939) *
                  C50696 * C1099) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C457 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
               C459) *
              C1025 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            ((C117 * C1565 + C50822 * C1573) * C2294 +
             (C117 * C1572 + C50822 * C1577) * C2289 + C3166 * C2295 +
             C3167 * C2290 + C3168 * C2296 + C3169 * C2291) *
                C50810) *
               C458 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C457 -
           (((C117 * C3588 + C50822 * C3594) * C2291 +
             (C117 * C3585 + C50822 * C3589) * C2296 +
             (C117 * C3590 + C50822 * C3595) * C2290 +
             (C117 * C3586 + C50822 * C3591) * C2295 +
             (C117 * C3592 + C50822 * C3596) * C2289 +
             (C117 * C3587 + C50822 * C3593) * C2294) *
                C50810 +
            (C3605 + C3604 + C3603 + C3602 + C3609 + C3608) * C50939) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C1025 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C50732) *
              C1027 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50732 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50696 * C1025 -
           (((C117 * C3418 + C50822 * C3424) * C50632 +
             (C117 * C3415 + C50822 * C3419) * C10701) *
                C10700 +
            (C11022 + C11021) * C10699 + (C11020 + C11019) * C10698 +
            (C11018 + C11017) * C10697) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
              C50696 * C1096 -
          (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
           (C10802 + C10801) * C10697) *
              C50696 * C1097 +
          (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
           (C11439 + C11440) * C10700) *
              C50696 * C1098 -
          (((C117 * C11427 + C50822 * C11429) * C50632 +
            (C117 * C11426 + C50822 * C11428) * C10701) *
               C10700 +
           (C11440 + C11439) * C10699 + C11431 * C10698 + C11432 * C10697) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C457 -
           ((C11251 + C11252) * C10700 + (C11253 + C11254) * C10699 +
            (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
            (C11553 + C11554) * C10700) *
               C459) *
              C1025 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 +
            ((C117 * C9726 + C50822 * C9730) * C10701 +
             (C117 * C9729 + C50822 * C9732) * C50632) *
                C10700) *
               C458 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C457 -
           (((C117 * C11539 + C50822 * C11541) * C50632 +
             (C117 * C11538 + C50822 * C11540) * C10701) *
                C10700 +
            (C11554 + C11553) * C10699 + (C11546 + C11545) * C10698 +
            (C11544 + C11543) * C10697) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50696 * C1025 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50696 * C50732) *
              C1027 +
          ((((C15608 + C15607 + C15606) * C10701 +
             (C15605 + C15604 + C15603) * C50632) *
                C50939 +
            ((C15609 + C15610 + C15611) * C10701 +
             (C15612 + C15613 + C15614) * C50632) *
                C50810) *
               C50696 * C50732 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          ((((C15426 + C15425 + C15424) * C10701 +
             (C15423 + C15422 + C15421) * C50632) *
                C50939 +
            ((C15955 + C15956 + C15957) * C10701 +
             (C15958 + C15959 + C15960) * C50632) *
                C50810) *
               C50696 * C1025 -
           (((C15377 * C3588 + C15374 * C3594 + C15376 * C1568 +
              C15373 * C1575 + C15375 * C306 + C15372 * C319) *
                 C50632 +
             (C15377 * C3585 + C15374 * C3589 + C15376 * C1563 +
              C15373 * C1569 + C15375 * C289 + C15372 * C305) *
                 C10701) *
                C50810 +
            ((C15960 + C15959 + C15958) * C50632 +
             (C15957 + C15956 + C15955) * C10701) *
                C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C10701 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50632) *
               C50939 +
           ((C18369 + C18370 + C18371) * C10701 +
            (C18372 + C18373 + C18374) * C50632) *
               C50810) *
              C50696 * C1096 -
          (((C18375 + C18376 + C18377) * C50632 +
            (C18378 + C18379 + C18380) * C10701) *
               C50810 +
           ((C18374 + C18373 + C18372) * C50632 +
            (C18371 + C18370 + C18369) * C10701) *
               C50939) *
              C50696 * C1097 +
          (((C18380 + C18379 + C18378) * C10701 +
            (C18377 + C18376 + C18375) * C50632) *
               C50939 +
           ((C19287 + C19288 + C19289) * C10701 +
            (C19290 + C19291 + C19292) * C50632) *
               C50810) *
              C50696 * C1098 -
          (((C15377 * C11539 + C15374 * C11541 + C15376 * C9729 +
             C15373 * C9732 + C15375 * C3422 + C15372 * C3426) *
                C50632 +
            (C15377 * C11538 + C15374 * C11540 + C15376 * C9726 +
             C15373 * C9730 + C15375 * C3417 + C15372 * C3423) *
                C10701) *
               C50810 +
           ((C19292 + C19291 + C19290) * C50632 +
            (C19289 + C19288 + C19287) * C10701) *
               C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C457 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C458 +
           (((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
              C15377 * C7355 + C15374 * C7361) *
                 C10701 +
             (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
              C15377 * C7360 + C15374 * C7364) *
                 C50632) *
                C50939 +
            ((C19451 + C19452 + C19453) * C10701 +
             (C19454 + C19455 + C19456) * C50632) *
                C50810) *
               C459) *
              C1025 +
          ((((C19030 + C19029 + C19028) * C10701 +
             (C19027 + C19026 + C19025) * C50632) *
                C50939 +
            ((C15375 * C1565 + C15372 * C1573 + C15376 * C3587 +
              C15373 * C3593 + C15377 * C10137 + C15374 * C10141) *
                 C10701 +
             (C15375 * C1572 + C15372 * C1577 + C15376 * C3592 +
              C15373 * C3596 + C15377 * C10140 + C15374 * C10143) *
                 C50632) *
                C50810) *
               C458 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C457 -
           (((C15377 * C14782 + C15374 * C14786 + C15376 * C10140 +
              C15373 * C10143 + C15375 * C3592 + C15372 * C3596) *
                 C50632 +
             (C15377 * C14780 + C15374 * C14783 + C15376 * C10137 +
              C15373 * C10141 + C15375 * C3587 + C15372 * C3593) *
                 C10701) *
                C50810 +
            ((C19456 + C19455 + C19454) * C50632 +
             (C19453 + C19452 + C19451) * C10701) *
                C50939) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C10701 +
              (C117 * C130 + C50822 * C143) * C50632) *
                 C10697 +
             (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
                C50929 -
            ((C11251 + C11252) * C10700 + (C11253 + C11254) * C10699 +
             (C11255 + C11256) * C10698 +
             ((C117 * C476 + C50822 * C493) * C50632 +
              (C117 * C463 + C50822 * C477) * C10701) *
                 C10697) *
                C50760) *
               C1025 +
           (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
             (C11252 + C11251) * C10699 +
             ((C117 * C9726 + C50822 * C9730) * C10701 +
              (C117 * C9729 + C50822 * C9732) * C50632) *
                 C10700) *
                C50760 -
            (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
             (C10802 + C10801) * C10697) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C10701 + C529 * C50632) * C10697 +
             (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
             (C11261 + C11262) * C10700) *
                C50760 -
            (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
             (C172 * C50632 + C171 * C10701) * C10697) *
                C50929) *
               C1025 +
           (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
             (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
                C50929 -
            (((C117 * C9727 + C50822 * C9731) * C50632 +
              (C117 * C9725 + C50822 * C9728) * C10701) *
                 C10700 +
             (C11262 + C11261) * C10699 + (C11260 + C11259) * C10698 +
             (C11258 + C11257) * C10697) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C2294 +
              (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
              C172 * C2290 + C173 * C2296 + C174 * C2291) *
                 C50939 +
             (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                C50929 -
            ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
             (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
              (C117 * C476 + C50822 * C493) * C2289 +
              (C117 * C463 + C50822 * C477) * C2294) *
                 C50939) *
                C50760) *
               C1025 +
           (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
             ((C117 * C1565 + C50822 * C1573) * C2294 +
              (C117 * C1572 + C50822 * C1577) * C2289 + C3166 * C2295 +
              C3167 * C2290 + C3168 * C2296 + C3169 * C2291) *
                 C50810) *
                C50760 -
            ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
             (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
              C526 * C2296 + C525 * C2291) *
                 C50939 +
             (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                C50760 -
            ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
             (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
              C172 * C2289 + C171 * C2294) *
                 C50939) *
                C50929) *
               C1025 +
           (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
             (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                C50929 -
            (((C117 * C1566 + C50822 * C1574) * C2291 +
              (C117 * C1562 + C50822 * C1567) * C2296 + C3169 * C2290 +
              C3168 * C2295 + C3167 * C2289 + C3166 * C2294) *
                 C50810 +
             (C3163 + C3162 + C3161 + C3160 + C3159 + C3158) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
               C15377 * C464 + C15374 * C478) *
                  C10701 +
              (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
               C15377 * C479 + C15374 * C494) *
                  C50632) *
                 C50939 +
             ((C18369 + C18370 + C18371) * C10701 +
              (C18372 + C18373 + C18374) * C50632) *
                 C50810) *
                C50929 -
            (((C19025 + C19026 + C19027) * C50632 +
              (C19028 + C19029 + C19030) * C10701) *
                 C50810 +
             ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
               C15375 * C476 + C15372 * C493) *
                  C50632 +
              (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
               C15375 * C463 + C15372 * C477) *
                  C10701) *
                 C50939) *
                C50760) *
               C1025 +
           ((((C19030 + C19029 + C19028) * C10701 +
              (C19027 + C19026 + C19025) * C50632) *
                 C50939 +
             ((C15375 * C1565 + C15372 * C1573 + C15376 * C3587 +
               C15373 * C3593 + C15377 * C10137 + C15374 * C10141) *
                  C10701 +
              (C15375 * C1572 + C15372 * C1577 + C15376 * C3592 +
               C15373 * C3596 + C15377 * C10140 + C15374 * C10143) *
                  C50632) *
                 C50810) *
                C50760 -
            (((C18375 + C18376 + C18377) * C50632 +
              (C18378 + C18379 + C18380) * C10701) *
                 C50810 +
             ((C18374 + C18373 + C18372) * C50632 +
              (C18371 + C18370 + C18369) * C10701) *
                 C50939) *
                C50929) *
               C50732) *
              C50920 +
          (((((C15790 + C15789 + C15788) * C10701 +
              (C15787 + C15786 + C15785) * C50632) *
                 C50939 +
             ((C16331 + C16332 + C16333) * C10701 +
              (C16334 + C16335 + C16336) * C50632) *
                 C50810) *
                C50760 -
            (((C15603 + C15604 + C15605) * C50632 +
              (C15606 + C15607 + C15608) * C10701) *
                 C50810 +
             ((C15420 + C15419 + C15418) * C50632 +
              (C15417 + C15416 + C15415) * C10701) *
                 C50939) *
                C50929) *
               C1025 +
           ((((C15608 + C15607 + C15606) * C10701 +
              (C15605 + C15604 + C15603) * C50632) *
                 C50939 +
             ((C15609 + C15610 + C15611) * C10701 +
              (C15612 + C15613 + C15614) * C50632) *
                 C50810) *
                C50929 -
            (((C15377 * C10138 + C15374 * C10142 + C15376 * C3590 +
               C15373 * C3595 + C15375 * C1570 + C15372 * C1576) *
                  C50632 +
              (C15377 * C10136 + C15374 * C10139 + C15376 * C3586 +
               C15373 * C3591 + C15375 * C1564 + C15372 * C1571) *
                  C10701) *
                 C50810 +
             ((C16336 + C16335 + C16334) * C50632 +
              (C16333 + C16332 + C16331) * C10701) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
              C50696 * C1096 -
          ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
           (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
              C50696 * C1097 +
          ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
           (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
              C50696 * C1098 -
          (((C117 * C3418 + C50822 * C3424) * C2291 +
            (C117 * C3415 + C50822 * C3419) * C2296 +
            (C117 * C3420 + C50822 * C3425) * C2290 +
            (C117 * C3416 + C50822 * C3421) * C2295 +
            (C117 * C3422 + C50822 * C3426) * C2289 +
            (C117 * C3417 + C50822 * C3423) * C2294) *
               C50810 +
           (C3435 + C3434 + C3433 + C3432 + C3439 + C3438) * C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C1025 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50732) *
              C1027 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50732 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50696 * C1025 -
           (((C117 * C311 + C50822 * C322) * C2291 +
             (C117 * C292 + C50822 * C312) * C2296 + C359 * C2290 +
             C358 * C2295 + C357 * C2289 + C356 * C2294) *
                C50810 +
            (C2801 + C2800 + C2799 + C2798 + C2797 + C2796) * C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C1025 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C50732) *
              C1027 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50732 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50696 * C1025 -
           (((C117 * C3418 + C50822 * C3424) * C50632 +
             (C117 * C3415 + C50822 * C3419) * C10701) *
                C10700 +
            (C11022 + C11021) * C10699 + (C11020 + C11019) * C10698 +
            (C11018 + C11017) * C10697) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
              C50696 * C1096 -
          (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
           (C10802 + C10801) * C10697) *
              C50696 * C1097 +
          (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
           (C11439 + C11440) * C10700) *
              C50696 * C1098 -
          (((C117 * C11427 + C50822 * C11429) * C50632 +
            (C117 * C11426 + C50822 * C11428) * C10701) *
               C10700 +
           (C11440 + C11439) * C10699 + C11431 * C10698 + C11432 * C10697) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50696 * C1025 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50696 * C50732) *
              C1027 +
          ((((C15608 + C15607 + C15606) * C10701 +
             (C15605 + C15604 + C15603) * C50632) *
                C50939 +
            ((C15609 + C15610 + C15611) * C10701 +
             (C15612 + C15613 + C15614) * C50632) *
                C50810) *
               C50696 * C50732 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          ((((C15426 + C15425 + C15424) * C10701 +
             (C15423 + C15422 + C15421) * C50632) *
                C50939 +
            ((C15955 + C15956 + C15957) * C10701 +
             (C15958 + C15959 + C15960) * C50632) *
                C50810) *
               C50696 * C1025 -
           (((C15377 * C3588 + C15374 * C3594 + C15376 * C1568 +
              C15373 * C1575 + C15375 * C306 + C15372 * C319) *
                 C50632 +
             (C15377 * C3585 + C15374 * C3589 + C15376 * C1563 +
              C15373 * C1569 + C15375 * C289 + C15372 * C305) *
                 C10701) *
                C50810 +
            ((C15960 + C15959 + C15958) * C50632 +
             (C15957 + C15956 + C15955) * C10701) *
                C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C10701 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50632) *
               C50939 +
           ((C18369 + C18370 + C18371) * C10701 +
            (C18372 + C18373 + C18374) * C50632) *
               C50810) *
              C50696 * C1096 -
          (((C18375 + C18376 + C18377) * C50632 +
            (C18378 + C18379 + C18380) * C10701) *
               C50810 +
           ((C18374 + C18373 + C18372) * C50632 +
            (C18371 + C18370 + C18369) * C10701) *
               C50939) *
              C50696 * C1097 +
          (((C18380 + C18379 + C18378) * C10701 +
            (C18377 + C18376 + C18375) * C50632) *
               C50939 +
           ((C19287 + C19288 + C19289) * C10701 +
            (C19290 + C19291 + C19292) * C50632) *
               C50810) *
              C50696 * C1098 -
          (((C15377 * C11539 + C15374 * C11541 + C15376 * C9729 +
             C15373 * C9732 + C15375 * C3422 + C15372 * C3426) *
                C50632 +
            (C15377 * C11538 + C15374 * C11540 + C15376 * C9726 +
             C15373 * C9730 + C15375 * C3417 + C15372 * C3423) *
                C10701) *
               C50810 +
           ((C19292 + C19291 + C19290) * C50632 +
            (C19289 + C19288 + C19287) * C10701) *
               C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C10701 +
              (C117 * C130 + C50822 * C143) * C50632) *
                 C10697 +
             (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
                C1676 -
            (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
             ((C117 * C476 + C50822 * C493) * C50632 +
              (C117 * C463 + C50822 * C477) * C10701) *
                 C10697) *
                C50760) *
               C50928 +
           (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
             (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
                C50760 -
            (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
             (C10802 + C10801) * C10697) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C10701 + C529 * C50632) * C10697 +
             (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
             (C11261 + C11262) * C10700) *
                C50760 -
            (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
             (C172 * C50632 + C171 * C10701) * C10697) *
                C1676) *
               C50928 +
           (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
             (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
                C1676 -
            (((C117 * C9727 + C50822 * C9731) * C50632 +
              (C117 * C9725 + C50822 * C9728) * C10701) *
                 C10700 +
             (C11262 + C11261) * C10699 + (C11260 + C11259) * C10698 +
             (C11258 + C11257) * C10697) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C2294 +
              (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
              C172 * C2290 + C173 * C2296 + C174 * C2291) *
                 C50939 +
             (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                C1676 -
            ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
             (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
              (C117 * C476 + C50822 * C493) * C2289 +
              (C117 * C463 + C50822 * C477) * C2294) *
                 C50939) *
                C50760) *
               C50928 +
           (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
             (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
                C50760 -
            ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
             (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
              C526 * C2296 + C525 * C2291) *
                 C50939 +
             (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                C50760 -
            ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
             (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
              C172 * C2289 + C171 * C2294) *
                 C50939) *
                C1676) *
               C50928 +
           (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
             (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                C1676 -
            (((C117 * C1566 + C50822 * C1574) * C2291 +
              (C117 * C1562 + C50822 * C1567) * C2296 + C3169 * C2290 +
              C3168 * C2295 + C3167 * C2289 + C3166 * C2294) *
                 C50810 +
             (C3163 + C3162 + C3161 + C3160 + C3159 + C3158) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
               C15377 * C464 + C15374 * C478) *
                  C10701 +
              (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
               C15377 * C479 + C15374 * C494) *
                  C50632) *
                 C50939 +
             ((C18369 + C18370 + C18371) * C10701 +
              (C18372 + C18373 + C18374) * C50632) *
                 C50810) *
                C1676 -
            (((C19025 + C19026 + C19027) * C50632 +
              (C19028 + C19029 + C19030) * C10701) *
                 C50810 +
             ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
               C15375 * C476 + C15372 * C493) *
                  C50632 +
              (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
               C15375 * C463 + C15372 * C477) *
                  C10701) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C19030 + C19029 + C19028) * C10701 +
              (C19027 + C19026 + C19025) * C50632) *
                 C50939 +
             ((C19955 + C19956 + C19957) * C10701 +
              (C19958 + C19959 + C19960) * C50632) *
                 C50810) *
                C50760 -
            (((C18375 + C18376 + C18377) * C50632 +
              (C18378 + C18379 + C18380) * C10701) *
                 C50810 +
             ((C18374 + C18373 + C18372) * C50632 +
              (C18371 + C18370 + C18369) * C10701) *
                 C50939) *
                C1676) *
               C50732) *
              C50920 +
          (((((C15790 + C15789 + C15788) * C10701 +
              (C15787 + C15786 + C15785) * C50632) *
                 C50939 +
             ((C16331 + C16332 + C16333) * C10701 +
              (C16334 + C16335 + C16336) * C50632) *
                 C50810) *
                C50760 -
            (((C15603 + C15604 + C15605) * C50632 +
              (C15606 + C15607 + C15608) * C10701) *
                 C50810 +
             ((C15420 + C15419 + C15418) * C50632 +
              (C15417 + C15416 + C15415) * C10701) *
                 C50939) *
                C1676) *
               C50928 +
           ((((C15608 + C15607 + C15606) * C10701 +
              (C15605 + C15604 + C15603) * C50632) *
                 C50939 +
             ((C15609 + C15610 + C15611) * C10701 +
              (C15612 + C15613 + C15614) * C50632) *
                 C50810) *
                C1676 -
            (((C15377 * C10138 + C15374 * C10142 + C15376 * C3590 +
               C15373 * C3595 + C15375 * C1570 + C15372 * C1576) *
                  C50632 +
              (C15377 * C10136 + C15374 * C10139 + C15376 * C3586 +
               C15373 * C3591 + C15375 * C1564 + C15372 * C1571) *
                  C10701) *
                 C50810 +
             ((C16336 + C16335 + C16334) * C50632 +
              (C16333 + C16332 + C16331) * C10701) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50974 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
            (C11553 + C11554) * C10700) *
               C2092) *
              C50928 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50975 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C50974 -
           (((C117 * C11539 + C50822 * C11541) * C50632 +
             (C117 * C11538 + C50822 * C11540) * C10701) *
                C10700 +
            (C11554 + C11553) * C10699 + (C11546 + C11545) * C10698 +
            (C11544 + C11543) * C10697) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50974 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
               C2092) *
              C50928 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50975 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50974 -
           (((C117 * C3588 + C50822 * C3594) * C2291 +
             (C117 * C3585 + C50822 * C3589) * C2296 +
             (C117 * C3590 + C50822 * C3595) * C2290 +
             (C117 * C3586 + C50822 * C3591) * C2295 +
             (C117 * C3592 + C50822 * C3596) * C2289 +
             (C117 * C3587 + C50822 * C3593) * C2294) *
                C50810 +
            (C3605 + C3604 + C3603 + C3602 + C3609 + C3608) * C50939) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50974 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50975 +
           (((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
              C15377 * C7355 + C15374 * C7361) *
                 C10701 +
             (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
              C15377 * C7360 + C15374 * C7364) *
                 C50632) *
                C50939 +
            ((C19451 + C19452 + C19453) * C10701 +
             (C19454 + C19455 + C19456) * C50632) *
                C50810) *
               C2092) *
              C50928 +
          ((((C19030 + C19029 + C19028) * C10701 +
             (C19027 + C19026 + C19025) * C50632) *
                C50939 +
            ((C19955 + C19956 + C19957) * C10701 +
             (C19958 + C19959 + C19960) * C50632) *
                C50810) *
               C50975 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C50974 -
           (((C15377 * C14782 + C15374 * C14786 + C15376 * C10140 +
              C15373 * C10143 + C15375 * C3592 + C15372 * C3596) *
                 C50632 +
             (C15377 * C14780 + C15374 * C14783 + C15376 * C10137 +
              C15373 * C10141 + C15375 * C3587 + C15372 * C3593) *
                 C10701) *
                C50810 +
            ((C19456 + C19455 + C19454) * C50632 +
             (C19453 + C19452 + C19451) * C10701) *
                C50939) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50822 * C129) * C2294 +
                 (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
                 C172 * C2290 + C173 * C2296 + C174 * C2291) *
                    C50939 +
                (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                   C1676 -
               ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
                (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
                 (C117 * C476 + C50822 * C493) * C2289 +
                 (C117 * C463 + C50822 * C477) * C2294) *
                    C50939) *
                   C50760) *
                  C50680 * C1027 +
              (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
                 C526 * C2296 + C525 * C2291) *
                    C50939 +
                (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                   C50760 -
               ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
                (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
                 C172 * C2289 + C171 * C2294) *
                    C50939) *
                   C1676) *
                  C50680 * C1028 +
              (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
                 C178 * C2296 + C177 * C2291) *
                    C50939 +
                (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
                   C1676 -
               (((C117 * C902 + C50822 * C908) * C2291 +
                 (C117 * C893 + C50822 * C903) * C2296 + C927 * C2290 +
                 C926 * C2295 + C925 * C2289 + C924 * C2294) *
                    C50810 +
                (C759 * C2291 + C758 * C2296 + C525 * C2290 + C526 * C2295 +
                 C527 * C2289 + C528 * C2294) *
                    C50939) *
                   C50760) *
                  C50680 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50822 * C129) * C2294 +
                 (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
                 C172 * C2290 + C173 * C2296 + C174 * C2291) *
                    C50939 +
                (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                   C1676 -
               ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
                (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
                 (C117 * C476 + C50822 * C493) * C2289 +
                 (C117 * C463 + C50822 * C477) * C2294) *
                    C50939) *
                   C50760) *
                  C278 +
              (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
                (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
                   C50760 -
               ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
                (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                   C1676) *
                  C279 +
              (((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
                (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
                   C1676 -
               (((C117 * C4098 + C50822 * C4104) * C2291 +
                 (C117 * C4095 + C50822 * C4099) * C2296 +
                 (C117 * C4100 + C50822 * C4105) * C2290 +
                 (C117 * C4096 + C50822 * C4101) * C2295 +
                 (C117 * C4102 + C50822 * C4106) * C2289 +
                 (C117 * C4097 + C50822 * C4103) * C2294) *
                    C50810 +
                (C4115 + C4114 + C4113 + C4112 + C4119 + C4118) * C50939) *
                   C50760) *
                  C280) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
              C1842 -
          ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
           (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
            (C117 * C476 + C50822 * C493) * C2289 +
            (C117 * C463 + C50822 * C477) * C2294) *
               C50939) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C2294 +
            (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
            C532 * C2290 + C533 * C2296 + C534 * C2291) *
               C50939 +
           (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
              C1844 -
          (((C117 * C4512 + C50822 * C4518) * C2291 +
            (C117 * C4509 + C50822 * C4513) * C2296 +
            (C117 * C4514 + C50822 * C4519) * C2290 +
            (C117 * C4510 + C50822 * C4515) * C2295 +
            (C117 * C4516 + C50822 * C4520) * C2289 +
            (C117 * C4511 + C50822 * C4517) * C2294) *
               C50810 +
           ((C117 * C1852 + C50822 * C1859) * C2291 +
            (C117 * C1847 + C50822 * C1853) * C2296 +
            (C117 * C1854 + C50822 * C1860) * C2290 +
            (C117 * C1848 + C50822 * C1855) * C2295 +
            (C117 * C1856 + C50822 * C1861) * C2289 +
            (C117 * C1849 + C50822 * C1857) * C2294) *
               C50939) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
            (C11261 + C11262) * C10700) *
               C50760 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C50632 +
             (C117 * C4095 + C50822 * C4099) * C10701) *
                C10700 +
            (C3169 * C50632 + C3168 * C10701) * C10699 +
            (C925 * C50632 + C924 * C10701) * C10698 +
            (C527 * C50632 + C528 * C10701) * C10697) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C278 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50760 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C1676) *
              C279 +
          ((C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C1676 -
           (((C117 * C11881 + C50822 * C11883) * C50632 +
             (C117 * C11880 + C50822 * C11882) * C10701) *
                C10700 +
            (C11894 + C11893) * C10699 + C11885 * C10698 + C11886 * C10697) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
              C1842 -
          (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
           ((C117 * C476 + C50822 * C493) * C50632 +
            (C117 * C463 + C50822 * C477) * C10701) *
               C10697) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C10701 +
            (C117 * C479 + C50822 * C494) * C50632) *
               C10697 +
           (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
           (C11553 + C11554) * C10700) *
              C1844 -
          (((C117 * C12157 + C50822 * C12159) * C50632 +
            (C117 * C12156 + C50822 * C12158) * C10701) *
               C10700 +
           ((C117 * C10140 + C50822 * C10143) * C50632 +
            (C117 * C10137 + C50822 * C10141) * C10701) *
               C10699 +
           ((C117 * C4516 + C50822 * C4520) * C50632 +
            (C117 * C4511 + C50822 * C4517) * C10701) *
               C10698 +
           ((C117 * C1856 + C50822 * C1861) * C50632 +
            (C117 * C1849 + C50822 * C1857) * C10701) *
               C10697) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C1676 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          ((((C15790 + C15789 + C15788) * C10701 +
             (C15787 + C15786 + C15785) * C50632) *
                C50939 +
            ((C16331 + C16332 + C16333) * C10701 +
             (C16334 + C16335 + C16336) * C50632) *
                C50810) *
               C50760 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          ((((C15426 + C15425 + C15424) * C10701 +
             (C15423 + C15422 + C15421) * C50632) *
                C50939 +
            ((C15955 + C15956 + C15957) * C10701 +
             (C15958 + C15959 + C15960) * C50632) *
                C50810) *
               C1676 -
           (((C15377 * C4512 + C15374 * C4518 + C15376 * C1221 +
              C15373 * C1228 + C15375 * C899 + C15372 * C906) *
                 C50632 +
             (C15377 * C4509 + C15374 * C4513 + C15376 * C1216 +
              C15373 * C1222 + C15375 * C891 + C15372 * C898) *
                 C10701) *
                C50810 +
            ((C16124 + C16123 + C16122) * C50632 +
             (C16121 + C16120 + C16119) * C10701) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C1676 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50760) *
              C278 +
          ((((C19030 + C19029 + C19028) * C10701 +
             (C19027 + C19026 + C19025) * C50632) *
                C50939 +
            ((C19955 + C19956 + C19957) * C10701 +
             (C19958 + C19959 + C19960) * C50632) *
                C50810) *
               C50760 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C1676) *
              C279 +
          ((((C18380 + C18379 + C18378) * C10701 +
             (C18377 + C18376 + C18375) * C50632) *
                C50939 +
            ((C19287 + C19288 + C19289) * C10701 +
             (C19290 + C19291 + C19292) * C50632) *
                C50810) *
               C1676 -
           (((C15377 * C12157 + C15374 * C12159 + C15376 * C9221 +
              C15373 * C9224 + C15375 * C4102 + C15372 * C4106) *
                 C50632 +
             (C15377 * C12156 + C15374 * C12158 + C15376 * C9218 +
              C15373 * C9222 + C15375 * C4097 + C15372 * C4103) *
                 C10701) *
                C50810 +
            ((C19960 + C19959 + C19958) * C50632 +
             (C19957 + C19956 + C19955) * C10701) *
                C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
             C15377 * C464 + C15374 * C478) *
                C10701 +
            (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
             C15377 * C479 + C15374 * C494) *
                C50632) *
               C50939 +
           ((C18369 + C18370 + C18371) * C10701 +
            (C18372 + C18373 + C18374) * C50632) *
               C50810) *
              C1842 -
          (((C19025 + C19026 + C19027) * C50632 +
            (C19028 + C19029 + C19030) * C10701) *
               C50810 +
           ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
             C15375 * C476 + C15372 * C493) *
                C50632 +
            (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
             C15375 * C463 + C15372 * C477) *
                C10701) *
               C50939) *
              C1843 +
          (((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
             C15377 * C7355 + C15374 * C7361) *
                C10701 +
            (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
             C15377 * C7360 + C15374 * C7364) *
                C50632) *
               C50939 +
           ((C19451 + C19452 + C19453) * C10701 +
            (C19454 + C19455 + C19456) * C50632) *
               C50810) *
              C1844 -
          (((C15377 * C20351 + C15374 * C20353 + C15376 * C14784 +
             C15373 * C14787 + C15375 * C4516 + C15372 * C4520) *
                C50632 +
            (C15377 * C20350 + C15374 * C20352 + C15376 * C14781 +
             C15373 * C14785 + C15375 * C4511 + C15372 * C4517) *
                C10701) *
               C50810 +
           ((C15377 * C17610 + C15374 * C17613 + C15376 * C7360 +
             C15373 * C7364 + C15375 * C1856 + C15372 * C1861) *
                C50632 +
            (C15377 * C17607 + C15374 * C17611 + C15376 * C7355 +
             C15373 * C7361 + C15375 * C1849 + C15372 * C1857) *
                C10701) *
               C50939) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50974 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
            (C11553 + C11554) * C10700) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
            (C11261 + C11262) * C10700) *
               C50975 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50974 -
           (((C117 * C9219 + C50822 * C9223) * C50632 +
             (C117 * C9217 + C50822 * C9220) * C10701) *
                C10700 +
            (C8290 * C50632 + C8289 * C10701) * C10699 +
            (C2647 * C50632 + C2646 * C10701) * C10698 +
            (C532 * C50632 + C531 * C10701) * C10697) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50974 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
               C50975 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50974 -
           (((C117 * C1219 + C50822 * C1227) * C2291 +
             (C117 * C1215 + C50822 * C1220) * C2296 + C2649 * C2290 +
             C2648 * C2295 + C2647 * C2289 + C2646 * C2294) *
                C50810 +
            (C536 * C2291 + C535 * C2296 + C534 * C2290 + C533 * C2295 +
             C532 * C2289 + C531 * C2294) *
                C50939) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C50974 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50975 +
           (((C15375 * C464 + C15372 * C478 + C15376 * C1849 + C15373 * C1857 +
              C15377 * C7355 + C15374 * C7361) *
                 C10701 +
             (C15375 * C479 + C15372 * C494 + C15376 * C1856 + C15373 * C1861 +
              C15377 * C7360 + C15374 * C7364) *
                 C50632) *
                C50939 +
            ((C19451 + C19452 + C19453) * C10701 +
             (C19454 + C19455 + C19456) * C50632) *
                C50810) *
               C2092) *
              C50680 * C50920 +
          ((((C15790 + C15789 + C15788) * C10701 +
             (C15787 + C15786 + C15785) * C50632) *
                C50939 +
            ((C16331 + C16332 + C16333) * C10701 +
             (C16334 + C16335 + C16336) * C50632) *
                C50810) *
               C50975 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C50974 -
           (((C15377 * C16727 + C15374 * C16729 + C15376 * C4514 +
              C15373 * C4519 + C15375 * C1223 + C15372 * C1229) *
                 C50632 +
             (C15377 * C16726 + C15374 * C16728 + C15376 * C4510 +
              C15373 * C4515 + C15375 * C1217 + C15372 * C1224) *
                 C10701) *
                C50810 +
            ((C15796 + C15795 + C15794) * C50632 +
             (C15793 + C15792 + C15791) * C10701) *
                C50939) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C1676 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C278 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50760 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C1676) *
              C279 +
          (((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C2291 +
             (C117 * C4095 + C50822 * C4099) * C2296 +
             (C117 * C4100 + C50822 * C4105) * C2290 +
             (C117 * C4096 + C50822 * C4101) * C2295 +
             (C117 * C4102 + C50822 * C4106) * C2289 +
             (C117 * C4097 + C50822 * C4103) * C2294) *
                C50810 +
            (C4115 + C4114 + C4113 + C4112 + C4119 + C4118) * C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C1676 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
               C50760 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C1676 -
           (((C117 * C902 + C50822 * C908) * C2291 +
             (C117 * C893 + C50822 * C903) * C2296 + C927 * C2290 +
             C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C50810 +
            (C759 * C2291 + C758 * C2296 + C525 * C2290 + C526 * C2295 +
             C527 * C2289 + C528 * C2294) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
            (C11261 + C11262) * C10700) *
               C50760 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C50632 +
             (C117 * C4095 + C50822 * C4099) * C10701) *
                C10700 +
            (C3169 * C50632 + C3168 * C10701) * C10699 +
            (C925 * C50632 + C924 * C10701) * C10698 +
            (C527 * C50632 + C528 * C10701) * C10697) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C278 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50760 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C1676) *
              C279 +
          ((C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C1676 -
           (((C117 * C11881 + C50822 * C11883) * C50632 +
             (C117 * C11880 + C50822 * C11882) * C10701) *
                C10700 +
            (C11894 + C11893) * C10699 + C11885 * C10698 + C11886 * C10697) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C1676 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          ((((C15790 + C15789 + C15788) * C10701 +
             (C15787 + C15786 + C15785) * C50632) *
                C50939 +
            ((C16331 + C16332 + C16333) * C10701 +
             (C16334 + C16335 + C16336) * C50632) *
                C50810) *
               C50760 -
           (((C15603 + C15604 + C15605) * C50632 +
             (C15606 + C15607 + C15608) * C10701) *
                C50810 +
            ((C15420 + C15419 + C15418) * C50632 +
             (C15417 + C15416 + C15415) * C10701) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          ((((C15426 + C15425 + C15424) * C10701 +
             (C15423 + C15422 + C15421) * C50632) *
                C50939 +
            ((C15955 + C15956 + C15957) * C10701 +
             (C15958 + C15959 + C15960) * C50632) *
                C50810) *
               C1676 -
           (((C15377 * C4512 + C15374 * C4518 + C15376 * C1221 +
              C15373 * C1228 + C15375 * C899 + C15372 * C906) *
                 C50632 +
             (C15377 * C4509 + C15374 * C4513 + C15376 * C1216 +
              C15373 * C1222 + C15375 * C891 + C15372 * C898) *
                 C10701) *
                C50810 +
            ((C16124 + C16123 + C16122) * C50632 +
             (C16121 + C16120 + C16119) * C10701) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C122 + C15372 * C129 + C15376 * C463 + C15373 * C477 +
              C15377 * C464 + C15374 * C478) *
                 C10701 +
             (C15375 * C130 + C15372 * C143 + C15376 * C476 + C15373 * C493 +
              C15377 * C479 + C15374 * C494) *
                 C50632) *
                C50939 +
            ((C18369 + C18370 + C18371) * C10701 +
             (C18372 + C18373 + C18374) * C50632) *
                C50810) *
               C1676 -
           (((C19025 + C19026 + C19027) * C50632 +
             (C19028 + C19029 + C19030) * C10701) *
                C50810 +
            ((C15377 * C1856 + C15374 * C1861 + C15376 * C479 + C15373 * C494 +
              C15375 * C476 + C15372 * C493) *
                 C50632 +
             (C15377 * C1849 + C15374 * C1857 + C15376 * C464 + C15373 * C478 +
              C15375 * C463 + C15372 * C477) *
                 C10701) *
                C50939) *
               C50760) *
              C278 +
          ((((C19030 + C19029 + C19028) * C10701 +
             (C19027 + C19026 + C19025) * C50632) *
                C50939 +
            ((C19955 + C19956 + C19957) * C10701 +
             (C19958 + C19959 + C19960) * C50632) *
                C50810) *
               C50760 -
           (((C18375 + C18376 + C18377) * C50632 +
             (C18378 + C18379 + C18380) * C10701) *
                C50810 +
            ((C18374 + C18373 + C18372) * C50632 +
             (C18371 + C18370 + C18369) * C10701) *
                C50939) *
               C1676) *
              C279 +
          ((((C18380 + C18379 + C18378) * C10701 +
             (C18377 + C18376 + C18375) * C50632) *
                C50939 +
            ((C19287 + C19288 + C19289) * C10701 +
             (C19290 + C19291 + C19292) * C50632) *
                C50810) *
               C1676 -
           (((C15377 * C12157 + C15374 * C12159 + C15376 * C9221 +
              C15373 * C9224 + C15375 * C4102 + C15372 * C4106) *
                 C50632 +
             (C15377 * C12156 + C15374 * C12158 + C15376 * C9218 +
              C15373 * C9222 + C15375 * C4097 + C15372 * C4103) *
                 C10701) *
                C50810 +
            ((C19960 + C19959 + C19958) * C50632 +
             (C19957 + C19956 + C19955) * C10701) *
                C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C50928 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50732) *
              C50970 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50732 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C50928) *
              C50971 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50696 * C50928 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50632 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C10701) *
                C7953 +
            ((C5355 + C5354) * C50632 + (C5353 + C5352) * C10701) * C7952 +
            (C5696 * C50632 + C5697 * C10701) * C7951) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C50928 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50732 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C50928) *
              C50971 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50696 * C50928 -
           ((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C2291 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C2296 +
            (C5709 + C5708) * C2290 + (C5707 + C5706) * C2295 + C5696 * C2289 +
            C5697 * C2294) *
               C50796 * C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50696 * C50928 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
             C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
             C20909 * C4515) *
                C10701 +
            (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
             C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
             C20909 * C4519) *
                C50632) *
               C50796 * C50696 * C50732 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
             C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
                C10701 +
            (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
             C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
                C50632) *
               C50796 * C50696 * C50928 -
           ((C20913 * C4512 + C20909 * C4518 + C20912 * C1221 + C20908 * C1228 +
             C20911 * C899 + C20907 * C906 + C20910 * C295 + C20906 * C314) *
                C50632 +
            (C20913 * C4509 + C20909 * C4513 + C20912 * C1216 + C20908 * C1222 +
             C20911 * C891 + C20907 * C898 + C20910 * C284 + C20906 * C296) *
                C10701) *
               C50796 * C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C10701 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C50632) *
                 C7951 +
             ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
             C12788 * C7953) *
                C50929 -
            (((C13445 + C13446) * C50632 + (C13447 + C13448) * C10701) * C7953 +
             ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
             ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C50632 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C10701) *
                 C7951) *
                C50760) *
               C50928 +
           ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
             ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
             ((C5107 * C4097 + C50940 * C4103 + C5108 * C9218 +
               C50834 * C9222) *
                  C10701 +
              (C5107 * C4102 + C50940 * C4106 + C5108 * C9221 +
               C50834 * C9224) *
                  C50632) *
                 C7953) *
                C50760 -
            (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
             ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
             ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) *
                 C7951) *
                C50929) *
               C50732) *
              C281 +
          (((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
             ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
             ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) *
                 C7953) *
                C50760 -
            (C12785 * C7953 +
             ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
             ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
                C50929) *
               C50928 +
           ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
             ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
             ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) *
                 C7953) *
                C50929 -
            (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 +
               C50940 * C4105) *
                  C50632 +
              (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 +
               C50940 * C4101) *
                  C10701) *
                 C7953 +
             ((C13456 + C13455) * C50632 + (C13454 + C13453) * C10701) * C7952 +
             ((C6083 + C6082) * C50632 + (C6081 + C6080) * C10701) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C2294 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C2289 +
             (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
             C5159 * C2291) *
                C50796 * C50929 -
            (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
             (C5540 + C5541) * C2295 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C2289 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C2294) *
                C50796 * C50760) *
               C50928 +
           (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                 C2294 +
             (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                 C2289 +
             (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
             (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                C50796 * C50760 -
            (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
             (C5346 + C5347) * C2295 +
             (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                 C2289 +
             (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                 C2294) *
                C50796 * C50929) *
               C50732) *
              C281 +
          ((((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
             (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
             (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                C50796 * C50760 -
            (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
             (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
             (C5143 + C5142) * C2294) *
                C50796 * C50929) *
               C50928 +
           (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
             (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
             (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                C50796 * C50929 -
            ((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C2291 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C2296 +
             (C6087 + C6086) * C2290 + (C6085 + C6084) * C2295 +
             (C6083 + C6082) * C2289 + (C6081 + C6080) * C2294) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
              C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                 C10701 +
             (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
              C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                 C50632) *
                C50796 * C50929 -
            ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 +
              C20908 * C1861 + C20911 * C479 + C20907 * C494 + C20910 * C476 +
              C20906 * C493) *
                 C50632 +
             (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 +
              C20908 * C1857 + C20911 * C464 + C20907 * C478 + C20910 * C463 +
              C20906 * C477) *
                 C10701) *
                C50796 * C50760) *
               C50928 +
           (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
              C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
              C20909 * C14785) *
                 C10701 +
             (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
              C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
              C20909 * C14787) *
                 C50632) *
                C50796 * C50760 -
            ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 +
              C20908 * C1230 + C20911 * C895 + C20907 * C904 + C20910 * C299 +
              C20906 * C316) *
                 C50632 +
             (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 +
              C20908 * C1226 + C20911 * C889 + C20907 * C894 + C20910 * C286 +
              C20906 * C300) *
                 C10701) *
                C50796 * C50929) *
               C50732) *
              C281 +
          ((((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
              C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
              C20909 * C7359) *
                 C10701 +
             (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
              C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
              C20909 * C7363) *
                 C50632) *
                C50796 * C50760 -
            ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
              C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                 C50632 +
             (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
              C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                 C10701) *
                C50796 * C50929) *
               C50928 +
           (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
              C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
              C20909 * C4515) *
                 C10701 +
             (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
              C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
              C20909 * C4519) *
                 C50632) *
                C50796 * C50929 -
            ((C20913 * C16727 + C20909 * C16729 + C20912 * C4514 +
              C20908 * C4519 + C20911 * C1223 + C20907 * C1229 + C20910 * C897 +
              C20906 * C905) *
                 C50632 +
             (C20913 * C16726 + C20909 * C16728 + C20912 * C4510 +
              C20908 * C4515 + C20911 * C1217 + C20907 * C1224 + C20910 * C890 +
              C20906 * C896) *
                 C10701) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                   C2294 +
               (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                   C2289 +
               (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 +
               C5158 * C2296 + C5159 * C2291) *
                  C50796 * C50696 * C50680 * C113 -
              (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
               (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
               (C5143 + C5142) * C2294) *
                  C50796 * C50696 * C50680 * C114 +
              (C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
               (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
               (C5156 + C5157) * C2291) *
                  C50796 * C50696 * C50680 * C115 -
              ((C5108 * C750 + C50834 * C752 + C5107 * C140 + C50940 * C148) *
                   C2291 +
               (C5108 * C749 + C50834 * C751 + C5107 * C127 + C50940 * C139) *
                   C2296 +
               (C5157 + C5156) * C2290 + (C5155 + C5154) * C2295 +
               C5160 * C2289 + C5161 * C2294) *
                  C50796 * C50696 * C50680 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                    C2294 +
                (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                    C2289 +
                (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 +
                C5158 * C2296 + C5159 * C2291) *
                   C50796 * C50696 * C278 -
               ((C5340 + C5341) * C2291 + (C5342 + C5343) * C2296 +
                (C5344 + C5345) * C2290 + (C5346 + C5347) * C2295 +
                (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                    C2289 +
                (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                    C2294) *
                   C50796 * C50696 * C279 +
               ((C5107 * C287 + C50940 * C301 + C5108 * C1565 +
                 C50834 * C1573) *
                    C2294 +
                (C5107 * C302 + C50940 * C317 + C5108 * C1572 +
                 C50834 * C1577) *
                    C2289 +
                (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
                (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
                   C50796 * C50696 * C280) *
                  C281 +
              (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
                (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
                (C5107 * C283 + C50940 * C294 + C5108 * C892 + C50834 * C900) *
                    C2296 +
                (C5107 * C293 + C50940 * C313 + C5108 * C901 + C50834 * C907) *
                    C2291) *
                   C50796 * C50696 * C279 -
               (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
                (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
                (C5143 + C5142) * C2294) *
                   C50796 * C50696 * C278 -
               ((C5108 * C1566 + C50834 * C1574 + C5107 * C308 +
                 C50940 * C320) *
                    C2291 +
                (C5108 * C1562 + C50834 * C1567 + C5107 * C290 +
                 C50940 * C307) *
                    C2296 +
                (C5355 + C5354) * C2290 + (C5353 + C5352) * C2295 +
                (C5351 + C5350) * C2289 + (C5349 + C5348) * C2294) *
                   C50796 * C50696 * C280) *
                  C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C457 -
           ((C5534 + C5535) * C2291 + (C5536 + C5537) * C2296 +
            (C5538 + C5539) * C2290 + (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C458 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C459) *
              C50680 * C281 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5107 * C460 + C50940 * C471 + C5108 * C467 + C50834 * C484) *
                C2296 +
            (C5107 * C470 + C50940 * C490 + C5108 * C485 + C50834 * C497) *
                C2291) *
               C50796 * C458 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C457 -
           ((C5108 * C1850 + C50834 * C1858 + C5107 * C485 + C50940 * C497) *
                C2291 +
            (C5108 * C1846 + C50834 * C1851 + C5107 * C467 + C50940 * C484) *
                C2296 +
            (C5549 + C5548) * C2290 + (C5547 + C5546) * C2295 +
            (C5545 + C5544) * C2289 + (C5543 + C5542) * C2294) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C5107 * C286 + C50940 * C300 + C5108 * C889 + C50834 * C894) *
                C10701 +
            (C5107 * C299 + C50940 * C316 + C5108 * C895 + C50834 * C904) *
                C50632) *
               C7952 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C10701 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C50632) *
               C7953) *
              C50696 * C50680 * C113 -
          (((C5351 + C5350) * C50632 + (C5349 + C5348) * C10701) * C7953 +
           ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
           ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
              C50696 * C50680 * C114 +
          ((C5158 * C10701 + C5159 * C50632) * C7951 +
           ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
           ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
              C50696 * C50680 * C115 -
          (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C50632 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C10701) *
               C7953 +
           ((C5709 + C5708) * C50632 + (C5707 + C5706) * C10701) * C7952 +
           (C5160 * C50632 + C5161 * C10701) * C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C278 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C279 +
           (C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C5107 * C3417 + C50940 * C3423 + C5108 * C9726 + C50834 * C9730) *
                 C10701 +
             (C5107 * C3422 + C50940 * C3426 + C5108 * C9729 + C50834 * C9732) *
                 C50632) *
                C7953) *
               C50696 * C280) *
              C281 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C279 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C278 -
           (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                 C50632 +
             (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                 C10701) *
                C7953 +
            ((C12780 + C12779) * C50632 + (C12778 + C12777) * C10701) * C7952 +
            C12785 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C457 -
           (((C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                 C50632 +
             (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                 C10701) *
                C7953 +
            ((C5108 * C1225 + C50834 * C1230 + C5107 * C895 + C50940 * C904) *
                 C50632 +
             (C5108 * C1218 + C50834 * C1226 + C5107 * C889 + C50940 * C894) *
                 C10701) *
                C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C458 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C5107 * C1218 + C50940 * C1226 + C5108 * C4511 + C50834 * C4517) *
                 C10701 +
             (C5107 * C1225 + C50940 * C1230 + C5108 * C4516 + C50834 * C4520) *
                 C50632) *
                C7952 +
            ((C5107 * C3587 + C50940 * C3593 + C5108 * C10137 +
              C50834 * C10141) *
                 C10701 +
             (C5107 * C3592 + C50940 * C3596 + C5108 * C10140 +
              C50834 * C10143) *
                 C50632) *
                C7953) *
               C459) *
              C50680 * C281 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C5107 * C1564 + C50940 * C1571 + C5108 * C3586 + C50834 * C3591) *
                 C10701 +
             (C5107 * C1570 + C50940 * C1576 + C5108 * C3590 + C50834 * C3595) *
                 C50632) *
                C7953) *
               C458 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C457 -
           (((C5108 * C10138 + C50834 * C10142 + C5107 * C3590 +
              C50940 * C3595) *
                 C50632 +
             (C5108 * C10136 + C50834 * C10139 + C5107 * C3586 +
              C50940 * C3591) *
                 C10701) *
                C7953 +
            ((C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                 C50632 +
             (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                 C10701) *
                C7952 +
            ((C5545 + C5544) * C50632 + (C5543 + C5542) * C10701) * C7951) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
            C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
               C10701 +
           (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
            C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
               C50632) *
              C50796 * C50696 * C50680 * C113 -
          ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
            C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
               C50632 +
           (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
            C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
               C10701) *
              C50796 * C50696 * C50680 * C114 +
          ((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
            C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
               C10701 +
           (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
            C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
               C50632) *
              C50796 * C50696 * C50680 * C115 -
          ((C20913 * C1850 + C20909 * C1858 + C20912 * C485 + C20908 * C497 +
            C20911 * C470 + C20907 * C490 + C20910 * C136 + C20906 * C146) *
               C50632 +
           (C20913 * C1846 + C20909 * C1851 + C20912 * C467 + C20908 * C484 +
            C20911 * C460 + C20907 * C471 + C20910 * C125 + C20906 * C135) *
               C10701) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50696 * C278 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50696 * C279 +
           ((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
             C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
             C20909 * C10141) *
                C10701 +
            (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
             C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
             C20909 * C10143) *
                C50632) *
               C50796 * C50696 * C280) *
              C281 +
          (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
             C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
             C20909 * C4515) *
                C10701 +
            (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
             C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
             C20909 * C4519) *
                C50632) *
               C50796 * C50696 * C279 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50696 * C278 -
           ((C20913 * C10138 + C20909 * C10142 + C20912 * C3590 +
             C20908 * C3595 + C20911 * C1570 + C20907 * C1576 + C20910 * C304 +
             C20906 * C318) *
                C50632 +
            (C20913 * C10136 + C20909 * C10139 + C20912 * C3586 +
             C20908 * C3591 + C20911 * C1564 + C20907 * C1571 + C20910 * C288 +
             C20906 * C303) *
                C10701) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C457 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C458 +
           ((C20910 * C464 + C20906 * C478 + C20911 * C1849 + C20907 * C1857 +
             C20912 * C7355 + C20908 * C7361 + C20913 * C17607 +
             C20909 * C17611) *
                C10701 +
            (C20910 * C479 + C20906 * C494 + C20911 * C1856 + C20907 * C1861 +
             C20912 * C7360 + C20908 * C7364 + C20913 * C17610 +
             C20909 * C17613) *
                C50632) *
               C50796 * C459) *
              C50680 * C281 +
          (((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
             C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
             C20909 * C7359) *
                C10701 +
            (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
             C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
             C20909 * C7363) *
                C50632) *
               C50796 * C458 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C457 -
           ((C20913 * C17608 + C20909 * C17612 + C20912 * C7358 +
             C20908 * C7363 + C20911 * C1854 + C20907 * C1860 + C20910 * C481 +
             C20906 * C495) *
                C50632 +
            (C20913 * C17606 + C20909 * C17609 + C20912 * C7354 +
             C20908 * C7359 + C20911 * C1848 + C20907 * C1855 + C20910 * C465 +
             C20906 * C480) *
                C10701) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50929 -
           (((C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                 C50632 +
             (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                 C10701) *
                C7953 +
            ((C5108 * C1225 + C50834 * C1230 + C5107 * C895 + C50940 * C904) *
                 C50632 +
             (C5108 * C1218 + C50834 * C1226 + C5107 * C889 + C50940 * C894) *
                 C10701) *
                C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50680 * C50970 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C5107 * C1564 + C50940 * C1571 + C5108 * C3586 + C50834 * C3591) *
                 C10701 +
             (C5107 * C1570 + C50940 * C1576 + C5108 * C3590 + C50834 * C3595) *
                 C50632) *
                C7953) *
               C50760 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50929) *
              C50680 * C50971 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50929 -
           (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                 C50632 +
             (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                 C10701) *
                C7953 +
            ((C6087 + C6086) * C50632 + (C6085 + C6084) * C10701) * C7952 +
            (C5856 * C50632 + C5857 * C10701) * C7951) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50929 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50760 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50929) *
              C50680 * C50971 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50929 -
           ((C5108 * C488 + C50834 * C499 + C5107 * C487 + C50940 * C498) *
                C2291 +
            (C5108 * C469 + C50834 * C489 + C5107 * C468 + C50940 * C486) *
                C2296 +
            (C5869 + C5868) * C2290 + (C5867 + C5866) * C2295 + C5856 * C2289 +
            C5857 * C2294) *
               C50796 * C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50929 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
             C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
             C20909 * C7359) *
                C10701 +
            (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
             C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
             C20909 * C7363) *
                C50632) *
               C50796 * C50760 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
             C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
                C10701 +
            (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
             C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
                C50632) *
               C50796 * C50929 -
           ((C20913 * C7356 + C20909 * C7362 + C20912 * C1852 + C20908 * C1859 +
             C20911 * C483 + C20907 * C496 + C20910 * C472 + C20906 * C491) *
                C50632 +
            (C20913 * C7353 + C20909 * C7357 + C20912 * C1847 + C20908 * C1853 +
             C20911 * C466 + C20907 * C482 + C20910 * C461 + C20906 * C473) *
                C10701) *
               C50796 * C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C278 -
           ((C5340 + C5341) * C2291 + (C5342 + C5343) * C2296 +
            (C5344 + C5345) * C2290 + (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C279 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50696 * C280) *
              C281 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5107 * C283 + C50940 * C294 + C5108 * C892 + C50834 * C900) *
                C2296 +
            (C5107 * C293 + C50940 * C313 + C5108 * C901 + C50834 * C907) *
                C2291) *
               C50796 * C50696 * C279 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C278 -
           ((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C2291 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C2296 +
            (C5355 + C5354) * C2290 + (C5353 + C5352) * C2295 +
            (C5351 + C5350) * C2289 + (C5349 + C5348) * C2294) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C50696 * C50680 * C113 -
          (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
           (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
           (C5143 + C5142) * C2294) *
              C50796 * C50696 * C50680 * C114 +
          (C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
           (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
           (C5156 + C5157) * C2291) *
              C50796 * C50696 * C50680 * C115 -
          ((C5108 * C750 + C50834 * C752 + C5107 * C140 + C50940 * C148) *
               C2291 +
           (C5108 * C749 + C50834 * C751 + C5107 * C127 + C50940 * C139) *
               C2296 +
           (C5157 + C5156) * C2290 + (C5155 + C5154) * C2295 + C5160 * C2289 +
           C5161 * C2294) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C5107 * C286 + C50940 * C300 + C5108 * C889 + C50834 * C894) *
                C10701 +
            (C5107 * C299 + C50940 * C316 + C5108 * C895 + C50834 * C904) *
                C50632) *
               C7952 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C10701 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C50632) *
               C7953) *
              C50696 * C50680 * C113 -
          (((C5351 + C5350) * C50632 + (C5349 + C5348) * C10701) * C7953 +
           ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
           ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
              C50696 * C50680 * C114 +
          ((C5158 * C10701 + C5159 * C50632) * C7951 +
           ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
           ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
              C50696 * C50680 * C115 -
          (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C50632 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C10701) *
               C7953 +
           ((C5709 + C5708) * C50632 + (C5707 + C5706) * C10701) * C7952 +
           (C5160 * C50632 + C5161 * C10701) * C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C278 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C279 +
           (C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C5107 * C3417 + C50940 * C3423 + C5108 * C9726 + C50834 * C9730) *
                 C10701 +
             (C5107 * C3422 + C50940 * C3426 + C5108 * C9729 + C50834 * C9732) *
                 C50632) *
                C7953) *
               C50696 * C280) *
              C281 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C279 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C278 -
           (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                 C50632 +
             (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                 C10701) *
                C7953 +
            ((C12780 + C12779) * C50632 + (C12778 + C12777) * C10701) * C7952 +
            C12785 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
            C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
               C10701 +
           (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
            C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
               C50632) *
              C50796 * C50696 * C50680 * C113 -
          ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
            C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
               C50632 +
           (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
            C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
               C10701) *
              C50796 * C50696 * C50680 * C114 +
          ((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
            C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
               C10701 +
           (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
            C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
               C50632) *
              C50796 * C50696 * C50680 * C115 -
          ((C20913 * C1850 + C20909 * C1858 + C20912 * C485 + C20908 * C497 +
            C20911 * C470 + C20907 * C490 + C20910 * C136 + C20906 * C146) *
               C50632 +
           (C20913 * C1846 + C20909 * C1851 + C20912 * C467 + C20908 * C484 +
            C20911 * C460 + C20907 * C471 + C20910 * C125 + C20906 * C135) *
               C10701) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50696 * C278 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50696 * C279 +
           ((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
             C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
             C20909 * C10141) *
                C10701 +
            (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
             C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
             C20909 * C10143) *
                C50632) *
               C50796 * C50696 * C280) *
              C281 +
          (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
             C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
             C20909 * C4515) *
                C10701 +
            (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
             C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
             C20909 * C4519) *
                C50632) *
               C50796 * C50696 * C279 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50696 * C278 -
           ((C20913 * C10138 + C20909 * C10142 + C20912 * C3590 +
             C20908 * C3595 + C20911 * C1570 + C20907 * C1576 + C20910 * C304 +
             C20906 * C318) *
                C50632 +
            (C20913 * C10136 + C20909 * C10139 + C20912 * C3586 +
             C20908 * C3591 + C20911 * C1564 + C20907 * C1571 + C20910 * C288 +
             C20906 * C303) *
                C10701) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C50972 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50973 +
           (C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C50696 * C1331) *
              C50920 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50973 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C50972 -
           (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                 C50632 +
             (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                 C10701) *
                C7953 +
            ((C12780 + C12779) * C50632 + (C12778 + C12777) * C10701) * C7952 +
            C12785 * C7951) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C50972 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50973 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50696 * C1331) *
              C50920 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50973 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C50972 -
           ((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C2291 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C2296 +
            (C5355 + C5354) * C2290 + (C5353 + C5352) * C2295 +
            (C5351 + C5350) * C2289 + (C5349 + C5348) * C2294) *
               C50796 * C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50696 * C50972 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50696 * C50973 +
           ((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
             C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
             C20909 * C10141) *
                C10701 +
            (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
             C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
             C20909 * C10143) *
                C50632) *
               C50796 * C50696 * C1331) *
              C50920 +
          (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
             C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
             C20909 * C4515) *
                C10701 +
            (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
             C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
             C20909 * C4519) *
                C50632) *
               C50796 * C50696 * C50973 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50696 * C50972 -
           ((C20913 * C10138 + C20909 * C10142 + C20912 * C3590 +
             C20908 * C3595 + C20911 * C1570 + C20907 * C1576 + C20910 * C304 +
             C20906 * C318) *
                C50632 +
            (C20913 * C10136 + C20909 * C10139 + C20912 * C3586 +
             C20908 * C3591 + C20911 * C1564 + C20907 * C1571 + C20910 * C288 +
             C20906 * C303) *
                C10701) *
               C50796 * C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50929 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50972 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50760 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50929) *
              C50973 +
          ((C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C50929 -
           (((C5108 * C11539 + C50834 * C11541 + C5107 * C9729 +
              C50940 * C9732) *
                 C50632 +
             (C5108 * C11538 + C50834 * C11540 + C5107 * C9726 +
              C50940 * C9730) *
                 C10701) *
                C7953 +
            ((C14389 + C14388) * C50632 + (C14387 + C14386) * C10701) * C7952 +
            C14390 * C7951) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50929 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50972 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50760 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50929) *
              C50973 +
          (((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50929 -
           ((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                C2291 +
            (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                C2296 +
            (C5108 * C3590 + C50834 * C3595 + C5107 * C1570 + C50940 * C1576) *
                C2290 +
            (C5108 * C3586 + C50834 * C3591 + C5107 * C1564 + C50940 * C1571) *
                C2295 +
            (C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                C2289 +
            (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                C2294) *
               C50796 * C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50929 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50760) *
              C50972 +
          (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
             C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
             C20909 * C14785) *
                C10701 +
            (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
             C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
             C20909 * C14787) *
                C50632) *
               C50796 * C50760 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50929) *
              C50973 +
          (((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
             C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
             C20909 * C10141) *
                C10701 +
            (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
             C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
             C20909 * C10143) *
                C50632) *
               C50796 * C50929 -
           ((C20913 * C14782 + C20909 * C14786 + C20912 * C10140 +
             C20908 * C10143 + C20911 * C3592 + C20907 * C3596 +
             C20910 * C1572 + C20906 * C1577) *
                C50632 +
            (C20913 * C14780 + C20909 * C14783 + C20912 * C10137 +
             C20908 * C10141 + C20911 * C3587 + C20907 * C3593 +
             C20910 * C1565 + C20906 * C1573) *
                C10701) *
               C50796 * C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                    C2294 +
                (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                    C2289 +
                (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 +
                C5158 * C2296 + C5159 * C2291) *
                   C50796 * C50696 * C1025 -
               (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
                (C5346 + C5347) * C2295 +
                (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                    C2289 +
                (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                    C2294) *
                   C50796 * C50696 * C50732) *
                  C1027 +
              (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
                (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
                (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                   C50796 * C50696 * C50732 -
               (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
                (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
                (C5143 + C5142) * C2294) *
                   C50796 * C50696 * C1025) *
                  C1028 +
              ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
                (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
                (C5156 + C5157) * C2291) *
                   C50796 * C50696 * C1025 -
               ((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                    C2291 +
                (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                    C2296 +
                (C5709 + C5708) * C2290 + (C5707 + C5706) * C2295 +
                C5696 * C2289 + C5697 * C2294) *
                   C50796 * C50696 * C50732) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                   C2294 +
               (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                   C2289 +
               (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 +
               C5158 * C2296 + C5159 * C2291) *
                  C50796 * C50696 * C1096 -
              (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
               (C5346 + C5347) * C2295 +
               (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                   C2289 +
               (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                   C2294) *
                  C50796 * C50696 * C1097 +
              ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                   C2294 +
               (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                   C2289 +
               (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
               (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
                  C50796 * C50696 * C1098 -
              ((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 +
                C50940 * C1114) *
                   C2291 +
               (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 +
                C50940 * C1108) *
                   C2296 +
               (C5108 * C4100 + C50834 * C4105 + C5107 * C1109 +
                C50940 * C1115) *
                   C2290 +
               (C5108 * C4096 + C50834 * C4101 + C5107 * C1103 +
                C50940 * C1110) *
                   C2295 +
               (C5108 * C4102 + C50834 * C4106 + C5107 * C1111 +
                C50940 * C1116) *
                   C2289 +
               (C5108 * C4097 + C50834 * C4103 + C5107 * C1104 +
                C50940 * C1112) *
                   C2294) *
                  C50796 * C50696 * C1099) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C457 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C458 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C459) *
              C1025 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C458 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C457 -
           ((C5108 * C4512 + C50834 * C4518 + C5107 * C1221 + C50940 * C1228) *
                C2291 +
            (C5108 * C4509 + C50834 * C4513 + C5107 * C1216 + C50940 * C1222) *
                C2296 +
            (C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                C2290 +
            (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                C2295 +
            (C5108 * C4516 + C50834 * C4520 + C5107 * C1225 + C50940 * C1230) *
                C2289 +
            (C5108 * C4511 + C50834 * C4517 + C5107 * C1218 + C50940 * C1226) *
                C2294) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C1025 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50732) *
              C1027 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50732 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C1025) *
              C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50696 * C1025 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50632 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C10701) *
                C7953 +
            ((C5355 + C5354) * C50632 + (C5353 + C5352) * C10701) * C7952 +
            (C5696 * C50632 + C5697 * C10701) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
           C12788 * C7953) *
              C50696 * C1096 -
          (C13717 * C7953 +
           ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
           ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
              C50696 * C1097 +
          (C12788 * C7951 +
           ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
           ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
              C50696 * C1098 -
          (((C5108 * C11881 + C50834 * C11883 + C5107 * C9054 +
             C50940 * C9057) *
                C50632 +
            (C5108 * C11880 + C50834 * C11882 + C5107 * C9051 +
             C50940 * C9055) *
                C10701) *
               C7953 +
           ((C13716 + C13715) * C50632 + (C13714 + C13713) * C10701) * C7952 +
           C13717 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C457 -
           (((C13445 + C13446) * C50632 + (C13447 + C13448) * C10701) * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C458 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
            ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
               C459) *
              C1025 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C5107 * C4097 + C50940 * C4103 + C5108 * C9218 + C50834 * C9222) *
                 C10701 +
             (C5107 * C4102 + C50940 * C4106 + C5108 * C9221 + C50834 * C9224) *
                 C50632) *
                C7953) *
               C458 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C457 -
           (((C5108 * C12157 + C50834 * C12159 + C5107 * C9221 +
              C50940 * C9224) *
                 C50632 +
             (C5108 * C12156 + C50834 * C12158 + C5107 * C9218 +
              C50940 * C9222) *
                 C10701) *
                C7953 +
            ((C13887 + C13886) * C50632 + (C13885 + C13884) * C10701) * C7952 +
            ((C13883 + C13882) * C50632 + (C13881 + C13880) * C10701) * C7951) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50696 * C1025 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
             C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
             C20909 * C4515) *
                C10701 +
            (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
             C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
             C20909 * C4519) *
                C50632) *
               C50796 * C50696 * C50732 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50696 * C1025) *
              C1028 +
          (((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
             C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
                C10701 +
            (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
             C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
                C50632) *
               C50796 * C50696 * C1025 -
           ((C20913 * C4512 + C20909 * C4518 + C20912 * C1221 + C20908 * C1228 +
             C20911 * C899 + C20907 * C906 + C20910 * C295 + C20906 * C314) *
                C50632 +
            (C20913 * C4509 + C20909 * C4513 + C20912 * C1216 + C20908 * C1222 +
             C20911 * C891 + C20907 * C898 + C20910 * C284 + C20906 * C296) *
                C10701) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
            C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
               C10701 +
           (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
            C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
               C50632) *
              C50796 * C50696 * C1096 -
          ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
            C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
               C50632 +
           (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
            C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
               C10701) *
              C50796 * C50696 * C1097 +
          ((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
            C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
            C20909 * C10141) *
               C10701 +
           (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
            C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
            C20909 * C10143) *
               C50632) *
              C50796 * C50696 * C1098 -
          ((C20913 * C12157 + C20909 * C12159 + C20912 * C9221 +
            C20908 * C9224 + C20911 * C4102 + C20907 * C4106 + C20910 * C1111 +
            C20906 * C1116) *
               C50632 +
           (C20913 * C12156 + C20909 * C12158 + C20912 * C9218 +
            C20908 * C9222 + C20911 * C4097 + C20907 * C4103 + C20910 * C1104 +
            C20906 * C1112) *
               C10701) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C457 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C458 +
           ((C20910 * C464 + C20906 * C478 + C20911 * C1849 + C20907 * C1857 +
             C20912 * C7355 + C20908 * C7361 + C20913 * C17607 +
             C20909 * C17611) *
                C10701 +
            (C20910 * C479 + C20906 * C494 + C20911 * C1856 + C20907 * C1861 +
             C20912 * C7360 + C20908 * C7364 + C20913 * C17610 +
             C20909 * C17613) *
                C50632) *
               C50796 * C459) *
              C1025 +
          (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
             C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
             C20909 * C14785) *
                C10701 +
            (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
             C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
             C20909 * C14787) *
                C50632) *
               C50796 * C458 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C457 -
           ((C20913 * C20351 + C20909 * C20353 + C20912 * C14784 +
             C20908 * C14787 + C20911 * C4516 + C20907 * C4520 +
             C20910 * C1225 + C20906 * C1230) *
                C50632 +
            (C20913 * C20350 + C20909 * C20352 + C20912 * C14781 +
             C20908 * C14785 + C20911 * C4511 + C20907 * C4517 +
             C20910 * C1218 + C20906 * C1226) *
                C10701) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C10701 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C50632) *
                 C7951 +
             ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
             C12788 * C7953) *
                C50929 -
            (((C13445 + C13446) * C50632 + (C13447 + C13448) * C10701) * C7953 +
             ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
             ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C50632 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C10701) *
                 C7951) *
                C50760) *
               C1025 +
           ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
             ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
             ((C5107 * C4097 + C50940 * C4103 + C5108 * C9218 +
               C50834 * C9222) *
                  C10701 +
              (C5107 * C4102 + C50940 * C4106 + C5108 * C9221 +
               C50834 * C9224) *
                  C50632) *
                 C7953) *
                C50760 -
            (C13717 * C7953 +
             ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
             ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) *
                 C7951) *
                C50929) *
               C50732) *
              C50920 +
          (((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
             ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
             ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) *
                 C7953) *
                C50760 -
            (C12785 * C7953 +
             ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
             ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
                C50929) *
               C1025 +
           ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
             ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
             ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) *
                 C7953) *
                C50929 -
            (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 +
               C50940 * C4105) *
                  C50632 +
              (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 +
               C50940 * C4101) *
                  C10701) *
                 C7953 +
             ((C13456 + C13455) * C50632 + (C13454 + C13453) * C10701) * C7952 +
             ((C6083 + C6082) * C50632 + (C6081 + C6080) * C10701) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C2294 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C2289 +
             (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
             C5159 * C2291) *
                C50796 * C50929 -
            (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
             (C5540 + C5541) * C2295 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C2289 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C2294) *
                C50796 * C50760) *
               C1025 +
           (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                 C2294 +
             (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                 C2289 +
             (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
             (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                C50796 * C50760 -
            (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
             (C5346 + C5347) * C2295 +
             (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                 C2289 +
             (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                 C2294) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
             (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
             (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                C50796 * C50760 -
            (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
             (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
             (C5143 + C5142) * C2294) *
                C50796 * C50929) *
               C1025 +
           (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
             (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
             (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                C50796 * C50929 -
            ((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C2291 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C2296 +
             (C6087 + C6086) * C2290 + (C6085 + C6084) * C2295 +
             (C6083 + C6082) * C2289 + (C6081 + C6080) * C2294) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
              C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                 C10701 +
             (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
              C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                 C50632) *
                C50796 * C50929 -
            ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 +
              C20908 * C1861 + C20911 * C479 + C20907 * C494 + C20910 * C476 +
              C20906 * C493) *
                 C50632 +
             (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 +
              C20908 * C1857 + C20911 * C464 + C20907 * C478 + C20910 * C463 +
              C20906 * C477) *
                 C10701) *
                C50796 * C50760) *
               C1025 +
           (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
              C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
              C20909 * C14785) *
                 C10701 +
             (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
              C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
              C20909 * C14787) *
                 C50632) *
                C50796 * C50760 -
            ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 +
              C20908 * C1230 + C20911 * C895 + C20907 * C904 + C20910 * C299 +
              C20906 * C316) *
                 C50632 +
             (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 +
              C20908 * C1226 + C20911 * C889 + C20907 * C894 + C20910 * C286 +
              C20906 * C300) *
                 C10701) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
              C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
              C20909 * C7359) *
                 C10701 +
             (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
              C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
              C20909 * C7363) *
                 C50632) *
                C50796 * C50760 -
            ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
              C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                 C50632 +
             (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
              C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                 C10701) *
                C50796 * C50929) *
               C1025 +
           (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
              C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
              C20909 * C4515) *
                 C10701 +
             (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
              C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
              C20909 * C4519) *
                 C50632) *
                C50796 * C50929 -
            ((C20913 * C16727 + C20909 * C16729 + C20912 * C4514 +
              C20908 * C4519 + C20911 * C1223 + C20907 * C1229 + C20910 * C897 +
              C20906 * C905) *
                 C50632 +
             (C20913 * C16726 + C20909 * C16728 + C20912 * C4510 +
              C20908 * C4515 + C20911 * C1217 + C20907 * C1224 + C20910 * C890 +
              C20906 * C896) *
                 C10701) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C50696 * C1096 -
          (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
           (C5346 + C5347) * C2295 +
           (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
               C2289 +
           (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
               C2294) *
              C50796 * C50696 * C1097 +
          ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
               C2294 +
           (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
               C2289 +
           (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
           (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
              C50796 * C50696 * C1098 -
          ((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
               C2291 +
           (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
               C2296 +
           (C5108 * C4100 + C50834 * C4105 + C5107 * C1109 + C50940 * C1115) *
               C2290 +
           (C5108 * C4096 + C50834 * C4101 + C5107 * C1103 + C50940 * C1110) *
               C2295 +
           (C5108 * C4102 + C50834 * C4106 + C5107 * C1111 + C50940 * C1116) *
               C2289 +
           (C5108 * C4097 + C50834 * C4103 + C5107 * C1104 + C50940 * C1112) *
               C2294) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C1025 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50732 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50696 * C1025 -
           ((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C2291 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C2296 +
            (C5709 + C5708) * C2290 + (C5707 + C5706) * C2295 + C5696 * C2289 +
            C5697 * C2294) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C1025 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50732) *
              C1027 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50732 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C1025) *
              C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50696 * C1025 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50632 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C10701) *
                C7953 +
            ((C5355 + C5354) * C50632 + (C5353 + C5352) * C10701) * C7952 +
            (C5696 * C50632 + C5697 * C10701) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
           C12788 * C7953) *
              C50696 * C1096 -
          (C13717 * C7953 +
           ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
           ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
              C50696 * C1097 +
          (C12788 * C7951 +
           ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
           ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
              C50696 * C1098 -
          (((C5108 * C11881 + C50834 * C11883 + C5107 * C9054 +
             C50940 * C9057) *
                C50632 +
            (C5108 * C11880 + C50834 * C11882 + C5107 * C9051 +
             C50940 * C9055) *
                C10701) *
               C7953 +
           ((C13716 + C13715) * C50632 + (C13714 + C13713) * C10701) * C7952 +
           C13717 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50696 * C1025 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
             C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
             C20909 * C4515) *
                C10701 +
            (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
             C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
             C20909 * C4519) *
                C50632) *
               C50796 * C50696 * C50732 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50696 * C1025) *
              C1028 +
          (((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
             C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
                C10701 +
            (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
             C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
                C50632) *
               C50796 * C50696 * C1025 -
           ((C20913 * C4512 + C20909 * C4518 + C20912 * C1221 + C20908 * C1228 +
             C20911 * C899 + C20907 * C906 + C20910 * C295 + C20906 * C314) *
                C50632 +
            (C20913 * C4509 + C20909 * C4513 + C20912 * C1216 + C20908 * C1222 +
             C20911 * C891 + C20907 * C898 + C20910 * C284 + C20906 * C296) *
                C10701) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
            C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
               C10701 +
           (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
            C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
               C50632) *
              C50796 * C50696 * C1096 -
          ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
            C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
               C50632 +
           (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
            C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
               C10701) *
              C50796 * C50696 * C1097 +
          ((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
            C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
            C20909 * C10141) *
               C10701 +
           (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
            C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
            C20909 * C10143) *
               C50632) *
              C50796 * C50696 * C1098 -
          ((C20913 * C12157 + C20909 * C12159 + C20912 * C9221 +
            C20908 * C9224 + C20911 * C4102 + C20907 * C4106 + C20910 * C1111 +
            C20906 * C1116) *
               C50632 +
           (C20913 * C12156 + C20909 * C12158 + C20912 * C9218 +
            C20908 * C9222 + C20911 * C4097 + C20907 * C4103 + C20910 * C1104 +
            C20906 * C1112) *
               C10701) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C10701 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C50632) *
                 C7951 +
             ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
             C12788 * C7953) *
                C1676 -
            (C14390 * C7953 +
             ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
             ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C50632 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C10701) *
                 C7951) *
                C50760) *
               C50928 +
           ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
             ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
             ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) *
                 C7953) *
                C50760 -
            (C13717 * C7953 +
             ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
             ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) *
                 C7951) *
                C1676) *
               C50732) *
              C50920 +
          (((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
             ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
             ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) *
                 C7953) *
                C50760 -
            (C12785 * C7953 +
             ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
             ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
                C1676) *
               C50928 +
           ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
             ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
             ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) *
                 C7953) *
                C1676 -
            (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 +
               C50940 * C4105) *
                  C50632 +
              (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 +
               C50940 * C4101) *
                  C10701) *
                 C7953 +
             ((C13456 + C13455) * C50632 + (C13454 + C13453) * C10701) * C7952 +
             ((C6083 + C6082) * C50632 + (C6081 + C6080) * C10701) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C2294 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C2289 +
             (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
             C5159 * C2291) *
                C50796 * C1676 -
            (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
             (C5540 + C5541) * C2295 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C2289 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C2294) *
                C50796 * C50760) *
               C50928 +
           (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                 C2294 +
             (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                 C2289 +
             (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
             (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                C50796 * C50760 -
            (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
             (C5346 + C5347) * C2295 +
             (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                 C2289 +
             (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                 C2294) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          ((((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
             (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
             (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                C50796 * C50760 -
            (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
             (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
             (C5143 + C5142) * C2294) *
                C50796 * C1676) *
               C50928 +
           (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
             (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
             (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                C50796 * C1676 -
            ((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C2291 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C2296 +
             (C6087 + C6086) * C2290 + (C6085 + C6084) * C2295 +
             (C6083 + C6082) * C2289 + (C6081 + C6080) * C2294) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
              C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                 C10701 +
             (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
              C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                 C50632) *
                C50796 * C1676 -
            ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 +
              C20908 * C1861 + C20911 * C479 + C20907 * C494 + C20910 * C476 +
              C20906 * C493) *
                 C50632 +
             (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 +
              C20908 * C1857 + C20911 * C464 + C20907 * C478 + C20910 * C463 +
              C20906 * C477) *
                 C10701) *
                C50796 * C50760) *
               C50928 +
           (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
              C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
              C20909 * C14785) *
                 C10701 +
             (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
              C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
              C20909 * C14787) *
                 C50632) *
                C50796 * C50760 -
            ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 +
              C20908 * C1230 + C20911 * C895 + C20907 * C904 + C20910 * C299 +
              C20906 * C316) *
                 C50632 +
             (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 +
              C20908 * C1226 + C20911 * C889 + C20907 * C894 + C20910 * C286 +
              C20906 * C300) *
                 C10701) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          ((((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
              C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
              C20909 * C7359) *
                 C10701 +
             (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
              C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
              C20909 * C7363) *
                 C50632) *
                C50796 * C50760 -
            ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
              C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                 C50632 +
             (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
              C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                 C10701) *
                C50796 * C1676) *
               C50928 +
           (((C20910 * C285 + C20906 * C298 + C20911 * C890 + C20907 * C896 +
              C20912 * C1217 + C20908 * C1224 + C20913 * C4510 +
              C20909 * C4515) *
                 C10701 +
             (C20910 * C297 + C20906 * C315 + C20911 * C897 + C20907 * C905 +
              C20912 * C1223 + C20908 * C1229 + C20913 * C4514 +
              C20909 * C4519) *
                 C50632) *
                C50796 * C1676 -
            ((C20913 * C16727 + C20909 * C16729 + C20912 * C4514 +
              C20908 * C4519 + C20911 * C1223 + C20907 * C1229 + C20910 * C897 +
              C20906 * C905) *
                 C50632 +
             (C20913 * C16726 + C20909 * C16728 + C20912 * C4510 +
              C20908 * C4515 + C20911 * C1217 + C20907 * C1224 + C20910 * C890 +
              C20906 * C896) *
                 C10701) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50974 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50975 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
            ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
               C2092) *
              C50928 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50975 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50974 -
           (((C5108 * C12157 + C50834 * C12159 + C5107 * C9221 +
              C50940 * C9224) *
                 C50632 +
             (C5108 * C12156 + C50834 * C12158 + C5107 * C9218 +
              C50940 * C9222) *
                 C10701) *
                C7953 +
            ((C13887 + C13886) * C50632 + (C13885 + C13884) * C10701) * C7952 +
            ((C13883 + C13882) * C50632 + (C13881 + C13880) * C10701) * C7951) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50974 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50975 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C2092) *
              C50928 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50975 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50974 -
           ((C5108 * C4512 + C50834 * C4518 + C5107 * C1221 + C50940 * C1228) *
                C2291 +
            (C5108 * C4509 + C50834 * C4513 + C5107 * C1216 + C50940 * C1222) *
                C2296 +
            (C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                C2290 +
            (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                C2295 +
            (C5108 * C4516 + C50834 * C4520 + C5107 * C1225 + C50940 * C1230) *
                C2289 +
            (C5108 * C4511 + C50834 * C4517 + C5107 * C1218 + C50940 * C1226) *
                C2294) *
               C50796 * C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50974 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50975 +
           ((C20910 * C464 + C20906 * C478 + C20911 * C1849 + C20907 * C1857 +
             C20912 * C7355 + C20908 * C7361 + C20913 * C17607 +
             C20909 * C17611) *
                C10701 +
            (C20910 * C479 + C20906 * C494 + C20911 * C1856 + C20907 * C1861 +
             C20912 * C7360 + C20908 * C7364 + C20913 * C17610 +
             C20909 * C17613) *
                C50632) *
               C50796 * C2092) *
              C50928 +
          (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
             C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
             C20909 * C14785) *
                C10701 +
            (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
             C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
             C20909 * C14787) *
                C50632) *
               C50796 * C50975 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C50974 -
           ((C20913 * C20351 + C20909 * C20353 + C20912 * C14784 +
             C20908 * C14787 + C20911 * C4516 + C20907 * C4520 +
             C20910 * C1225 + C20906 * C1230) *
                C50632 +
            (C20913 * C20350 + C20909 * C20352 + C20912 * C14781 +
             C20908 * C14785 + C20911 * C4511 + C20907 * C4517 +
             C20910 * C1218 + C20906 * C1226) *
                C10701) *
               C50796 * C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                    C2294 +
                (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                    C2289 +
                (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 +
                C5158 * C2296 + C5159 * C2291) *
                   C50796 * C1676 -
               (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
                (C5540 + C5541) * C2295 +
                (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                    C2289 +
                (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                    C2294) *
                   C50796 * C50760) *
                  C50680 * C1027 +
              (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
                (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
                (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                   C50796 * C50760 -
               (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
                (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
                (C5143 + C5142) * C2294) *
                   C50796 * C1676) *
                  C50680 * C1028 +
              ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
                (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
                (C5156 + C5157) * C2291) *
                   C50796 * C1676 -
               ((C5108 * C488 + C50834 * C499 + C5107 * C487 + C50940 * C498) *
                    C2291 +
                (C5108 * C469 + C50834 * C489 + C5107 * C468 + C50940 * C486) *
                    C2296 +
                (C5869 + C5868) * C2290 + (C5867 + C5866) * C2295 +
                C5856 * C2289 + C5857 * C2294) *
                   C50796 * C50760) *
                  C50680 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                    C2294 +
                (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                    C2289 +
                (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 +
                C5158 * C2296 + C5159 * C2291) *
                   C50796 * C1676 -
               (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
                (C5540 + C5541) * C2295 +
                (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                    C2289 +
                (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                    C2294) *
                   C50796 * C50760) *
                  C278 +
              (((C5107 * C889 + C50940 * C894 + C5108 * C1218 +
                 C50834 * C1226) *
                    C2294 +
                (C5107 * C895 + C50940 * C904 + C5108 * C1225 +
                 C50834 * C1230) *
                    C2289 +
                (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
                (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                   C50796 * C50760 -
               (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
                (C5346 + C5347) * C2295 +
                (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                    C2289 +
                (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                    C2294) *
                   C50796 * C1676) *
                  C279 +
              (((C5107 * C287 + C50940 * C301 + C5108 * C1565 +
                 C50834 * C1573) *
                    C2294 +
                (C5107 * C302 + C50940 * C317 + C5108 * C1572 +
                 C50834 * C1577) *
                    C2289 +
                (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
                (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
                   C50796 * C1676 -
               ((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 +
                 C50940 * C1575) *
                    C2291 +
                (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 +
                 C50940 * C1569) *
                    C2296 +
                (C5108 * C3590 + C50834 * C3595 + C5107 * C1570 +
                 C50940 * C1576) *
                    C2290 +
                (C5108 * C3586 + C50834 * C3591 + C5107 * C1564 +
                 C50940 * C1571) *
                    C2295 +
                (C5108 * C3592 + C50834 * C3596 + C5107 * C1572 +
                 C50940 * C1577) *
                    C2289 +
                (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 +
                 C50940 * C1573) *
                    C2294) *
                   C50796 * C50760) *
                  C280) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C1842 -
          (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
           (C5540 + C5541) * C2295 +
           (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
               C2289 +
           (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
               C2294) *
              C50796 * C1843 +
          ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
               C2294 +
           (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
               C2289 +
           (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
           (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
              C50796 * C1844 -
          ((C5108 * C7356 + C50834 * C7362 + C5107 * C1852 + C50940 * C1859) *
               C2291 +
           (C5108 * C7353 + C50834 * C7357 + C5107 * C1847 + C50940 * C1853) *
               C2296 +
           (C5108 * C7358 + C50834 * C7363 + C5107 * C1854 + C50940 * C1860) *
               C2290 +
           (C5108 * C7354 + C50834 * C7359 + C5107 * C1848 + C50940 * C1855) *
               C2295 +
           (C5108 * C7360 + C50834 * C7364 + C5107 * C1856 + C50940 * C1861) *
               C2289 +
           (C5108 * C7355 + C50834 * C7361 + C5107 * C1849 + C50940 * C1857) *
               C2294) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) * C7953) *
               C50760 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C1676) *
              C50680 * C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C1676 -
           (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                 C50632 +
             (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                 C10701) *
                C7953 +
            ((C6087 + C6086) * C50632 + (C6085 + C6084) * C10701) * C7952 +
            (C5856 * C50632 + C5857 * C10701) * C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C278 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50760 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C1676) *
              C279 +
          ((C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C1676 -
           (((C5108 * C11539 + C50834 * C11541 + C5107 * C9729 +
              C50940 * C9732) *
                 C50632 +
             (C5108 * C11538 + C50834 * C11540 + C5107 * C9726 +
              C50940 * C9730) *
                 C10701) *
                C7953 +
            ((C14389 + C14388) * C50632 + (C14387 + C14386) * C10701) * C7952 +
            C14390 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
           C12788 * C7953) *
              C1842 -
          (C14390 * C7953 +
           ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
           ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C50632 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C10701) *
               C7951) *
              C1843 +
          (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C10701 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C50632) *
               C7951 +
           ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
           ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
              C1844 -
          (((C5108 * C14782 + C50834 * C14786 + C5107 * C10140 +
             C50940 * C10143) *
                C50632 +
            (C5108 * C14780 + C50834 * C14783 + C5107 * C10137 +
             C50940 * C10141) *
                C10701) *
               C7953 +
           ((C5108 * C14784 + C50834 * C14787 + C5107 * C4516 +
             C50940 * C4520) *
                C50632 +
            (C5108 * C14781 + C50834 * C14785 + C5107 * C4511 +
             C50940 * C4517) *
                C10701) *
               C7952 +
           ((C5108 * C7360 + C50834 * C7364 + C5107 * C1856 + C50940 * C1861) *
                C50632 +
            (C5108 * C7355 + C50834 * C7361 + C5107 * C1849 + C50940 * C1857) *
                C10701) *
               C7951) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
             C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
             C20909 * C7359) *
                C10701 +
            (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
             C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
             C20909 * C7363) *
                C50632) *
               C50796 * C50760 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C1676) *
              C50680 * C1028 +
          (((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
             C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
                C10701 +
            (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
             C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C7356 + C20909 * C7362 + C20912 * C1852 + C20908 * C1859 +
             C20911 * C483 + C20907 * C496 + C20910 * C472 + C20906 * C491) *
                C50632 +
            (C20913 * C7353 + C20909 * C7357 + C20912 * C1847 + C20908 * C1853 +
             C20911 * C466 + C20907 * C482 + C20910 * C461 + C20906 * C473) *
                C10701) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50760) *
              C278 +
          (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
             C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
             C20909 * C14785) *
                C10701 +
            (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
             C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
             C20909 * C14787) *
                C50632) *
               C50796 * C50760 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C1676) *
              C279 +
          (((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
             C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
             C20909 * C10141) *
                C10701 +
            (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
             C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
             C20909 * C10143) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C14782 + C20909 * C14786 + C20912 * C10140 +
             C20908 * C10143 + C20911 * C3592 + C20907 * C3596 +
             C20910 * C1572 + C20906 * C1577) *
                C50632 +
            (C20913 * C14780 + C20909 * C14783 + C20912 * C10137 +
             C20908 * C10141 + C20911 * C3587 + C20907 * C3593 +
             C20910 * C1565 + C20906 * C1573) *
                C10701) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
            C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
               C10701 +
           (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
            C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
               C50632) *
              C50796 * C1842 -
          ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
            C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
               C50632 +
           (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
            C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
               C10701) *
              C50796 * C1843 +
          ((C20910 * C464 + C20906 * C478 + C20911 * C1849 + C20907 * C1857 +
            C20912 * C7355 + C20908 * C7361 + C20913 * C17607 +
            C20909 * C17611) *
               C10701 +
           (C20910 * C479 + C20906 * C494 + C20911 * C1856 + C20907 * C1861 +
            C20912 * C7360 + C20908 * C7364 + C20913 * C17610 +
            C20909 * C17613) *
               C50632) *
              C50796 * C1844 -
          ((C20913 * C22287 + C20909 * C22289 + C20912 * C17610 +
            C20908 * C17613 + C20911 * C7360 + C20907 * C7364 + C20910 * C1856 +
            C20906 * C1861) *
               C50632 +
           (C20913 * C22286 + C20909 * C22288 + C20912 * C17607 +
            C20908 * C17611 + C20911 * C7355 + C20907 * C7361 + C20910 * C1849 +
            C20906 * C1857) *
               C10701) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50974 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50975 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
            ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
               C2092) *
              C50680 * C50920 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) * C7953) *
               C50975 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50974 -
           (((C5108 * C10138 + C50834 * C10142 + C5107 * C3590 +
              C50940 * C3595) *
                 C50632 +
             (C5108 * C10136 + C50834 * C10139 + C5107 * C3586 +
              C50940 * C3591) *
                 C10701) *
                C7953 +
            ((C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                 C50632 +
             (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                 C10701) *
                C7952 +
            ((C5545 + C5544) * C50632 + (C5543 + C5542) * C10701) * C7951) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50974 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50975 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C2092) *
              C50680 * C50920 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50975 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50974 -
           ((C5108 * C1850 + C50834 * C1858 + C5107 * C485 + C50940 * C497) *
                C2291 +
            (C5108 * C1846 + C50834 * C1851 + C5107 * C467 + C50940 * C484) *
                C2296 +
            (C5549 + C5548) * C2290 + (C5547 + C5546) * C2295 +
            (C5545 + C5544) * C2289 + (C5543 + C5542) * C2294) *
               C50796 * C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C50974 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50975 +
           ((C20910 * C464 + C20906 * C478 + C20911 * C1849 + C20907 * C1857 +
             C20912 * C7355 + C20908 * C7361 + C20913 * C17607 +
             C20909 * C17611) *
                C10701 +
            (C20910 * C479 + C20906 * C494 + C20911 * C1856 + C20907 * C1861 +
             C20912 * C7360 + C20908 * C7364 + C20913 * C17610 +
             C20909 * C17613) *
                C50632) *
               C50796 * C2092) *
              C50680 * C50920 +
          (((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
             C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
             C20909 * C7359) *
                C10701 +
            (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
             C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
             C20909 * C7363) *
                C50632) *
               C50796 * C50975 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C50974 -
           ((C20913 * C17608 + C20909 * C17612 + C20912 * C7358 +
             C20908 * C7363 + C20911 * C1854 + C20907 * C1860 + C20910 * C481 +
             C20906 * C495) *
                C50632 +
            (C20913 * C17606 + C20909 * C17609 + C20912 * C7354 +
             C20908 * C7359 + C20911 * C1848 + C20907 * C1855 + C20910 * C465 +
             C20906 * C480) *
                C10701) *
               C50796 * C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C1676 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C278 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50760 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C1676) *
              C279 +
          (((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C1676 -
           ((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                C2291 +
            (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                C2296 +
            (C5108 * C3590 + C50834 * C3595 + C5107 * C1570 + C50940 * C1576) *
                C2290 +
            (C5108 * C3586 + C50834 * C3591 + C5107 * C1564 + C50940 * C1571) *
                C2295 +
            (C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                C2289 +
            (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                C2294) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C1676 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50760 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C1676 -
           ((C5108 * C488 + C50834 * C499 + C5107 * C487 + C50940 * C498) *
                C2291 +
            (C5108 * C469 + C50834 * C489 + C5107 * C468 + C50940 * C486) *
                C2296 +
            (C5869 + C5868) * C2290 + (C5867 + C5866) * C2295 + C5856 * C2289 +
            C5857 * C2294) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) * C7953) *
               C50760 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C1676) *
              C50680 * C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C1676 -
           (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                 C50632 +
             (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                 C10701) *
                C7953 +
            ((C6087 + C6086) * C50632 + (C6085 + C6084) * C10701) * C7952 +
            (C5856 * C50632 + C5857 * C10701) * C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C278 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50760 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C1676) *
              C279 +
          ((C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C1676 -
           (((C5108 * C11539 + C50834 * C11541 + C5107 * C9729 +
              C50940 * C9732) *
                 C50632 +
             (C5108 * C11538 + C50834 * C11540 + C5107 * C9726 +
              C50940 * C9730) *
                 C10701) *
                C7953 +
            ((C14389 + C14388) * C50632 + (C14387 + C14386) * C10701) * C7952 +
            C14390 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C20910 * C462 + C20906 * C475 + C20911 * C465 + C20907 * C480 +
             C20912 * C1848 + C20908 * C1855 + C20913 * C7354 +
             C20909 * C7359) *
                C10701 +
            (C20910 * C474 + C20906 * C492 + C20911 * C481 + C20907 * C495 +
             C20912 * C1854 + C20908 * C1860 + C20913 * C7358 +
             C20909 * C7363) *
                C50632) *
               C50796 * C50760 -
           ((C20913 * C1854 + C20909 * C1860 + C20912 * C481 + C20908 * C495 +
             C20911 * C474 + C20907 * C492 + C20910 * C132 + C20906 * C144) *
                C50632 +
            (C20913 * C1848 + C20909 * C1855 + C20912 * C465 + C20908 * C480 +
             C20911 * C462 + C20907 * C475 + C20910 * C123 + C20906 * C131) *
                C10701) *
               C50796 * C1676) *
              C50680 * C1028 +
          (((C20910 * C124 + C20906 * C133 + C20911 * C461 + C20907 * C473 +
             C20912 * C466 + C20908 * C482 + C20913 * C1847 + C20909 * C1853) *
                C10701 +
            (C20910 * C134 + C20906 * C145 + C20911 * C472 + C20907 * C491 +
             C20912 * C483 + C20908 * C496 + C20913 * C1852 + C20909 * C1859) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C7356 + C20909 * C7362 + C20912 * C1852 + C20908 * C1859 +
             C20911 * C483 + C20907 * C496 + C20910 * C472 + C20906 * C491) *
                C50632 +
            (C20913 * C7353 + C20909 * C7357 + C20912 * C1847 + C20908 * C1853 +
             C20911 * C466 + C20907 * C482 + C20910 * C461 + C20906 * C473) *
                C10701) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C122 + C20906 * C129 + C20911 * C463 + C20907 * C477 +
             C20912 * C464 + C20908 * C478 + C20913 * C1849 + C20909 * C1857) *
                C10701 +
            (C20910 * C130 + C20906 * C143 + C20911 * C476 + C20907 * C493 +
             C20912 * C479 + C20908 * C494 + C20913 * C1856 + C20909 * C1861) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C7360 + C20909 * C7364 + C20912 * C1856 + C20908 * C1861 +
             C20911 * C479 + C20907 * C494 + C20910 * C476 + C20906 * C493) *
                C50632 +
            (C20913 * C7355 + C20909 * C7361 + C20912 * C1849 + C20908 * C1857 +
             C20911 * C464 + C20907 * C478 + C20910 * C463 + C20906 * C477) *
                C10701) *
               C50796 * C50760) *
              C278 +
          (((C20910 * C889 + C20906 * C894 + C20911 * C1218 + C20907 * C1226 +
             C20912 * C4511 + C20908 * C4517 + C20913 * C14781 +
             C20909 * C14785) *
                C10701 +
            (C20910 * C895 + C20906 * C904 + C20911 * C1225 + C20907 * C1230 +
             C20912 * C4516 + C20908 * C4520 + C20913 * C14784 +
             C20909 * C14787) *
                C50632) *
               C50796 * C50760 -
           ((C20913 * C4516 + C20909 * C4520 + C20912 * C1225 + C20908 * C1230 +
             C20911 * C895 + C20907 * C904 + C20910 * C299 + C20906 * C316) *
                C50632 +
            (C20913 * C4511 + C20909 * C4517 + C20912 * C1218 + C20908 * C1226 +
             C20911 * C889 + C20907 * C894 + C20910 * C286 + C20906 * C300) *
                C10701) *
               C50796 * C1676) *
              C279 +
          (((C20910 * C287 + C20906 * C301 + C20911 * C1565 + C20907 * C1573 +
             C20912 * C3587 + C20908 * C3593 + C20913 * C10137 +
             C20909 * C10141) *
                C10701 +
            (C20910 * C302 + C20906 * C317 + C20911 * C1572 + C20907 * C1577 +
             C20912 * C3592 + C20908 * C3596 + C20913 * C10140 +
             C20909 * C10143) *
                C50632) *
               C50796 * C1676 -
           ((C20913 * C14782 + C20909 * C14786 + C20912 * C10140 +
             C20908 * C10143 + C20911 * C3592 + C20907 * C3596 +
             C20910 * C1572 + C20906 * C1577) *
                C50632 +
            (C20913 * C14780 + C20909 * C14783 + C20912 * C10137 +
             C20908 * C10141 + C20911 * C3587 + C20907 * C3593 +
             C20910 * C1565 + C20906 * C1573) *
                C10701) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50696 * C50928 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
            (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
            (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
               C50796 * C50696 * C50732 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50696 * C50928) *
              C50971 +
          ((C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
            (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
            (C31688 + C31689) * C22716) *
               C50796 * C50696 * C50928 -
           ((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C22716 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C22721 +
            (C32241 + C32240) * C50953 + (C32239 + C32238) * C22720 +
            C32228 * C50969 + C32229 * C22719) *
               C50796 * C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C22719 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50969 +
             (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
             C31690 * C22721 + C31691 * C22716) *
                C50796 * C50929 -
            (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
             (C32072 + C32073) * C22720 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50969 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C22719) *
                C50796 * C50760) *
               C50928 +
           (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                 C22719 +
             (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                 C50969 +
             (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
             (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
                C50796 * C50760 -
            (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
             (C31878 + C31879) * C22720 +
             (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                 C50969 +
             (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                 C22719) *
                C50796 * C50929) *
               C50732) *
              C281 +
          ((((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
             (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
             (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
                C50796 * C50760 -
            (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
             (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
             (C31675 + C31674) * C22719) *
                C50796 * C50929) *
               C50928 +
           (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
             (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
             (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
                C50796 * C50929 -
            ((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C22716 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C22721 +
             (C32619 + C32618) * C50953 + (C32617 + C32616) * C22720 +
             (C32615 + C32614) * C50969 + (C32613 + C32612) * C22719) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50696 * C278 -
           ((C31872 + C31873) * C22716 + (C31874 + C31875) * C22721 +
            (C31876 + C31877) * C50953 + (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50696 * C279 +
           ((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
                C22719 +
            (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
                C50969 +
            (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
            (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
               C50796 * C50696 * C280) *
              C281 +
          (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
            (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
            (C31639 * C283 + C31637 * C294 + C31640 * C892 + C50834 * C900) *
                C22721 +
            (C31639 * C293 + C31637 * C313 + C31640 * C901 + C50834 * C907) *
                C22716) *
               C50796 * C50696 * C279 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50696 * C278 -
           ((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                C22716 +
            (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                C22721 +
            (C31887 + C31886) * C50953 + (C31885 + C31884) * C22720 +
            (C31883 + C31882) * C50969 + (C31881 + C31880) * C22719) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
               C22719 +
           (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
               C50969 +
           (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
           C31690 * C22721 + C31691 * C22716) *
              C50796 * C50696 * C50680 * C113 -
          (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
           (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
           (C31675 + C31674) * C22719) *
              C50796 * C50696 * C50680 * C114 +
          (C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
           (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
           (C31688 + C31689) * C22716) *
              C50796 * C50696 * C50680 * C115 -
          ((C31640 * C750 + C50834 * C752 + C31639 * C140 + C31637 * C148) *
               C22716 +
           (C31640 * C749 + C50834 * C751 + C31639 * C127 + C31637 * C139) *
               C22721 +
           (C31689 + C31688) * C50953 + (C31687 + C31686) * C22720 +
           C31692 * C50969 + C31693 * C22719) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C457 -
           ((C32066 + C32067) * C22716 + (C32068 + C32069) * C22721 +
            (C32070 + C32071) * C50953 + (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C458 +
           ((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C22719 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C50969 +
            (C32074 + C32075) * C22720 + (C32076 + C32077) * C50953 +
            (C32078 + C32079) * C22721 + (C32080 + C32081) * C22716) *
               C50796 * C459) *
              C50680 * C281 +
          (((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
            (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
            (C31639 * C460 + C31637 * C471 + C31640 * C467 + C50834 * C484) *
                C22721 +
            (C31639 * C470 + C31637 * C490 + C31640 * C485 + C50834 * C497) *
                C22716) *
               C50796 * C458 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C457 -
           ((C31640 * C1850 + C50834 * C1858 + C31639 * C485 + C31637 * C497) *
                C22716 +
            (C31640 * C1846 + C50834 * C1851 + C31639 * C467 + C31637 * C484) *
                C22721 +
            (C32081 + C32080) * C50953 + (C32079 + C32078) * C22720 +
            (C32077 + C32076) * C50969 + (C32075 + C32074) * C22719) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50929 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
            (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
            (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
               C50796 * C50760 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50929) *
              C50680 * C50971 +
          ((C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
            (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
            (C31688 + C31689) * C22716) *
               C50796 * C50929 -
           ((C31640 * C488 + C50834 * C499 + C31639 * C487 + C31637 * C498) *
                C22716 +
            (C31640 * C469 + C50834 * C489 + C31639 * C468 + C31637 * C486) *
                C22721 +
            (C32401 + C32400) * C50953 + (C32399 + C32398) * C22720 +
            C32388 * C50969 + C32389 * C22719) *
               C50796 * C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
               C22719 +
           (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
               C50969 +
           (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
           C31690 * C22721 + C31691 * C22716) *
              C50796 * C50696 * C50680 * C113 -
          (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
           (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
           (C31675 + C31674) * C22719) *
              C50796 * C50696 * C50680 * C114 +
          (C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
           (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
           (C31688 + C31689) * C22716) *
              C50796 * C50696 * C50680 * C115 -
          ((C31640 * C750 + C50834 * C752 + C31639 * C140 + C31637 * C148) *
               C22716 +
           (C31640 * C749 + C50834 * C751 + C31639 * C127 + C31637 * C139) *
               C22721 +
           (C31689 + C31688) * C50953 + (C31687 + C31686) * C22720 +
           C31692 * C50969 + C31693 * C22719) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50696 * C278 -
           ((C31872 + C31873) * C22716 + (C31874 + C31875) * C22721 +
            (C31876 + C31877) * C50953 + (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50696 * C279 +
           ((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
                C22719 +
            (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
                C50969 +
            (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
            (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
               C50796 * C50696 * C280) *
              C281 +
          (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
            (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
            (C31639 * C283 + C31637 * C294 + C31640 * C892 + C50834 * C900) *
                C22721 +
            (C31639 * C293 + C31637 * C313 + C31640 * C901 + C50834 * C907) *
                C22716) *
               C50796 * C50696 * C279 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50696 * C278 -
           ((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                C22716 +
            (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                C22721 +
            (C31887 + C31886) * C50953 + (C31885 + C31884) * C22720 +
            (C31883 + C31882) * C50969 + (C31881 + C31880) * C22719) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50696 * C50972 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50696 * C50973 +
           ((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
                C22719 +
            (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
                C50969 +
            (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
            (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
               C50796 * C50696 * C1331) *
              C50920 +
          (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
            (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
            (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
               C50796 * C50696 * C50973 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50696 * C50972 -
           ((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                C22716 +
            (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                C22721 +
            (C31887 + C31886) * C50953 + (C31885 + C31884) * C22720 +
            (C31883 + C31882) * C50969 + (C31881 + C31880) * C22719) *
               C50796 * C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50929 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50760) *
              C50972 +
          (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                C22719 +
            (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                C50969 +
            (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
            (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
               C50796 * C50760 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50929) *
              C50973 +
          (((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
                C22719 +
            (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
                C50969 +
            (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
            (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
               C50796 * C50929 -
           ((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
             C31637 * C1575) *
                C22716 +
            (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
             C31637 * C1569) *
                C22721 +
            (C31640 * C3590 + C50834 * C3595 + C31639 * C1570 +
             C31637 * C1576) *
                C50953 +
            (C31640 * C3586 + C50834 * C3591 + C31639 * C1564 +
             C31637 * C1571) *
                C22720 +
            (C31640 * C3592 + C50834 * C3596 + C31639 * C1572 +
             C31637 * C1577) *
                C50969 +
            (C31640 * C3587 + C50834 * C3593 + C31639 * C1565 +
             C31637 * C1573) *
                C22719) *
               C50796 * C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
               C22719 +
           (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
               C50969 +
           (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
           C31690 * C22721 + C31691 * C22716) *
              C50796 * C50696 * C1096 -
          (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
           (C31878 + C31879) * C22720 +
           (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
               C50969 +
           (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
               C22719) *
              C50796 * C50696 * C1097 +
          ((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
               C22719 +
           (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
               C50969 +
           (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
           (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
              C50796 * C50696 * C1098 -
          ((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 + C31637 * C1114) *
               C22716 +
           (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 + C31637 * C1108) *
               C22721 +
           (C31640 * C4100 + C50834 * C4105 + C31639 * C1109 + C31637 * C1115) *
               C50953 +
           (C31640 * C4096 + C50834 * C4101 + C31639 * C1103 + C31637 * C1110) *
               C22720 +
           (C31640 * C4102 + C50834 * C4106 + C31639 * C1111 + C31637 * C1116) *
               C50969 +
           (C31640 * C4097 + C50834 * C4103 + C31639 * C1104 + C31637 * C1112) *
               C22719) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50696 * C1025 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
            (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
            (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
               C50796 * C50696 * C50732 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
            (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
            (C31688 + C31689) * C22716) *
               C50796 * C50696 * C1025 -
           ((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C22716 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C22721 +
            (C32241 + C32240) * C50953 + (C32239 + C32238) * C22720 +
            C32228 * C50969 + C32229 * C22719) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C457 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C458 +
           ((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C22719 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C50969 +
            (C32074 + C32075) * C22720 + (C32076 + C32077) * C50953 +
            (C32078 + C32079) * C22721 + (C32080 + C32081) * C22716) *
               C50796 * C459) *
              C1025 +
          (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                C22719 +
            (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                C50969 +
            (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
            (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
               C50796 * C458 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C457 -
           ((C31640 * C4512 + C50834 * C4518 + C31639 * C1221 +
             C31637 * C1228) *
                C22716 +
            (C31640 * C4509 + C50834 * C4513 + C31639 * C1216 +
             C31637 * C1222) *
                C22721 +
            (C31640 * C4514 + C50834 * C4519 + C31639 * C1223 +
             C31637 * C1229) *
                C50953 +
            (C31640 * C4510 + C50834 * C4515 + C31639 * C1217 +
             C31637 * C1224) *
                C22720 +
            (C31640 * C4516 + C50834 * C4520 + C31639 * C1225 +
             C31637 * C1230) *
                C50969 +
            (C31640 * C4511 + C50834 * C4517 + C31639 * C1218 +
             C31637 * C1226) *
                C22719) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C22719 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50969 +
             (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
             C31690 * C22721 + C31691 * C22716) *
                C50796 * C50929 -
            (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
             (C32072 + C32073) * C22720 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50969 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C22719) *
                C50796 * C50760) *
               C1025 +
           (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                 C22719 +
             (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                 C50969 +
             (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
             (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
                C50796 * C50760 -
            (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
             (C31878 + C31879) * C22720 +
             (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                 C50969 +
             (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                 C22719) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
             (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
             (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
                C50796 * C50760 -
            (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
             (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
             (C31675 + C31674) * C22719) *
                C50796 * C50929) *
               C1025 +
           (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
             (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
             (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
                C50796 * C50929 -
            ((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C22716 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C22721 +
             (C32619 + C32618) * C50953 + (C32617 + C32616) * C22720 +
             (C32615 + C32614) * C50969 + (C32613 + C32612) * C22719) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50696 * C1025 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
            (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
            (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
               C50796 * C50696 * C50732 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
            (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
            (C31688 + C31689) * C22716) *
               C50796 * C50696 * C1025 -
           ((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C22716 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C22721 +
            (C32241 + C32240) * C50953 + (C32239 + C32238) * C22720 +
            C32228 * C50969 + C32229 * C22719) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
               C22719 +
           (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
               C50969 +
           (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
           C31690 * C22721 + C31691 * C22716) *
              C50796 * C50696 * C1096 -
          (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
           (C31878 + C31879) * C22720 +
           (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
               C50969 +
           (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
               C22719) *
              C50796 * C50696 * C1097 +
          ((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
               C22719 +
           (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
               C50969 +
           (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
           (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
              C50796 * C50696 * C1098 -
          ((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 + C31637 * C1114) *
               C22716 +
           (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 + C31637 * C1108) *
               C22721 +
           (C31640 * C4100 + C50834 * C4105 + C31639 * C1109 + C31637 * C1115) *
               C50953 +
           (C31640 * C4096 + C50834 * C4101 + C31639 * C1103 + C31637 * C1110) *
               C22720 +
           (C31640 * C4102 + C50834 * C4106 + C31639 * C1111 + C31637 * C1116) *
               C50969 +
           (C31640 * C4097 + C50834 * C4103 + C31639 * C1104 + C31637 * C1112) *
               C22719) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C22719 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C50969 +
             (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
             C31690 * C22721 + C31691 * C22716) *
                C50796 * C1676 -
            (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
             (C32072 + C32073) * C22720 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C50969 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C22719) *
                C50796 * C50760) *
               C50928 +
           (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                 C22719 +
             (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                 C50969 +
             (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
             (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
                C50796 * C50760 -
            (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
             (C31878 + C31879) * C22720 +
             (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                 C50969 +
             (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                 C22719) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          ((((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
             (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
             (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
                C50796 * C50760 -
            (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
             (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
             (C31675 + C31674) * C22719) *
                C50796 * C1676) *
               C50928 +
           (((C31879 + C31878) * C22719 + (C31877 + C31876) * C50969 +
             (C31875 + C31874) * C22720 + (C31873 + C31872) * C50953 +
             (C32238 + C32239) * C22721 + (C32240 + C32241) * C22716) *
                C50796 * C1676 -
            ((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C22716 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C22721 +
             (C32619 + C32618) * C50953 + (C32617 + C32616) * C22720 +
             (C32615 + C32614) * C50969 + (C32613 + C32612) * C22719) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50974 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50975 +
           ((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C22719 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C50969 +
            (C32074 + C32075) * C22720 + (C32076 + C32077) * C50953 +
            (C32078 + C32079) * C22721 + (C32080 + C32081) * C22716) *
               C50796 * C2092) *
              C50928 +
          (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                C22719 +
            (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                C50969 +
            (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
            (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
               C50796 * C50975 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C50974 -
           ((C31640 * C4512 + C50834 * C4518 + C31639 * C1221 +
             C31637 * C1228) *
                C22716 +
            (C31640 * C4509 + C50834 * C4513 + C31639 * C1216 +
             C31637 * C1222) *
                C22721 +
            (C31640 * C4514 + C50834 * C4519 + C31639 * C1223 +
             C31637 * C1229) *
                C50953 +
            (C31640 * C4510 + C50834 * C4515 + C31639 * C1217 +
             C31637 * C1224) *
                C22720 +
            (C31640 * C4516 + C50834 * C4520 + C31639 * C1225 +
             C31637 * C1230) *
                C50969 +
            (C31640 * C4511 + C50834 * C4517 + C31639 * C1218 +
             C31637 * C1226) *
                C22719) *
               C50796 * C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C1676 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50760) *
              C278 +
          (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                C22719 +
            (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                C50969 +
            (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
            (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
               C50796 * C50760 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C1676) *
              C279 +
          (((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
                C22719 +
            (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
                C50969 +
            (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
            (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
               C50796 * C1676 -
           ((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
             C31637 * C1575) *
                C22716 +
            (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
             C31637 * C1569) *
                C22721 +
            (C31640 * C3590 + C50834 * C3595 + C31639 * C1570 +
             C31637 * C1576) *
                C50953 +
            (C31640 * C3586 + C50834 * C3591 + C31639 * C1564 +
             C31637 * C1571) *
                C22720 +
            (C31640 * C3592 + C50834 * C3596 + C31639 * C1572 +
             C31637 * C1577) *
                C50969 +
            (C31640 * C3587 + C50834 * C3593 + C31639 * C1565 +
             C31637 * C1573) *
                C22719) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C1676 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
            (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
            (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
               C50796 * C50760 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
            (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
            (C31688 + C31689) * C22716) *
               C50796 * C1676 -
           ((C31640 * C488 + C50834 * C499 + C31639 * C487 + C31637 * C498) *
                C22716 +
            (C31640 * C469 + C50834 * C489 + C31639 * C468 + C31637 * C486) *
                C22721 +
            (C32401 + C32400) * C50953 + (C32399 + C32398) * C22720 +
            C32388 * C50969 + C32389 * C22719) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
               C22719 +
           (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
               C50969 +
           (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
           C31690 * C22721 + C31691 * C22716) *
              C50796 * C1842 -
          (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
           (C32072 + C32073) * C22720 +
           (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
               C50969 +
           (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
               C22719) *
              C50796 * C1843 +
          ((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
               C22719 +
           (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
               C50969 +
           (C32074 + C32075) * C22720 + (C32076 + C32077) * C50953 +
           (C32078 + C32079) * C22721 + (C32080 + C32081) * C22716) *
              C50796 * C1844 -
          ((C31640 * C7356 + C50834 * C7362 + C31639 * C1852 + C31637 * C1859) *
               C22716 +
           (C31640 * C7353 + C50834 * C7357 + C31639 * C1847 + C31637 * C1853) *
               C22721 +
           (C31640 * C7358 + C50834 * C7363 + C31639 * C1854 + C31637 * C1860) *
               C50953 +
           (C31640 * C7354 + C50834 * C7359 + C31639 * C1848 + C31637 * C1855) *
               C22720 +
           (C31640 * C7360 + C50834 * C7364 + C31639 * C1856 + C31637 * C1861) *
               C50969 +
           (C31640 * C7355 + C50834 * C7361 + C31639 * C1849 + C31637 * C1857) *
               C22719) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C50974 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50975 +
           ((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C22719 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C50969 +
            (C32074 + C32075) * C22720 + (C32076 + C32077) * C50953 +
            (C32078 + C32079) * C22721 + (C32080 + C32081) * C22716) *
               C50796 * C2092) *
              C50680 * C50920 +
          (((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
            (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
            (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
               C50796 * C50975 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C50974 -
           ((C31640 * C1850 + C50834 * C1858 + C31639 * C485 + C31637 * C497) *
                C22716 +
            (C31640 * C1846 + C50834 * C1851 + C31639 * C467 + C31637 * C484) *
                C22721 +
            (C32081 + C32080) * C50953 + (C32079 + C32078) * C22720 +
            (C32077 + C32076) * C50969 + (C32075 + C32074) * C22719) *
               C50796 * C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C1676 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C32073 + C32072) * C22719 + (C32071 + C32070) * C50969 +
            (C32069 + C32068) * C22720 + (C32067 + C32066) * C50953 +
            (C32398 + C32399) * C22721 + (C32400 + C32401) * C22716) *
               C50796 * C50760 -
           (C31692 * C22716 + C31693 * C22721 + (C31681 + C31680) * C50953 +
            (C31679 + C31678) * C22720 + (C31677 + C31676) * C50969 +
            (C31675 + C31674) * C22719) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C31690 * C22719 + C31691 * C50969 + (C31685 + C31684) * C22720 +
            (C31683 + C31682) * C50953 + (C31686 + C31687) * C22721 +
            (C31688 + C31689) * C22716) *
               C50796 * C1676 -
           ((C31640 * C488 + C50834 * C499 + C31639 * C487 + C31637 * C498) *
                C22716 +
            (C31640 * C469 + C50834 * C489 + C31639 * C468 + C31637 * C486) *
                C22721 +
            (C32401 + C32400) * C50953 + (C32399 + C32398) * C22720 +
            C32388 * C50969 + C32389 * C22719) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C22719 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C50969 +
            (C31674 + C31675) * C22720 + (C31676 + C31677) * C50953 +
            C31690 * C22721 + C31691 * C22716) *
               C50796 * C1676 -
           (C32388 * C22716 + C32389 * C22721 + (C32070 + C32071) * C50953 +
            (C32072 + C32073) * C22720 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C50969 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C22719) *
               C50796 * C50760) *
              C278 +
          (((C31639 * C889 + C31637 * C894 + C31640 * C1218 + C50834 * C1226) *
                C22719 +
            (C31639 * C895 + C31637 * C904 + C31640 * C1225 + C50834 * C1230) *
                C50969 +
            (C32612 + C32613) * C22720 + (C32614 + C32615) * C50953 +
            (C32616 + C32617) * C22721 + (C32618 + C32619) * C22716) *
               C50796 * C50760 -
           (C32228 * C22716 + C32229 * C22721 + (C31876 + C31877) * C50953 +
            (C31878 + C31879) * C22720 +
            (C31640 * C895 + C50834 * C904 + C31639 * C299 + C31637 * C316) *
                C50969 +
            (C31640 * C889 + C50834 * C894 + C31639 * C286 + C31637 * C300) *
                C22719) *
               C50796 * C1676) *
              C279 +
          (((C31639 * C287 + C31637 * C301 + C31640 * C1565 + C50834 * C1573) *
                C22719 +
            (C31639 * C302 + C31637 * C317 + C31640 * C1572 + C50834 * C1577) *
                C50969 +
            (C31880 + C31881) * C22720 + (C31882 + C31883) * C50953 +
            (C31884 + C31885) * C22721 + (C31886 + C31887) * C22716) *
               C50796 * C1676 -
           ((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
             C31637 * C1575) *
                C22716 +
            (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
             C31637 * C1569) *
                C22721 +
            (C31640 * C3590 + C50834 * C3595 + C31639 * C1570 +
             C31637 * C1576) *
                C50953 +
            (C31640 * C3586 + C50834 * C3591 + C31639 * C1564 +
             C31637 * C1571) *
                C22720 +
            (C31640 * C3592 + C50834 * C3596 + C31639 * C1572 +
             C31637 * C1577) *
                C50969 +
            (C31640 * C3587 + C50834 * C3593 + C31639 * C1565 +
             C31637 * C1573) *
                C22719) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50696 * C50928 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50696 * C50732) *
              C50970 +
          (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
             C35141 * C50637) *
                C50939 +
            (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          (((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
             (C31683 + C31682) * C50637) *
                C50939 +
            (C35140 * C25415 + C35141 * C25410 + (C32238 + C32239) * C25416 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50696 * C50928 -
           (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                 C50637 +
             (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                 C25416 +
             (C31887 + C31886) * C25410 + (C31885 + C31884) * C25415) *
                C50810 +
            ((C32241 + C32240) * C50637 + (C32239 + C32238) * C25416 +
             C32228 * C25410 + C32229 * C25415) *
                C50939) *
               C50696 * C50732) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C25415 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C25410 +
              (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                 C50939 +
             ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
              C34704 * C25416 + C34705 * C50637) *
                 C50810) *
                C50929 -
            ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
              (C35616 + C35617) * C25415) *
                 C50810 +
             ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
              (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C25410 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C25415) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
              C35604 * C25416 + C35605 * C50637) *
                 C50939 +
             ((C31639 * C1565 + C31637 * C1573 + C31640 * C3587 +
               C50834 * C3593) *
                  C25415 +
              (C31639 * C1572 + C31637 * C1577 + C31640 * C3592 +
               C50834 * C3596) *
                  C25410 +
              (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                 C50810) *
                C50760 -
            ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
              (C34734 + C34735) * C25415) *
                 C50810 +
             (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
              (C34729 + C34728) * C25415) *
                 C50939) *
                C50929) *
               C50732) *
              C281 +
          (((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
              (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                 C50939 +
             (C35604 * C25415 + C35605 * C25410 + (C32616 + C32617) * C25416 +
              (C32618 + C32619) * C50637) *
                 C50810) *
                C50760 -
            ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
              C34717 * C25415) *
                 C50810 +
             ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
              (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                 C50939) *
                C50929) *
               C50928 +
           (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
              C35141 * C50637) *
                 C50939 +
             (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
              (C31886 + C31887) * C50637) *
                 C50810) *
                C50929 -
            (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
               C31637 * C1575) *
                  C50637 +
              (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
               C31637 * C1569) *
                  C25416 +
              (C35621 + C35620) * C25410 + (C35619 + C35618) * C25415) *
                 C50810 +
             ((C32619 + C32618) * C50637 + (C32617 + C32616) * C25416 +
              C35594 * C25410 + C35595 * C25415) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50696 * C278 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50696 * C279 +
           (((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
             C34718 * C25416 + C34719 * C50637) *
                C50939 +
            ((C31639 * C1104 + C31637 * C1112 + C31640 * C4097 +
              C50834 * C4103) *
                 C25415 +
             (C31639 * C1111 + C31637 * C1116 + C31640 * C4102 +
              C50834 * C4106) *
                 C25410 +
             (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C34704 * C25415 + C34705 * C25410 + (C31875 + C31874) * C25416 +
             (C31873 + C31872) * C50637) *
                C50939 +
            (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C279 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50696 * C278 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50637 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C25416 +
             (C34739 + C34738) * C25410 + (C34737 + C34736) * C25415) *
                C50810 +
            ((C31887 + C31886) * C50637 + (C31885 + C31884) * C25416 +
             C34706 * C25410 + C34707 * C25415) *
                C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C25415 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C25410 +
            (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
               C50939 +
           ((C31639 * C286 + C31637 * C300 + C31640 * C889 + C50834 * C894) *
                C25415 +
            (C31639 * C299 + C31637 * C316 + C31640 * C895 + C50834 * C904) *
                C25410 +
            (C31879 + C31878) * C25416 + (C31877 + C31876) * C50637) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C32228 * C50637 + C32229 * C25416 + (C31876 + C31877) * C25410 +
            (C31878 + C31879) * C25415) *
               C50810 +
           ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
            (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
               C50939) *
              C50696 * C50680 * C114 +
          ((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
            (C31683 + C31682) * C50637) *
               C50939 +
           ((C31875 + C31874) * C25415 + (C31873 + C31872) * C25410 +
            (C32238 + C32239) * C25416 + (C32240 + C32241) * C50637) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C50637 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C25416 +
            (C32241 + C32240) * C25410 + (C32239 + C32238) * C25415) *
               C50810 +
           ((C31689 + C31688) * C50637 + (C31687 + C31686) * C25416 +
            C31692 * C25410 + C31693 * C25415) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C457 -
           (((C32615 + C32614) * C50637 + (C32613 + C32612) * C25416 +
             (C31640 * C1225 + C50834 * C1230 + C31639 * C895 + C31637 * C904) *
                 C25410 +
             (C31640 * C1218 + C50834 * C1226 + C31639 * C889 + C31637 * C894) *
                 C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C458 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C25415 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C25410 +
             (C32074 + C32075) * C25416 + (C32076 + C32077) * C50637) *
                C50939 +
            ((C31639 * C1218 + C31637 * C1226 + C31640 * C4511 +
              C50834 * C4517) *
                 C25415 +
             (C31639 * C1225 + C31637 * C1230 + C31640 * C4516 +
              C50834 * C4520) *
                 C25410 +
             (C34942 + C34943) * C25416 + (C34944 + C34945) * C50637) *
                C50810) *
               C459) *
              C50680 * C281 +
          ((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
             (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                C50939 +
            ((C32612 + C32613) * C25415 + (C32614 + C32615) * C25410 +
             (C32616 + C32617) * C25416 + (C32618 + C32619) * C50637) *
                C50810) *
               C458 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C457 -
           (((C31640 * C4512 + C50834 * C4518 + C31639 * C1221 +
              C31637 * C1228) *
                 C50637 +
             (C31640 * C4509 + C50834 * C4513 + C31639 * C1216 +
              C31637 * C1222) *
                 C25416 +
             (C34945 + C34944) * C25410 + (C34943 + C34942) * C25415) *
                C50810 +
            ((C32081 + C32080) * C50637 + (C32079 + C32078) * C25416 +
             (C32077 + C32076) * C25410 + (C32075 + C32074) * C25415) *
                C50939) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50929 -
           (((C32615 + C32614) * C50637 + (C32613 + C32612) * C25416 +
             (C31640 * C1225 + C50834 * C1230 + C31639 * C895 + C31637 * C904) *
                 C25410 +
             (C31640 * C1218 + C50834 * C1226 + C31639 * C889 + C31637 * C894) *
                 C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          ((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
             (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                C50939 +
            ((C32612 + C32613) * C25415 + (C32614 + C32615) * C25410 +
             (C32616 + C32617) * C25416 + (C32618 + C32619) * C50637) *
                C50810) *
               C50760 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          (((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
             (C31683 + C31682) * C50637) *
                C50939 +
            (C35140 * C25415 + C35141 * C25410 + (C32238 + C32239) * C25416 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50929 -
           (((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C50637 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C25416 +
             (C32619 + C32618) * C25410 + (C32617 + C32616) * C25415) *
                C50810 +
            ((C32401 + C32400) * C50637 + (C32399 + C32398) * C25416 +
             C32388 * C25410 + C32389 * C25415) *
                C50939) *
               C50760) *
              C50680 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C25415 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C25410 +
            (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
               C50939 +
           ((C31639 * C286 + C31637 * C300 + C31640 * C889 + C50834 * C894) *
                C25415 +
            (C31639 * C299 + C31637 * C316 + C31640 * C895 + C50834 * C904) *
                C25410 +
            (C31879 + C31878) * C25416 + (C31877 + C31876) * C50637) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C32228 * C50637 + C32229 * C25416 + (C31876 + C31877) * C25410 +
            (C31878 + C31879) * C25415) *
               C50810 +
           ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
            (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
               C50939) *
              C50696 * C50680 * C114 +
          ((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
            (C31683 + C31682) * C50637) *
               C50939 +
           ((C31875 + C31874) * C25415 + (C31873 + C31872) * C25410 +
            (C32238 + C32239) * C25416 + (C32240 + C32241) * C50637) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C31640 * C902 + C50834 * C908 + C31639 * C310 + C31637 * C321) *
                C50637 +
            (C31640 * C893 + C50834 * C903 + C31639 * C291 + C31637 * C309) *
                C25416 +
            (C32241 + C32240) * C25410 + (C32239 + C32238) * C25415) *
               C50810 +
           ((C31689 + C31688) * C50637 + (C31687 + C31686) * C25416 +
            C31692 * C25410 + C31693 * C25415) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50696 * C278 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50696 * C279 +
           (((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
             C34718 * C25416 + C34719 * C50637) *
                C50939 +
            ((C31639 * C1104 + C31637 * C1112 + C31640 * C4097 +
              C50834 * C4103) *
                 C25415 +
             (C31639 * C1111 + C31637 * C1116 + C31640 * C4102 +
              C50834 * C4106) *
                 C25410 +
             (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C34704 * C25415 + C34705 * C25410 + (C31875 + C31874) * C25416 +
             (C31873 + C31872) * C50637) *
                C50939 +
            (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C279 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50696 * C278 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50637 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C25416 +
             (C34739 + C34738) * C25410 + (C34737 + C34736) * C25415) *
                C50810 +
            ((C31887 + C31886) * C50637 + (C31885 + C31884) * C25416 +
             C34706 * C25410 + C34707 * C25415) *
                C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50696 * C50972 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50696 * C50973 +
           (((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
             C34718 * C25416 + C34719 * C50637) *
                C50939 +
            ((C35954 + C35955) * C25415 + (C35956 + C35957) * C25410 +
             (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
                C50810) *
               C50696 * C1331) *
              C50920 +
          (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
             C35141 * C50637) *
                C50939 +
            (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50973 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50696 * C50972 -
           (((C31640 * C4098 + C50834 * C4104 + C31639 * C1107 +
              C31637 * C1114) *
                 C50637 +
             (C31640 * C4095 + C50834 * C4099 + C31639 * C1102 +
              C31637 * C1108) *
                 C25416 +
             (C34739 + C34738) * C25410 + (C34737 + C34736) * C25415) *
                C50810 +
            ((C31887 + C31886) * C50637 + (C31885 + C31884) * C25416 +
             C34706 * C25410 + C34707 * C25415) *
                C50939) *
               C50696 * C1331) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50929 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50760) *
              C50972 +
          ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
             C35604 * C25416 + C35605 * C50637) *
                C50939 +
            ((C36818 + C36819) * C25415 + (C36820 + C36821) * C25410 +
             (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                C50810) *
               C50760 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50929) *
              C50973 +
          ((((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
             C34718 * C25416 + C34719 * C50637) *
                C50939 +
            ((C35954 + C35955) * C25415 + (C35956 + C35957) * C25410 +
             (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
                C50810) *
               C50929 -
           (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
              C31637 * C4105) *
                 C50637 +
             (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
              C31637 * C4101) *
                 C25416 +
             (C31640 * C9221 + C50834 * C9224 + C31639 * C4102 +
              C31637 * C4106) *
                 C25410 +
             (C31640 * C9218 + C50834 * C9222 + C31639 * C4097 +
              C31637 * C4103) *
                 C25415) *
                C50810 +
            ((C35621 + C35620) * C50637 + (C35619 + C35618) * C25416 +
             (C36821 + C36820) * C25410 + (C36819 + C36818) * C25415) *
                C50939) *
               C50760) *
              C1331) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C25415 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C25410 +
            (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
               C50939 +
           ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
            C34704 * C25416 + C34705 * C50637) *
               C50810) *
              C50696 * C1096 -
          ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
            (C34734 + C34735) * C25415) *
               C50810 +
           (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
            (C34729 + C34728) * C25415) *
               C50939) *
              C50696 * C1097 +
          (((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
            C34718 * C25416 + C34719 * C50637) *
               C50939 +
           ((C35954 + C35955) * C25415 + (C35956 + C35957) * C25410 +
            (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
               C50810) *
              C50696 * C1098 -
          (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
             C31637 * C3425) *
                C50637 +
            (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
             C31637 * C3421) *
                C25416 +
            (C31640 * C9729 + C50834 * C9732 + C31639 * C3422 +
             C31637 * C3426) *
                C25410 +
            (C31640 * C9726 + C50834 * C9730 + C31639 * C3417 +
             C31637 * C3423) *
                C25415) *
               C50810 +
           ((C34739 + C34738) * C50637 + (C34737 + C34736) * C25416 +
            (C35957 + C35956) * C25410 + (C35955 + C35954) * C25415) *
               C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50696 * C1025 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50696 * C50732) *
              C1027 +
          (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
             C35141 * C50637) *
                C50939 +
            (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          (((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
             (C31683 + C31682) * C50637) *
                C50939 +
            (C35140 * C25415 + C35141 * C25410 + (C32238 + C32239) * C25416 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50696 * C1025 -
           (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                 C50637 +
             (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                 C25416 +
             (C31887 + C31886) * C25410 + (C31885 + C31884) * C25415) *
                C50810 +
            ((C32241 + C32240) * C50637 + (C32239 + C32238) * C25416 +
             C32228 * C25410 + C32229 * C25415) *
                C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C457 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C458 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C25415 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C25410 +
             (C32074 + C32075) * C25416 + (C32076 + C32077) * C50637) *
                C50939 +
            ((C36160 + C36161) * C25415 + (C36162 + C36163) * C25410 +
             (C34942 + C34943) * C25416 + (C34944 + C34945) * C50637) *
                C50810) *
               C459) *
              C1025 +
          ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
             C35604 * C25416 + C35605 * C50637) *
                C50939 +
            ((C31639 * C1565 + C31637 * C1573 + C31640 * C3587 +
              C50834 * C3593) *
                 C25415 +
             (C31639 * C1572 + C31637 * C1577 + C31640 * C3592 +
              C50834 * C3596) *
                 C25410 +
             (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                C50810) *
               C458 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C457 -
           (((C31640 * C10138 + C50834 * C10142 + C31639 * C3590 +
              C31637 * C3595) *
                 C50637 +
             (C31640 * C10136 + C50834 * C10139 + C31639 * C3586 +
              C31637 * C3591) *
                 C25416 +
             (C31640 * C10140 + C50834 * C10143 + C31639 * C3592 +
              C31637 * C3596) *
                 C25410 +
             (C31640 * C10137 + C50834 * C10141 + C31639 * C3587 +
              C31637 * C3593) *
                 C25415) *
                C50810 +
            ((C34945 + C34944) * C50637 + (C34943 + C34942) * C25416 +
             (C36163 + C36162) * C25410 + (C36161 + C36160) * C25415) *
                C50939) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C25415 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C25410 +
              (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                 C50939 +
             ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
              C34704 * C25416 + C34705 * C50637) *
                 C50810) *
                C50929 -
            ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
              (C35616 + C35617) * C25415) *
                 C50810 +
             ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
              (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C25410 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C25415) *
                 C50939) *
                C50760) *
               C1025 +
           ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
              C35604 * C25416 + C35605 * C50637) *
                 C50939 +
             ((C31639 * C1565 + C31637 * C1573 + C31640 * C3587 +
               C50834 * C3593) *
                  C25415 +
              (C31639 * C1572 + C31637 * C1577 + C31640 * C3592 +
               C50834 * C3596) *
                  C25410 +
              (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                 C50810) *
                C50760 -
            ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
              (C34734 + C34735) * C25415) *
                 C50810 +
             (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
              (C34729 + C34728) * C25415) *
                 C50939) *
                C50929) *
               C50732) *
              C50920 +
          (((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
              (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                 C50939 +
             (C35604 * C25415 + C35605 * C25410 + (C32616 + C32617) * C25416 +
              (C32618 + C32619) * C50637) *
                 C50810) *
                C50760 -
            ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
              C34717 * C25415) *
                 C50810 +
             ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
              (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                 C50939) *
                C50929) *
               C1025 +
           (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
              C35141 * C50637) *
                 C50939 +
             (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
              (C31886 + C31887) * C50637) *
                 C50810) *
                C50929 -
            (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
               C31637 * C1575) *
                  C50637 +
              (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
               C31637 * C1569) *
                  C25416 +
              (C35621 + C35620) * C25410 + (C35619 + C35618) * C25415) *
                 C50810 +
             ((C32619 + C32618) * C50637 + (C32617 + C32616) * C25416 +
              C35594 * C25410 + C35595 * C25415) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50696 * C1025 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50696 * C50732) *
              C1027 +
          (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
             C35141 * C50637) *
                C50939 +
            (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
             (C31886 + C31887) * C50637) *
                C50810) *
               C50696 * C50732 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          (((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
             (C31683 + C31682) * C50637) *
                C50939 +
            (C35140 * C25415 + C35141 * C25410 + (C32238 + C32239) * C25416 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C50696 * C1025 -
           (((C31640 * C1566 + C50834 * C1574 + C31639 * C308 + C31637 * C320) *
                 C50637 +
             (C31640 * C1562 + C50834 * C1567 + C31639 * C290 + C31637 * C307) *
                 C25416 +
             (C31887 + C31886) * C25410 + (C31885 + C31884) * C25415) *
                C50810 +
            ((C32241 + C32240) * C50637 + (C32239 + C32238) * C25416 +
             C32228 * C25410 + C32229 * C25415) *
                C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C25415 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C25410 +
            (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
               C50939 +
           ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
            C34704 * C25416 + C34705 * C50637) *
               C50810) *
              C50696 * C1096 -
          ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
            (C34734 + C34735) * C25415) *
               C50810 +
           (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
            (C34729 + C34728) * C25415) *
               C50939) *
              C50696 * C1097 +
          (((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
            C34718 * C25416 + C34719 * C50637) *
               C50939 +
           ((C35954 + C35955) * C25415 + (C35956 + C35957) * C25410 +
            (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
               C50810) *
              C50696 * C1098 -
          (((C31640 * C9727 + C50834 * C9731 + C31639 * C3420 +
             C31637 * C3425) *
                C50637 +
            (C31640 * C9725 + C50834 * C9728 + C31639 * C3416 +
             C31637 * C3421) *
                C25416 +
            (C31640 * C9729 + C50834 * C9732 + C31639 * C3422 +
             C31637 * C3426) *
                C25410 +
            (C31640 * C9726 + C50834 * C9730 + C31639 * C3417 +
             C31637 * C3423) *
                C25415) *
               C50810 +
           ((C34739 + C34738) * C50637 + (C34737 + C34736) * C25416 +
            (C35957 + C35956) * C25410 + (C35955 + C35954) * C25415) *
               C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                  C25415 +
              (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                  C25410 +
              (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                 C50939 +
             ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
              C34704 * C25416 + C34705 * C50637) *
                 C50810) *
                C1676 -
            ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
              (C35616 + C35617) * C25415) *
                 C50810 +
             ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
              (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                  C25410 +
              (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                  C25415) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
              C35604 * C25416 + C35605 * C50637) *
                 C50939 +
             ((C36818 + C36819) * C25415 + (C36820 + C36821) * C25410 +
              (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                 C50810) *
                C50760 -
            ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
              (C34734 + C34735) * C25415) *
                 C50810 +
             (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
              (C34729 + C34728) * C25415) *
                 C50939) *
                C1676) *
               C50732) *
              C50920 +
          (((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
              (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                 C50939 +
             (C35604 * C25415 + C35605 * C25410 + (C32616 + C32617) * C25416 +
              (C32618 + C32619) * C50637) *
                 C50810) *
                C50760 -
            ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
              C34717 * C25415) *
                 C50810 +
             ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
              (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                 C50939) *
                C1676) *
               C50928 +
           (((C34704 * C25415 + C34705 * C25410 + C35140 * C25416 +
              C35141 * C50637) *
                 C50939 +
             (C34718 * C25415 + C34719 * C25410 + (C31884 + C31885) * C25416 +
              (C31886 + C31887) * C50637) *
                 C50810) *
                C1676 -
            (((C31640 * C3588 + C50834 * C3594 + C31639 * C1568 +
               C31637 * C1575) *
                  C50637 +
              (C31640 * C3585 + C50834 * C3589 + C31639 * C1563 +
               C31637 * C1569) *
                  C25416 +
              (C35621 + C35620) * C25410 + (C35619 + C35618) * C25415) *
                 C50810 +
             ((C32619 + C32618) * C50637 + (C32617 + C32616) * C25416 +
              C35594 * C25410 + C35595 * C25415) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50974 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50975 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C25415 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C25410 +
             (C32074 + C32075) * C25416 + (C32076 + C32077) * C50637) *
                C50939 +
            ((C36160 + C36161) * C25415 + (C36162 + C36163) * C25410 +
             (C34942 + C34943) * C25416 + (C34944 + C34945) * C50637) *
                C50810) *
               C2092) *
              C50928 +
          ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
             C35604 * C25416 + C35605 * C50637) *
                C50939 +
            ((C36818 + C36819) * C25415 + (C36820 + C36821) * C25410 +
             (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                C50810) *
               C50975 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C50974 -
           (((C31640 * C10138 + C50834 * C10142 + C31639 * C3590 +
              C31637 * C3595) *
                 C50637 +
             (C31640 * C10136 + C50834 * C10139 + C31639 * C3586 +
              C31637 * C3591) *
                 C25416 +
             (C31640 * C10140 + C50834 * C10143 + C31639 * C3592 +
              C31637 * C3596) *
                 C25410 +
             (C31640 * C10137 + C50834 * C10141 + C31639 * C3587 +
              C31637 * C3593) *
                 C25415) *
                C50810 +
            ((C34945 + C34944) * C50637 + (C34943 + C34942) * C25416 +
             (C36163 + C36162) * C25410 + (C36161 + C36160) * C25415) *
                C50939) *
               C2092) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50760) *
              C278 +
          ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
             C35604 * C25416 + C35605 * C50637) *
                C50939 +
            ((C36818 + C36819) * C25415 + (C36820 + C36821) * C25410 +
             (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                C50810) *
               C50760 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C1676) *
              C279 +
          ((((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
             C34718 * C25416 + C34719 * C50637) *
                C50939 +
            ((C35954 + C35955) * C25415 + (C35956 + C35957) * C25410 +
             (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
              C31637 * C4105) *
                 C50637 +
             (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
              C31637 * C4101) *
                 C25416 +
             (C31640 * C9221 + C50834 * C9224 + C31639 * C4102 +
              C31637 * C4106) *
                 C25410 +
             (C31640 * C9218 + C50834 * C9222 + C31639 * C4097 +
              C31637 * C4103) *
                 C25415) *
                C50810 +
            ((C35621 + C35620) * C50637 + (C35619 + C35618) * C25416 +
             (C36821 + C36820) * C25410 + (C36819 + C36818) * C25415) *
                C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          ((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
             (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                C50939 +
            (C35604 * C25415 + C35605 * C25410 + (C32616 + C32617) * C25416 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50760 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          (((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
             (C31683 + C31682) * C50637) *
                C50939 +
            (C35140 * C25415 + C35141 * C25410 + (C32238 + C32239) * C25416 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C50637 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C25416 +
             (C32619 + C32618) * C25410 + (C32617 + C32616) * C25415) *
                C50810 +
            ((C32401 + C32400) * C50637 + (C32399 + C32398) * C25416 +
             C32388 * C25410 + C32389 * C25415) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                C25415 +
            (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                C25410 +
            (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
               C50939 +
           ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
            C34704 * C25416 + C34705 * C50637) *
               C50810) *
              C1842 -
          ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
            (C35616 + C35617) * C25415) *
               C50810 +
           ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
            (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                C25410 +
            (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                C25415) *
               C50939) *
              C1843 +
          (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                C25415 +
            (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                C25410 +
            (C32074 + C32075) * C25416 + (C32076 + C32077) * C50637) *
               C50939 +
           ((C36160 + C36161) * C25415 + (C36162 + C36163) * C25410 +
            (C34942 + C34943) * C25416 + (C34944 + C34945) * C50637) *
               C50810) *
              C1844 -
          (((C31640 * C16727 + C50834 * C16729 + C31639 * C4514 +
             C31637 * C4519) *
                C50637 +
            (C31640 * C16726 + C50834 * C16728 + C31639 * C4510 +
             C31637 * C4515) *
                C25416 +
            (C31640 * C14784 + C50834 * C14787 + C31639 * C4516 +
             C31637 * C4520) *
                C25410 +
            (C31640 * C14781 + C50834 * C14785 + C31639 * C4511 +
             C31637 * C4517) *
                C25415) *
               C50810 +
           ((C31640 * C7358 + C50834 * C7363 + C31639 * C1854 +
             C31637 * C1860) *
                C50637 +
            (C31640 * C7354 + C50834 * C7359 + C31639 * C1848 +
             C31637 * C1855) *
                C25416 +
            (C31640 * C7360 + C50834 * C7364 + C31639 * C1856 +
             C31637 * C1861) *
                C25410 +
            (C31640 * C7355 + C50834 * C7361 + C31639 * C1849 +
             C31637 * C1857) *
                C25415) *
               C50939) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C50974 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50975 +
           (((C31639 * C464 + C31637 * C478 + C31640 * C1849 + C50834 * C1857) *
                 C25415 +
             (C31639 * C479 + C31637 * C494 + C31640 * C1856 + C50834 * C1861) *
                 C25410 +
             (C32074 + C32075) * C25416 + (C32076 + C32077) * C50637) *
                C50939 +
            ((C36160 + C36161) * C25415 + (C36162 + C36163) * C25410 +
             (C34942 + C34943) * C25416 + (C34944 + C34945) * C50637) *
                C50810) *
               C2092) *
              C50680 * C50920 +
          ((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
             (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                C50939 +
            (C35604 * C25415 + C35605 * C25410 + (C32616 + C32617) * C25416 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50975 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C50974 -
           (((C31640 * C4512 + C50834 * C4518 + C31639 * C1221 +
              C31637 * C1228) *
                 C50637 +
             (C31640 * C4509 + C50834 * C4513 + C31639 * C1216 +
              C31637 * C1222) *
                 C25416 +
             (C34945 + C34944) * C25410 + (C34943 + C34942) * C25415) *
                C50810 +
            ((C32081 + C32080) * C50637 + (C32079 + C32078) * C25416 +
             (C32077 + C32076) * C25410 + (C32075 + C32074) * C25415) *
                C50939) *
               C2092) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          ((((C32073 + C32072) * C25415 + (C32071 + C32070) * C25410 +
             (C32069 + C32068) * C25416 + (C32067 + C32066) * C50637) *
                C50939 +
            (C35604 * C25415 + C35605 * C25410 + (C32616 + C32617) * C25416 +
             (C32618 + C32619) * C50637) *
                C50810) *
               C50760 -
           ((C32228 * C50637 + C32229 * C25416 + C34716 * C25410 +
             C34717 * C25415) *
                C50810 +
            ((C31681 + C31680) * C50637 + (C31679 + C31678) * C25416 +
             (C31677 + C31676) * C25410 + (C31675 + C31674) * C25415) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          (((C31690 * C25415 + C31691 * C25410 + (C31685 + C31684) * C25416 +
             (C31683 + C31682) * C50637) *
                C50939 +
            (C35140 * C25415 + C35141 * C25410 + (C32238 + C32239) * C25416 +
             (C32240 + C32241) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C1219 + C50834 * C1227 + C31639 * C901 + C31637 * C907) *
                 C50637 +
             (C31640 * C1215 + C50834 * C1220 + C31639 * C892 + C31637 * C900) *
                 C25416 +
             (C32619 + C32618) * C25410 + (C32617 + C32616) * C25415) *
                C50810 +
            ((C32401 + C32400) * C50637 + (C32399 + C32398) * C25416 +
             C32388 * C25410 + C32389 * C25415) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C122 + C31637 * C129 + C31640 * C463 + C50834 * C477) *
                 C25415 +
             (C31639 * C130 + C31637 * C143 + C31640 * C476 + C50834 * C493) *
                 C25410 +
             (C31674 + C31675) * C25416 + (C31676 + C31677) * C50637) *
                C50939 +
            ((C34728 + C34729) * C25415 + (C34730 + C34731) * C25410 +
             C34704 * C25416 + C34705 * C50637) *
                C50810) *
               C1676 -
           ((C35594 * C50637 + C35595 * C25416 + (C35614 + C35615) * C25410 +
             (C35616 + C35617) * C25415) *
                C50810 +
            ((C32070 + C32071) * C50637 + (C32072 + C32073) * C25416 +
             (C31640 * C479 + C50834 * C494 + C31639 * C476 + C31637 * C493) *
                 C25410 +
             (C31640 * C464 + C50834 * C478 + C31639 * C463 + C31637 * C477) *
                 C25415) *
                C50939) *
               C50760) *
              C278 +
          ((((C35617 + C35616) * C25415 + (C35615 + C35614) * C25410 +
             C35604 * C25416 + C35605 * C50637) *
                C50939 +
            ((C36818 + C36819) * C25415 + (C36820 + C36821) * C25410 +
             (C35618 + C35619) * C25416 + (C35620 + C35621) * C50637) *
                C50810) *
               C50760 -
           ((C34706 * C50637 + C34707 * C25416 + (C34732 + C34733) * C25410 +
             (C34734 + C34735) * C25415) *
                C50810 +
            (C34716 * C50637 + C34717 * C25416 + (C34731 + C34730) * C25410 +
             (C34729 + C34728) * C25415) *
                C50939) *
               C1676) *
              C279 +
          ((((C34735 + C34734) * C25415 + (C34733 + C34732) * C25410 +
             C34718 * C25416 + C34719 * C50637) *
                C50939 +
            ((C35954 + C35955) * C25415 + (C35956 + C35957) * C25410 +
             (C34736 + C34737) * C25416 + (C34738 + C34739) * C50637) *
                C50810) *
               C1676 -
           (((C31640 * C9219 + C50834 * C9223 + C31639 * C4100 +
              C31637 * C4105) *
                 C50637 +
             (C31640 * C9217 + C50834 * C9220 + C31639 * C4096 +
              C31637 * C4101) *
                 C25416 +
             (C31640 * C9221 + C50834 * C9224 + C31639 * C4102 +
              C31637 * C4106) *
                 C25410 +
             (C31640 * C9218 + C50834 * C9222 + C31639 * C4097 +
              C31637 * C4103) *
                 C25415) *
                C50810 +
            ((C35621 + C35620) * C50637 + (C35619 + C35618) * C25416 +
             (C36821 + C36820) * C25410 + (C36819 + C36818) * C25415) *
                C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50696 * C50928 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50696 * C50732) *
                       C50970 +
                   (((C38319 + C38318 + C38317) * C25415 +
                     (C38316 + C38315 + C38314) * C25410 +
                     (C38666 + C38667 + C38668) * C25416 +
                     (C38669 + C38670 + C38671) * C50637) *
                        C50796 * C50696 * C50732 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50696 * C50928) *
                       C50971 +
                   (((C38137 + C38136 + C38135) * C25415 +
                     (C38134 + C38133 + C38132) * C25410 +
                     (C38138 + C38139 + C38140) * C25416 +
                     (C38141 + C38142 + C38143) * C50637) *
                        C50796 * C50696 * C50928 -
                    ((C38088 * C1219 + C38085 * C1227 + C38087 * C901 +
                      C50968 * C907 + C38086 * C293 + C50977 * C313) *
                         C50637 +
                     (C38088 * C1215 + C38085 * C1220 + C38087 * C892 +
                      C50968 * C900 + C38086 * C283 + C50977 * C294) *
                         C25416 +
                     (C38671 + C38670 + C38669) * C25410 +
                     (C38668 + C38667 + C38666) * C25415) *
                        C50796 * C50696 * C50732) *
                       C638)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                       C50968 * C477 + C38088 * C464 + C38085 * C478) *
                          C25415 +
                      (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                       C50968 * C493 + C38088 * C479 + C38085 * C494) *
                          C25410 +
                      (C38126 + C38127 + C38128) * C25416 +
                      (C38129 + C38130 + C38131) * C50637) *
                         C50796 * C50929 -
                     ((C38496 + C38497 + C38498) * C50637 +
                      (C38499 + C38500 + C38501) * C25416 +
                      (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                       C50968 * C494 + C38086 * C476 + C50977 * C493) *
                          C25410 +
                      (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                       C50968 * C478 + C38086 * C463 + C50977 * C477) *
                          C25415) *
                         C50796 * C50760) *
                        C50928 +
                    (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                       C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                          C25415 +
                      (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                       C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                          C25410 +
                      (C39042 + C39043 + C39044) * C25416 +
                      (C39045 + C39046 + C39047) * C50637) *
                         C50796 * C50760 -
                     ((C38314 + C38315 + C38316) * C50637 +
                      (C38317 + C38318 + C38319) * C25416 +
                      (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                       C50968 * C904 + C38086 * C299 + C50977 * C316) *
                          C25410 +
                      (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                       C50968 * C894 + C38086 * C286 + C50977 * C300) *
                          C25415) *
                         C50796 * C50929) *
                        C50732) *
                       C281 +
                   ((((C38501 + C38500 + C38499) * C25415 +
                      (C38498 + C38497 + C38496) * C25410 +
                      (C38830 + C38831 + C38832) * C25416 +
                      (C38833 + C38834 + C38835) * C50637) *
                         C50796 * C50760 -
                     ((C38132 + C38133 + C38134) * C50637 +
                      (C38135 + C38136 + C38137) * C25416 +
                      (C38131 + C38130 + C38129) * C25410 +
                      (C38128 + C38127 + C38126) * C25415) *
                         C50796 * C50929) *
                        C50928 +
                    (((C38319 + C38318 + C38317) * C25415 +
                      (C38316 + C38315 + C38314) * C25410 +
                      (C38666 + C38667 + C38668) * C25416 +
                      (C38669 + C38670 + C38671) * C50637) *
                         C50796 * C50929 -
                     ((C38088 * C4512 + C38085 * C4518 + C38087 * C1221 +
                       C50968 * C1228 + C38086 * C899 + C50977 * C906) *
                          C50637 +
                      (C38088 * C4509 + C38085 * C4513 + C38087 * C1216 +
                       C50968 * C1222 + C38086 * C891 + C50977 * C898) *
                          C25416 +
                      (C39047 + C39046 + C39045) * C25410 +
                      (C39044 + C39043 + C39042) * C25415) *
                         C50796 * C50760) *
                        C50732) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50696 * C278 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50696 * C279 +
                    ((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                      C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                         C25415 +
                     (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                      C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                         C25410 +
                     (C38320 + C38321 + C38322) * C25416 +
                     (C38323 + C38324 + C38325) * C50637) *
                        C50796 * C50696 * C280) *
                       C281 +
                   (((C38319 + C38318 + C38317) * C25415 +
                     (C38316 + C38315 + C38314) * C25410 +
                     (C38086 * C284 + C50977 * C296 + C38087 * C891 +
                      C50968 * C898 + C38088 * C1216 + C38085 * C1222) *
                         C25416 +
                     (C38086 * C295 + C50977 * C314 + C38087 * C899 +
                      C50968 * C906 + C38088 * C1221 + C38085 * C1228) *
                         C50637) *
                        C50796 * C50696 * C279 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50696 * C278 -
                    ((C38088 * C3588 + C38085 * C3594 + C38087 * C1568 +
                      C50968 * C1575 + C38086 * C306 + C50977 * C319) *
                         C50637 +
                     (C38088 * C3585 + C38085 * C3589 + C38087 * C1563 +
                      C50968 * C1569 + C38086 * C289 + C50977 * C305) *
                         C25416 +
                     (C38325 + C38324 + C38323) * C25410 +
                     (C38322 + C38321 + C38320) * C25415) *
                        C50796 * C50696 * C280) *
                       C50667)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C25415 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C25410 +
                    (C38126 + C38127 + C38128) * C25416 +
                    (C38129 + C38130 + C38131) * C50637) *
                       C50796 * C50696 * C50680 * C113 -
                   ((C38132 + C38133 + C38134) * C50637 +
                    (C38135 + C38136 + C38137) * C25416 +
                    (C38131 + C38130 + C38129) * C25410 +
                    (C38128 + C38127 + C38126) * C25415) *
                       C50796 * C50696 * C50680 * C114 +
                   ((C38137 + C38136 + C38135) * C25415 +
                    (C38134 + C38133 + C38132) * C25410 +
                    (C38138 + C38139 + C38140) * C25416 +
                    (C38141 + C38142 + C38143) * C50637) *
                       C50796 * C50696 * C50680 * C115 -
                   ((C38088 * C488 + C38085 * C499 + C38087 * C487 +
                     C50968 * C498 + C38086 * C137 + C50977 * C147) *
                        C50637 +
                    (C38088 * C469 + C38085 * C489 + C38087 * C468 +
                     C50968 * C486 + C38086 * C126 + C50977 * C138) *
                        C25416 +
                    (C38143 + C38142 + C38141) * C25410 +
                    (C38140 + C38139 + C38138) * C25415) *
                       C50796 * C50696 * C50680 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C457 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C458 +
                    ((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C25415 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C25410 +
                     (C38502 + C38503 + C38504) * C25416 +
                     (C38505 + C38506 + C38507) * C50637) *
                        C50796 * C459) *
                       C50680 * C281 +
                   (((C38501 + C38500 + C38499) * C25415 +
                     (C38498 + C38497 + C38496) * C25410 +
                     (C38086 * C461 + C50977 * C473 + C38087 * C466 +
                      C50968 * C482 + C38088 * C1847 + C38085 * C1853) *
                         C25416 +
                     (C38086 * C472 + C50977 * C491 + C38087 * C483 +
                      C50968 * C496 + C38088 * C1852 + C38085 * C1859) *
                         C50637) *
                        C50796 * C458 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C457 -
                    ((C38088 * C7356 + C38085 * C7362 + C38087 * C1852 +
                      C50968 * C1859 + C38086 * C483 + C50977 * C496) *
                         C50637 +
                     (C38088 * C7353 + C38085 * C7357 + C38087 * C1847 +
                      C50968 * C1853 + C38086 * C466 + C50977 * C482) *
                         C25416 +
                     (C38507 + C38506 + C38505) * C25410 +
                     (C38504 + C38503 + C38502) * C25415) *
                        C50796 * C459) *
                       C50680 * C50667)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50929 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50760) *
                       C50680 * C50970 +
                   (((C38501 + C38500 + C38499) * C25415 +
                     (C38498 + C38497 + C38496) * C25410 +
                     (C38830 + C38831 + C38832) * C25416 +
                     (C38833 + C38834 + C38835) * C50637) *
                        C50796 * C50760 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50929) *
                       C50680 * C50971 +
                   (((C38137 + C38136 + C38135) * C25415 +
                     (C38134 + C38133 + C38132) * C25410 +
                     (C38138 + C38139 + C38140) * C25416 +
                     (C38141 + C38142 + C38143) * C50637) *
                        C50796 * C50929 -
                    ((C38088 * C1850 + C38085 * C1858 + C38087 * C485 +
                      C50968 * C497 + C38086 * C470 + C50977 * C490) *
                         C50637 +
                     (C38088 * C1846 + C38085 * C1851 + C38087 * C467 +
                      C50968 * C484 + C38086 * C460 + C50977 * C471) *
                         C25416 +
                     (C38835 + C38834 + C38833) * C25410 +
                     (C38832 + C38831 + C38830) * C25415) *
                        C50796 * C50760) *
                       C50680 * C638)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C25415 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C25410 +
                    (C38126 + C38127 + C38128) * C25416 +
                    (C38129 + C38130 + C38131) * C50637) *
                       C50796 * C50696 * C50680 * C113 -
                   ((C38132 + C38133 + C38134) * C50637 +
                    (C38135 + C38136 + C38137) * C25416 +
                    (C38131 + C38130 + C38129) * C25410 +
                    (C38128 + C38127 + C38126) * C25415) *
                       C50796 * C50696 * C50680 * C114 +
                   ((C38137 + C38136 + C38135) * C25415 +
                    (C38134 + C38133 + C38132) * C25410 +
                    (C38138 + C38139 + C38140) * C25416 +
                    (C38141 + C38142 + C38143) * C50637) *
                       C50796 * C50696 * C50680 * C115 -
                   ((C38088 * C488 + C38085 * C499 + C38087 * C487 +
                     C50968 * C498 + C38086 * C137 + C50977 * C147) *
                        C50637 +
                    (C38088 * C469 + C38085 * C489 + C38087 * C468 +
                     C50968 * C486 + C38086 * C126 + C50977 * C138) *
                        C25416 +
                    (C38143 + C38142 + C38141) * C25410 +
                    (C38140 + C38139 + C38138) * C25415) *
                       C50796 * C50696 * C50680 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50696 * C278 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50696 * C279 +
                    ((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                      C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                         C25415 +
                     (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                      C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                         C25410 +
                     (C38320 + C38321 + C38322) * C25416 +
                     (C38323 + C38324 + C38325) * C50637) *
                        C50796 * C50696 * C280) *
                       C281 +
                   (((C38319 + C38318 + C38317) * C25415 +
                     (C38316 + C38315 + C38314) * C25410 +
                     (C38086 * C284 + C50977 * C296 + C38087 * C891 +
                      C50968 * C898 + C38088 * C1216 + C38085 * C1222) *
                         C25416 +
                     (C38086 * C295 + C50977 * C314 + C38087 * C899 +
                      C50968 * C906 + C38088 * C1221 + C38085 * C1228) *
                         C50637) *
                        C50796 * C50696 * C279 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50696 * C278 -
                    ((C38088 * C3588 + C38085 * C3594 + C38087 * C1568 +
                      C50968 * C1575 + C38086 * C306 + C50977 * C319) *
                         C50637 +
                     (C38088 * C3585 + C38085 * C3589 + C38087 * C1563 +
                      C50968 * C1569 + C38086 * C289 + C50977 * C305) *
                         C25416 +
                     (C38325 + C38324 + C38323) * C25410 +
                     (C38322 + C38321 + C38320) * C25415) *
                        C50796 * C50696 * C280) *
                       C50667)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50696 * C50972 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50696 * C50973 +
                    ((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                      C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                         C25415 +
                     (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                      C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                         C25410 +
                     (C38320 + C38321 + C38322) * C25416 +
                     (C38323 + C38324 + C38325) * C50637) *
                        C50796 * C50696 * C1331) *
                       C50920 +
                   (((C38319 + C38318 + C38317) * C25415 +
                     (C38316 + C38315 + C38314) * C25410 +
                     (C38666 + C38667 + C38668) * C25416 +
                     (C38669 + C38670 + C38671) * C50637) *
                        C50796 * C50696 * C50973 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50696 * C50972 -
                    ((C38088 * C3588 + C38085 * C3594 + C38087 * C1568 +
                      C50968 * C1575 + C38086 * C306 + C50977 * C319) *
                         C50637 +
                     (C38088 * C3585 + C38085 * C3589 + C38087 * C1563 +
                      C50968 * C1569 + C38086 * C289 + C50977 * C305) *
                         C25416 +
                     (C38325 + C38324 + C38323) * C25410 +
                     (C38322 + C38321 + C38320) * C25415) *
                        C50796 * C50696 * C1331) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50929 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50760) *
                       C50972 +
                   (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                      C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                         C25415 +
                     (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                      C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                         C25410 +
                     (C39042 + C39043 + C39044) * C25416 +
                     (C39045 + C39046 + C39047) * C50637) *
                        C50796 * C50760 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50929) *
                       C50973 +
                   (((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                      C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                         C25415 +
                     (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                      C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                         C25410 +
                     (C38320 + C38321 + C38322) * C25416 +
                     (C38323 + C38324 + C38325) * C50637) *
                        C50796 * C50929 -
                    ((C38088 * C10138 + C38085 * C10142 + C38087 * C3590 +
                      C50968 * C3595 + C38086 * C1570 + C50977 * C1576) *
                         C50637 +
                     (C38088 * C10136 + C38085 * C10139 + C38087 * C3586 +
                      C50968 * C3591 + C38086 * C1564 + C50977 * C1571) *
                         C25416 +
                     (C38088 * C10140 + C38085 * C10143 + C38087 * C3592 +
                      C50968 * C3596 + C38086 * C1572 + C50977 * C1577) *
                         C25410 +
                     (C38088 * C10137 + C38085 * C10141 + C38087 * C3587 +
                      C50968 * C3593 + C38086 * C1565 + C50977 * C1573) *
                         C25415) *
                        C50796 * C50760) *
                       C1331) *
                  C50661) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C25415 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C25410 +
                    (C38126 + C38127 + C38128) * C25416 +
                    (C38129 + C38130 + C38131) * C50637) *
                       C50796 * C50696 * C1096 -
                   ((C38314 + C38315 + C38316) * C50637 +
                    (C38317 + C38318 + C38319) * C25416 +
                    (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                     C50968 * C904 + C38086 * C299 + C50977 * C316) *
                        C25410 +
                    (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                     C50968 * C894 + C38086 * C286 + C50977 * C300) *
                        C25415) *
                       C50796 * C50696 * C1097 +
                   ((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                     C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                        C25415 +
                    (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                     C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                        C25410 +
                    (C38320 + C38321 + C38322) * C25416 +
                    (C38323 + C38324 + C38325) * C50637) *
                       C50796 * C50696 * C1098 -
                   ((C38088 * C9219 + C38085 * C9223 + C38087 * C4100 +
                     C50968 * C4105 + C38086 * C1109 + C50977 * C1115) *
                        C50637 +
                    (C38088 * C9217 + C38085 * C9220 + C38087 * C4096 +
                     C50968 * C4101 + C38086 * C1103 + C50977 * C1110) *
                        C25416 +
                    (C38088 * C9221 + C38085 * C9224 + C38087 * C4102 +
                     C50968 * C4106 + C38086 * C1111 + C50977 * C1116) *
                        C25410 +
                    (C38088 * C9218 + C38085 * C9222 + C38087 * C4097 +
                     C50968 * C4103 + C38086 * C1104 + C50977 * C1112) *
                        C25415) *
                       C50796 * C50696 * C1099) *
                  C50661) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50696 * C1025 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50696 * C50732) *
                       C1027 +
                   (((C38319 + C38318 + C38317) * C25415 +
                     (C38316 + C38315 + C38314) * C25410 +
                     (C38666 + C38667 + C38668) * C25416 +
                     (C38669 + C38670 + C38671) * C50637) *
                        C50796 * C50696 * C50732 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50696 * C1025) *
                       C1028 +
                   (((C38137 + C38136 + C38135) * C25415 +
                     (C38134 + C38133 + C38132) * C25410 +
                     (C38138 + C38139 + C38140) * C25416 +
                     (C38141 + C38142 + C38143) * C50637) *
                        C50796 * C50696 * C1025 -
                    ((C38088 * C1219 + C38085 * C1227 + C38087 * C901 +
                      C50968 * C907 + C38086 * C293 + C50977 * C313) *
                         C50637 +
                     (C38088 * C1215 + C38085 * C1220 + C38087 * C892 +
                      C50968 * C900 + C38086 * C283 + C50977 * C294) *
                         C25416 +
                     (C38671 + C38670 + C38669) * C25410 +
                     (C38668 + C38667 + C38666) * C25415) *
                        C50796 * C50696 * C50732) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C457 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C458 +
                    ((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C25415 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C25410 +
                     (C38502 + C38503 + C38504) * C25416 +
                     (C38505 + C38506 + C38507) * C50637) *
                        C50796 * C459) *
                       C1025 +
                   (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                      C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                         C25415 +
                     (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                      C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                         C25410 +
                     (C39042 + C39043 + C39044) * C25416 +
                     (C39045 + C39046 + C39047) * C50637) *
                        C50796 * C458 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C457 -
                    ((C38088 * C16727 + C38085 * C16729 + C38087 * C4514 +
                      C50968 * C4519 + C38086 * C1223 + C50977 * C1229) *
                         C50637 +
                     (C38088 * C16726 + C38085 * C16728 + C38087 * C4510 +
                      C50968 * C4515 + C38086 * C1217 + C50977 * C1224) *
                         C25416 +
                     (C38088 * C14784 + C38085 * C14787 + C38087 * C4516 +
                      C50968 * C4520 + C38086 * C1225 + C50977 * C1230) *
                         C25410 +
                     (C38088 * C14781 + C38085 * C14785 + C38087 * C4511 +
                      C50968 * C4517 + C38086 * C1218 + C50977 * C1226) *
                         C25415) *
                        C50796 * C459) *
                       C50732) *
                  C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                       C50968 * C477 + C38088 * C464 + C38085 * C478) *
                          C25415 +
                      (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                       C50968 * C493 + C38088 * C479 + C38085 * C494) *
                          C25410 +
                      (C38126 + C38127 + C38128) * C25416 +
                      (C38129 + C38130 + C38131) * C50637) *
                         C50796 * C50929 -
                     ((C38496 + C38497 + C38498) * C50637 +
                      (C38499 + C38500 + C38501) * C25416 +
                      (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                       C50968 * C494 + C38086 * C476 + C50977 * C493) *
                          C25410 +
                      (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                       C50968 * C478 + C38086 * C463 + C50977 * C477) *
                          C25415) *
                         C50796 * C50760) *
                        C1025 +
                    (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                       C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                          C25415 +
                      (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                       C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                          C25410 +
                      (C39042 + C39043 + C39044) * C25416 +
                      (C39045 + C39046 + C39047) * C50637) *
                         C50796 * C50760 -
                     ((C38314 + C38315 + C38316) * C50637 +
                      (C38317 + C38318 + C38319) * C25416 +
                      (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                       C50968 * C904 + C38086 * C299 + C50977 * C316) *
                          C25410 +
                      (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                       C50968 * C894 + C38086 * C286 + C50977 * C300) *
                          C25415) *
                         C50796 * C50929) *
                        C50732) *
                       C50920 +
                   ((((C38501 + C38500 + C38499) * C25415 +
                      (C38498 + C38497 + C38496) * C25410 +
                      (C38830 + C38831 + C38832) * C25416 +
                      (C38833 + C38834 + C38835) * C50637) *
                         C50796 * C50760 -
                     ((C38132 + C38133 + C38134) * C50637 +
                      (C38135 + C38136 + C38137) * C25416 +
                      (C38131 + C38130 + C38129) * C25410 +
                      (C38128 + C38127 + C38126) * C25415) *
                         C50796 * C50929) *
                        C1025 +
                    (((C38319 + C38318 + C38317) * C25415 +
                      (C38316 + C38315 + C38314) * C25410 +
                      (C38666 + C38667 + C38668) * C25416 +
                      (C38669 + C38670 + C38671) * C50637) *
                         C50796 * C50929 -
                     ((C38088 * C4512 + C38085 * C4518 + C38087 * C1221 +
                       C50968 * C1228 + C38086 * C899 + C50977 * C906) *
                          C50637 +
                      (C38088 * C4509 + C38085 * C4513 + C38087 * C1216 +
                       C50968 * C1222 + C38086 * C891 + C50977 * C898) *
                          C25416 +
                      (C39047 + C39046 + C39045) * C25410 +
                      (C39044 + C39043 + C39042) * C25415) *
                         C50796 * C50760) *
                        C50732) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50696 * C1025 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50696 * C50732) *
                       C1027 +
                   (((C38319 + C38318 + C38317) * C25415 +
                     (C38316 + C38315 + C38314) * C25410 +
                     (C38666 + C38667 + C38668) * C25416 +
                     (C38669 + C38670 + C38671) * C50637) *
                        C50796 * C50696 * C50732 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50696 * C1025) *
                       C1028 +
                   (((C38137 + C38136 + C38135) * C25415 +
                     (C38134 + C38133 + C38132) * C25410 +
                     (C38138 + C38139 + C38140) * C25416 +
                     (C38141 + C38142 + C38143) * C50637) *
                        C50796 * C50696 * C1025 -
                    ((C38088 * C1219 + C38085 * C1227 + C38087 * C901 +
                      C50968 * C907 + C38086 * C293 + C50977 * C313) *
                         C50637 +
                     (C38088 * C1215 + C38085 * C1220 + C38087 * C892 +
                      C50968 * C900 + C38086 * C283 + C50977 * C294) *
                         C25416 +
                     (C38671 + C38670 + C38669) * C25410 +
                     (C38668 + C38667 + C38666) * C25415) *
                        C50796 * C50696 * C50732) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C25415 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C25410 +
                    (C38126 + C38127 + C38128) * C25416 +
                    (C38129 + C38130 + C38131) * C50637) *
                       C50796 * C50696 * C1096 -
                   ((C38314 + C38315 + C38316) * C50637 +
                    (C38317 + C38318 + C38319) * C25416 +
                    (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                     C50968 * C904 + C38086 * C299 + C50977 * C316) *
                        C25410 +
                    (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                     C50968 * C894 + C38086 * C286 + C50977 * C300) *
                        C25415) *
                       C50796 * C50696 * C1097 +
                   ((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                     C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                        C25415 +
                    (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                     C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                        C25410 +
                    (C38320 + C38321 + C38322) * C25416 +
                    (C38323 + C38324 + C38325) * C50637) *
                       C50796 * C50696 * C1098 -
                   ((C38088 * C9219 + C38085 * C9223 + C38087 * C4100 +
                     C50968 * C4105 + C38086 * C1109 + C50977 * C1115) *
                        C50637 +
                    (C38088 * C9217 + C38085 * C9220 + C38087 * C4096 +
                     C50968 * C4101 + C38086 * C1103 + C50977 * C1110) *
                        C25416 +
                    (C38088 * C9221 + C38085 * C9224 + C38087 * C4102 +
                     C50968 * C4106 + C38086 * C1111 + C50977 * C1116) *
                        C25410 +
                    (C38088 * C9218 + C38085 * C9222 + C38087 * C4097 +
                     C50968 * C4103 + C38086 * C1104 + C50977 * C1112) *
                        C25415) *
                       C50796 * C50696 * C1099) *
                  C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                       C50968 * C477 + C38088 * C464 + C38085 * C478) *
                          C25415 +
                      (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                       C50968 * C493 + C38088 * C479 + C38085 * C494) *
                          C25410 +
                      (C38126 + C38127 + C38128) * C25416 +
                      (C38129 + C38130 + C38131) * C50637) *
                         C50796 * C1676 -
                     ((C38496 + C38497 + C38498) * C50637 +
                      (C38499 + C38500 + C38501) * C25416 +
                      (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                       C50968 * C494 + C38086 * C476 + C50977 * C493) *
                          C25410 +
                      (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                       C50968 * C478 + C38086 * C463 + C50977 * C477) *
                          C25415) *
                         C50796 * C50760) *
                        C50928 +
                    (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                       C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                          C25415 +
                      (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                       C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                          C25410 +
                      (C39042 + C39043 + C39044) * C25416 +
                      (C39045 + C39046 + C39047) * C50637) *
                         C50796 * C50760 -
                     ((C38314 + C38315 + C38316) * C50637 +
                      (C38317 + C38318 + C38319) * C25416 +
                      (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                       C50968 * C904 + C38086 * C299 + C50977 * C316) *
                          C25410 +
                      (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                       C50968 * C894 + C38086 * C286 + C50977 * C300) *
                          C25415) *
                         C50796 * C1676) *
                        C50732) *
                       C50920 +
                   ((((C38501 + C38500 + C38499) * C25415 +
                      (C38498 + C38497 + C38496) * C25410 +
                      (C38830 + C38831 + C38832) * C25416 +
                      (C38833 + C38834 + C38835) * C50637) *
                         C50796 * C50760 -
                     ((C38132 + C38133 + C38134) * C50637 +
                      (C38135 + C38136 + C38137) * C25416 +
                      (C38131 + C38130 + C38129) * C25410 +
                      (C38128 + C38127 + C38126) * C25415) *
                         C50796 * C1676) *
                        C50928 +
                    (((C38319 + C38318 + C38317) * C25415 +
                      (C38316 + C38315 + C38314) * C25410 +
                      (C38666 + C38667 + C38668) * C25416 +
                      (C38669 + C38670 + C38671) * C50637) *
                         C50796 * C1676 -
                     ((C38088 * C4512 + C38085 * C4518 + C38087 * C1221 +
                       C50968 * C1228 + C38086 * C899 + C50977 * C906) *
                          C50637 +
                      (C38088 * C4509 + C38085 * C4513 + C38087 * C1216 +
                       C50968 * C1222 + C38086 * C891 + C50977 * C898) *
                          C25416 +
                      (C39047 + C39046 + C39045) * C25410 +
                      (C39044 + C39043 + C39042) * C25415) *
                         C50796 * C50760) *
                        C50732) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50974 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50975 +
                    ((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C25415 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C25410 +
                     (C38502 + C38503 + C38504) * C25416 +
                     (C38505 + C38506 + C38507) * C50637) *
                        C50796 * C2092) *
                       C50928 +
                   (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                      C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                         C25415 +
                     (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                      C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                         C25410 +
                     (C39042 + C39043 + C39044) * C25416 +
                     (C39045 + C39046 + C39047) * C50637) *
                        C50796 * C50975 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C50974 -
                    ((C38088 * C16727 + C38085 * C16729 + C38087 * C4514 +
                      C50968 * C4519 + C38086 * C1223 + C50977 * C1229) *
                         C50637 +
                     (C38088 * C16726 + C38085 * C16728 + C38087 * C4510 +
                      C50968 * C4515 + C38086 * C1217 + C50977 * C1224) *
                         C25416 +
                     (C38088 * C14784 + C38085 * C14787 + C38087 * C4516 +
                      C50968 * C4520 + C38086 * C1225 + C50977 * C1230) *
                         C25410 +
                     (C38088 * C14781 + C38085 * C14785 + C38087 * C4511 +
                      C50968 * C4517 + C38086 * C1218 + C50977 * C1226) *
                         C25415) *
                        C50796 * C2092) *
                       C50732) *
                  C50661) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C1676 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50760) *
                       C278 +
                   (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                      C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                         C25415 +
                     (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                      C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                         C25410 +
                     (C39042 + C39043 + C39044) * C25416 +
                     (C39045 + C39046 + C39047) * C50637) *
                        C50796 * C50760 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C1676) *
                       C279 +
                   (((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                      C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                         C25415 +
                     (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                      C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                         C25410 +
                     (C38320 + C38321 + C38322) * C25416 +
                     (C38323 + C38324 + C38325) * C50637) *
                        C50796 * C1676 -
                    ((C38088 * C10138 + C38085 * C10142 + C38087 * C3590 +
                      C50968 * C3595 + C38086 * C1570 + C50977 * C1576) *
                         C50637 +
                     (C38088 * C10136 + C38085 * C10139 + C38087 * C3586 +
                      C50968 * C3591 + C38086 * C1564 + C50977 * C1571) *
                         C25416 +
                     (C38088 * C10140 + C38085 * C10143 + C38087 * C3592 +
                      C50968 * C3596 + C38086 * C1572 + C50977 * C1577) *
                         C25410 +
                     (C38088 * C10137 + C38085 * C10141 + C38087 * C3587 +
                      C50968 * C3593 + C38086 * C1565 + C50977 * C1573) *
                         C25415) *
                        C50796 * C50760) *
                       C280) *
                  C50661) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C1676 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50760) *
                       C50680 * C1027 +
                   (((C38501 + C38500 + C38499) * C25415 +
                     (C38498 + C38497 + C38496) * C25410 +
                     (C38830 + C38831 + C38832) * C25416 +
                     (C38833 + C38834 + C38835) * C50637) *
                        C50796 * C50760 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C1676) *
                       C50680 * C1028 +
                   (((C38137 + C38136 + C38135) * C25415 +
                     (C38134 + C38133 + C38132) * C25410 +
                     (C38138 + C38139 + C38140) * C25416 +
                     (C38141 + C38142 + C38143) * C50637) *
                        C50796 * C1676 -
                    ((C38088 * C1850 + C38085 * C1858 + C38087 * C485 +
                      C50968 * C497 + C38086 * C470 + C50977 * C490) *
                         C50637 +
                     (C38088 * C1846 + C38085 * C1851 + C38087 * C467 +
                      C50968 * C484 + C38086 * C460 + C50977 * C471) *
                         C25416 +
                     (C38835 + C38834 + C38833) * C25410 +
                     (C38832 + C38831 + C38830) * C25415) *
                        C50796 * C50760) *
                       C50680 * C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                     C50968 * C477 + C38088 * C464 + C38085 * C478) *
                        C25415 +
                    (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                     C50968 * C493 + C38088 * C479 + C38085 * C494) *
                        C25410 +
                    (C38126 + C38127 + C38128) * C25416 +
                    (C38129 + C38130 + C38131) * C50637) *
                       C50796 * C1842 -
                   ((C38496 + C38497 + C38498) * C50637 +
                    (C38499 + C38500 + C38501) * C25416 +
                    (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                     C50968 * C494 + C38086 * C476 + C50977 * C493) *
                        C25410 +
                    (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                     C50968 * C478 + C38086 * C463 + C50977 * C477) *
                        C25415) *
                       C50796 * C1843 +
                   ((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                     C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                        C25415 +
                    (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                     C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                        C25410 +
                    (C38502 + C38503 + C38504) * C25416 +
                    (C38505 + C38506 + C38507) * C50637) *
                       C50796 * C1844 -
                   ((C38088 * C17608 + C38085 * C17612 + C38087 * C7358 +
                     C50968 * C7363 + C38086 * C1854 + C50977 * C1860) *
                        C50637 +
                    (C38088 * C17606 + C38085 * C17609 + C38087 * C7354 +
                     C50968 * C7359 + C38086 * C1848 + C50977 * C1855) *
                        C25416 +
                    (C38088 * C17610 + C38085 * C17613 + C38087 * C7360 +
                     C50968 * C7364 + C38086 * C1856 + C50977 * C1861) *
                        C25410 +
                    (C38088 * C17607 + C38085 * C17611 + C38087 * C7355 +
                     C50968 * C7361 + C38086 * C1849 + C50977 * C1857) *
                        C25415) *
                       C50796 * C1845) *
                  C50680 * C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C50974 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50975 +
                    ((C38086 * C464 + C50977 * C478 + C38087 * C1849 +
                      C50968 * C1857 + C38088 * C7355 + C38085 * C7361) *
                         C25415 +
                     (C38086 * C479 + C50977 * C494 + C38087 * C1856 +
                      C50968 * C1861 + C38088 * C7360 + C38085 * C7364) *
                         C25410 +
                     (C38502 + C38503 + C38504) * C25416 +
                     (C38505 + C38506 + C38507) * C50637) *
                        C50796 * C2092) *
                       C50680 * C50920 +
                   (((C38501 + C38500 + C38499) * C25415 +
                     (C38498 + C38497 + C38496) * C25410 +
                     (C38830 + C38831 + C38832) * C25416 +
                     (C38833 + C38834 + C38835) * C50637) *
                        C50796 * C50975 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C50974 -
                    ((C38088 * C7356 + C38085 * C7362 + C38087 * C1852 +
                      C50968 * C1859 + C38086 * C483 + C50977 * C496) *
                         C50637 +
                     (C38088 * C7353 + C38085 * C7357 + C38087 * C1847 +
                      C50968 * C1853 + C38086 * C466 + C50977 * C482) *
                         C25416 +
                     (C38507 + C38506 + C38505) * C25410 +
                     (C38504 + C38503 + C38502) * C25415) *
                        C50796 * C2092) *
                       C50680 * C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C1676 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50760) *
                       C50680 * C1027 +
                   (((C38501 + C38500 + C38499) * C25415 +
                     (C38498 + C38497 + C38496) * C25410 +
                     (C38830 + C38831 + C38832) * C25416 +
                     (C38833 + C38834 + C38835) * C50637) *
                        C50796 * C50760 -
                    ((C38132 + C38133 + C38134) * C50637 +
                     (C38135 + C38136 + C38137) * C25416 +
                     (C38131 + C38130 + C38129) * C25410 +
                     (C38128 + C38127 + C38126) * C25415) *
                        C50796 * C1676) *
                       C50680 * C1028 +
                   (((C38137 + C38136 + C38135) * C25415 +
                     (C38134 + C38133 + C38132) * C25410 +
                     (C38138 + C38139 + C38140) * C25416 +
                     (C38141 + C38142 + C38143) * C50637) *
                        C50796 * C1676 -
                    ((C38088 * C1850 + C38085 * C1858 + C38087 * C485 +
                      C50968 * C497 + C38086 * C470 + C50977 * C490) *
                         C50637 +
                     (C38088 * C1846 + C38085 * C1851 + C38087 * C467 +
                      C50968 * C484 + C38086 * C460 + C50977 * C471) *
                         C25416 +
                     (C38835 + C38834 + C38833) * C25410 +
                     (C38832 + C38831 + C38830) * C25415) *
                        C50796 * C50760) *
                       C50680 * C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38086 * C122 + C50977 * C129 + C38087 * C463 +
                      C50968 * C477 + C38088 * C464 + C38085 * C478) *
                         C25415 +
                     (C38086 * C130 + C50977 * C143 + C38087 * C476 +
                      C50968 * C493 + C38088 * C479 + C38085 * C494) *
                         C25410 +
                     (C38126 + C38127 + C38128) * C25416 +
                     (C38129 + C38130 + C38131) * C50637) *
                        C50796 * C1676 -
                    ((C38496 + C38497 + C38498) * C50637 +
                     (C38499 + C38500 + C38501) * C25416 +
                     (C38088 * C1856 + C38085 * C1861 + C38087 * C479 +
                      C50968 * C494 + C38086 * C476 + C50977 * C493) *
                         C25410 +
                     (C38088 * C1849 + C38085 * C1857 + C38087 * C464 +
                      C50968 * C478 + C38086 * C463 + C50977 * C477) *
                         C25415) *
                        C50796 * C50760) *
                       C278 +
                   (((C38086 * C889 + C50977 * C894 + C38087 * C1218 +
                      C50968 * C1226 + C38088 * C4511 + C38085 * C4517) *
                         C25415 +
                     (C38086 * C895 + C50977 * C904 + C38087 * C1225 +
                      C50968 * C1230 + C38088 * C4516 + C38085 * C4520) *
                         C25410 +
                     (C39042 + C39043 + C39044) * C25416 +
                     (C39045 + C39046 + C39047) * C50637) *
                        C50796 * C50760 -
                    ((C38314 + C38315 + C38316) * C50637 +
                     (C38317 + C38318 + C38319) * C25416 +
                     (C38088 * C1225 + C38085 * C1230 + C38087 * C895 +
                      C50968 * C904 + C38086 * C299 + C50977 * C316) *
                         C25410 +
                     (C38088 * C1218 + C38085 * C1226 + C38087 * C889 +
                      C50968 * C894 + C38086 * C286 + C50977 * C300) *
                         C25415) *
                        C50796 * C1676) *
                       C279 +
                   (((C38086 * C287 + C50977 * C301 + C38087 * C1565 +
                      C50968 * C1573 + C38088 * C3587 + C38085 * C3593) *
                         C25415 +
                     (C38086 * C302 + C50977 * C317 + C38087 * C1572 +
                      C50968 * C1577 + C38088 * C3592 + C38085 * C3596) *
                         C25410 +
                     (C38320 + C38321 + C38322) * C25416 +
                     (C38323 + C38324 + C38325) * C50637) *
                        C50796 * C1676 -
                    ((C38088 * C10138 + C38085 * C10142 + C38087 * C3590 +
                      C50968 * C3595 + C38086 * C1570 + C50977 * C1576) *
                         C50637 +
                     (C38088 * C10136 + C38085 * C10139 + C38087 * C3586 +
                      C50968 * C3591 + C38086 * C1564 + C50977 * C1571) *
                         C25416 +
                     (C38088 * C10140 + C38085 * C10143 + C38087 * C3592 +
                      C50968 * C3596 + C38086 * C1572 + C50977 * C1577) *
                         C25410 +
                     (C38088 * C10137 + C38085 * C10141 + C38087 * C3587 +
                      C50968 * C3593 + C38086 * C1565 + C50977 * C1573) *
                         C25415) *
                        C50796 * C50760) *
                       C280) *
                  C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C50928 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50732) *
              C50970 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50732 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C50928) *
              C50971 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50696 * C50928 -
           ((C117 * C640 + C50822 * C642) * C109 +
            (C117 * C639 + C50822 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50796 * C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C50928 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50732) *
              C50970 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50732 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50696 * C50928 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C49742 + C2487 * C50911 +
             C2486 * C49749) *
                C7953 +
            (C8444 + C8443 + C8442 + C8441) * C7952 +
            (C8440 + C8439 + C8438 + C8437) * C7951) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C118 +
             (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50796 * C50929 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
             (C117 * C463 + C50822 * C477) * C118) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C889 + C50822 * C894) * C118 +
             (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50796 * C50760 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
             (C117 * C286 + C50822 * C300) * C118) *
                C50796 * C50929) *
               C50732) *
              C281 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50796 * C50760 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50796 * C50929) *
               C50928 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50796 * C50929 -
            ((C117 * C902 + C50822 * C908) * C109 +
             (C117 * C893 + C50822 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C49749 +
              (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
              C172 * C50637) *
                 C7951 +
             (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
                C50929 -
            ((C8785 + C8786 + C8787 + C8788) * C7953 +
             (C8789 + C8790 + C8791 + C8792) * C7952 +
             (C529 * C50637 + C530 * C49742 +
              (C117 * C476 + C50822 * C493) * C50911 +
              (C117 * C463 + C50822 * C477) * C49749) *
                 C7951) *
                C50760) *
               C50928 +
           (((C8792 + C8791 + C8790 + C8789) * C7951 +
             (C8788 + C8787 + C8786 + C8785) * C7952 +
             ((C117 * C4097 + C50822 * C4103) * C49749 +
              (C117 * C4102 + C50822 * C4106) * C50911 + C8805 * C49742 +
              C8806 * C50637) *
                 C7953) *
                C50760 -
            ((C8111 + C8112 + C8113 + C8114) * C7953 +
             (C8110 + C8109 + C8108 + C8107) * C7952 +
             (C8106 + C8105 + C8104 + C8103) * C7951) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                 C7951 +
             (C8797 + C8798 + C8799 + C8800) * C7952 +
             (C8801 + C8802 + C8803 + C8804) * C7953) *
                C50760 -
            (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
             (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                 C7951) *
                C50929) *
               C50928 +
           (((C8119 + C8120 + C8121 + C8122) * C7951 +
             (C8123 + C8124 + C8125 + C8126) * C7952 +
             (C8127 + C8128 + C8129 + C8130) * C7953) *
                C50929 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C49742 + C8806 * C50911 +
              C8805 * C49749) *
                 C7953 +
             (C8804 + C8803 + C8802 + C8801) * C7952 +
             (C8800 + C8799 + C8798 + C8797) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C279 +
           ((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50696 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50822 * C309) * C121 +
            (C117 * C310 + C50822 * C321) * C109) *
               C50796 * C50696 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C278 -
           ((C117 * C311 + C50822 * C322) * C109 +
            (C117 * C292 + C50822 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C50696 * C50680 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50796 * C50696 * C50680 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50796 * C50696 * C50680 * C115 -
          ((C117 * C141 + C50822 * C149) * C109 +
           (C117 * C128 + C50822 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C458 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C459) *
              C50680 * C281 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + (C117 * C468 + C50822 * C486) * C121 +
            (C117 * C487 + C50822 * C498) * C109) *
               C50796 * C458 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C457 -
           ((C117 * C488 + C50822 * C499) * C109 +
            (C117 * C469 + C50822 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C2480 * C49749 + C2481 * C50911 + C353 * C49742 + C352 * C50637) *
               C7952 +
           (C2483 * C49749 + C2482 * C50911 + C354 * C49742 + C355 * C50637) *
               C7953) *
              C50696 * C50680 * C113 -
          ((C357 * C50637 + C356 * C49742 + C355 * C50911 + C354 * C49749) *
               C7953 +
           (C350 * C50637 + C351 * C49742 + C352 * C50911 + C353 * C49749) *
               C7952 +
           (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
               C7951) *
              C50696 * C50680 * C114 +
          ((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
               C7951 +
           (C351 * C49749 + C350 * C50911 + C349 * C49742 + C348 * C50637) *
               C7952 +
           (C356 * C49749 + C357 * C50911 + C358 * C49742 + C359 * C50637) *
               C7953) *
              C50696 * C50680 * C115 -
          (((C117 * C311 + C50822 * C322) * C50637 +
            (C117 * C292 + C50822 * C312) * C49742 + C359 * C50911 +
            C358 * C49749) *
               C7953 +
           (C649 * C50637 + C648 * C49742 + C348 * C50911 + C349 * C49749) *
               C7952 +
           (C177 * C50637 + C178 * C49742 + C176 * C50911 + C175 * C49749) *
               C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C278 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C279 +
           (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            ((C117 * C3417 + C50822 * C3423) * C49749 +
             (C117 * C3422 + C50822 * C3426) * C50911 + C8132 * C49742 +
             C8133 * C50637) *
                C7953) *
               C50696 * C280) *
              C281 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C279 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C278 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C49742 + C8133 * C50911 +
             C8132 * C49749) *
                C7953 +
            (C8130 + C8129 + C8128 + C8127) * C7952 + C8138 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C457 -
           ((C3167 * C50637 + C3166 * C49742 + C4117 * C50911 +
             C4116 * C49749) *
                C7953 +
            (C923 * C50637 + C922 * C49742 + C3164 * C50911 + C3165 * C49749) *
                C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C3606 * C49749 + C3607 * C50911 + C2646 * C49742 +
             C2647 * C50637) *
                C7952 +
            ((C117 * C3587 + C50822 * C3593) * C49749 +
             (C117 * C3592 + C50822 * C3596) * C50911 + C8289 * C49742 +
             C8290 * C50637) *
                C7953) *
               C459) *
              C50680 * C281 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C922 * C49749 + C923 * C50911 + C924 * C49742 + C925 * C50637) *
                C7952 +
            (C3166 * C49749 + C3167 * C50911 + C3168 * C49742 +
             C3169 * C50637) *
                C7953) *
               C458 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C457 -
           (((C117 * C3588 + C50822 * C3594) * C50637 +
             (C117 * C3585 + C50822 * C3589) * C49742 + C8290 * C50911 +
             C8289 * C49749) *
                C7953 +
            (C2649 * C50637 + C2648 * C49742 + C2647 * C50911 +
             C2646 * C49749) *
                C7952 +
            (C534 * C50637 + C533 * C49742 + C532 * C50911 + C531 * C49749) *
                C7951) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50929 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50680 * C50970 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50760 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50929) *
              C50680 * C50971 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50929 -
           ((C117 * C750 + C50822 * C752) * C109 +
            (C117 * C749 + C50822 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50796 * C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50929 -
           ((C3167 * C50637 + C3166 * C49742 + C4117 * C50911 +
             C4116 * C49749) *
                C7953 +
            (C923 * C50637 + C922 * C49742 + C3164 * C50911 + C3165 * C49749) *
                C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C922 * C49749 + C923 * C50911 + C924 * C49742 + C925 * C50637) *
                C7952 +
            (C3166 * C49749 + C3167 * C50911 + C3168 * C49742 +
             C3169 * C50637) *
                C7953) *
               C50760 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50929 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C49742 + C3169 * C50911 +
             C3168 * C49749) *
                C7953 +
            (C927 * C50637 + C926 * C49742 + C925 * C50911 + C924 * C49749) *
                C7952 +
            (C525 * C50637 + C526 * C49742 + C527 * C50911 + C528 * C49749) *
                C7951) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C50696 * C50680 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50796 * C50696 * C50680 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50796 * C50696 * C50680 * C115 -
          ((C117 * C141 + C50822 * C149) * C109 +
           (C117 * C128 + C50822 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C279 +
           ((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50696 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50822 * C309) * C121 +
            (C117 * C310 + C50822 * C321) * C109) *
               C50796 * C50696 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C278 -
           ((C117 * C311 + C50822 * C322) * C109 +
            (C117 * C292 + C50822 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C2480 * C49749 + C2481 * C50911 + C353 * C49742 + C352 * C50637) *
               C7952 +
           (C2483 * C49749 + C2482 * C50911 + C354 * C49742 + C355 * C50637) *
               C7953) *
              C50696 * C50680 * C113 -
          ((C357 * C50637 + C356 * C49742 + C355 * C50911 + C354 * C49749) *
               C7953 +
           (C350 * C50637 + C351 * C49742 + C352 * C50911 + C353 * C49749) *
               C7952 +
           (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
               C7951) *
              C50696 * C50680 * C114 +
          ((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
               C7951 +
           (C351 * C49749 + C350 * C50911 + C349 * C49742 + C348 * C50637) *
               C7952 +
           (C356 * C49749 + C357 * C50911 + C358 * C49742 + C359 * C50637) *
               C7953) *
              C50696 * C50680 * C115 -
          (((C117 * C311 + C50822 * C322) * C50637 +
            (C117 * C292 + C50822 * C312) * C49742 + C359 * C50911 +
            C358 * C49749) *
               C7953 +
           (C649 * C50637 + C648 * C49742 + C348 * C50911 + C349 * C49749) *
               C7952 +
           (C177 * C50637 + C178 * C49742 + C176 * C50911 + C175 * C49749) *
               C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C278 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C279 +
           (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            ((C117 * C3417 + C50822 * C3423) * C49749 +
             (C117 * C3422 + C50822 * C3426) * C50911 + C8132 * C49742 +
             C8133 * C50637) *
                C7953) *
               C50696 * C280) *
              C281 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C279 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C278 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C49742 + C8133 * C50911 +
             C8132 * C49749) *
                C7953 +
            (C8130 + C8129 + C8128 + C8127) * C7952 + C8138 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C50972 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50973 +
           ((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50696 * C1331) *
              C50920 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50973 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C50972 -
           ((C117 * C311 + C50822 * C322) * C109 +
            (C117 * C292 + C50822 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50796 * C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C50972 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50973 +
           (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C50696 * C1331) *
              C50920 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50973 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C50972 -
           (((C117 * C3418 + C50822 * C3424) * C50637 +
             (C117 * C3415 + C50822 * C3419) * C49742 + C8133 * C50911 +
             C8132 * C49749) *
                C7953 +
            (C8130 + C8129 + C8128 + C8127) * C7952 + C8138 * C7951) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50929 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50972 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50760 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50929) *
              C50973 +
          (((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C50929 -
           ((C117 * C1566 + C50822 * C1574) * C109 +
            (C117 * C1562 + C50822 * C1567) * C121 +
            (C117 * C1568 + C50822 * C1575) * C108 +
            (C117 * C1563 + C50822 * C1569) * C120 +
            (C117 * C1570 + C50822 * C1576) * C107 +
            (C117 * C1564 + C50822 * C1571) * C119 +
            (C117 * C1572 + C50822 * C1577) * C106 +
            (C117 * C1565 + C50822 * C1573) * C118) *
               C50796 * C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50929 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50972 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50760 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50929) *
              C50973 +
          ((C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C50929 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C49742 +
             (C117 * C9729 + C50822 * C9732) * C50911 +
             (C117 * C9726 + C50822 * C9730) * C49749) *
                C7953 +
            (C9740 + C9739 + C9746 + C9745) * C7952 + C9744 * C7951) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C50696 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
           (C117 * C286 + C50822 * C300) * C118) *
              C50796 * C50696 * C1097 +
          ((C117 * C287 + C50822 * C301) * C118 +
           (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50796 * C50696 * C1098 -
          ((C117 * C1105 + C50822 * C1113) * C109 +
           (C117 * C1101 + C50822 * C1106) * C121 +
           (C117 * C1107 + C50822 * C1114) * C108 +
           (C117 * C1102 + C50822 * C1108) * C120 +
           (C117 * C1109 + C50822 * C1115) * C107 +
           (C117 * C1103 + C50822 * C1110) * C119 +
           (C117 * C1111 + C50822 * C1116) * C106 +
           (C117 * C1104 + C50822 * C1112) * C118) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50732) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50732 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50696 * C1025 -
           ((C117 * C640 + C50822 * C642) * C109 +
            (C117 * C639 + C50822 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C458 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C459) *
              C1025 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C458 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C457 -
           ((C117 * C1219 + C50822 * C1227) * C109 +
            (C117 * C1215 + C50822 * C1220) * C121 +
            (C117 * C1221 + C50822 * C1228) * C108 +
            (C117 * C1216 + C50822 * C1222) * C120 +
            (C117 * C1223 + C50822 * C1229) * C107 +
            (C117 * C1217 + C50822 * C1224) * C119 +
            (C117 * C1225 + C50822 * C1230) * C106 +
            (C117 * C1218 + C50822 * C1226) * C118) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C1025 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50732) *
              C1027 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50732 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50696 * C1025 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C49742 + C2487 * C50911 +
             C2486 * C49749) *
                C7953 +
            (C8444 + C8443 + C8442 + C8441) * C7952 +
            (C8440 + C8439 + C8438 + C8437) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
              C50696 * C1096 -
          (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
           (C8106 + C8105 + C8104 + C8103) * C7951) *
              C50696 * C1097 +
          (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
           (C9070 + C9071 + C9064 + C9065) * C7953) *
              C50696 * C1098 -
          (((C117 * C9052 + C50822 * C9056) * C50637 +
            (C117 * C9050 + C50822 * C9053) * C49742 +
            (C117 * C9054 + C50822 * C9057) * C50911 +
            (C117 * C9051 + C50822 * C9055) * C49749) *
               C7953 +
           (C9065 + C9064 + C9071 + C9070) * C7952 + C9069 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C457 -
           ((C8785 + C8786 + C8787 + C8788) * C7953 +
            (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C9226 + C9227 + C9228 + C9229) * C7952 +
            (C9238 + C9239 + C9234 + C9235) * C7953) *
               C459) *
              C1025 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            ((C117 * C4097 + C50822 * C4103) * C49749 +
             (C117 * C4102 + C50822 * C4106) * C50911 + C8805 * C49742 +
             C8806 * C50637) *
                C7953) *
               C458 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C457 -
           (((C117 * C9219 + C50822 * C9223) * C50637 +
             (C117 * C9217 + C50822 * C9220) * C49742 +
             (C117 * C9221 + C50822 * C9224) * C50911 +
             (C117 * C9218 + C50822 * C9222) * C49749) *
                C7953 +
            (C9235 + C9234 + C9239 + C9238) * C7952 +
            (C9229 + C9228 + C9227 + C9226) * C7951) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C118 +
             (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50796 * C50929 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
             (C117 * C463 + C50822 * C477) * C118) *
                C50796 * C50760) *
               C1025 +
           (((C117 * C889 + C50822 * C894) * C118 +
             (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50796 * C50760 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
             (C117 * C286 + C50822 * C300) * C118) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50796 * C50760 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50796 * C50929) *
               C1025 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50796 * C50929 -
            ((C117 * C902 + C50822 * C908) * C109 +
             (C117 * C893 + C50822 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C49749 +
              (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
              C172 * C50637) *
                 C7951 +
             (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
                C50929 -
            ((C8785 + C8786 + C8787 + C8788) * C7953 +
             (C8789 + C8790 + C8791 + C8792) * C7952 +
             (C529 * C50637 + C530 * C49742 +
              (C117 * C476 + C50822 * C493) * C50911 +
              (C117 * C463 + C50822 * C477) * C49749) *
                 C7951) *
                C50760) *
               C1025 +
           (((C8792 + C8791 + C8790 + C8789) * C7951 +
             (C8788 + C8787 + C8786 + C8785) * C7952 +
             ((C117 * C4097 + C50822 * C4103) * C49749 +
              (C117 * C4102 + C50822 * C4106) * C50911 + C8805 * C49742 +
              C8806 * C50637) *
                 C7953) *
                C50760 -
            (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
             (C8106 + C8105 + C8104 + C8103) * C7951) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                 C7951 +
             (C8797 + C8798 + C8799 + C8800) * C7952 +
             (C8801 + C8802 + C8803 + C8804) * C7953) *
                C50760 -
            (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
             (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                 C7951) *
                C50929) *
               C1025 +
           (((C8119 + C8120 + C8121 + C8122) * C7951 +
             (C8123 + C8124 + C8125 + C8126) * C7952 +
             (C8127 + C8128 + C8129 + C8130) * C7953) *
                C50929 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C49742 + C8806 * C50911 +
              C8805 * C49749) *
                 C7953 +
             (C8804 + C8803 + C8802 + C8801) * C7952 +
             (C8800 + C8799 + C8798 + C8797) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50696 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50696 * C50732) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50796 * C50696 * C50732 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C50696 * C1025 -
           ((C117 * C640 + C50822 * C642) * C109 +
            (C117 * C639 + C50822 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C50696 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
           (C117 * C286 + C50822 * C300) * C118) *
              C50796 * C50696 * C1097 +
          ((C117 * C287 + C50822 * C301) * C118 +
           (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50796 * C50696 * C1098 -
          ((C117 * C1105 + C50822 * C1113) * C109 +
           (C117 * C1101 + C50822 * C1106) * C121 +
           (C117 * C1107 + C50822 * C1114) * C108 +
           (C117 * C1102 + C50822 * C1108) * C120 +
           (C117 * C1109 + C50822 * C1115) * C107 +
           (C117 * C1103 + C50822 * C1110) * C119 +
           (C117 * C1111 + C50822 * C1116) * C106 +
           (C117 * C1104 + C50822 * C1112) * C118) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50696 * C1025 -
           ((C8111 + C8112 + C8113 + C8114) * C7953 +
            (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50696 * C50732) *
              C1027 +
          (((C8119 + C8120 + C8121 + C8122) * C7951 +
            (C8123 + C8124 + C8125 + C8126) * C7952 +
            (C8127 + C8128 + C8129 + C8130) * C7953) *
               C50696 * C50732 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C50696 * C1025 -
           (((C117 * C1105 + C50822 * C1113) * C50637 +
             (C117 * C1101 + C50822 * C1106) * C49742 + C2487 * C50911 +
             C2486 * C49749) *
                C7953 +
            (C8444 + C8443 + C8442 + C8441) * C7952 +
            (C8440 + C8439 + C8438 + C8437) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
              C50696 * C1096 -
          (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
           (C8106 + C8105 + C8104 + C8103) * C7951) *
              C50696 * C1097 +
          (C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
           (C9070 + C9071 + C9064 + C9065) * C7953) *
              C50696 * C1098 -
          (((C117 * C9052 + C50822 * C9056) * C50637 +
            (C117 * C9050 + C50822 * C9053) * C49742 +
            (C117 * C9054 + C50822 * C9057) * C50911 +
            (C117 * C9051 + C50822 * C9055) * C49749) *
               C7953 +
           (C9065 + C9064 + C9071 + C9070) * C7952 + C9069 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C118 +
             (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50796 * C1676 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
             (C117 * C463 + C50822 * C477) * C118) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C889 + C50822 * C894) * C118 +
             (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50796 * C50760 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
             (C117 * C286 + C50822 * C300) * C118) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50796 * C50760 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50796 * C1676) *
               C50928 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50796 * C1676 -
            ((C117 * C902 + C50822 * C908) * C109 +
             (C117 * C893 + C50822 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C49749 +
              (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
              C172 * C50637) *
                 C7951 +
             (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
                C1676 -
            (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
             (C529 * C50637 + C530 * C49742 +
              (C117 * C476 + C50822 * C493) * C50911 +
              (C117 * C463 + C50822 * C477) * C49749) *
                 C7951) *
                C50760) *
               C50928 +
           (((C8792 + C8791 + C8790 + C8789) * C7951 +
             (C8788 + C8787 + C8786 + C8785) * C7952 +
             (C9745 + C9746 + C9739 + C9740) * C7953) *
                C50760 -
            (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
             (C8106 + C8105 + C8104 + C8103) * C7951) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                 C7951 +
             (C8797 + C8798 + C8799 + C8800) * C7952 +
             (C8801 + C8802 + C8803 + C8804) * C7953) *
                C50760 -
            (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
             (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                 C7951) *
                C1676) *
               C50928 +
           (((C8119 + C8120 + C8121 + C8122) * C7951 +
             (C8123 + C8124 + C8125 + C8126) * C7952 +
             (C8127 + C8128 + C8129 + C8130) * C7953) *
                C1676 -
            (((C117 * C4098 + C50822 * C4104) * C50637 +
              (C117 * C4095 + C50822 * C4099) * C49742 + C8806 * C50911 +
              C8805 * C49749) *
                 C7953 +
             (C8804 + C8803 + C8802 + C8801) * C7952 +
             (C8800 + C8799 + C8798 + C8797) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50974 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50975 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C2092) *
              C50928 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50975 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C50974 -
           ((C117 * C1219 + C50822 * C1227) * C109 +
            (C117 * C1215 + C50822 * C1220) * C121 +
            (C117 * C1221 + C50822 * C1228) * C108 +
            (C117 * C1216 + C50822 * C1222) * C120 +
            (C117 * C1223 + C50822 * C1229) * C107 +
            (C117 * C1217 + C50822 * C1224) * C119 +
            (C117 * C1225 + C50822 * C1230) * C106 +
            (C117 * C1218 + C50822 * C1226) * C118) *
               C50796 * C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50974 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C9226 + C9227 + C9228 + C9229) * C7952 +
            (C9238 + C9239 + C9234 + C9235) * C7953) *
               C2092) *
              C50928 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50975 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C50974 -
           (((C117 * C9219 + C50822 * C9223) * C50637 +
             (C117 * C9217 + C50822 * C9220) * C49742 +
             (C117 * C9221 + C50822 * C9224) * C50911 +
             (C117 * C9218 + C50822 * C9222) * C49749) *
                C7953 +
            (C9235 + C9234 + C9239 + C9238) * C7952 +
            (C9229 + C9228 + C9227 + C9226) * C7951) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C278 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50760 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C1676) *
              C279 +
          (((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C1676 -
           ((C117 * C1566 + C50822 * C1574) * C109 +
            (C117 * C1562 + C50822 * C1567) * C121 +
            (C117 * C1568 + C50822 * C1575) * C108 +
            (C117 * C1563 + C50822 * C1569) * C120 +
            (C117 * C1570 + C50822 * C1576) * C107 +
            (C117 * C1564 + C50822 * C1571) * C119 +
            (C117 * C1572 + C50822 * C1577) * C106 +
            (C117 * C1565 + C50822 * C1573) * C118) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50680 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50760 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C1676 -
           ((C117 * C750 + C50822 * C752) * C109 +
            (C117 * C749 + C50822 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50822 * C129) * C118 +
           (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50796 * C1842 -
          (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 + C529 * C107 +
           C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
           (C117 * C463 + C50822 * C477) * C118) *
              C50796 * C1843 +
          ((C117 * C464 + C50822 * C478) * C118 +
           (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
           C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
              C50796 * C1844 -
          ((C117 * C1850 + C50822 * C1858) * C109 +
           (C117 * C1846 + C50822 * C1851) * C121 +
           (C117 * C1852 + C50822 * C1859) * C108 +
           (C117 * C1847 + C50822 * C1853) * C120 +
           (C117 * C1854 + C50822 * C1860) * C107 +
           (C117 * C1848 + C50822 * C1855) * C119 +
           (C117 * C1856 + C50822 * C1861) * C106 +
           (C117 * C1849 + C50822 * C1857) * C118) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C8797 + C8798 + C8799 + C8800) * C7952 +
            (C8801 + C8802 + C8803 + C8804) * C7953) *
               C50760 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C1676 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C49742 + C3169 * C50911 +
             C3168 * C49749) *
                C7953 +
            (C927 * C50637 + C926 * C49742 + C925 * C50911 + C924 * C49749) *
                C7952 +
            (C525 * C50637 + C526 * C49742 + C527 * C50911 + C528 * C49749) *
                C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C278 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50760 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C1676) *
              C279 +
          ((C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C1676 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C49742 +
             (C117 * C9729 + C50822 * C9732) * C50911 +
             (C117 * C9726 + C50822 * C9730) * C49749) *
                C7953 +
            (C9740 + C9739 + C9746 + C9745) * C7952 + C9744 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C49749 +
            (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
            C172 * C50637) *
               C7951 +
           (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
              C1842 -
          (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
           (C529 * C50637 + C530 * C49742 +
            (C117 * C476 + C50822 * C493) * C50911 +
            (C117 * C463 + C50822 * C477) * C49749) *
               C7951) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C49749 +
            (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
            C532 * C50637) *
               C7951 +
           (C9226 + C9227 + C9228 + C9229) * C7952 +
           (C9238 + C9239 + C9234 + C9235) * C7953) *
              C1844 -
          (((C117 * C10138 + C50822 * C10142) * C50637 +
            (C117 * C10136 + C50822 * C10139) * C49742 +
            (C117 * C10140 + C50822 * C10143) * C50911 +
            (C117 * C10137 + C50822 * C10141) * C49749) *
               C7953 +
           ((C117 * C4514 + C50822 * C4519) * C50637 +
            (C117 * C4510 + C50822 * C4515) * C49742 +
            (C117 * C4516 + C50822 * C4520) * C50911 +
            (C117 * C4511 + C50822 * C4517) * C49749) *
               C7952 +
           ((C117 * C1854 + C50822 * C1860) * C50637 +
            (C117 * C1848 + C50822 * C1855) * C49742 +
            (C117 * C1856 + C50822 * C1861) * C50911 +
            (C117 * C1849 + C50822 * C1857) * C49749) *
               C7951) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C50974 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50975 +
           ((C117 * C464 + C50822 * C478) * C118 +
            (C117 * C479 + C50822 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50796 * C2092) *
              C50680 * C50920 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50975 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C50974 -
           ((C117 * C488 + C50822 * C499) * C109 +
            (C117 * C469 + C50822 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50796 * C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C50974 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C49749 +
             (C117 * C479 + C50822 * C494) * C50911 + C531 * C49742 +
             C532 * C50637) *
                C7951 +
            (C9226 + C9227 + C9228 + C9229) * C7952 +
            (C9238 + C9239 + C9234 + C9235) * C7953) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C8797 + C8798 + C8799 + C8800) * C7952 +
            (C8801 + C8802 + C8803 + C8804) * C7953) *
               C50975 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C50974 -
           (((C117 * C3588 + C50822 * C3594) * C50637 +
             (C117 * C3585 + C50822 * C3589) * C49742 + C8290 * C50911 +
             C8289 * C49749) *
                C7953 +
            (C2649 * C50637 + C2648 * C49742 + C2647 * C50911 +
             C2646 * C49749) *
                C7952 +
            (C534 * C50637 + C533 * C49742 + C532 * C50911 + C531 * C49749) *
                C7951) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C50680 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50796 * C50760 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50796 * C1676 -
           ((C117 * C750 + C50822 * C752) * C109 +
            (C117 * C749 + C50822 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C118 +
            (C117 * C130 + C50822 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50796 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50822 * C493) * C106 +
            (C117 * C463 + C50822 * C477) * C118) *
               C50796 * C50760) *
              C278 +
          (((C117 * C889 + C50822 * C894) * C118 +
            (C117 * C895 + C50822 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50796 * C50760 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50822 * C316) * C106 +
            (C117 * C286 + C50822 * C300) * C118) *
               C50796 * C1676) *
              C279 +
          (((C117 * C287 + C50822 * C301) * C118 +
            (C117 * C302 + C50822 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50796 * C1676 -
           ((C117 * C1566 + C50822 * C1574) * C109 +
            (C117 * C1562 + C50822 * C1567) * C121 +
            (C117 * C1568 + C50822 * C1575) * C108 +
            (C117 * C1563 + C50822 * C1569) * C120 +
            (C117 * C1570 + C50822 * C1576) * C107 +
            (C117 * C1564 + C50822 * C1571) * C119 +
            (C117 * C1572 + C50822 * C1577) * C106 +
            (C117 * C1565 + C50822 * C1573) * C118) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C49749 + C529 * C50911 + C528 * C49742 + C527 * C50637) *
                C7951 +
            (C8797 + C8798 + C8799 + C8800) * C7952 +
            (C8801 + C8802 + C8803 + C8804) * C7953) *
               C50760 -
           (C8138 * C7953 + (C8122 + C8121 + C8120 + C8119) * C7952 +
            (C174 * C50637 + C173 * C49742 + C172 * C50911 + C171 * C49749) *
                C7951) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C49749 + C174 * C50911 + C175 * C49742 + C176 * C50637) *
                C7951 +
            (C8437 + C8438 + C8439 + C8440) * C7952 +
            (C8441 + C8442 + C8443 + C8444) * C7953) *
               C1676 -
           (((C117 * C1566 + C50822 * C1574) * C50637 +
             (C117 * C1562 + C50822 * C1567) * C49742 + C3169 * C50911 +
             C3168 * C49749) *
                C7953 +
            (C927 * C50637 + C926 * C49742 + C925 * C50911 + C924 * C49749) *
                C7952 +
            (C525 * C50637 + C526 * C49742 + C527 * C50911 + C528 * C49749) *
                C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C49749 +
             (C117 * C130 + C50822 * C143) * C50911 + C171 * C49742 +
             C172 * C50637) *
                C7951 +
            (C8103 + C8104 + C8105 + C8106) * C7952 + C8137 * C7953) *
               C1676 -
           (C9744 * C7953 + (C8789 + C8790 + C8791 + C8792) * C7952 +
            (C529 * C50637 + C530 * C49742 +
             (C117 * C476 + C50822 * C493) * C50911 +
             (C117 * C463 + C50822 * C477) * C49749) *
                C7951) *
               C50760) *
              C278 +
          (((C8792 + C8791 + C8790 + C8789) * C7951 +
            (C8788 + C8787 + C8786 + C8785) * C7952 +
            (C9745 + C9746 + C9739 + C9740) * C7953) *
               C50760 -
           (C9069 * C7953 + (C8110 + C8109 + C8108 + C8107) * C7952 +
            (C8106 + C8105 + C8104 + C8103) * C7951) *
               C1676) *
              C279 +
          ((C8137 * C7951 + (C8114 + C8113 + C8112 + C8111) * C7952 +
            (C9070 + C9071 + C9064 + C9065) * C7953) *
               C1676 -
           (((C117 * C9727 + C50822 * C9731) * C50637 +
             (C117 * C9725 + C50822 * C9728) * C49742 +
             (C117 * C9729 + C50822 * C9732) * C50911 +
             (C117 * C9726 + C50822 * C9730) * C49749) *
                C7953 +
            (C9740 + C9739 + C9746 + C9745) * C7952 + C9744 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C50928 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50732) *
              C50970 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50732 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50696 * C50928 -
           (((C117 * C311 + C50822 * C322) * C2291 +
             (C117 * C292 + C50822 * C312) * C2296 + C359 * C2290 +
             C358 * C2295 + C357 * C2289 + C356 * C2294) *
                C50810 +
            (C2801 + C2800 + C2799 + C2798 + C2797 + C2796) * C50939) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C50928 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C50732) *
              C50970 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50732 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C50928) *
              C50971 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50696 * C50928 -
           (((C117 * C3418 + C50822 * C3424) * C50632 +
             (C117 * C3415 + C50822 * C3419) * C10701) *
                C10700 +
            (C11022 + C11021) * C10699 + (C11020 + C11019) * C10698 +
            (C11018 + C11017) * C10697) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C2294 +
              (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
              C172 * C2290 + C173 * C2296 + C174 * C2291) *
                 C50939 +
             (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                C50929 -
            ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
             (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
              (C117 * C476 + C50822 * C493) * C2289 +
              (C117 * C463 + C50822 * C477) * C2294) *
                 C50939) *
                C50760) *
               C50928 +
           (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
             ((C117 * C1565 + C50822 * C1573) * C2294 +
              (C117 * C1572 + C50822 * C1577) * C2289 + C3166 * C2295 +
              C3167 * C2290 + C3168 * C2296 + C3169 * C2291) *
                 C50810) *
                C50760 -
            ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
             (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
              C526 * C2296 + C525 * C2291) *
                 C50939 +
             (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                C50760 -
            ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
             (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
              C172 * C2289 + C171 * C2294) *
                 C50939) *
                C50929) *
               C50928 +
           (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
             (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                C50929 -
            (((C117 * C1566 + C50822 * C1574) * C2291 +
              (C117 * C1562 + C50822 * C1567) * C2296 + C3169 * C2290 +
              C3168 * C2295 + C3167 * C2289 + C3166 * C2294) *
                 C50810 +
             (C3163 + C3162 + C3161 + C3160 + C3159 + C3158) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C10701 +
              (C117 * C130 + C50822 * C143) * C50632) *
                 C10697 +
             (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
                C50929 -
            ((C11251 + C11252) * C10700 + (C11253 + C11254) * C10699 +
             (C11255 + C11256) * C10698 +
             ((C117 * C476 + C50822 * C493) * C50632 +
              (C117 * C463 + C50822 * C477) * C10701) *
                 C10697) *
                C50760) *
               C50928 +
           (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
             (C11252 + C11251) * C10699 +
             ((C117 * C9726 + C50822 * C9730) * C10701 +
              (C117 * C9729 + C50822 * C9732) * C50632) *
                 C10700) *
                C50760 -
            ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
             (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
                C50929) *
               C50732) *
              C281 +
          ((((C530 * C10701 + C529 * C50632) * C10697 +
             (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
             (C11261 + C11262) * C10700) *
                C50760 -
            (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
             (C172 * C50632 + C171 * C10701) * C10697) *
                C50929) *
               C50928 +
           (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
             (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
                C50929 -
            (((C117 * C9727 + C50822 * C9731) * C50632 +
              (C117 * C9725 + C50822 * C9728) * C10701) *
                 C10700 +
             (C11262 + C11261) * C10699 + (C11260 + C11259) * C10698 +
             (C11258 + C11257) * C10697) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C278 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C279 +
           ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            ((C117 * C1104 + C50822 * C1112) * C2294 +
             (C117 * C1111 + C50822 * C1116) * C2289 + C2484 * C2295 +
             C2485 * C2290 + C2486 * C2296 + C2487 * C2291) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C279 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C278 -
           (((C117 * C1105 + C50822 * C1113) * C2291 +
             (C117 * C1101 + C50822 * C1106) * C2296 + C2487 * C2290 +
             C2486 * C2295 + C2485 * C2289 + C2484 * C2294) *
                C50810 +
            (C2479 + C2478 + C2477 + C2476 + C2475 + C2474) * C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           ((C117 * C286 + C50822 * C300) * C2294 +
            (C117 * C299 + C50822 * C316) * C2289 + C353 * C2295 +
            C352 * C2290 + C351 * C2296 + C350 * C2291) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C348 * C2291 + C349 * C2296 + C350 * C2290 + C351 * C2295 +
            C352 * C2289 + C353 * C2294) *
               C50810 +
           (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
            C172 * C2289 + C171 * C2294) *
               C50939) *
              C50696 * C50680 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
            C178 * C2296 + C177 * C2291) *
               C50939 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C2290 +
            C648 * C2296 + C649 * C2291) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C117 * C640 + C50822 * C642) * C2291 +
            (C117 * C639 + C50822 * C641) * C2296 + C649 * C2290 +
            C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C50810 +
           (C180 * C2291 + C179 * C2296 + C177 * C2290 + C178 * C2295 +
            C176 * C2289 + C175 * C2294) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C457 -
           ((C925 * C2291 + C924 * C2296 + C923 * C2290 + C922 * C2295 +
             (C117 * C895 + C50822 * C904) * C2289 +
             (C117 * C889 + C50822 * C894) * C2294) *
                C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            ((C117 * C1218 + C50822 * C1226) * C2294 +
             (C117 * C1225 + C50822 * C1230) * C2289 + C2646 * C2295 +
             C2647 * C2290 + C2648 * C2296 + C2649 * C2291) *
                C50810) *
               C459) *
              C50680 * C281 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C2290 +
             C926 * C2296 + C927 * C2291) *
                C50810) *
               C458 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C457 -
           (((C117 * C1219 + C50822 * C1227) * C2291 +
             (C117 * C1215 + C50822 * C1220) * C2296 + C2649 * C2290 +
             C2648 * C2295 + C2647 * C2289 + C2646 * C2294) *
                C50810 +
            (C536 * C2291 + C535 * C2296 + C534 * C2290 + C533 * C2295 +
             C532 * C2289 + C531 * C2294) *
                C50939) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C2480 * C10701 + C2481 * C50632) * C10698 +
           (C2483 * C10701 + C2482 * C50632) * C10699 +
           (C3436 * C10701 + C3437 * C50632) * C10700) *
              C50696 * C50680 * C113 -
          ((C2485 * C50632 + C2484 * C10701) * C10700 +
           (C355 * C50632 + C354 * C10701) * C10699 +
           (C352 * C50632 + C353 * C10701) * C10698 +
           (C172 * C50632 + C171 * C10701) * C10697) *
              C50696 * C50680 * C114 +
          ((C173 * C10701 + C174 * C50632) * C10697 +
           (C351 * C10701 + C350 * C50632) * C10698 +
           (C356 * C10701 + C357 * C50632) * C10699 +
           (C2486 * C10701 + C2487 * C50632) * C10700) *
              C50696 * C50680 * C115 -
          (((C117 * C1105 + C50822 * C1113) * C50632 +
            (C117 * C1101 + C50822 * C1106) * C10701) *
               C10700 +
           (C359 * C50632 + C358 * C10701) * C10699 +
           (C348 * C50632 + C349 * C10701) * C10698 +
           (C176 * C50632 + C175 * C10701) * C10697) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C278 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C279 +
           (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            ((C117 * C9051 + C50822 * C9055) * C10701 +
             (C117 * C9054 + C50822 * C9057) * C50632) *
                C10700) *
               C50696 * C280) *
              C281 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C279 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C278 -
           (((C117 * C9052 + C50822 * C9056) * C50632 +
             (C117 * C9050 + C50822 * C9053) * C10701) *
                C10700 +
            (C10816 + C10815) * C10699 + C10819 * C10698 + C10820 * C10697) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C457 -
           ((C9743 * C50632 + C9742 * C10701) * C10700 +
            (C4117 * C50632 + C4116 * C10701) * C10699 +
            (C3164 * C50632 + C3165 * C10701) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C3606 * C10701 + C3607 * C50632) * C10698 +
            (C9236 * C10701 + C9237 * C50632) * C10699 +
            ((C117 * C9218 + C50822 * C9222) * C10701 +
             (C117 * C9221 + C50822 * C9224) * C50632) *
                C10700) *
               C459) *
              C50680 * C281 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C922 * C10701 + C923 * C50632) * C10698 +
            (C3166 * C10701 + C3167 * C50632) * C10699 +
            (C8805 * C10701 + C8806 * C50632) * C10700) *
               C458 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C457 -
           (((C117 * C9219 + C50822 * C9223) * C50632 +
             (C117 * C9217 + C50822 * C9220) * C10701) *
                C10700 +
            (C8290 * C50632 + C8289 * C10701) * C10699 +
            (C2647 * C50632 + C2646 * C10701) * C10698 +
            (C532 * C50632 + C531 * C10701) * C10697) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50929 -
           ((C925 * C2291 + C924 * C2296 + C923 * C2290 + C922 * C2295 +
             (C117 * C895 + C50822 * C904) * C2289 +
             (C117 * C889 + C50822 * C894) * C2294) *
                C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C2290 +
             C926 * C2296 + C927 * C2291) *
                C50810) *
               C50760 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50929 -
           (((C117 * C902 + C50822 * C908) * C2291 +
             (C117 * C893 + C50822 * C903) * C2296 + C927 * C2290 +
             C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C50810 +
            (C759 * C2291 + C758 * C2296 + C525 * C2290 + C526 * C2295 +
             C527 * C2289 + C528 * C2294) *
                C50939) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50929 -
           ((C9743 * C50632 + C9742 * C10701) * C10700 +
            (C4117 * C50632 + C4116 * C10701) * C10699 +
            (C3164 * C50632 + C3165 * C10701) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50680 * C50970 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C922 * C10701 + C923 * C50632) * C10698 +
            (C3166 * C10701 + C3167 * C50632) * C10699 +
            (C8805 * C10701 + C8806 * C50632) * C10700) *
               C50760 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50929) *
              C50680 * C50971 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50929 -
           (((C117 * C4098 + C50822 * C4104) * C50632 +
             (C117 * C4095 + C50822 * C4099) * C10701) *
                C10700 +
            (C3169 * C50632 + C3168 * C10701) * C10699 +
            (C925 * C50632 + C924 * C10701) * C10698 +
            (C527 * C50632 + C528 * C10701) * C10697) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           ((C117 * C286 + C50822 * C300) * C2294 +
            (C117 * C299 + C50822 * C316) * C2289 + C353 * C2295 +
            C352 * C2290 + C351 * C2296 + C350 * C2291) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C348 * C2291 + C349 * C2296 + C350 * C2290 + C351 * C2295 +
            C352 * C2289 + C353 * C2294) *
               C50810 +
           (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
            C172 * C2289 + C171 * C2294) *
               C50939) *
              C50696 * C50680 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
            C178 * C2296 + C177 * C2291) *
               C50939 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C2290 +
            C648 * C2296 + C649 * C2291) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C117 * C640 + C50822 * C642) * C2291 +
            (C117 * C639 + C50822 * C641) * C2296 + C649 * C2290 +
            C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C50810 +
           (C180 * C2291 + C179 * C2296 + C177 * C2290 + C178 * C2295 +
            C176 * C2289 + C175 * C2294) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C278 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C279 +
           ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            ((C117 * C1104 + C50822 * C1112) * C2294 +
             (C117 * C1111 + C50822 * C1116) * C2289 + C2484 * C2295 +
             C2485 * C2290 + C2486 * C2296 + C2487 * C2291) *
                C50810) *
               C50696 * C280) *
              C281 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C279 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C278 -
           (((C117 * C1105 + C50822 * C1113) * C2291 +
             (C117 * C1101 + C50822 * C1106) * C2296 + C2487 * C2290 +
             C2486 * C2295 + C2485 * C2289 + C2484 * C2294) *
                C50810 +
            (C2479 + C2478 + C2477 + C2476 + C2475 + C2474) * C50939) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C2480 * C10701 + C2481 * C50632) * C10698 +
           (C2483 * C10701 + C2482 * C50632) * C10699 +
           (C3436 * C10701 + C3437 * C50632) * C10700) *
              C50696 * C50680 * C113 -
          ((C2485 * C50632 + C2484 * C10701) * C10700 +
           (C355 * C50632 + C354 * C10701) * C10699 +
           (C352 * C50632 + C353 * C10701) * C10698 +
           (C172 * C50632 + C171 * C10701) * C10697) *
              C50696 * C50680 * C114 +
          ((C173 * C10701 + C174 * C50632) * C10697 +
           (C351 * C10701 + C350 * C50632) * C10698 +
           (C356 * C10701 + C357 * C50632) * C10699 +
           (C2486 * C10701 + C2487 * C50632) * C10700) *
              C50696 * C50680 * C115 -
          (((C117 * C1105 + C50822 * C1113) * C50632 +
            (C117 * C1101 + C50822 * C1106) * C10701) *
               C10700 +
           (C359 * C50632 + C358 * C10701) * C10699 +
           (C348 * C50632 + C349 * C10701) * C10698 +
           (C176 * C50632 + C175 * C10701) * C10697) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C278 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C279 +
           (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            ((C117 * C9051 + C50822 * C9055) * C10701 +
             (C117 * C9054 + C50822 * C9057) * C50632) *
                C10700) *
               C50696 * C280) *
              C281 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C279 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C278 -
           (((C117 * C9052 + C50822 * C9056) * C50632 +
             (C117 * C9050 + C50822 * C9053) * C10701) *
                C10700 +
            (C10816 + C10815) * C10699 + C10819 * C10698 + C10820 * C10697) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C50972 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50973 +
           ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C50696 * C1331) *
              C50920 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50973 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C50972 -
           (((C117 * C1105 + C50822 * C1113) * C2291 +
             (C117 * C1101 + C50822 * C1106) * C2296 + C2487 * C2290 +
             C2486 * C2295 + C2485 * C2289 + C2484 * C2294) *
                C50810 +
            (C2479 + C2478 + C2477 + C2476 + C2475 + C2474) * C50939) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C50972 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C50696 * C50973 +
           (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C50696 * C1331) *
              C50920 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50973 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C50972 -
           (((C117 * C9052 + C50822 * C9056) * C50632 +
             (C117 * C9050 + C50822 * C9053) * C10701) *
                C10700 +
            (C10816 + C10815) * C10699 + C10819 * C10698 + C10820 * C10697) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50929 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50972 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50760 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50929) *
              C50973 +
          (((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C50929 -
           (((C117 * C4098 + C50822 * C4104) * C2291 +
             (C117 * C4095 + C50822 * C4099) * C2296 +
             (C117 * C4100 + C50822 * C4105) * C2290 +
             (C117 * C4096 + C50822 * C4101) * C2295 +
             (C117 * C4102 + C50822 * C4106) * C2289 +
             (C117 * C4097 + C50822 * C4103) * C2294) *
                C50810 +
            (C4115 + C4114 + C4113 + C4112 + C4119 + C4118) * C50939) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50929 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50972 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50760 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C50929) *
              C50973 +
          ((C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C50929 -
           (((C117 * C11881 + C50822 * C11883) * C50632 +
             (C117 * C11880 + C50822 * C11882) * C10701) *
                C10700 +
            (C11894 + C11893) * C10699 + C11885 * C10698 + C11886 * C10697) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
              C50696 * C1096 -
          ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
           (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
              C50696 * C1097 +
          ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
           (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
              C50696 * C1098 -
          (((C117 * C3418 + C50822 * C3424) * C2291 +
            (C117 * C3415 + C50822 * C3419) * C2296 +
            (C117 * C3420 + C50822 * C3425) * C2290 +
            (C117 * C3416 + C50822 * C3421) * C2295 +
            (C117 * C3422 + C50822 * C3426) * C2289 +
            (C117 * C3417 + C50822 * C3423) * C2294) *
               C50810 +
           (C3435 + C3434 + C3433 + C3432 + C3439 + C3438) * C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C1025 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50732) *
              C1027 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50732 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50696 * C1025 -
           (((C117 * C311 + C50822 * C322) * C2291 +
             (C117 * C292 + C50822 * C312) * C2296 + C359 * C2290 +
             C358 * C2295 + C357 * C2289 + C356 * C2294) *
                C50810 +
            (C2801 + C2800 + C2799 + C2798 + C2797 + C2796) * C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C457 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
               C459) *
              C1025 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            ((C117 * C1565 + C50822 * C1573) * C2294 +
             (C117 * C1572 + C50822 * C1577) * C2289 + C3166 * C2295 +
             C3167 * C2290 + C3168 * C2296 + C3169 * C2291) *
                C50810) *
               C458 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C457 -
           (((C117 * C3588 + C50822 * C3594) * C2291 +
             (C117 * C3585 + C50822 * C3589) * C2296 +
             (C117 * C3590 + C50822 * C3595) * C2290 +
             (C117 * C3586 + C50822 * C3591) * C2295 +
             (C117 * C3592 + C50822 * C3596) * C2289 +
             (C117 * C3587 + C50822 * C3593) * C2294) *
                C50810 +
            (C3605 + C3604 + C3603 + C3602 + C3609 + C3608) * C50939) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C1025 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C50732) *
              C1027 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50732 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50696 * C1025 -
           (((C117 * C3418 + C50822 * C3424) * C50632 +
             (C117 * C3415 + C50822 * C3419) * C10701) *
                C10700 +
            (C11022 + C11021) * C10699 + (C11020 + C11019) * C10698 +
            (C11018 + C11017) * C10697) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
              C50696 * C1096 -
          (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
           (C10802 + C10801) * C10697) *
              C50696 * C1097 +
          (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
           (C11439 + C11440) * C10700) *
              C50696 * C1098 -
          (((C117 * C11427 + C50822 * C11429) * C50632 +
            (C117 * C11426 + C50822 * C11428) * C10701) *
               C10700 +
           (C11440 + C11439) * C10699 + C11431 * C10698 + C11432 * C10697) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C457 -
           ((C11251 + C11252) * C10700 + (C11253 + C11254) * C10699 +
            (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C458 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
            (C11553 + C11554) * C10700) *
               C459) *
              C1025 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 +
            ((C117 * C9726 + C50822 * C9730) * C10701 +
             (C117 * C9729 + C50822 * C9732) * C50632) *
                C10700) *
               C458 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C457 -
           (((C117 * C11539 + C50822 * C11541) * C50632 +
             (C117 * C11538 + C50822 * C11540) * C10701) *
                C10700 +
            (C11554 + C11553) * C10699 + (C11546 + C11545) * C10698 +
            (C11544 + C11543) * C10697) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C2294 +
              (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
              C172 * C2290 + C173 * C2296 + C174 * C2291) *
                 C50939 +
             (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                C50929 -
            ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
             (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
              (C117 * C476 + C50822 * C493) * C2289 +
              (C117 * C463 + C50822 * C477) * C2294) *
                 C50939) *
                C50760) *
               C1025 +
           (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
             ((C117 * C1565 + C50822 * C1573) * C2294 +
              (C117 * C1572 + C50822 * C1577) * C2289 + C3166 * C2295 +
              C3167 * C2290 + C3168 * C2296 + C3169 * C2291) *
                 C50810) *
                C50760 -
            ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
             (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
              C526 * C2296 + C525 * C2291) *
                 C50939 +
             (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                C50760 -
            ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
             (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
              C172 * C2289 + C171 * C2294) *
                 C50939) *
                C50929) *
               C1025 +
           (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
             (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                C50929 -
            (((C117 * C1566 + C50822 * C1574) * C2291 +
              (C117 * C1562 + C50822 * C1567) * C2296 + C3169 * C2290 +
              C3168 * C2295 + C3167 * C2289 + C3166 * C2294) *
                 C50810 +
             (C3163 + C3162 + C3161 + C3160 + C3159 + C3158) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C10701 +
              (C117 * C130 + C50822 * C143) * C50632) *
                 C10697 +
             (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
                C50929 -
            ((C11251 + C11252) * C10700 + (C11253 + C11254) * C10699 +
             (C11255 + C11256) * C10698 +
             ((C117 * C476 + C50822 * C493) * C50632 +
              (C117 * C463 + C50822 * C477) * C10701) *
                 C10697) *
                C50760) *
               C1025 +
           (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
             (C11252 + C11251) * C10699 +
             ((C117 * C9726 + C50822 * C9730) * C10701 +
              (C117 * C9729 + C50822 * C9732) * C50632) *
                 C10700) *
                C50760 -
            (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
             (C10802 + C10801) * C10697) *
                C50929) *
               C50732) *
              C50920 +
          ((((C530 * C10701 + C529 * C50632) * C10697 +
             (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
             (C11261 + C11262) * C10700) *
                C50760 -
            (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
             (C172 * C50632 + C171 * C10701) * C10697) *
                C50929) *
               C1025 +
           (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
             (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
                C50929 -
            (((C117 * C9727 + C50822 * C9731) * C50632 +
              (C117 * C9725 + C50822 * C9728) * C10701) *
                 C10700 +
             (C11262 + C11261) * C10699 + (C11260 + C11259) * C10698 +
             (C11258 + C11257) * C10697) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50696 * C1025 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50696 * C50732) *
              C1027 +
          (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
            (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
               C50696 * C50732 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C50696 * C1025 -
           (((C117 * C311 + C50822 * C322) * C2291 +
             (C117 * C292 + C50822 * C312) * C2296 + C359 * C2290 +
             C358 * C2295 + C357 * C2289 + C356 * C2294) *
                C50810 +
            (C2801 + C2800 + C2799 + C2798 + C2797 + C2796) * C50939) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
              C50696 * C1096 -
          ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
           (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
              C50696 * C1097 +
          ((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
           (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
              C50696 * C1098 -
          (((C117 * C3418 + C50822 * C3424) * C2291 +
            (C117 * C3415 + C50822 * C3419) * C2296 +
            (C117 * C3420 + C50822 * C3425) * C2290 +
            (C117 * C3416 + C50822 * C3421) * C2295 +
            (C117 * C3422 + C50822 * C3426) * C2289 +
            (C117 * C3417 + C50822 * C3423) * C2294) *
               C50810 +
           (C3435 + C3434 + C3433 + C3432 + C3439 + C3438) * C50939) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50696 * C1025 -
           ((C10807 + C10808) * C10700 + (C10806 + C10805) * C10699 +
            (C10804 + C10803) * C10698 + (C10802 + C10801) * C10697) *
               C50696 * C50732) *
              C1027 +
          (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
            (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
               C50696 * C50732 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50696 * C1025) *
              C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C50696 * C1025 -
           (((C117 * C3418 + C50822 * C3424) * C50632 +
             (C117 * C3415 + C50822 * C3419) * C10701) *
                C10700 +
            (C11022 + C11021) * C10699 + (C11020 + C11019) * C10698 +
            (C11018 + C11017) * C10697) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
              C50696 * C1096 -
          (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
           (C10802 + C10801) * C10697) *
              C50696 * C1097 +
          (C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
           (C11439 + C11440) * C10700) *
              C50696 * C1098 -
          (((C117 * C11427 + C50822 * C11429) * C50632 +
            (C117 * C11426 + C50822 * C11428) * C10701) *
               C10700 +
           (C11440 + C11439) * C10699 + C11431 * C10698 + C11432 * C10697) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C2294 +
              (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
              C172 * C2290 + C173 * C2296 + C174 * C2291) *
                 C50939 +
             (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
                C1676 -
            ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
             (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
              (C117 * C476 + C50822 * C493) * C2289 +
              (C117 * C463 + C50822 * C477) * C2294) *
                 C50939) *
                C50760) *
               C50928 +
           (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
             (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
                C50760 -
            ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
             (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
              C526 * C2296 + C525 * C2291) *
                 C50939 +
             (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
                C50760 -
            ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
             (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
              C172 * C2289 + C171 * C2294) *
                 C50939) *
                C1676) *
               C50928 +
           (((C2468 + C2469 + C2470 + C2471 + C2472 + C2473) * C50939 +
             (C2474 + C2475 + C2476 + C2477 + C2478 + C2479) * C50810) *
                C1676 -
            (((C117 * C1566 + C50822 * C1574) * C2291 +
              (C117 * C1562 + C50822 * C1567) * C2296 + C3169 * C2290 +
              C3168 * C2295 + C3167 * C2289 + C3166 * C2294) *
                 C50810 +
             (C3163 + C3162 + C3161 + C3160 + C3159 + C3158) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50822 * C129) * C10701 +
              (C117 * C130 + C50822 * C143) * C50632) *
                 C10697 +
             (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
                C1676 -
            (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
             ((C117 * C476 + C50822 * C493) * C50632 +
              (C117 * C463 + C50822 * C477) * C10701) *
                 C10697) *
                C50760) *
               C50928 +
           (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
             (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
                C50760 -
            (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
             (C10802 + C10801) * C10697) *
                C1676) *
               C50732) *
              C50920 +
          ((((C530 * C10701 + C529 * C50632) * C10697 +
             (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
             (C11261 + C11262) * C10700) *
                C50760 -
            (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
             (C172 * C50632 + C171 * C10701) * C10697) *
                C1676) *
               C50928 +
           (((C10809 + C10810) * C10697 + (C10811 + C10812) * C10698 +
             (C10813 + C10814) * C10699 + (C10815 + C10816) * C10700) *
                C1676 -
            (((C117 * C9727 + C50822 * C9731) * C50632 +
              (C117 * C9725 + C50822 * C9728) * C10701) *
                 C10700 +
             (C11262 + C11261) * C10699 + (C11260 + C11259) * C10698 +
             (C11258 + C11257) * C10697) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50974 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
               C2092) *
              C50928 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50975 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C50974 -
           (((C117 * C3588 + C50822 * C3594) * C2291 +
             (C117 * C3585 + C50822 * C3589) * C2296 +
             (C117 * C3590 + C50822 * C3595) * C2290 +
             (C117 * C3586 + C50822 * C3591) * C2295 +
             (C117 * C3592 + C50822 * C3596) * C2289 +
             (C117 * C3587 + C50822 * C3593) * C2294) *
                C50810 +
            (C3605 + C3604 + C3603 + C3602 + C3609 + C3608) * C50939) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50974 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
            (C11553 + C11554) * C10700) *
               C2092) *
              C50928 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50975 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C50974 -
           (((C117 * C11539 + C50822 * C11541) * C50632 +
             (C117 * C11538 + C50822 * C11540) * C10701) *
                C10700 +
            (C11554 + C11553) * C10699 + (C11546 + C11545) * C10698 +
            (C11544 + C11543) * C10697) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C1676 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C278 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50760 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C1676) *
              C279 +
          (((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C2291 +
             (C117 * C4095 + C50822 * C4099) * C2296 +
             (C117 * C4100 + C50822 * C4105) * C2290 +
             (C117 * C4096 + C50822 * C4101) * C2295 +
             (C117 * C4102 + C50822 * C4106) * C2289 +
             (C117 * C4097 + C50822 * C4103) * C2294) *
                C50810 +
            (C4115 + C4114 + C4113 + C4112 + C4119 + C4118) * C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C1676 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
               C50760 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C1676 -
           (((C117 * C902 + C50822 * C908) * C2291 +
             (C117 * C893 + C50822 * C903) * C2296 + C927 * C2290 +
             C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C50810 +
            (C759 * C2291 + C758 * C2296 + C525 * C2290 + C526 * C2295 +
             C527 * C2289 + C528 * C2294) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C2294 +
            (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
            C172 * C2290 + C173 * C2296 + C174 * C2291) *
               C50939 +
           (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
              C1842 -
          ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
           (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
            (C117 * C476 + C50822 * C493) * C2289 +
            (C117 * C463 + C50822 * C477) * C2294) *
               C50939) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C2294 +
            (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
            C532 * C2290 + C533 * C2296 + C534 * C2291) *
               C50939 +
           (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
              C1844 -
          (((C117 * C4512 + C50822 * C4518) * C2291 +
            (C117 * C4509 + C50822 * C4513) * C2296 +
            (C117 * C4514 + C50822 * C4519) * C2290 +
            (C117 * C4510 + C50822 * C4515) * C2295 +
            (C117 * C4516 + C50822 * C4520) * C2289 +
            (C117 * C4511 + C50822 * C4517) * C2294) *
               C50810 +
           ((C117 * C1852 + C50822 * C1859) * C2291 +
            (C117 * C1847 + C50822 * C1853) * C2296 +
            (C117 * C1854 + C50822 * C1860) * C2290 +
            (C117 * C1848 + C50822 * C1855) * C2295 +
            (C117 * C1856 + C50822 * C1861) * C2289 +
            (C117 * C1849 + C50822 * C1857) * C2294) *
               C50939) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
            (C11261 + C11262) * C10700) *
               C50760 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C50632 +
             (C117 * C4095 + C50822 * C4099) * C10701) *
                C10700 +
            (C3169 * C50632 + C3168 * C10701) * C10699 +
            (C925 * C50632 + C924 * C10701) * C10698 +
            (C527 * C50632 + C528 * C10701) * C10697) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C278 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50760 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C1676) *
              C279 +
          ((C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C1676 -
           (((C117 * C11881 + C50822 * C11883) * C50632 +
             (C117 * C11880 + C50822 * C11882) * C10701) *
                C10700 +
            (C11894 + C11893) * C10699 + C11885 * C10698 + C11886 * C10697) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50822 * C129) * C10701 +
            (C117 * C130 + C50822 * C143) * C50632) *
               C10697 +
           (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
              C1842 -
          (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
           ((C117 * C476 + C50822 * C493) * C50632 +
            (C117 * C463 + C50822 * C477) * C10701) *
               C10697) *
              C1843 +
          (((C117 * C464 + C50822 * C478) * C10701 +
            (C117 * C479 + C50822 * C494) * C50632) *
               C10697 +
           (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
           (C11553 + C11554) * C10700) *
              C1844 -
          (((C117 * C12157 + C50822 * C12159) * C50632 +
            (C117 * C12156 + C50822 * C12158) * C10701) *
               C10700 +
           ((C117 * C10140 + C50822 * C10143) * C50632 +
            (C117 * C10137 + C50822 * C10141) * C10701) *
               C10699 +
           ((C117 * C4516 + C50822 * C4520) * C50632 +
            (C117 * C4511 + C50822 * C4517) * C10701) *
               C10698 +
           ((C117 * C1856 + C50822 * C1861) * C50632 +
            (C117 * C1849 + C50822 * C1857) * C10701) *
               C10697) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C50974 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C2294 +
             (C117 * C479 + C50822 * C494) * C2289 + C531 * C2295 +
             C532 * C2290 + C533 * C2296 + C534 * C2291) *
                C50939 +
            (C3608 + C3609 + C3602 + C3603 + C3604 + C3605) * C50810) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
               C50975 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C50974 -
           (((C117 * C1219 + C50822 * C1227) * C2291 +
             (C117 * C1215 + C50822 * C1220) * C2296 + C2649 * C2290 +
             C2648 * C2295 + C2647 * C2289 + C2646 * C2294) *
                C50810 +
            (C536 * C2291 + C535 * C2296 + C534 * C2290 + C533 * C2295 +
             C532 * C2289 + C531 * C2294) *
                C50939) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C50974 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50975 +
           (((C117 * C464 + C50822 * C478) * C10701 +
             (C117 * C479 + C50822 * C494) * C50632) *
                C10697 +
            (C11543 + C11544) * C10698 + (C11545 + C11546) * C10699 +
            (C11553 + C11554) * C10700) *
               C2092) *
              C50680 * C50920 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
            (C11261 + C11262) * C10700) *
               C50975 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C50974 -
           (((C117 * C9219 + C50822 * C9223) * C50632 +
             (C117 * C9217 + C50822 * C9220) * C10701) *
                C10700 +
            (C8290 * C50632 + C8289 * C10701) * C10699 +
            (C2647 * C50632 + C2646 * C10701) * C10698 +
            (C532 * C50632 + C531 * C10701) * C10697) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C1676 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C2290 +
             C526 * C2296 + C525 * C2291) *
                C50939 +
            (C3158 + C3159 + C3160 + C3161 + C3162 + C3163) * C50810) *
               C50760 -
           ((C2473 + C2472 + C2471 + C2470 + C2469 + C2468) * C50810 +
            (C176 * C2291 + C175 * C2296 + C174 * C2290 + C173 * C2295 +
             C172 * C2289 + C171 * C2294) *
                C50939) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C2290 +
             C178 * C2296 + C177 * C2291) *
                C50939 +
            (C2796 + C2797 + C2798 + C2799 + C2800 + C2801) * C50810) *
               C1676 -
           (((C117 * C902 + C50822 * C908) * C2291 +
             (C117 * C893 + C50822 * C903) * C2296 + C927 * C2290 +
             C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C50810 +
            (C759 * C2291 + C758 * C2296 + C525 * C2290 + C526 * C2295 +
             C527 * C2289 + C528 * C2294) *
                C50939) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C2294 +
             (C117 * C130 + C50822 * C143) * C2289 + C171 * C2295 +
             C172 * C2290 + C173 * C2296 + C174 * C2291) *
                C50939 +
            (C2488 + C2489 + C2448 + C2449 + C2450 + C2451) * C50810) *
               C1676 -
           ((C3142 + C3143 + C3144 + C3145 + C3170 + C3171) * C50810 +
            (C527 * C2291 + C528 * C2296 + C529 * C2290 + C530 * C2295 +
             (C117 * C476 + C50822 * C493) * C2289 +
             (C117 * C463 + C50822 * C477) * C2294) *
                C50939) *
               C50760) *
              C278 +
          (((C3171 + C3170 + C3145 + C3144 + C3143 + C3142) * C50939 +
            (C4118 + C4119 + C4112 + C4113 + C4114 + C4115) * C50810) *
               C50760 -
           ((C2452 + C2453 + C2454 + C2455 + C2490 + C2491) * C50810 +
            (C2451 + C2450 + C2449 + C2448 + C2489 + C2488) * C50939) *
               C1676) *
              C279 +
          (((C2491 + C2490 + C2455 + C2454 + C2453 + C2452) * C50939 +
            (C3438 + C3439 + C3432 + C3433 + C3434 + C3435) * C50810) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C2291 +
             (C117 * C4095 + C50822 * C4099) * C2296 +
             (C117 * C4100 + C50822 * C4105) * C2290 +
             (C117 * C4096 + C50822 * C4101) * C2295 +
             (C117 * C4102 + C50822 * C4106) * C2289 +
             (C117 * C4097 + C50822 * C4103) * C2294) *
                C50810 +
            (C4115 + C4114 + C4113 + C4112 + C4119 + C4118) * C50939) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C50680 * C1027 +
          (((C530 * C10701 + C529 * C50632) * C10697 +
            (C11257 + C11258) * C10698 + (C11259 + C11260) * C10699 +
            (C11261 + C11262) * C10700) *
               C50760 -
           (C10819 * C10700 + C10820 * C10699 + (C10810 + C10809) * C10698 +
            (C172 * C50632 + C171 * C10701) * C10697) *
               C1676) *
              C50680 * C1028 +
          (((C173 * C10701 + C174 * C50632) * C10697 +
            (C11017 + C11018) * C10698 + (C11019 + C11020) * C10699 +
            (C11021 + C11022) * C10700) *
               C1676 -
           (((C117 * C4098 + C50822 * C4104) * C50632 +
             (C117 * C4095 + C50822 * C4099) * C10701) *
                C10700 +
            (C3169 * C50632 + C3168 * C10701) * C10699 +
            (C925 * C50632 + C924 * C10701) * C10698 +
            (C527 * C50632 + C528 * C10701) * C10697) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50822 * C129) * C10701 +
             (C117 * C130 + C50822 * C143) * C50632) *
                C10697 +
            (C10801 + C10802) * C10698 + C10817 * C10699 + C10818 * C10700) *
               C1676 -
           (C11885 * C10700 + C11886 * C10699 + (C11255 + C11256) * C10698 +
            ((C117 * C476 + C50822 * C493) * C50632 +
             (C117 * C463 + C50822 * C477) * C10701) *
                C10697) *
               C50760) *
              C278 +
          (((C11256 + C11255) * C10697 + (C11254 + C11253) * C10698 +
            (C11252 + C11251) * C10699 + (C11893 + C11894) * C10700) *
               C50760 -
           (C11431 * C10700 + C11432 * C10699 + (C10804 + C10803) * C10698 +
            (C10802 + C10801) * C10697) *
               C1676) *
              C279 +
          ((C10817 * C10697 + C10818 * C10698 + (C10808 + C10807) * C10699 +
            (C11439 + C11440) * C10700) *
               C1676 -
           (((C117 * C11881 + C50822 * C11883) * C50632 +
             (C117 * C11880 + C50822 * C11882) * C10701) *
                C10700 +
            (C11894 + C11893) * C10699 + C11885 * C10698 + C11886 * C10697) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C50928 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50732 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C50928) *
              C50971 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50696 * C50928 -
           ((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C2291 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C2296 +
            (C5709 + C5708) * C2290 + (C5707 + C5706) * C2295 + C5696 * C2289 +
            C5697 * C2294) *
               C50796 * C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C50928 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50732) *
              C50970 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50732 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C50928) *
              C50971 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50696 * C50928 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50632 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C10701) *
                C7953 +
            ((C5355 + C5354) * C50632 + (C5353 + C5352) * C10701) * C7952 +
            (C5696 * C50632 + C5697 * C10701) * C7951) *
               C50696 * C50732) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C2294 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C2289 +
             (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
             C5159 * C2291) *
                C50796 * C50929 -
            (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
             (C5540 + C5541) * C2295 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C2289 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C2294) *
                C50796 * C50760) *
               C50928 +
           (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                 C2294 +
             (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                 C2289 +
             (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
             (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                C50796 * C50760 -
            (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
             (C5346 + C5347) * C2295 +
             (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                 C2289 +
             (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                 C2294) *
                C50796 * C50929) *
               C50732) *
              C281 +
          ((((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
             (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
             (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                C50796 * C50760 -
            (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
             (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
             (C5143 + C5142) * C2294) *
                C50796 * C50929) *
               C50928 +
           (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
             (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
             (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                C50796 * C50929 -
            ((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C2291 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C2296 +
             (C6087 + C6086) * C2290 + (C6085 + C6084) * C2295 +
             (C6083 + C6082) * C2289 + (C6081 + C6080) * C2294) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C10701 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C50632) *
                 C7951 +
             ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
             C12788 * C7953) *
                C50929 -
            (((C13445 + C13446) * C50632 + (C13447 + C13448) * C10701) * C7953 +
             ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
             ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C50632 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C10701) *
                 C7951) *
                C50760) *
               C50928 +
           ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
             ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
             ((C5107 * C4097 + C50940 * C4103 + C5108 * C9218 +
               C50834 * C9222) *
                  C10701 +
              (C5107 * C4102 + C50940 * C4106 + C5108 * C9221 +
               C50834 * C9224) *
                  C50632) *
                 C7953) *
                C50760 -
            (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
             ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
             ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) *
                 C7951) *
                C50929) *
               C50732) *
              C281 +
          (((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
             ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
             ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) *
                 C7953) *
                C50760 -
            (C12785 * C7953 +
             ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
             ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
                C50929) *
               C50928 +
           ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
             ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
             ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) *
                 C7953) *
                C50929 -
            (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 +
               C50940 * C4105) *
                  C50632 +
              (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 +
               C50940 * C4101) *
                  C10701) *
                 C7953 +
             ((C13456 + C13455) * C50632 + (C13454 + C13453) * C10701) * C7952 +
             ((C6083 + C6082) * C50632 + (C6081 + C6080) * C10701) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C278 -
           ((C5340 + C5341) * C2291 + (C5342 + C5343) * C2296 +
            (C5344 + C5345) * C2290 + (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C279 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50696 * C280) *
              C281 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5107 * C283 + C50940 * C294 + C5108 * C892 + C50834 * C900) *
                C2296 +
            (C5107 * C293 + C50940 * C313 + C5108 * C901 + C50834 * C907) *
                C2291) *
               C50796 * C50696 * C279 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C278 -
           ((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C2291 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C2296 +
            (C5355 + C5354) * C2290 + (C5353 + C5352) * C2295 +
            (C5351 + C5350) * C2289 + (C5349 + C5348) * C2294) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C50696 * C50680 * C113 -
          (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
           (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
           (C5143 + C5142) * C2294) *
              C50796 * C50696 * C50680 * C114 +
          (C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
           (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
           (C5156 + C5157) * C2291) *
              C50796 * C50696 * C50680 * C115 -
          ((C5108 * C750 + C50834 * C752 + C5107 * C140 + C50940 * C148) *
               C2291 +
           (C5108 * C749 + C50834 * C751 + C5107 * C127 + C50940 * C139) *
               C2296 +
           (C5157 + C5156) * C2290 + (C5155 + C5154) * C2295 + C5160 * C2289 +
           C5161 * C2294) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C457 -
           ((C5534 + C5535) * C2291 + (C5536 + C5537) * C2296 +
            (C5538 + C5539) * C2290 + (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C458 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C459) *
              C50680 * C281 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5107 * C460 + C50940 * C471 + C5108 * C467 + C50834 * C484) *
                C2296 +
            (C5107 * C470 + C50940 * C490 + C5108 * C485 + C50834 * C497) *
                C2291) *
               C50796 * C458 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C457 -
           ((C5108 * C1850 + C50834 * C1858 + C5107 * C485 + C50940 * C497) *
                C2291 +
            (C5108 * C1846 + C50834 * C1851 + C5107 * C467 + C50940 * C484) *
                C2296 +
            (C5549 + C5548) * C2290 + (C5547 + C5546) * C2295 +
            (C5545 + C5544) * C2289 + (C5543 + C5542) * C2294) *
               C50796 * C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C5107 * C286 + C50940 * C300 + C5108 * C889 + C50834 * C894) *
                C10701 +
            (C5107 * C299 + C50940 * C316 + C5108 * C895 + C50834 * C904) *
                C50632) *
               C7952 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C10701 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C50632) *
               C7953) *
              C50696 * C50680 * C113 -
          (((C5351 + C5350) * C50632 + (C5349 + C5348) * C10701) * C7953 +
           ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
           ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
              C50696 * C50680 * C114 +
          ((C5158 * C10701 + C5159 * C50632) * C7951 +
           ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
           ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
              C50696 * C50680 * C115 -
          (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C50632 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C10701) *
               C7953 +
           ((C5709 + C5708) * C50632 + (C5707 + C5706) * C10701) * C7952 +
           (C5160 * C50632 + C5161 * C10701) * C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C278 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C279 +
           (C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C5107 * C3417 + C50940 * C3423 + C5108 * C9726 + C50834 * C9730) *
                 C10701 +
             (C5107 * C3422 + C50940 * C3426 + C5108 * C9729 + C50834 * C9732) *
                 C50632) *
                C7953) *
               C50696 * C280) *
              C281 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C279 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C278 -
           (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                 C50632 +
             (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                 C10701) *
                C7953 +
            ((C12780 + C12779) * C50632 + (C12778 + C12777) * C10701) * C7952 +
            C12785 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C457 -
           (((C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                 C50632 +
             (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                 C10701) *
                C7953 +
            ((C5108 * C1225 + C50834 * C1230 + C5107 * C895 + C50940 * C904) *
                 C50632 +
             (C5108 * C1218 + C50834 * C1226 + C5107 * C889 + C50940 * C894) *
                 C10701) *
                C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C458 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C5107 * C1218 + C50940 * C1226 + C5108 * C4511 + C50834 * C4517) *
                 C10701 +
             (C5107 * C1225 + C50940 * C1230 + C5108 * C4516 + C50834 * C4520) *
                 C50632) *
                C7952 +
            ((C5107 * C3587 + C50940 * C3593 + C5108 * C10137 +
              C50834 * C10141) *
                 C10701 +
             (C5107 * C3592 + C50940 * C3596 + C5108 * C10140 +
              C50834 * C10143) *
                 C50632) *
                C7953) *
               C459) *
              C50680 * C281 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C5107 * C1564 + C50940 * C1571 + C5108 * C3586 + C50834 * C3591) *
                 C10701 +
             (C5107 * C1570 + C50940 * C1576 + C5108 * C3590 + C50834 * C3595) *
                 C50632) *
                C7953) *
               C458 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C457 -
           (((C5108 * C10138 + C50834 * C10142 + C5107 * C3590 +
              C50940 * C3595) *
                 C50632 +
             (C5108 * C10136 + C50834 * C10139 + C5107 * C3586 +
              C50940 * C3591) *
                 C10701) *
                C7953 +
            ((C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                 C50632 +
             (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                 C10701) *
                C7952 +
            ((C5545 + C5544) * C50632 + (C5543 + C5542) * C10701) * C7951) *
               C459) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50929 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50760 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50929) *
              C50680 * C50971 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50929 -
           ((C5108 * C488 + C50834 * C499 + C5107 * C487 + C50940 * C498) *
                C2291 +
            (C5108 * C469 + C50834 * C489 + C5107 * C468 + C50940 * C486) *
                C2296 +
            (C5869 + C5868) * C2290 + (C5867 + C5866) * C2295 + C5856 * C2289 +
            C5857 * C2294) *
               C50796 * C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50929 -
           (((C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                 C50632 +
             (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                 C10701) *
                C7953 +
            ((C5108 * C1225 + C50834 * C1230 + C5107 * C895 + C50940 * C904) *
                 C50632 +
             (C5108 * C1218 + C50834 * C1226 + C5107 * C889 + C50940 * C894) *
                 C10701) *
                C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50680 * C50970 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C5107 * C1564 + C50940 * C1571 + C5108 * C3586 + C50834 * C3591) *
                 C10701 +
             (C5107 * C1570 + C50940 * C1576 + C5108 * C3590 + C50834 * C3595) *
                 C50632) *
                C7953) *
               C50760 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50929) *
              C50680 * C50971 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50929 -
           (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                 C50632 +
             (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                 C10701) *
                C7953 +
            ((C6087 + C6086) * C50632 + (C6085 + C6084) * C10701) * C7952 +
            (C5856 * C50632 + C5857 * C10701) * C7951) *
               C50760) *
              C50680 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C50696 * C50680 * C113 -
          (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
           (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
           (C5143 + C5142) * C2294) *
              C50796 * C50696 * C50680 * C114 +
          (C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
           (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
           (C5156 + C5157) * C2291) *
              C50796 * C50696 * C50680 * C115 -
          ((C5108 * C750 + C50834 * C752 + C5107 * C140 + C50940 * C148) *
               C2291 +
           (C5108 * C749 + C50834 * C751 + C5107 * C127 + C50940 * C139) *
               C2296 +
           (C5157 + C5156) * C2290 + (C5155 + C5154) * C2295 + C5160 * C2289 +
           C5161 * C2294) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C278 -
           ((C5340 + C5341) * C2291 + (C5342 + C5343) * C2296 +
            (C5344 + C5345) * C2290 + (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C279 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50696 * C280) *
              C281 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5107 * C283 + C50940 * C294 + C5108 * C892 + C50834 * C900) *
                C2296 +
            (C5107 * C293 + C50940 * C313 + C5108 * C901 + C50834 * C907) *
                C2291) *
               C50796 * C50696 * C279 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C278 -
           ((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C2291 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C2296 +
            (C5355 + C5354) * C2290 + (C5353 + C5352) * C2295 +
            (C5351 + C5350) * C2289 + (C5349 + C5348) * C2294) *
               C50796 * C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C5107 * C286 + C50940 * C300 + C5108 * C889 + C50834 * C894) *
                C10701 +
            (C5107 * C299 + C50940 * C316 + C5108 * C895 + C50834 * C904) *
                C50632) *
               C7952 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C10701 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C50632) *
               C7953) *
              C50696 * C50680 * C113 -
          (((C5351 + C5350) * C50632 + (C5349 + C5348) * C10701) * C7953 +
           ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
           ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
              C50696 * C50680 * C114 +
          ((C5158 * C10701 + C5159 * C50632) * C7951 +
           ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
           ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
              C50696 * C50680 * C115 -
          (((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C50632 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C10701) *
               C7953 +
           ((C5709 + C5708) * C50632 + (C5707 + C5706) * C10701) * C7952 +
           (C5160 * C50632 + C5161 * C10701) * C7951) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C278 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C279 +
           (C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C5107 * C3417 + C50940 * C3423 + C5108 * C9726 + C50834 * C9730) *
                 C10701 +
             (C5107 * C3422 + C50940 * C3426 + C5108 * C9729 + C50834 * C9732) *
                 C50632) *
                C7953) *
               C50696 * C280) *
              C281 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C279 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C278 -
           (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                 C50632 +
             (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                 C10701) *
                C7953 +
            ((C12780 + C12779) * C50632 + (C12778 + C12777) * C10701) * C7952 +
            C12785 * C7951) *
               C50696 * C280) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C50972 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50973 +
           ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50696 * C1331) *
              C50920 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50973 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C50972 -
           ((C5108 * C1566 + C50834 * C1574 + C5107 * C308 + C50940 * C320) *
                C2291 +
            (C5108 * C1562 + C50834 * C1567 + C5107 * C290 + C50940 * C307) *
                C2296 +
            (C5355 + C5354) * C2290 + (C5353 + C5352) * C2295 +
            (C5351 + C5350) * C2289 + (C5349 + C5348) * C2294) *
               C50796 * C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C50972 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50973 +
           (C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C50696 * C1331) *
              C50920 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50973 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C50972 -
           (((C5108 * C9727 + C50834 * C9731 + C5107 * C3420 + C50940 * C3425) *
                 C50632 +
             (C5108 * C9725 + C50834 * C9728 + C5107 * C3416 + C50940 * C3421) *
                 C10701) *
                C7953 +
            ((C12780 + C12779) * C50632 + (C12778 + C12777) * C10701) * C7952 +
            C12785 * C7951) *
               C50696 * C1331) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50929 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50972 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50760 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50929) *
              C50973 +
          (((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C50929 -
           ((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                C2291 +
            (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                C2296 +
            (C5108 * C3590 + C50834 * C3595 + C5107 * C1570 + C50940 * C1576) *
                C2290 +
            (C5108 * C3586 + C50834 * C3591 + C5107 * C1564 + C50940 * C1571) *
                C2295 +
            (C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                C2289 +
            (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                C2294) *
               C50796 * C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50929 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50972 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50760 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50929) *
              C50973 +
          ((C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C50929 -
           (((C5108 * C11539 + C50834 * C11541 + C5107 * C9729 +
              C50940 * C9732) *
                 C50632 +
             (C5108 * C11538 + C50834 * C11540 + C5107 * C9726 +
              C50940 * C9730) *
                 C10701) *
                C7953 +
            ((C14389 + C14388) * C50632 + (C14387 + C14386) * C10701) * C7952 +
            C14390 * C7951) *
               C50760) *
              C1331) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C50696 * C1096 -
          (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
           (C5346 + C5347) * C2295 +
           (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
               C2289 +
           (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
               C2294) *
              C50796 * C50696 * C1097 +
          ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
               C2294 +
           (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
               C2289 +
           (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
           (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
              C50796 * C50696 * C1098 -
          ((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
               C2291 +
           (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
               C2296 +
           (C5108 * C4100 + C50834 * C4105 + C5107 * C1109 + C50940 * C1115) *
               C2290 +
           (C5108 * C4096 + C50834 * C4101 + C5107 * C1103 + C50940 * C1110) *
               C2295 +
           (C5108 * C4102 + C50834 * C4106 + C5107 * C1111 + C50940 * C1116) *
               C2289 +
           (C5108 * C4097 + C50834 * C4103 + C5107 * C1104 + C50940 * C1112) *
               C2294) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C1025 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50732 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50696 * C1025 -
           ((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C2291 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C2296 +
            (C5709 + C5708) * C2290 + (C5707 + C5706) * C2295 + C5696 * C2289 +
            C5697 * C2294) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C457 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C458 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C459) *
              C1025 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C458 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C457 -
           ((C5108 * C4512 + C50834 * C4518 + C5107 * C1221 + C50940 * C1228) *
                C2291 +
            (C5108 * C4509 + C50834 * C4513 + C5107 * C1216 + C50940 * C1222) *
                C2296 +
            (C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                C2290 +
            (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                C2295 +
            (C5108 * C4516 + C50834 * C4520 + C5107 * C1225 + C50940 * C1230) *
                C2289 +
            (C5108 * C4511 + C50834 * C4517 + C5107 * C1218 + C50940 * C1226) *
                C2294) *
               C50796 * C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C1025 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50732) *
              C1027 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50732 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C1025) *
              C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50696 * C1025 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50632 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C10701) *
                C7953 +
            ((C5355 + C5354) * C50632 + (C5353 + C5352) * C10701) * C7952 +
            (C5696 * C50632 + C5697 * C10701) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
           C12788 * C7953) *
              C50696 * C1096 -
          (C13717 * C7953 +
           ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
           ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
              C50696 * C1097 +
          (C12788 * C7951 +
           ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
           ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
              C50696 * C1098 -
          (((C5108 * C11881 + C50834 * C11883 + C5107 * C9054 +
             C50940 * C9057) *
                C50632 +
            (C5108 * C11880 + C50834 * C11882 + C5107 * C9051 +
             C50940 * C9055) *
                C10701) *
               C7953 +
           ((C13716 + C13715) * C50632 + (C13714 + C13713) * C10701) * C7952 +
           C13717 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C457 -
           (((C13445 + C13446) * C50632 + (C13447 + C13448) * C10701) * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C458 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
            ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
               C459) *
              C1025 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C5107 * C4097 + C50940 * C4103 + C5108 * C9218 + C50834 * C9222) *
                 C10701 +
             (C5107 * C4102 + C50940 * C4106 + C5108 * C9221 + C50834 * C9224) *
                 C50632) *
                C7953) *
               C458 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C457 -
           (((C5108 * C12157 + C50834 * C12159 + C5107 * C9221 +
              C50940 * C9224) *
                 C50632 +
             (C5108 * C12156 + C50834 * C12158 + C5107 * C9218 +
              C50940 * C9222) *
                 C10701) *
                C7953 +
            ((C13887 + C13886) * C50632 + (C13885 + C13884) * C10701) * C7952 +
            ((C13883 + C13882) * C50632 + (C13881 + C13880) * C10701) * C7951) *
               C459) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C2294 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C2289 +
             (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
             C5159 * C2291) *
                C50796 * C50929 -
            (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
             (C5540 + C5541) * C2295 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C2289 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C2294) *
                C50796 * C50760) *
               C1025 +
           (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                 C2294 +
             (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                 C2289 +
             (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
             (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                C50796 * C50760 -
            (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
             (C5346 + C5347) * C2295 +
             (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                 C2289 +
             (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                 C2294) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
             (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
             (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                C50796 * C50760 -
            (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
             (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
             (C5143 + C5142) * C2294) *
                C50796 * C50929) *
               C1025 +
           (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
             (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
             (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                C50796 * C50929 -
            ((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C2291 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C2296 +
             (C6087 + C6086) * C2290 + (C6085 + C6084) * C2295 +
             (C6083 + C6082) * C2289 + (C6081 + C6080) * C2294) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C10701 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C50632) *
                 C7951 +
             ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
             C12788 * C7953) *
                C50929 -
            (((C13445 + C13446) * C50632 + (C13447 + C13448) * C10701) * C7953 +
             ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
             ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C50632 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C10701) *
                 C7951) *
                C50760) *
               C1025 +
           ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
             ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
             ((C5107 * C4097 + C50940 * C4103 + C5108 * C9218 +
               C50834 * C9222) *
                  C10701 +
              (C5107 * C4102 + C50940 * C4106 + C5108 * C9221 +
               C50834 * C9224) *
                  C50632) *
                 C7953) *
                C50760 -
            (C13717 * C7953 +
             ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
             ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) *
                 C7951) *
                C50929) *
               C50732) *
              C50920 +
          (((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
             ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
             ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) *
                 C7953) *
                C50760 -
            (C12785 * C7953 +
             ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
             ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
                C50929) *
               C1025 +
           ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
             ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
             ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) *
                 C7953) *
                C50929 -
            (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 +
               C50940 * C4105) *
                  C50632 +
              (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 +
               C50940 * C4101) *
                  C10701) *
                 C7953 +
             ((C13456 + C13455) * C50632 + (C13454 + C13453) * C10701) * C7952 +
             ((C6083 + C6082) * C50632 + (C6081 + C6080) * C10701) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50696 * C1025 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50696 * C50732) *
              C1027 +
          (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
            (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
            (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
               C50796 * C50696 * C50732 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50696 * C1025) *
              C1028 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C50696 * C1025 -
           ((C5108 * C902 + C50834 * C908 + C5107 * C310 + C50940 * C321) *
                C2291 +
            (C5108 * C893 + C50834 * C903 + C5107 * C291 + C50940 * C309) *
                C2296 +
            (C5709 + C5708) * C2290 + (C5707 + C5706) * C2295 + C5696 * C2289 +
            C5697 * C2294) *
               C50796 * C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C50696 * C1096 -
          (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
           (C5346 + C5347) * C2295 +
           (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
               C2289 +
           (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
               C2294) *
              C50796 * C50696 * C1097 +
          ((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
               C2294 +
           (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
               C2289 +
           (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
           (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
              C50796 * C50696 * C1098 -
          ((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
               C2291 +
           (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
               C2296 +
           (C5108 * C4100 + C50834 * C4105 + C5107 * C1109 + C50940 * C1115) *
               C2290 +
           (C5108 * C4096 + C50834 * C4101 + C5107 * C1103 + C50940 * C1110) *
               C2295 +
           (C5108 * C4102 + C50834 * C4106 + C5107 * C1111 + C50940 * C1116) *
               C2289 +
           (C5108 * C4097 + C50834 * C4103 + C5107 * C1104 + C50940 * C1112) *
               C2294) *
              C50796 * C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50696 * C1025 -
           (((C12773 + C12774) * C50632 + (C12775 + C12776) * C10701) * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50696 * C50732) *
              C1027 +
          ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
            ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
            ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) * C7953) *
               C50696 * C50732 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50696 * C1025) *
              C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C50696 * C1025 -
           (((C5108 * C4098 + C50834 * C4104 + C5107 * C1107 + C50940 * C1114) *
                 C50632 +
             (C5108 * C4095 + C50834 * C4099 + C5107 * C1102 + C50940 * C1108) *
                 C10701) *
                C7953 +
            ((C5355 + C5354) * C50632 + (C5353 + C5352) * C10701) * C7952 +
            (C5696 * C50632 + C5697 * C10701) * C7951) *
               C50696 * C50732) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
           C12788 * C7953) *
              C50696 * C1096 -
          (C13717 * C7953 +
           ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
           ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
              C50696 * C1097 +
          (C12788 * C7951 +
           ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
           ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
              C50696 * C1098 -
          (((C5108 * C11881 + C50834 * C11883 + C5107 * C9054 +
             C50940 * C9057) *
                C50632 +
            (C5108 * C11880 + C50834 * C11882 + C5107 * C9051 +
             C50940 * C9055) *
                C10701) *
               C7953 +
           ((C13716 + C13715) * C50632 + (C13714 + C13713) * C10701) * C7952 +
           C13717 * C7951) *
              C50696 * C1099) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C2294 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C2289 +
             (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
             C5159 * C2291) *
                C50796 * C1676 -
            (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
             (C5540 + C5541) * C2295 +
             (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C2289 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C2294) *
                C50796 * C50760) *
               C50928 +
           (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                 C2294 +
             (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                 C2289 +
             (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
             (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
                C50796 * C50760 -
            (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
             (C5346 + C5347) * C2295 +
             (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                 C2289 +
             (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                 C2294) *
                C50796 * C1676) *
               C50732) *
              C50920 +
          ((((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
             (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
             (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
                C50796 * C50760 -
            (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
             (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
             (C5143 + C5142) * C2294) *
                C50796 * C1676) *
               C50928 +
           (((C5347 + C5346) * C2294 + (C5345 + C5344) * C2289 +
             (C5343 + C5342) * C2295 + (C5341 + C5340) * C2290 +
             (C5706 + C5707) * C2296 + (C5708 + C5709) * C2291) *
                C50796 * C1676 -
            ((C5108 * C1219 + C50834 * C1227 + C5107 * C901 + C50940 * C907) *
                 C2291 +
             (C5108 * C1215 + C50834 * C1220 + C5107 * C892 + C50940 * C900) *
                 C2296 +
             (C6087 + C6086) * C2290 + (C6085 + C6084) * C2295 +
             (C6083 + C6082) * C2289 + (C6081 + C6080) * C2294) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                  C10701 +
              (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                  C50632) *
                 C7951 +
             ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
             C12788 * C7953) *
                C1676 -
            (C14390 * C7953 +
             ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
             ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                  C50632 +
              (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                  C10701) *
                 C7951) *
                C50760) *
               C50928 +
           ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
             ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
             ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) *
                 C7953) *
                C50760 -
            (C13717 * C7953 +
             ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
             ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) *
                 C7951) *
                C1676) *
               C50732) *
              C50920 +
          (((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
             ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
             ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) *
                 C7953) *
                C50760 -
            (C12785 * C7953 +
             ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
             ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
                C1676) *
               C50928 +
           ((((C5347 + C5346) * C10701 + (C5345 + C5344) * C50632) * C7951 +
             ((C5348 + C5349) * C10701 + (C5350 + C5351) * C50632) * C7952 +
             ((C12777 + C12778) * C10701 + (C12779 + C12780) * C50632) *
                 C7953) *
                C1676 -
            (((C5108 * C9219 + C50834 * C9223 + C5107 * C4100 +
               C50940 * C4105) *
                  C50632 +
              (C5108 * C9217 + C50834 * C9220 + C5107 * C4096 +
               C50940 * C4101) *
                  C10701) *
                 C7953 +
             ((C13456 + C13455) * C50632 + (C13454 + C13453) * C10701) * C7952 +
             ((C6083 + C6082) * C50632 + (C6081 + C6080) * C10701) * C7951) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50974 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50975 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C2092) *
              C50928 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50975 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C50974 -
           ((C5108 * C4512 + C50834 * C4518 + C5107 * C1221 + C50940 * C1228) *
                C2291 +
            (C5108 * C4509 + C50834 * C4513 + C5107 * C1216 + C50940 * C1222) *
                C2296 +
            (C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                C2290 +
            (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                C2295 +
            (C5108 * C4516 + C50834 * C4520 + C5107 * C1225 + C50940 * C1230) *
                C2289 +
            (C5108 * C4511 + C50834 * C4517 + C5107 * C1218 + C50940 * C1226) *
                C2294) *
               C50796 * C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50974 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50975 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
            ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
               C2092) *
              C50928 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50975 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C50974 -
           (((C5108 * C12157 + C50834 * C12159 + C5107 * C9221 +
              C50940 * C9224) *
                 C50632 +
             (C5108 * C12156 + C50834 * C12158 + C5107 * C9218 +
              C50940 * C9222) *
                 C10701) *
                C7953 +
            ((C13887 + C13886) * C50632 + (C13885 + C13884) * C10701) * C7952 +
            ((C13883 + C13882) * C50632 + (C13881 + C13880) * C10701) * C7951) *
               C2092) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C1676 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C278 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50760 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C1676) *
              C279 +
          (((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C1676 -
           ((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                C2291 +
            (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                C2296 +
            (C5108 * C3590 + C50834 * C3595 + C5107 * C1570 + C50940 * C1576) *
                C2290 +
            (C5108 * C3586 + C50834 * C3591 + C5107 * C1564 + C50940 * C1571) *
                C2295 +
            (C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                C2289 +
            (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                C2294) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C1676 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50760 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C1676 -
           ((C5108 * C488 + C50834 * C499 + C5107 * C487 + C50940 * C498) *
                C2291 +
            (C5108 * C469 + C50834 * C489 + C5107 * C468 + C50940 * C486) *
                C2296 +
            (C5869 + C5868) * C2290 + (C5867 + C5866) * C2295 + C5856 * C2289 +
            C5857 * C2294) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
               C2294 +
           (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
               C2289 +
           (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
           C5159 * C2291) *
              C50796 * C1842 -
          (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
           (C5540 + C5541) * C2295 +
           (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
               C2289 +
           (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
               C2294) *
              C50796 * C1843 +
          ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
               C2294 +
           (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
               C2289 +
           (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
           (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
              C50796 * C1844 -
          ((C5108 * C7356 + C50834 * C7362 + C5107 * C1852 + C50940 * C1859) *
               C2291 +
           (C5108 * C7353 + C50834 * C7357 + C5107 * C1847 + C50940 * C1853) *
               C2296 +
           (C5108 * C7358 + C50834 * C7363 + C5107 * C1854 + C50940 * C1860) *
               C2290 +
           (C5108 * C7354 + C50834 * C7359 + C5107 * C1848 + C50940 * C1855) *
               C2295 +
           (C5108 * C7360 + C50834 * C7364 + C5107 * C1856 + C50940 * C1861) *
               C2289 +
           (C5108 * C7355 + C50834 * C7361 + C5107 * C1849 + C50940 * C1857) *
               C2294) *
              C50796 * C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) * C7953) *
               C50760 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C1676) *
              C50680 * C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C1676 -
           (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                 C50632 +
             (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                 C10701) *
                C7953 +
            ((C6087 + C6086) * C50632 + (C6085 + C6084) * C10701) * C7952 +
            (C5856 * C50632 + C5857 * C10701) * C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C278 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50760 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C1676) *
              C279 +
          ((C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C1676 -
           (((C5108 * C11539 + C50834 * C11541 + C5107 * C9729 +
              C50940 * C9732) *
                 C50632 +
             (C5108 * C11538 + C50834 * C11540 + C5107 * C9726 +
              C50940 * C9730) *
                 C10701) *
                C7953 +
            ((C14389 + C14388) * C50632 + (C14387 + C14386) * C10701) * C7952 +
            C14390 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C10701 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C50632) *
               C7951 +
           ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
           C12788 * C7953) *
              C1842 -
          (C14390 * C7953 +
           ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
           ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C50632 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C10701) *
               C7951) *
              C1843 +
          (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C10701 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C50632) *
               C7951 +
           ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
           ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
              C1844 -
          (((C5108 * C14782 + C50834 * C14786 + C5107 * C10140 +
             C50940 * C10143) *
                C50632 +
            (C5108 * C14780 + C50834 * C14783 + C5107 * C10137 +
             C50940 * C10141) *
                C10701) *
               C7953 +
           ((C5108 * C14784 + C50834 * C14787 + C5107 * C4516 +
             C50940 * C4520) *
                C50632 +
            (C5108 * C14781 + C50834 * C14785 + C5107 * C4511 +
             C50940 * C4517) *
                C10701) *
               C7952 +
           ((C5108 * C7360 + C50834 * C7364 + C5107 * C1856 + C50940 * C1861) *
                C50632 +
            (C5108 * C7355 + C50834 * C7361 + C5107 * C1849 + C50940 * C1857) *
                C10701) *
               C7951) *
              C1845) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C50974 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50975 +
           ((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                C2294 +
            (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                C2289 +
            (C5542 + C5543) * C2295 + (C5544 + C5545) * C2290 +
            (C5546 + C5547) * C2296 + (C5548 + C5549) * C2291) *
               C50796 * C2092) *
              C50680 * C50920 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50975 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C50974 -
           ((C5108 * C1850 + C50834 * C1858 + C5107 * C485 + C50940 * C497) *
                C2291 +
            (C5108 * C1846 + C50834 * C1851 + C5107 * C467 + C50940 * C484) *
                C2296 +
            (C5549 + C5548) * C2290 + (C5547 + C5546) * C2295 +
            (C5545 + C5544) * C2289 + (C5543 + C5542) * C2294) *
               C50796 * C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C50974 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50975 +
           (((C5107 * C464 + C50940 * C478 + C5108 * C1849 + C50834 * C1857) *
                 C10701 +
             (C5107 * C479 + C50940 * C494 + C5108 * C1856 + C50834 * C1861) *
                 C50632) *
                C7951 +
            ((C13880 + C13881) * C10701 + (C13882 + C13883) * C50632) * C7952 +
            ((C13884 + C13885) * C10701 + (C13886 + C13887) * C50632) * C7953) *
               C2092) *
              C50680 * C50920 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) * C7953) *
               C50975 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C50974 -
           (((C5108 * C10138 + C50834 * C10142 + C5107 * C3590 +
              C50940 * C3595) *
                 C50632 +
             (C5108 * C10136 + C50834 * C10139 + C5107 * C3586 +
              C50940 * C3591) *
                 C10701) *
                C7953 +
            ((C5108 * C4514 + C50834 * C4519 + C5107 * C1223 + C50940 * C1229) *
                 C50632 +
             (C5108 * C4510 + C50834 * C4515 + C5107 * C1217 + C50940 * C1224) *
                 C10701) *
                C7952 +
            ((C5545 + C5544) * C50632 + (C5543 + C5542) * C10701) * C7951) *
               C2092) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C1676 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C50680 * C1027 +
          (((C5541 + C5540) * C2294 + (C5539 + C5538) * C2289 +
            (C5537 + C5536) * C2295 + (C5535 + C5534) * C2290 +
            (C5866 + C5867) * C2296 + (C5868 + C5869) * C2291) *
               C50796 * C50760 -
           (C5160 * C2291 + C5161 * C2296 + (C5149 + C5148) * C2290 +
            (C5147 + C5146) * C2295 + (C5145 + C5144) * C2289 +
            (C5143 + C5142) * C2294) *
               C50796 * C1676) *
              C50680 * C1028 +
          ((C5158 * C2294 + C5159 * C2289 + (C5153 + C5152) * C2295 +
            (C5151 + C5150) * C2290 + (C5154 + C5155) * C2296 +
            (C5156 + C5157) * C2291) *
               C50796 * C1676 -
           ((C5108 * C488 + C50834 * C499 + C5107 * C487 + C50940 * C498) *
                C2291 +
            (C5108 * C469 + C50834 * C489 + C5107 * C468 + C50940 * C486) *
                C2296 +
            (C5869 + C5868) * C2290 + (C5867 + C5866) * C2295 + C5856 * C2289 +
            C5857 * C2294) *
               C50796 * C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                C2294 +
            (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                C2289 +
            (C5142 + C5143) * C2295 + (C5144 + C5145) * C2290 + C5158 * C2296 +
            C5159 * C2291) *
               C50796 * C1676 -
           (C5856 * C2291 + C5857 * C2296 + (C5538 + C5539) * C2290 +
            (C5540 + C5541) * C2295 +
            (C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                C2289 +
            (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                C2294) *
               C50796 * C50760) *
              C278 +
          (((C5107 * C889 + C50940 * C894 + C5108 * C1218 + C50834 * C1226) *
                C2294 +
            (C5107 * C895 + C50940 * C904 + C5108 * C1225 + C50834 * C1230) *
                C2289 +
            (C6080 + C6081) * C2295 + (C6082 + C6083) * C2290 +
            (C6084 + C6085) * C2296 + (C6086 + C6087) * C2291) *
               C50796 * C50760 -
           (C5696 * C2291 + C5697 * C2296 + (C5344 + C5345) * C2290 +
            (C5346 + C5347) * C2295 +
            (C5108 * C895 + C50834 * C904 + C5107 * C299 + C50940 * C316) *
                C2289 +
            (C5108 * C889 + C50834 * C894 + C5107 * C286 + C50940 * C300) *
                C2294) *
               C50796 * C1676) *
              C279 +
          (((C5107 * C287 + C50940 * C301 + C5108 * C1565 + C50834 * C1573) *
                C2294 +
            (C5107 * C302 + C50940 * C317 + C5108 * C1572 + C50834 * C1577) *
                C2289 +
            (C5348 + C5349) * C2295 + (C5350 + C5351) * C2290 +
            (C5352 + C5353) * C2296 + (C5354 + C5355) * C2291) *
               C50796 * C1676 -
           ((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                C2291 +
            (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                C2296 +
            (C5108 * C3590 + C50834 * C3595 + C5107 * C1570 + C50940 * C1576) *
                C2290 +
            (C5108 * C3586 + C50834 * C3591 + C5107 * C1564 + C50940 * C1571) *
                C2295 +
            (C5108 * C3592 + C50834 * C3596 + C5107 * C1572 + C50940 * C1577) *
                C2289 +
            (C5108 * C3587 + C50834 * C3593 + C5107 * C1565 + C50940 * C1573) *
                C2294) *
               C50796 * C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C50680 * C1027 +
          ((((C5541 + C5540) * C10701 + (C5539 + C5538) * C50632) * C7951 +
            ((C6080 + C6081) * C10701 + (C6082 + C6083) * C50632) * C7952 +
            ((C13453 + C13454) * C10701 + (C13455 + C13456) * C50632) * C7953) *
               C50760 -
           (C12785 * C7953 +
            ((C5344 + C5345) * C50632 + (C5346 + C5347) * C10701) * C7952 +
            ((C5145 + C5144) * C50632 + (C5143 + C5142) * C10701) * C7951) *
               C1676) *
              C50680 * C1028 +
          (((C5158 * C10701 + C5159 * C50632) * C7951 +
            ((C5343 + C5342) * C10701 + (C5341 + C5340) * C50632) * C7952 +
            ((C5352 + C5353) * C10701 + (C5354 + C5355) * C50632) * C7953) *
               C1676 -
           (((C5108 * C3588 + C50834 * C3594 + C5107 * C1568 + C50940 * C1575) *
                 C50632 +
             (C5108 * C3585 + C50834 * C3589 + C5107 * C1563 + C50940 * C1569) *
                 C10701) *
                C7953 +
            ((C6087 + C6086) * C50632 + (C6085 + C6084) * C10701) * C7952 +
            (C5856 * C50632 + C5857 * C10701) * C7951) *
               C50760) *
              C50680 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5107 * C122 + C50940 * C129 + C5108 * C463 + C50834 * C477) *
                 C10701 +
             (C5107 * C130 + C50940 * C143 + C5108 * C476 + C50834 * C493) *
                 C50632) *
                C7951 +
            ((C12765 + C12766) * C10701 + (C12767 + C12768) * C50632) * C7952 +
            C12788 * C7953) *
               C1676 -
           (C14390 * C7953 +
            ((C13449 + C13450) * C50632 + (C13451 + C13452) * C10701) * C7952 +
            ((C5108 * C479 + C50834 * C494 + C5107 * C476 + C50940 * C493) *
                 C50632 +
             (C5108 * C464 + C50834 * C478 + C5107 * C463 + C50940 * C477) *
                 C10701) *
                C7951) *
               C50760) *
              C278 +
          ((((C13452 + C13451) * C10701 + (C13450 + C13449) * C50632) * C7951 +
            ((C13448 + C13447) * C10701 + (C13446 + C13445) * C50632) * C7952 +
            ((C14386 + C14387) * C10701 + (C14388 + C14389) * C50632) * C7953) *
               C50760 -
           (C13717 * C7953 +
            ((C12772 + C12771) * C50632 + (C12770 + C12769) * C10701) * C7952 +
            ((C12768 + C12767) * C50632 + (C12766 + C12765) * C10701) * C7951) *
               C1676) *
              C279 +
          ((C12788 * C7951 +
            ((C12776 + C12775) * C10701 + (C12774 + C12773) * C50632) * C7952 +
            ((C13713 + C13714) * C10701 + (C13715 + C13716) * C50632) * C7953) *
               C1676 -
           (((C5108 * C11539 + C50834 * C11541 + C5107 * C9729 +
              C50940 * C9732) *
                 C50632 +
             (C5108 * C11538 + C50834 * C11540 + C5107 * C9726 +
              C50940 * C9730) *
                 C10701) *
                C7953 +
            ((C14389 + C14388) * C50632 + (C14387 + C14386) * C10701) * C7952 +
            C14390 * C7951) *
               C50760) *
              C280) *
         C50661) /
            (p * q * std::sqrt(p + q));
}
