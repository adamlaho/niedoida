/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_yx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_21(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49724 = 0 * ae;
    const double C49723 = ae * be;
    const double C49722 = 0 * be;
    const double C49721 = ae + be;
    const double C49720 = 0 * be;
    const double C49719 = xA - xB;
    const double C49768 = yA - yB;
    const double C49780 = 0 * be;
    const double C49800 = 0 * ae;
    const double C49796 = 0 * be;
    const double C49848 = xP - xQ;
    const double C49847 = yP - yQ;
    const double C49846 = p + q;
    const double C49845 = p * q;
    const double C49855 = std::pow(ae, 2);
    const double C49853 = bs[3];
    const double C49863 = bs[4];
    const double C49872 = bs[5];
    const double C49886 = bs[6];
    const double C49908 = bs[7];
    const double C50017 = zP - zQ;
    const double C50180 = bs[2];
    const double C122 = bs[0];
    const double C50563 = ce + de;
    const double C50562 = ce * de;
    const double C50561 = xC - xD;
    const double C50585 = yC - yD;
    const double C50601 = zC - zD;
    const double C50693 = zA - zB;
    const double C49729 = C49724 / C49721;
    const double C49726 = 2 * C49721;
    const double C49725 = std::pow(C49721, 2);
    const double C49728 = C49723 * C49719;
    const double C49727 = C49719 * C49722;
    const double C50536 = C49719 * be;
    const double C50535 = C49719 * ae;
    const double C50534 = std::pow(C49719, 2);
    const double C49781 = C49723 * C49768;
    const double C50702 = std::pow(C49768, 2);
    const double C50716 = C49768 * be;
    const double C50715 = C49768 * ae;
    const double C49797 = C49768 * C49780;
    const double C49805 = C49800 / C49721;
    const double C49873 = std::pow(C49848, 2);
    const double C49931 = C49848 * ae;
    const double C49856 = C49847 * ae;
    const double C49854 = C49847 * C49848;
    const double C50043 = std::pow(C49847, 2);
    const double C49849 = 2 * C49845;
    const double C50027 = std::pow(C50017, 2);
    const double C50565 = 2 * C50563;
    const double C50575 = std::pow(C50563, 2);
    const double C50567 = C50561 * de;
    const double C50566 = C50561 * ce;
    const double C50564 = std::pow(C50561, 2);
    const double C50586 = std::pow(C50585, 2);
    const double C50638 = C50585 * de;
    const double C50637 = C50585 * ce;
    const double C50602 = std::pow(C50601, 2);
    const double C50666 = C50601 * de;
    const double C50665 = C50601 * ce;
    const double C50728 = std::pow(C50693, 2);
    const double C50740 = C50693 * be;
    const double C50739 = C50693 * ae;
    const double C50544 = std::pow(C49726, -1);
    const double C50848 = std::pow(C49726, -2);
    const double C49730 = 2 * C49725;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (xP - xQ) * std::pow(ae, 2)) /
                        C49725;
    const double C50827 = 4 * C49725;
    const double C49731 = C49727 / C49721;
    const double C50537 = C50534 * C49723;
    const double C50703 = C50702 * C49723;
    const double C49802 = C49797 / C49721;
    const double C49934 = C49863 * C49931;
    const double C49940 = C49853 * C49931;
    const double C49947 = C49872 * C49931;
    const double C49959 = C49886 * C49931;
    const double C49980 = C49908 * C49931;
    const double C49859 = C49853 * C49856;
    const double C49865 = C49863 * C49856;
    const double C49875 = C49872 * C49856;
    const double C49890 = C49886 * C49856;
    const double C49914 = C49908 * C49856;
    const double C49858 = C49854 * C49855;
    const double C49850 = C49849 / C49846;
    const double C129 = (-(bs[1] * C49931 * C49849) / C49846) / C49721;
    const double C133 = (-(bs[1] * C49856 * C49849) / C49846) / C49721;
    const double C123 = -(C49848 * bs[1] * C49849) / C49846;
    const double C256 = -(C49847 * bs[1] * C49849) / C49846;
    const double C397 = -(C50017 * bs[1] * C49849) / C49846;
    const double C50576 = std::pow(C50565, -1);
    const double C50836 = std::pow(C50565, -2);
    const double C50580 = 2 * C50575;
    const double C50834 = 4 * C50575;
    const double C50568 = C50564 * C50562;
    const double C50587 = C50586 * C50562;
    const double C50603 = C50602 * C50562;
    const double C50729 = C50728 * C49723;
    const double C49736 = C49722 / C49730;
    const double C49734 = C49720 / C49730;
    const double C49799 = C49780 / C49730;
    const double C49803 = C49796 / C49730;
    const double C49733 = 0 - C49731;
    const double C50538 = C50537 / C49721;
    const double C50704 = C50703 / C49721;
    const double C49806 = 0 - C49802;
    const double C49864 = C49863 * C49858;
    const double C49874 = C49872 * C49858;
    const double C49888 = C49886 * C49858;
    const double C49912 = C49908 * C49858;
    const double C49852 = -C49850;
    const double C49862 = std::pow(C49850, 4);
    const double C49885 = std::pow(C49850, 6);
    const double C144 = (ae * std::pow(C49850, 2) * bs[2] * C49847 * ae +
                         C49848 * std::pow(-C49850, 3) * bs[3] * C49847 *
                             C49848 * std::pow(ae, 2)) /
                        C49725;
    const double C50179 = std::pow(C49850, 2);
    const double C130 =
        (C49848 * std::pow(C49850, 2) * bs[2] * C49931) / C49721 -
        (ae * bs[1] * C49849) / (C49846 * C49721);
    const double C50569 = C50568 / C50563;
    const double C50588 = C50587 / C50563;
    const double C50604 = C50603 / C50563;
    const double C50730 = C50729 / C49721;
    const double C49738 = C49733 * ae;
    const double C50539 = -C50538;
    const double C50705 = -C50704;
    const double C49809 = C49806 * ae;
    const double C49857 = std::pow(C49852, 3);
    const double C49871 = std::pow(C49852, 5);
    const double C49907 = std::pow(C49852, 7);
    const double C49867 = C49862 * C49865;
    const double C49866 = C49862 * C49864;
    const double C49933 = C49863 * C49862;
    const double C49935 = C49862 * C49934;
    const double C49893 = C49885 * C49890;
    const double C49892 = C49885 * C49888;
    const double C49961 = C49885 * C49959;
    const double C49981 = C49886 * C49885;
    const double C50181 = C50180 * C50179;
    const double C134 = (C49848 * C50179 * C50180 * C49856) / C49721;
    const double C266 = (C49847 * C50179 * C50180 * C49856) / C49721 -
                        (ae * bs[1] * C49849) / (C49846 * C49721);
    const double C270 = (C49847 * C50179 * C50180 * C49931) / C49721;
    const double C407 = (C50017 * C50179 * C50180 * C49856) / C49721;
    const double C411 = (C50017 * C50179 * C50180 * C49931) / C49721;
    const double C50570 = -C50569;
    const double C50589 = -C50588;
    const double C50605 = -C50604;
    const double C50731 = -C50730;
    const double C49741 = C49738 / C49721;
    const double C50540 = std::exp(C50539);
    const double C50706 = std::exp(C50705);
    const double C49811 = C49809 / C49721;
    const double C49860 = C49857 * C49859;
    const double C49932 = C49853 * C49857;
    const double C49941 = C49857 * C49940;
    const double C286 = (ae * std::pow(C49850, 2) * bs[2] * C49931 +
                         C49847 * C49857 * C49853 * C49858) /
                        C49725;
    const double C427 = ((zP - zQ) * C49857 * C49853 * C49858) / C49725;
    const double C49877 = C49871 * C49875;
    const double C49876 = C49871 * C49874;
    const double C49950 = C49871 * C49947;
    const double C49960 = C49872 * C49871;
    const double C49917 = C49907 * C49914;
    const double C49916 = C49907 * C49912;
    const double C49983 = C49907 * C49980;
    const double C49870 = ae * C49867;
    const double C49869 = C49848 * C49867;
    const double C50301 = C49847 * C49867;
    const double C428 =
        (C49857 * C49853 * C49858 + C49866 * std::pow(zP - zQ, 2)) / C49725;
    const double C49949 = C49848 * C49933;
    const double C49948 = C49933 * ae;
    const double C50190 = C49933 * C49873;
    const double C50303 = C49933 * C50043;
    const double C50348 = C49847 * C49933;
    const double C50520 = C49933 * C50027;
    const double C50526 = C50017 * C49933;
    const double C49943 = C49848 * C49935;
    const double C50056 = ae * C49935;
    const double C50055 = C49847 * C49935;
    const double C49895 = C49893 * C49873;
    const double C49906 = ae * C49893;
    const double C49905 = C49848 * C49893;
    const double C50375 = C49847 * C49893;
    const double C50427 = C49893 * C50027;
    const double C49894 = C49848 * C49892;
    const double C50093 = C49847 * C49892;
    const double C50108 = C49892 * C50027;
    const double C50118 = C50017 * C49892;
    const double C49965 = C49848 * C49961;
    const double C50094 = C49961 * C50043;
    const double C50128 = ae * C49961;
    const double C50127 = C49847 * C49961;
    const double C50147 = C49961 * C50027;
    const double C50156 = C50017 * C49961;
    const double C49986 = C49981 * C49873;
    const double C49985 = C49848 * C49981;
    const double C49984 = C49981 * ae;
    const double C50378 = C49981 * C50043;
    const double C124 = C50181 * C49873 - (bs[1] * C49849) / C49846;
    const double C255 = C49847 * C49848 * C50181;
    const double C257 = C50181 * C50043 - (bs[1] * C49849) / C49846;
    const double C396 = C50017 * C49848 * C50181;
    const double C398 = C50181 * C50027 - (bs[1] * C49849) / C49846;
    const double C775 = C50017 * C49847 * C50181;
    const double C50571 = std::exp(C50570);
    const double C50590 = std::exp(C50589);
    const double C50606 = std::exp(C50605);
    const double C50732 = std::exp(C50731);
    const double C49743 = C49741 - C49734;
    const double C10721 = C50540 * C270;
    const double C12859 = C50540 * C411;
    const double C49732 = C49728 * C50540;
    const double C50541 = C50540 * C50535;
    const double C50545 = C50544 * C50540;
    const double C50823 = C50540 / C49726;
    const double C50822 = C50540 * C50536;
    const double C2159 = C50848 * C50540;
    const double C49782 = C49781 * C50706;
    const double C121 = -(2 * C49723 * (yA - yB) * C50706) / C49721;
    const double C2165 =
        ((C50706 - (C49768 * 2 * C49723 * C49768 * C50706) / C49721) * ae) /
            C49721 -
        (0 * be) / C49730;
    const double C2166 =
        (0 * ae) / C49721 - (C49723 * C49768 * C50706) / C49725;
    const double C50717 = C50706 * C50715;
    const double C50720 = C50544 * C50706;
    const double C50852 = C50706 * C50716;
    const double C50851 = C50706 / C49726;
    const double C7777 = C50848 * C50706;
    const double C49813 = C49811 - C49803;
    const double C145 = (C49857 * C49853 * C49858 + ae * C49848 * C49860 +
                         C49848 * (ae * C49860 + C49848 * std::pow(C49850, 4) *
                                                     bs[4] * C49858)) /
                        C49725;
    const double C146 =
        (2 * (ae * C49860 + C49848 * C49866) +
         ae * (C49860 + C49867 * std::pow(C49848, 2)) +
         C49848 * (C49866 + ae * C49848 * C49867 +
                   C49848 * (ae * C49867 +
                             C49848 * std::pow(C49852, 5) * bs[5] * C49858))) /
        C49725;
    const double C285 = (ae * (C49848 * C49857 * C49853 * C49931 +
                               bs[2] * std::pow(C49850, 2) * ae) +
                         C49847 * (ae * C49860 + C49848 * C49866)) /
                        C49725;
    const double C426 = ((zP - zQ) * (ae * C49860 + C49848 * C49866)) / C49725;
    const double C135 = (C50179 * C50180 * C49856 + C49860 * C49873) / C49721;
    const double C136 =
        (2 * C49848 * C49860 + C49848 * (C49860 + C49867 * C49873)) / C49721;
    const double C265 =
        (C49847 * C49848 * C49860 + C49848 * C50181 * ae) / C49721;
    const double C275 =
        (C50179 * C50180 * C49856 + C49847 * (C49847 * C49860 + C50181 * ae) +
         C49847 * C50181 * ae) /
        C49721;
    const double C405 = (C50017 * (C49860 + C49867 * C49873)) / C49721;
    const double C406 = (C50017 * C49848 * C49860) / C49721;
    const double C416 = (C50179 * C50180 * C49856 + C49860 * C50027) / C49721;
    const double C784 = (C50017 * (C49847 * C49860 + C50181 * ae)) / C49721;
    const double C1721 =
        (2 * C50017 * C49860 + C50017 * (C49860 + C49867 * C50027)) / C49721;
    const double C49944 = C49932 * ae;
    const double C50189 = C49848 * C49932;
    const double C50302 = C49847 * C49932;
    const double C264 = (C49847 * (C49860 + C49867 * C49873) +
                         (C50181 + C49932 * C49873) * ae) /
                        C49721;
    const double C125 =
        2 * C49848 * C50181 + C49848 * (C50181 + C49932 * C49873);
    const double C254 = C49847 * (C50181 + C49932 * C49873);
    const double C395 = C50017 * (C50181 + C49932 * C49873);
    const double C972 =
        2 * C49847 * C50181 + C49847 * (C50181 + C49932 * C50043);
    const double C1433 = C50017 * (C50181 + C49932 * C50043);
    const double C1717 =
        2 * C50017 * C50181 + C50017 * (C50181 + C49932 * C50027);
    const double C7161 =
        3 * (C50181 + C49932 * C50027) +
        C50017 * (2 * C50017 * C49932 + C50017 * (C49932 + C49933 * C50027));
    const double C287 = (C49857 * C49853 * C49858 + ae * C49847 * C49941 +
                         C49847 * (ae * C49941 + C49847 * C49866)) /
                        C49725;
    const double C790 =
        (ae * C50017 * C49941 + C49847 * C50017 * C49866) / C49725;
    const double C131 =
        (C50179 * C50180 * C49931 + C49848 * (C49848 * C49941 + C50181 * ae) +
         C49848 * C50181 * ae) /
        C49721;
    const double C269 = (C49847 * (C49848 * C49941 + C50181 * ae)) / C49721;
    const double C271 = (C50179 * C50180 * C49931 + C49941 * C50043) / C49721;
    const double C410 = (C50017 * (C49848 * C49941 + C50181 * ae)) / C49721;
    const double C412 = (C50179 * C50180 * C49931 + C49941 * C50027) / C49721;
    const double C780 = (C50017 * C49847 * C49941) / C49721;
    const double C980 =
        (2 * C49847 * C49941 + C49847 * (C49941 + C49935 * C50043)) / C49721;
    const double C1441 = (C50017 * (C49941 + C49935 * C50043)) / C49721;
    const double C1725 =
        (2 * C50017 * C49941 + C50017 * (C49941 + C49935 * C50027)) / C49721;
    const double C10723 = C50540 * C286;
    const double C12861 = C50540 * C427;
    const double C49879 = C49877 * C49873;
    const double C49884 = ae * C49877;
    const double C49883 = C49848 * C49877;
    const double C50347 = C49847 * C49877;
    const double C50411 = C49877 * C50027;
    const double C50426 = C50017 * C49877;
    const double C7164 =
        (3 * (C49860 + C49867 * C50027) +
         C50017 * (2 * C50017 * C49867 + C50017 * (C49867 + C49877 * C50027))) /
        C49721;
    const double C49878 = C49848 * C49876;
    const double C50057 = C49847 * C49876;
    const double C50069 = C50017 * C49876;
    const double C984 = (2 * (ae * C49941 + C49847 * C49866) +
                         ae * (C49941 + C49935 * std::pow(C49847, 2)) +
                         C49847 * (C49866 + ae * C49847 * C49935 +
                                   C49847 * (ae * C49935 + C49847 * C49876))) /
                        C49725;
    const double C1098 = (ae * (C49941 + C49935 * C50027) +
                          C49847 * (C49866 + C49876 * C50027)) /
                         C49725;
    const double C1445 =
        (C50017 * C49866 + ae * C50017 * C49847 * C49935 +
         C49847 * (ae * C50017 * C49935 + C49847 * C50017 * C49876)) /
        C49725;
    const double C1729 =
        (2 * C50017 * C49866 + C50017 * (C49866 + C49876 * C50027)) / C49725;
    const double C49952 = C49848 * C49950;
    const double C50058 = C49950 * C50043;
    const double C50092 = ae * C49950;
    const double C50091 = C49847 * C49950;
    const double C50117 = C50017 * C49950;
    const double C50417 = C49950 * C50027;
    const double C7167 =
        (3 * (C49941 + C49935 * C50027) +
         C50017 * (2 * C50017 * C49935 + C50017 * (C49935 + C49950 * C50027))) /
        C49721;
    const double C49964 = C49960 * C49873;
    const double C49963 = C49848 * C49960;
    const double C49962 = C49960 * ae;
    const double C50349 = C49960 * C50043;
    const double C50376 = C49847 * C49960;
    const double C50527 = C49960 * C50027;
    const double C49919 = C49917 * C49873;
    const double C49918 = C49848 * C49916;
    const double C50129 = C49847 * C49916;
    const double C50148 = C49916 * C50027;
    const double C50157 = C50017 * C49916;
    const double C49987 = C49848 * C49983;
    const double C50131 = C49983 * C50043;
    const double C417 = (C49848 * C49860 + C49869 * C50027) / C49721;
    const double C12871 = C50540 * C428;
    const double C49951 = C49949 * ae;
    const double C50193 = 2 * C49949;
    const double C50296 = C49847 * C49949;
    const double C50191 = C49932 + C50190;
    const double C50305 = C49932 + C50303;
    const double C50353 = 2 * C50348;
    const double C50351 = C50348 * ae;
    const double C50521 = C49932 + C50520;
    const double C50528 = 2 * C50526;
    const double C3502 =
        (C49866 + C49876 * C50027 + ae * (C50055 + C49847 * C49950 * C50027) +
         C49847 * (ae * (C49935 + C49950 * C50027) +
                   C49847 * (C49876 + C49892 * C50027))) /
        C49725;
    const double C1094 = (C49847 * C49941 + C50055 * C50027) / C49721;
    const double C49897 = C49877 + C49895;
    const double C49913 = 2 * C49905;
    const double C49911 = ae * C49905;
    const double C50334 = C49847 * C49905;
    const double C50408 = C49905 * C50027;
    const double C50429 = C49877 + C50427;
    const double C50109 = C49876 + C50108;
    const double C50120 = C49847 * C50118;
    const double C50166 = 2 * C50118;
    const double C50098 = C49950 + C50094;
    const double C50135 = 2 * C50127;
    const double C50133 = ae * C50127;
    const double C50155 = C50017 * C50127;
    const double C50423 = C50127 * C50027;
    const double C50149 = C49950 + C50147;
    const double C50159 = ae * C50156;
    const double C49989 = C49960 + C49986;
    const double C49988 = C49985 * ae;
    const double C50336 = C49985 * C50043;
    const double C50382 = C49960 + C50378;
    const double C50572 = C50571 * C50566;
    const double C50577 = C50576 * C50571;
    const double C50831 = C50571 * C50567;
    const double C50828 = C50571 / C50565;
    const double C897 = C50836 * C50571;
    const double C50639 = C50590 * C50637;
    const double C50642 = C50576 * C50590;
    const double C50840 = C50590 * C50638;
    const double C50835 = C50590 / C50565;
    const double C250 = C50836 * C50590;
    const double C50667 = C50606 * C50665;
    const double C50670 = C50576 * C50606;
    const double C50844 = C50606 * C50666;
    const double C50837 = C50606 / C50565;
    const double C393 = C50836 * C50606;
    const double C50741 = C50732 * C50739;
    const double C50744 = C50544 * C50732;
    const double C50857 = C50732 * C50740;
    const double C50856 = C50732 / C49726;
    const double C15335 = C50848 * C50732;
    const double C49737 = C49732 / C49725;
    const double C49735 = 2 * C49732;
    const double C50825 = C50541 / C49730;
    const double C50824 = C50541 * C50536;
    const double C50821 = C50541 / C49721;
    const double C50548 = C50545 * C50536;
    const double C108 = C50545 / C50827;
    const double C22716 = C50545 / C49726;
    const double C2157 = (C50540 * std::pow(C50536, 2)) / C49725 + C50823;
    const double C50861 = C50822 / C49721;
    const double C2158 = (-2 * C50544 * C50822) / C49721;
    const double C49783 = 2 * C49782;
    const double C49801 = C49782 / C49725;
    const double C50854 = C50717 / C49730;
    const double C50853 = C50717 * C50716;
    const double C50849 = C50717 / C49721;
    const double C50723 = C50720 * C50716;
    const double C10615 = C50720 / C50827;
    const double C25536 = C50720 / C49726;
    const double C50873 = C50852 / C49721;
    const double C7776 = (-2 * C50544 * C50852) / C49721;
    const double C7775 = (C50706 * std::pow(C50716, 2)) / C49725 + C50851;
    const double C7937 = C50545 * C285;
    const double C10739 = C50540 * C285;
    const double C25696 = C50545 * C285;
    const double C12877 = C50540 * C426;
    const double C15636 = C50545 * C426;
    const double C28798 = C50545 * C426;
    const double C49945 = C49943 + C49944;
    const double C50304 = C50301 + C49944;
    const double C976 =
        (2 * (C49847 * C49860 + C50181 * ae) +
         C49847 * (C49860 + C49847 * (C49847 * C49867 + C49944) +
                   C49847 * C49932 * ae) +
         (C50181 + C49932 * C50043) * ae) /
        C49721;
    const double C1090 =
        (C49847 * C49860 + C50181 * ae + (C49847 * C49867 + C49944) * C50027) /
        C49721;
    const double C1437 =
        (C50017 * (C49860 + C49847 * (C49847 * C49867 + C49944) +
                   C49847 * C49932 * ae)) /
        C49721;
    const double C276 =
        (C49848 * C49860 + C49847 * (C49847 * C49869 + C50189 * ae) +
         C49847 * C50189 * ae) /
        C49721;
    const double C785 = (C50017 * (C49847 * C49869 + C50189 * ae)) / C49721;
    const double C258 = C49848 * C50181 + C50189 * C50043;
    const double C399 = C49848 * C50181 + C50189 * C50027;
    const double C776 = C50017 * C49847 * C50189;
    const double C971 =
        2 * C49847 * C50189 + C49847 * (C50189 + C49949 * C50043);
    const double C1432 = C50017 * (C50189 + C49949 * C50043);
    const double C1716 =
        2 * C50017 * C50189 + C50017 * (C50189 + C49949 * C50027);
    const double C1086 = C49847 * C50181 + C50302 * C50027;
    const double C4429 =
        2 * C50017 * C50302 + C50017 * (C50302 + C50348 * C50027);
    const double C10727 = C50540 * C287;
    const double C11219 = C50540 * C790;
    const double C7933 = C50545 * C269;
    const double C10737 = C50540 * C269;
    const double C25692 = C50545 * C269;
    const double C10725 = C50540 * C271;
    const double C12875 = C50540 * C410;
    const double C15632 = C50545 * C410;
    const double C28794 = C50545 * C410;
    const double C12873 = C50540 * C412;
    const double C11221 = C50540 * C780;
    const double C10729 = C50540 * C980;
    const double C11217 = C50540 * C1441;
    const double C14739 = C50540 * C1725;
    const double C49881 = C49867 + C49879;
    const double C49896 = C49884 + C49894;
    const double C49889 = 2 * C49883;
    const double C49887 = ae * C49883;
    const double C50295 = C49847 * C49883;
    const double C1720 =
        (2 * C50017 * C49869 + C50017 * (C49869 + C49883 * C50027)) / C49721;
    const double C7163 =
        (3 * (C49869 + C49883 * C50027) +
         C50017 * (2 * C50017 * C49883 + C50017 * (C49883 + C49905 * C50027))) /
        C49721;
    const double C50350 = C50347 + C49948;
    const double C50412 = C49867 + C50411;
    const double C50428 = 2 * C50426;
    const double C49880 = C49870 + C49878;
    const double C50059 = C50056 + C50057;
    const double C4438 =
        (ae * (2 * C50017 * C49935 + C50017 * (C49935 + C49950 * C50027)) +
         C49847 * (2 * C50069 + C50017 * (C49876 + C49892 * C50027))) /
        C49725;
    const double C7170 =
        (3 * (C49866 + C49876 * C50027) +
         C50017 * (2 * C50069 + C50017 * (C49876 + C49892 * C50027))) /
        C49725;
    const double C10731 = C50540 * C984;
    const double C11525 = C50540 * C1098;
    const double C11215 = C50540 * C1445;
    const double C14741 = C50540 * C1729;
    const double C49953 = C49952 + C49948;
    const double C50060 = C49935 + C50058;
    const double C50096 = C50092 + C50093;
    const double C50097 = 2 * C50091;
    const double C50095 = ae * C50091;
    const double C4435 =
        (2 * C50017 * C50055 + C50017 * (C50055 + C50091 * C50027)) / C49721;
    const double C14734 =
        (3 * (C50055 + C50091 * C50027) +
         C50017 * (2 * C50017 * C50091 + C50017 * (C50091 + C50127 * C50027))) /
        C49721;
    const double C50119 = ae * C50117;
    const double C50433 = 2 * C50117;
    const double C50418 = C49935 + C50417;
    const double C20278 = C50540 * C7167;
    const double C49967 = C49933 + C49964;
    const double C49966 = C49963 * ae;
    const double C49982 = 2 * C49963;
    const double C50297 = C49963 * C50043;
    const double C50335 = C49847 * C49963;
    const double C50517 = C49963 * C50027;
    const double C7160 =
        3 * (C50189 + C49949 * C50027) +
        C50017 * (2 * C50017 * C49949 + C50017 * (C49949 + C49963 * C50027));
    const double C49968 = C49965 + C49962;
    const double C50380 = C50375 + C49962;
    const double C50352 = C49933 + C50349;
    const double C50383 = 2 * C50376;
    const double C50381 = C50376 * ae;
    const double C50523 = C50376 * C50027;
    const double C14730 =
        3 * (C50302 + C50348 * C50027) +
        C50017 * (2 * C50017 * C50348 + C50017 * (C50348 + C50376 * C50027));
    const double C50529 = C49933 + C50527;
    const double C49921 = C49893 + C49919;
    const double C49920 = C49906 + C49918;
    const double C50134 = C50128 + C50129;
    const double C50150 = C49892 + C50148;
    const double C50160 = C49847 * C50157;
    const double C49990 = C49987 + C49984;
    const double C50136 = C49961 + C50131;
    const double C975 =
        (2 * (C49847 * C49869 + C50189 * ae) +
         C49847 * (C49869 + C49847 * (C49847 * C49883 + C49951) +
                   C49847 * C49949 * ae) +
         (C50189 + C49949 * C50043) * ae) /
        C49721;
    const double C1089 =
        (C49847 * C49869 + C50189 * ae + (C49847 * C49883 + C49951) * C50027) /
        C49721;
    const double C1436 =
        (C50017 * (C49869 + C49847 * (C49847 * C49883 + C49951) +
                   C49847 * C49949 * ae)) /
        C49721;
    const double C1085 = C49847 * C50189 + C50296 * C50027;
    const double C126 = 3 * (C50181 + C49932 * C49873) +
                        C49848 * (2 * C50189 + C49848 * C50191);
    const double C253 = C49847 * (2 * C50189 + C49848 * C50191);
    const double C259 = C50181 + C49932 * C49873 + C50191 * C50043;
    const double C394 = C50017 * (2 * C50189 + C49848 * C50191);
    const double C400 = C50181 + C49932 * C49873 + C50191 * C50027;
    const double C777 = C50017 * C49847 * C50191;
    const double C3317 = 3 * (C50181 + C49932 * C50043) +
                         C49847 * (2 * C50302 + C49847 * C50305);
    const double C3493 = C50181 + C49932 * C50043 + C50305 * C50027;
    const double C4009 = C50017 * (2 * C50302 + C49847 * C50305);
    const double C17520 =
        4 * (2 * C50017 * C49932 + C50017 * C50521) +
        C50017 * (3 * C50521 + C50017 * (2 * C50017 * C49933 +
                                         C50017 * (C49933 + C49960 * C50027)));
    const double C11529 = C50540 * C3502;
    const double C11523 = C50540 * C1094;
    const double C49899 = C49848 * C49897;
    const double C49909 = 3 * C49897;
    const double C49904 = ae * C49897;
    const double C50289 = C49847 * C49897;
    const double C49915 = C49892 + C49911;
    const double C50409 = C49883 + C50408;
    const double C50430 = C50017 * C50429;
    const double C10058 =
        (2 * C50069 + C50017 * C50109 +
         ae * (2 * C50017 * C50091 +
               C50017 * (C50091 + C49847 * C49961 * C50027)) +
         C49847 *
             (ae * (2 * C50117 + C50017 * (C49950 + C49961 * C50027)) +
              C49847 * (2 * C50118 + C50017 * (C49892 + C49916 * C50027)))) /
        C49725;
    const double C50101 = C49847 * C50098;
    const double C50130 = 3 * C50098;
    const double C50126 = ae * C50098;
    const double C50137 = C49892 + C50133;
    const double C50158 = ae * C50155;
    const double C50424 = C50091 + C50423;
    const double C50151 = ae * C50149;
    const double C50434 = C50017 * C50149;
    const double C49992 = C49848 * C49989;
    const double C49991 = C49989 * ae;
    const double C50291 = C49989 * C50043;
    const double C50339 = C49963 + C50336;
    const double C50385 = C49847 * C50382;
    const double C50832 = C50572 / C50580;
    const double C50830 = C50572 / C50563;
    const double C50829 = C50572 * C50567;
    const double C896 = (2 * C50576 * C50572) / C50563;
    const double C50833 = C50577 * C50567;
    const double C116 = C50577 / C50834;
    const double C536 = C50577 / C50565;
    const double C50865 = C50831 / C50563;
    const double C895 = (C50571 * std::pow(C50566, 2)) / C50575 + C50828;
    const double C50842 = C50639 / C50580;
    const double C50841 = C50639 * C50638;
    const double C50838 = C50639 / C50563;
    const double C249 = (2 * C50576 * C50639) / C50563;
    const double C50843 = C50642 * C50638;
    const double C967 = C50642 / C50834;
    const double C1199 = C50642 / C50565;
    const double C50867 = C50840 / C50563;
    const double C248 = (C50590 * std::pow(C50637, 2)) / C50575 + C50835;
    const double C50846 = C50667 / C50580;
    const double C50845 = C50667 * C50666;
    const double C50839 = C50667 / C50563;
    const double C392 = (2 * C50576 * C50667) / C50563;
    const double C50847 = C50670 * C50666;
    const double C1713 = C50670 / C50834;
    const double C1960 = C50670 / C50565;
    const double C50870 = C50844 / C50563;
    const double C391 = (C50606 * std::pow(C50665, 2)) / C50575 + C50837;
    const double C50859 = C50741 / C49730;
    const double C50858 = C50741 * C50740;
    const double C50850 = C50741 / C49721;
    const double C50747 = C50744 * C50740;
    const double C20843 = C50744 / C50827;
    const double C38216 = C50744 / C49726;
    const double C50876 = C50857 / C49721;
    const double C15334 = (-2 * C50544 * C50857) / C49721;
    const double C15333 = (C50732 * std::pow(C50740, 2)) / C49725 + C50856;
    const double C49740 = C49729 - C49737;
    const double C49739 = C49719 * C49735;
    const double C2164 =
        ((-C49735 / C49721) / C49726 - (0 * be) / C49721) / C49726 -
        (0 * be) / C49721;
    const double C10616 = -C49735 / C49721;
    const double C25538 = (-C49735 / C49721) / C49726 - (0 * be) / C49721;
    const double C50862 = C50824 / C49725;
    const double C7959 = C50821 * C285;
    const double C7955 = C50821 * C269;
    const double C7953 = C50821 * C980;
    const double C7949 = C50821 * C984;
    const double C7943 = C50821 * C287;
    const double C7939 = C50821 * C271;
    const double C7935 = C50821 * C286;
    const double C7931 = C50821 * C270;
    const double C8677 = C50821 * C780;
    const double C8673 = C50821 * C790;
    const double C8669 = C50821 * C1441;
    const double C8665 = C50821 * C1445;
    const double C9143 = C50821 * C3502;
    const double C9135 = C50821 * C1098;
    const double C9131 = C50821 * C1094;
    const double C15658 = C50821 * C426;
    const double C15654 = C50821 * C410;
    const double C15652 = C50821 * C1725;
    const double C15648 = C50821 * C1729;
    const double C15642 = C50821 * C428;
    const double C15638 = C50821 * C412;
    const double C15634 = C50821 * C427;
    const double C15630 = C50821 * C411;
    const double C17531 = C50821 * C7167;
    const double C50826 = C50548 / C49721;
    const double C2345 = C2157 * C285;
    const double C2339 = C2157 * C269;
    const double C2337 = C2157 * C271;
    const double C2331 = C2157 * C287;
    const double C2321 = C2157 * C286;
    const double C2315 = C2157 * C270;
    const double C3047 = C2157 * C780;
    const double C3041 = C2157 * C790;
    const double C3335 = C2157 * C984;
    const double C3329 = C2157 * C980;
    const double C3511 = C2157 * C1098;
    const double C3505 = C2157 * C1094;
    const double C4027 = C2157 * C1445;
    const double C4021 = C2157 * C1441;
    const double C5349 = C2157 * C426;
    const double C5343 = C2157 * C410;
    const double C5341 = C2157 * C412;
    const double C5335 = C2157 * C428;
    const double C5325 = C2157 * C427;
    const double C5319 = C2157 * C411;
    const double C7179 = C2157 * C1729;
    const double C7173 = C2157 * C1725;
    const double C25532 = -C50861;
    const double C2323 = C2158 * C285;
    const double C2317 = C2158 * C269;
    const double C5327 = C2158 * C426;
    const double C5321 = C2158 * C410;
    const double C49798 = C49768 * C49783;
    const double C7781 =
        ((-C49780 / C49721) / C49726 -
         ((C50706 - (C49768 * C49783) / C49721) * be) / C49721) /
            C49726 -
        ((C49768 * ((-C49783 / C49721) / C49726 - (0 * be) / C49721) + C50720) *
         be) /
            C49721;
    const double C7782 =
        ((-C49783 / C49721) / C49726 - (0 * be) / C49721) / C49726 -
        (0 * be) / C49721;
    const double C22723 = (-C49783 / C49721) / C49726 - (0 * be) / C49721;
    const double C49808 = C49805 - C49801;
    const double C50874 = C50853 / C49725;
    const double C50855 = C50723 / C49721;
    const double C22717 = -C50873;
    const double C132 =
        (2 * (C49848 * C49941 + C50181 * ae) +
         C49848 * (C49941 + C49848 * C49945 + C49848 * C49932 * ae) +
         (C50181 + C49932 * C49873) * ae) /
        C49721;
    const double C268 =
        (C49847 * (C49941 + C49848 * C49945 + C50189 * ae)) / C49721;
    const double C272 =
        (C49848 * C49941 + C50181 * ae + C49945 * C50043) / C49721;
    const double C409 =
        (C50017 * (C49941 + C49848 * C49945 + C50189 * ae)) / C49721;
    const double C413 =
        (C49848 * C49941 + C50181 * ae + C49945 * C50027) / C49721;
    const double C781 = (C50017 * C49847 * C49945) / C49721;
    const double C3320 =
        (3 * (C49860 + C49847 * C50304 + C50302 * ae) +
         C49847 * (2 * C50304 +
                   C49847 * (C49867 + C49847 * (C49847 * C49877 + C49948) +
                             C49847 * C49933 * ae) +
                   C50305 * ae) +
         (2 * C50302 + C49847 * C50305) * ae) /
        C49721;
    const double C3496 =
        (C49860 + C49847 * C50304 + C50302 * ae +
         (C49867 + C49847 * (C49847 * C49877 + C49948) + C49847 * C49933 * ae) *
             C50027) /
        C49721;
    const double C4012 =
        (C50017 * (2 * C50304 +
                   C49847 * (C49867 + C49847 * (C49847 * C49877 + C49948) +
                             C49847 * C49933 * ae) +
                   C50305 * ae)) /
        C49721;
    const double C4432 =
        (2 * C50017 * C50304 +
         C50017 * (C50304 + (C49847 * C49877 + C49948) * C50027)) /
        C49721;
    const double C137 = (3 * (C49860 + C49867 * C49873) +
                         C49848 * (2 * C49869 + C49848 * C49881)) /
                        C49721;
    const double C263 = (C49847 * (2 * C49869 + C49848 * C49881) +
                         (2 * C50189 + C49848 * C50191) * ae) /
                        C49721;
    const double C277 =
        (C49860 + C49867 * C49873 + C49847 * (C49847 * C49881 + C50191 * ae) +
         C49847 * C50191 * ae) /
        C49721;
    const double C404 = (C50017 * (2 * C49869 + C49848 * C49881)) / C49721;
    const double C418 = (C49860 + C49867 * C49873 + C49881 * C50027) / C49721;
    const double C786 = (C50017 * (C49847 * C49881 + C50191 * ae)) / C49721;
    const double C1719 =
        (2 * C50017 * C49881 + C50017 * (C49881 + C49897 * C50027)) / C49721;
    const double C49898 = C49848 * C49896;
    const double C49903 = 2 * C49896;
    const double C50050 = C49847 * C49896;
    const double C50067 = C50017 * C49896;
    const double C49891 = C49876 + C49887;
    const double C50298 = C50295 + C49951;
    const double C50354 = C49847 * C50350;
    const double C50374 = 2 * C50350;
    const double C17522 =
        (4 * (2 * C50017 * C49867 + C50017 * C50412) +
         C50017 *
             (3 * C50412 + C50017 * (2 * C50017 * C49877 +
                                     C50017 * (C49877 + C49893 * C50027)))) /
        C49721;
    const double C147 =
        (3 * (C49866 + ae * C49869 + C49848 * C49880) +
         ae * (2 * C49869 + C49848 * C49881) +
         C49848 *
             (2 * C49880 + ae * C49881 +
              C49848 * (C49876 + ae * C49848 * C49877 +
                        C49848 * (ae * C49877 + C49848 * std::pow(C49850, 6) *
                                                    bs[6] * C49858)))) /
        C49725;
    const double C284 = (ae * (C49857 * C49853 * C49931 +
                               C49848 * (C49848 * C49935 + C49932 * ae) +
                               C49848 * C49932 * ae) +
                         C49847 * (C49866 + ae * C49869 + C49848 * C49880)) /
                        C49725;
    const double C288 = (ae * C49860 + C49848 * C49866 + ae * C49847 * C49945 +
                         C49847 * (ae * C49945 + C49847 * C49880)) /
                        C49725;
    const double C425 =
        ((zP - zQ) * (C49866 + ae * C49869 + C49848 * C49880)) / C49725;
    const double C429 =
        (ae * C49860 + C49848 * C49866 + C49880 * std::pow(zP - zQ, 2)) /
        C49725;
    const double C791 =
        (ae * C50017 * C49945 + C49847 * C50017 * C49880) / C49725;
    const double C1728 =
        (2 * C50017 * C49880 + C50017 * (C49880 + C49896 * C50027)) / C49725;
    const double C13833 = C50540 * C4438;
    const double C16632 = C50821 * C4438;
    const double C17535 = C50821 * C7170;
    const double C20280 = C50540 * C7170;
    const double C49954 = C49848 * C49953;
    const double C49958 = 2 * C49953;
    const double C50049 = ae * C49953;
    const double C50048 = C49847 * C49953;
    const double C983 = (2 * (ae * C49945 + C49847 * C49880) +
                         ae * (C49945 + C49953 * std::pow(C49847, 2)) +
                         C49847 * (C49880 + ae * C49847 * C49953 +
                                   C49847 * (ae * C49953 + C49847 * C49896))) /
                        C49725;
    const double C1097 = (ae * (C49945 + C49953 * C50027) +
                          C49847 * (C49880 + C49896 * C50027)) /
                         C49725;
    const double C1444 =
        (C50017 * C49880 + ae * C50017 * C49847 * C49953 +
         C49847 * (ae * C50017 * C49953 + C49847 * C50017 * C49896)) /
        C49725;
    const double C979 =
        (2 * C49847 * C49945 + C49847 * (C49945 + C49953 * C50043)) / C49721;
    const double C1440 = (C50017 * (C49945 + C49953 * C50043)) / C49721;
    const double C1724 =
        (2 * C50017 * C49945 + C50017 * (C49945 + C49953 * C50027)) / C49721;
    const double C3326 =
        (3 * (C49866 + ae * C50055 + C49847 * C50059) +
         ae * (2 * C50055 + C49847 * C50060) +
         C49847 * (2 * C50059 + ae * C50060 +
                   C49847 * (C49876 + ae * C49847 * C49950 +
                             C49847 * (ae * C49950 + C49847 * C49892)))) /
        C49725;
    const double C4018 =
        (2 * (ae * C50017 * C49935 + C49847 * C50069) + ae * C50017 * C50060 +
         C49847 *
             (C50069 + ae * C50017 * C49847 * C49950 +
              C49847 * (ae * C50017 * C49950 + C49847 * C50017 * C49892))) /
        C49725;
    const double C9128 =
        (2 * (ae * (C49935 + C49950 * C50027) + C49847 * C50109) +
         ae * (C50060 + C50098 * C50027) +
         C49847 * (C50109 + ae * (C50091 + C49847 * C49961 * C50027) +
                   C49847 * (ae * (C49950 + C49961 * C50027) +
                             C49847 * (C49892 + C49916 * C50027)))) /
        C49725;
    const double C3323 = (3 * (C49941 + C49935 * C50043) +
                          C49847 * (2 * C50055 + C49847 * C50060)) /
                         C49721;
    const double C3499 = (C49941 + C49935 * C50043 + C50060 * C50027) / C49721;
    const double C4015 = (C50017 * (2 * C50055 + C49847 * C50060)) / C49721;
    const double C10056 =
        (2 * C50017 * C50060 + C50017 * (C50060 + C50098 * C50027)) / C49721;
    const double C50100 = C49847 * C50096;
    const double C50125 = 2 * C50096;
    const double C50099 = C49876 + C50095;
    const double C13831 = C50540 * C4435;
    const double C16628 = C50821 * C4435;
    const double C19376 = C50540 * C14734;
    const double C50121 = C50119 + C50120;
    const double C17524 =
        (4 * (2 * C50017 * C49935 + C50017 * C50418) +
         C50017 * (3 * C50418 + C50017 * (2 * C50117 + C50017 * C50149))) /
        C49721;
    const double C49969 = C49967 * ae;
    const double C50194 = C49848 * C49967;
    const double C50199 = 3 * C49967;
    const double C50290 = C49847 * C49967;
    const double C970 =
        2 * C49847 * C50191 + C49847 * (C50191 + C49967 * C50043);
    const double C1431 = C50017 * (C50191 + C49967 * C50043);
    const double C1715 =
        2 * C50017 * C50191 + C50017 * (C50191 + C49967 * C50027);
    const double C7159 =
        3 * (C50191 + C49967 * C50027) +
        C50017 * (2 * C50017 * C49967 + C50017 * (C49967 + C49989 * C50027));
    const double C50337 = C50334 + C49966;
    const double C50299 = C49949 + C50297;
    const double C50340 = 2 * C50335;
    const double C50338 = C50335 * ae;
    const double C4428 =
        2 * C50017 * C50296 + C50017 * (C50296 + C50335 * C50027);
    const double C16622 =
        3 * (C50296 + C50335 * C50027) +
        C50017 * (2 * C50017 * C50335 +
                  C50017 * (C50335 + C49847 * C49985 * C50027));
    const double C50518 = C49949 + C50517;
    const double C49970 = C49848 * C49968;
    const double C49979 = 2 * C49968;
    const double C50051 = C49968 * C50043;
    const double C50078 = ae * C49968;
    const double C50077 = C49847 * C49968;
    const double C50111 = C50017 * C49968;
    const double C50414 = C49968 * C50027;
    const double C7166 =
        (3 * (C49945 + C49953 * C50027) +
         C50017 * (2 * C50017 * C49953 + C50017 * (C49953 + C49968 * C50027))) /
        C49721;
    const double C50384 = C49847 * C50380;
    const double C50420 = C50380 * C50027;
    const double C14733 =
        (3 * (C50304 + C50350 * C50027) +
         C50017 * (2 * C50017 * C50350 + C50017 * (C50350 + C50380 * C50027))) /
        C49721;
    const double C50355 = C49847 * C50352;
    const double C50379 = 3 * C50352;
    const double C50377 = C50352 * ae;
    const double C10052 =
        2 * C50017 * C50305 + C50017 * (C50305 + C50352 * C50027);
    const double C14729 =
        3 * (C50305 + C50352 * C50027) +
        C50017 * (2 * C50017 * C50352 + C50017 * (C50352 + C50382 * C50027));
    const double C50524 = C50348 + C50523;
    const double C50530 = C50017 * C50529;
    const double C49923 = C49848 * C49921;
    const double C7162 =
        (3 * (C49881 + C49897 * C50027) +
         C50017 * (2 * C50017 * C49897 + C50017 * (C49897 + C49921 * C50027))) /
        C49721;
    const double C49922 = C49848 * C49920;
    const double C50079 = C49847 * C49920;
    const double C50105 = C49920 * C50027;
    const double C50112 = C50017 * C49920;
    const double C50138 = C49847 * C50134;
    const double C50152 = C49847 * C50150;
    const double C50167 = C50017 * C50150;
    const double C50162 = C50159 + C50160;
    const double C49993 = C49848 * C49990;
    const double C50080 = C49990 * C50043;
    const double C50139 = C49847 * C50136;
    const double C14732 =
        (3 * (C50060 + C50098 * C50027) +
         C50017 * (2 * C50017 * C50098 + C50017 * (C50098 + C50136 * C50027))) /
        C49721;
    const double C49901 = C49889 + C49899;
    const double C17521 =
        (4 * (2 * C50017 * C49883 + C50017 * C50409) +
         C50017 * (3 * C50409 +
                   C50017 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50027)))) /
        C49721;
    const double C50431 = C50428 + C50430;
    const double C13837 = C50540 * C10058;
    const double C50103 = C50097 + C50101;
    const double C50161 = C50118 + C50158;
    const double C20273 =
        (4 * (2 * C50017 * C50091 + C50017 * C50424) +
         C50017 * (3 * C50424 +
                   C50017 * (2 * C50155 +
                             C50017 * (C50127 + C49847 * C49983 * C50027)))) /
        C49721;
    const double C50435 = C50433 + C50434;
    const double C49994 = C49982 + C49992;
    const double C50293 = C49967 + C50291;
    const double C50342 = C49847 * C50339;
    const double C50387 = C50383 + C50385;
    const double C50864 = C50829 / C50575;
    const double C50866 = C50833 / C50563;
    const double C251 = -C50865;
    const double C50868 = C50841 / C50575;
    const double C50869 = C50843 / C50563;
    const double C893 = -C50867;
    const double C50871 = C50845 / C50575;
    const double C50872 = C50847 / C50563;
    const double C1544 = -C50870;
    const double C50877 = C50858 / C49725;
    const double C50860 = C50747 / C49721;
    const double C31984 = -C50876;
    const double C7964 = C49740 * C259;
    const double C7960 = C49740 * C264;
    const double C7956 = C49740 * C254;
    const double C7950 = C49740 * C971;
    const double C7946 = C49740 * C975;
    const double C7944 = C49740 * C276;
    const double C7940 = C49740 * C258;
    const double C7936 = C49740 * C265;
    const double C7932 = C49740 * C255;
    const double C8300 = C49740 * C253;
    const double C8680 = C49740 * C777;
    const double C8674 = C49740 * C776;
    const double C8670 = C49740 * C785;
    const double C8666 = C49740 * C1432;
    const double C8662 = C49740 * C1436;
    const double C9136 = C49740 * C1089;
    const double C9132 = C49740 * C1085;
    const double C15663 = C49740 * C400;
    const double C15659 = C49740 * C405;
    const double C15655 = C49740 * C395;
    const double C15649 = C49740 * C1716;
    const double C15645 = C49740 * C1720;
    const double C15643 = C49740 * C417;
    const double C15639 = C49740 * C399;
    const double C15635 = C49740 * C406;
    const double C15631 = C49740 * C396;
    const double C16005 = C49740 * C394;
    const double C17536 = C49740 * C7163;
    const double C17532 = C49740 * C7160;
    const double C120 =
        (C49740 / C49726 - (0 * be) / C49721) / C49726 - (0 * be) / C49721;
    const double C22721 = C49740 / C49726 - (0 * be) / C49721;
    const double C49742 = C49739 / C49721;
    const double C2342 = C2164 * C253;
    const double C2332 = C2164 * C259;
    const double C2324 = C2164 * C264;
    const double C2318 = C2164 * C254;
    const double C3042 = C2164 * C777;
    const double C5346 = C2164 * C394;
    const double C5336 = C2164 * C400;
    const double C5328 = C2164 * C405;
    const double C5322 = C2164 * C395;
    const double C10746 = C10616 * C975;
    const double C10744 = C10616 * C971;
    const double C10742 = C10616 * C276;
    const double C10740 = C10616 * C258;
    const double C10738 = C10616 * C265;
    const double C10736 = C10616 * C255;
    const double C10734 = C10616 * C3317;
    const double C10730 = C10616 * C976;
    const double C10728 = C10616 * C972;
    const double C10726 = C10616 * C275;
    const double C10724 = C10616 * C257;
    const double C10722 = C10616 * C266;
    const double C10720 = C10616 * C256;
    const double C10968 = C10616 * C259;
    const double C10966 = C10616 * C264;
    const double C10964 = C10616 * C254;
    const double C11228 = C10616 * C1436;
    const double C11226 = C10616 * C1432;
    const double C11224 = C10616 * C785;
    const double C11222 = C10616 * C776;
    const double C11220 = C10616 * C775;
    const double C11218 = C10616 * C784;
    const double C11216 = C10616 * C1433;
    const double C11214 = C10616 * C1437;
    const double C11212 = C10616 * C4009;
    const double C11526 = C10616 * C3493;
    const double C11524 = C10616 * C1090;
    const double C11522 = C10616 * C1086;
    const double C12888 = C10616 * C1089;
    const double C12886 = C10616 * C1085;
    const double C12884 = C10616 * C417;
    const double C12882 = C10616 * C399;
    const double C12876 = C10616 * C406;
    const double C12874 = C10616 * C396;
    const double C12872 = C10616 * C398;
    const double C12870 = C10616 * C416;
    const double C12860 = C10616 * C407;
    const double C12858 = C10616 * C397;
    const double C13064 = C10616 * C777;
    const double C13224 = C10616 * C405;
    const double C13222 = C10616 * C395;
    const double C13830 = C10616 * C4429;
    const double C14740 = C10616 * C1721;
    const double C14738 = C10616 * C1717;
    const double C18443 = C10616 * C1720;
    const double C18441 = C10616 * C1716;
    const double C18765 = C10616 * C400;
    const double C19375 = C10616 * C14730;
    const double C20279 = C10616 * C7164;
    const double C20277 = C10616 * C7161;
    const double C21057 = C10616 * C7163;
    const double C21055 = C10616 * C7160;
    const double C22283 = C10616 * C17520;
    const double C25723 = C25538 * C259;
    const double C25719 = C25538 * C264;
    const double C25715 = C25538 * C254;
    const double C25709 = C25538 * C971;
    const double C25705 = C25538 * C975;
    const double C25703 = C25538 * C276;
    const double C25699 = C25538 * C258;
    const double C25695 = C25538 * C265;
    const double C25691 = C25538 * C255;
    const double C26059 = C25538 * C253;
    const double C26439 = C25538 * C777;
    const double C26433 = C25538 * C776;
    const double C26429 = C25538 * C785;
    const double C26425 = C25538 * C1432;
    const double C26421 = C25538 * C1436;
    const double C26879 = C25538 * C1089;
    const double C26875 = C25538 * C1085;
    const double C28817 = C25538 * C400;
    const double C28813 = C25538 * C405;
    const double C28809 = C25538 * C395;
    const double C28803 = C25538 * C399;
    const double C28799 = C25538 * C417;
    const double C28797 = C25538 * C406;
    const double C28793 = C25538 * C396;
    const double C29253 = C25538 * C394;
    const double C31235 = C25538 * C1720;
    const double C31231 = C25538 * C1716;
    const double C40307 = C25538 * C7163;
    const double C40303 = C25538 * C7160;
    const double C50879 = C50823 - C50862;
    const double C50863 = C50825 - C50826;
    const double C25718 = C25532 * C285;
    const double C25714 = C25532 * C269;
    const double C25712 = C25532 * C980;
    const double C25708 = C25532 * C984;
    const double C25702 = C25532 * C287;
    const double C25698 = C25532 * C271;
    const double C25694 = C25532 * C286;
    const double C25690 = C25532 * C270;
    const double C26436 = C25532 * C780;
    const double C26432 = C25532 * C790;
    const double C26428 = C25532 * C1441;
    const double C26424 = C25532 * C1445;
    const double C26886 = C25532 * C3502;
    const double C26878 = C25532 * C1098;
    const double C26874 = C25532 * C1094;
    const double C28812 = C25532 * C426;
    const double C28808 = C25532 * C410;
    const double C28806 = C25532 * C412;
    const double C28802 = C25532 * C428;
    const double C28796 = C25532 * C427;
    const double C28792 = C25532 * C411;
    const double C30056 = C25532 * C4438;
    const double C30052 = C25532 * C4435;
    const double C31234 = C25532 * C1729;
    const double C31230 = C25532 * C1725;
    const double C40306 = C25532 * C7170;
    const double C40302 = C25532 * C7167;
    const double C49804 = C49798 / C49721;
    const double C10620 =
        (C49808 / C49726 - (0 * be) / C49721) / C49726 - (0 * be) / C49721;
    const double C25541 = C49808 / C49726 - (0 * be) / C49721;
    const double C50886 = C50851 - C50874;
    const double C50875 = C50854 - C50855;
    const double C7780 =
        ((-(0 * be) / C49721) / C49726 -
         ((0 - (C49768 * C49780) / C49721) * be) / C49721) /
            C49726 -
        ((C49768 * ((-C49780 / C49721) / C49726 -
                    ((C50706 - (C49768 * C49783) / C49721) * be) / C49721) +
          C22717) *
         be) /
            C49721 +
        (-C49783 / C49721) / C49726 - (0 * be) / C49721;
    const double C2341 = C2158 * C268;
    const double C2319 = C2159 * C268;
    const double C2679 = C2157 * C268;
    const double C7957 = C50545 * C268;
    const double C8299 = C50821 * C268;
    const double C10965 = C50540 * C268;
    const double C22876 = C22716 * C268;
    const double C25716 = C50545 * C268;
    const double C26058 = C25532 * C268;
    const double C2351 = C2157 * C272;
    const double C2335 = C2158 * C272;
    const double C7963 = C50821 * C272;
    const double C7941 = C50545 * C272;
    const double C10741 = C50540 * C272;
    const double C25722 = C25532 * C272;
    const double C25700 = C50545 * C272;
    const double C5345 = C2158 * C409;
    const double C5323 = C2159 * C409;
    const double C5683 = C2157 * C409;
    const double C13223 = C50540 * C409;
    const double C15656 = C50545 * C409;
    const double C16004 = C50821 * C409;
    const double C28810 = C50545 * C409;
    const double C29252 = C25532 * C409;
    const double C32284 = C22716 * C409;
    const double C5355 = C2157 * C413;
    const double C5339 = C2158 * C413;
    const double C12883 = C50540 * C413;
    const double C15662 = C50821 * C413;
    const double C15640 = C50545 * C413;
    const double C28816 = C25532 * C413;
    const double C28804 = C50545 * C413;
    const double C3049 = C2157 * C781;
    const double C3045 = C2158 * C781;
    const double C8679 = C50821 * C781;
    const double C8675 = C50545 * C781;
    const double C11223 = C50540 * C781;
    const double C26438 = C25532 * C781;
    const double C26434 = C50545 * C781;
    const double C10732 = C10616 * C3320;
    const double C11528 = C10616 * C3496;
    const double C11210 = C10616 * C4012;
    const double C13832 = C10616 * C4432;
    const double C2348 = C2164 * C263;
    const double C8304 = C49740 * C263;
    const double C26063 = C25538 * C263;
    const double C2326 = C2164 * C277;
    const double C7968 = C49740 * C277;
    const double C10970 = C10616 * C277;
    const double C25727 = C25538 * C277;
    const double C5352 = C2164 * C404;
    const double C16009 = C49740 * C404;
    const double C29257 = C25538 * C404;
    const double C5330 = C2164 * C418;
    const double C15667 = C49740 * C418;
    const double C18767 = C10616 * C418;
    const double C28821 = C25538 * C418;
    const double C3036 = C2164 * C786;
    const double C8684 = C49740 * C786;
    const double C13066 = C10616 * C786;
    const double C26443 = C25538 * C786;
    const double C7182 = C2164 * C1719;
    const double C15675 = C49740 * C1719;
    const double C21269 = C10616 * C1719;
    const double C38518 = C25538 * C1719;
    const double C49910 = C49903 + C49904;
    const double C4437 =
        (ae * (2 * C50017 * C49953 + C50017 * (C49953 + C49968 * C50027)) +
         C49847 * (2 * C50067 + C50017 * (C49896 + C49920 * C50027))) /
        C49725;
    const double C7169 =
        (3 * (C49880 + C49896 * C50027) +
         C50017 * (2 * C50067 + C50017 * (C49896 + C49920 * C50027))) /
        C49725;
    const double C49900 = C49891 + C49898;
    const double C3495 =
        (C49869 + C49847 * C50298 + C50296 * ae +
         (C49883 + C49847 * (C49847 * C49905 + C49966) + C49847 * C49963 * ae) *
             C50027) /
        C49721;
    const double C4431 =
        (2 * C50017 * C50298 +
         C50017 * (C50298 + (C49847 * C49905 + C49966) * C50027)) /
        C49721;
    const double C50356 = C49867 + C50354;
    const double C22285 = C10616 * C17522;
    const double C2347 = C2158 * C284;
    const double C2325 = C2159 * C284;
    const double C2685 = C2157 * C284;
    const double C7961 = C50545 * C284;
    const double C8303 = C50821 * C284;
    const double C10967 = C50540 * C284;
    const double C22882 = C22716 * C284;
    const double C25720 = C50545 * C284;
    const double C26062 = C25532 * C284;
    const double C2357 = C2157 * C288;
    const double C2329 = C2158 * C288;
    const double C7967 = C50821 * C288;
    const double C7945 = C50545 * C288;
    const double C10743 = C50540 * C288;
    const double C25726 = C25532 * C288;
    const double C25704 = C50545 * C288;
    const double C5351 = C2158 * C425;
    const double C5329 = C2159 * C425;
    const double C5689 = C2157 * C425;
    const double C13225 = C50540 * C425;
    const double C15660 = C50545 * C425;
    const double C16008 = C50821 * C425;
    const double C28814 = C50545 * C425;
    const double C29256 = C25532 * C425;
    const double C32290 = C22716 * C425;
    const double C5361 = C2157 * C429;
    const double C5333 = C2158 * C429;
    const double C12885 = C50540 * C429;
    const double C15666 = C50821 * C429;
    const double C15644 = C50545 * C429;
    const double C28820 = C25532 * C429;
    const double C28800 = C50545 * C429;
    const double C3055 = C2157 * C791;
    const double C3039 = C2158 * C791;
    const double C8683 = C50821 * C791;
    const double C8671 = C50545 * C791;
    const double C11225 = C50540 * C791;
    const double C26442 = C25532 * C791;
    const double C26430 = C50545 * C791;
    const double C7181 = C2158 * C1728;
    const double C15674 = C50821 * C1728;
    const double C15646 = C50545 * C1728;
    const double C18444 = C50540 * C1728;
    const double C31236 = C50545 * C1728;
    const double C38517 = C25532 * C1728;
    const double C49955 = C49935 + C49954;
    const double C50052 = C50049 + C50050;
    const double C3501 =
        (C49880 + C49896 * C50027 + ae * (C50048 + C49847 * C49968 * C50027) +
         C49847 * (ae * (C49953 + C49968 * C50027) +
                   C49847 * (C49896 + C49920 * C50027))) /
        C49725;
    const double C1093 = (C49847 * C49945 + C50048 * C50027) / C49721;
    const double C3337 = C2158 * C983;
    const double C7975 = C50821 * C983;
    const double C7947 = C50545 * C983;
    const double C10747 = C50540 * C983;
    const double C25734 = C25532 * C983;
    const double C25706 = C50545 * C983;
    const double C3513 = C2158 * C1097;
    const double C9137 = C50545 * C1097;
    const double C12889 = C50540 * C1097;
    const double C16226 = C50821 * C1097;
    const double C26880 = C50545 * C1097;
    const double C28828 = C25532 * C1097;
    const double C4029 = C2158 * C1444;
    const double C8691 = C50821 * C1444;
    const double C8663 = C50545 * C1444;
    const double C11229 = C50540 * C1444;
    const double C26450 = C25532 * C1444;
    const double C26422 = C50545 * C1444;
    const double C3331 = C2158 * C979;
    const double C7971 = C50821 * C979;
    const double C7951 = C50545 * C979;
    const double C10745 = C50540 * C979;
    const double C25730 = C25532 * C979;
    const double C25710 = C50545 * C979;
    const double C4023 = C2158 * C1440;
    const double C8687 = C50821 * C1440;
    const double C8667 = C50545 * C1440;
    const double C11227 = C50540 * C1440;
    const double C26446 = C25532 * C1440;
    const double C26426 = C50545 * C1440;
    const double C7175 = C2158 * C1724;
    const double C15670 = C50821 * C1724;
    const double C15650 = C50545 * C1724;
    const double C18442 = C50540 * C1724;
    const double C31232 = C50545 * C1724;
    const double C38513 = C25532 * C1724;
    const double C8969 = C50821 * C3326;
    const double C10733 = C50540 * C3326;
    const double C26720 = C25532 * C3326;
    const double C9655 = C50821 * C4018;
    const double C11211 = C50540 * C4018;
    const double C27390 = C25532 * C4018;
    const double C11533 = C50540 * C9128;
    const double C8965 = C50821 * C3323;
    const double C10735 = C50540 * C3323;
    const double C26716 = C25532 * C3323;
    const double C9139 = C50821 * C3499;
    const double C11527 = C50540 * C3499;
    const double C26882 = C25532 * C3499;
    const double C9651 = C50821 * C4015;
    const double C11213 = C50540 * C4015;
    const double C27386 = C25532 * C4015;
    const double C13835 = C50540 * C10056;
    const double C50132 = C50125 + C50126;
    const double C50102 = C50099 + C50100;
    const double C22284 = C50540 * C17524;
    const double C50292 = C50289 + C49969;
    const double C974 =
        (2 * (C49847 * C49881 + C50191 * ae) +
         C49847 * (C49881 + C49847 * (C49847 * C49897 + C49969) +
                   C49847 * C49967 * ae) +
         (C50191 + C49967 * C50043) * ae) /
        C49721;
    const double C1088 =
        (C49847 * C49881 + C50191 * ae + (C49847 * C49897 + C49969) * C50027) /
        C49721;
    const double C1435 =
        (C50017 * (C49881 + C49847 * (C49847 * C49897 + C49969) +
                   C49847 * C49967 * ae)) /
        C49721;
    const double C50195 = C50193 + C50194;
    const double C1084 = C49847 * C50191 + C50290 * C50027;
    const double C4427 =
        2 * C50017 * C50290 + C50017 * (C50290 + C49847 * C49989 * C50027);
    const double C3332 = C2164 * C970;
    const double C7972 = C49740 * C970;
    const double C10972 = C10616 * C970;
    const double C25731 = C25538 * C970;
    const double C4024 = C2164 * C1431;
    const double C8688 = C49740 * C1431;
    const double C13068 = C10616 * C1431;
    const double C26447 = C25538 * C1431;
    const double C7176 = C2164 * C1715;
    const double C15671 = C49740 * C1715;
    const double C21267 = C10616 * C1715;
    const double C38514 = C25538 * C1715;
    const double C50341 = C49847 * C50337;
    const double C16623 =
        (3 * (C50298 + C50337 * C50027) +
         C50017 * (2 * C50017 * C50337 +
                   C50017 * (C50337 +
                             (C49847 * C49848 * C49917 + C49988) * C50027))) /
        C49721;
    const double C3319 =
        (3 * (C49869 + C49847 * C50298 + C50296 * ae) +
         C49847 * (2 * C50298 +
                   C49847 * (C49883 + C49847 * (C49847 * C49905 + C49966) +
                             C49847 * C49963 * ae) +
                   C50299 * ae) +
         (2 * C50296 + C49847 * C50299) * ae) /
        C49721;
    const double C4011 =
        (C50017 * (2 * C50298 +
                   C49847 * (C49883 + C49847 * (C49847 * C49905 + C49966) +
                             C49847 * C49963 * ae) +
                   C50299 * ae)) /
        C49721;
    const double C3316 = 3 * (C50189 + C49949 * C50043) +
                         C49847 * (2 * C50296 + C49847 * C50299);
    const double C3492 = C50189 + C49949 * C50043 + C50299 * C50027;
    const double C4008 = C50017 * (2 * C50296 + C49847 * C50299);
    const double C10051 =
        2 * C50017 * C50299 + C50017 * (C50299 + C50339 * C50027);
    const double C16629 = C49740 * C4428;
    const double C18445 = C10616 * C4428;
    const double C30053 = C25538 * C4428;
    const double C17519 =
        4 * (2 * C50017 * C49949 + C50017 * C50518) +
        C50017 * (3 * C50518 + C50017 * (2 * C50017 * C49963 +
                                         C50017 * (C49963 + C49985 * C50027)));
    const double C49971 = C49950 + C49970;
    const double C50053 = C49953 + C50051;
    const double C50083 = 2 * C50077;
    const double C50081 = ae * C50077;
    const double C4434 =
        (2 * C50017 * C50048 + C50017 * (C50048 + C50077 * C50027)) / C49721;
    const double C16624 =
        (3 * (C50048 + C50077 * C50027) +
         C50017 * (2 * C50017 * C50077 +
                   C50017 * (C50077 + C49847 * C49990 * C50027))) /
        C49721;
    const double C50113 = ae * C50111;
    const double C50415 = C49953 + C50414;
    const double C17533 = C50545 * C7166;
    const double C21056 = C50540 * C7166;
    const double C40304 = C50545 * C7166;
    const double C50386 = C49877 + C50384;
    const double C50421 = C50350 + C50420;
    const double C19377 = C10616 * C14733;
    const double C50357 = C50353 + C50355;
    const double C13834 = C10616 * C10052;
    const double C20271 =
        4 * (2 * C50017 * C50348 + C50017 * C50524) +
        C50017 * (3 * C50524 +
                  C50017 * (2 * C50017 * C50376 +
                            C50017 * (C50376 + C49847 * C49981 * C50027)));
    const double C50531 = C50528 + C50530;
    const double C49925 = C49913 + C49923;
    const double C49924 = C49915 + C49922;
    const double C50082 = C50078 + C50079;
    const double C50106 = C49896 + C50105;
    const double C50114 = C49847 * C50112;
    const double C50140 = C50137 + C50138;
    const double C50153 = C50151 + C50152;
    const double C50168 = C50166 + C50167;
    const double C50163 = C49847 * C50162;
    const double C49995 = C49961 + C49993;
    const double C50084 = C49968 + C50080;
    const double C50141 = C50135 + C50139;
    const double C140 = (4 * (2 * C49869 + C49848 * C49881) +
                         C49848 * (3 * C49881 + C49848 * C49901)) /
                        C49721;
    const double C419 =
        (2 * C49869 + C49848 * C49881 + C49901 * C50027) / C49721;
    const double C421 = (C50017 * (3 * C49881 + C49848 * C49901)) / C49721;
    const double C22277 =
        (5 * (3 * C50412 + C50017 * C50431) +
         C50017 * (4 * C50431 +
                   C50017 * (3 * C50429 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50027))))) /
        C49721;
    const double C9646 =
        (3 * (C50069 + ae * C50017 * C50091 + C49847 * C50121) +
         ae * C50017 * C50103 +
         C49847 * (2 * C50121 + ae * C50017 * C50098 +
                   C49847 * (C50118 + ae * C50017 * C49847 * C49961 +
                             C49847 * (ae * C50017 * C49961 +
                                       C49847 * C50017 * C49916)))) /
        C49725;
    const double C8958 = (4 * (2 * C50055 + C49847 * C50060) +
                          C49847 * (3 * C50060 + C49847 * C50103)) /
                         C49721;
    const double C9126 =
        (2 * C50055 + C49847 * C50060 + C50103 * C50027) / C49721;
    const double C9644 = (C50017 * (3 * C50060 + C49847 * C50103)) / C49721;
    const double C22278 =
        (5 * (3 * C50418 + C50017 * C50435) +
         C50017 * (4 * C50435 +
                   C50017 * (3 * C50149 +
                             C50017 * (2 * C50156 +
                                       C50017 * (C49961 + C49983 * C50027))))) /
        C49721;
    const double C49996 = C49994 * ae;
    const double C50200 = C49848 * C49994;
    const double C3315 = 3 * (C50191 + C49967 * C50043) +
                         C49847 * (2 * C50290 + C49847 * C50293);
    const double C3491 = C50191 + C49967 * C50043 + C50293 * C50027;
    const double C4007 = C50017 * (2 * C50290 + C49847 * C50293);
    const double C50344 = C50340 + C50342;
    const double C50389 = C49847 * C50387;
    const double C50880 = C50828 - C50864;
    const double C50881 = C50832 - C50866;
    const double C50882 = C50835 - C50868;
    const double C50883 = C50842 - C50869;
    const double C50884 = C50837 - C50871;
    const double C50885 = C50846 - C50872;
    const double C50887 = C50856 - C50877;
    const double C50878 = C50859 - C50860;
    const double C7981 = C7936 + C7937;
    const double C7979 = C7932 + C7933;
    const double C15680 = C15635 + C15636;
    const double C15678 = C15631 + C15632;
    const double C22905 = C22721 * C263;
    const double C22899 = C22721 * C253;
    const double C22889 = C22721 * C259;
    const double C22883 = C22721 * C277;
    const double C22881 = C22721 * C264;
    const double C22875 = C22721 * C254;
    const double C23599 = C22721 * C777;
    const double C23593 = C22721 * C786;
    const double C23877 = C22721 * C970;
    const double C24545 = C22721 * C1431;
    const double C32313 = C22721 * C404;
    const double C32307 = C22721 * C394;
    const double C32297 = C22721 * C400;
    const double C32291 = C22721 * C418;
    const double C32289 = C22721 * C405;
    const double C32283 = C22721 * C395;
    const double C34131 = C22721 * C1719;
    const double C34125 = C22721 * C1715;
    const double C49744 = C50540 - C49742;
    const double C10761 = C10738 + C10739;
    const double C10760 = C10736 + C10737;
    const double C10757 = C10730 + C10731;
    const double C10756 = C10728 + C10729;
    const double C10755 = C10726 + C10727;
    const double C10754 = C10724 + C10725;
    const double C10753 = C10722 + C10723;
    const double C10752 = C10720 + C10721;
    const double C11239 = C11220 + C11221;
    const double C11238 = C11218 + C11219;
    const double C11237 = C11216 + C11217;
    const double C11236 = C11214 + C11215;
    const double C11535 = C11524 + C11525;
    const double C11534 = C11522 + C11523;
    const double C12899 = C12876 + C12877;
    const double C12898 = C12874 + C12875;
    const double C12897 = C12872 + C12873;
    const double C12896 = C12870 + C12871;
    const double C12895 = C12860 + C12861;
    const double C12894 = C12858 + C12859;
    const double C13844 = C13830 + C13831;
    const double C14747 = C14740 + C14741;
    const double C14746 = C14738 + C14739;
    const double C19384 = C19375 + C19376;
    const double C20285 = C20279 + C20280;
    const double C20284 = C20277 + C20278;
    const double C25740 = C25695 + C25696;
    const double C25738 = C25691 + C25692;
    const double C28834 = C28797 + C28798;
    const double C28832 = C28793 + C28794;
    const double C22914 = C50879 * C288;
    const double C22908 = C50879 * C272;
    const double C22902 = C50879 * C285;
    const double C22896 = C50879 * C269;
    const double C22894 = C50879 * C271;
    const double C22888 = C50879 * C287;
    const double C22878 = C50879 * C286;
    const double C22872 = C50879 * C270;
    const double C23242 = C50879 * C284;
    const double C23236 = C50879 * C268;
    const double C23612 = C50879 * C791;
    const double C23606 = C50879 * C781;
    const double C23604 = C50879 * C780;
    const double C23598 = C50879 * C790;
    const double C23880 = C50879 * C984;
    const double C23874 = C50879 * C980;
    const double C24044 = C50879 * C1098;
    const double C24038 = C50879 * C1094;
    const double C24548 = C50879 * C1445;
    const double C24542 = C50879 * C1441;
    const double C32322 = C50879 * C429;
    const double C32316 = C50879 * C413;
    const double C32310 = C50879 * C426;
    const double C32304 = C50879 * C410;
    const double C32302 = C50879 * C412;
    const double C32296 = C50879 * C428;
    const double C32286 = C50879 * C427;
    const double C32280 = C50879 * C411;
    const double C32650 = C50879 * C425;
    const double C32644 = C50879 * C409;
    const double C34128 = C50879 * C1729;
    const double C34122 = C50879 * C1725;
    const double C105 = (C50821 - C50861) / C49726 - (C50879 * C50536) / C49721;
    const double C22904 = C50863 * C284;
    const double C22898 = C50863 * C268;
    const double C22892 = C50863 * C272;
    const double C22886 = C50863 * C288;
    const double C22880 = C50863 * C285;
    const double C22874 = C50863 * C269;
    const double C23602 = C50863 * C781;
    const double C23596 = C50863 * C791;
    const double C23882 = C50863 * C983;
    const double C23876 = C50863 * C979;
    const double C24046 = C50863 * C1097;
    const double C24550 = C50863 * C1444;
    const double C24544 = C50863 * C1440;
    const double C32312 = C50863 * C425;
    const double C32306 = C50863 * C409;
    const double C32300 = C50863 * C413;
    const double C32294 = C50863 * C429;
    const double C32288 = C50863 * C426;
    const double C32282 = C50863 * C410;
    const double C34130 = C50863 * C1728;
    const double C34124 = C50863 * C1724;
    const double C106 =
        (2 * C50545 + C50879) / C49726 - (C50863 * C50536) / C49721;
    const double C107 = C50863 / C49726 - C50548 / C49730;
    const double C49807 = C50706 - C49804;
    const double C10612 =
        (C50849 - C50873) / C49726 - (C50886 * C50716) / C49721;
    const double C10613 =
        (2 * C50720 + C50886) / C49726 - (C50875 * C50716) / C49721;
    const double C10614 = C50875 / C49726 - C50723 / C49730;
    const double C2364 = C2318 + C2319;
    const double C7991 = C7956 + C7957;
    const double C10976 = C10964 + C10965;
    const double C25750 = C25715 + C25716;
    const double C7983 = C7940 + C7941;
    const double C10762 = C10740 + C10741;
    const double C25742 = C25699 + C25700;
    const double C5368 = C5322 + C5323;
    const double C13230 = C13222 + C13223;
    const double C15690 = C15655 + C15656;
    const double C28840 = C28809 + C28810;
    const double C12900 = C12882 + C12883;
    const double C15682 = C15639 + C15640;
    const double C28837 = C28803 + C28804;
    const double C8700 = C8674 + C8675;
    const double C11240 = C11222 + C11223;
    const double C26459 = C26433 + C26434;
    const double C11537 = C11528 + C11529;
    const double C13845 = C13832 + C13833;
    const double C16634 = C50545 * C4437;
    const double C18448 = C50540 * C4437;
    const double C30058 = C50545 * C4437;
    const double C17537 = C50545 * C7169;
    const double C21058 = C50540 * C7169;
    const double C40308 = C50545 * C7169;
    const double C148 =
        (4 * (2 * C49880 + ae * C49881 + C49848 * C49900) +
         ae * (3 * C49881 + C49848 * C49901) +
         C49848 * (3 * C49900 + ae * C49901 +
                   C49848 * (2 * C49896 + ae * C49897 +
                             C49848 * (C49892 + ae * C49848 * C49893 +
                                       C49848 * (ae * C49893 +
                                                 C49848 * std::pow(C49852, 7) *
                                                     bs[7] * C49858))))) /
        C49725;
    const double C283 =
        (ae * (2 * (C49848 * C49935 + C49932 * ae) +
               C49848 *
                   (C49935 +
                    C49848 * (C49848 * C49871 * C49872 * C49931 + C49933 * ae) +
                    C49848 * C49933 * ae) +
               (C49932 + C49933 * C49873) * ae) +
         C49847 * (2 * C49880 + ae * C49881 + C49848 * C49900)) /
        C49725;
    const double C424 =
        ((zP - zQ) * (2 * C49880 + ae * C49881 + C49848 * C49900)) / C49725;
    const double C430 = (C49866 + ae * C49869 + C49848 * C49880 +
                         C49900 * std::pow(zP - zQ, 2)) /
                        C49725;
    const double C9144 = C49740 * C3495;
    const double C12892 = C10616 * C3495;
    const double C26887 = C25538 * C3495;
    const double C16633 = C49740 * C4431;
    const double C18447 = C10616 * C4431;
    const double C30057 = C25538 * C4431;
    const double C50358 = C50356 + C50351;
    const double C2367 = C2324 + C2325;
    const double C7993 = C7960 + C7961;
    const double C10977 = C10966 + C10967;
    const double C25752 = C25719 + C25720;
    const double C7985 = C7944 + C7945;
    const double C10763 = C10742 + C10743;
    const double C25744 = C25703 + C25704;
    const double C5371 = C5328 + C5329;
    const double C13231 = C13224 + C13225;
    const double C15692 = C15659 + C15660;
    const double C28842 = C28813 + C28814;
    const double C12901 = C12884 + C12885;
    const double C15684 = C15643 + C15644;
    const double C28835 = C28799 + C28800;
    const double C8698 = C8670 + C8671;
    const double C11241 = C11224 + C11225;
    const double C26457 = C26429 + C26430;
    const double C15685 = C15645 + C15646;
    const double C18451 = C18443 + C18444;
    const double C31240 = C31235 + C31236;
    const double C49956 = C49955 + C49951;
    const double C9145 = C50545 * C3501;
    const double C12893 = C50540 * C3501;
    const double C26888 = C50545 * C3501;
    const double C3507 = C2158 * C1093;
    const double C9133 = C50545 * C1093;
    const double C12887 = C50540 * C1093;
    const double C16222 = C50821 * C1093;
    const double C24040 = C50863 * C1093;
    const double C26876 = C50545 * C1093;
    const double C28824 = C25532 * C1093;
    const double C7986 = C7946 + C7947;
    const double C10765 = C10746 + C10747;
    const double C25745 = C25705 + C25706;
    const double C9149 = C9136 + C9137;
    const double C12903 = C12888 + C12889;
    const double C26892 = C26879 + C26880;
    const double C8694 = C8662 + C8663;
    const double C11243 = C11228 + C11229;
    const double C26453 = C26421 + C26422;
    const double C7988 = C7950 + C7951;
    const double C10764 = C10744 + C10745;
    const double C25747 = C25709 + C25710;
    const double C8696 = C8666 + C8667;
    const double C11242 = C11226 + C11227;
    const double C26455 = C26425 + C26426;
    const double C15687 = C15649 + C15650;
    const double C18450 = C18441 + C18442;
    const double C31238 = C31231 + C31232;
    const double C10758 = C10732 + C10733;
    const double C11234 = C11210 + C11211;
    const double C10759 = C10734 + C10735;
    const double C11536 = C11526 + C11527;
    const double C11235 = C11212 + C11213;
    const double C8960 =
        (4 * (2 * C50059 + ae * C50060 + C49847 * C50102) +
         ae * (3 * C50060 + C49847 * C50103) +
         C49847 *
             (3 * C50102 + ae * C50103 +
              C49847 * (2 * C50096 + ae * C50098 +
                        C49847 * (C49892 + ae * C49847 * C49961 +
                                  C49847 * (ae * C49961 + C49847 * C49916))))) /
        C49725;
    const double C22287 = C22283 + C22284;
    const double C3318 =
        (3 * (C49881 + C49847 * C50292 + C50290 * ae) +
         C49847 * (2 * C50292 +
                   C49847 * (C49897 + C49847 * (C49847 * C49921 + C49991) +
                             C49847 * C49989 * ae) +
                   C50293 * ae) +
         (2 * C50290 + C49847 * C50293) * ae) /
        C49721;
    const double C3494 =
        (C49881 + C49847 * C50292 + C50290 * ae +
         (C49897 + C49847 * (C49847 * C49921 + C49991) + C49847 * C49989 * ae) *
             C50027) /
        C49721;
    const double C4010 =
        (C50017 * (2 * C50292 +
                   C49847 * (C49897 + C49847 * (C49847 * C49921 + C49991) +
                             C49847 * C49989 * ae) +
                   C50293 * ae)) /
        C49721;
    const double C4430 =
        (2 * C50017 * C50292 +
         C50017 * (C50292 + (C49847 * C49921 + C49991) * C50027)) /
        C49721;
    const double C3338 = C2164 * C974;
    const double C7976 = C49740 * C974;
    const double C10974 = C10616 * C974;
    const double C23883 = C22721 * C974;
    const double C25735 = C25538 * C974;
    const double C3514 = C2164 * C1088;
    const double C16227 = C49740 * C1088;
    const double C18611 = C10616 * C1088;
    const double C24047 = C22721 * C1088;
    const double C28829 = C25538 * C1088;
    const double C4030 = C2164 * C1435;
    const double C8692 = C49740 * C1435;
    const double C13070 = C10616 * C1435;
    const double C24551 = C22721 * C1435;
    const double C26451 = C25538 * C1435;
    const double C278 =
        (2 * C49869 + C49848 * C49881 +
         C49847 * (C49847 * C49901 + C50195 * ae) + C49847 * C50195 * ae) /
        C49721;
    const double C280 = (C49847 * (3 * C49881 + C49848 * C49901) +
                         (3 * C50191 + C49848 * C50195) * ae) /
                        C49721;
    const double C787 = (C50017 * (C49847 * C49901 + C50195 * ae)) / C49721;
    const double C127 = 4 * (2 * C50189 + C49848 * C50191) +
                        C49848 * (3 * C50191 + C49848 * C50195);
    const double C260 = 2 * C50189 + C49848 * C50191 + C50195 * C50043;
    const double C261 = C49847 * (3 * C50191 + C49848 * C50195);
    const double C401 = 2 * C50189 + C49848 * C50191 + C50195 * C50027;
    const double C402 = C50017 * (3 * C50191 + C49848 * C50195);
    const double C778 = C50017 * C49847 * C50195;
    const double C969 =
        2 * C49847 * C50195 + C49847 * (C50195 + C49994 * C50043);
    const double C1083 = C49847 * C50195 + C49847 * C49994 * C50027;
    const double C1430 = C50017 * (C50195 + C49994 * C50043);
    const double C1714 =
        2 * C50017 * C50195 + C50017 * (C50195 + C49994 * C50027);
    const double C3508 = C2164 * C1084;
    const double C16223 = C49740 * C1084;
    const double C18609 = C10616 * C1084;
    const double C24041 = C22721 * C1084;
    const double C28825 = C25538 * C1084;
    const double C50343 = C49883 + C50341;
    const double C8970 = C49740 * C3319;
    const double C10750 = C10616 * C3319;
    const double C26721 = C25538 * C3319;
    const double C9656 = C49740 * C4011;
    const double C11232 = C10616 * C4011;
    const double C27391 = C25538 * C4011;
    const double C8966 = C49740 * C3316;
    const double C10748 = C10616 * C3316;
    const double C26717 = C25538 * C3316;
    const double C9140 = C49740 * C3492;
    const double C12890 = C10616 * C3492;
    const double C26883 = C25538 * C3492;
    const double C9652 = C49740 * C4008;
    const double C11230 = C10616 * C4008;
    const double C27387 = C25538 * C4008;
    const double C49972 = C49971 + C49966;
    const double C3325 =
        (3 * (C49880 + ae * C50048 + C49847 * C50052) +
         ae * (2 * C50048 + C49847 * C50053) +
         C49847 * (2 * C50052 + ae * C50053 +
                   C49847 * (C49896 + ae * C49847 * C49968 +
                             C49847 * (ae * C49968 + C49847 * C49920)))) /
        C49725;
    const double C4017 =
        (2 * (ae * C50017 * C49953 + C49847 * C50067) + ae * C50017 * C50053 +
         C49847 *
             (C50067 + ae * C50017 * C49847 * C49968 +
              C49847 * (ae * C50017 * C49968 + C49847 * C50017 * C49920))) /
        C49725;
    const double C3322 = (3 * (C49945 + C49953 * C50043) +
                          C49847 * (2 * C50048 + C49847 * C50053)) /
                         C49721;
    const double C3498 = (C49945 + C49953 * C50043 + C50053 * C50027) / C49721;
    const double C4014 = (C50017 * (2 * C50048 + C49847 * C50053)) / C49721;
    const double C50085 = C49896 + C50081;
    const double C16630 = C50545 * C4434;
    const double C18446 = C50540 * C4434;
    const double C30054 = C50545 * C4434;
    const double C17523 =
        (4 * (2 * C50017 * C49953 + C50017 * C50415) +
         C50017 *
             (3 * C50415 +
              C50017 * (2 * C50111 + C50017 * (C49968 + C49990 * C50027)))) /
        C49721;
    const double C17541 = C17532 + C17533;
    const double C21061 = C21055 + C21056;
    const double C40312 = C40303 + C40304;
    const double C50388 = C50386 + C50381;
    const double C20272 =
        (4 * (2 * C50017 * C50350 + C50017 * C50421) +
         C50017 * (3 * C50421 +
                   C50017 * (2 * C50017 * C50380 +
                             C50017 * (C50380 +
                                       (C49847 * C49917 + C49984) * C50027)))) /
        C49721;
    const double C8954 = 4 * (2 * C50302 + C49847 * C50305) +
                         C49847 * (3 * C50305 + C49847 * C50357);
    const double C9122 = 2 * C50302 + C49847 * C50305 + C50357 * C50027;
    const double C9640 = C50017 * (3 * C50305 + C49847 * C50357);
    const double C12137 =
        2 * C50017 * C50357 + C50017 * (C50357 + C50387 * C50027);
    const double C13846 = C13834 + C13835;
    const double C22276 =
        5 * (3 * C50521 + C50017 * C50531) +
        C50017 * (4 * C50531 +
                  C50017 * (3 * C50529 +
                            C50017 * (2 * C50017 * C49960 +
                                      C50017 * (C49960 + C49981 * C50027))));
    const double C49927 = C49848 * C49925;
    const double C1718 =
        (2 * C50017 * C49901 + C50017 * (C49901 + C49925 * C50027)) / C49721;
    const double C49926 = C49848 * C49924;
    const double C50042 = C49847 * C49924;
    const double C50065 = C50017 * C49924;
    const double C1727 =
        (2 * C50017 * C49900 + C50017 * (C49900 + C49924 * C50027)) / C49725;
    const double C50086 = C49847 * C50082;
    const double C10057 =
        (2 * C50067 + C50017 * C50106 +
         ae * (2 * C50017 * C50077 +
               C50017 * (C50077 + C49847 * C49990 * C50027)) +
         C49847 * (ae * (2 * C50111 + C50017 * (C49968 + C49990 * C50027)) +
                   C49847 * (2 * C50112 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50027)))) /
        C49725;
    const double C16625 =
        (ae * (3 * (C49953 + C49968 * C50027) +
               C50017 * (2 * C50111 + C50017 * (C49968 + C49990 * C50027))) +
         C49847 * (3 * C50106 +
                   C50017 * (2 * C50112 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50027)))) /
        C49725;
    const double C17525 =
        (4 * (2 * C50067 + C50017 * C50106) +
         C50017 * (3 * C50106 +
                   C50017 * (2 * C50112 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50027)))) /
        C49725;
    const double C50115 = C50113 + C50114;
    const double C50142 = C49847 * C50140;
    const double C12140 =
        (2 * (ae * (2 * C50117 + C50017 * C50149) + C49847 * C50168) +
         ae * (2 * C50017 * C50098 + C50017 * (C50098 + C50136 * C50027)) +
         C49847 *
             (C50168 +
              ae * (2 * C50155 + C50017 * (C50127 + C49847 * C49983 * C50027)) +
              C49847 *
                  (ae * (2 * C50156 + C50017 * (C49961 + C49983 * C50027)) +
                   C49847 * (2 * C50157 +
                             C50017 * (C49916 + std::pow(C49850, 8) * bs[8] *
                                                    C49858 * C50027))))) /
        C49725;
    const double C14735 =
        (3 * C50109 + C50017 * C50168 +
         ae * (3 * (C50091 + C50127 * C50027) +
               C50017 * (2 * C50155 +
                         C50017 * (C50127 + C49847 * C49983 * C50027))) +
         C49847 * (ae * (3 * C50149 +
                         C50017 * (2 * C50156 +
                                   C50017 * (C49961 + C49983 * C50027))) +
                   C49847 * (3 * C50150 +
                             C50017 * (2 * C50157 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50027))))) /
        C49725;
    const double C14736 = (ae * (3 * (C49935 + C49950 * C50027) +
                                 C50017 * (2 * C50117 + C50017 * C50149)) +
                           C49847 * (3 * C50109 + C50017 * C50168)) /
                          C49725;
    const double C17526 = (4 * (2 * C50069 + C50017 * C50109) +
                           C50017 * (3 * C50109 + C50017 * C50168)) /
                          C49725;
    const double C20274 =
        (ae * (4 * (2 * C50117 + C50017 * C50149) +
               C50017 * (3 * C50149 +
                         C50017 * (2 * C50156 +
                                   C50017 * (C49961 + C49983 * C50027)))) +
         C49847 * (4 * C50168 +
                   C50017 * (3 * C50150 +
                             C50017 * (2 * C50157 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50027))))) /
        C49725;
    const double C22279 =
        (5 * (3 * C50109 + C50017 * C50168) +
         C50017 * (4 * C50168 +
                   C50017 * (3 * C50150 +
                             C50017 * (2 * C50157 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50027))))) /
        C49725;
    const double C50164 = C50161 + C50163;
    const double C49997 = C49995 + C49988;
    const double C50087 = C49847 * C50084;
    const double C9127 =
        (2 * (ae * (C49953 + C49968 * C50027) + C49847 * C50106) +
         ae * (C50053 + C50084 * C50027) +
         C49847 * (C50106 + ae * (C50077 + C49847 * C49990 * C50027) +
                   C49847 * (ae * (C49968 + C49990 * C50027) +
                             C49847 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50027)))) /
        C49725;
    const double C10055 =
        (2 * C50017 * C50053 + C50017 * (C50053 + C50084 * C50027)) / C49721;
    const double C50143 = C49847 * C50141;
    const double C11520 =
        (3 * (C50109 + ae * (C50091 + C50127 * C50027) + C49847 * C50153) +
         ae * (C50103 + C50141 * C50027) +
         C49847 * (2 * C50153 + ae * (C50098 + C50136 * C50027) +
                   C49847 * (C50150 + ae * (C50127 + C49847 * C49983 * C50027) +
                             C49847 * (ae * (C49961 + C49983 * C50027) +
                                       C49847 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50027))))) /
        C49725;
    const double C12139 =
        (2 * C50017 * C50103 + C50017 * (C50103 + C50141 * C50027)) / C49721;
    const double C5364 = C2164 * C419;
    const double C16017 = C49740 * C419;
    const double C32325 = C22721 * C419;
    const double C38830 = C25538 * C419;
    const double C5692 = C2164 * C421;
    const double C32653 = C22721 * C421;
    const double C11873 = C50540 * C9646;
    const double C11415 = C50540 * C8958;
    const double C11531 = C50540 * C9126;
    const double C11871 = C50540 * C9644;
    const double C973 =
        (2 * (C49847 * C49901 + C50195 * ae) +
         C49847 * (C49901 + C49847 * (C49847 * C49925 + C49996) +
                   C49847 * C49994 * ae) +
         (C50195 + C49994 * C50043) * ae) /
        C49721;
    const double C1087 =
        (C49847 * C49901 + C50195 * ae + (C49847 * C49925 + C49996) * C50027) /
        C49721;
    const double C1434 =
        (C50017 * (C49901 + C49847 * (C49847 * C49925 + C49996) +
                   C49847 * C49994 * ae)) /
        C49721;
    const double C50201 = C50199 + C50200;
    const double C8953 = 4 * (2 * C50296 + C49847 * C50299) +
                         C49847 * (3 * C50299 + C49847 * C50344);
    const double C9121 = 2 * C50296 + C49847 * C50299 + C50344 * C50027;
    const double C9639 = C50017 * (3 * C50299 + C49847 * C50344);
    const double C50391 = C50379 + C50389;
    const double C113 = (C50880 * C50566) / C50563 + (C50830 - C50865) / C50565;
    const double C114 =
        (C50881 * C50566) / C50563 + (2 * C50577 + C50880) / C50565;
    const double C115 = (C50566 * C50577) / C50580 + C50881 / C50565;
    const double C964 = (C50882 * C50637) / C50563 + (C50838 - C50867) / C50565;
    const double C965 =
        (C50883 * C50637) / C50563 + (2 * C50642 + C50882) / C50565;
    const double C966 = (C50637 * C50642) / C50580 + C50883 / C50565;
    const double C1710 =
        (C50884 * C50665) / C50563 + (C50839 - C50870) / C50565;
    const double C1711 =
        (C50885 * C50665) / C50563 + (2 * C50670 + C50884) / C50565;
    const double C1712 = (C50665 * C50670) / C50580 + C50885 / C50565;
    const double C20840 =
        (C50850 - C50876) / C49726 - (C50887 * C50740) / C49721;
    const double C20841 =
        (2 * C50744 + C50887) / C49726 - (C50878 * C50740) / C49721;
    const double C20842 = C50878 / C49726 - C50747 / C49730;
    const double C22924 = C22881 + C22882;
    const double C22921 = C22875 + C22876;
    const double C32332 = C32289 + C32290;
    const double C32329 = C32283 + C32284;
    const double C49745 = C49744 * ae;
    const double C2162 =
        ((-C49720 / C49721) / C49726 - (C49733 * be) / C49721) / C49726 -
        ((C49719 * ((-C49722 / C49721) / C49726 - (C49744 * be) / C49721) +
          C25532) *
         be) /
            C49721 +
        (-C49735 / C49721) / C49726 - (0 * be) / C49721;
    const double C2163 =
        ((-C49722 / C49721) / C49726 - (C49744 * be) / C49721) / C49726 -
        ((C49719 * ((-C49735 / C49721) / C49726 - (0 * be) / C49721) + C50545) *
         be) /
            C49721;
    const double C25537 = (-C49722 / C49721) / C49726 - (C49744 * be) / C49721;
    const double C12862 = C11239 * C7781;
    const double C13428 = C11239 * C7780;
    const double C18423 = C11239 * C2166;
    const double C18969 = C11239 * C2165;
    const double C21405 = C11239 * C121;
    const double C47398 = C11239 * C22723;
    const double C12863 = C11238 * C7776;
    const double C13429 = C11238 * C7775;
    const double C18424 = C11238 * C50720;
    const double C18970 = C11238 * C50849;
    const double C21406 = C11238 * C50706;
    const double C44711 = C11238 * C50875;
    const double C45225 = C11238 * C50886;
    const double C47399 = C11238 * C50720;
    const double C47921 = C11238 * C22717;
    const double C12864 = C11237 * C7782;
    const double C13430 = C11237 * C7781;
    const double C14334 = C11237 * C7780;
    const double C18971 = C11237 * C2166;
    const double C19874 = C11237 * C2165;
    const double C22009 = C11237 * C121;
    const double C44712 = C11237 * C25541;
    const double C47922 = C11237 * C22723;
    const double C12865 = C11236 * C7777;
    const double C13431 = C11236 * C7776;
    const double C14335 = C11236 * C7775;
    const double C18972 = C11236 * C50720;
    const double C19875 = C11236 * C50849;
    const double C22010 = C11236 * C50706;
    const double C44713 = C11236 * C25536;
    const double C45227 = C11236 * C50875;
    const double C46119 = C11236 * C50886;
    const double C47923 = C11236 * C50720;
    const double C48820 = C11236 * C22717;
    const double C12868 = C11535 * C7776;
    const double C13839 = C11535 * C7775;
    const double C18428 = C11535 * C50720;
    const double C18974 = C11535 * C50849;
    const double C21408 = C11535 * C50706;
    const double C44716 = C11535 * C50875;
    const double C45627 = C11535 * C50886;
    const double C47403 = C11535 * C50720;
    const double C47925 = C11535 * C22717;
    const double C12869 = C11534 * C7781;
    const double C13838 = C11534 * C7780;
    const double C18427 = C11534 * C2166;
    const double C18973 = C11534 * C2165;
    const double C21407 = C11534 * C121;
    const double C47402 = C11534 * C22723;
    const double C12911 = C12899 * C7775;
    const double C18434 = C12899 * C50849;
    const double C21050 = C12899 * C50706;
    const double C44721 = C12899 * C50886;
    const double C47409 = C12899 * C22717;
    const double C12910 = C12898 * C7780;
    const double C18433 = C12898 * C2165;
    const double C21049 = C12898 * C121;
    const double C12909 = C12897 * C7780;
    const double C18425 = C12897 * C2165;
    const double C21043 = C12897 * C121;
    const double C12908 = C12896 * C7775;
    const double C18426 = C12896 * C50849;
    const double C21044 = C12896 * C50706;
    const double C44718 = C12896 * C50886;
    const double C47401 = C12896 * C22717;
    const double C12907 = C12895 * C7775;
    const double C18422 = C12895 * C50849;
    const double C21042 = C12895 * C50706;
    const double C44709 = C12895 * C50886;
    const double C47397 = C12895 * C22717;
    const double C12906 = C12894 * C7780;
    const double C18421 = C12894 * C2165;
    const double C21041 = C12894 * C121;
    const double C14742 = C13844 * C7781;
    const double C18430 = C13844 * C2166;
    const double C19379 = C13844 * C2165;
    const double C21409 = C13844 * C121;
    const double C47405 = C13844 * C22723;
    const double C14749 = C14747 * C7775;
    const double C18431 = C14747 * C50849;
    const double C21046 = C14747 * C50706;
    const double C46515 = C14747 * C50886;
    const double C47406 = C14747 * C22717;
    const double C14748 = C14746 * C7780;
    const double C18432 = C14746 * C2165;
    const double C21045 = C14746 * C121;
    const double C20281 = C19384 * C2166;
    const double C21679 = C19384 * C121;
    const double C49220 = C19384 * C22723;
    const double C20288 = C20285 * C50849;
    const double C21047 = C20285 * C50706;
    const double C49219 = C20285 * C22717;
    const double C20287 = C20284 * C2165;
    const double C21048 = C20284 * C121;
    const double C49810 = C49807 * ae;
    const double C22722 = (-C49780 / C49721) / C49726 - (C49807 * be) / C49721;
    const double C13232 = C13230 * C7780;
    const double C18761 = C13230 * C2165;
    const double C21263 = C13230 * C121;
    const double C12912 = C12900 * C7780;
    const double C18437 = C12900 * C2165;
    const double C21051 = C12900 * C121;
    const double C12878 = C11240 * C7781;
    const double C13434 = C11240 * C7780;
    const double C18435 = C11240 * C2166;
    const double C18977 = C11240 * C2165;
    const double C21411 = C11240 * C121;
    const double C47410 = C11240 * C22723;
    const double C12866 = C11537 * C7777;
    const double C13841 = C11537 * C7776;
    const double C18976 = C11537 * C50720;
    const double C19879 = C11537 * C50849;
    const double C22012 = C11537 * C50706;
    const double C44714 = C11537 * C25536;
    const double C45629 = C11537 * C50875;
    const double C47927 = C11537 * C50720;
    const double C48824 = C11537 * C22717;
    const double C14743 = C13845 * C7776;
    const double C18429 = C13845 * C50720;
    const double C19380 = C13845 * C50849;
    const double C21410 = C13845 * C50706;
    const double C46517 = C13845 * C50875;
    const double C47404 = C13845 * C50720;
    const double C48327 = C13845 * C22717;
    const double C17543 = C17536 + C17537;
    const double C21062 = C21057 + C21058;
    const double C40314 = C40307 + C40308;
    const double C2349 = C2159 * C283;
    const double C2687 = C2158 * C283;
    const double C8305 = C50545 * C283;
    const double C22906 = C22716 * C283;
    const double C23244 = C50863 * C283;
    const double C26064 = C50545 * C283;
    const double C5353 = C2159 * C424;
    const double C5691 = C2158 * C424;
    const double C16010 = C50545 * C424;
    const double C29258 = C50545 * C424;
    const double C32314 = C22716 * C424;
    const double C32652 = C50863 * C424;
    const double C5363 = C2158 * C430;
    const double C5331 = C2159 * C430;
    const double C15668 = C50545 * C430;
    const double C16016 = C50821 * C430;
    const double C18768 = C50540 * C430;
    const double C28822 = C50545 * C430;
    const double C32324 = C50863 * C430;
    const double C32292 = C22716 * C430;
    const double C38829 = C25532 * C430;
    const double C16640 = C16633 + C16634;
    const double C18453 = C18447 + C18448;
    const double C30062 = C30057 + C30058;
    const double C8956 =
        (4 * (2 * C50304 + C49847 * C50358 + C50305 * ae) +
         C49847 *
             (3 * C50358 +
              C49847 * (2 * C50350 +
                        C49847 * (C49877 + C49847 * (C49847 * C49893 + C49962) +
                                  C49847 * C49960 * ae) +
                        C50352 * ae) +
              C50357 * ae) +
         (3 * C50305 + C49847 * C50357) * ae) /
        C49721;
    const double C9124 =
        (2 * C50304 + C49847 * C50358 + C50305 * ae +
         (2 * C50350 +
          C49847 * (C49877 + C49847 * (C49847 * C49893 + C49962) +
                    C49847 * C49960 * ae) +
          C50352 * ae) *
             C50027) /
        C49721;
    const double C9642 =
        (C50017 *
         (3 * C50358 +
          C49847 * (2 * C50350 +
                    C49847 * (C49877 + C49847 * (C49847 * C49893 + C49962) +
                              C49847 * C49960 * ae) +
                    C50352 * ae) +
          C50357 * ae)) /
        C49721;
    const double C10054 =
        (2 * C50017 * C50358 +
         C50017 * (C50358 + (C49877 + C49847 * (C49847 * C49893 + C49962) +
                             C49847 * C49960 * ae) *
                                C50027)) /
        C49721;
    const double C13233 = C13231 * C7775;
    const double C18762 = C13231 * C50849;
    const double C21264 = C13231 * C50706;
    const double C45025 = C13231 * C50886;
    const double C47719 = C13231 * C22717;
    const double C12913 = C12901 * C7775;
    const double C18438 = C12901 * C50849;
    const double C21052 = C12901 * C50706;
    const double C44727 = C12901 * C50886;
    const double C47413 = C12901 * C22717;
    const double C12879 = C11241 * C7776;
    const double C13435 = C11241 * C7775;
    const double C18436 = C11241 * C50720;
    const double C18978 = C11241 * C50849;
    const double C21412 = C11241 * C50706;
    const double C44723 = C11241 * C50875;
    const double C45231 = C11241 * C50886;
    const double C47411 = C11241 * C50720;
    const double C47929 = C11241 * C22717;
    const double C18457 = C18451 * C50849;
    const double C21054 = C18451 * C50706;
    const double C47417 = C18451 * C22717;
    const double C289 =
        (C49866 + ae * C49869 + C49848 * C49880 + ae * C49847 * C49956 +
         C49847 * (ae * C49956 + C49847 * C49900)) /
        C49725;
    const double C792 =
        (ae * C50017 * C49956 + C49847 * C50017 * C49900) / C49725;
    const double C138 = (3 * (C49941 + C49848 * C49945 + C50189 * ae) +
                         C49848 * (2 * C49945 + C49848 * C49956 + C50191 * ae) +
                         (2 * C50189 + C49848 * C50191) * ae) /
                        C49721;
    const double C267 =
        (C49847 * (2 * C49945 + C49848 * C49956 + C50191 * ae)) / C49721;
    const double C273 =
        (C49941 + C49848 * C49945 + C50189 * ae + C49956 * C50043) / C49721;
    const double C408 =
        (C50017 * (2 * C49945 + C49848 * C49956 + C50191 * ae)) / C49721;
    const double C414 =
        (C49941 + C49848 * C49945 + C50189 * ae + C49956 * C50027) / C49721;
    const double C782 = (C50017 * C49847 * C49956) / C49721;
    const double C9153 = C9144 + C9145;
    const double C12905 = C12892 + C12893;
    const double C26896 = C26887 + C26888;
    const double C9147 = C9132 + C9133;
    const double C12902 = C12886 + C12887;
    const double C26890 = C26875 + C26876;
    const double C12915 = C12903 * C7776;
    const double C18440 = C12903 * C50720;
    const double C18982 = C12903 * C50849;
    const double C21414 = C12903 * C50706;
    const double C44729 = C12903 * C50875;
    const double C47415 = C12903 * C50720;
    const double C47933 = C12903 * C22717;
    const double C12881 = C11243 * C7777;
    const double C13437 = C11243 * C7776;
    const double C18980 = C11243 * C50720;
    const double C44725 = C11243 * C25536;
    const double C45233 = C11243 * C50875;
    const double C47931 = C11243 * C50720;
    const double C12880 = C11242 * C7782;
    const double C13436 = C11242 * C7781;
    const double C18979 = C11242 * C2166;
    const double C44724 = C11242 * C25541;
    const double C47930 = C11242 * C22723;
    const double C18456 = C18450 * C2165;
    const double C21053 = C18450 * C121;
    const double C13433 = C11234 * C7777;
    const double C14337 = C11234 * C7776;
    const double C19877 = C11234 * C50720;
    const double C45229 = C11234 * C25536;
    const double C46121 = C11234 * C50875;
    const double C48822 = C11234 * C50720;
    const double C12867 = C11536 * C7782;
    const double C13840 = C11536 * C7781;
    const double C18975 = C11536 * C2166;
    const double C19878 = C11536 * C2165;
    const double C22011 = C11536 * C121;
    const double C44715 = C11536 * C25541;
    const double C47926 = C11536 * C22723;
    const double C13432 = C11235 * C7782;
    const double C14336 = C11235 * C7781;
    const double C19876 = C11235 * C2166;
    const double C45228 = C11235 * C25541;
    const double C48821 = C11235 * C22723;
    const double C11417 = C50540 * C8960;
    const double C22289 = C22287 * C121;
    const double C2360 = C2164 * C278;
    const double C8312 = C49740 * C278;
    const double C22917 = C22721 * C278;
    const double C26071 = C25538 * C278;
    const double C2688 = C2164 * C280;
    const double C23245 = C22721 * C280;
    const double C3058 = C2164 * C787;
    const double C23615 = C22721 * C787;
    const double C29051 = C25538 * C787;
    const double C41520 = C49740 * C787;
    const double C2354 = C2164 * C260;
    const double C8308 = C49740 * C260;
    const double C22911 = C22721 * C260;
    const double C26067 = C25538 * C260;
    const double C2682 = C2164 * C261;
    const double C23239 = C22721 * C261;
    const double C5358 = C2164 * C401;
    const double C16013 = C49740 * C401;
    const double C32319 = C22721 * C401;
    const double C38826 = C25538 * C401;
    const double C5686 = C2164 * C402;
    const double C32647 = C22721 * C402;
    const double C3052 = C2164 * C778;
    const double C23609 = C22721 * C778;
    const double C29047 = C25538 * C778;
    const double C41516 = C49740 * C778;
    const double C50345 = C50343 + C50338;
    const double C49973 = C49848 * C49972;
    const double C49978 = 3 * C49972;
    const double C50041 = ae * C49972;
    const double C50040 = C49847 * C49972;
    const double C982 = (2 * (ae * C49956 + C49847 * C49900) +
                         ae * (C49956 + C49972 * std::pow(C49847, 2)) +
                         C49847 * (C49900 + ae * C49847 * C49972 +
                                   C49847 * (ae * C49972 + C49847 * C49924))) /
                        C49725;
    const double C1096 = (ae * (C49956 + C49972 * C50027) +
                          C49847 * (C49900 + C49924 * C50027)) /
                         C49725;
    const double C1443 =
        (C50017 * C49900 + ae * C50017 * C49847 * C49972 +
         C49847 * (ae * C50017 * C49972 + C49847 * C50017 * C49924)) /
        C49725;
    const double C978 =
        (2 * C49847 * C49956 + C49847 * (C49956 + C49972 * C50043)) / C49721;
    const double C1439 = (C50017 * (C49956 + C49972 * C50043)) / C49721;
    const double C1723 =
        (2 * C50017 * C49956 + C50017 * (C49956 + C49972 * C50027)) / C49721;
    const double C8971 = C50545 * C3325;
    const double C10751 = C50540 * C3325;
    const double C26722 = C50545 * C3325;
    const double C9657 = C50545 * C4017;
    const double C11233 = C50540 * C4017;
    const double C27392 = C50545 * C4017;
    const double C8967 = C50545 * C3322;
    const double C10749 = C50540 * C3322;
    const double C26718 = C50545 * C3322;
    const double C9141 = C50545 * C3498;
    const double C12891 = C50540 * C3498;
    const double C26884 = C50545 * C3498;
    const double C9653 = C50545 * C4014;
    const double C11231 = C50540 * C4014;
    const double C27388 = C50545 * C4014;
    const double C16638 = C16629 + C16630;
    const double C18452 = C18445 + C18446;
    const double C30060 = C30053 + C30054;
    const double C21065 = C21061 * C121;
    const double C50390 = C49847 * C50388;
    const double C14731 =
        (3 * (C50358 + C50388 * C50027) +
         C50017 *
             (2 * C50017 * C50388 +
              C50017 * (C50388 + (C49893 + C49847 * (C49847 * C49917 + C49984) +
                                  C49847 * C49981 * ae) *
                                     C50027))) /
        C49721;
    const double C11414 = C10616 * C8954;
    const double C11530 = C10616 * C9122;
    const double C11870 = C10616 * C9640;
    const double C14744 = C13846 * C7782;
    const double C19381 = C13846 * C2166;
    const double C22013 = C13846 * C121;
    const double C46518 = C13846 * C25541;
    const double C48328 = C13846 * C22723;
    const double C49929 = C49909 + C49927;
    const double C49928 = C49910 + C49926;
    const double C7168 =
        (3 * (C49900 + C49924 * C50027) +
         C50017 * (2 * C50065 +
                   C50017 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50027))) /
        C49725;
    const double C7183 = C2159 * C1727;
    const double C15676 = C50545 * C1727;
    const double C21270 = C50540 * C1727;
    const double C34132 = C22716 * C1727;
    const double C38519 = C50545 * C1727;
    const double C50088 = C50085 + C50086;
    const double C50144 = C50132 + C50142;
    const double C19378 = C50540 * C14736;
    const double C22286 = C50540 * C17526;
    const double C49998 = C49848 * C49997;
    const double C50045 = C49997 * C50043;
    const double C4436 =
        (ae * (2 * C50017 * C49972 + C50017 * (C49972 + C49997 * C50027)) +
         C49847 * (2 * C50065 +
                   C50017 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50027))) /
        C49725;
    const double C7165 =
        (3 * (C49956 + C49972 * C50027) +
         C50017 * (2 * C50017 * C49972 + C50017 * (C49972 + C49997 * C50027))) /
        C49721;
    const double C50089 = C50083 + C50087;
    const double C50145 = C50130 + C50143;
    const double C128 = 5 * (3 * C50191 + C49848 * C50195) +
                        C49848 * (4 * C50195 + C49848 * C50201);
    const double C262 = 3 * C50191 + C49848 * C50195 + C50201 * C50043;
    const double C403 = 3 * C50191 + C49848 * C50195 + C50201 * C50027;
    const double C537 = C49847 * (4 * C50195 + C49848 * C50201);
    const double C641 = C50017 * (4 * C50195 + C49848 * C50201);
    const double C779 = C50017 * C49847 * C50201;
    const double C11409 = 5 * (3 * C50305 + C49847 * C50357) +
                          C49847 * (4 * C50357 + C49847 * C50391);
    const double C11517 = 3 * C50305 + C49847 * C50357 + C50391 * C50027;
    const double C11865 = C50017 * (4 * C50357 + C49847 * C50391);
    const double C49746 = C49745 / C49721;
    const double C2356 = C2162 * C276;
    const double C2350 = C2162 * C258;
    const double C2344 = C2162 * C265;
    const double C2338 = C2162 * C255;
    const double C2336 = C2162 * C257;
    const double C2330 = C2162 * C275;
    const double C2320 = C2162 * C266;
    const double C2314 = C2162 * C256;
    const double C2684 = C2162 * C264;
    const double C2678 = C2162 * C254;
    const double C3054 = C2162 * C785;
    const double C3048 = C2162 * C776;
    const double C3046 = C2162 * C775;
    const double C3040 = C2162 * C784;
    const double C3334 = C2162 * C976;
    const double C3328 = C2162 * C972;
    const double C3510 = C2162 * C1090;
    const double C3504 = C2162 * C1086;
    const double C4026 = C2162 * C1437;
    const double C4020 = C2162 * C1433;
    const double C5360 = C2162 * C417;
    const double C5354 = C2162 * C399;
    const double C5348 = C2162 * C406;
    const double C5342 = C2162 * C396;
    const double C5340 = C2162 * C398;
    const double C5334 = C2162 * C416;
    const double C5324 = C2162 * C407;
    const double C5318 = C2162 * C397;
    const double C5688 = C2162 * C405;
    const double C5682 = C2162 * C395;
    const double C7178 = C2162 * C1721;
    const double C7172 = C2162 * C1717;
    const double C2358 = C2163 * C277;
    const double C2352 = C2163 * C259;
    const double C2346 = C2163 * C264;
    const double C2340 = C2163 * C254;
    const double C2334 = C2163 * C258;
    const double C2328 = C2163 * C276;
    const double C2322 = C2163 * C265;
    const double C2316 = C2163 * C255;
    const double C2686 = C2163 * C263;
    const double C2680 = C2163 * C253;
    const double C3056 = C2163 * C786;
    const double C3050 = C2163 * C777;
    const double C3044 = C2163 * C776;
    const double C3038 = C2163 * C785;
    const double C3336 = C2163 * C975;
    const double C3330 = C2163 * C971;
    const double C3512 = C2163 * C1089;
    const double C3506 = C2163 * C1085;
    const double C4028 = C2163 * C1436;
    const double C4022 = C2163 * C1432;
    const double C5362 = C2163 * C418;
    const double C5356 = C2163 * C400;
    const double C5350 = C2163 * C405;
    const double C5344 = C2163 * C395;
    const double C5338 = C2163 * C399;
    const double C5332 = C2163 * C417;
    const double C5326 = C2163 * C406;
    const double C5320 = C2163 * C396;
    const double C5690 = C2163 * C404;
    const double C5684 = C2163 * C394;
    const double C7180 = C2163 * C1720;
    const double C7174 = C2163 * C1716;
    const double C25733 = C25537 * C975;
    const double C25729 = C25537 * C971;
    const double C25725 = C25537 * C276;
    const double C25721 = C25537 * C258;
    const double C25717 = C25537 * C265;
    const double C25713 = C25537 * C255;
    const double C25711 = C25537 * C972;
    const double C25707 = C25537 * C976;
    const double C25701 = C25537 * C275;
    const double C25697 = C25537 * C257;
    const double C25693 = C25537 * C266;
    const double C25689 = C25537 * C256;
    const double C26069 = C25537 * C277;
    const double C26065 = C25537 * C259;
    const double C26061 = C25537 * C264;
    const double C26057 = C25537 * C254;
    const double C26449 = C25537 * C1436;
    const double C26445 = C25537 * C1432;
    const double C26441 = C25537 * C785;
    const double C26437 = C25537 * C776;
    const double C26435 = C25537 * C775;
    const double C26431 = C25537 * C784;
    const double C26427 = C25537 * C1433;
    const double C26423 = C25537 * C1437;
    const double C26719 = C25537 * C3320;
    const double C26715 = C25537 * C3317;
    const double C26885 = C25537 * C3496;
    const double C26881 = C25537 * C3493;
    const double C26877 = C25537 * C1090;
    const double C26873 = C25537 * C1086;
    const double C27389 = C25537 * C4012;
    const double C27385 = C25537 * C4009;
    const double C28827 = C25537 * C1089;
    const double C28823 = C25537 * C1085;
    const double C28819 = C25537 * C417;
    const double C28815 = C25537 * C399;
    const double C28811 = C25537 * C406;
    const double C28807 = C25537 * C396;
    const double C28805 = C25537 * C398;
    const double C28801 = C25537 * C416;
    const double C28795 = C25537 * C407;
    const double C28791 = C25537 * C397;
    const double C29049 = C25537 * C786;
    const double C29045 = C25537 * C777;
    const double C29255 = C25537 * C405;
    const double C29251 = C25537 * C395;
    const double C30055 = C25537 * C4432;
    const double C30051 = C25537 * C4429;
    const double C31233 = C25537 * C1721;
    const double C31229 = C25537 * C1717;
    const double C38516 = C25537 * C1720;
    const double C38512 = C25537 * C1716;
    const double C38828 = C25537 * C418;
    const double C38824 = C25537 * C400;
    const double C40305 = C25537 * C7164;
    const double C40301 = C25537 * C7161;
    const double C19383 = C18974 + C18973;
    const double C21682 = C21408 + C21407;
    const double C18449 = C18425 + C18426;
    const double C21059 = C21043 + C21044;
    const double C20276 = C18431 + C18432;
    const double C21060 = C21045 + C21046;
    const double C22282 = C21046 + C21045;
    const double C22281 = C21047 + C21048;
    const double C49812 = C49810 / C49721;
    const double C47416 = C18450 * C22722;
    const double C47412 = C12900 * C22722;
    const double C47408 = C12898 * C22722;
    const double C47407 = C14746 * C22722;
    const double C47400 = C12897 * C22722;
    const double C47396 = C12894 * C22722;
    const double C47718 = C13230 * C22722;
    const double C47928 = C11240 * C22722;
    const double C47924 = C11534 * C22722;
    const double C47920 = C11239 * C22722;
    const double C48326 = C13844 * C22722;
    const double C48823 = C11536 * C22722;
    const double C48819 = C11237 * C22722;
    const double C49218 = C20284 * C22722;
    const double C21681 = C21410 + C21409;
    const double C21066 = C21062 * C50706;
    const double C2379 = C2348 + C2349;
    const double C8317 = C8304 + C8305;
    const double C22936 = C22905 + C22906;
    const double C26076 = C26063 + C26064;
    const double C5383 = C5352 + C5353;
    const double C16022 = C16009 + C16010;
    const double C29262 = C29257 + C29258;
    const double C32344 = C32313 + C32314;
    const double C5372 = C5330 + C5331;
    const double C15696 = C15667 + C15668;
    const double C18772 = C18767 + C18768;
    const double C28846 = C28821 + C28822;
    const double C32333 = C32291 + C32292;
    const double C18459 = C18453 * C50720;
    const double C21416 = C18453 * C50706;
    const double C47419 = C18453 * C50720;
    const double C11416 = C10616 * C8956;
    const double C11532 = C10616 * C9124;
    const double C11872 = C10616 * C9642;
    const double C13836 = C10616 * C10054;
    const double C18454 = C18438 + C18437;
    const double C21064 = C21052 + C21051;
    const double C2359 = C2158 * C289;
    const double C2327 = C2159 * C289;
    const double C7969 = C50545 * C289;
    const double C8311 = C50821 * C289;
    const double C10971 = C50540 * C289;
    const double C22916 = C50863 * C289;
    const double C22884 = C22716 * C289;
    const double C25728 = C50545 * C289;
    const double C26070 = C25532 * C289;
    const double C3057 = C2158 * C792;
    const double C3037 = C2159 * C792;
    const double C8685 = C50545 * C792;
    const double C13067 = C50540 * C792;
    const double C23614 = C50863 * C792;
    const double C23594 = C22716 * C792;
    const double C26444 = C50545 * C792;
    const double C29050 = C25532 * C792;
    const double C41519 = C50821 * C792;
    const double C2343 = C2159 * C267;
    const double C2681 = C2158 * C267;
    const double C8301 = C50545 * C267;
    const double C22900 = C22716 * C267;
    const double C23238 = C50863 * C267;
    const double C26060 = C50545 * C267;
    const double C2353 = C2158 * C273;
    const double C2333 = C2159 * C273;
    const double C7965 = C50545 * C273;
    const double C8307 = C50821 * C273;
    const double C10969 = C50540 * C273;
    const double C22910 = C50863 * C273;
    const double C22890 = C22716 * C273;
    const double C25724 = C50545 * C273;
    const double C26066 = C25532 * C273;
    const double C5347 = C2159 * C408;
    const double C5685 = C2158 * C408;
    const double C16006 = C50545 * C408;
    const double C29254 = C50545 * C408;
    const double C32308 = C22716 * C408;
    const double C32646 = C50863 * C408;
    const double C5357 = C2158 * C414;
    const double C5337 = C2159 * C414;
    const double C15664 = C50545 * C414;
    const double C16012 = C50821 * C414;
    const double C18766 = C50540 * C414;
    const double C28818 = C50545 * C414;
    const double C32318 = C50863 * C414;
    const double C32298 = C22716 * C414;
    const double C38825 = C25532 * C414;
    const double C3051 = C2158 * C782;
    const double C3043 = C2159 * C782;
    const double C8681 = C50545 * C782;
    const double C13065 = C50540 * C782;
    const double C23608 = C50863 * C782;
    const double C23600 = C22716 * C782;
    const double C26440 = C50545 * C782;
    const double C29046 = C25532 * C782;
    const double C41515 = C50821 * C782;
    const double C12917 = C12905 * C7777;
    const double C18984 = C12905 * C50720;
    const double C44731 = C12905 * C25536;
    const double C47935 = C12905 * C50720;
    const double C12914 = C12902 * C7781;
    const double C18439 = C12902 * C2166;
    const double C18981 = C12902 * C2165;
    const double C21413 = C12902 * C121;
    const double C47414 = C12902 * C22723;
    const double C47932 = C12902 * C22722;
    const double C21063 = C21054 + C21053;
    const double C8955 =
        (4 * (2 * C50298 + C49847 * C50345 + C50299 * ae) +
         C49847 *
             (3 * C50345 +
              C49847 * (2 * C50337 +
                        C49847 * (C49905 +
                                  C49847 * (C49847 * C49848 * C49917 + C49988) +
                                  C49847 * C49985 * ae) +
                        C50339 * ae) +
              C50344 * ae) +
         (3 * C50299 + C49847 * C50344) * ae) /
        C49721;
    const double C9123 =
        (2 * C50298 + C49847 * C50345 + C50299 * ae +
         (2 * C50337 +
          C49847 * (C49905 + C49847 * (C49847 * C49848 * C49917 + C49988) +
                    C49847 * C49985 * ae) +
          C50339 * ae) *
             C50027) /
        C49721;
    const double C9641 =
        (C50017 *
         (3 * C50345 +
          C49847 *
              (2 * C50337 +
               C49847 * (C49905 + C49847 * (C49847 * C49848 * C49917 + C49988) +
                         C49847 * C49985 * ae) +
               C50339 * ae) +
          C50344 * ae)) /
        C49721;
    const double C10053 =
        (2 * C50017 * C50345 +
         C50017 *
             (C50345 + (C49905 + C49847 * (C49847 * C49848 * C49917 + C49988) +
                        C49847 * C49985 * ae) *
                           C50027)) /
        C49721;
    const double C49974 = C49958 + C49973;
    const double C50044 = C50041 + C50042;
    const double C3500 =
        (C49900 + C49924 * C50027 + ae * (C50040 + C49847 * C49997 * C50027) +
         C49847 * (ae * (C49972 + C49997 * C50027) +
                   C49847 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50027))) /
        C49725;
    const double C1092 = (C49847 * C49956 + C50040 * C50027) / C49721;
    const double C4433 =
        (2 * C50017 * C50040 + C50017 * (C50040 + C49847 * C49997 * C50027)) /
        C49721;
    const double C3339 = C2159 * C982;
    const double C7977 = C50545 * C982;
    const double C10975 = C50540 * C982;
    const double C23884 = C22716 * C982;
    const double C25736 = C50545 * C982;
    const double C3515 = C2159 * C1096;
    const double C16228 = C50545 * C1096;
    const double C18612 = C50540 * C1096;
    const double C24048 = C22716 * C1096;
    const double C28830 = C50545 * C1096;
    const double C4031 = C2159 * C1443;
    const double C8693 = C50545 * C1443;
    const double C13071 = C50540 * C1443;
    const double C24552 = C22716 * C1443;
    const double C26452 = C50545 * C1443;
    const double C3333 = C2159 * C978;
    const double C7973 = C50545 * C978;
    const double C10973 = C50540 * C978;
    const double C23878 = C22716 * C978;
    const double C25732 = C50545 * C978;
    const double C4025 = C2159 * C1439;
    const double C8689 = C50545 * C1439;
    const double C13069 = C50540 * C1439;
    const double C24546 = C22716 * C1439;
    const double C26448 = C50545 * C1439;
    const double C7177 = C2159 * C1723;
    const double C15672 = C50545 * C1723;
    const double C21268 = C50540 * C1723;
    const double C34126 = C22716 * C1723;
    const double C38515 = C50545 * C1723;
    const double C8975 = C8970 + C8971;
    const double C10767 = C10750 + C10751;
    const double C26726 = C26721 + C26722;
    const double C9661 = C9656 + C9657;
    const double C11245 = C11232 + C11233;
    const double C27396 = C27391 + C27392;
    const double C8973 = C8966 + C8967;
    const double C10766 = C10748 + C10749;
    const double C26724 = C26717 + C26718;
    const double C9151 = C9140 + C9141;
    const double C12904 = C12890 + C12891;
    const double C26894 = C26883 + C26884;
    const double C9659 = C9652 + C9653;
    const double C11244 = C11230 + C11231;
    const double C27394 = C27387 + C27388;
    const double C18458 = C18452 * C2166;
    const double C21415 = C18452 * C121;
    const double C47418 = C18452 * C22723;
    const double C50392 = C50374 + C50390;
    const double C11418 = C11414 + C11415;
    const double C11538 = C11530 + C11531;
    const double C11874 = C11870 + C11871;
    const double C141 = (5 * (3 * C49881 + C49848 * C49901) +
                         C49848 * (4 * C49901 + C49848 * C49929)) /
                        C49721;
    const double C281 =
        (3 * C49881 + C49848 * C49901 +
         C49847 * (C49847 * C49929 + C50201 * ae) + C49847 * C50201 * ae) /
        C49721;
    const double C422 =
        (3 * C49881 + C49848 * C49901 + C49929 * C50027) / C49721;
    const double C538 = (C49847 * (4 * C49901 + C49848 * C49929) +
                         (4 * C50195 + C49848 * C50201) * ae) /
                        C49721;
    const double C642 = (C50017 * (4 * C49901 + C49848 * C49929)) / C49721;
    const double C788 = (C50017 * (C49847 * C49929 + C50201 * ae)) / C49721;
    const double C149 =
        (5 * (3 * C49900 + ae * C49901 + C49848 * C49928) +
         ae * (4 * C49901 + C49848 * C49929) +
         C49848 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C431 = (2 * C49880 + ae * C49881 + C49848 * C49900 +
                         C49928 * std::pow(zP - zQ, 2)) /
                        C49725;
    const double C432 =
        ((zP - zQ) * (3 * C49900 + ae * C49901 + C49848 * C49928)) / C49725;
    const double C433 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 +
         (3 * C49924 + ae * C49925 +
          C49848 *
              (2 * C49920 + ae * C49921 +
               C49848 * (C49916 + ae * C49848 * C49917 +
                         C49848 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             std::pow(zP - zQ, 2)) /
        C49725;
    const double C644 =
        ((zP - zQ) *
         (4 * C49928 + ae * C49929 +
          C49848 * (3 * C49924 + ae * C49925 +
                    C49848 * (2 * C49920 + ae * C49921 +
                              C49848 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49725;
    const double C1726 =
        (2 * C50017 * C49928 +
         C50017 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                C50027)) /
        C49725;
    const double C7189 = C7182 + C7183;
    const double C15700 = C15675 + C15676;
    const double C21272 = C21269 + C21270;
    const double C34138 = C34131 + C34132;
    const double C38527 = C38518 + C38519;
    const double C19385 = C19377 + C19378;
    const double C22288 = C22285 + C22286;
    const double C49999 = C49979 + C49998;
    const double C50046 = C49972 + C50045;
    const double C8959 =
        (4 * (2 * C50052 + ae * C50053 + C49847 * C50088) +
         ae * (3 * C50053 + C49847 * C50089) +
         C49847 *
             (3 * C50088 + ae * C50089 +
              C49847 *
                  (2 * C50082 + ae * C50084 +
                   C49847 * (C49920 + ae * C49847 * C49990 +
                             C49847 * (ae * C49990 +
                                       C49847 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C9645 =
        (3 * (C50067 + ae * C50017 * C50077 + C49847 * C50115) +
         ae * C50017 * C50089 +
         C49847 * (2 * C50115 + ae * C50017 * C50084 +
                   C49847 * (C50112 + ae * C50017 * C49847 * C49990 +
                             C49847 * (ae * C50017 * C49990 +
                                       C49847 * C50017 *
                                           (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C8957 = (4 * (2 * C50048 + C49847 * C50053) +
                          C49847 * (3 * C50053 + C49847 * C50089)) /
                         C49721;
    const double C9125 =
        (2 * C50048 + C49847 * C50053 + C50089 * C50027) / C49721;
    const double C9643 = (C50017 * (3 * C50053 + C49847 * C50089)) / C49721;
    const double C11412 =
        (5 * (3 * C50102 + ae * C50103 + C49847 * C50144) +
         ae * (4 * C50103 + C49847 * C50145) +
         C49847 *
             (4 * C50144 + ae * C50145 +
              C49847 *
                  (3 * C50140 + ae * C50141 +
                   C49847 * (2 * C50134 + ae * C50136 +
                             C49847 * (C49916 + ae * C49847 * C49983 +
                                       C49847 * (ae * C49983 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C11868 =
        (4 * (2 * C50121 + ae * C50017 * C50098 + C49847 * C50164) +
         ae * C50017 * C50145 +
         C49847 * (3 * C50164 + ae * C50017 * C50141 +
                   C49847 * (2 * C50162 + ae * C50017 * C50136 +
                             C49847 * (C50157 + ae * C50017 * C49847 * C49983 +
                                       C49847 * (ae * C50017 * C49983 +
                                                 C49847 * C50017 *
                                                     std::pow(C49850, 8) *
                                                     bs[8] * C49858))))) /
        C49725;
    const double C11411 = (5 * (3 * C50060 + C49847 * C50103) +
                           C49847 * (4 * C50103 + C49847 * C50145)) /
                          C49721;
    const double C11519 =
        (3 * C50060 + C49847 * C50103 + C50145 * C50027) / C49721;
    const double C11867 = (C50017 * (4 * C50103 + C49847 * C50145)) / C49721;
    const double C49747 = C49746 - C49736;
    const double C2383 = C2356 + C2357;
    const double C2380 = C2350 + C2351;
    const double C2377 = C2344 + C2345;
    const double C2374 = C2338 + C2339;
    const double C2373 = C2336 + C2337;
    const double C2370 = C2330 + C2331;
    const double C2365 = C2320 + C2321;
    const double C2362 = C2314 + C2315;
    const double C2693 = C2684 + C2685;
    const double C2690 = C2678 + C2679;
    const double C3069 = C3054 + C3055;
    const double C3066 = C3048 + C3049;
    const double C3065 = C3046 + C3047;
    const double C3062 = C3040 + C3041;
    const double C3343 = C3334 + C3335;
    const double C3340 = C3328 + C3329;
    const double C3519 = C3510 + C3511;
    const double C3516 = C3504 + C3505;
    const double C4035 = C4026 + C4027;
    const double C4032 = C4020 + C4021;
    const double C5387 = C5360 + C5361;
    const double C5384 = C5354 + C5355;
    const double C5381 = C5348 + C5349;
    const double C5378 = C5342 + C5343;
    const double C5377 = C5340 + C5341;
    const double C5374 = C5334 + C5335;
    const double C5369 = C5324 + C5325;
    const double C5366 = C5318 + C5319;
    const double C5697 = C5688 + C5689;
    const double C5694 = C5682 + C5683;
    const double C7187 = C7178 + C7179;
    const double C7184 = C7172 + C7173;
    const double C2378 = C2346 + C2347;
    const double C2375 = C2340 + C2341;
    const double C2372 = C2334 + C2335;
    const double C2369 = C2328 + C2329;
    const double C2366 = C2322 + C2323;
    const double C2363 = C2316 + C2317;
    const double C2694 = C2686 + C2687;
    const double C3064 = C3044 + C3045;
    const double C3061 = C3038 + C3039;
    const double C3344 = C3336 + C3337;
    const double C3341 = C3330 + C3331;
    const double C3520 = C3512 + C3513;
    const double C3517 = C3506 + C3507;
    const double C4036 = C4028 + C4029;
    const double C4033 = C4022 + C4023;
    const double C5388 = C5362 + C5363;
    const double C5382 = C5350 + C5351;
    const double C5379 = C5344 + C5345;
    const double C5376 = C5338 + C5339;
    const double C5373 = C5332 + C5333;
    const double C5370 = C5326 + C5327;
    const double C5367 = C5320 + C5321;
    const double C5698 = C5690 + C5691;
    const double C7188 = C7180 + C7181;
    const double C7185 = C7174 + C7175;
    const double C25759 = C25733 + C25734;
    const double C25757 = C25729 + C25730;
    const double C25755 = C25725 + C25726;
    const double C25753 = C25721 + C25722;
    const double C25751 = C25717 + C25718;
    const double C25749 = C25713 + C25714;
    const double C25748 = C25711 + C25712;
    const double C25746 = C25707 + C25708;
    const double C25743 = C25701 + C25702;
    const double C25741 = C25697 + C25698;
    const double C25739 = C25693 + C25694;
    const double C25737 = C25689 + C25690;
    const double C26075 = C26061 + C26062;
    const double C26073 = C26057 + C26058;
    const double C26467 = C26449 + C26450;
    const double C26465 = C26445 + C26446;
    const double C26463 = C26441 + C26442;
    const double C26461 = C26437 + C26438;
    const double C26460 = C26435 + C26436;
    const double C26458 = C26431 + C26432;
    const double C26456 = C26427 + C26428;
    const double C26454 = C26423 + C26424;
    const double C26725 = C26719 + C26720;
    const double C26723 = C26715 + C26716;
    const double C26895 = C26885 + C26886;
    const double C26893 = C26881 + C26882;
    const double C26891 = C26877 + C26878;
    const double C26889 = C26873 + C26874;
    const double C27395 = C27389 + C27390;
    const double C27393 = C27385 + C27386;
    const double C28849 = C28827 + C28828;
    const double C28847 = C28823 + C28824;
    const double C28845 = C28819 + C28820;
    const double C28843 = C28815 + C28816;
    const double C28841 = C28811 + C28812;
    const double C28839 = C28807 + C28808;
    const double C28838 = C28805 + C28806;
    const double C28836 = C28801 + C28802;
    const double C28833 = C28795 + C28796;
    const double C28831 = C28791 + C28792;
    const double C29261 = C29255 + C29256;
    const double C29259 = C29251 + C29252;
    const double C30061 = C30055 + C30056;
    const double C30059 = C30051 + C30052;
    const double C31239 = C31233 + C31234;
    const double C31237 = C31229 + C31230;
    const double C38526 = C38516 + C38517;
    const double C38524 = C38512 + C38513;
    const double C38834 = C38828 + C38829;
    const double C40313 = C40305 + C40306;
    const double C40311 = C40301 + C40302;
    const double C19386 = C18975 + C19383;
    const double C18455 = C18449 + C18427;
    const double C20283 = C18430 + C20276;
    const double C49814 = C49812 - C49799;
    const double C47421 = C47413 + C47412;
    const double C49217 = C47406 + C47407;
    const double C47420 = C47400 + C47401;
    const double C48330 = C47925 + C47924;
    const double C18774 = C18772 * C50849;
    const double C21266 = C18772 * C50706;
    const double C47723 = C18772 * C22717;
    const double C11419 = C11416 + C11417;
    const double C11539 = C11532 + C11533;
    const double C11875 = C11872 + C11873;
    const double C13847 = C13836 + C13837;
    const double C2384 = C2358 + C2359;
    const double C2368 = C2326 + C2327;
    const double C7997 = C7968 + C7969;
    const double C10979 = C10970 + C10971;
    const double C22925 = C22883 + C22884;
    const double C25756 = C25727 + C25728;
    const double C26079 = C26069 + C26070;
    const double C3070 = C3056 + C3057;
    const double C3060 = C3036 + C3037;
    const double C8705 = C8684 + C8685;
    const double C13073 = C13066 + C13067;
    const double C23617 = C23593 + C23594;
    const double C26464 = C26443 + C26444;
    const double C29055 = C29049 + C29050;
    const double C2376 = C2342 + C2343;
    const double C2691 = C2680 + C2681;
    const double C8315 = C8300 + C8301;
    const double C22933 = C22899 + C22900;
    const double C26074 = C26059 + C26060;
    const double C2381 = C2352 + C2353;
    const double C2371 = C2332 + C2333;
    const double C7995 = C7964 + C7965;
    const double C10978 = C10968 + C10969;
    const double C22928 = C22889 + C22890;
    const double C25754 = C25723 + C25724;
    const double C26077 = C26065 + C26066;
    const double C5380 = C5346 + C5347;
    const double C5695 = C5684 + C5685;
    const double C16020 = C16005 + C16006;
    const double C29260 = C29253 + C29254;
    const double C32341 = C32307 + C32308;
    const double C5385 = C5356 + C5357;
    const double C5375 = C5336 + C5337;
    const double C15694 = C15663 + C15664;
    const double C18771 = C18765 + C18766;
    const double C28844 = C28817 + C28818;
    const double C32336 = C32297 + C32298;
    const double C38832 = C38824 + C38825;
    const double C3067 = C3050 + C3051;
    const double C3063 = C3042 + C3043;
    const double C8703 = C8680 + C8681;
    const double C13072 = C13064 + C13065;
    const double C23620 = C23599 + C23600;
    const double C26462 = C26439 + C26440;
    const double C29053 = C29045 + C29046;
    const double C18460 = C18439 + C18454;
    const double C49975 = C49974 + C49969;
    const double C3509 = C2159 * C1092;
    const double C16224 = C50545 * C1092;
    const double C18610 = C50540 * C1092;
    const double C24042 = C22716 * C1092;
    const double C28826 = C50545 * C1092;
    const double C3345 = C3338 + C3339;
    const double C8001 = C7976 + C7977;
    const double C10981 = C10974 + C10975;
    const double C23890 = C23883 + C23884;
    const double C25760 = C25735 + C25736;
    const double C3521 = C3514 + C3515;
    const double C16232 = C16227 + C16228;
    const double C18614 = C18611 + C18612;
    const double C24054 = C24047 + C24048;
    const double C28850 = C28829 + C28830;
    const double C4037 = C4030 + C4031;
    const double C8709 = C8692 + C8693;
    const double C13075 = C13070 + C13071;
    const double C24558 = C24551 + C24552;
    const double C26468 = C26451 + C26452;
    const double C3342 = C3332 + C3333;
    const double C7999 = C7972 + C7973;
    const double C10980 = C10972 + C10973;
    const double C23887 = C23877 + C23878;
    const double C25758 = C25731 + C25732;
    const double C4034 = C4024 + C4025;
    const double C8707 = C8688 + C8689;
    const double C13074 = C13068 + C13069;
    const double C24555 = C24545 + C24546;
    const double C26466 = C26447 + C26448;
    const double C7186 = C7176 + C7177;
    const double C15698 = C15671 + C15672;
    const double C21271 = C21267 + C21268;
    const double C34135 = C34125 + C34126;
    const double C38525 = C38514 + C38515;
    const double C13439 = C11245 * C7777;
    const double C45235 = C11245 * C25536;
    const double C12916 = C12904 * C7782;
    const double C18983 = C12904 * C2166;
    const double C44730 = C12904 * C25541;
    const double C47934 = C12904 * C22723;
    const double C13438 = C11244 * C7782;
    const double C45234 = C11244 * C25541;
    const double C50393 = C50392 + C50377;
    const double C13842 = C11538 * C7782;
    const double C19880 = C11538 * C2166;
    const double C45630 = C11538 * C25541;
    const double C48825 = C11538 * C22723;
    const double C14338 = C11874 * C7782;
    const double C46122 = C11874 * C25541;
    const double C5365 = C2159 * C431;
    const double C16018 = C50545 * C431;
    const double C32326 = C22716 * C431;
    const double C38831 = C50545 * C431;
    const double C5693 = C2159 * C432;
    const double C32654 = C22716 * C432;
    const double C21274 = C21272 * C50706;
    const double C20282 = C19385 * C50720;
    const double C21680 = C19385 * C50706;
    const double C49221 = C19385 * C50720;
    const double C22290 = C22288 * C50706;
    const double C50000 = C49999 + C49991;
    const double C3324 =
        (3 * (C49900 + ae * C50040 + C49847 * C50044) +
         ae * (2 * C50040 + C49847 * C50046) +
         C49847 *
             (2 * C50044 + ae * C50046 +
              C49847 *
                  (C49924 + ae * C49847 * C49997 +
                   C49847 * (ae * C49997 +
                             C49847 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C4016 =
        (2 * (ae * C50017 * C49972 + C49847 * C50065) + ae * C50017 * C50046 +
         C49847 * (C50065 + ae * C50017 * C49847 * C49997 +
                   C49847 * (ae * C50017 * C49997 +
                             C49847 * C50017 *
                                 (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C3321 = (3 * (C49956 + C49972 * C50043) +
                          C49847 * (2 * C50040 + C49847 * C50046)) /
                         C49721;
    const double C3497 = (C49956 + C49972 * C50043 + C50046 * C50027) / C49721;
    const double C4013 = (C50017 * (2 * C50040 + C49847 * C50046)) / C49721;
    const double C7974 = C49747 * C975;
    const double C7970 = C49747 * C971;
    const double C7966 = C49747 * C276;
    const double C7962 = C49747 * C258;
    const double C7958 = C49747 * C265;
    const double C7954 = C49747 * C255;
    const double C7952 = C49747 * C972;
    const double C7948 = C49747 * C976;
    const double C7942 = C49747 * C275;
    const double C7938 = C49747 * C257;
    const double C7934 = C49747 * C266;
    const double C7930 = C49747 * C256;
    const double C8310 = C49747 * C277;
    const double C8306 = C49747 * C259;
    const double C8302 = C49747 * C264;
    const double C8298 = C49747 * C254;
    const double C8690 = C49747 * C1436;
    const double C8686 = C49747 * C1432;
    const double C8682 = C49747 * C785;
    const double C8678 = C49747 * C776;
    const double C8676 = C49747 * C775;
    const double C8672 = C49747 * C784;
    const double C8668 = C49747 * C1433;
    const double C8664 = C49747 * C1437;
    const double C8968 = C49747 * C3320;
    const double C8964 = C49747 * C3317;
    const double C9142 = C49747 * C3496;
    const double C9138 = C49747 * C3493;
    const double C9134 = C49747 * C1090;
    const double C9130 = C49747 * C1086;
    const double C9654 = C49747 * C4012;
    const double C9650 = C49747 * C4009;
    const double C15673 = C49747 * C1720;
    const double C15669 = C49747 * C1716;
    const double C15665 = C49747 * C417;
    const double C15661 = C49747 * C399;
    const double C15657 = C49747 * C406;
    const double C15653 = C49747 * C396;
    const double C15651 = C49747 * C1717;
    const double C15647 = C49747 * C1721;
    const double C15641 = C49747 * C416;
    const double C15637 = C49747 * C398;
    const double C15633 = C49747 * C407;
    const double C15629 = C49747 * C397;
    const double C16015 = C49747 * C418;
    const double C16011 = C49747 * C400;
    const double C16007 = C49747 * C405;
    const double C16003 = C49747 * C395;
    const double C16225 = C49747 * C1089;
    const double C16221 = C49747 * C1085;
    const double C16631 = C49747 * C4432;
    const double C16627 = C49747 * C4429;
    const double C17534 = C49747 * C7164;
    const double C17530 = C49747 * C7161;
    const double C41518 = C49747 * C786;
    const double C41514 = C49747 * C777;
    const double C117 =
        ((((0 - (C49719 * C49720) / C49721) * ae) / C49721 - (0 * be) / C49730 +
          C49722 / C49721) /
             C49726 -
         ((C49719 * C49743 + 0) * be) / C49721) /
            C49726 -
        ((C49719 * (C49743 / C49726 -
                    ((C49719 * C49747 + C50821) * be) / C49721 + C49740) +
          C50879) *
         be) /
            C49721 +
        C49747 / C49726 - ((C49719 * C49740 + C50545) * be) / C49721;
    const double C118 =
        (C49743 / C49726 - ((C49719 * C49747 + C50821) * be) / C49721 +
         C49740) /
            C49726 -
        ((C49719 *
              (C49747 / C49726 - ((C49719 * C49740 + C50545) * be) / C49721) +
          C50863) *
         be) /
            C49721 +
        2 * (C49740 / C49726 - (0 * be) / C49721);
    const double C119 =
        (C49747 / C49726 - ((C49719 * C49740 + C50545) * be) / C49721) /
            C49726 -
        ((C49719 * (C49740 / C49726 - (0 * be) / C49721) + C22716) * be) /
            C49721;
    const double C22719 =
        C49743 / C49726 - ((C49719 * C49747 + C50821) * be) / C49721 + C49740;
    const double C22720 =
        C49747 / C49726 - ((C49719 * C49740 + C50545) * be) / C49721;
    const double C26714 = C25747 + C25748;
    const double C26713 = C25745 + C25746;
    const double C25762 = C25743 + C25744;
    const double C25761 = C25741 + C25742;
    const double C29524 = C26459 + C26460;
    const double C29521 = C26460 + C26459;
    const double C29523 = C26457 + C26458;
    const double C29522 = C26458 + C26457;
    const double C27384 = C26455 + C26456;
    const double C30709 = C26456 + C26455;
    const double C27383 = C26453 + C26454;
    const double C30710 = C26454 + C26453;
    const double C30050 = C26891 + C26892;
    const double C30047 = C26892 + C26891;
    const double C30049 = C26889 + C26890;
    const double C30048 = C26890 + C26889;
    const double C38520 = C28846 + C28845;
    const double C38510 = C28838 + C28837;
    const double C38511 = C28836 + C28835;
    const double C40299 = C31240 + C31239;
    const double C40300 = C31238 + C31237;
    const double C19387 = C18976 + C19386;
    const double C18461 = C18455 + C18428;
    const double C20286 = C18429 + C20283;
    const double C10617 =
        ((((0 - (C49768 * C49796) / C49721) * ae) / C49721 - (0 * be) / C49730 +
          C49780 / C49721) /
             C49726 -
         ((C49768 * C49813 + 0) * be) / C49721) /
            C49726 -
        ((C49768 * (C49813 / C49726 -
                    ((C49768 * C49814 + C50849) * be) / C49721 + C49808) +
          C50886) *
         be) /
            C49721 +
        C49814 / C49726 - ((C49768 * C49808 + C50720) * be) / C49721;
    const double C10618 =
        (C49813 / C49726 - ((C49768 * C49814 + C50849) * be) / C49721 +
         C49808) /
            C49726 -
        ((C49768 *
              (C49814 / C49726 - ((C49768 * C49808 + C50720) * be) / C49721) +
          C50875) *
         be) /
            C49721 +
        2 * (C49808 / C49726 - (0 * be) / C49721);
    const double C10619 =
        (C49814 / C49726 - ((C49768 * C49808 + C50720) * be) / C49721) /
            C49726 -
        ((C49768 * (C49808 / C49726 - (0 * be) / C49721) + C25536) * be) /
            C49721;
    const double C25539 =
        C49813 / C49726 - ((C49768 * C49814 + C50849) * be) / C49721 + C49808;
    const double C25540 =
        C49814 / C49726 - ((C49768 * C49808 + C50720) * be) / C49721;
    const double C47423 = C47414 + C47421;
    const double C49222 = C47405 + C49217;
    const double C47422 = C47420 + C47402;
    const double C48331 = C47926 + C48330;
    const double C13843 = C11539 * C7777;
    const double C19881 = C11539 * C50720;
    const double C45631 = C11539 * C25536;
    const double C48826 = C11539 * C50720;
    const double C14339 = C11875 * C7777;
    const double C46123 = C11875 * C25536;
    const double C14745 = C13847 * C7777;
    const double C19382 = C13847 * C50720;
    const double C22014 = C13847 * C50706;
    const double C46519 = C13847 * C25536;
    const double C48329 = C13847 * C50720;
    const double C25763 = C25756 + C25755;
    const double C13227 = C13073 * C7776;
    const double C18764 = C13073 * C50720;
    const double C45027 = C13073 * C50875;
    const double C47721 = C13073 * C50720;
    const double C29527 = C26464 + C26463;
    const double C29526 = C26463 + C26464;
    const double C25764 = C25754 + C25753;
    const double C18773 = C18771 * C2165;
    const double C21265 = C18771 * C121;
    const double C47722 = C18771 * C22722;
    const double C38521 = C28844 + C28843;
    const double C13226 = C13072 * C7781;
    const double C18763 = C13072 * C2166;
    const double C47720 = C13072 * C22723;
    const double C29528 = C26462 + C26461;
    const double C29525 = C26461 + C26462;
    const double C18462 = C18440 + C18460;
    const double C290 =
        (2 * C49880 + ae * C49881 + C49848 * C49900 + ae * C49847 * C49975 +
         C49847 * (ae * C49975 + C49847 * C49928)) /
        C49725;
    const double C291 =
        (ae * (3 * C49956 + C49848 * C49975 +
               (2 * C49949 + C49848 * C49967) * ae) +
         C49847 * (3 * C49900 + ae * C49901 + C49848 * C49928)) /
        C49725;
    const double C793 =
        (ae * C50017 * C49975 + C49847 * C50017 * C49928) / C49725;
    const double C139 = (4 * (2 * C49945 + C49848 * C49956 + C50191 * ae) +
                         C49848 * (3 * C49956 + C49848 * C49975 + C50195 * ae) +
                         (3 * C50191 + C49848 * C50195) * ae) /
                        C49721;
    const double C274 =
        (2 * C49945 + C49848 * C49956 + C50191 * ae + C49975 * C50043) / C49721;
    const double C279 =
        (C49847 * (3 * C49956 + C49848 * C49975 + C50195 * ae)) / C49721;
    const double C415 =
        (2 * C49945 + C49848 * C49956 + C50191 * ae + C49975 * C50027) / C49721;
    const double C420 =
        (C50017 * (3 * C49956 + C49848 * C49975 + C50195 * ae)) / C49721;
    const double C783 = (C50017 * C49847 * C49975) / C49721;
    const double C3518 = C3508 + C3509;
    const double C16230 = C16223 + C16224;
    const double C18613 = C18609 + C18610;
    const double C24051 = C24041 + C24042;
    const double C28848 = C28825 + C28826;
    const double C18770 = C18614 * C50720;
    const double C47725 = C18614 * C50720;
    const double C13229 = C13075 * C7777;
    const double C45029 = C13075 * C25536;
    const double C13228 = C13074 * C7782;
    const double C45028 = C13074 * C25541;
    const double C21273 = C21271 * C121;
    const double C11410 =
        (5 * (3 * C50358 + C49847 * C50393 + C50357 * ae) +
         C49847 *
             (4 * C50393 +
              C49847 *
                  (3 * C50388 +
                   C49847 *
                       (2 * C50380 +
                        C49847 * (C49893 + C49847 * (C49847 * C49917 + C49984) +
                                  C49847 * C49981 * ae) +
                        C50382 * ae) +
                   C50387 * ae) +
              C50391 * ae) +
         (4 * C50357 + C49847 * C50391) * ae) /
        C49721;
    const double C11518 =
        (3 * C50358 + C49847 * C50393 + C50357 * ae +
         (3 * C50388 +
          C49847 * (2 * C50380 +
                    C49847 * (C49893 + C49847 * (C49847 * C49917 + C49984) +
                              C49847 * C49981 * ae) +
                    C50382 * ae) +
          C50387 * ae) *
             C50027) /
        C49721;
    const double C11866 =
        (C50017 *
         (4 * C50393 +
          C49847 * (3 * C50388 +
                    C49847 * (2 * C50380 +
                              C49847 * (C49893 +
                                        C49847 * (C49847 * C49917 + C49984) +
                                        C49847 * C49981 * ae) +
                              C50382 * ae) +
                    C50387 * ae) +
          C50391 * ae)) /
        C49721;
    const double C12138 =
        (2 * C50017 * C50393 +
         C50017 *
             (C50393 + (2 * C50380 +
                        C49847 * (C49893 + C49847 * (C49847 * C49917 + C49984) +
                                  C49847 * C49981 * ae) +
                        C50382 * ae) *
                           C50027)) /
        C49721;
    const double C5389 = C5364 + C5365;
    const double C16026 = C16017 + C16018;
    const double C32350 = C32325 + C32326;
    const double C38835 = C38830 + C38831;
    const double C5699 = C5692 + C5693;
    const double C32660 = C32653 + C32654;
    const double C50001 = C49848 * C50000;
    const double C981 =
        (2 * (ae * C49975 + C49847 * C49928) +
         ae * (C49975 + C50000 * std::pow(C49847, 2)) +
         C49847 *
             (C49928 + ae * C49847 * C50000 +
              C49847 *
                  (ae * C50000 +
                   C49847 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C1095 =
        (ae * (C49975 + C50000 * C50027) +
         C49847 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                C50027)) /
        C49725;
    const double C1442 =
        (C50017 * C49928 + ae * C50017 * C49847 * C50000 +
         C49847 * (ae * C50017 * C50000 +
                   C49847 * C50017 *
                       (2 * C49920 + ae * C49921 +
                        C49848 * (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C977 =
        (2 * C49847 * C49975 + C49847 * (C49975 + C50000 * C50043)) / C49721;
    const double C1091 = (C49847 * C49975 + C49847 * C50000 * C50027) / C49721;
    const double C1438 = (C50017 * (C49975 + C50000 * C50043)) / C49721;
    const double C1722 =
        (2 * C50017 * C49975 + C50017 * (C49975 + C50000 * C50027)) / C49721;
    const double C8000 = C7974 + C7975;
    const double C7998 = C7970 + C7971;
    const double C7996 = C7966 + C7967;
    const double C7994 = C7962 + C7963;
    const double C7992 = C7958 + C7959;
    const double C7990 = C7954 + C7955;
    const double C7989 = C7952 + C7953;
    const double C7987 = C7948 + C7949;
    const double C7984 = C7942 + C7943;
    const double C7982 = C7938 + C7939;
    const double C7980 = C7934 + C7935;
    const double C7978 = C7930 + C7931;
    const double C8320 = C8310 + C8311;
    const double C8318 = C8306 + C8307;
    const double C8316 = C8302 + C8303;
    const double C8314 = C8298 + C8299;
    const double C8708 = C8690 + C8691;
    const double C8706 = C8686 + C8687;
    const double C8704 = C8682 + C8683;
    const double C8702 = C8678 + C8679;
    const double C8701 = C8676 + C8677;
    const double C8699 = C8672 + C8673;
    const double C8697 = C8668 + C8669;
    const double C8695 = C8664 + C8665;
    const double C8974 = C8968 + C8969;
    const double C8972 = C8964 + C8965;
    const double C9152 = C9142 + C9143;
    const double C9150 = C9138 + C9139;
    const double C9148 = C9134 + C9135;
    const double C9146 = C9130 + C9131;
    const double C9660 = C9654 + C9655;
    const double C9658 = C9650 + C9651;
    const double C15699 = C15673 + C15674;
    const double C15697 = C15669 + C15670;
    const double C15695 = C15665 + C15666;
    const double C15693 = C15661 + C15662;
    const double C15691 = C15657 + C15658;
    const double C15689 = C15653 + C15654;
    const double C15688 = C15651 + C15652;
    const double C15686 = C15647 + C15648;
    const double C15683 = C15641 + C15642;
    const double C15681 = C15637 + C15638;
    const double C15679 = C15633 + C15634;
    const double C15677 = C15629 + C15630;
    const double C16025 = C16015 + C16016;
    const double C16023 = C16011 + C16012;
    const double C16021 = C16007 + C16008;
    const double C16019 = C16003 + C16004;
    const double C16231 = C16225 + C16226;
    const double C16229 = C16221 + C16222;
    const double C16639 = C16631 + C16632;
    const double C16637 = C16627 + C16628;
    const double C17542 = C17534 + C17535;
    const double C17540 = C17530 + C17531;
    const double C41524 = C41518 + C41519;
    const double C41522 = C41514 + C41515;
    const double C22913 = C22719 * C276;
    const double C22907 = C22719 * C258;
    const double C22901 = C22719 * C265;
    const double C22895 = C22719 * C255;
    const double C22893 = C22719 * C257;
    const double C22887 = C22719 * C275;
    const double C22877 = C22719 * C266;
    const double C22871 = C22719 * C256;
    const double C23241 = C22719 * C264;
    const double C23235 = C22719 * C254;
    const double C23611 = C22719 * C785;
    const double C23605 = C22719 * C776;
    const double C23603 = C22719 * C775;
    const double C23597 = C22719 * C784;
    const double C23879 = C22719 * C976;
    const double C23873 = C22719 * C972;
    const double C24043 = C22719 * C1090;
    const double C24037 = C22719 * C1086;
    const double C24547 = C22719 * C1437;
    const double C24541 = C22719 * C1433;
    const double C32321 = C22719 * C417;
    const double C32315 = C22719 * C399;
    const double C32309 = C22719 * C406;
    const double C32303 = C22719 * C396;
    const double C32301 = C22719 * C398;
    const double C32295 = C22719 * C416;
    const double C32285 = C22719 * C407;
    const double C32279 = C22719 * C397;
    const double C32649 = C22719 * C405;
    const double C32643 = C22719 * C395;
    const double C34127 = C22719 * C1721;
    const double C34121 = C22719 * C1717;
    const double C22915 = C22720 * C277;
    const double C22909 = C22720 * C259;
    const double C22903 = C22720 * C264;
    const double C22897 = C22720 * C254;
    const double C22891 = C22720 * C258;
    const double C22885 = C22720 * C276;
    const double C22879 = C22720 * C265;
    const double C22873 = C22720 * C255;
    const double C23243 = C22720 * C263;
    const double C23237 = C22720 * C253;
    const double C23613 = C22720 * C786;
    const double C23607 = C22720 * C777;
    const double C23601 = C22720 * C776;
    const double C23595 = C22720 * C785;
    const double C23881 = C22720 * C975;
    const double C23875 = C22720 * C971;
    const double C24045 = C22720 * C1089;
    const double C24039 = C22720 * C1085;
    const double C24549 = C22720 * C1436;
    const double C24543 = C22720 * C1432;
    const double C32323 = C22720 * C418;
    const double C32317 = C22720 * C400;
    const double C32311 = C22720 * C405;
    const double C32305 = C22720 * C395;
    const double C32299 = C22720 * C399;
    const double C32293 = C22720 * C417;
    const double C32287 = C22720 * C406;
    const double C32281 = C22720 * C396;
    const double C32651 = C22720 * C404;
    const double C32645 = C22720 * C394;
    const double C34129 = C22720 * C1720;
    const double C34123 = C22720 * C1716;
    const double C39420 = C30047 * C50706;
    const double C39421 = C30048 * C121;
    const double C38528 = C38520 * C50706;
    const double C38522 = C38510 * C121;
    const double C38523 = C38511 * C50706;
    const double C40309 = C40299 * C50706;
    const double C40310 = C40300 * C121;
    const double C44726 = C12900 * C25539;
    const double C44720 = C12898 * C25539;
    const double C44719 = C12897 * C25539;
    const double C44708 = C12894 * C25539;
    const double C45024 = C13230 * C25539;
    const double C45230 = C11240 * C25539;
    const double C45224 = C11239 * C25539;
    const double C45626 = C11534 * C25539;
    const double C46118 = C11237 * C25539;
    const double C46514 = C14746 * C25539;
    const double C44728 = C12902 * C25540;
    const double C44722 = C11240 * C25540;
    const double C44717 = C11534 * C25540;
    const double C44710 = C11239 * C25540;
    const double C45026 = C13072 * C25540;
    const double C45232 = C11242 * C25540;
    const double C45226 = C11237 * C25540;
    const double C45628 = C11536 * C25540;
    const double C46120 = C11235 * C25540;
    const double C46516 = C13844 * C25540;
    const double C47425 = C47415 + C47423;
    const double C49223 = C47404 + C49222;
    const double C47424 = C47422 + C47403;
    const double C48332 = C47927 + C48331;
    const double C38529 = C38521 * C121;
    const double C2361 = C2159 * C290;
    const double C8313 = C50545 * C290;
    const double C22918 = C22716 * C290;
    const double C26072 = C50545 * C290;
    const double C2689 = C2159 * C291;
    const double C23246 = C22716 * C291;
    const double C3059 = C2159 * C793;
    const double C23616 = C22716 * C793;
    const double C29052 = C50545 * C793;
    const double C41521 = C50545 * C793;
    const double C2355 = C2159 * C274;
    const double C8309 = C50545 * C274;
    const double C22912 = C22716 * C274;
    const double C26068 = C50545 * C274;
    const double C2683 = C2159 * C279;
    const double C23240 = C22716 * C279;
    const double C5359 = C2159 * C415;
    const double C16014 = C50545 * C415;
    const double C32320 = C22716 * C415;
    const double C38827 = C50545 * C415;
    const double C5687 = C2159 * C420;
    const double C32648 = C22716 * C420;
    const double C3053 = C2159 * C783;
    const double C23610 = C22716 * C783;
    const double C29048 = C50545 * C783;
    const double C41517 = C50545 * C783;
    const double C18769 = C18613 * C2166;
    const double C47724 = C18613 * C22723;
    const double C50002 = C49978 + C50001;
    const double C8004 = C7997 + C7996;
    const double C8005 = C7995 + C7994;
    const double C8963 = C7988 + C7989;
    const double C8962 = C7986 + C7987;
    const double C8003 = C7984 + C7985;
    const double C8002 = C7982 + C7983;
    const double C41984 = C8705 + C8704;
    const double C41983 = C8704 + C8705;
    const double C41985 = C8703 + C8702;
    const double C41982 = C8702 + C8703;
    const double C41981 = C8700 + C8701;
    const double C41978 = C8701 + C8700;
    const double C41980 = C8698 + C8699;
    const double C41979 = C8699 + C8698;
    const double C9649 = C8696 + C8697;
    const double C43152 = C8697 + C8696;
    const double C9648 = C8694 + C8695;
    const double C43153 = C8695 + C8694;
    const double C16635 = C9149 + C9148;
    const double C42505 = C9148 + C9149;
    const double C16636 = C9147 + C9146;
    const double C42504 = C9146 + C9147;
    const double C15703 = C15696 + C15695;
    const double C15704 = C15694 + C15693;
    const double C17529 = C15687 + C15688;
    const double C17528 = C15685 + C15686;
    const double C15702 = C15683 + C15684;
    const double C15701 = C15681 + C15682;
    const double C22940 = C22913 + C22914;
    const double C22937 = C22907 + C22908;
    const double C22934 = C22901 + C22902;
    const double C22931 = C22895 + C22896;
    const double C22930 = C22893 + C22894;
    const double C22927 = C22887 + C22888;
    const double C22922 = C22877 + C22878;
    const double C22919 = C22871 + C22872;
    const double C23250 = C23241 + C23242;
    const double C23247 = C23235 + C23236;
    const double C23626 = C23611 + C23612;
    const double C23623 = C23605 + C23606;
    const double C23622 = C23603 + C23604;
    const double C23619 = C23597 + C23598;
    const double C23888 = C23879 + C23880;
    const double C23885 = C23873 + C23874;
    const double C24052 = C24043 + C24044;
    const double C24049 = C24037 + C24038;
    const double C24556 = C24547 + C24548;
    const double C24553 = C24541 + C24542;
    const double C32348 = C32321 + C32322;
    const double C32345 = C32315 + C32316;
    const double C32342 = C32309 + C32310;
    const double C32339 = C32303 + C32304;
    const double C32338 = C32301 + C32302;
    const double C32335 = C32295 + C32296;
    const double C32330 = C32285 + C32286;
    const double C32327 = C32279 + C32280;
    const double C32658 = C32649 + C32650;
    const double C32655 = C32643 + C32644;
    const double C34136 = C34127 + C34128;
    const double C34133 = C34121 + C34122;
    const double C22941 = C22915 + C22916;
    const double C22938 = C22909 + C22910;
    const double C22935 = C22903 + C22904;
    const double C22932 = C22897 + C22898;
    const double C22929 = C22891 + C22892;
    const double C22926 = C22885 + C22886;
    const double C22923 = C22879 + C22880;
    const double C22920 = C22873 + C22874;
    const double C23251 = C23243 + C23244;
    const double C23248 = C23237 + C23238;
    const double C23627 = C23613 + C23614;
    const double C23624 = C23607 + C23608;
    const double C23621 = C23601 + C23602;
    const double C23618 = C23595 + C23596;
    const double C23889 = C23881 + C23882;
    const double C23886 = C23875 + C23876;
    const double C24053 = C24045 + C24046;
    const double C24050 = C24039 + C24040;
    const double C24557 = C24549 + C24550;
    const double C24554 = C24543 + C24544;
    const double C32349 = C32323 + C32324;
    const double C32346 = C32317 + C32318;
    const double C32343 = C32311 + C32312;
    const double C32340 = C32305 + C32306;
    const double C32337 = C32299 + C32300;
    const double C32334 = C32293 + C32294;
    const double C32331 = C32287 + C32288;
    const double C32328 = C32281 + C32282;
    const double C32659 = C32651 + C32652;
    const double C32656 = C32645 + C32646;
    const double C34137 = C34129 + C34130;
    const double C34134 = C34123 + C34124;
    const double C39422 = C39420 + C39421;
    const double C38530 = C38522 + C38523;
    const double C40315 = C40309 + C40310;
    const double C38531 = C38528 + C38529;
    const double C2385 = C2360 + C2361;
    const double C8321 = C8312 + C8313;
    const double C22942 = C22917 + C22918;
    const double C26080 = C26071 + C26072;
    const double C2695 = C2688 + C2689;
    const double C23252 = C23245 + C23246;
    const double C3071 = C3058 + C3059;
    const double C23628 = C23615 + C23616;
    const double C29056 = C29051 + C29052;
    const double C41525 = C41520 + C41521;
    const double C2382 = C2354 + C2355;
    const double C8319 = C8308 + C8309;
    const double C22939 = C22911 + C22912;
    const double C26078 = C26067 + C26068;
    const double C2692 = C2682 + C2683;
    const double C23249 = C23239 + C23240;
    const double C5386 = C5358 + C5359;
    const double C16024 = C16013 + C16014;
    const double C32347 = C32319 + C32320;
    const double C38833 = C38826 + C38827;
    const double C5696 = C5686 + C5687;
    const double C32657 = C32647 + C32648;
    const double C3068 = C3052 + C3053;
    const double C23625 = C23609 + C23610;
    const double C29054 = C29047 + C29048;
    const double C41523 = C41516 + C41517;
    const double C50003 = C50002 + C49996;
    const double C16641 = C16635 * C50706;
    const double C16642 = C16636 * C121;
    const double C15707 = C15703 * C50706;
    const double C15708 = C15704 * C121;
    const double C17539 = C17529 * C121;
    const double C17538 = C17528 * C50706;
    const double C15706 = C15702 * C50706;
    const double C15705 = C15701 * C121;
    const double C292 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 + ae * C49847 * C50003 +
         C49847 *
             (ae * C50003 +
              C49847 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C540 =
        (ae * (4 * C49975 + C49848 * C50003 +
               (3 * C49967 + C49848 * C49994) * ae) +
         C49847 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C794 =
        (ae * C50017 * C50003 +
         C49847 * C50017 *
             (3 * C49924 + ae * C49925 +
              C49848 * (2 * C49920 + ae * C49921 +
                        C49848 * (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C142 = (5 * (3 * C49956 + C49848 * C49975 + C50195 * ae) +
                         C49848 * (4 * C49975 + C49848 * C50003 + C50201 * ae) +
                         (4 * C50195 + C49848 * C50201) * ae) /
                        C49721;
    const double C282 =
        (3 * C49956 + C49848 * C49975 + C50195 * ae + C50003 * C50043) / C49721;
    const double C423 =
        (3 * C49956 + C49848 * C49975 + C50195 * ae + C50003 * C50027) / C49721;
    const double C539 =
        (C49847 * (4 * C49975 + C49848 * C50003 + C50201 * ae)) / C49721;
    const double C643 =
        (C50017 * (4 * C49975 + C49848 * C50003 + C50201 * ae)) / C49721;
    const double C789 = (C50017 * C49847 * C50003) / C49721;
    const double C16643 = C16641 + C16642;
    const double C15710 = C15707 + C15708;
    const double C17544 = C17538 + C17539;
    const double C15709 = C15705 + C15706;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50606 * C50838 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50606 * C50642) *
                     C50880 +
                 (((C22931 + C22932 + C22933) * C22722 +
                   (C22934 + C22935 + C22936) * C22717 +
                   (C22937 + C22938 + C22939) * C22723 +
                   (C22940 + C22941 + C22942) * C50720) *
                      C50732 * C50606 * C50642 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50606 * C50838) *
                     C50881 +
                 (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                    C50863 * C132 + C22721 * C126 + C22716 * C138) *
                       C22722 +
                   (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                    C50863 * C146 + C22721 * C137 + C22716 * C147) *
                       C22717 +
                   (C23247 + C23248 + C23249) * C22723 +
                   (C23250 + C23251 + C23252) * C50720) *
                      C50732 * C50606 * C50838 -
                  ((C22721 * C281 + C22716 * C292 + C22720 * C278 +
                    C50863 * C290 + C22719 * C277 + C50879 * C289) *
                       C50720 +
                   (C22721 * C262 + C22716 * C282 + C22720 * C260 +
                    C50863 * C274 + C22719 * C259 + C50879 * C273) *
                       C22723 +
                   (C23252 + C23251 + C23250) * C22717 +
                   (C23249 + C23248 + C23247) * C22722) *
                      C50732 * C50606 * C50642) *
                     C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C50839 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50670) *
                      C50838 +
                  (((C23622 + C23621 + C23620) * C22722 +
                    (C23619 + C23618 + C23617) * C22717 +
                    (C22719 * C1433 + C50879 * C1441 + C22720 * C1432 +
                     C50863 * C1440 + C22721 * C1431 + C22716 * C1439) *
                        C22723 +
                    (C22719 * C1437 + C50879 * C1445 + C22720 * C1436 +
                     C50863 * C1444 + C22721 * C1435 + C22716 * C1443) *
                        C50720) *
                       C50732 * C50670 -
                   ((C22925 + C22926 + C22927) * C50720 +
                    (C22928 + C22929 + C22930) * C22723 +
                    (C22924 + C22923 + C22922) * C22717 +
                    (C22921 + C22920 + C22919) * C22722) *
                       C50732 * C50839) *
                      C50642) *
                     C251 +
                 ((((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                     C50863 * C409 + C22721 * C394 + C22716 * C408) *
                        C22722 +
                    (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                     C50863 * C425 + C22721 * C404 + C22716 * C424) *
                        C22717 +
                    (C23623 + C23624 + C23625) * C22723 +
                    (C23626 + C23627 + C23628) * C50720) *
                       C50732 * C50670 -
                   ((C22936 + C22935 + C22934) * C50720 +
                    (C22933 + C22932 + C22931) * C22723 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50863 * C145 + C22719 * C134 + C50879 * C144) *
                        C22717 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50863 * C131 + C22719 * C123 + C50879 * C130) *
                        C22722) *
                       C50732 * C50839) *
                      C50838 +
                  (((C22931 + C22932 + C22933) * C22722 +
                    (C22934 + C22935 + C22936) * C22717 +
                    (C22937 + C22938 + C22939) * C22723 +
                    (C22940 + C22941 + C22942) * C50720) *
                       C50732 * C50839 -
                   ((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                     C50863 * C1443 + C22719 * C1436 + C50879 * C1444) *
                        C50720 +
                    (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                     C50863 * C1439 + C22719 * C1432 + C50879 * C1440) *
                        C22723 +
                    (C23628 + C23627 + C23626) * C22717 +
                    (C23625 + C23624 + C23623) * C22722) *
                       C50732 * C50670) *
                      C50642) *
                     C50577)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50606 * C248 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50606 * C249 +
                  ((C22930 + C22929 + C22928) * C22722 +
                   (C22927 + C22926 + C22925) * C22717 +
                   (C22719 * C972 + C50879 * C980 + C22720 * C971 +
                    C50863 * C979 + C22721 * C970 + C22716 * C978) *
                       C22723 +
                   (C22719 * C976 + C50879 * C984 + C22720 * C975 +
                    C50863 * C983 + C22721 * C974 + C22716 * C982) *
                       C50720) *
                      C50732 * C50606 * C250) *
                     C251 +
                 (((C22931 + C22932 + C22933) * C22722 +
                   (C22934 + C22935 + C22936) * C22717 +
                   (C22937 + C22938 + C22939) * C22723 +
                   (C22940 + C22941 + C22942) * C50720) *
                      C50732 * C50606 * C249 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50606 * C248 -
                  ((C22721 * C973 + C22716 * C981 + C22720 * C974 +
                    C50863 * C982 + C22719 * C975 + C50879 * C983) *
                       C50720 +
                   (C22721 * C969 + C22716 * C977 + C22720 * C970 +
                    C50863 * C978 + C22719 * C971 + C50879 * C979) *
                       C22723 +
                   (C22942 + C22941 + C22940) * C22717 +
                   (C22939 + C22938 + C22937) * C22722) *
                      C50732 * C50606 * C250) *
                     C50577)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                   C50863 * C130 + C22721 * C124 + C22716 * C131) *
                      C22722 +
                  (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                   C50863 * C144 + C22721 * C135 + C22716 * C145) *
                      C22717 +
                  (C22719 * C256 + C50879 * C270 + C22720 * C255 +
                   C50863 * C269 + C22721 * C254 + C22716 * C268) *
                      C22723 +
                  (C22719 * C266 + C50879 * C286 + C22720 * C265 +
                   C50863 * C285 + C22721 * C264 + C22716 * C284) *
                      C50720) *
                     C50732 * C50606 * C50590 * C113 -
                 ((C22721 * C263 + C22716 * C283 + C22720 * C264 +
                   C50863 * C284 + C22719 * C265 + C50879 * C285) *
                      C50720 +
                  (C22721 * C253 + C22716 * C267 + C22720 * C254 +
                   C50863 * C268 + C22719 * C255 + C50879 * C269) *
                      C22723 +
                  (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                   C50863 * C145 + C22719 * C134 + C50879 * C144) *
                      C22717 +
                  (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                   C50863 * C131 + C22719 * C123 + C50879 * C130) *
                      C22722) *
                     C50732 * C50606 * C50590 * C114 +
                 ((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                   C50863 * C132 + C22721 * C126 + C22716 * C138) *
                      C22722 +
                  (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                   C50863 * C146 + C22721 * C137 + C22716 * C147) *
                      C22717 +
                  (C22719 * C254 + C50879 * C268 + C22720 * C253 +
                   C50863 * C267 + C22721 * C261 + C22716 * C279) *
                      C22723 +
                  (C22719 * C264 + C50879 * C284 + C22720 * C263 +
                   C50863 * C283 + C22721 * C280 + C22716 * C291) *
                      C50720) *
                     C50732 * C50606 * C50590 * C115 -
                 ((C22721 * C538 + C22716 * C540 + C22720 * C280 +
                   C50863 * C291 + C22719 * C263 + C50879 * C283) *
                      C50720 +
                  (C22721 * C537 + C22716 * C539 + C22720 * C261 +
                   C50863 * C279 + C22719 * C253 + C50879 * C267) *
                      C22723 +
                  (C22721 * C140 + C22716 * C148 + C22720 * C137 +
                   C50863 * C147 + C22719 * C136 + C50879 * C146) *
                      C22717 +
                  (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                   C50863 * C138 + C22719 * C125 + C50879 * C132) *
                      C22722) *
                     C50732 * C50606 * C50590 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C391 -
                  ((C22721 * C786 + C22716 * C792 + C22720 * C785 +
                    C50863 * C791 + C22719 * C784 + C50879 * C790) *
                       C50720 +
                   (C22721 * C777 + C22716 * C782 + C22720 * C776 +
                    C50863 * C781 + C22719 * C775 + C50879 * C780) *
                       C22723 +
                   (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                    C50863 * C426 + C22719 * C407 + C50879 * C427) *
                       C22717 +
                   (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                    C50863 * C410 + C22719 * C397 + C50879 * C411) *
                       C22722) *
                      C50732 * C392 +
                  ((C22719 * C398 + C50879 * C412 + C22720 * C399 +
                    C50863 * C413 + C22721 * C400 + C22716 * C414) *
                       C22722 +
                   (C22719 * C416 + C50879 * C428 + C22720 * C417 +
                    C50863 * C429 + C22721 * C418 + C22716 * C430) *
                       C22717 +
                   (C22719 * C1086 + C50879 * C1094 + C22720 * C1085 +
                    C50863 * C1093 + C22721 * C1084 + C22716 * C1092) *
                       C22723 +
                   (C22719 * C1090 + C50879 * C1098 + C22720 * C1089 +
                    C50863 * C1097 + C22721 * C1088 + C22716 * C1096) *
                       C50720) *
                      C50732 * C393) *
                     C50590 * C251 +
                 (((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                    C50863 * C409 + C22721 * C394 + C22716 * C408) *
                       C22722 +
                   (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                    C50863 * C425 + C22721 * C404 + C22716 * C424) *
                       C22717 +
                   (C22719 * C776 + C50879 * C781 + C22720 * C777 +
                    C50863 * C782 + C22721 * C778 + C22716 * C783) *
                       C22723 +
                   (C22719 * C785 + C50879 * C791 + C22720 * C786 +
                    C50863 * C792 + C22721 * C787 + C22716 * C793) *
                       C50720) *
                      C50732 * C392 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C391 -
                  ((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                    C50863 * C1096 + C22719 * C1089 + C50879 * C1097) *
                       C50720 +
                   (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                    C50863 * C1092 + C22719 * C1085 + C50879 * C1093) *
                       C22723 +
                   (C22721 * C419 + C22716 * C431 + C22720 * C418 +
                    C50863 * C430 + C22719 * C417 + C50879 * C429) *
                       C22717 +
                   (C22721 * C401 + C22716 * C415 + C22720 * C400 +
                    C50863 * C414 + C22719 * C399 + C50879 * C413) *
                       C22722) *
                      C50732 * C393) *
                     C50590 * C50577)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50839 -
                  ((C22721 * C786 + C22716 * C792 + C22720 * C785 +
                    C50863 * C791 + C22719 * C784 + C50879 * C790) *
                       C50720 +
                   (C22721 * C777 + C22716 * C782 + C22720 * C776 +
                    C50863 * C781 + C22719 * C775 + C50879 * C780) *
                       C22723 +
                   (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                    C50863 * C426 + C22719 * C407 + C50879 * C427) *
                       C22717 +
                   (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                    C50863 * C410 + C22719 * C397 + C50879 * C411) *
                       C22722) *
                      C50732 * C50670) *
                     C50590 * C50880 +
                 (((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                    C50863 * C409 + C22721 * C394 + C22716 * C408) *
                       C22722 +
                   (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                    C50863 * C425 + C22721 * C404 + C22716 * C424) *
                       C22717 +
                   (C22719 * C776 + C50879 * C781 + C22720 * C777 +
                    C50863 * C782 + C22721 * C778 + C22716 * C783) *
                       C22723 +
                   (C22719 * C785 + C50879 * C791 + C22720 * C786 +
                    C50863 * C792 + C22721 * C787 + C22716 * C793) *
                       C50720) *
                      C50732 * C50670 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50839) *
                     C50590 * C50881 +
                 (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                    C50863 * C132 + C22721 * C126 + C22716 * C138) *
                       C22722 +
                   (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                    C50863 * C146 + C22721 * C137 + C22716 * C147) *
                       C22717 +
                   (C23247 + C23248 + C23249) * C22723 +
                   (C23250 + C23251 + C23252) * C50720) *
                      C50732 * C50839 -
                  ((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                    C50863 * C793 + C22719 * C786 + C50879 * C792) *
                       C50720 +
                   (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                    C50863 * C783 + C22719 * C777 + C50879 * C782) *
                       C22723 +
                   (C22721 * C421 + C22716 * C432 + C22720 * C404 +
                    C50863 * C424 + C22719 * C405 + C50879 * C425) *
                       C22717 +
                   (C22721 * C402 + C22716 * C420 + C22720 * C394 +
                    C50863 * C408 + C22719 * C395 + C50879 * C409) *
                       C22722) *
                      C50732 * C50670) *
                     C50590 * C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                   C50863 * C130 + C22721 * C124 + C22716 * C131) *
                      C22722 +
                  (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                   C50863 * C144 + C22721 * C135 + C22716 * C145) *
                      C22717 +
                  (C22719 * C256 + C50879 * C270 + C22720 * C255 +
                   C50863 * C269 + C22721 * C254 + C22716 * C268) *
                      C22723 +
                  (C22719 * C266 + C50879 * C286 + C22720 * C265 +
                   C50863 * C285 + C22721 * C264 + C22716 * C284) *
                      C50720) *
                     C50732 * C50606 * C50590 * C113 -
                 ((C22721 * C263 + C22716 * C283 + C22720 * C264 +
                   C50863 * C284 + C22719 * C265 + C50879 * C285) *
                      C50720 +
                  (C22721 * C253 + C22716 * C267 + C22720 * C254 +
                   C50863 * C268 + C22719 * C255 + C50879 * C269) *
                      C22723 +
                  (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                   C50863 * C145 + C22719 * C134 + C50879 * C144) *
                      C22717 +
                  (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                   C50863 * C131 + C22719 * C123 + C50879 * C130) *
                      C22722) *
                     C50732 * C50606 * C50590 * C114 +
                 ((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                   C50863 * C132 + C22721 * C126 + C22716 * C138) *
                      C22722 +
                  (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                   C50863 * C146 + C22721 * C137 + C22716 * C147) *
                      C22717 +
                  (C22719 * C254 + C50879 * C268 + C22720 * C253 +
                   C50863 * C267 + C22721 * C261 + C22716 * C279) *
                      C22723 +
                  (C22719 * C264 + C50879 * C284 + C22720 * C263 +
                   C50863 * C283 + C22721 * C280 + C22716 * C291) *
                      C50720) *
                     C50732 * C50606 * C50590 * C115 -
                 ((C22721 * C538 + C22716 * C540 + C22720 * C280 +
                   C50863 * C291 + C22719 * C263 + C50879 * C283) *
                      C50720 +
                  (C22721 * C537 + C22716 * C539 + C22720 * C261 +
                   C50863 * C279 + C22719 * C253 + C50879 * C267) *
                      C22723 +
                  (C22721 * C140 + C22716 * C148 + C22720 * C137 +
                   C50863 * C147 + C22719 * C136 + C50879 * C146) *
                      C22717 +
                  (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                   C50863 * C138 + C22719 * C125 + C50879 * C132) *
                      C22722) *
                     C50732 * C50606 * C50590 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50606 * C248 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50606 * C249 +
                  ((C22930 + C22929 + C22928) * C22722 +
                   (C22927 + C22926 + C22925) * C22717 +
                   (C22719 * C972 + C50879 * C980 + C22720 * C971 +
                    C50863 * C979 + C22721 * C970 + C22716 * C978) *
                       C22723 +
                   (C22719 * C976 + C50879 * C984 + C22720 * C975 +
                    C50863 * C983 + C22721 * C974 + C22716 * C982) *
                       C50720) *
                      C50732 * C50606 * C250) *
                     C251 +
                 (((C22931 + C22932 + C22933) * C22722 +
                   (C22934 + C22935 + C22936) * C22717 +
                   (C22937 + C22938 + C22939) * C22723 +
                   (C22940 + C22941 + C22942) * C50720) *
                      C50732 * C50606 * C249 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50606 * C248 -
                  ((C22721 * C973 + C22716 * C981 + C22720 * C974 +
                    C50863 * C982 + C22719 * C975 + C50879 * C983) *
                       C50720 +
                   (C22721 * C969 + C22716 * C977 + C22720 * C970 +
                    C50863 * C978 + C22719 * C971 + C50879 * C979) *
                       C22723 +
                   (C22942 + C22941 + C22940) * C22717 +
                   (C22939 + C22938 + C22937) * C22722) *
                      C50732 * C50606 * C250) *
                     C50577)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50606 * C50882 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50606 * C50883 +
                  ((C22930 + C22929 + C22928) * C22722 +
                   (C22927 + C22926 + C22925) * C22717 +
                   (C23885 + C23886 + C23887) * C22723 +
                   (C23888 + C23889 + C23890) * C50720) *
                      C50732 * C50606 * C1199) *
                     C50830 +
                 (((C22931 + C22932 + C22933) * C22722 +
                   (C22934 + C22935 + C22936) * C22717 +
                   (C22937 + C22938 + C22939) * C22723 +
                   (C22940 + C22941 + C22942) * C50720) *
                      C50732 * C50606 * C50883 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50606 * C50882 -
                  ((C22721 * C973 + C22716 * C981 + C22720 * C974 +
                    C50863 * C982 + C22719 * C975 + C50879 * C983) *
                       C50720 +
                   (C22721 * C969 + C22716 * C977 + C22720 * C970 +
                    C50863 * C978 + C22719 * C971 + C50879 * C979) *
                       C22723 +
                   (C22942 + C22941 + C22940) * C22717 +
                   (C22939 + C22938 + C22937) * C22722) *
                      C50732 * C50606 * C1199) *
                     C50577)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50839 -
                  ((C23617 + C23618 + C23619) * C50720 +
                   (C23620 + C23621 + C23622) * C22723 +
                   (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                    C50863 * C426 + C22719 * C407 + C50879 * C427) *
                       C22717 +
                   (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                    C50863 * C410 + C22719 * C397 + C50879 * C411) *
                       C22722) *
                      C50732 * C50670) *
                     C50882 +
                 (((C23622 + C23621 + C23620) * C22722 +
                   (C23619 + C23618 + C23617) * C22717 +
                   (C24553 + C24554 + C24555) * C22723 +
                   (C24556 + C24557 + C24558) * C50720) *
                      C50732 * C50670 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50839) *
                     C50883 +
                 (((C22930 + C22929 + C22928) * C22722 +
                   (C22927 + C22926 + C22925) * C22717 +
                   (C23885 + C23886 + C23887) * C22723 +
                   (C23888 + C23889 + C23890) * C50720) *
                      C50732 * C50839 -
                  ((C22721 * C4010 + C22716 * C4016 + C22720 * C4011 +
                    C50863 * C4017 + C22719 * C4012 + C50879 * C4018) *
                       C50720 +
                   (C22721 * C4007 + C22716 * C4013 + C22720 * C4008 +
                    C50863 * C4014 + C22719 * C4009 + C50879 * C4015) *
                       C22723 +
                   (C24558 + C24557 + C24556) * C22717 +
                   (C24555 + C24554 + C24553) * C22722) *
                      C50732 * C50670) *
                     C1199) *
                C50571) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                   C50863 * C130 + C22721 * C124 + C22716 * C131) *
                      C22722 +
                  (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                   C50863 * C144 + C22721 * C135 + C22716 * C145) *
                      C22717 +
                  (C22919 + C22920 + C22921) * C22723 +
                  (C22922 + C22923 + C22924) * C50720) *
                     C50732 * C50606 * C964 -
                 ((C22925 + C22926 + C22927) * C50720 +
                  (C22928 + C22929 + C22930) * C22723 +
                  (C22924 + C22923 + C22922) * C22717 +
                  (C22921 + C22920 + C22919) * C22722) *
                     C50732 * C50606 * C965 +
                 ((C22930 + C22929 + C22928) * C22722 +
                  (C22927 + C22926 + C22925) * C22717 +
                  (C23885 + C23886 + C23887) * C22723 +
                  (C23888 + C23889 + C23890) * C50720) *
                     C50732 * C50606 * C966 -
                 ((C22721 * C3318 + C22716 * C3324 + C22720 * C3319 +
                   C50863 * C3325 + C22719 * C3320 + C50879 * C3326) *
                      C50720 +
                  (C22721 * C3315 + C22716 * C3321 + C22720 * C3316 +
                   C50863 * C3322 + C22719 * C3317 + C50879 * C3323) *
                      C22723 +
                  (C23890 + C23889 + C23888) * C22717 +
                  (C23887 + C23886 + C23885) * C22722) *
                     C50732 * C50606 * C967) *
                C50571) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50606 * C893 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50606 * C50642) *
                     C895 +
                 (((C22931 + C22932 + C22933) * C22722 +
                   (C22934 + C22935 + C22936) * C22717 +
                   (C22937 + C22938 + C22939) * C22723 +
                   (C22940 + C22941 + C22942) * C50720) *
                      C50732 * C50606 * C50642 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50606 * C893) *
                     C896 +
                 (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                    C50863 * C132 + C22721 * C126 + C22716 * C138) *
                       C22722 +
                   (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                    C50863 * C146 + C22721 * C137 + C22716 * C147) *
                       C22717 +
                   (C23247 + C23248 + C23249) * C22723 +
                   (C23250 + C23251 + C23252) * C50720) *
                      C50732 * C50606 * C893 -
                  ((C22721 * C281 + C22716 * C292 + C22720 * C278 +
                    C50863 * C290 + C22719 * C277 + C50879 * C289) *
                       C50720 +
                   (C22721 * C262 + C22716 * C282 + C22720 * C260 +
                    C50863 * C274 + C22719 * C259 + C50879 * C273) *
                       C22723 +
                   (C23252 + C23251 + C23250) * C22717 +
                   (C23249 + C23248 + C23247) * C22722) *
                      C50732 * C50606 * C50642) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C391 -
                  ((C23617 + C23618 + C23619) * C50720 +
                   (C23620 + C23621 + C23622) * C22723 +
                   (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                    C50863 * C426 + C22719 * C407 + C50879 * C427) *
                       C22717 +
                   (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                    C50863 * C410 + C22719 * C397 + C50879 * C411) *
                       C22722) *
                      C50732 * C392 +
                  ((C22719 * C398 + C50879 * C412 + C22720 * C399 +
                    C50863 * C413 + C22721 * C400 + C22716 * C414) *
                       C22722 +
                   (C22719 * C416 + C50879 * C428 + C22720 * C417 +
                    C50863 * C429 + C22721 * C418 + C22716 * C430) *
                       C22717 +
                   (C24049 + C24050 + C24051) * C22723 +
                   (C24052 + C24053 + C24054) * C50720) *
                      C50732 * C393) *
                     C893 +
                 (((C23622 + C23621 + C23620) * C22722 +
                   (C23619 + C23618 + C23617) * C22717 +
                   (C22719 * C1433 + C50879 * C1441 + C22720 * C1432 +
                    C50863 * C1440 + C22721 * C1431 + C22716 * C1439) *
                       C22723 +
                   (C22719 * C1437 + C50879 * C1445 + C22720 * C1436 +
                    C50863 * C1444 + C22721 * C1435 + C22716 * C1443) *
                       C50720) *
                      C50732 * C392 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C391 -
                  ((C22721 * C3494 + C22716 * C3500 + C22720 * C3495 +
                    C50863 * C3501 + C22719 * C3496 + C50879 * C3502) *
                       C50720 +
                   (C22721 * C3491 + C22716 * C3497 + C22720 * C3492 +
                    C50863 * C3498 + C22719 * C3493 + C50879 * C3499) *
                       C22723 +
                   (C24054 + C24053 + C24052) * C22717 +
                   (C24051 + C24050 + C24049) * C22722) *
                      C50732 * C393) *
                     C50642) *
                C50571) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C50839 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50670) *
                      C893 +
                  (((C23622 + C23621 + C23620) * C22722 +
                    (C23619 + C23618 + C23617) * C22717 +
                    (C22719 * C1433 + C50879 * C1441 + C22720 * C1432 +
                     C50863 * C1440 + C22721 * C1431 + C22716 * C1439) *
                        C22723 +
                    (C22719 * C1437 + C50879 * C1445 + C22720 * C1436 +
                     C50863 * C1444 + C22721 * C1435 + C22716 * C1443) *
                        C50720) *
                       C50732 * C50670 -
                   ((C22925 + C22926 + C22927) * C50720 +
                    (C22928 + C22929 + C22930) * C22723 +
                    (C22924 + C22923 + C22922) * C22717 +
                    (C22921 + C22920 + C22919) * C22722) *
                       C50732 * C50839) *
                      C50642) *
                     C50830 +
                 ((((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                     C50863 * C409 + C22721 * C394 + C22716 * C408) *
                        C22722 +
                    (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                     C50863 * C425 + C22721 * C404 + C22716 * C424) *
                        C22717 +
                    (C23623 + C23624 + C23625) * C22723 +
                    (C23626 + C23627 + C23628) * C50720) *
                       C50732 * C50670 -
                   ((C22936 + C22935 + C22934) * C50720 +
                    (C22933 + C22932 + C22931) * C22723 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50863 * C145 + C22719 * C134 + C50879 * C144) *
                        C22717 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50863 * C131 + C22719 * C123 + C50879 * C130) *
                        C22722) *
                       C50732 * C50839) *
                      C893 +
                  (((C22931 + C22932 + C22933) * C22722 +
                    (C22934 + C22935 + C22936) * C22717 +
                    (C22937 + C22938 + C22939) * C22723 +
                    (C22940 + C22941 + C22942) * C50720) *
                       C50732 * C50839 -
                   ((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                     C50863 * C1443 + C22719 * C1436 + C50879 * C1444) *
                        C50720 +
                    (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                     C50863 * C1439 + C22719 * C1432 + C50879 * C1440) *
                        C22723 +
                    (C23628 + C23627 + C23626) * C22717 +
                    (C23625 + C23624 + C23623) * C22722) *
                       C50732 * C50670) *
                      C50642) *
                     C50577)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C50606 * C893 -
                  ((C22925 + C22926 + C22927) * C50720 +
                   (C22928 + C22929 + C22930) * C22723 +
                   (C22924 + C22923 + C22922) * C22717 +
                   (C22921 + C22920 + C22919) * C22722) *
                      C50732 * C50606 * C50642) *
                     C895 +
                 (((C22931 + C22932 + C22933) * C22722 +
                   (C22934 + C22935 + C22936) * C22717 +
                   (C22937 + C22938 + C22939) * C22723 +
                   (C22940 + C22941 + C22942) * C50720) *
                      C50732 * C50606 * C50642 -
                  ((C22936 + C22935 + C22934) * C50720 +
                   (C22933 + C22932 + C22931) * C22723 +
                   (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50863 * C145 + C22719 * C134 + C50879 * C144) *
                       C22717 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50863 * C131 + C22719 * C123 + C50879 * C130) *
                       C22722) *
                      C50732 * C50606 * C893) *
                     C896 +
                 (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                    C50863 * C132 + C22721 * C126 + C22716 * C138) *
                       C22722 +
                   (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                    C50863 * C146 + C22721 * C137 + C22716 * C147) *
                       C22717 +
                   (C23247 + C23248 + C23249) * C22723 +
                   (C23250 + C23251 + C23252) * C50720) *
                      C50732 * C50606 * C893 -
                  ((C22721 * C281 + C22716 * C292 + C22720 * C278 +
                    C50863 * C290 + C22719 * C277 + C50879 * C289) *
                       C50720 +
                   (C22721 * C262 + C22716 * C282 + C22720 * C260 +
                    C50863 * C274 + C22719 * C259 + C50879 * C273) *
                       C22723 +
                   (C23252 + C23251 + C23250) * C22717 +
                   (C23249 + C23248 + C23247) * C22722) *
                      C50732 * C50606 * C50642) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                   C50863 * C130 + C22721 * C124 + C22716 * C131) *
                      C22722 +
                  (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                   C50863 * C144 + C22721 * C135 + C22716 * C145) *
                      C22717 +
                  (C22919 + C22920 + C22921) * C22723 +
                  (C22922 + C22923 + C22924) * C50720) *
                     C50732 * C50606 * C964 -
                 ((C22925 + C22926 + C22927) * C50720 +
                  (C22928 + C22929 + C22930) * C22723 +
                  (C22924 + C22923 + C22922) * C22717 +
                  (C22921 + C22920 + C22919) * C22722) *
                     C50732 * C50606 * C965 +
                 ((C22930 + C22929 + C22928) * C22722 +
                  (C22927 + C22926 + C22925) * C22717 +
                  (C23885 + C23886 + C23887) * C22723 +
                  (C23888 + C23889 + C23890) * C50720) *
                     C50732 * C50606 * C966 -
                 ((C22721 * C3318 + C22716 * C3324 + C22720 * C3319 +
                   C50863 * C3325 + C22719 * C3320 + C50879 * C3326) *
                      C50720 +
                  (C22721 * C3315 + C22716 * C3321 + C22720 * C3316 +
                   C50863 * C3322 + C22719 * C3317 + C50879 * C3323) *
                      C22723 +
                  (C23890 + C23889 + C23888) * C22717 +
                  (C23887 + C23886 + C23885) * C22722) *
                     C50732 * C50606 * C967) *
                C50571) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                      C50863 * C130 + C22721 * C124 + C22716 * C131) *
                         C22722 +
                     (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                      C50863 * C144 + C22721 * C135 + C22716 * C145) *
                         C22717 +
                     (C22919 + C22920 + C22921) * C22723 +
                     (C22922 + C22923 + C22924) * C50720) *
                        C50732 * C1544 -
                    ((C23617 + C23618 + C23619) * C50720 +
                     (C23620 + C23621 + C23622) * C22723 +
                     (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50863 * C426 + C22719 * C407 + C50879 * C427) *
                         C22717 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50863 * C410 + C22719 * C397 + C50879 * C411) *
                         C22722) *
                        C50732 * C50670) *
                       C50838 +
                   (((C23622 + C23621 + C23620) * C22722 +
                     (C23619 + C23618 + C23617) * C22717 +
                     (C24553 + C24554 + C24555) * C22723 +
                     (C24556 + C24557 + C24558) * C50720) *
                        C50732 * C50670 -
                    ((C22925 + C22926 + C22927) * C50720 +
                     (C22928 + C22929 + C22930) * C22723 +
                     (C22924 + C22923 + C22922) * C22717 +
                     (C22921 + C22920 + C22919) * C22722) *
                        C50732 * C1544) *
                       C50642) *
                      C50830 +
                  ((((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                      C50863 * C409 + C22721 * C394 + C22716 * C408) *
                         C22722 +
                     (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                      C50863 * C425 + C22721 * C404 + C22716 * C424) *
                         C22717 +
                     (C23623 + C23624 + C23625) * C22723 +
                     (C23626 + C23627 + C23628) * C50720) *
                        C50732 * C50670 -
                    ((C22936 + C22935 + C22934) * C50720 +
                     (C22933 + C22932 + C22931) * C22723 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50863 * C145 + C22719 * C134 + C50879 * C144) *
                         C22717 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50863 * C131 + C22719 * C123 + C50879 * C130) *
                         C22722) *
                        C50732 * C1544) *
                       C50838 +
                   (((C22931 + C22932 + C22933) * C22722 +
                     (C22934 + C22935 + C22936) * C22717 +
                     (C22937 + C22938 + C22939) * C22723 +
                     (C22940 + C22941 + C22942) * C50720) *
                        C50732 * C1544 -
                    ((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                      C50863 * C1443 + C22719 * C1436 + C50879 * C1444) *
                         C50720 +
                     (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                      C50863 * C1439 + C22719 * C1432 + C50879 * C1440) *
                         C22723 +
                     (C23628 + C23627 + C23626) * C22717 +
                     (C23625 + C23624 + C23623) * C22722) *
                        C50732 * C50670) *
                       C50642) *
                      C50577)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C50884 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50885 +
                   ((C22719 * C398 + C50879 * C412 + C22720 * C399 +
                     C50863 * C413 + C22721 * C400 + C22716 * C414) *
                        C22722 +
                    (C22719 * C416 + C50879 * C428 + C22720 * C417 +
                     C50863 * C429 + C22721 * C418 + C22716 * C430) *
                        C22717 +
                    (C24049 + C24050 + C24051) * C22723 +
                    (C24052 + C24053 + C24054) * C50720) *
                       C50732 * C1960) *
                      C50838 +
                  (((C23622 + C23621 + C23620) * C22722 +
                    (C23619 + C23618 + C23617) * C22717 +
                    (C24553 + C24554 + C24555) * C22723 +
                    (C24556 + C24557 + C24558) * C50720) *
                       C50732 * C50885 -
                   ((C22925 + C22926 + C22927) * C50720 +
                    (C22928 + C22929 + C22930) * C22723 +
                    (C22924 + C22923 + C22922) * C22717 +
                    (C22921 + C22920 + C22919) * C22722) *
                       C50732 * C50884 -
                   ((C22721 * C3494 + C22716 * C3500 + C22720 * C3495 +
                     C50863 * C3501 + C22719 * C3496 + C50879 * C3502) *
                        C50720 +
                    (C22721 * C3491 + C22716 * C3497 + C22720 * C3492 +
                     C50863 * C3498 + C22719 * C3493 + C50879 * C3499) *
                        C22723 +
                    (C24054 + C24053 + C24052) * C22717 +
                    (C24051 + C24050 + C24049) * C22722) *
                       C50732 * C1960) *
                      C50642) *
                 C50571) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C1544 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50670) *
                      C248 +
                  (((C23622 + C23621 + C23620) * C22722 +
                    (C23619 + C23618 + C23617) * C22717 +
                    (C24553 + C24554 + C24555) * C22723 +
                    (C24556 + C24557 + C24558) * C50720) *
                       C50732 * C50670 -
                   ((C22925 + C22926 + C22927) * C50720 +
                    (C22928 + C22929 + C22930) * C22723 +
                    (C22924 + C22923 + C22922) * C22717 +
                    (C22921 + C22920 + C22919) * C22722) *
                       C50732 * C1544) *
                      C249 +
                  (((C22930 + C22929 + C22928) * C22722 +
                    (C22927 + C22926 + C22925) * C22717 +
                    (C23885 + C23886 + C23887) * C22723 +
                    (C23888 + C23889 + C23890) * C50720) *
                       C50732 * C1544 -
                   ((C22721 * C4010 + C22716 * C4016 + C22720 * C4011 +
                     C50863 * C4017 + C22719 * C4012 + C50879 * C4018) *
                        C50720 +
                    (C22721 * C4007 + C22716 * C4013 + C22720 * C4008 +
                     C50863 * C4014 + C22719 * C4009 + C50879 * C4015) *
                        C22723 +
                    (C24558 + C24557 + C24556) * C22717 +
                    (C24555 + C24554 + C24553) * C22722) *
                       C50732 * C50670) *
                      C250) *
                 C50571) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C1544 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50670) *
                      C50590 * C895 +
                  (((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                     C50863 * C409 + C22721 * C394 + C22716 * C408) *
                        C22722 +
                    (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                     C50863 * C425 + C22721 * C404 + C22716 * C424) *
                        C22717 +
                    (C23623 + C23624 + C23625) * C22723 +
                    (C23626 + C23627 + C23628) * C50720) *
                       C50732 * C50670 -
                   ((C22936 + C22935 + C22934) * C50720 +
                    (C22933 + C22932 + C22931) * C22723 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50863 * C145 + C22719 * C134 + C50879 * C144) *
                        C22717 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50863 * C131 + C22719 * C123 + C50879 * C130) *
                        C22722) *
                       C50732 * C1544) *
                      C50590 * C896 +
                  (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                     C50863 * C132 + C22721 * C126 + C22716 * C138) *
                        C22722 +
                    (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                     C50863 * C146 + C22721 * C137 + C22716 * C147) *
                        C22717 +
                    (C23247 + C23248 + C23249) * C22723 +
                    (C23250 + C23251 + C23252) * C50720) *
                       C50732 * C1544 -
                   ((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                     C50863 * C793 + C22719 * C786 + C50879 * C792) *
                        C50720 +
                    (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                     C50863 * C783 + C22719 * C777 + C50879 * C782) *
                        C22723 +
                    (C22721 * C421 + C22716 * C432 + C22720 * C404 +
                     C50863 * C424 + C22719 * C405 + C50879 * C425) *
                        C22717 +
                    (C22721 * C402 + C22716 * C420 + C22720 * C394 +
                     C50863 * C408 + C22719 * C395 + C50879 * C409) *
                        C22722) *
                       C50732 * C50670) *
                      C50590 * C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                    C50863 * C130 + C22721 * C124 + C22716 * C131) *
                       C22722 +
                   (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                    C50863 * C144 + C22721 * C135 + C22716 * C145) *
                       C22717 +
                   (C22919 + C22920 + C22921) * C22723 +
                   (C22922 + C22923 + C22924) * C50720) *
                      C50732 * C1710 -
                  ((C23617 + C23618 + C23619) * C50720 +
                   (C23620 + C23621 + C23622) * C22723 +
                   (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                    C50863 * C426 + C22719 * C407 + C50879 * C427) *
                       C22717 +
                   (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                    C50863 * C410 + C22719 * C397 + C50879 * C411) *
                       C22722) *
                      C50732 * C1711 +
                  ((C22719 * C398 + C50879 * C412 + C22720 * C399 +
                    C50863 * C413 + C22721 * C400 + C22716 * C414) *
                       C22722 +
                   (C22719 * C416 + C50879 * C428 + C22720 * C417 +
                    C50863 * C429 + C22721 * C418 + C22716 * C430) *
                       C22717 +
                   (C24049 + C24050 + C24051) * C22723 +
                   (C24052 + C24053 + C24054) * C50720) *
                      C50732 * C1712 -
                  ((C22721 * C4430 + C22716 * C4436 + C22720 * C4431 +
                    C50863 * C4437 + C22719 * C4432 + C50879 * C4438) *
                       C50720 +
                   (C22721 * C4427 + C22716 * C4433 + C22720 * C4428 +
                    C50863 * C4434 + C22719 * C4429 + C50879 * C4435) *
                       C22723 +
                   (C22721 * C1719 + C22716 * C1727 + C22720 * C1720 +
                    C50863 * C1728 + C22719 * C1721 + C50879 * C1729) *
                       C22717 +
                   (C22721 * C1715 + C22716 * C1723 + C22720 * C1716 +
                    C50863 * C1724 + C22719 * C1717 + C50879 * C1725) *
                       C22722) *
                      C50732 * C1713) *
                 C50590 * C50571) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C50884 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50885 +
                   ((C22719 * C398 + C50879 * C412 + C22720 * C399 +
                     C50863 * C413 + C22721 * C400 + C22716 * C414) *
                        C22722 +
                    (C22719 * C416 + C50879 * C428 + C22720 * C417 +
                     C50863 * C429 + C22721 * C418 + C22716 * C430) *
                        C22717 +
                    (C24049 + C24050 + C24051) * C22723 +
                    (C24052 + C24053 + C24054) * C50720) *
                       C50732 * C1960) *
                      C50590 * C50830 +
                  (((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                     C50863 * C409 + C22721 * C394 + C22716 * C408) *
                        C22722 +
                    (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                     C50863 * C425 + C22721 * C404 + C22716 * C424) *
                        C22717 +
                    (C23623 + C23624 + C23625) * C22723 +
                    (C23626 + C23627 + C23628) * C50720) *
                       C50732 * C50885 -
                   ((C22936 + C22935 + C22934) * C50720 +
                    (C22933 + C22932 + C22931) * C22723 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50863 * C145 + C22719 * C134 + C50879 * C144) *
                        C22717 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50863 * C131 + C22719 * C123 + C50879 * C130) *
                        C22722) *
                       C50732 * C50884 -
                   ((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                     C50863 * C1096 + C22719 * C1089 + C50879 * C1097) *
                        C50720 +
                    (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                     C50863 * C1092 + C22719 * C1085 + C50879 * C1093) *
                        C22723 +
                    (C22721 * C419 + C22716 * C431 + C22720 * C418 +
                     C50863 * C430 + C22719 * C417 + C50879 * C429) *
                        C22717 +
                    (C22721 * C401 + C22716 * C415 + C22720 * C400 +
                     C50863 * C414 + C22719 * C399 + C50879 * C413) *
                        C22722) *
                       C50732 * C1960) *
                      C50590 * C50577)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C1544 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50670) *
                      C50590 * C895 +
                  (((C22719 * C396 + C50879 * C410 + C22720 * C395 +
                     C50863 * C409 + C22721 * C394 + C22716 * C408) *
                        C22722 +
                    (C22719 * C406 + C50879 * C426 + C22720 * C405 +
                     C50863 * C425 + C22721 * C404 + C22716 * C424) *
                        C22717 +
                    (C23623 + C23624 + C23625) * C22723 +
                    (C23626 + C23627 + C23628) * C50720) *
                       C50732 * C50670 -
                   ((C22936 + C22935 + C22934) * C50720 +
                    (C22933 + C22932 + C22931) * C22723 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50863 * C145 + C22719 * C134 + C50879 * C144) *
                        C22717 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50863 * C131 + C22719 * C123 + C50879 * C130) *
                        C22722) *
                       C50732 * C1544) *
                      C50590 * C896 +
                  (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                     C50863 * C132 + C22721 * C126 + C22716 * C138) *
                        C22722 +
                    (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                     C50863 * C146 + C22721 * C137 + C22716 * C147) *
                        C22717 +
                    (C23247 + C23248 + C23249) * C22723 +
                    (C23250 + C23251 + C23252) * C50720) *
                       C50732 * C1544 -
                   ((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                     C50863 * C793 + C22719 * C786 + C50879 * C792) *
                        C50720 +
                    (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                     C50863 * C783 + C22719 * C777 + C50879 * C782) *
                        C22723 +
                    (C22721 * C421 + C22716 * C432 + C22720 * C404 +
                     C50863 * C424 + C22719 * C405 + C50879 * C425) *
                        C22717 +
                    (C22721 * C402 + C22716 * C420 + C22720 * C394 +
                     C50863 * C408 + C22719 * C395 + C50879 * C409) *
                        C22722) *
                       C50732 * C50670) *
                      C50590 * C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                     C50863 * C130 + C22721 * C124 + C22716 * C131) *
                        C22722 +
                    (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                     C50863 * C144 + C22721 * C135 + C22716 * C145) *
                        C22717 +
                    (C22919 + C22920 + C22921) * C22723 +
                    (C22922 + C22923 + C22924) * C50720) *
                       C50732 * C1544 -
                   ((C23617 + C23618 + C23619) * C50720 +
                    (C23620 + C23621 + C23622) * C22723 +
                    (C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50863 * C426 + C22719 * C407 + C50879 * C427) *
                        C22717 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50863 * C410 + C22719 * C397 + C50879 * C411) *
                        C22722) *
                       C50732 * C50670) *
                      C248 +
                  (((C23622 + C23621 + C23620) * C22722 +
                    (C23619 + C23618 + C23617) * C22717 +
                    (C24553 + C24554 + C24555) * C22723 +
                    (C24556 + C24557 + C24558) * C50720) *
                       C50732 * C50670 -
                   ((C22925 + C22926 + C22927) * C50720 +
                    (C22928 + C22929 + C22930) * C22723 +
                    (C22924 + C22923 + C22922) * C22717 +
                    (C22921 + C22920 + C22919) * C22722) *
                       C50732 * C1544) *
                      C249 +
                  (((C22930 + C22929 + C22928) * C22722 +
                    (C22927 + C22926 + C22925) * C22717 +
                    (C23885 + C23886 + C23887) * C22723 +
                    (C23888 + C23889 + C23890) * C50720) *
                       C50732 * C1544 -
                   ((C22721 * C4010 + C22716 * C4016 + C22720 * C4011 +
                     C50863 * C4017 + C22719 * C4012 + C50879 * C4018) *
                        C50720 +
                    (C22721 * C4007 + C22716 * C4013 + C22720 * C4008 +
                     C50863 * C4014 + C22719 * C4009 + C50879 * C4015) *
                        C22723 +
                    (C24558 + C24557 + C24556) * C22717 +
                    (C24555 + C24554 + C24553) * C22722) *
                       C50732 * C50670) *
                      C250) *
                 C50571) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50606 * C50838 -
           ((C25745 + C25746) * C25536 + (C25747 + C25748) * C25541 +
            (C25744 + C25743) * C50875 + (C25742 + C25741) * C25540 +
            (C25740 + C25739) * C50886 + (C25738 + C25737) * C25539) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
            (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
            (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
               C50732 * C50606 * C50642 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C25539 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50886 +
            (C26073 + C26074) * C25540 + (C26075 + C26076) * C50875 +
            (C26077 + C26078) * C25541 + (C26079 + C26080) * C25536) *
               C50732 * C50606 * C50838 -
           ((C25538 * C973 + C50545 * C981 + C25537 * C974 + C25532 * C982) *
                C25536 +
            (C25538 * C969 + C50545 * C977 + C25537 * C970 + C25532 * C978) *
                C25541 +
            (C26080 + C26079) * C50875 + (C26078 + C26077) * C25540 +
            (C26076 + C26075) * C50886 + (C26074 + C26073) * C25539) *
               C50732 * C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C25539 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50886 +
             (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
             C25761 * C25541 + C25762 * C25536) *
                C50732 * C50839 -
            ((C26453 + C26454) * C25536 + (C26455 + C26456) * C25541 +
             (C26457 + C26458) * C50875 + (C26459 + C26460) * C25540 +
             (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                 C50886 +
             (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                 C25539) *
                C50732 * C50670) *
               C50838 +
           (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
             (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
             (C25537 * C4009 + C25532 * C4015 + C25538 * C4008 +
              C50545 * C4014) *
                 C25541 +
             (C25537 * C4012 + C25532 * C4018 + C25538 * C4011 +
              C50545 * C4017) *
                 C25536) *
                C50732 * C50670 -
            ((C25745 + C25746) * C25536 + (C25747 + C25748) * C25541 +
             (C25744 + C25743) * C50875 + (C25742 + C25741) * C25540 +
             (C25740 + C25739) * C50886 + (C25738 + C25737) * C25539) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                 C25539 +
             (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                 C50886 +
             (C26461 + C26462) * C25540 + (C26463 + C26464) * C50875 +
             (C26465 + C26466) * C25541 + (C26467 + C26468) * C25536) *
                C50732 * C50670 -
            (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
             (C25750 + C25749) * C25540 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50886 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C25539) *
                C50732 * C50839) *
               C50838 +
           (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
             (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
             (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
                C50732 * C50839 -
            ((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C25536 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C25541 +
             (C26468 + C26467) * C50875 + (C26466 + C26465) * C25540 +
             (C26464 + C26463) * C50886 + (C26462 + C26461) * C25539) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50606 * C248 -
           ((C25745 + C25746) * C25536 + (C25747 + C25748) * C25541 +
            (C25744 + C25743) * C50875 + (C25742 + C25741) * C25540 +
            (C25740 + C25739) * C50886 + (C25738 + C25737) * C25539) *
               C50732 * C50606 * C249 +
           (C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
            (C25746 + C25745) * C50875 +
            (C25537 * C3317 + C25532 * C3323 + C25538 * C3316 +
             C50545 * C3322) *
                C25541 +
            (C25537 * C3320 + C25532 * C3326 + C25538 * C3319 +
             C50545 * C3325) *
                C25536) *
               C50732 * C50606 * C250) *
              C251 +
          (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
            (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
            (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
               C50732 * C50606 * C249 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50606 * C248 -
           ((C25538 * C3318 + C50545 * C3324 + C25537 * C3319 +
             C25532 * C3325) *
                C25536 +
            (C25538 * C3315 + C50545 * C3321 + C25537 * C3316 +
             C25532 * C3322) *
                C25541 +
            (C25760 + C25759) * C50875 + (C25758 + C25757) * C25540 +
            C25763 * C50886 + C25764 * C25539) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
               C25539 +
           (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
               C50886 +
           (C25537 * C256 + C25532 * C270 + C25538 * C255 + C50545 * C269) *
               C25540 +
           (C25537 * C266 + C25532 * C286 + C25538 * C265 + C50545 * C285) *
               C50875 +
           (C25537 * C257 + C25532 * C271 + C25538 * C258 + C50545 * C272) *
               C25541 +
           (C25537 * C275 + C25532 * C287 + C25538 * C276 + C50545 * C288) *
               C25536) *
              C50732 * C50606 * C50590 * C113 -
          ((C25538 * C277 + C50545 * C289 + C25537 * C276 + C25532 * C288) *
               C25536 +
           (C25538 * C259 + C50545 * C273 + C25537 * C258 + C25532 * C272) *
               C25541 +
           (C25538 * C264 + C50545 * C284 + C25537 * C265 + C25532 * C285) *
               C50875 +
           (C25538 * C254 + C50545 * C268 + C25537 * C255 + C25532 * C269) *
               C25540 +
           (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
               C50886 +
           (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
               C25539) *
              C50732 * C50606 * C50590 * C114 +
          ((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
               C25539 +
           (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
               C50886 +
           (C25537 * C254 + C25532 * C268 + C25538 * C253 + C50545 * C267) *
               C25540 +
           (C25537 * C264 + C25532 * C284 + C25538 * C263 + C50545 * C283) *
               C50875 +
           (C25537 * C259 + C25532 * C273 + C25538 * C260 + C50545 * C274) *
               C25541 +
           (C25537 * C277 + C25532 * C289 + C25538 * C278 + C50545 * C290) *
               C25536) *
              C50732 * C50606 * C50590 * C115 -
          ((C25538 * C281 + C50545 * C292 + C25537 * C278 + C25532 * C290) *
               C25536 +
           (C25538 * C262 + C50545 * C282 + C25537 * C260 + C25532 * C274) *
               C25541 +
           (C25538 * C280 + C50545 * C291 + C25537 * C263 + C25532 * C283) *
               C50875 +
           (C25538 * C261 + C50545 * C279 + C25537 * C253 + C25532 * C267) *
               C25540 +
           (C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
               C50886 +
           (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
               C25539) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C391 -
           ((C25538 * C1436 + C50545 * C1444 + C25537 * C1437 +
             C25532 * C1445) *
                C25536 +
            (C25538 * C1432 + C50545 * C1440 + C25537 * C1433 +
             C25532 * C1441) *
                C25541 +
            (C25538 * C785 + C50545 * C791 + C25537 * C784 + C25532 * C790) *
                C50875 +
            (C25538 * C776 + C50545 * C781 + C25537 * C775 + C25532 * C780) *
                C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C392 +
           ((C25537 * C398 + C25532 * C412 + C25538 * C399 + C50545 * C413) *
                C25539 +
            (C25537 * C416 + C25532 * C428 + C25538 * C417 + C50545 * C429) *
                C50886 +
            (C25537 * C1086 + C25532 * C1094 + C25538 * C1085 +
             C50545 * C1093) *
                C25540 +
            (C25537 * C1090 + C25532 * C1098 + C25538 * C1089 +
             C50545 * C1097) *
                C50875 +
            (C25537 * C3493 + C25532 * C3499 + C25538 * C3492 +
             C50545 * C3498) *
                C25541 +
            (C25537 * C3496 + C25532 * C3502 + C25538 * C3495 +
             C50545 * C3501) *
                C25536) *
               C50732 * C393) *
              C50590 * C251 +
          (((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                C25539 +
            (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                C50886 +
            (C25537 * C776 + C25532 * C781 + C25538 * C777 + C50545 * C782) *
                C25540 +
            (C25537 * C785 + C25532 * C791 + C25538 * C786 + C50545 * C792) *
                C50875 +
            (C25537 * C1432 + C25532 * C1440 + C25538 * C1431 +
             C50545 * C1439) *
                C25541 +
            (C25537 * C1436 + C25532 * C1444 + C25538 * C1435 +
             C50545 * C1443) *
                C25536) *
               C50732 * C392 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C391 -
           ((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
             C25532 * C3501) *
                C25536 +
            (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
             C25532 * C3498) *
                C25541 +
            (C25538 * C1088 + C50545 * C1096 + C25537 * C1089 +
             C25532 * C1097) *
                C50875 +
            (C25538 * C1084 + C50545 * C1092 + C25537 * C1085 +
             C25532 * C1093) *
                C25540 +
            (C25538 * C418 + C50545 * C430 + C25537 * C417 + C25532 * C429) *
                C50886 +
            (C25538 * C400 + C50545 * C414 + C25537 * C399 + C25532 * C413) *
                C25539) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50839 -
           ((C25538 * C1436 + C50545 * C1444 + C25537 * C1437 +
             C25532 * C1445) *
                C25536 +
            (C25538 * C1432 + C50545 * C1440 + C25537 * C1433 +
             C25532 * C1441) *
                C25541 +
            (C25538 * C785 + C50545 * C791 + C25537 * C784 + C25532 * C790) *
                C50875 +
            (C25538 * C776 + C50545 * C781 + C25537 * C775 + C25532 * C780) *
                C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                C25539 +
            (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                C50886 +
            (C25537 * C776 + C25532 * C781 + C25538 * C777 + C50545 * C782) *
                C25540 +
            (C25537 * C785 + C25532 * C791 + C25538 * C786 + C50545 * C792) *
                C50875 +
            (C25537 * C1432 + C25532 * C1440 + C25538 * C1431 +
             C50545 * C1439) *
                C25541 +
            (C25537 * C1436 + C25532 * C1444 + C25538 * C1435 +
             C50545 * C1443) *
                C25536) *
               C50732 * C50670 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C25539 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50886 +
            (C26073 + C26074) * C25540 + (C26075 + C26076) * C50875 +
            (C26077 + C26078) * C25541 + (C26079 + C26080) * C25536) *
               C50732 * C50839 -
           ((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
             C25532 * C1443) *
                C25536 +
            (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
             C25532 * C1439) *
                C25541 +
            (C25538 * C787 + C50545 * C793 + C25537 * C786 + C25532 * C792) *
                C50875 +
            (C25538 * C778 + C50545 * C783 + C25537 * C777 + C25532 * C782) *
                C25540 +
            (C25538 * C404 + C50545 * C424 + C25537 * C405 + C25532 * C425) *
                C50886 +
            (C25538 * C394 + C50545 * C408 + C25537 * C395 + C25532 * C409) *
                C25539) *
               C50732 * C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
               C25539 +
           (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
               C50886 +
           (C25537 * C256 + C25532 * C270 + C25538 * C255 + C50545 * C269) *
               C25540 +
           (C25537 * C266 + C25532 * C286 + C25538 * C265 + C50545 * C285) *
               C50875 +
           (C25537 * C257 + C25532 * C271 + C25538 * C258 + C50545 * C272) *
               C25541 +
           (C25537 * C275 + C25532 * C287 + C25538 * C276 + C50545 * C288) *
               C25536) *
              C50732 * C50606 * C50590 * C113 -
          ((C25538 * C277 + C50545 * C289 + C25537 * C276 + C25532 * C288) *
               C25536 +
           (C25538 * C259 + C50545 * C273 + C25537 * C258 + C25532 * C272) *
               C25541 +
           (C25538 * C264 + C50545 * C284 + C25537 * C265 + C25532 * C285) *
               C50875 +
           (C25538 * C254 + C50545 * C268 + C25537 * C255 + C25532 * C269) *
               C25540 +
           (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
               C50886 +
           (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
               C25539) *
              C50732 * C50606 * C50590 * C114 +
          ((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
               C25539 +
           (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
               C50886 +
           (C25537 * C254 + C25532 * C268 + C25538 * C253 + C50545 * C267) *
               C25540 +
           (C25537 * C264 + C25532 * C284 + C25538 * C263 + C50545 * C283) *
               C50875 +
           (C25537 * C259 + C25532 * C273 + C25538 * C260 + C50545 * C274) *
               C25541 +
           (C25537 * C277 + C25532 * C289 + C25538 * C278 + C50545 * C290) *
               C25536) *
              C50732 * C50606 * C50590 * C115 -
          ((C25538 * C281 + C50545 * C292 + C25537 * C278 + C25532 * C290) *
               C25536 +
           (C25538 * C262 + C50545 * C282 + C25537 * C260 + C25532 * C274) *
               C25541 +
           (C25538 * C280 + C50545 * C291 + C25537 * C263 + C25532 * C283) *
               C50875 +
           (C25538 * C261 + C50545 * C279 + C25537 * C253 + C25532 * C267) *
               C25540 +
           (C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
               C50886 +
           (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
               C25539) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50606 * C248 -
           ((C25745 + C25746) * C25536 + (C25747 + C25748) * C25541 +
            (C25744 + C25743) * C50875 + (C25742 + C25741) * C25540 +
            (C25740 + C25739) * C50886 + (C25738 + C25737) * C25539) *
               C50732 * C50606 * C249 +
           (C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
            (C25746 + C25745) * C50875 +
            (C25537 * C3317 + C25532 * C3323 + C25538 * C3316 +
             C50545 * C3322) *
                C25541 +
            (C25537 * C3320 + C25532 * C3326 + C25538 * C3319 +
             C50545 * C3325) *
                C25536) *
               C50732 * C50606 * C250) *
              C251 +
          (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
            (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
            (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
               C50732 * C50606 * C249 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50606 * C248 -
           ((C25538 * C3318 + C50545 * C3324 + C25537 * C3319 +
             C25532 * C3325) *
                C25536 +
            (C25538 * C3315 + C50545 * C3321 + C25537 * C3316 +
             C25532 * C3322) *
                C25541 +
            (C25760 + C25759) * C50875 + (C25758 + C25757) * C25540 +
            C25763 * C50886 + C25764 * C25539) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50606 * C50882 -
           (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
            (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
            (C25738 + C25737) * C25539) *
               C50732 * C50606 * C50883 +
           (C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
            (C25746 + C25745) * C50875 + (C26723 + C26724) * C25541 +
            (C26725 + C26726) * C25536) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
            (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
            (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
               C50732 * C50606 * C50883 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50606 * C50882 -
           ((C25538 * C3318 + C50545 * C3324 + C25537 * C3319 +
             C25532 * C3325) *
                C25536 +
            (C25538 * C3315 + C50545 * C3321 + C25537 * C3316 +
             C25532 * C3322) *
                C25541 +
            (C25760 + C25759) * C50875 + (C25758 + C25757) * C25540 +
            C25763 * C50886 + C25764 * C25539) *
               C50732 * C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50839 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50670) *
              C50882 +
          (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
            (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
            (C27393 + C27394) * C25541 + (C27395 + C27396) * C25536) *
               C50732 * C50670 -
           (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
            (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
            (C25738 + C25737) * C25539) *
               C50732 * C50839) *
              C50883 +
          ((C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
            (C25746 + C25745) * C50875 + (C26723 + C26724) * C25541 +
            (C26725 + C26726) * C25536) *
               C50732 * C50839 -
           ((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C25536 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C25541 +
            (C27396 + C27395) * C50875 + (C27394 + C27393) * C25540 +
            C27383 * C50886 + C27384 * C25539) *
               C50732 * C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
               C25539 +
           (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
               C50886 +
           (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
           C25761 * C25541 + C25762 * C25536) *
              C50732 * C50606 * C964 -
          (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
           (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
           (C25738 + C25737) * C25539) *
              C50732 * C50606 * C965 +
          (C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
           (C25746 + C25745) * C50875 + (C26723 + C26724) * C25541 +
           (C26725 + C26726) * C25536) *
              C50732 * C50606 * C966 -
          ((C25538 * C8955 + C50545 * C8959 + C25537 * C8956 + C25532 * C8960) *
               C25536 +
           (C25538 * C8953 + C50545 * C8957 + C25537 * C8954 + C25532 * C8958) *
               C25541 +
           (C26726 + C26725) * C50875 + (C26724 + C26723) * C25540 +
           C26713 * C50886 + C26714 * C25539) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50606 * C893 -
           ((C25745 + C25746) * C25536 + (C25747 + C25748) * C25541 +
            (C25744 + C25743) * C50875 + (C25742 + C25741) * C25540 +
            (C25740 + C25739) * C50886 + (C25738 + C25737) * C25539) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
            (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
            (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
               C50732 * C50606 * C50642 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50606 * C893) *
              C896 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C25539 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50886 +
            (C26073 + C26074) * C25540 + (C26075 + C26076) * C50875 +
            (C26077 + C26078) * C25541 + (C26079 + C26080) * C25536) *
               C50732 * C50606 * C893 -
           ((C25538 * C973 + C50545 * C981 + C25537 * C974 + C25532 * C982) *
                C25536 +
            (C25538 * C969 + C50545 * C977 + C25537 * C970 + C25532 * C978) *
                C25541 +
            (C26080 + C26079) * C50875 + (C26078 + C26077) * C25540 +
            (C26076 + C26075) * C50886 + (C26074 + C26073) * C25539) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C391 -
           ((C26453 + C26454) * C25536 + (C26455 + C26456) * C25541 +
            (C26457 + C26458) * C50875 + (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C392 +
           ((C25537 * C398 + C25532 * C412 + C25538 * C399 + C50545 * C413) *
                C25539 +
            (C25537 * C416 + C25532 * C428 + C25538 * C417 + C50545 * C429) *
                C50886 +
            (C26889 + C26890) * C25540 + (C26891 + C26892) * C50875 +
            (C26893 + C26894) * C25541 + (C26895 + C26896) * C25536) *
               C50732 * C393) *
              C893 +
          (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
            (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
            (C25537 * C4009 + C25532 * C4015 + C25538 * C4008 +
             C50545 * C4014) *
                C25541 +
            (C25537 * C4012 + C25532 * C4018 + C25538 * C4011 +
             C50545 * C4017) *
                C25536) *
               C50732 * C392 -
           (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
            (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
            (C25738 + C25737) * C25539) *
               C50732 * C391 -
           ((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
             C25532 * C9128) *
                C25536 +
            (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
             C25532 * C9126) *
                C25541 +
            (C26896 + C26895) * C50875 + (C26894 + C26893) * C25540 +
            (C26892 + C26891) * C50886 + (C26890 + C26889) * C25539) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C25539 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50886 +
             (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
             C25761 * C25541 + C25762 * C25536) *
                C50732 * C50839 -
            ((C26453 + C26454) * C25536 + (C26455 + C26456) * C25541 +
             (C26457 + C26458) * C50875 + (C26459 + C26460) * C25540 +
             (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                 C50886 +
             (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                 C25539) *
                C50732 * C50670) *
               C893 +
           (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
             (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
             (C25537 * C4009 + C25532 * C4015 + C25538 * C4008 +
              C50545 * C4014) *
                 C25541 +
             (C25537 * C4012 + C25532 * C4018 + C25538 * C4011 +
              C50545 * C4017) *
                 C25536) *
                C50732 * C50670 -
            (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
             (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
             (C25738 + C25737) * C25539) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                 C25539 +
             (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                 C50886 +
             (C26461 + C26462) * C25540 + (C26463 + C26464) * C50875 +
             (C26465 + C26466) * C25541 + (C26467 + C26468) * C25536) *
                C50732 * C50670 -
            (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
             (C25750 + C25749) * C25540 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50886 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C25539) *
                C50732 * C50839) *
               C893 +
           (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
             (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
             (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
                C50732 * C50839 -
            ((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C25536 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C25541 +
             (C26468 + C26467) * C50875 + (C26466 + C26465) * C25540 +
             (C26464 + C26463) * C50886 + (C26462 + C26461) * C25539) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50606 * C893 -
           ((C25745 + C25746) * C25536 + (C25747 + C25748) * C25541 +
            (C25744 + C25743) * C50875 + (C25742 + C25741) * C25540 +
            (C25740 + C25739) * C50886 + (C25738 + C25737) * C25539) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
            (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
            (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
               C50732 * C50606 * C50642 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50606 * C893) *
              C896 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C25539 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50886 +
            (C26073 + C26074) * C25540 + (C26075 + C26076) * C50875 +
            (C26077 + C26078) * C25541 + (C26079 + C26080) * C25536) *
               C50732 * C50606 * C893 -
           ((C25538 * C973 + C50545 * C981 + C25537 * C974 + C25532 * C982) *
                C25536 +
            (C25538 * C969 + C50545 * C977 + C25537 * C970 + C25532 * C978) *
                C25541 +
            (C26080 + C26079) * C50875 + (C26078 + C26077) * C25540 +
            (C26076 + C26075) * C50886 + (C26074 + C26073) * C25539) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
               C25539 +
           (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
               C50886 +
           (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
           C25761 * C25541 + C25762 * C25536) *
              C50732 * C50606 * C964 -
          (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
           (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
           (C25738 + C25737) * C25539) *
              C50732 * C50606 * C965 +
          (C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
           (C25746 + C25745) * C50875 + (C26723 + C26724) * C25541 +
           (C26725 + C26726) * C25536) *
              C50732 * C50606 * C966 -
          ((C25538 * C8955 + C50545 * C8959 + C25537 * C8956 + C25532 * C8960) *
               C25536 +
           (C25538 * C8953 + C50545 * C8957 + C25537 * C8954 + C25532 * C8958) *
               C25541 +
           (C26726 + C26725) * C50875 + (C26724 + C26723) * C25540 +
           C26713 * C50886 + C26714 * C25539) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C25539 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50886 +
             (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
             C25761 * C25541 + C25762 * C25536) *
                C50732 * C1544 -
            (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
             (C26459 + C26460) * C25540 +
             (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                 C50886 +
             (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                 C25539) *
                C50732 * C50670) *
               C50838 +
           (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
             (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
             (C27393 + C27394) * C25541 + (C27395 + C27396) * C25536) *
                C50732 * C50670 -
            (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
             (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
             (C25738 + C25737) * C25539) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                 C25539 +
             (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                 C50886 +
             (C26461 + C26462) * C25540 + (C26463 + C26464) * C50875 +
             (C26465 + C26466) * C25541 + (C26467 + C26468) * C25536) *
                C50732 * C50670 -
            (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
             (C25750 + C25749) * C25540 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50886 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C25539) *
                C50732 * C1544) *
               C50838 +
           (((C25749 + C25750) * C25539 + (C25751 + C25752) * C50886 +
             (C25753 + C25754) * C25540 + (C25755 + C25756) * C50875 +
             (C25757 + C25758) * C25541 + (C25759 + C25760) * C25536) *
                C50732 * C1544 -
            ((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C25536 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C25541 +
             (C26468 + C26467) * C50875 + (C26466 + C26465) * C25540 +
             (C26464 + C26463) * C50886 + (C26462 + C26461) * C25539) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50884 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50885 +
           ((C25537 * C398 + C25532 * C412 + C25538 * C399 + C50545 * C413) *
                C25539 +
            (C25537 * C416 + C25532 * C428 + C25538 * C417 + C50545 * C429) *
                C50886 +
            (C26889 + C26890) * C25540 + (C26891 + C26892) * C50875 +
            (C26893 + C26894) * C25541 + (C26895 + C26896) * C25536) *
               C50732 * C1960) *
              C50838 +
          (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
            (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
            (C27393 + C27394) * C25541 + (C27395 + C27396) * C25536) *
               C50732 * C50885 -
           (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
            (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
            (C25738 + C25737) * C25539) *
               C50732 * C50884 -
           ((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
             C25532 * C9128) *
                C25536 +
            (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
             C25532 * C9126) *
                C25541 +
            (C26896 + C26895) * C50875 + (C26894 + C26893) * C25540 +
            (C26892 + C26891) * C50886 + (C26890 + C26889) * C25539) *
               C50732 * C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C1544 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50670) *
              C248 +
          (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
            (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
            (C27393 + C27394) * C25541 + (C27395 + C27396) * C25536) *
               C50732 * C50670 -
           (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
            (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
            (C25738 + C25737) * C25539) *
               C50732 * C1544) *
              C249 +
          ((C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
            (C25746 + C25745) * C50875 + (C26723 + C26724) * C25541 +
            (C26725 + C26726) * C25536) *
               C50732 * C1544 -
           ((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C25536 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C25541 +
            (C27396 + C27395) * C50875 + (C27394 + C27393) * C25540 +
            C27383 * C50886 + C27384 * C25539) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C1544 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                C25539 +
            (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                C50886 +
            (C26461 + C26462) * C25540 + (C26463 + C26464) * C50875 +
            (C26465 + C26466) * C25541 + (C26467 + C26468) * C25536) *
               C50732 * C50670 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C25539 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50886 +
            (C26073 + C26074) * C25540 + (C26075 + C26076) * C50875 +
            (C26077 + C26078) * C25541 + (C26079 + C26080) * C25536) *
               C50732 * C1544 -
           ((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
             C25532 * C1443) *
                C25536 +
            (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
             C25532 * C1439) *
                C25541 +
            (C25538 * C787 + C50545 * C793 + C25537 * C786 + C25532 * C792) *
                C50875 +
            (C25538 * C778 + C50545 * C783 + C25537 * C777 + C25532 * C782) *
                C25540 +
            (C25538 * C404 + C50545 * C424 + C25537 * C405 + C25532 * C425) *
                C50886 +
            (C25538 * C394 + C50545 * C408 + C25537 * C395 + C25532 * C409) *
                C25539) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
               C25539 +
           (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
               C50886 +
           (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
           C25761 * C25541 + C25762 * C25536) *
              C50732 * C1710 -
          (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
           (C26459 + C26460) * C25540 +
           (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
               C50886 +
           (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
               C25539) *
              C50732 * C1711 +
          ((C25537 * C398 + C25532 * C412 + C25538 * C399 + C50545 * C413) *
               C25539 +
           (C25537 * C416 + C25532 * C428 + C25538 * C417 + C50545 * C429) *
               C50886 +
           (C26889 + C26890) * C25540 + (C26891 + C26892) * C50875 +
           (C26893 + C26894) * C25541 + (C26895 + C26896) * C25536) *
              C50732 * C1712 -
          ((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
            C25532 * C10058) *
               C25536 +
           (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
            C25532 * C10056) *
               C25541 +
           (C25538 * C4431 + C50545 * C4437 + C25537 * C4432 + C25532 * C4438) *
               C50875 +
           (C25538 * C4428 + C50545 * C4434 + C25537 * C4429 + C25532 * C4435) *
               C25540 +
           (C25538 * C1720 + C50545 * C1728 + C25537 * C1721 + C25532 * C1729) *
               C50886 +
           (C25538 * C1716 + C50545 * C1724 + C25537 * C1717 + C25532 * C1725) *
               C25539) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C50884 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50885 +
           ((C25537 * C398 + C25532 * C412 + C25538 * C399 + C50545 * C413) *
                C25539 +
            (C25537 * C416 + C25532 * C428 + C25538 * C417 + C50545 * C429) *
                C50886 +
            (C26889 + C26890) * C25540 + (C26891 + C26892) * C50875 +
            (C26893 + C26894) * C25541 + (C26895 + C26896) * C25536) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                C25539 +
            (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                C50886 +
            (C26461 + C26462) * C25540 + (C26463 + C26464) * C50875 +
            (C26465 + C26466) * C25541 + (C26467 + C26468) * C25536) *
               C50732 * C50885 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C50884 -
           ((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
             C25532 * C3501) *
                C25536 +
            (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
             C25532 * C3498) *
                C25541 +
            (C25538 * C1088 + C50545 * C1096 + C25537 * C1089 +
             C25532 * C1097) *
                C50875 +
            (C25538 * C1084 + C50545 * C1092 + C25537 * C1085 +
             C25532 * C1093) *
                C25540 +
            (C25538 * C418 + C50545 * C430 + C25537 * C417 + C25532 * C429) *
                C50886 +
            (C25538 * C400 + C50545 * C414 + C25537 * C399 + C25532 * C413) *
                C25539) *
               C50732 * C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C1544 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C25537 * C396 + C25532 * C410 + C25538 * C395 + C50545 * C409) *
                C25539 +
            (C25537 * C406 + C25532 * C426 + C25538 * C405 + C50545 * C425) *
                C50886 +
            (C26461 + C26462) * C25540 + (C26463 + C26464) * C50875 +
            (C26465 + C26466) * C25541 + (C26467 + C26468) * C25536) *
               C50732 * C50670 -
           (C25763 * C25536 + C25764 * C25541 + (C25752 + C25751) * C50875 +
            (C25750 + C25749) * C25540 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50886 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C25539) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C25539 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50886 +
            (C26073 + C26074) * C25540 + (C26075 + C26076) * C50875 +
            (C26077 + C26078) * C25541 + (C26079 + C26080) * C25536) *
               C50732 * C1544 -
           ((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
             C25532 * C1443) *
                C25536 +
            (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
             C25532 * C1439) *
                C25541 +
            (C25538 * C787 + C50545 * C793 + C25537 * C786 + C25532 * C792) *
                C50875 +
            (C25538 * C778 + C50545 * C783 + C25537 * C777 + C25532 * C782) *
                C25540 +
            (C25538 * C404 + C50545 * C424 + C25537 * C405 + C25532 * C425) *
                C50886 +
            (C25538 * C394 + C50545 * C408 + C25537 * C395 + C25532 * C409) *
                C25539) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C25539 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50886 +
            (C25737 + C25738) * C25540 + (C25739 + C25740) * C50875 +
            C25761 * C25541 + C25762 * C25536) *
               C50732 * C1544 -
           (C27383 * C25536 + C27384 * C25541 + (C26457 + C26458) * C50875 +
            (C26459 + C26460) * C25540 +
            (C25538 * C406 + C50545 * C426 + C25537 * C407 + C25532 * C427) *
                C50886 +
            (C25538 * C396 + C50545 * C410 + C25537 * C397 + C25532 * C411) *
                C25539) *
               C50732 * C50670) *
              C248 +
          (((C26460 + C26459) * C25539 + (C26458 + C26457) * C50886 +
            (C26456 + C26455) * C25540 + (C26454 + C26453) * C50875 +
            (C27393 + C27394) * C25541 + (C27395 + C27396) * C25536) *
               C50732 * C50670 -
           (C26713 * C25536 + C26714 * C25541 + (C25744 + C25743) * C50875 +
            (C25742 + C25741) * C25540 + (C25740 + C25739) * C50886 +
            (C25738 + C25737) * C25539) *
               C50732 * C1544) *
              C249 +
          ((C25761 * C25539 + C25762 * C50886 + (C25748 + C25747) * C25540 +
            (C25746 + C25745) * C50875 + (C26723 + C26724) * C25541 +
            (C26725 + C26726) * C25536) *
               C50732 * C1544 -
           ((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C25536 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C25541 +
            (C27396 + C27395) * C50875 + (C27394 + C27393) * C25540 +
            C27383 * C50886 + C27384 * C25539) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
                C50744) *
               C50606 * C50838 -
           ((C27383 * C50720 + C27384 * C22723 + (C26457 + C26458) * C22717 +
             (C26459 + C26460) * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50606 * C50642) *
              C50880 +
          ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
             (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                C50850 +
            ((C26461 + C26462) * C22722 + (C26463 + C26464) * C22717 +
             (C26465 + C26466) * C22723 + (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50642 -
           (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
             (C28842 + C28841) * C22717 + (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50606 * C50838) *
              C50881 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C22722 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C22717 +
             (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
                C50850 +
            ((C25537 * C395 + C25532 * C409 + C25538 * C394 + C50545 * C408) *
                 C22722 +
             (C25537 * C405 + C25532 * C425 + C25538 * C404 + C50545 * C424) *
                 C22717 +
             (C29053 + C29054) * C22723 + (C29055 + C29056) * C50720) *
                C50744) *
               C50606 * C50838 -
           (((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
              C25532 * C1443) *
                 C50720 +
             (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
              C25532 * C1439) *
                 C22723 +
             (C29056 + C29055) * C22717 + (C29054 + C29053) * C22722) *
                C50744 +
            ((C26080 + C26079) * C50720 + (C26078 + C26077) * C22723 +
             (C26076 + C26075) * C22717 + (C26074 + C26073) * C22722) *
                C50850) *
               C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C22722 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C22717 +
              (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                 C50850 +
             ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
              C29521 * C22723 + C29522 * C50720) *
                 C50744) *
                C50839 -
            (((C26892 + C26891) * C50720 + (C26890 + C26889) * C22723 +
              (C28835 + C28836) * C22717 + (C28837 + C28838) * C22722) *
                 C50744 +
             (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
              (C28832 + C28831) * C22722) *
                 C50850) *
                C50670) *
               C50838 +
           (((C29521 * C22722 + C29522 * C22717 + (C26456 + C26455) * C22723 +
              (C26454 + C26453) * C50720) *
                 C50850 +
             ((C26889 + C26890) * C22722 + (C26891 + C26892) * C22717 +
              (C26893 + C26894) * C22723 + (C26895 + C26896) * C50720) *
                 C50744) *
                C50670 -
            ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
              C29524 * C22722) *
                 C50744 +
             ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
              (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                 C50850) *
                C50839) *
               C50642) *
              C251 +
          (((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
              C29525 * C22723 + C29526 * C50720) *
                 C50850 +
             ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
              (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                 C50744) *
                C50670 -
            ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
              (C28840 + C28839) * C22722) *
                 C50744 +
             ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
              (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C22717 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C22722) *
                 C50850) *
                C50839) *
               C50838 +
           ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
              (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                 C50850 +
             (C29525 * C22722 + C29526 * C22717 + (C26465 + C26466) * C22723 +
              (C26467 + C26468) * C50720) *
                 C50744) *
                C50839 -
            (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
               C25532 * C3501) *
                  C50720 +
              (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
               C25532 * C3498) *
                  C22723 +
              (C28850 + C28849) * C22717 + (C28848 + C28847) * C22722) *
                 C50744 +
             ((C26468 + C26467) * C50720 + (C26466 + C26465) * C22723 +
              C29527 * C22717 + C29528 * C22722) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C25537 * C397 + C25532 * C411 + C25538 * C396 + C50545 * C410) *
                 C22722 +
             (C25537 * C407 + C25532 * C427 + C25538 * C406 + C50545 * C426) *
                 C22717 +
             (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
                C50744) *
               C50606 * C248 -
           ((C27383 * C50720 + C27384 * C22723 + (C26457 + C26458) * C22717 +
             (C26459 + C26460) * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50606 * C249 +
           ((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
             (C25746 + C25745) * C50720) *
                C50850 +
            ((C26456 + C26455) * C22722 + (C26454 + C26453) * C22717 +
             (C27393 + C27394) * C22723 + (C27395 + C27396) * C50720) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
             (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                C50850 +
            ((C26461 + C26462) * C22722 + (C26463 + C26464) * C22717 +
             (C26465 + C26466) * C22723 + (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C249 -
           (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
             (C25538 * C405 + C50545 * C425 + C25537 * C406 + C25532 * C426) *
                 C22717 +
             (C25538 * C395 + C50545 * C409 + C25537 * C396 + C25532 * C410) *
                 C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50606 * C248 -
           (((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C50720 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C22723 +
             (C26468 + C26467) * C22717 + (C26466 + C26465) * C22722) *
                C50744 +
            ((C25760 + C25759) * C50720 + (C25758 + C25757) * C22723 +
             C25763 * C22717 + C25764 * C22722) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C22722 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C22717 +
            (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
               C50850 +
           ((C25537 * C397 + C25532 * C411 + C25538 * C396 + C50545 * C410) *
                C22722 +
            (C25537 * C407 + C25532 * C427 + C25538 * C406 + C50545 * C426) *
                C22717 +
            (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
            (C25538 * C405 + C50545 * C425 + C25537 * C406 + C25532 * C426) *
                C22717 +
            (C25538 * C395 + C50545 * C409 + C25537 * C396 + C25532 * C410) *
                C22722) *
               C50744 +
           ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C22717 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C22722) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C22722 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C22717 +
            (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
               C50850 +
           ((C25537 * C395 + C25532 * C409 + C25538 * C394 + C50545 * C408) *
                C22722 +
            (C25537 * C405 + C25532 * C425 + C25538 * C404 + C50545 * C424) *
                C22717 +
            (C25537 * C777 + C25532 * C782 + C25538 * C778 + C50545 * C783) *
                C22723 +
            (C25537 * C786 + C25532 * C792 + C25538 * C787 + C50545 * C793) *
                C50720) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C25538 * C788 + C50545 * C794 + C25537 * C787 + C25532 * C793) *
                C50720 +
            (C25538 * C779 + C50545 * C789 + C25537 * C778 + C25532 * C783) *
                C22723 +
            (C25538 * C421 + C50545 * C432 + C25537 * C404 + C25532 * C424) *
                C22717 +
            (C25538 * C402 + C50545 * C420 + C25537 * C394 + C25532 * C408) *
                C22722) *
               C50744 +
           ((C25538 * C280 + C50545 * C291 + C25537 * C263 + C25532 * C283) *
                C50720 +
            (C25538 * C261 + C50545 * C279 + C25537 * C253 + C25532 * C267) *
                C22723 +
            (C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
                C22717 +
            (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
                C22722) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
                C50744) *
               C391 -
           (((C26892 + C26891) * C50720 + (C26890 + C26889) * C22723 +
             (C28835 + C28836) * C22717 + (C28837 + C28838) * C22722) *
                C50744 +
            ((C26457 + C26458) * C50720 + (C26459 + C26460) * C22723 +
             (C28834 + C28833) * C22717 + (C28832 + C28831) * C22722) *
                C50850) *
               C392 +
           (((C28838 + C28837) * C22722 + (C28836 + C28835) * C22717 +
             (C26889 + C26890) * C22723 + (C26891 + C26892) * C50720) *
                C50850 +
            ((C25537 * C1717 + C25532 * C1725 + C25538 * C1716 +
              C50545 * C1724) *
                 C22722 +
             (C25537 * C1721 + C25532 * C1729 + C25538 * C1720 +
              C50545 * C1728) *
                 C22717 +
             (C25537 * C4429 + C25532 * C4435 + C25538 * C4428 +
              C50545 * C4434) *
                 C22723 +
             (C25537 * C4432 + C25532 * C4438 + C25538 * C4431 +
              C50545 * C4437) *
                 C50720) *
                C50744) *
               C393) *
              C50590 * C251 +
          ((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
             (C26461 + C26462) * C22723 + (C26463 + C26464) * C50720) *
                C50850 +
            ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
             (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                C50744) *
               C392 -
           (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
             (C28842 + C28841) * C22717 + (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C391 -
           (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
              C25532 * C4437) *
                 C50720 +
             (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
              C25532 * C4434) *
                 C22723 +
             (C25538 * C1719 + C50545 * C1727 + C25537 * C1720 +
              C25532 * C1728) *
                 C22717 +
             (C25538 * C1715 + C50545 * C1723 + C25537 * C1716 +
              C25532 * C1724) *
                 C22722) *
                C50744 +
            ((C28850 + C28849) * C50720 + (C28848 + C28847) * C22723 +
             (C28846 + C28845) * C22717 + (C28844 + C28843) * C22722) *
                C50850) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
                C50744) *
               C50839 -
           (((C26892 + C26891) * C50720 + (C26890 + C26889) * C22723 +
             (C28835 + C28836) * C22717 + (C28837 + C28838) * C22722) *
                C50744 +
            ((C26457 + C26458) * C50720 + (C26459 + C26460) * C22723 +
             (C28834 + C28833) * C22717 + (C28832 + C28831) * C22722) *
                C50850) *
               C50670) *
              C50590 * C50880 +
          ((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
             (C26461 + C26462) * C22723 + (C26463 + C26464) * C50720) *
                C50850 +
            ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
             (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                C50744) *
               C50670 -
           (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
             (C28842 + C28841) * C22717 + (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50839) *
              C50590 * C50881 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C22722 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C22717 +
             (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
                C50850 +
            ((C29259 + C29260) * C22722 + (C29261 + C29262) * C22717 +
             (C29053 + C29054) * C22723 + (C29055 + C29056) * C50720) *
                C50744) *
               C50839 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50720 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C22723 +
             (C25538 * C419 + C50545 * C431 + C25537 * C418 + C25532 * C430) *
                 C22717 +
             (C25538 * C401 + C50545 * C415 + C25537 * C400 + C25532 * C414) *
                 C22722) *
                C50744 +
            ((C29056 + C29055) * C50720 + (C29054 + C29053) * C22723 +
             (C29262 + C29261) * C22717 + (C29260 + C29259) * C22722) *
                C50850) *
               C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C22722 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C22717 +
            (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
               C50850 +
           ((C25537 * C397 + C25532 * C411 + C25538 * C396 + C50545 * C410) *
                C22722 +
            (C25537 * C407 + C25532 * C427 + C25538 * C406 + C50545 * C426) *
                C22717 +
            (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
            (C25538 * C405 + C50545 * C425 + C25537 * C406 + C25532 * C426) *
                C22717 +
            (C25538 * C395 + C50545 * C409 + C25537 * C396 + C25532 * C410) *
                C22722) *
               C50744 +
           ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C22717 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C22722) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C22722 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C22717 +
            (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
               C50850 +
           ((C25537 * C395 + C25532 * C409 + C25538 * C394 + C50545 * C408) *
                C22722 +
            (C25537 * C405 + C25532 * C425 + C25538 * C404 + C50545 * C424) *
                C22717 +
            (C25537 * C777 + C25532 * C782 + C25538 * C778 + C50545 * C783) *
                C22723 +
            (C25537 * C786 + C25532 * C792 + C25538 * C787 + C50545 * C793) *
                C50720) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C25538 * C788 + C50545 * C794 + C25537 * C787 + C25532 * C793) *
                C50720 +
            (C25538 * C779 + C50545 * C789 + C25537 * C778 + C25532 * C783) *
                C22723 +
            (C25538 * C421 + C50545 * C432 + C25537 * C404 + C25532 * C424) *
                C22717 +
            (C25538 * C402 + C50545 * C420 + C25537 * C394 + C25532 * C408) *
                C22722) *
               C50744 +
           ((C25538 * C280 + C50545 * C291 + C25537 * C263 + C25532 * C283) *
                C50720 +
            (C25538 * C261 + C50545 * C279 + C25537 * C253 + C25532 * C267) *
                C22723 +
            (C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
                C22717 +
            (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
                C22722) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C25537 * C397 + C25532 * C411 + C25538 * C396 + C50545 * C410) *
                 C22722 +
             (C25537 * C407 + C25532 * C427 + C25538 * C406 + C50545 * C426) *
                 C22717 +
             (C26460 + C26459) * C22723 + (C26458 + C26457) * C50720) *
                C50744) *
               C50606 * C248 -
           ((C27383 * C50720 + C27384 * C22723 + (C26457 + C26458) * C22717 +
             (C26459 + C26460) * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50606 * C249 +
           ((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
             (C25746 + C25745) * C50720) *
                C50850 +
            ((C26456 + C26455) * C22722 + (C26454 + C26453) * C22717 +
             (C27393 + C27394) * C22723 + (C27395 + C27396) * C50720) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
             (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                C50850 +
            ((C26461 + C26462) * C22722 + (C26463 + C26464) * C22717 +
             (C26465 + C26466) * C22723 + (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C249 -
           (((C26464 + C26463) * C50720 + (C26462 + C26461) * C22723 +
             (C25538 * C405 + C50545 * C425 + C25537 * C406 + C25532 * C426) *
                 C22717 +
             (C25538 * C395 + C50545 * C409 + C25537 * C396 + C25532 * C410) *
                 C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50606 * C248 -
           (((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C50720 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C22723 +
             (C26468 + C26467) * C22717 + (C26466 + C26465) * C22722) *
                C50744 +
            ((C25760 + C25759) * C50720 + (C25758 + C25757) * C22723 +
             C25763 * C22717 + C25764 * C22722) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C50606 * C50882 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50606 * C50883 +
           ((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
             (C25746 + C25745) * C50720) *
                C50850 +
            ((C26456 + C26455) * C22722 + (C26454 + C26453) * C22717 +
             (C27393 + C27394) * C22723 + (C27395 + C27396) * C50720) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
             (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                C50850 +
            (C29525 * C22722 + C29526 * C22717 + (C26465 + C26466) * C22723 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50883 -
           ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
             (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50606 * C50882 -
           (((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C50720 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C22723 +
             (C26468 + C26467) * C22717 + (C26466 + C26465) * C22722) *
                C50744 +
            ((C25760 + C25759) * C50720 + (C25758 + C25757) * C22723 +
             C25763 * C22717 + C25764 * C22722) *
                C50850) *
               C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C50839 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50670) *
              C50882 +
          (((C29521 * C22722 + C29522 * C22717 + C30709 * C22723 +
             C30710 * C50720) *
                C50850 +
            (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50670 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50839) *
              C50883 +
          (((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
             (C25746 + C25745) * C50720) *
                C50850 +
            (C30709 * C22722 + C30710 * C22717 + (C27393 + C27394) * C22723 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C50839 -
           (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
              C25532 * C9128) *
                 C50720 +
             (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
              C25532 * C9126) *
                 C22723 +
             (C26896 + C26895) * C22717 + (C26894 + C26893) * C22722) *
                C50744 +
            ((C27396 + C27395) * C50720 + (C27394 + C27393) * C22723 +
             C27383 * C22717 + C27384 * C22722) *
                C50850) *
               C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C22722 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C22717 +
            (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
               C50850 +
           ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
            C29521 * C22723 + C29522 * C50720) *
               C50744) *
              C50606 * C964 -
          ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
            C29524 * C22722) *
               C50744 +
           ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
            (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
               C50850) *
              C50606 * C965 +
          ((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
            (C25746 + C25745) * C50720) *
               C50850 +
           ((C26456 + C26455) * C22722 + (C26454 + C26453) * C22717 +
            (C27393 + C27394) * C22723 + (C27395 + C27396) * C50720) *
               C50744) *
              C50606 * C966 -
          (((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C50720 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C22723 +
            (C27396 + C27395) * C22717 + (C27394 + C27393) * C22722) *
               C50744 +
           ((C26726 + C26725) * C50720 + (C26724 + C26723) * C22723 +
            C26713 * C22717 + C26714 * C22722) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C50606 * C893 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50606 * C50642) *
              C895 +
          ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
             (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                C50850 +
            (C29525 * C22722 + C29526 * C22717 + (C26465 + C26466) * C22723 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
             (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C22722 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C22717 +
             (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
                C50850 +
            ((C29259 + C29260) * C22722 + (C29261 + C29262) * C22717 +
             (C29053 + C29054) * C22723 + (C29055 + C29056) * C50720) *
                C50744) *
               C50606 * C893 -
           (((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
              C25532 * C1443) *
                 C50720 +
             (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
              C25532 * C1439) *
                 C22723 +
             (C29056 + C29055) * C22717 + (C29054 + C29053) * C22722) *
                C50744 +
            ((C26080 + C26079) * C50720 + (C26078 + C26077) * C22723 +
             (C26076 + C26075) * C22717 + (C26074 + C26073) * C22722) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C391 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C392 +
           (((C28838 + C28837) * C22722 + (C28836 + C28835) * C22717 +
             C30049 * C22723 + C30050 * C50720) *
                C50850 +
            ((C25537 * C1717 + C25532 * C1725 + C25538 * C1716 +
              C50545 * C1724) *
                 C22722 +
             (C25537 * C1721 + C25532 * C1729 + C25538 * C1720 +
              C50545 * C1728) *
                 C22717 +
             (C30059 + C30060) * C22723 + (C30061 + C30062) * C50720) *
                C50744) *
               C393) *
              C893 +
          (((C29521 * C22722 + C29522 * C22717 + (C26456 + C26455) * C22723 +
             (C26454 + C26453) * C50720) *
                C50850 +
            (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C392 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C391 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50720 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C22723 +
             (C30062 + C30061) * C22717 + (C30060 + C30059) * C22722) *
                C50744 +
            ((C26896 + C26895) * C50720 + (C26894 + C26893) * C22723 +
             C30047 * C22717 + C30048 * C22722) *
                C50850) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C22722 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C22717 +
              (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                 C50850 +
             ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
              C29521 * C22723 + C29522 * C50720) *
                 C50744) *
                C50839 -
            ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
              (C28837 + C28838) * C22722) *
                 C50744 +
             (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
              (C28832 + C28831) * C22722) *
                 C50850) *
                C50670) *
               C893 +
           (((C29521 * C22722 + C29522 * C22717 + (C26456 + C26455) * C22723 +
              (C26454 + C26453) * C50720) *
                 C50850 +
             (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
              (C26895 + C26896) * C50720) *
                 C50744) *
                C50670 -
            ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
              C29524 * C22722) *
                 C50744 +
             ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
              (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                 C50850) *
                C50839) *
               C50642) *
              C50830 +
          (((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
              C29525 * C22723 + C29526 * C50720) *
                 C50850 +
             ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
              (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                 C50744) *
                C50670 -
            ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
              (C28840 + C28839) * C22722) *
                 C50744 +
             ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
              (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C22717 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C22722) *
                 C50850) *
                C50839) *
               C893 +
           ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
              (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                 C50850 +
             (C29525 * C22722 + C29526 * C22717 + (C26465 + C26466) * C22723 +
              (C26467 + C26468) * C50720) *
                 C50744) *
                C50839 -
            (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
               C25532 * C3501) *
                  C50720 +
              (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
               C25532 * C3498) *
                  C22723 +
              (C28850 + C28849) * C22717 + (C28848 + C28847) * C22722) *
                 C50744 +
             ((C26468 + C26467) * C50720 + (C26466 + C26465) * C22723 +
              C29527 * C22717 + C29528 * C22722) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C50606 * C893 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50606 * C50642) *
              C895 +
          ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
             (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                C50850 +
            (C29525 * C22722 + C29526 * C22717 + (C26465 + C26466) * C22723 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
             (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C22722 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C22717 +
             (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
                C50850 +
            ((C29259 + C29260) * C22722 + (C29261 + C29262) * C22717 +
             (C29053 + C29054) * C22723 + (C29055 + C29056) * C50720) *
                C50744) *
               C50606 * C893 -
           (((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
              C25532 * C1443) *
                 C50720 +
             (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
              C25532 * C1439) *
                 C22723 +
             (C29056 + C29055) * C22717 + (C29054 + C29053) * C22722) *
                C50744 +
            ((C26080 + C26079) * C50720 + (C26078 + C26077) * C22723 +
             (C26076 + C26075) * C22717 + (C26074 + C26073) * C22722) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C22722 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C22717 +
            (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
               C50850 +
           ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
            C29521 * C22723 + C29522 * C50720) *
               C50744) *
              C50606 * C964 -
          ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
            C29524 * C22722) *
               C50744 +
           ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
            (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
               C50850) *
              C50606 * C965 +
          ((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
            (C25746 + C25745) * C50720) *
               C50850 +
           ((C26456 + C26455) * C22722 + (C26454 + C26453) * C22717 +
            (C27393 + C27394) * C22723 + (C27395 + C27396) * C50720) *
               C50744) *
              C50606 * C966 -
          (((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C50720 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C22723 +
            (C27396 + C27395) * C22717 + (C27394 + C27393) * C22722) *
               C50744 +
           ((C26726 + C26725) * C50720 + (C26724 + C26723) * C22723 +
            C26713 * C22717 + C26714 * C22722) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C22722 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C22717 +
              (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                 C50850 +
             ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
              C29521 * C22723 + C29522 * C50720) *
                 C50744) *
                C1544 -
            ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
              (C28837 + C28838) * C22722) *
                 C50744 +
             (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
              (C28832 + C28831) * C22722) *
                 C50850) *
                C50670) *
               C50838 +
           (((C29521 * C22722 + C29522 * C22717 + C30709 * C22723 +
              C30710 * C50720) *
                 C50850 +
             (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
              (C26895 + C26896) * C50720) *
                 C50744) *
                C50670 -
            ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
              C29524 * C22722) *
                 C50744 +
             ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
              (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                 C50850) *
                C1544) *
               C50642) *
              C50830 +
          (((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
              C29525 * C22723 + C29526 * C50720) *
                 C50850 +
             ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
              (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                 C50744) *
                C50670 -
            ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
              (C28840 + C28839) * C22722) *
                 C50744 +
             ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
              (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C22717 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C22722) *
                 C50850) *
                C1544) *
               C50838 +
           ((((C25749 + C25750) * C22722 + (C25751 + C25752) * C22717 +
              (C25753 + C25754) * C22723 + (C25755 + C25756) * C50720) *
                 C50850 +
             (C29525 * C22722 + C29526 * C22717 + (C26465 + C26466) * C22723 +
              (C26467 + C26468) * C50720) *
                 C50744) *
                C1544 -
            (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
               C25532 * C3501) *
                  C50720 +
              (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
               C25532 * C3498) *
                  C22723 +
              (C28850 + C28849) * C22717 + (C28848 + C28847) * C22722) *
                 C50744 +
             ((C26468 + C26467) * C50720 + (C26466 + C26465) * C22723 +
              C29527 * C22717 + C29528 * C22722) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C50884 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50885 +
           (((C28838 + C28837) * C22722 + (C28836 + C28835) * C22717 +
             C30049 * C22723 + C30050 * C50720) *
                C50850 +
            ((C31237 + C31238) * C22722 + (C31239 + C31240) * C22717 +
             (C30059 + C30060) * C22723 + (C30061 + C30062) * C50720) *
                C50744) *
               C1960) *
              C50838 +
          (((C29521 * C22722 + C29522 * C22717 + C30709 * C22723 +
             C30710 * C50720) *
                C50850 +
            (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50885 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C50884 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50720 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C22723 +
             (C30062 + C30061) * C22717 + (C30060 + C30059) * C22722) *
                C50744 +
            ((C26896 + C26895) * C50720 + (C26894 + C26893) * C22723 +
             C30047 * C22717 + C30048 * C22722) *
                C50850) *
               C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50670) *
              C248 +
          (((C29521 * C22722 + C29522 * C22717 + C30709 * C22723 +
             C30710 * C50720) *
                C50850 +
            (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50670 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C1544) *
              C249 +
          (((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
             (C25746 + C25745) * C50720) *
                C50850 +
            (C30709 * C22722 + C30710 * C22717 + (C27393 + C27394) * C22723 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
              C25532 * C9128) *
                 C50720 +
             (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
              C25532 * C9126) *
                 C22723 +
             (C26896 + C26895) * C22717 + (C26894 + C26893) * C22722) *
                C50744 +
            ((C27396 + C27395) * C50720 + (C27394 + C27393) * C22723 +
             C27383 * C22717 + C27384 * C22722) *
                C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50670) *
              C50590 * C895 +
          ((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
             C29525 * C22723 + C29526 * C50720) *
                C50850 +
            ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
             (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                C50744) *
               C50670 -
           ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
             (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C22722 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C22717 +
             (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
                C50850 +
            ((C29259 + C29260) * C22722 + (C29261 + C29262) * C22717 +
             (C29053 + C29054) * C22723 + (C29055 + C29056) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50720 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C22723 +
             (C25538 * C419 + C50545 * C431 + C25537 * C418 + C25532 * C430) *
                 C22717 +
             (C25538 * C401 + C50545 * C415 + C25537 * C400 + C25532 * C414) *
                 C22722) *
                C50744 +
            ((C29056 + C29055) * C50720 + (C29054 + C29053) * C22723 +
             (C29262 + C29261) * C22717 + (C29260 + C29259) * C22722) *
                C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C22722 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C22717 +
            (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
               C50850 +
           ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
            C29521 * C22723 + C29522 * C50720) *
               C50744) *
              C1710 -
          ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
            (C28837 + C28838) * C22722) *
               C50744 +
           (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
            (C28832 + C28831) * C22722) *
               C50850) *
              C1711 +
          (((C28838 + C28837) * C22722 + (C28836 + C28835) * C22717 +
            C30049 * C22723 + C30050 * C50720) *
               C50850 +
           ((C31237 + C31238) * C22722 + (C31239 + C31240) * C22717 +
            (C30059 + C30060) * C22723 + (C30061 + C30062) * C50720) *
               C50744) *
              C1712 -
          (((C25538 * C16623 + C50545 * C16625 + C25537 * C14733 +
             C25532 * C14736) *
                C50720 +
            (C25538 * C16622 + C50545 * C16624 + C25537 * C14730 +
             C25532 * C14734) *
                C22723 +
            (C25538 * C7163 + C50545 * C7169 + C25537 * C7164 +
             C25532 * C7170) *
                C22717 +
            (C25538 * C7160 + C50545 * C7166 + C25537 * C7161 +
             C25532 * C7167) *
                C22722) *
               C50744 +
           ((C30062 + C30061) * C50720 + (C30060 + C30059) * C22723 +
            (C31240 + C31239) * C22717 + (C31238 + C31237) * C22722) *
               C50850) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C50884 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50885 +
           (((C28838 + C28837) * C22722 + (C28836 + C28835) * C22717 +
             C30049 * C22723 + C30050 * C50720) *
                C50850 +
            ((C31237 + C31238) * C22722 + (C31239 + C31240) * C22717 +
             (C30059 + C30060) * C22723 + (C30061 + C30062) * C50720) *
                C50744) *
               C1960) *
              C50590 * C50830 +
          ((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
             C29525 * C22723 + C29526 * C50720) *
                C50850 +
            ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
             (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                C50744) *
               C50885 -
           ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
             (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C50884 -
           (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
              C25532 * C4437) *
                 C50720 +
             (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
              C25532 * C4434) *
                 C22723 +
             (C25538 * C1719 + C50545 * C1727 + C25537 * C1720 +
              C25532 * C1728) *
                 C22717 +
             (C25538 * C1715 + C50545 * C1723 + C25537 * C1716 +
              C25532 * C1724) *
                 C22722) *
                C50744 +
            ((C28850 + C28849) * C50720 + (C28848 + C28847) * C22723 +
             (C28846 + C28845) * C22717 + (C28844 + C28843) * C22722) *
                C50850) *
               C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50670) *
              C50590 * C895 +
          ((((C28839 + C28840) * C22722 + (C28841 + C28842) * C22717 +
             C29525 * C22723 + C29526 * C50720) *
                C50850 +
            ((C28843 + C28844) * C22722 + (C28845 + C28846) * C22717 +
             (C28847 + C28848) * C22723 + (C28849 + C28850) * C50720) *
                C50744) *
               C50670 -
           ((C29527 * C50720 + C29528 * C22723 + (C28842 + C28841) * C22717 +
             (C28840 + C28839) * C22722) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C22723 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C22717 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C22722) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C22722 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C22717 +
             (C26073 + C26074) * C22723 + (C26075 + C26076) * C50720) *
                C50850 +
            ((C29259 + C29260) * C22722 + (C29261 + C29262) * C22717 +
             (C29053 + C29054) * C22723 + (C29055 + C29056) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50720 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C22723 +
             (C25538 * C419 + C50545 * C431 + C25537 * C418 + C25532 * C430) *
                 C22717 +
             (C25538 * C401 + C50545 * C415 + C25537 * C400 + C25532 * C414) *
                 C22722) *
                C50744 +
            ((C29056 + C29055) * C50720 + (C29054 + C29053) * C22723 +
             (C29262 + C29261) * C22717 + (C29260 + C29259) * C22722) *
                C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C22722 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C22717 +
             (C25737 + C25738) * C22723 + (C25739 + C25740) * C50720) *
                C50850 +
            ((C28831 + C28832) * C22722 + (C28833 + C28834) * C22717 +
             C29521 * C22723 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C22723 + (C28835 + C28836) * C22717 +
             (C28837 + C28838) * C22722) *
                C50744 +
            (C29523 * C50720 + C29524 * C22723 + (C28834 + C28833) * C22717 +
             (C28832 + C28831) * C22722) *
                C50850) *
               C50670) *
              C248 +
          (((C29521 * C22722 + C29522 * C22717 + C30709 * C22723 +
             C30710 * C50720) *
                C50850 +
            (C30049 * C22722 + C30050 * C22717 + (C26893 + C26894) * C22723 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50670 -
           ((C27383 * C50720 + C27384 * C22723 + C29523 * C22717 +
             C29524 * C22722) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C22723 +
             (C25740 + C25739) * C22717 + (C25738 + C25737) * C22722) *
                C50850) *
               C1544) *
              C249 +
          (((C25761 * C22722 + C25762 * C22717 + (C25748 + C25747) * C22723 +
             (C25746 + C25745) * C50720) *
                C50850 +
            (C30709 * C22722 + C30710 * C22717 + (C27393 + C27394) * C22723 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
              C25532 * C9128) *
                 C50720 +
             (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
              C25532 * C9126) *
                 C22723 +
             (C26896 + C26895) * C22717 + (C26894 + C26893) * C22722) *
                C50744 +
            ((C27396 + C27395) * C50720 + (C27394 + C27393) * C22723 +
             C27383 * C22717 + C27384 * C22722) *
                C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
                C50744) *
               C50606 * C50838 -
           ((C9648 * C50720 + C9649 * C22723 + (C8698 + C8699) * C22717 +
             (C8700 + C8701) * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50606 * C50642) *
              C50880 +
          ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
             (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                C31984 +
            ((C8702 + C8703) * C22722 + (C8704 + C8705) * C22717 +
             (C8706 + C8707) * C22723 + (C8708 + C8709) * C50720) *
                C50744) *
               C50606 * C50642 -
           (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
             (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50606 * C50838) *
              C50881 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C22722 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C22717 +
             (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
                C31984 +
            ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
             (C41522 + C41523) * C22723 + (C41524 + C41525) * C50720) *
                C50744) *
               C50606 * C50838 -
           (((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
              C50821 * C1443) *
                 C50720 +
             (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
              C50821 * C1439) *
                 C22723 +
             (C41525 + C41524) * C22717 + (C41523 + C41522) * C22722) *
                C50744 +
            ((C8321 + C8320) * C50720 + (C8319 + C8318) * C22723 +
             (C8317 + C8316) * C22717 + (C8315 + C8314) * C22722) *
                C31984) *
               C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                  C22722 +
              (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                  C22717 +
              (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                 C31984 +
             ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
              C41978 * C22723 + C41979 * C50720) *
                 C50744) *
                C50839 -
            ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
              (C15682 + C15681) * C22722) *
                 C50744 +
             (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
              (C15678 + C15677) * C22722) *
                 C31984) *
                C50670) *
               C50838 +
           (((C41978 * C22722 + C41979 * C22717 + (C8697 + C8696) * C22723 +
              (C8695 + C8694) * C50720) *
                 C31984 +
             ((C9146 + C9147) * C22722 + (C9148 + C9149) * C22717 +
              (C9150 + C9151) * C22723 + (C9152 + C9153) * C50720) *
                 C50744) *
                C50670 -
            ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
              C41981 * C22722) *
                 C50744 +
             ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
              (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                 C31984) *
                C50839) *
               C50642) *
              C251 +
          (((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
              C41982 * C22723 + C41983 * C50720) *
                 C31984 +
             ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
              (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                 C50744) *
                C50670 -
            ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
              (C15690 + C15689) * C22722) *
                 C50744 +
             ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
              (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                  C22717 +
              (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                  C22722) *
                 C31984) *
                C50839) *
               C50838 +
           ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
              (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                 C31984 +
             (C41982 * C22722 + C41983 * C22717 + (C8706 + C8707) * C22723 +
              (C8708 + C8709) * C50720) *
                 C50744) *
                C50839 -
            (((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
               C50821 * C3501) *
                  C50720 +
              (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
               C50821 * C3498) *
                  C22723 +
              (C16232 + C16231) * C22717 + (C16230 + C16229) * C22722) *
                 C50744 +
             ((C8709 + C8708) * C50720 + (C8707 + C8706) * C22723 +
              C41984 * C22717 + C41985 * C22722) *
                 C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
                C50744) *
               C50606 * C248 -
           ((C9648 * C50720 + C9649 * C22723 + (C8698 + C8699) * C22717 +
             (C8700 + C8701) * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50606 * C249 +
           ((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
             (C7987 + C7986) * C50720) *
                C31984 +
            ((C8697 + C8696) * C22722 + (C8695 + C8694) * C22717 +
             (C9658 + C9659) * C22723 + (C9660 + C9661) * C50720) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
             (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                C31984 +
            ((C8702 + C8703) * C22722 + (C8704 + C8705) * C22717 +
             (C8706 + C8707) * C22723 + (C8708 + C8709) * C50720) *
                C50744) *
               C50606 * C249 -
           (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
             (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50606 * C248 -
           (((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C50720 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C22723 +
             (C8709 + C8708) * C22717 + (C8707 + C8706) * C22722) *
                C50744 +
            ((C8001 + C8000) * C50720 + (C7999 + C7998) * C22723 +
             C8004 * C22717 + C8005 * C22722) *
                C31984) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C22722 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C22717 +
            (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
               C31984 +
           ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
            (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
            (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
               C50744 +
           ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C22717 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C22722) *
               C31984) *
              C50606 * C50590 * C114 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C22722 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C22717 +
            (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
               C31984 +
           ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
            (C49747 * C777 + C50821 * C782 + C49740 * C778 + C50545 * C783) *
                C22723 +
            (C49747 * C786 + C50821 * C792 + C49740 * C787 + C50545 * C793) *
                C50720) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C49740 * C788 + C50545 * C794 + C49747 * C787 + C50821 * C793) *
                C50720 +
            (C49740 * C779 + C50545 * C789 + C49747 * C778 + C50821 * C783) *
                C22723 +
            (C49740 * C421 + C50545 * C432 + C49747 * C404 + C50821 * C424) *
                C22717 +
            (C49740 * C402 + C50545 * C420 + C49747 * C394 + C50821 * C408) *
                C22722) *
               C50744 +
           ((C49740 * C280 + C50545 * C291 + C49747 * C263 + C50821 * C283) *
                C50720 +
            (C49740 * C261 + C50545 * C279 + C49747 * C253 + C50821 * C267) *
                C22723 +
            (C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
                C22717 +
            (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
                C22722) *
               C31984) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
                C50744) *
               C391 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            ((C8698 + C8699) * C50720 + (C8700 + C8701) * C22723 +
             (C15680 + C15679) * C22717 + (C15678 + C15677) * C22722) *
                C31984) *
               C392 +
           ((C15701 * C22722 + C15702 * C22717 + (C9146 + C9147) * C22723 +
             (C9148 + C9149) * C50720) *
                C31984 +
            ((C15688 + C15687) * C22722 + (C15686 + C15685) * C22717 +
             (C16637 + C16638) * C22723 + (C16639 + C16640) * C50720) *
                C50744) *
               C393) *
              C50590 * C251 +
          ((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
             (C8702 + C8703) * C22723 + (C8704 + C8705) * C50720) *
                C31984 +
            ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
             (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                C50744) *
               C392 -
           (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
             (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C391 -
           (((C49740 * C4430 + C50545 * C4436 + C49747 * C4431 +
              C50821 * C4437) *
                 C50720 +
             (C49740 * C4427 + C50545 * C4433 + C49747 * C4428 +
              C50821 * C4434) *
                 C22723 +
             (C15700 + C15699) * C22717 + (C15698 + C15697) * C22722) *
                C50744 +
            ((C16232 + C16231) * C50720 + (C16230 + C16229) * C22723 +
             C15703 * C22717 + C15704 * C22722) *
                C31984) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
                C50744) *
               C50839 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            ((C8698 + C8699) * C50720 + (C8700 + C8701) * C22723 +
             (C15680 + C15679) * C22717 + (C15678 + C15677) * C22722) *
                C31984) *
               C50670) *
              C50590 * C50880 +
          ((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
             (C8702 + C8703) * C22723 + (C8704 + C8705) * C50720) *
                C31984 +
            ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
             (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                C50744) *
               C50670 -
           (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
             (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50839) *
              C50590 * C50881 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C22722 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C22717 +
             (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
                C31984 +
            ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
             (C41522 + C41523) * C22723 + (C41524 + C41525) * C50720) *
                C50744) *
               C50839 -
           (((C49740 * C1087 + C50545 * C1095 + C49747 * C1088 +
              C50821 * C1096) *
                 C50720 +
             (C49740 * C1083 + C50545 * C1091 + C49747 * C1084 +
              C50821 * C1092) *
                 C22723 +
             (C16026 + C16025) * C22717 + (C16024 + C16023) * C22722) *
                C50744 +
            ((C41525 + C41524) * C50720 + (C41523 + C41522) * C22723 +
             (C16022 + C16021) * C22717 + (C16020 + C16019) * C22722) *
                C31984) *
               C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C22722 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C22717 +
            (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
               C31984 +
           ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
            (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
            (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
               C50744 +
           ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C22717 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C22722) *
               C31984) *
              C50606 * C50590 * C114 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C22722 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C22717 +
            (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
               C31984 +
           ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
            (C49747 * C777 + C50821 * C782 + C49740 * C778 + C50545 * C783) *
                C22723 +
            (C49747 * C786 + C50821 * C792 + C49740 * C787 + C50545 * C793) *
                C50720) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C49740 * C788 + C50545 * C794 + C49747 * C787 + C50821 * C793) *
                C50720 +
            (C49740 * C779 + C50545 * C789 + C49747 * C778 + C50821 * C783) *
                C22723 +
            (C49740 * C421 + C50545 * C432 + C49747 * C404 + C50821 * C424) *
                C22717 +
            (C49740 * C402 + C50545 * C420 + C49747 * C394 + C50821 * C408) *
                C22722) *
               C50744 +
           ((C49740 * C280 + C50545 * C291 + C49747 * C263 + C50821 * C283) *
                C50720 +
            (C49740 * C261 + C50545 * C279 + C49747 * C253 + C50821 * C267) *
                C22723 +
            (C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
                C22717 +
            (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
                C22722) *
               C31984) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             (C8701 + C8700) * C22723 + (C8699 + C8698) * C50720) *
                C50744) *
               C50606 * C248 -
           ((C9648 * C50720 + C9649 * C22723 + (C8698 + C8699) * C22717 +
             (C8700 + C8701) * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50606 * C249 +
           ((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
             (C7987 + C7986) * C50720) *
                C31984 +
            ((C8697 + C8696) * C22722 + (C8695 + C8694) * C22717 +
             (C9658 + C9659) * C22723 + (C9660 + C9661) * C50720) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
             (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                C31984 +
            ((C8702 + C8703) * C22722 + (C8704 + C8705) * C22717 +
             (C8706 + C8707) * C22723 + (C8708 + C8709) * C50720) *
                C50744) *
               C50606 * C249 -
           (((C8705 + C8704) * C50720 + (C8703 + C8702) * C22723 +
             (C15692 + C15691) * C22717 + (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50606 * C248 -
           (((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C50720 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C22723 +
             (C8709 + C8708) * C22717 + (C8707 + C8706) * C22722) *
                C50744 +
            ((C8001 + C8000) * C50720 + (C7999 + C7998) * C22723 +
             C8004 * C22717 + C8005 * C22722) *
                C31984) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C50606 * C50882 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50606 * C50883 +
           ((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
             (C7987 + C7986) * C50720) *
                C31984 +
            ((C8697 + C8696) * C22722 + (C8695 + C8694) * C22717 +
             (C9658 + C9659) * C22723 + (C9660 + C9661) * C50720) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
             (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                C31984 +
            (C41982 * C22722 + C41983 * C22717 + (C8706 + C8707) * C22723 +
             (C8708 + C8709) * C50720) *
                C50744) *
               C50606 * C50883 -
           ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
             (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50606 * C50882 -
           (((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C50720 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C22723 +
             (C8709 + C8708) * C22717 + (C8707 + C8706) * C22722) *
                C50744 +
            ((C8001 + C8000) * C50720 + (C7999 + C7998) * C22723 +
             C8004 * C22717 + C8005 * C22722) *
                C31984) *
               C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C50839 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50670) *
              C50882 +
          (((C41978 * C22722 + C41979 * C22717 + C43152 * C22723 +
             C43153 * C50720) *
                C31984 +
            (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
             (C9152 + C9153) * C50720) *
                C50744) *
               C50670 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50839) *
              C50883 +
          (((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
             (C7987 + C7986) * C50720) *
                C31984 +
            (C43152 * C22722 + C43153 * C22717 + (C9658 + C9659) * C22723 +
             (C9660 + C9661) * C50720) *
                C50744) *
               C50839 -
           (((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
              C50821 * C9128) *
                 C50720 +
             (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
              C50821 * C9126) *
                 C22723 +
             (C9153 + C9152) * C22717 + (C9151 + C9150) * C22722) *
                C50744 +
            ((C9661 + C9660) * C50720 + (C9659 + C9658) * C22723 +
             C9648 * C22717 + C9649 * C22722) *
                C31984) *
               C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C22722 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C22717 +
            (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
               C31984 +
           ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
            C41978 * C22723 + C41979 * C50720) *
               C50744) *
              C50606 * C964 -
          ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
            C41981 * C22722) *
               C50744 +
           ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
            (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
               C31984) *
              C50606 * C965 +
          ((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
            (C7987 + C7986) * C50720) *
               C31984 +
           ((C8697 + C8696) * C22722 + (C8695 + C8694) * C22717 +
            (C9658 + C9659) * C22723 + (C9660 + C9661) * C50720) *
               C50744) *
              C50606 * C966 -
          (((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C50720 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C22723 +
            (C9661 + C9660) * C22717 + (C9659 + C9658) * C22722) *
               C50744 +
           ((C8975 + C8974) * C50720 + (C8973 + C8972) * C22723 +
            C8962 * C22717 + C8963 * C22722) *
               C31984) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C50606 * C893 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50606 * C50642) *
              C895 +
          ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
             (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                C31984 +
            (C41982 * C22722 + C41983 * C22717 + (C8706 + C8707) * C22723 +
             (C8708 + C8709) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
             (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50606 * C893) *
              C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C22722 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C22717 +
             (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
                C31984 +
            ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
             (C41522 + C41523) * C22723 + (C41524 + C41525) * C50720) *
                C50744) *
               C50606 * C893 -
           (((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
              C50821 * C1443) *
                 C50720 +
             (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
              C50821 * C1439) *
                 C22723 +
             (C41525 + C41524) * C22717 + (C41523 + C41522) * C22722) *
                C50744 +
            ((C8321 + C8320) * C50720 + (C8319 + C8318) * C22723 +
             (C8317 + C8316) * C22717 + (C8315 + C8314) * C22722) *
                C31984) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C391 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C392 +
           ((C15701 * C22722 + C15702 * C22717 + C42504 * C22723 +
             C42505 * C50720) *
                C31984 +
            ((C15688 + C15687) * C22722 + (C15686 + C15685) * C22717 +
             (C16637 + C16638) * C22723 + (C16639 + C16640) * C50720) *
                C50744) *
               C393) *
              C893 +
          (((C41978 * C22722 + C41979 * C22717 + (C8697 + C8696) * C22723 +
             (C8695 + C8694) * C50720) *
                C31984 +
            (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
             (C9152 + C9153) * C50720) *
                C50744) *
               C392 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C391 -
           (((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
              C50821 * C10058) *
                 C50720 +
             (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
              C50821 * C10056) *
                 C22723 +
             (C16640 + C16639) * C22717 + (C16638 + C16637) * C22722) *
                C50744 +
            ((C9153 + C9152) * C50720 + (C9151 + C9150) * C22723 +
             C16635 * C22717 + C16636 * C22722) *
                C31984) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                  C22722 +
              (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                  C22717 +
              (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                 C31984 +
             ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
              C41978 * C22723 + C41979 * C50720) *
                 C50744) *
                C50839 -
            ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
              (C15682 + C15681) * C22722) *
                 C50744 +
             (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
              (C15678 + C15677) * C22722) *
                 C31984) *
                C50670) *
               C893 +
           (((C41978 * C22722 + C41979 * C22717 + (C8697 + C8696) * C22723 +
              (C8695 + C8694) * C50720) *
                 C31984 +
             (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
              (C9152 + C9153) * C50720) *
                 C50744) *
                C50670 -
            ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
              C41981 * C22722) *
                 C50744 +
             ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
              (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                 C31984) *
                C50839) *
               C50642) *
              C50830 +
          (((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
              C41982 * C22723 + C41983 * C50720) *
                 C31984 +
             ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
              (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                 C50744) *
                C50670 -
            ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
              (C15690 + C15689) * C22722) *
                 C50744 +
             ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
              (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                  C22717 +
              (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                  C22722) *
                 C31984) *
                C50839) *
               C893 +
           ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
              (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                 C31984 +
             (C41982 * C22722 + C41983 * C22717 + (C8706 + C8707) * C22723 +
              (C8708 + C8709) * C50720) *
                 C50744) *
                C50839 -
            (((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
               C50821 * C3501) *
                  C50720 +
              (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
               C50821 * C3498) *
                  C22723 +
              (C16232 + C16231) * C22717 + (C16230 + C16229) * C22722) *
                 C50744 +
             ((C8709 + C8708) * C50720 + (C8707 + C8706) * C22723 +
              C41984 * C22717 + C41985 * C22722) *
                 C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C50606 * C893 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50606 * C50642) *
              C895 +
          ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
             (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                C31984 +
            (C41982 * C22722 + C41983 * C22717 + (C8706 + C8707) * C22723 +
             (C8708 + C8709) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
             (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50606 * C893) *
              C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C22722 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C22717 +
             (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
                C31984 +
            ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
             (C41522 + C41523) * C22723 + (C41524 + C41525) * C50720) *
                C50744) *
               C50606 * C893 -
           (((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
              C50821 * C1443) *
                 C50720 +
             (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
              C50821 * C1439) *
                 C22723 +
             (C41525 + C41524) * C22717 + (C41523 + C41522) * C22722) *
                C50744 +
            ((C8321 + C8320) * C50720 + (C8319 + C8318) * C22723 +
             (C8317 + C8316) * C22717 + (C8315 + C8314) * C22722) *
                C31984) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C22722 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C22717 +
            (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
               C31984 +
           ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
            C41978 * C22723 + C41979 * C50720) *
               C50744) *
              C50606 * C964 -
          ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
            C41981 * C22722) *
               C50744 +
           ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
            (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
               C31984) *
              C50606 * C965 +
          ((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
            (C7987 + C7986) * C50720) *
               C31984 +
           ((C8697 + C8696) * C22722 + (C8695 + C8694) * C22717 +
            (C9658 + C9659) * C22723 + (C9660 + C9661) * C50720) *
               C50744) *
              C50606 * C966 -
          (((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C50720 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C22723 +
            (C9661 + C9660) * C22717 + (C9659 + C9658) * C22722) *
               C50744 +
           ((C8975 + C8974) * C50720 + (C8973 + C8972) * C22723 +
            C8962 * C22717 + C8963 * C22722) *
               C31984) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                  C22722 +
              (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                  C22717 +
              (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                 C31984 +
             ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
              C41978 * C22723 + C41979 * C50720) *
                 C50744) *
                C1544 -
            ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
              (C15682 + C15681) * C22722) *
                 C50744 +
             (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
              (C15678 + C15677) * C22722) *
                 C31984) *
                C50670) *
               C50838 +
           (((C41978 * C22722 + C41979 * C22717 + C43152 * C22723 +
              C43153 * C50720) *
                 C31984 +
             (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
              (C9152 + C9153) * C50720) *
                 C50744) *
                C50670 -
            ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
              C41981 * C22722) *
                 C50744 +
             ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
              (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                 C31984) *
                C1544) *
               C50642) *
              C50830 +
          (((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
              C41982 * C22723 + C41983 * C50720) *
                 C31984 +
             ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
              (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                 C50744) *
                C50670 -
            ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
              (C15690 + C15689) * C22722) *
                 C50744 +
             ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
              (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                  C22717 +
              (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                  C22722) *
                 C31984) *
                C1544) *
               C50838 +
           ((((C7990 + C7991) * C22722 + (C7992 + C7993) * C22717 +
              (C7994 + C7995) * C22723 + (C7996 + C7997) * C50720) *
                 C31984 +
             (C41982 * C22722 + C41983 * C22717 + (C8706 + C8707) * C22723 +
              (C8708 + C8709) * C50720) *
                 C50744) *
                C1544 -
            (((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
               C50821 * C3501) *
                  C50720 +
              (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
               C50821 * C3498) *
                  C22723 +
              (C16232 + C16231) * C22717 + (C16230 + C16229) * C22722) *
                 C50744 +
             ((C8709 + C8708) * C50720 + (C8707 + C8706) * C22723 +
              C41984 * C22717 + C41985 * C22722) *
                 C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C50884 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50885 +
           ((C15701 * C22722 + C15702 * C22717 + C42504 * C22723 +
             C42505 * C50720) *
                C31984 +
            ((C15688 + C15687) * C22722 + (C15686 + C15685) * C22717 +
             (C16637 + C16638) * C22723 + (C16639 + C16640) * C50720) *
                C50744) *
               C1960) *
              C50838 +
          (((C41978 * C22722 + C41979 * C22717 + C43152 * C22723 +
             C43153 * C50720) *
                C31984 +
            (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
             (C9152 + C9153) * C50720) *
                C50744) *
               C50885 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C50884 -
           (((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
              C50821 * C10058) *
                 C50720 +
             (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
              C50821 * C10056) *
                 C22723 +
             (C16640 + C16639) * C22717 + (C16638 + C16637) * C22722) *
                C50744 +
            ((C9153 + C9152) * C50720 + (C9151 + C9150) * C22723 +
             C16635 * C22717 + C16636 * C22722) *
                C31984) *
               C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C1544 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50670) *
              C248 +
          (((C41978 * C22722 + C41979 * C22717 + C43152 * C22723 +
             C43153 * C50720) *
                C31984 +
            (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
             (C9152 + C9153) * C50720) *
                C50744) *
               C50670 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C1544) *
              C249 +
          (((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
             (C7987 + C7986) * C50720) *
                C31984 +
            (C43152 * C22722 + C43153 * C22717 + (C9658 + C9659) * C22723 +
             (C9660 + C9661) * C50720) *
                C50744) *
               C1544 -
           (((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
              C50821 * C9128) *
                 C50720 +
             (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
              C50821 * C9126) *
                 C22723 +
             (C9153 + C9152) * C22717 + (C9151 + C9150) * C22722) *
                C50744 +
            ((C9661 + C9660) * C50720 + (C9659 + C9658) * C22723 +
             C9648 * C22717 + C9649 * C22722) *
                C31984) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C1544 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50670) *
              C50590 * C895 +
          ((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
             C41982 * C22723 + C41983 * C50720) *
                C31984 +
            ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
             (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                C50744) *
               C50670 -
           ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
             (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C1544) *
              C50590 * C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C22722 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C22717 +
             (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
                C31984 +
            ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
             (C41522 + C41523) * C22723 + (C41524 + C41525) * C50720) *
                C50744) *
               C1544 -
           (((C49740 * C1087 + C50545 * C1095 + C49747 * C1088 +
              C50821 * C1096) *
                 C50720 +
             (C49740 * C1083 + C50545 * C1091 + C49747 * C1084 +
              C50821 * C1092) *
                 C22723 +
             (C16026 + C16025) * C22717 + (C16024 + C16023) * C22722) *
                C50744 +
            ((C41525 + C41524) * C50720 + (C41523 + C41522) * C22723 +
             (C16022 + C16021) * C22717 + (C16020 + C16019) * C22722) *
                C31984) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C22722 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C22717 +
            (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
               C31984 +
           ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
            C41978 * C22723 + C41979 * C50720) *
               C50744) *
              C1710 -
          ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
            (C15682 + C15681) * C22722) *
               C50744 +
           (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
            (C15678 + C15677) * C22722) *
               C31984) *
              C1711 +
          ((C15701 * C22722 + C15702 * C22717 + C42504 * C22723 +
            C42505 * C50720) *
               C31984 +
           ((C15688 + C15687) * C22722 + (C15686 + C15685) * C22717 +
            (C16637 + C16638) * C22723 + (C16639 + C16640) * C50720) *
               C50744) *
              C1712 -
          (((C49740 * C16623 + C50545 * C16625 + C49747 * C14733 +
             C50821 * C14736) *
                C50720 +
            (C49740 * C16622 + C50545 * C16624 + C49747 * C14730 +
             C50821 * C14734) *
                C22723 +
            (C17543 + C17542) * C22717 + (C17541 + C17540) * C22722) *
               C50744 +
           ((C16640 + C16639) * C50720 + (C16638 + C16637) * C22723 +
            C17528 * C22717 + C17529 * C22722) *
               C31984) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C50884 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50885 +
           ((C15701 * C22722 + C15702 * C22717 + C42504 * C22723 +
             C42505 * C50720) *
                C31984 +
            ((C15688 + C15687) * C22722 + (C15686 + C15685) * C22717 +
             (C16637 + C16638) * C22723 + (C16639 + C16640) * C50720) *
                C50744) *
               C1960) *
              C50590 * C50830 +
          ((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
             C41982 * C22723 + C41983 * C50720) *
                C31984 +
            ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
             (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                C50744) *
               C50885 -
           ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
             (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C50884 -
           (((C49740 * C4430 + C50545 * C4436 + C49747 * C4431 +
              C50821 * C4437) *
                 C50720 +
             (C49740 * C4427 + C50545 * C4433 + C49747 * C4428 +
              C50821 * C4434) *
                 C22723 +
             (C15700 + C15699) * C22717 + (C15698 + C15697) * C22722) *
                C50744 +
            ((C16232 + C16231) * C50720 + (C16230 + C16229) * C22723 +
             C15703 * C22717 + C15704 * C22722) *
                C31984) *
               C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C1544 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50670) *
              C50590 * C895 +
          ((((C15689 + C15690) * C22722 + (C15691 + C15692) * C22717 +
             C41982 * C22723 + C41983 * C50720) *
                C31984 +
            ((C15693 + C15694) * C22722 + (C15695 + C15696) * C22717 +
             (C16229 + C16230) * C22723 + (C16231 + C16232) * C50720) *
                C50744) *
               C50670 -
           ((C41984 * C50720 + C41985 * C22723 + (C15692 + C15691) * C22717 +
             (C15690 + C15689) * C22722) *
                C50744 +
            ((C7993 + C7992) * C50720 + (C7991 + C7990) * C22723 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C22717 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C22722) *
                C31984) *
               C1544) *
              C50590 * C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C22722 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C22717 +
             (C8314 + C8315) * C22723 + (C8316 + C8317) * C50720) *
                C31984 +
            ((C16019 + C16020) * C22722 + (C16021 + C16022) * C22717 +
             (C41522 + C41523) * C22723 + (C41524 + C41525) * C50720) *
                C50744) *
               C1544 -
           (((C49740 * C1087 + C50545 * C1095 + C49747 * C1088 +
              C50821 * C1096) *
                 C50720 +
             (C49740 * C1083 + C50545 * C1091 + C49747 * C1084 +
              C50821 * C1092) *
                 C22723 +
             (C16026 + C16025) * C22717 + (C16024 + C16023) * C22722) *
                C50744 +
            ((C41525 + C41524) * C50720 + (C41523 + C41522) * C22723 +
             (C16022 + C16021) * C22717 + (C16020 + C16019) * C22722) *
                C31984) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C22722 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C22717 +
             (C7978 + C7979) * C22723 + (C7980 + C7981) * C50720) *
                C31984 +
            ((C15677 + C15678) * C22722 + (C15679 + C15680) * C22717 +
             C41978 * C22723 + C41979 * C50720) *
                C50744) *
               C1544 -
           ((C16635 * C50720 + C16636 * C22723 + (C15684 + C15683) * C22717 +
             (C15682 + C15681) * C22722) *
                C50744 +
            (C41980 * C50720 + C41981 * C22723 + (C15680 + C15679) * C22717 +
             (C15678 + C15677) * C22722) *
                C31984) *
               C50670) *
              C248 +
          (((C41978 * C22722 + C41979 * C22717 + C43152 * C22723 +
             C43153 * C50720) *
                C31984 +
            (C42504 * C22722 + C42505 * C22717 + (C9150 + C9151) * C22723 +
             (C9152 + C9153) * C50720) *
                C50744) *
               C50670 -
           ((C9648 * C50720 + C9649 * C22723 + C41980 * C22717 +
             C41981 * C22722) *
                C50744 +
            ((C7985 + C7984) * C50720 + (C7983 + C7982) * C22723 +
             (C7981 + C7980) * C22717 + (C7979 + C7978) * C22722) *
                C31984) *
               C1544) *
              C249 +
          (((C8002 * C22722 + C8003 * C22717 + (C7989 + C7988) * C22723 +
             (C7987 + C7986) * C50720) *
                C31984 +
            (C43152 * C22722 + C43153 * C22717 + (C9658 + C9659) * C22723 +
             (C9660 + C9661) * C50720) *
                C50744) *
               C1544 -
           (((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
              C50821 * C9128) *
                 C50720 +
             (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
              C50821 * C9126) *
                 C22723 +
             (C9153 + C9152) * C22717 + (C9151 + C9150) * C22722) *
                C50744 +
            ((C9661 + C9660) * C50720 + (C9659 + C9658) * C22723 +
             C9648 * C22717 + C9649 * C22722) *
                C31984) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50606 * C50838 -
           ((C11234 * C25536 + C11235 * C25541 + C11236 * C50875 +
             C11237 * C25540 + C11238 * C50886 + C11239 * C25539) *
                C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50606 * C50642) *
              C50880 +
          (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
             C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                C31984 +
            (C11240 * C25539 + C11241 * C50886 + C11242 * C25540 +
             C11243 * C50875 + C11244 * C25541 + C11245 * C25536) *
                C50744) *
               C50606 * C50642 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50606 * C50838) *
              C50881 +
          ((((C10616 * C124 + C50540 * C131) * C25539 +
             (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
             C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
                C31984 +
            (C13230 * C25539 + C13231 * C50886 + C13072 * C25540 +
             C13073 * C50875 + C13074 * C25541 + C13075 * C25536) *
                C50744) *
               C50606 * C50838 -
           (((C10616 * C4010 + C50540 * C4016) * C25536 +
             (C10616 * C4007 + C50540 * C4013) * C25541 + C13075 * C50875 +
             C13074 * C25540 + C13073 * C50886 + C13072 * C25539) *
                C50744 +
            (C10981 * C25536 + C10980 * C25541 + C10979 * C50875 +
             C10978 * C25540 + C10977 * C50886 + C10976 * C25539) *
                C31984) *
               C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C25539 +
              (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
              C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                 C31984 +
             (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
                C50839 -
            ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
             (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
                C50670) *
               C50838 +
           (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
             (C11534 * C25539 + C11535 * C50886 + C11536 * C25540 +
              C11537 * C50875 + C11538 * C25541 + C11539 * C25536) *
                 C50744) *
                C50670 -
            ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
             (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
              C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                 C31984) *
                C50839) *
               C50642) *
              C251 +
          ((((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
             (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
                C50670 -
            ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
             (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
              C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
              (C10616 * C123 + C50540 * C130) * C25539) *
                 C31984) *
                C50839) *
               C50838 +
           (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
              C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                 C31984 +
             (C45230 + C45231 + C45232 + C45233 + C45234 + C45235) * C50744) *
                C50839 -
            (((C10616 * C9123 + C50540 * C9127) * C25536 +
              (C10616 * C9121 + C50540 * C9125) * C25541 + C12905 * C50875 +
              C12904 * C25540 + C12903 * C50886 + C12902 * C25539) *
                 C50744 +
             (C45235 + C45234 + C45233 + C45232 + C45231 + C45230) * C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C12894 * C25539 + C12895 * C50886 + C11239 * C25540 +
             C11238 * C50875 + C11237 * C25541 + C11236 * C25536) *
                C50744) *
               C50606 * C248 -
           ((C11234 * C25536 + C11235 * C25541 + C11236 * C50875 +
             C11237 * C25540 + C11238 * C50886 + C11239 * C25539) *
                C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50606 * C249 +
           ((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
             C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
                C31984 +
            (C11237 * C25539 + C11236 * C50886 + C11235 * C25540 +
             C11234 * C50875 + C11874 * C25541 + C11875 * C25536) *
                C50744) *
               C50606 * C250) *
              C251 +
          (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
             C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                C31984 +
            (C11240 * C25539 + C11241 * C50886 + C11242 * C25540 +
             C11243 * C50875 + C11244 * C25541 + C11245 * C25536) *
                C50744) *
               C50606 * C249 -
           ((C11243 * C25536 + C11242 * C25541 + C11241 * C50875 +
             C11240 * C25540 + C12899 * C50886 + C12898 * C25539) *
                C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50606 * C248 -
           (((C10616 * C9641 + C50540 * C9645) * C25536 +
             (C10616 * C9639 + C50540 * C9643) * C25541 + C11245 * C50875 +
             C11244 * C25540 + C11243 * C50886 + C11242 * C25539) *
                C50744 +
            (C10767 * C25536 + C10766 * C25541 + C10765 * C50875 +
             C10764 * C25540 + C10763 * C50886 + C10762 * C25539) *
                C31984) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C25539 +
            (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
            C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
               C31984 +
           (C12894 * C25539 + C12895 * C50886 + C11239 * C25540 +
            C11238 * C50875 + C11237 * C25541 + C11236 * C25536) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C11243 * C25536 + C11242 * C25541 + C11241 * C50875 +
            C11240 * C25540 + C12899 * C50886 + C12898 * C25539) *
               C50744 +
           (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
            C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
            (C10616 * C123 + C50540 * C130) * C25539) *
               C31984) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C25539 +
            (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
            C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
               C31984 +
           (C13230 * C25539 + C13231 * C50886 + C13072 * C25540 +
            C13073 * C50875 + C13074 * C25541 + C13075 * C25536) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C10616 * C1434 + C50540 * C1442) * C25536 +
            (C10616 * C1430 + C50540 * C1438) * C25541 +
            (C10616 * C787 + C50540 * C793) * C50875 +
            (C10616 * C778 + C50540 * C783) * C25540 +
            (C10616 * C404 + C50540 * C424) * C50886 +
            (C10616 * C394 + C50540 * C408) * C25539) *
               C50744 +
           ((C10616 * C278 + C50540 * C290) * C25536 +
            (C10616 * C260 + C50540 * C274) * C25541 +
            (C10616 * C263 + C50540 * C283) * C50875 +
            (C10616 * C253 + C50540 * C267) * C25540 +
            (C10616 * C136 + C50540 * C146) * C50886 +
            (C10616 * C125 + C50540 * C132) * C25539) *
               C31984) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C391 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C392 +
           ((C44719 + C44718 + C44717 + C44716 + C44715 + C44714) * C31984 +
            (C14746 * C25539 + C14747 * C50886 + C13844 * C25540 +
             C13845 * C50875 + C13846 * C25541 + C13847 * C25536) *
                C50744) *
               C393) *
              C50590 * C251 +
          (((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
            (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
               C392 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C391 -
           (((C10616 * C10053 + C50540 * C10057) * C25536 +
             (C10616 * C10051 + C50540 * C10055) * C25541 + C18453 * C50875 +
             C18452 * C25540 + C18451 * C50886 + C18450 * C25539) *
                C50744 +
            (C44731 + C44730 + C44729 + C44728 + C44727 + C44726) * C31984) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50839 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50670) *
              C50590 * C50880 +
          (((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
            (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
               C50670 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50839) *
              C50590 * C50881 +
          ((((C10616 * C124 + C50540 * C131) * C25539 +
             (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
             C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
                C31984 +
            (C45024 + C45025 + C45026 + C45027 + C45028 + C45029) * C50744) *
               C50839 -
           (((C10616 * C3494 + C50540 * C3500) * C25536 +
             (C10616 * C3491 + C50540 * C3497) * C25541 + C18614 * C50875 +
             C18613 * C25540 + C18772 * C50886 + C18771 * C25539) *
                C50744 +
            (C45029 + C45028 + C45027 + C45026 + C45025 + C45024) * C31984) *
               C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C25539 +
            (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
            C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
               C31984 +
           (C12894 * C25539 + C12895 * C50886 + C11239 * C25540 +
            C11238 * C50875 + C11237 * C25541 + C11236 * C25536) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C11243 * C25536 + C11242 * C25541 + C11241 * C50875 +
            C11240 * C25540 + C12899 * C50886 + C12898 * C25539) *
               C50744 +
           (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
            C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
            (C10616 * C123 + C50540 * C130) * C25539) *
               C31984) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C25539 +
            (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
            C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
               C31984 +
           (C13230 * C25539 + C13231 * C50886 + C13072 * C25540 +
            C13073 * C50875 + C13074 * C25541 + C13075 * C25536) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C10616 * C1434 + C50540 * C1442) * C25536 +
            (C10616 * C1430 + C50540 * C1438) * C25541 +
            (C10616 * C787 + C50540 * C793) * C50875 +
            (C10616 * C778 + C50540 * C783) * C25540 +
            (C10616 * C404 + C50540 * C424) * C50886 +
            (C10616 * C394 + C50540 * C408) * C25539) *
               C50744 +
           ((C10616 * C278 + C50540 * C290) * C25536 +
            (C10616 * C260 + C50540 * C274) * C25541 +
            (C10616 * C263 + C50540 * C283) * C50875 +
            (C10616 * C253 + C50540 * C267) * C25540 +
            (C10616 * C136 + C50540 * C146) * C50886 +
            (C10616 * C125 + C50540 * C132) * C25539) *
               C31984) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C12894 * C25539 + C12895 * C50886 + C11239 * C25540 +
             C11238 * C50875 + C11237 * C25541 + C11236 * C25536) *
                C50744) *
               C50606 * C248 -
           ((C11234 * C25536 + C11235 * C25541 + C11236 * C50875 +
             C11237 * C25540 + C11238 * C50886 + C11239 * C25539) *
                C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50606 * C249 +
           ((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
             C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
                C31984 +
            (C11237 * C25539 + C11236 * C50886 + C11235 * C25540 +
             C11234 * C50875 + C11874 * C25541 + C11875 * C25536) *
                C50744) *
               C50606 * C250) *
              C251 +
          (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
             C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                C31984 +
            (C11240 * C25539 + C11241 * C50886 + C11242 * C25540 +
             C11243 * C50875 + C11244 * C25541 + C11245 * C25536) *
                C50744) *
               C50606 * C249 -
           ((C11243 * C25536 + C11242 * C25541 + C11241 * C50875 +
             C11240 * C25540 + C12899 * C50886 + C12898 * C25539) *
                C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50606 * C248 -
           (((C10616 * C9641 + C50540 * C9645) * C25536 +
             (C10616 * C9639 + C50540 * C9643) * C25541 + C11245 * C50875 +
             C11244 * C25540 + C11243 * C50886 + C11242 * C25539) *
                C50744 +
            (C10767 * C25536 + C10766 * C25541 + C10765 * C50875 +
             C10764 * C25540 + C10763 * C50886 + C10762 * C25539) *
                C31984) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50606 * C50882 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50606 * C50883 +
           ((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
             C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
                C31984 +
            (C11237 * C25539 + C11236 * C50886 + C11235 * C25540 +
             C11234 * C50875 + C11874 * C25541 + C11875 * C25536) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
             C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                C31984 +
            (C45230 + C45231 + C45232 + C45233 + C45234 + C45235) * C50744) *
               C50606 * C50883 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50606 * C50882 -
           (((C10616 * C9641 + C50540 * C9645) * C25536 +
             (C10616 * C9639 + C50540 * C9643) * C25541 + C11245 * C50875 +
             C11244 * C25540 + C11243 * C50886 + C11242 * C25539) *
                C50744 +
            (C10767 * C25536 + C10766 * C25541 + C10765 * C50875 +
             C10764 * C25540 + C10763 * C50886 + C10762 * C25539) *
                C31984) *
               C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50839 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50670) *
              C50882 +
          (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
            (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
               C50670 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50839) *
              C50883 +
          (((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
             C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
                C31984 +
            (C46118 + C46119 + C46120 + C46121 + C46122 + C46123) * C50744) *
               C50839 -
           (((C10616 * C11518 + C50540 * C11520) * C25536 +
             (C10616 * C11517 + C50540 * C11519) * C25541 + C11539 * C50875 +
             C11538 * C25540 + C11537 * C50886 + C11536 * C25539) *
                C50744 +
            (C46123 + C46122 + C46121 + C46120 + C46119 + C46118) * C31984) *
               C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C25539 +
            (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
            C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
               C31984 +
           (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
              C50606 * C964 -
          ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
           (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
            C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
               C31984) *
              C50606 * C965 +
          ((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
            C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
               C31984 +
           (C11237 * C25539 + C11236 * C50886 + C11235 * C25540 +
            C11234 * C50875 + C11874 * C25541 + C11875 * C25536) *
               C50744) *
              C50606 * C966 -
          (((C10616 * C11866 + C50540 * C11868) * C25536 +
            (C10616 * C11865 + C50540 * C11867) * C25541 + C11875 * C50875 +
            C11874 * C25540 + C11234 * C50886 + C11235 * C25539) *
               C50744 +
           (C11419 * C25536 + C11418 * C25541 + C10758 * C50875 +
            C10759 * C25540 + C10757 * C50886 + C10756 * C25539) *
               C31984) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50606 * C893 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
             C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                C31984 +
            (C45230 + C45231 + C45232 + C45233 + C45234 + C45235) * C50744) *
               C50606 * C50642 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C25539 +
             (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
             C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
                C31984 +
            (C45024 + C45025 + C45026 + C45027 + C45028 + C45029) * C50744) *
               C50606 * C893 -
           (((C10616 * C4010 + C50540 * C4016) * C25536 +
             (C10616 * C4007 + C50540 * C4013) * C25541 + C13075 * C50875 +
             C13074 * C25540 + C13073 * C50886 + C13072 * C25539) *
                C50744 +
            (C10981 * C25536 + C10980 * C25541 + C10979 * C50875 +
             C10978 * C25540 + C10977 * C50886 + C10976 * C25539) *
                C31984) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C391 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C392 +
           ((C44719 + C44718 + C44717 + C44716 + C44715 + C44714) * C31984 +
            (C14746 * C25539 + C14747 * C50886 + C13844 * C25540 +
             C13845 * C50875 + C13846 * C25541 + C13847 * C25536) *
                C50744) *
               C393) *
              C893 +
          (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
            (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
               C392 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C391 -
           (((C10616 * C12138 + C50540 * C12140) * C25536 +
             (C10616 * C12137 + C50540 * C12139) * C25541 + C13847 * C50875 +
             C13846 * C25540 + C13845 * C50886 + C13844 * C25539) *
                C50744 +
            (C45631 + C45630 + C45629 + C45628 + C45627 + C45626) * C31984) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C25539 +
              (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
              C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                 C31984 +
             (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
                C50839 -
            ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
             (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
                C50670) *
               C893 +
           (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
             (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
                C50670 -
            ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
             (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
              C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                 C31984) *
                C50839) *
               C50642) *
              C50830 +
          ((((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
             (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
                C50670 -
            ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
             (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
              C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
              (C10616 * C123 + C50540 * C130) * C25539) *
                 C31984) *
                C50839) *
               C893 +
           (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
              C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                 C31984 +
             (C45230 + C45231 + C45232 + C45233 + C45234 + C45235) * C50744) *
                C50839 -
            (((C10616 * C9123 + C50540 * C9127) * C25536 +
              (C10616 * C9121 + C50540 * C9125) * C25541 + C12905 * C50875 +
              C12904 * C25540 + C12903 * C50886 + C12902 * C25539) *
                 C50744 +
             (C45235 + C45234 + C45233 + C45232 + C45231 + C45230) * C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50606 * C893 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
             C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                C31984 +
            (C45230 + C45231 + C45232 + C45233 + C45234 + C45235) * C50744) *
               C50606 * C50642 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C25539 +
             (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
             C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
                C31984 +
            (C45024 + C45025 + C45026 + C45027 + C45028 + C45029) * C50744) *
               C50606 * C893 -
           (((C10616 * C4010 + C50540 * C4016) * C25536 +
             (C10616 * C4007 + C50540 * C4013) * C25541 + C13075 * C50875 +
             C13074 * C25540 + C13073 * C50886 + C13072 * C25539) *
                C50744 +
            (C10981 * C25536 + C10980 * C25541 + C10979 * C50875 +
             C10978 * C25540 + C10977 * C50886 + C10976 * C25539) *
                C31984) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C25539 +
            (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
            C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
               C31984 +
           (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
              C50606 * C964 -
          ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
           (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
            C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
               C31984) *
              C50606 * C965 +
          ((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
            C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
               C31984 +
           (C11237 * C25539 + C11236 * C50886 + C11235 * C25540 +
            C11234 * C50875 + C11874 * C25541 + C11875 * C25536) *
               C50744) *
              C50606 * C966 -
          (((C10616 * C11866 + C50540 * C11868) * C25536 +
            (C10616 * C11865 + C50540 * C11867) * C25541 + C11875 * C50875 +
            C11874 * C25540 + C11234 * C50886 + C11235 * C25539) *
               C50744 +
           (C11419 * C25536 + C11418 * C25541 + C10758 * C50875 +
            C10759 * C25540 + C10757 * C50886 + C10756 * C25539) *
               C31984) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C25539 +
              (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
              C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                 C31984 +
             (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
                C1544 -
            ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
             (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
                C50670) *
               C50838 +
           (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
             (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
                C50670 -
            ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
             (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
              C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                 C31984) *
                C1544) *
               C50642) *
              C50830 +
          ((((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
             (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
                C50670 -
            ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
             (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
              C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
              (C10616 * C123 + C50540 * C130) * C25539) *
                 C31984) *
                C1544) *
               C50838 +
           (((C10760 * C25539 + C10761 * C50886 + C10762 * C25540 +
              C10763 * C50875 + C10764 * C25541 + C10765 * C25536) *
                 C31984 +
             (C45230 + C45231 + C45232 + C45233 + C45234 + C45235) * C50744) *
                C1544 -
            (((C10616 * C9123 + C50540 * C9127) * C25536 +
              (C10616 * C9121 + C50540 * C9125) * C25541 + C12905 * C50875 +
              C12904 * C25540 + C12903 * C50886 + C12902 * C25539) *
                 C50744 +
             (C45235 + C45234 + C45233 + C45232 + C45231 + C45230) * C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50884 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50885 +
           ((C44719 + C44718 + C44717 + C44716 + C44715 + C44714) * C31984 +
            (C46514 + C46515 + C46516 + C46517 + C46518 + C46519) * C50744) *
               C1960) *
              C50838 +
          (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
            (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
               C50885 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C50884 -
           (((C10616 * C12138 + C50540 * C12140) * C25536 +
             (C10616 * C12137 + C50540 * C12139) * C25541 + C13847 * C50875 +
             C13846 * C25540 + C13845 * C50886 + C13844 * C25539) *
                C50744 +
            (C45631 + C45630 + C45629 + C45628 + C45627 + C45626) * C31984) *
               C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C1544 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50670) *
              C248 +
          (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
            (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
               C50670 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C1544) *
              C249 +
          (((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
             C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
                C31984 +
            (C46118 + C46119 + C46120 + C46121 + C46122 + C46123) * C50744) *
               C1544 -
           (((C10616 * C11518 + C50540 * C11520) * C25536 +
             (C10616 * C11517 + C50540 * C11519) * C25541 + C11539 * C50875 +
             C11538 * C25540 + C11537 * C50886 + C11536 * C25539) *
                C50744 +
            (C46123 + C46122 + C46121 + C46120 + C46119 + C46118) * C31984) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C1544 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50670) *
              C50590 * C895 +
          (((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
            (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
               C50670 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C25539 +
             (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
             C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
                C31984 +
            (C45024 + C45025 + C45026 + C45027 + C45028 + C45029) * C50744) *
               C1544 -
           (((C10616 * C3494 + C50540 * C3500) * C25536 +
             (C10616 * C3491 + C50540 * C3497) * C25541 + C18614 * C50875 +
             C18613 * C25540 + C18772 * C50886 + C18771 * C25539) *
                C50744 +
            (C45029 + C45028 + C45027 + C45026 + C45025 + C45024) * C31984) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C25539 +
            (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
            C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
               C31984 +
           (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
              C1710 -
          ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
           (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
              C1711 +
          ((C44719 + C44718 + C44717 + C44716 + C44715 + C44714) * C31984 +
           (C46514 + C46515 + C46516 + C46517 + C46518 + C46519) * C50744) *
              C1712 -
          (((C10616 * C14731 + C50540 * C14735) * C25536 +
            (C10616 * C14729 + C50540 * C14732) * C25541 + C19385 * C50875 +
            C19384 * C25540 + C20285 * C50886 + C20284 * C25539) *
               C50744 +
           (C46519 + C46518 + C46517 + C46516 + C46515 + C46514) * C31984) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C50884 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50885 +
           ((C44719 + C44718 + C44717 + C44716 + C44715 + C44714) * C31984 +
            (C46514 + C46515 + C46516 + C46517 + C46518 + C46519) * C50744) *
               C1960) *
              C50590 * C50830 +
          (((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
            (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
               C50885 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C50884 -
           (((C10616 * C10053 + C50540 * C10057) * C25536 +
             (C10616 * C10051 + C50540 * C10055) * C25541 + C18453 * C50875 +
             C18452 * C25540 + C18451 * C50886 + C18450 * C25539) *
                C50744 +
            (C44731 + C44730 + C44729 + C44728 + C44727 + C44726) * C31984) *
               C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C1544 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50670) *
              C50590 * C895 +
          (((C44720 + C44721 + C44722 + C44723 + C44724 + C44725) * C31984 +
            (C44726 + C44727 + C44728 + C44729 + C44730 + C44731) * C50744) *
               C50670 -
           ((C44725 + C44724 + C44723 + C44722 + C44721 + C44720) * C50744 +
            (C10763 * C25536 + C10762 * C25541 + C10761 * C50875 +
             C10760 * C25540 + (C10616 * C134 + C50540 * C144) * C50886 +
             (C10616 * C123 + C50540 * C130) * C25539) *
                C31984) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C25539 +
             (C10616 * C135 + C50540 * C145) * C50886 + C10976 * C25540 +
             C10977 * C50875 + C10978 * C25541 + C10979 * C25536) *
                C31984 +
            (C45024 + C45025 + C45026 + C45027 + C45028 + C45029) * C50744) *
               C1544 -
           (((C10616 * C3494 + C50540 * C3500) * C25536 +
             (C10616 * C3491 + C50540 * C3497) * C25541 + C18614 * C50875 +
             C18613 * C25540 + C18772 * C50886 + C18771 * C25539) *
                C50744 +
            (C45029 + C45028 + C45027 + C45026 + C45025 + C45024) * C31984) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C25539 +
             (C10616 * C133 + C50540 * C143) * C50886 + C10752 * C25540 +
             C10753 * C50875 + C10754 * C25541 + C10755 * C25536) *
                C31984 +
            (C44708 + C44709 + C44710 + C44711 + C44712 + C44713) * C50744) *
               C1544 -
           ((C44714 + C44715 + C44716 + C44717 + C44718 + C44719) * C50744 +
            (C44713 + C44712 + C44711 + C44710 + C44709 + C44708) * C31984) *
               C50670) *
              C248 +
          (((C45224 + C45225 + C45226 + C45227 + C45228 + C45229) * C31984 +
            (C45626 + C45627 + C45628 + C45629 + C45630 + C45631) * C50744) *
               C50670 -
           ((C45229 + C45228 + C45227 + C45226 + C45225 + C45224) * C50744 +
            (C10757 * C25536 + C10756 * C25541 + C10755 * C50875 +
             C10754 * C25540 + C10753 * C50886 + C10752 * C25539) *
                C31984) *
               C1544) *
              C249 +
          (((C10754 * C25539 + C10755 * C50886 + C10756 * C25540 +
             C10757 * C50875 + C10759 * C25541 + C10758 * C25536) *
                C31984 +
            (C46118 + C46119 + C46120 + C46121 + C46122 + C46123) * C50744) *
               C1544 -
           (((C10616 * C11518 + C50540 * C11520) * C25536 +
             (C10616 * C11517 + C50540 * C11519) * C25541 + C11539 * C50875 +
             C11538 * C25540 + C11537 * C50886 + C11536 * C25539) *
                C50744 +
            (C46123 + C46122 + C46121 + C46120 + C46119 + C46118) * C31984) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50606 * C50838 -
           ((C11537 * C50720 + C11536 * C22723 + C11535 * C22717 +
             C11534 * C22722) *
                C38216 +
            (C11236 * C50720 + C11237 * C22723 + C11238 * C22717 +
             C11239 * C22722) *
                C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50606 * C50642) *
              C50880 +
          (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
             C10763 * C50720) *
                C50887 +
            (C11240 * C22722 + C11241 * C22717 + C11242 * C22723 +
             C11243 * C50720) *
                C50878 +
            (C12902 * C22722 + C12903 * C22717 + C12904 * C22723 +
             C12905 * C50720) *
                C38216) *
               C50606 * C50642 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50606 * C50838) *
              C50881 +
          ((((C10616 * C124 + C50540 * C131) * C22722 +
             (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
             C10977 * C50720) *
                C50887 +
            (C13230 * C22722 + C13231 * C22717 + C13072 * C22723 +
             C13073 * C50720) *
                C50878 +
            (C18771 * C22722 + C18772 * C22717 + C18613 * C22723 +
             C18614 * C50720) *
                C38216) *
               C50606 * C50838 -
           (((C10616 * C3494 + C50540 * C3500) * C50720 +
             (C10616 * C3491 + C50540 * C3497) * C22723 + C18614 * C22717 +
             C18613 * C22722) *
                C38216 +
            (C13075 * C50720 + C13074 * C22723 + C13073 * C22717 +
             C13072 * C22722) *
                C50878 +
            (C10979 * C50720 + C10978 * C22723 + C10977 * C22717 +
             C10976 * C22722) *
                C50887) *
               C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C22722 +
              (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
              C10753 * C50720) *
                 C50887 +
             (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
                C50839 -
            ((C47404 + C47405 + C47406 + C47407) * C38216 +
             (C47403 + C47402 + C47401 + C47400) * C50878 +
             (C47399 + C47398 + C47397 + C47396) * C50887) *
                C50670) *
               C50838 +
           (((C47920 + C47921 + C47922 + C47923) * C50887 +
             (C47924 + C47925 + C47926 + C47927) * C50878 +
             (C13844 * C22722 + C13845 * C22717 + C13846 * C22723 +
              C13847 * C50720) *
                 C38216) *
                C50670 -
            ((C47927 + C47926 + C47925 + C47924) * C38216 +
             (C47923 + C47922 + C47921 + C47920) * C50878 +
             (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
              C10752 * C22722) *
                 C50887) *
                C50839) *
               C50642) *
              C251 +
          ((((C47408 + C47409 + C47410 + C47411) * C50887 +
             (C47412 + C47413 + C47414 + C47415) * C50878 +
             (C47416 + C47417 + C47418 + C47419) * C38216) *
                C50670 -
            (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
             (C10761 * C50720 + C10760 * C22723 +
              (C10616 * C134 + C50540 * C144) * C22717 +
              (C10616 * C123 + C50540 * C130) * C22722) *
                 C50887) *
                C50839) *
               C50838 +
           (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
              C10763 * C50720) *
                 C50887 +
             (C47928 + C47929 + C47930 + C47931) * C50878 +
             (C47932 + C47933 + C47934 + C47935) * C38216) *
                C50839 -
            (((C10616 * C10053 + C50540 * C10057) * C50720 +
              (C10616 * C10051 + C50540 * C10055) * C22723 + C18453 * C22717 +
              C18452 * C22722) *
                 C38216 +
             (C47935 + C47934 + C47933 + C47932) * C50878 +
             (C47931 + C47930 + C47929 + C47928) * C50887) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C12894 * C22722 + C12895 * C22717 + C11239 * C22723 +
             C11238 * C50720) *
                C50878 +
            (C12897 * C22722 + C12896 * C22717 + C11534 * C22723 +
             C11535 * C50720) *
                C38216) *
               C50606 * C248 -
           ((C11537 * C50720 + C11536 * C22723 + C11535 * C22717 +
             C11534 * C22722) *
                C38216 +
            (C11236 * C50720 + C11237 * C22723 + C11238 * C22717 +
             C11239 * C22722) *
                C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50606 * C249 +
           ((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
             C10757 * C50720) *
                C50887 +
            (C11237 * C22722 + C11236 * C22717 + C11235 * C22723 +
             C11234 * C50720) *
                C50878 +
            (C11536 * C22722 + C11537 * C22717 + C11538 * C22723 +
             C11539 * C50720) *
                C38216) *
               C50606 * C250) *
              C251 +
          (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
             C10763 * C50720) *
                C50887 +
            (C11240 * C22722 + C11241 * C22717 + C11242 * C22723 +
             C11243 * C50720) *
                C50878 +
            (C12902 * C22722 + C12903 * C22717 + C12904 * C22723 +
             C12905 * C50720) *
                C38216) *
               C50606 * C249 -
           ((C12903 * C50720 + C12902 * C22723 + C12901 * C22717 +
             C12900 * C22722) *
                C38216 +
            (C11241 * C50720 + C11240 * C22723 + C12899 * C22717 +
             C12898 * C22722) *
                C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50606 * C248 -
           (((C10616 * C9123 + C50540 * C9127) * C50720 +
             (C10616 * C9121 + C50540 * C9125) * C22723 + C12905 * C22717 +
             C12904 * C22722) *
                C38216 +
            (C11245 * C50720 + C11244 * C22723 + C11243 * C22717 +
             C11242 * C22722) *
                C50878 +
            (C10765 * C50720 + C10764 * C22723 + C10763 * C22717 +
             C10762 * C22722) *
                C50887) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C22722 +
            (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
            C10753 * C50720) *
               C50887 +
           (C12894 * C22722 + C12895 * C22717 + C11239 * C22723 +
            C11238 * C50720) *
               C50878 +
           (C12897 * C22722 + C12896 * C22717 + C11534 * C22723 +
            C11535 * C50720) *
               C38216) *
              C50606 * C50590 * C113 -
          ((C12903 * C50720 + C12902 * C22723 + C12901 * C22717 +
            C12900 * C22722) *
               C38216 +
           (C11241 * C50720 + C11240 * C22723 + C12899 * C22717 +
            C12898 * C22722) *
               C50878 +
           (C10761 * C50720 + C10760 * C22723 +
            (C10616 * C134 + C50540 * C144) * C22717 +
            (C10616 * C123 + C50540 * C130) * C22722) *
               C50887) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C22722 +
            (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
            C10977 * C50720) *
               C50887 +
           (C13230 * C22722 + C13231 * C22717 + C13072 * C22723 +
            C13073 * C50720) *
               C50878 +
           (C18771 * C22722 + C18772 * C22717 + C18613 * C22723 +
            C18614 * C50720) *
               C38216) *
              C50606 * C50590 * C115 -
          (((C10616 * C1087 + C50540 * C1095) * C50720 +
            (C10616 * C1083 + C50540 * C1091) * C22723 +
            (C10616 * C419 + C50540 * C431) * C22717 +
            (C10616 * C401 + C50540 * C415) * C22722) *
               C38216 +
           ((C10616 * C787 + C50540 * C793) * C50720 +
            (C10616 * C778 + C50540 * C783) * C22723 +
            (C10616 * C404 + C50540 * C424) * C22717 +
            (C10616 * C394 + C50540 * C408) * C22722) *
               C50878 +
           ((C10616 * C263 + C50540 * C283) * C50720 +
            (C10616 * C253 + C50540 * C267) * C22723 +
            (C10616 * C136 + C50540 * C146) * C22717 +
            (C10616 * C125 + C50540 * C132) * C22722) *
               C50887) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C391 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C392 +
           (C47424 * C50887 + (C47407 + C47406 + C47405 + C47404) * C50878 +
            (C20284 * C22722 + C20285 * C22717 + C19384 * C22723 +
             C19385 * C50720) *
                C38216) *
               C393) *
              C50590 * C251 +
          (((C47408 + C47409 + C47410 + C47411) * C50887 +
            (C47412 + C47413 + C47414 + C47415) * C50878 +
            (C47416 + C47417 + C47418 + C47419) * C38216) *
               C392 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C391 -
           (((C10616 * C16623 + C50540 * C16625) * C50720 +
             (C10616 * C16622 + C50540 * C16624) * C22723 + C21062 * C22717 +
             C21061 * C22722) *
                C38216 +
            (C47419 + C47418 + C47417 + C47416) * C50878 + C47425 * C50887) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50839 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50670) *
              C50590 * C50880 +
          (((C47408 + C47409 + C47410 + C47411) * C50887 +
            (C47412 + C47413 + C47414 + C47415) * C50878 +
            (C47416 + C47417 + C47418 + C47419) * C38216) *
               C50670 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50839) *
              C50590 * C50881 +
          ((((C10616 * C124 + C50540 * C131) * C22722 +
             (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
             C10977 * C50720) *
                C50887 +
            (C47718 + C47719 + C47720 + C47721) * C50878 +
            (C47722 + C47723 + C47724 + C47725) * C38216) *
               C50839 -
           (((C10616 * C4430 + C50540 * C4436) * C50720 +
             (C10616 * C4427 + C50540 * C4433) * C22723 + C21272 * C22717 +
             C21271 * C22722) *
                C38216 +
            (C47725 + C47724 + C47723 + C47722) * C50878 +
            (C47721 + C47720 + C47719 + C47718) * C50887) *
               C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10616 * C122 + C50540 * C129) * C22722 +
                    (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
                    C10753 * C50720) *
                       C50887 +
                   (C12894 * C22722 + C12895 * C22717 + C11239 * C22723 +
                    C11238 * C50720) *
                       C50878 +
                   (C12897 * C22722 + C12896 * C22717 + C11534 * C22723 +
                    C11535 * C50720) *
                       C38216) *
                      C50606 * C50590 * C113 -
                  ((C12903 * C50720 + C12902 * C22723 + C12901 * C22717 +
                    C12900 * C22722) *
                       C38216 +
                   (C11241 * C50720 + C11240 * C22723 + C12899 * C22717 +
                    C12898 * C22722) *
                       C50878 +
                   (C10761 * C50720 + C10760 * C22723 +
                    (C10616 * C134 + C50540 * C144) * C22717 +
                    (C10616 * C123 + C50540 * C130) * C22722) *
                       C50887) *
                      C50606 * C50590 * C114 +
                  (((C10616 * C124 + C50540 * C131) * C22722 +
                    (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
                    C10977 * C50720) *
                       C50887 +
                   (C13230 * C22722 + C13231 * C22717 + C13072 * C22723 +
                    C13073 * C50720) *
                       C50878 +
                   (C18771 * C22722 + C18772 * C22717 + C18613 * C22723 +
                    C18614 * C50720) *
                       C38216) *
                      C50606 * C50590 * C115 -
                  (((C10616 * C1087 + C50540 * C1095) * C50720 +
                    (C10616 * C1083 + C50540 * C1091) * C22723 +
                    (C10616 * C419 + C50540 * C431) * C22717 +
                    (C10616 * C401 + C50540 * C415) * C22722) *
                       C38216 +
                   ((C10616 * C787 + C50540 * C793) * C50720 +
                    (C10616 * C778 + C50540 * C783) * C22723 +
                    (C10616 * C404 + C50540 * C424) * C22717 +
                    (C10616 * C394 + C50540 * C408) * C22722) *
                       C50878 +
                   ((C10616 * C263 + C50540 * C283) * C50720 +
                    (C10616 * C253 + C50540 * C267) * C22723 +
                    (C10616 * C136 + C50540 * C146) * C22717 +
                    (C10616 * C125 + C50540 * C132) * C22722) *
                       C50887) *
                      C50606 * C50590 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C10616 * C122 + C50540 * C129) * C22722 +
                     (C10616 * C133 + C50540 * C143) * C22717 +
                     C10752 * C22723 + C10753 * C50720) *
                        C50887 +
                    (C12894 * C22722 + C12895 * C22717 + C11239 * C22723 +
                     C11238 * C50720) *
                        C50878 +
                    (C12897 * C22722 + C12896 * C22717 + C11534 * C22723 +
                     C11535 * C50720) *
                        C38216) *
                       C50606 * C248 -
                   ((C11537 * C50720 + C11536 * C22723 + C11535 * C22717 +
                     C11534 * C22722) *
                        C38216 +
                    (C11236 * C50720 + C11237 * C22723 + C11238 * C22717 +
                     C11239 * C22722) *
                        C50878 +
                    (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
                     C10752 * C22722) *
                        C50887) *
                       C50606 * C249 +
                   ((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
                     C10757 * C50720) *
                        C50887 +
                    (C11237 * C22722 + C11236 * C22717 + C11235 * C22723 +
                     C11234 * C50720) *
                        C50878 +
                    (C11536 * C22722 + C11537 * C22717 + C11538 * C22723 +
                     C11539 * C50720) *
                        C38216) *
                       C50606 * C250) *
                      C251 +
                  (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
                     C10763 * C50720) *
                        C50887 +
                    (C11240 * C22722 + C11241 * C22717 + C11242 * C22723 +
                     C11243 * C50720) *
                        C50878 +
                    (C12902 * C22722 + C12903 * C22717 + C12904 * C22723 +
                     C12905 * C50720) *
                        C38216) *
                       C50606 * C249 -
                   ((C12903 * C50720 + C12902 * C22723 + C12901 * C22717 +
                     C12900 * C22722) *
                        C38216 +
                    (C11241 * C50720 + C11240 * C22723 + C12899 * C22717 +
                     C12898 * C22722) *
                        C50878 +
                    (C10761 * C50720 + C10760 * C22723 +
                     (C10616 * C134 + C50540 * C144) * C22717 +
                     (C10616 * C123 + C50540 * C130) * C22722) *
                        C50887) *
                       C50606 * C248 -
                   (((C10616 * C9123 + C50540 * C9127) * C50720 +
                     (C10616 * C9121 + C50540 * C9125) * C22723 +
                     C12905 * C22717 + C12904 * C22722) *
                        C38216 +
                    (C11245 * C50720 + C11244 * C22723 + C11243 * C22717 +
                     C11242 * C22722) *
                        C50878 +
                    (C10765 * C50720 + C10764 * C22723 + C10763 * C22717 +
                     C10762 * C22722) *
                        C50887) *
                       C50606 * C250) *
                      C50577)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50606 * C50882 -
           (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50606 * C50883 +
           ((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
             C10757 * C50720) *
                C50887 +
            (C11237 * C22722 + C11236 * C22717 + C11235 * C22723 +
             C11234 * C50720) *
                C50878 +
            (C11536 * C22722 + C11537 * C22717 + C11538 * C22723 +
             C11539 * C50720) *
                C38216) *
               C50606 * C1199) *
              C50830 +
          (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
             C10763 * C50720) *
                C50887 +
            (C47928 + C47929 + C47930 + C47931) * C50878 +
            (C47932 + C47933 + C47934 + C47935) * C38216) *
               C50606 * C50883 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50606 * C50882 -
           (((C10616 * C9123 + C50540 * C9127) * C50720 +
             (C10616 * C9121 + C50540 * C9125) * C22723 + C12905 * C22717 +
             C12904 * C22722) *
                C38216 +
            (C11245 * C50720 + C11244 * C22723 + C11243 * C22717 +
             C11242 * C22722) *
                C50878 +
            (C10765 * C50720 + C10764 * C22723 + C10763 * C22717 +
             C10762 * C22722) *
                C50887) *
               C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50839 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50670) *
              C50882 +
          (((C47920 + C47921 + C47922 + C47923) * C50887 +
            (C47924 + C47925 + C47926 + C47927) * C50878 +
            (C48326 + C48327 + C48328 + C48329) * C38216) *
               C50670 -
           (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50839) *
              C50883 +
          (((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
             C10757 * C50720) *
                C50887 +
            (C48819 + C48820 + C48821 + C48822) * C50878 +
            (C48823 + C48824 + C48825 + C48826) * C38216) *
               C50839 -
           (((C10616 * C12138 + C50540 * C12140) * C50720 +
             (C10616 * C12137 + C50540 * C12139) * C22723 + C13847 * C22717 +
             C13846 * C22722) *
                C38216 +
            (C48826 + C48825 + C48824 + C48823) * C50878 +
            (C48822 + C48821 + C48820 + C48819) * C50887) *
               C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C22722 +
            (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
            C10753 * C50720) *
               C50887 +
           (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
              C50606 * C964 -
          ((C47927 + C47926 + C47925 + C47924) * C38216 +
           (C47923 + C47922 + C47921 + C47920) * C50878 +
           (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
            C10752 * C22722) *
               C50887) *
              C50606 * C965 +
          ((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
            C10757 * C50720) *
               C50887 +
           (C11237 * C22722 + C11236 * C22717 + C11235 * C22723 +
            C11234 * C50720) *
               C50878 +
           (C11536 * C22722 + C11537 * C22717 + C11538 * C22723 +
            C11539 * C50720) *
               C38216) *
              C50606 * C966 -
          (((C10616 * C11518 + C50540 * C11520) * C50720 +
            (C10616 * C11517 + C50540 * C11519) * C22723 + C11539 * C22717 +
            C11538 * C22722) *
               C38216 +
           (C11875 * C50720 + C11874 * C22723 + C11234 * C22717 +
            C11235 * C22722) *
               C50878 +
           (C10758 * C50720 + C10759 * C22723 + C10757 * C22717 +
            C10756 * C22722) *
               C50887) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50606 * C893 -
           ((C47927 + C47926 + C47925 + C47924) * C38216 +
            (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
             C10763 * C50720) *
                C50887 +
            (C47928 + C47929 + C47930 + C47931) * C50878 +
            (C47932 + C47933 + C47934 + C47935) * C38216) *
               C50606 * C50642 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C22722 +
             (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
             C10977 * C50720) *
                C50887 +
            (C47718 + C47719 + C47720 + C47721) * C50878 +
            (C47722 + C47723 + C47724 + C47725) * C38216) *
               C50606 * C893 -
           (((C10616 * C3494 + C50540 * C3500) * C50720 +
             (C10616 * C3491 + C50540 * C3497) * C22723 + C18614 * C22717 +
             C18613 * C22722) *
                C38216 +
            (C13075 * C50720 + C13074 * C22723 + C13073 * C22717 +
             C13072 * C22722) *
                C50878 +
            (C10979 * C50720 + C10978 * C22723 + C10977 * C22717 +
             C10976 * C22722) *
                C50887) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C391 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C392 +
           (C47424 * C50887 + (C47407 + C47406 + C47405 + C47404) * C50878 +
            (C20284 * C22722 + C20285 * C22717 + C19384 * C22723 +
             C19385 * C50720) *
                C38216) *
               C393) *
              C893 +
          (((C47920 + C47921 + C47922 + C47923) * C50887 +
            (C47924 + C47925 + C47926 + C47927) * C50878 +
            (C48326 + C48327 + C48328 + C48329) * C38216) *
               C392 -
           (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C391 -
           (((C10616 * C14731 + C50540 * C14735) * C50720 +
             (C10616 * C14729 + C50540 * C14732) * C22723 + C19385 * C22717 +
             C19384 * C22722) *
                C38216 +
            (C48329 + C48328 + C48327 + C48326) * C50878 + C48332 * C50887) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C22722 +
              (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
              C10753 * C50720) *
                 C50887 +
             (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
                C50839 -
            ((C47404 + C47405 + C47406 + C47407) * C38216 +
             (C47403 + C47402 + C47401 + C47400) * C50878 +
             (C47399 + C47398 + C47397 + C47396) * C50887) *
                C50670) *
               C893 +
           (((C47920 + C47921 + C47922 + C47923) * C50887 +
             (C47924 + C47925 + C47926 + C47927) * C50878 +
             (C48326 + C48327 + C48328 + C48329) * C38216) *
                C50670 -
            (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
             (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
              C10752 * C22722) *
                 C50887) *
                C50839) *
               C50642) *
              C50830 +
          ((((C47408 + C47409 + C47410 + C47411) * C50887 +
             (C47412 + C47413 + C47414 + C47415) * C50878 +
             (C47416 + C47417 + C47418 + C47419) * C38216) *
                C50670 -
            (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
             (C10761 * C50720 + C10760 * C22723 +
              (C10616 * C134 + C50540 * C144) * C22717 +
              (C10616 * C123 + C50540 * C130) * C22722) *
                 C50887) *
                C50839) *
               C893 +
           (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
              C10763 * C50720) *
                 C50887 +
             (C47928 + C47929 + C47930 + C47931) * C50878 +
             (C47932 + C47933 + C47934 + C47935) * C38216) *
                C50839 -
            (((C10616 * C10053 + C50540 * C10057) * C50720 +
              (C10616 * C10051 + C50540 * C10055) * C22723 + C18453 * C22717 +
              C18452 * C22722) *
                 C38216 +
             (C47935 + C47934 + C47933 + C47932) * C50878 +
             (C47931 + C47930 + C47929 + C47928) * C50887) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50606 * C893 -
           ((C47927 + C47926 + C47925 + C47924) * C38216 +
            (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
             C10763 * C50720) *
                C50887 +
            (C47928 + C47929 + C47930 + C47931) * C50878 +
            (C47932 + C47933 + C47934 + C47935) * C38216) *
               C50606 * C50642 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C22722 +
             (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
             C10977 * C50720) *
                C50887 +
            (C47718 + C47719 + C47720 + C47721) * C50878 +
            (C47722 + C47723 + C47724 + C47725) * C38216) *
               C50606 * C893 -
           (((C10616 * C3494 + C50540 * C3500) * C50720 +
             (C10616 * C3491 + C50540 * C3497) * C22723 + C18614 * C22717 +
             C18613 * C22722) *
                C38216 +
            (C13075 * C50720 + C13074 * C22723 + C13073 * C22717 +
             C13072 * C22722) *
                C50878 +
            (C10979 * C50720 + C10978 * C22723 + C10977 * C22717 +
             C10976 * C22722) *
                C50887) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C22722 +
            (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
            C10753 * C50720) *
               C50887 +
           (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
              C50606 * C964 -
          ((C47927 + C47926 + C47925 + C47924) * C38216 +
           (C47923 + C47922 + C47921 + C47920) * C50878 +
           (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
            C10752 * C22722) *
               C50887) *
              C50606 * C965 +
          ((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
            C10757 * C50720) *
               C50887 +
           (C11237 * C22722 + C11236 * C22717 + C11235 * C22723 +
            C11234 * C50720) *
               C50878 +
           (C11536 * C22722 + C11537 * C22717 + C11538 * C22723 +
            C11539 * C50720) *
               C38216) *
              C50606 * C966 -
          (((C10616 * C11518 + C50540 * C11520) * C50720 +
            (C10616 * C11517 + C50540 * C11519) * C22723 + C11539 * C22717 +
            C11538 * C22722) *
               C38216 +
           (C11875 * C50720 + C11874 * C22723 + C11234 * C22717 +
            C11235 * C22722) *
               C50878 +
           (C10758 * C50720 + C10759 * C22723 + C10757 * C22717 +
            C10756 * C22722) *
               C50887) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C22722 +
              (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
              C10753 * C50720) *
                 C50887 +
             (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
                C1544 -
            (C49223 * C38216 + (C47403 + C47402 + C47401 + C47400) * C50878 +
             (C47399 + C47398 + C47397 + C47396) * C50887) *
                C50670) *
               C50838 +
           (((C47920 + C47921 + C47922 + C47923) * C50887 +
             (C47924 + C47925 + C47926 + C47927) * C50878 +
             (C48326 + C48327 + C48328 + C48329) * C38216) *
                C50670 -
            (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
             (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
              C10752 * C22722) *
                 C50887) *
                C1544) *
               C50642) *
              C50830 +
          ((((C47408 + C47409 + C47410 + C47411) * C50887 +
             (C47412 + C47413 + C47414 + C47415) * C50878 +
             (C47416 + C47417 + C47418 + C47419) * C38216) *
                C50670 -
            (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
             (C10761 * C50720 + C10760 * C22723 +
              (C10616 * C134 + C50540 * C144) * C22717 +
              (C10616 * C123 + C50540 * C130) * C22722) *
                 C50887) *
                C1544) *
               C50838 +
           (((C10760 * C22722 + C10761 * C22717 + C10762 * C22723 +
              C10763 * C50720) *
                 C50887 +
             (C47928 + C47929 + C47930 + C47931) * C50878 +
             (C47932 + C47933 + C47934 + C47935) * C38216) *
                C1544 -
            (((C10616 * C10053 + C50540 * C10057) * C50720 +
              (C10616 * C10051 + C50540 * C10055) * C22723 + C18453 * C22717 +
              C18452 * C22722) *
                 C38216 +
             (C47935 + C47934 + C47933 + C47932) * C50878 +
             (C47931 + C47930 + C47929 + C47928) * C50887) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50884 -
           (C49223 * C38216 + (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50885 +
           (C47424 * C50887 + (C47407 + C47406 + C47405 + C47404) * C50878 +
            (C49218 + C49219 + C49220 + C49221) * C38216) *
               C1960) *
              C50838 +
          (((C47920 + C47921 + C47922 + C47923) * C50887 +
            (C47924 + C47925 + C47926 + C47927) * C50878 +
            (C48326 + C48327 + C48328 + C48329) * C38216) *
               C50885 -
           (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C50884 -
           (((C10616 * C14731 + C50540 * C14735) * C50720 +
             (C10616 * C14729 + C50540 * C14732) * C22723 + C19385 * C22717 +
             C19384 * C22722) *
                C38216 +
            (C48329 + C48328 + C48327 + C48326) * C50878 + C48332 * C50887) *
               C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50670) *
              C248 +
          (((C47920 + C47921 + C47922 + C47923) * C50887 +
            (C47924 + C47925 + C47926 + C47927) * C50878 +
            (C48326 + C48327 + C48328 + C48329) * C38216) *
               C50670 -
           (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C1544) *
              C249 +
          (((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
             C10757 * C50720) *
                C50887 +
            (C48819 + C48820 + C48821 + C48822) * C50878 +
            (C48823 + C48824 + C48825 + C48826) * C38216) *
               C1544 -
           (((C10616 * C12138 + C50540 * C12140) * C50720 +
             (C10616 * C12137 + C50540 * C12139) * C22723 + C13847 * C22717 +
             C13846 * C22722) *
                C38216 +
            (C48826 + C48825 + C48824 + C48823) * C50878 +
            (C48822 + C48821 + C48820 + C48819) * C50887) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50670) *
              C50590 * C895 +
          (((C47408 + C47409 + C47410 + C47411) * C50887 +
            (C47412 + C47413 + C47414 + C47415) * C50878 +
            (C47416 + C47417 + C47418 + C47419) * C38216) *
               C50670 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C22722 +
             (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
             C10977 * C50720) *
                C50887 +
            (C47718 + C47719 + C47720 + C47721) * C50878 +
            (C47722 + C47723 + C47724 + C47725) * C38216) *
               C1544 -
           (((C10616 * C4430 + C50540 * C4436) * C50720 +
             (C10616 * C4427 + C50540 * C4433) * C22723 + C21272 * C22717 +
             C21271 * C22722) *
                C38216 +
            (C47725 + C47724 + C47723 + C47722) * C50878 +
            (C47721 + C47720 + C47719 + C47718) * C50887) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C22722 +
            (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
            C10753 * C50720) *
               C50887 +
           (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
              C1710 -
          (C49223 * C38216 + (C47403 + C47402 + C47401 + C47400) * C50878 +
           (C47399 + C47398 + C47397 + C47396) * C50887) *
              C1711 +
          (C47424 * C50887 + (C47407 + C47406 + C47405 + C47404) * C50878 +
           (C49218 + C49219 + C49220 + C49221) * C38216) *
              C1712 -
          (((C10616 * C20272 + C50540 * C20274) * C50720 +
            (C10616 * C20271 + C50540 * C20273) * C22723 + C22288 * C22717 +
            C22287 * C22722) *
               C38216 +
           (C49221 + C49220 + C49219 + C49218) * C50878 + C49223 * C50887) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C50884 -
           (C49223 * C38216 + (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50885 +
           (C47424 * C50887 + (C47407 + C47406 + C47405 + C47404) * C50878 +
            (C49218 + C49219 + C49220 + C49221) * C38216) *
               C1960) *
              C50590 * C50830 +
          (((C47408 + C47409 + C47410 + C47411) * C50887 +
            (C47412 + C47413 + C47414 + C47415) * C50878 +
            (C47416 + C47417 + C47418 + C47419) * C38216) *
               C50885 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C50884 -
           (((C10616 * C16623 + C50540 * C16625) * C50720 +
             (C10616 * C16622 + C50540 * C16624) * C22723 + C21062 * C22717 +
             C21061 * C22722) *
                C38216 +
            (C47419 + C47418 + C47417 + C47416) * C50878 + C47425 * C50887) *
               C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50670) *
              C50590 * C895 +
          (((C47408 + C47409 + C47410 + C47411) * C50887 +
            (C47412 + C47413 + C47414 + C47415) * C50878 +
            (C47416 + C47417 + C47418 + C47419) * C38216) *
               C50670 -
           (C47425 * C38216 + (C47411 + C47410 + C47409 + C47408) * C50878 +
            (C10761 * C50720 + C10760 * C22723 +
             (C10616 * C134 + C50540 * C144) * C22717 +
             (C10616 * C123 + C50540 * C130) * C22722) *
                C50887) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C22722 +
             (C10616 * C135 + C50540 * C145) * C22717 + C10976 * C22723 +
             C10977 * C50720) *
                C50887 +
            (C47718 + C47719 + C47720 + C47721) * C50878 +
            (C47722 + C47723 + C47724 + C47725) * C38216) *
               C1544 -
           (((C10616 * C4430 + C50540 * C4436) * C50720 +
             (C10616 * C4427 + C50540 * C4433) * C22723 + C21272 * C22717 +
             C21271 * C22722) *
                C38216 +
            (C47725 + C47724 + C47723 + C47722) * C50878 +
            (C47721 + C47720 + C47719 + C47718) * C50887) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C22722 +
             (C10616 * C133 + C50540 * C143) * C22717 + C10752 * C22723 +
             C10753 * C50720) *
                C50887 +
            (C47396 + C47397 + C47398 + C47399) * C50878 + C47424 * C38216) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C38216 +
            (C47403 + C47402 + C47401 + C47400) * C50878 +
            (C47399 + C47398 + C47397 + C47396) * C50887) *
               C50670) *
              C248 +
          (((C47920 + C47921 + C47922 + C47923) * C50887 +
            (C47924 + C47925 + C47926 + C47927) * C50878 +
            (C48326 + C48327 + C48328 + C48329) * C38216) *
               C50670 -
           (C48332 * C38216 + (C47923 + C47922 + C47921 + C47920) * C50878 +
            (C10755 * C50720 + C10754 * C22723 + C10753 * C22717 +
             C10752 * C22722) *
                C50887) *
               C1544) *
              C249 +
          (((C10754 * C22722 + C10755 * C22717 + C10756 * C22723 +
             C10757 * C50720) *
                C50887 +
            (C48819 + C48820 + C48821 + C48822) * C50878 +
            (C48823 + C48824 + C48825 + C48826) * C38216) *
               C1544 -
           (((C10616 * C12138 + C50540 * C12140) * C50720 +
             (C10616 * C12137 + C50540 * C12139) * C22723 + C13847 * C22717 +
             C13846 * C22722) *
                C38216 +
            (C48826 + C48825 + C48824 + C48823) * C50878 +
            (C48822 + C48821 + C48820 + C48819) * C50887) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C50838 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50642 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50606 * C50838 -
           ((C49740 * C973 + C50545 * C981 + C49747 * C974 + C50821 * C982) *
                C7777 +
            (C49740 * C969 + C50545 * C977 + C49747 * C970 + C50821 * C978) *
                C7782 +
            (C8321 + C8320) * C7776 + (C8319 + C8318) * C7781 +
            (C8317 + C8316) * C7775 + (C8315 + C8314) * C7780) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C50838 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50642 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50606 * C50838 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50706 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50606 * C50838 -
           (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50606 * C50642) *
              C50880 +
          ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
            ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
            ((C49747 * C1085 + C50821 * C1093 + C49740 * C1084 +
              C50545 * C1092) *
                 C121 +
             (C49747 * C1089 + C50821 * C1097 + C49740 * C1088 +
              C50545 * C1096) *
                 C50706) *
                C15335) *
               C50606 * C50642 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50606 * C50838) *
              C50881 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C121 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C50706) *
                C15333 +
            ((C49747 * C395 + C50821 * C409 + C49740 * C394 + C50545 * C408) *
                 C121 +
             (C49747 * C405 + C50821 * C425 + C49740 * C404 + C50545 * C424) *
                 C50706) *
                C15334 +
            ((C49747 * C400 + C50821 * C414 + C49740 * C401 + C50545 * C415) *
                 C121 +
             (C49747 * C418 + C50821 * C430 + C49740 * C419 + C50545 * C431) *
                 C50706) *
                C15335) *
               C50606 * C50838 -
           (((C49740 * C1087 + C50545 * C1095 + C49747 * C1088 +
              C50821 * C1096) *
                 C50706 +
             (C49740 * C1083 + C50545 * C1091 + C49747 * C1084 +
              C50821 * C1092) *
                 C121) *
                C15335 +
            ((C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                 C50706 +
             (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                 C121) *
                C15334 +
            ((C8317 + C8316) * C50706 + (C8315 + C8314) * C121) * C15333) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C7780 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C7775 +
             (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
             C8003 * C7777) *
                C50732 * C50839 -
            ((C8694 + C8695) * C7777 + (C8696 + C8697) * C7782 +
             (C8698 + C8699) * C7776 + (C8700 + C8701) * C7781 +
             (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                 C7775 +
             (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                 C7780) *
                C50732 * C50670) *
               C50838 +
           (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
             (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
             (C49747 * C4009 + C50821 * C4015 + C49740 * C4008 +
              C50545 * C4014) *
                 C7782 +
             (C49747 * C4012 + C50821 * C4018 + C49740 * C4011 +
              C50545 * C4017) *
                 C7777) *
                C50732 * C50670 -
            ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
             (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
             (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                 C7780 +
             (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                 C7775 +
             (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
             (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
                C50732 * C50670 -
            (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
             (C7991 + C7990) * C7781 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C7775 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C7780) *
                C50732 * C50839) *
               C50838 +
           (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
             (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
             (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
                C50732 * C50839 -
            ((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C7777 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C7782 +
             (C8709 + C8708) * C7776 + (C8707 + C8706) * C7781 +
             (C8705 + C8704) * C7775 + (C8703 + C8702) * C7780) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50706 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50732 * C50670) *
               C50838 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50706 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50706 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50732 * C50839) *
               C50838 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50706 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                  C121 +
              (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                  C50706) *
                 C15333 +
             ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
             C15709 * C15335) *
                C50839 -
            (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
             ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
             ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
                C50670) *
               C50838 +
           ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
             ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
             ((C49747 * C4429 + C50821 * C4435 + C49740 * C4428 +
               C50545 * C4434) *
                  C121 +
              (C49747 * C4432 + C50821 * C4438 + C49740 * C4431 +
               C50545 * C4437) *
                  C50706) *
                 C15335) *
                C50670 -
            (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
             ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
             ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
                C50839) *
               C50642) *
              C251 +
          (((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
             ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
             ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
                C50670 -
            (C15710 * C15335 +
             ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
             ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                  C50706 +
              (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                  C121) *
                 C15333) *
                C50839) *
               C50838 +
           ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
             ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
             ((C16229 + C16230) * C121 + (C16231 + C16232) * C50706) * C15335) *
                C50839 -
            (((C49740 * C4430 + C50545 * C4436 + C49747 * C4431 +
               C50821 * C4437) *
                  C50706 +
              (C49740 * C4427 + C50545 * C4433 + C49747 * C4428 +
               C50821 * C4434) *
                  C121) *
                 C15335 +
             ((C16232 + C16231) * C50706 + (C16230 + C16229) * C121) * C15334 +
             ((C8705 + C8704) * C50706 + (C8703 + C8702) * C121) * C15333) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50706) *
                  C50732 * C50606 * C50590 * C113 -
              ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                   C50706 +
               (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                   C121) *
                  C50732 * C50606 * C50590 * C114 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C121 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50706) *
                  C50732 * C50606 * C50590 * C115 -
              ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
                C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
                   C50706 +
               (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
                C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
                   C121) *
                  C50732 * C50606 * C50590 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50706) *
                   C50732 * C50606 * C248 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50706 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50732 * C50606 * C249 +
               ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50706) *
                   C50732 * C50606 * C250) *
                  C251 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50706) *
                   C50732 * C50606 * C249 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50706 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50732 * C50606 * C248 -
               ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
                 C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                    C50706 +
                (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
                 C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                    C121) *
                   C50732 * C50606 * C250) *
                  C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C393) *
              C50590 * C251 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C392 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C391 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50706 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C49747 * C256 + C50821 * C270 + C49740 * C255 + C50545 * C269) *
               C7781 +
           (C49747 * C266 + C50821 * C286 + C49740 * C265 + C50545 * C285) *
               C7776 +
           (C49747 * C257 + C50821 * C271 + C49740 * C258 + C50545 * C272) *
               C7782 +
           (C49747 * C275 + C50821 * C287 + C49740 * C276 + C50545 * C288) *
               C7777) *
              C50732 * C50606 * C50590 * C113 -
          ((C49740 * C277 + C50545 * C289 + C49747 * C276 + C50821 * C288) *
               C7777 +
           (C49740 * C259 + C50545 * C273 + C49747 * C258 + C50821 * C272) *
               C7782 +
           (C49740 * C264 + C50545 * C284 + C49747 * C265 + C50821 * C285) *
               C7776 +
           (C49740 * C254 + C50545 * C268 + C49747 * C255 + C50821 * C269) *
               C7781 +
           (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
               C7775 +
           (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
               C7780) *
              C50732 * C50606 * C50590 * C114 +
          ((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
               C7780 +
           (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
               C7775 +
           (C49747 * C254 + C50821 * C268 + C49740 * C253 + C50545 * C267) *
               C7781 +
           (C49747 * C264 + C50821 * C284 + C49740 * C263 + C50545 * C283) *
               C7776 +
           (C49747 * C259 + C50821 * C273 + C49740 * C260 + C50545 * C274) *
               C7782 +
           (C49747 * C277 + C50821 * C289 + C49740 * C278 + C50545 * C290) *
               C7777) *
              C50732 * C50606 * C50590 * C115 -
          ((C49740 * C281 + C50545 * C292 + C49747 * C278 + C50821 * C290) *
               C7777 +
           (C49740 * C262 + C50545 * C282 + C49747 * C260 + C50821 * C274) *
               C7782 +
           (C49740 * C280 + C50545 * C291 + C49747 * C263 + C50821 * C283) *
               C7776 +
           (C49740 * C261 + C50545 * C279 + C49747 * C253 + C50821 * C267) *
               C7781 +
           (C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
               C7775 +
           (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
               C7780) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C248 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C249 +
           (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 +
            (C49747 * C3317 + C50821 * C3323 + C49740 * C3316 +
             C50545 * C3322) *
                C7782 +
            (C49747 * C3320 + C50821 * C3326 + C49740 * C3319 +
             C50545 * C3325) *
                C7777) *
               C50732 * C50606 * C250) *
              C251 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C249 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C248 -
           ((C49740 * C3318 + C50545 * C3324 + C49747 * C3319 +
             C50821 * C3325) *
                C7777 +
            (C49740 * C3315 + C50545 * C3321 + C49747 * C3316 +
             C50821 * C3322) *
                C7782 +
            (C8001 + C8000) * C7776 + (C7999 + C7998) * C7781 + C8004 * C7775 +
            C8005 * C7780) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C391 -
           ((C49740 * C1436 + C50545 * C1444 + C49747 * C1437 +
             C50821 * C1445) *
                C7777 +
            (C49740 * C1432 + C50545 * C1440 + C49747 * C1433 +
             C50821 * C1441) *
                C7782 +
            (C49740 * C785 + C50545 * C791 + C49747 * C784 + C50821 * C790) *
                C7776 +
            (C49740 * C776 + C50545 * C781 + C49747 * C775 + C50821 * C780) *
                C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C392 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C49747 * C1086 + C50821 * C1094 + C49740 * C1085 +
             C50545 * C1093) *
                C7781 +
            (C49747 * C1090 + C50821 * C1098 + C49740 * C1089 +
             C50545 * C1097) *
                C7776 +
            (C49747 * C3493 + C50821 * C3499 + C49740 * C3492 +
             C50545 * C3498) *
                C7782 +
            (C49747 * C3496 + C50821 * C3502 + C49740 * C3495 +
             C50545 * C3501) *
                C7777) *
               C50732 * C393) *
              C50590 * C251 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C49747 * C776 + C50821 * C781 + C49740 * C777 + C50545 * C782) *
                C7781 +
            (C49747 * C785 + C50821 * C791 + C49740 * C786 + C50545 * C792) *
                C7776 +
            (C49747 * C1432 + C50821 * C1440 + C49740 * C1431 +
             C50545 * C1439) *
                C7782 +
            (C49747 * C1436 + C50821 * C1444 + C49740 * C1435 +
             C50545 * C1443) *
                C7777) *
               C50732 * C392 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C391 -
           ((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
             C50821 * C3501) *
                C7777 +
            (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
             C50821 * C3498) *
                C7782 +
            (C49740 * C1088 + C50545 * C1096 + C49747 * C1089 +
             C50821 * C1097) *
                C7776 +
            (C49740 * C1084 + C50545 * C1092 + C49747 * C1085 +
             C50821 * C1093) *
                C7781 +
            (C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                C7775 +
            (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                C7780) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C121 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C50706) *
               C15333 +
           ((C49747 * C397 + C50821 * C411 + C49740 * C396 + C50545 * C410) *
                C121 +
            (C49747 * C407 + C50821 * C427 + C49740 * C406 + C50545 * C426) *
                C50706) *
               C15334 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C121 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C50706) *
               C15335) *
              C50606 * C50590 * C113 -
          (((C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                C50706 +
            (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                C121) *
               C15335 +
           ((C49740 * C405 + C50545 * C425 + C49747 * C406 + C50821 * C426) *
                C50706 +
            (C49740 * C395 + C50545 * C409 + C49747 * C396 + C50821 * C410) *
                C121) *
               C15334 +
           ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C50706 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C121) *
               C15333) *
              C50606 * C50590 * C114 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C121 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C50706) *
               C15333 +
           ((C49747 * C395 + C50821 * C409 + C49740 * C394 + C50545 * C408) *
                C121 +
            (C49747 * C405 + C50821 * C425 + C49740 * C404 + C50545 * C424) *
                C50706) *
               C15334 +
           ((C49747 * C400 + C50821 * C414 + C49740 * C401 + C50545 * C415) *
                C121 +
            (C49747 * C418 + C50821 * C430 + C49740 * C419 + C50545 * C431) *
                C50706) *
               C15335) *
              C50606 * C50590 * C115 -
          (((C49740 * C422 + C50545 * C433 + C49747 * C419 + C50821 * C431) *
                C50706 +
            (C49740 * C403 + C50545 * C423 + C49747 * C401 + C50821 * C415) *
                C121) *
               C15335 +
           ((C49740 * C421 + C50545 * C432 + C49747 * C404 + C50821 * C424) *
                C50706 +
            (C49740 * C402 + C50545 * C420 + C49747 * C394 + C50821 * C408) *
                C121) *
               C15334 +
           ((C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
                C50706 +
            (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
                C121) *
               C15333) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C49747 * C397 + C50821 * C411 + C49740 * C396 + C50545 * C410) *
                 C121 +
             (C49747 * C407 + C50821 * C427 + C49740 * C406 + C50545 * C426) *
                 C50706) *
                C15334 +
            ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                 C121 +
             (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                 C50706) *
                C15335) *
               C50606 * C248 -
           (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50606 * C249 +
           ((C8002 * C121 + C8003 * C50706) * C15333 +
            ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
            ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
               C50606 * C250) *
              C251 +
          ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
            ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
            ((C49747 * C1085 + C50821 * C1093 + C49740 * C1084 +
              C50545 * C1092) *
                 C121 +
             (C49747 * C1089 + C50821 * C1097 + C49740 * C1088 +
              C50545 * C1096) *
                 C50706) *
                C15335) *
               C50606 * C249 -
           (((C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                 C50706 +
             (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                 C121) *
                C15335 +
            ((C49740 * C405 + C50545 * C425 + C49747 * C406 + C50821 * C426) *
                 C50706 +
             (C49740 * C395 + C50545 * C409 + C49747 * C396 + C50821 * C410) *
                 C121) *
                C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50606 * C248 -
           (((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
              C50821 * C3501) *
                 C50706 +
             (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
              C50821 * C3498) *
                 C121) *
                C15335 +
            ((C8709 + C8708) * C50706 + (C8707 + C8706) * C121) * C15334 +
            (C8004 * C50706 + C8005 * C121) * C15333) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C391 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C392 +
           (C15709 * C15333 +
            ((C15688 + C15687) * C121 + (C15686 + C15685) * C50706) * C15334 +
            ((C49747 * C7161 + C50821 * C7167 + C49740 * C7160 +
              C50545 * C7166) *
                 C121 +
             (C49747 * C7164 + C50821 * C7170 + C49740 * C7163 +
              C50545 * C7169) *
                 C50706) *
                C15335) *
               C393) *
              C50590 * C251 +
          ((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
            ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
            ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
               C392 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C391 -
           (((C49740 * C7162 + C50545 * C7168 + C49747 * C7163 +
              C50821 * C7169) *
                 C50706 +
             (C49740 * C7159 + C50545 * C7165 + C49747 * C7160 +
              C50821 * C7166) *
                 C121) *
                C15335 +
            ((C15700 + C15699) * C50706 + (C15698 + C15697) * C121) * C15334 +
            C15710 * C15333) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50839 -
           ((C49740 * C1436 + C50545 * C1444 + C49747 * C1437 +
             C50821 * C1445) *
                C7777 +
            (C49740 * C1432 + C50545 * C1440 + C49747 * C1433 +
             C50821 * C1441) *
                C7782 +
            (C49740 * C785 + C50545 * C791 + C49747 * C784 + C50821 * C790) *
                C7776 +
            (C49740 * C776 + C50545 * C781 + C49747 * C775 + C50821 * C780) *
                C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C49747 * C776 + C50821 * C781 + C49740 * C777 + C50545 * C782) *
                C7781 +
            (C49747 * C785 + C50821 * C791 + C49740 * C786 + C50545 * C792) *
                C7776 +
            (C49747 * C1432 + C50821 * C1440 + C49740 * C1431 +
             C50545 * C1439) *
                C7782 +
            (C49747 * C1436 + C50821 * C1444 + C49740 * C1435 +
             C50545 * C1443) *
                C7777) *
               C50732 * C50670 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50839 -
           ((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
             C50821 * C1443) *
                C7777 +
            (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
             C50821 * C1439) *
                C7782 +
            (C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                C7776 +
            (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                C7781 +
            (C49740 * C404 + C50545 * C424 + C49747 * C405 + C50821 * C425) *
                C7775 +
            (C49740 * C394 + C50545 * C408 + C49747 * C395 + C50821 * C409) *
                C7780) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50706 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50839 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50670) *
              C50590 * C50880 +
          ((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
            ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
            ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
               C50670 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50839) *
              C50590 * C50881 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C121 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C50706) *
                C15333 +
            ((C16019 + C16020) * C121 + (C16021 + C16022) * C50706) * C15334 +
            ((C16023 + C16024) * C121 + (C16025 + C16026) * C50706) * C15335) *
               C50839 -
           (((C49740 * C1718 + C50545 * C1726 + C49747 * C1719 +
              C50821 * C1727) *
                 C50706 +
             (C49740 * C1714 + C50545 * C1722 + C49747 * C1715 +
              C50821 * C1723) *
                 C121) *
                C15335 +
            ((C16026 + C16025) * C50706 + (C16024 + C16023) * C121) * C15334 +
            ((C16022 + C16021) * C50706 + (C16020 + C16019) * C121) * C15333) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50606 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50706 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C50606 * C50590 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50706 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50732 * C50606 * C50590 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50706) *
              C50732 * C50606 * C50590 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50706 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C49747 * C256 + C50821 * C270 + C49740 * C255 + C50545 * C269) *
               C7781 +
           (C49747 * C266 + C50821 * C286 + C49740 * C265 + C50545 * C285) *
               C7776 +
           (C49747 * C257 + C50821 * C271 + C49740 * C258 + C50545 * C272) *
               C7782 +
           (C49747 * C275 + C50821 * C287 + C49740 * C276 + C50545 * C288) *
               C7777) *
              C50732 * C50606 * C50590 * C113 -
          ((C49740 * C277 + C50545 * C289 + C49747 * C276 + C50821 * C288) *
               C7777 +
           (C49740 * C259 + C50545 * C273 + C49747 * C258 + C50821 * C272) *
               C7782 +
           (C49740 * C264 + C50545 * C284 + C49747 * C265 + C50821 * C285) *
               C7776 +
           (C49740 * C254 + C50545 * C268 + C49747 * C255 + C50821 * C269) *
               C7781 +
           (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
               C7775 +
           (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
               C7780) *
              C50732 * C50606 * C50590 * C114 +
          ((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
               C7780 +
           (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
               C7775 +
           (C49747 * C254 + C50821 * C268 + C49740 * C253 + C50545 * C267) *
               C7781 +
           (C49747 * C264 + C50821 * C284 + C49740 * C263 + C50545 * C283) *
               C7776 +
           (C49747 * C259 + C50821 * C273 + C49740 * C260 + C50545 * C274) *
               C7782 +
           (C49747 * C277 + C50821 * C289 + C49740 * C278 + C50545 * C290) *
               C7777) *
              C50732 * C50606 * C50590 * C115 -
          ((C49740 * C281 + C50545 * C292 + C49747 * C278 + C50821 * C290) *
               C7777 +
           (C49740 * C262 + C50545 * C282 + C49747 * C260 + C50821 * C274) *
               C7782 +
           (C49740 * C280 + C50545 * C291 + C49747 * C263 + C50821 * C283) *
               C7776 +
           (C49740 * C261 + C50545 * C279 + C49747 * C253 + C50821 * C267) *
               C7781 +
           (C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
               C7775 +
           (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
               C7780) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C248 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C249 +
           (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 +
            (C49747 * C3317 + C50821 * C3323 + C49740 * C3316 +
             C50545 * C3322) *
                C7782 +
            (C49747 * C3320 + C50821 * C3326 + C49740 * C3319 +
             C50545 * C3325) *
                C7777) *
               C50732 * C50606 * C250) *
              C251 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C249 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C248 -
           ((C49740 * C3318 + C50545 * C3324 + C49747 * C3319 +
             C50821 * C3325) *
                C7777 +
            (C49740 * C3315 + C50545 * C3321 + C49747 * C3316 +
             C50821 * C3322) *
                C7782 +
            (C8001 + C8000) * C7776 + (C7999 + C7998) * C7781 + C8004 * C7775 +
            C8005 * C7780) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C121 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C50706) *
               C15333 +
           ((C49747 * C397 + C50821 * C411 + C49740 * C396 + C50545 * C410) *
                C121 +
            (C49747 * C407 + C50821 * C427 + C49740 * C406 + C50545 * C426) *
                C50706) *
               C15334 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C121 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C50706) *
               C15335) *
              C50606 * C50590 * C113 -
          (((C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                C50706 +
            (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                C121) *
               C15335 +
           ((C49740 * C405 + C50545 * C425 + C49747 * C406 + C50821 * C426) *
                C50706 +
            (C49740 * C395 + C50545 * C409 + C49747 * C396 + C50821 * C410) *
                C121) *
               C15334 +
           ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C50706 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C121) *
               C15333) *
              C50606 * C50590 * C114 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C121 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C50706) *
               C15333 +
           ((C49747 * C395 + C50821 * C409 + C49740 * C394 + C50545 * C408) *
                C121 +
            (C49747 * C405 + C50821 * C425 + C49740 * C404 + C50545 * C424) *
                C50706) *
               C15334 +
           ((C49747 * C400 + C50821 * C414 + C49740 * C401 + C50545 * C415) *
                C121 +
            (C49747 * C418 + C50821 * C430 + C49740 * C419 + C50545 * C431) *
                C50706) *
               C15335) *
              C50606 * C50590 * C115 -
          (((C49740 * C422 + C50545 * C433 + C49747 * C419 + C50821 * C431) *
                C50706 +
            (C49740 * C403 + C50545 * C423 + C49747 * C401 + C50821 * C415) *
                C121) *
               C15335 +
           ((C49740 * C421 + C50545 * C432 + C49747 * C404 + C50821 * C424) *
                C50706 +
            (C49740 * C402 + C50545 * C420 + C49747 * C394 + C50821 * C408) *
                C121) *
               C15334 +
           ((C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
                C50706 +
            (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
                C121) *
               C15333) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C49747 * C397 + C50821 * C411 + C49740 * C396 + C50545 * C410) *
                 C121 +
             (C49747 * C407 + C50821 * C427 + C49740 * C406 + C50545 * C426) *
                 C50706) *
                C15334 +
            ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                 C121 +
             (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                 C50706) *
                C15335) *
               C50606 * C248 -
           (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50606 * C249 +
           ((C8002 * C121 + C8003 * C50706) * C15333 +
            ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
            ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
               C50606 * C250) *
              C251 +
          ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
            ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
            ((C49747 * C1085 + C50821 * C1093 + C49740 * C1084 +
              C50545 * C1092) *
                 C121 +
             (C49747 * C1089 + C50821 * C1097 + C49740 * C1088 +
              C50545 * C1096) *
                 C50706) *
                C15335) *
               C50606 * C249 -
           (((C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                 C50706 +
             (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                 C121) *
                C15335 +
            ((C49740 * C405 + C50545 * C425 + C49747 * C406 + C50821 * C426) *
                 C50706 +
             (C49740 * C395 + C50545 * C409 + C49747 * C396 + C50821 * C410) *
                 C121) *
                C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50606 * C248 -
           (((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
              C50821 * C3501) *
                 C50706 +
             (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
              C50821 * C3498) *
                 C121) *
                C15335 +
            ((C8709 + C8708) * C50706 + (C8707 + C8706) * C121) * C15334 +
            (C8004 * C50706 + C8005 * C121) * C15333) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C50882 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50883 +
           (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50883 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C50882 -
           ((C49740 * C3318 + C50545 * C3324 + C49747 * C3319 +
             C50821 * C3325) *
                C7777 +
            (C49740 * C3315 + C50545 * C3321 + C49747 * C3316 +
             C50821 * C3322) *
                C7782 +
            (C8001 + C8000) * C7776 + (C7999 + C7998) * C7781 + C8004 * C7775 +
            C8005 * C7780) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C50882 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50883 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50883 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C50882 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50706 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50606 * C50882 -
           (C16643 * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50606 * C50883 +
           ((C8002 * C121 + C8003 * C50706) * C15333 +
            ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
            ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
               C50606 * C1199) *
              C50830 +
          ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
            ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
            ((C16229 + C16230) * C121 + (C16231 + C16232) * C50706) * C15335) *
               C50606 * C50883 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50606 * C50882 -
           (((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
              C50821 * C3501) *
                 C50706 +
             (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
              C50821 * C3498) *
                 C121) *
                C15335 +
            ((C8709 + C8708) * C50706 + (C8707 + C8706) * C121) * C15334 +
            (C8004 * C50706 + C8005 * C121) * C15333) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50839 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50882 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50670 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C50839) *
              C50883 +
          ((C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C50839 -
           ((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C7777 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C7782 +
            (C9661 + C9660) * C7776 + (C9659 + C9658) * C7781 + C9648 * C7775 +
            C9649 * C7780) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50882 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50839) *
              C50883 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50706 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50839 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50670) *
              C50882 +
          ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
            ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
            ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
               C50670 -
           (C16643 * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50839) *
              C50883 +
          (((C8002 * C121 + C8003 * C50706) * C15333 +
            ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
            ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
               C50839 -
           (((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
              C50821 * C10058) *
                 C50706 +
             (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
              C50821 * C10056) *
                 C121) *
                C15335 +
            ((C9153 + C9152) * C50706 + (C9151 + C9150) * C121) * C15334 +
            (C9648 * C50706 + C9649 * C121) * C15333) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50706) *
                   C50732 * C50606 * C893 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50706 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50732 * C50606 * C50642) *
                  C895 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50706) *
                   C50732 * C50606 * C50642 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50706 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50732 * C50606 * C893) *
                  C896 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50706) *
                   C50732 * C50606 * C893 -
               ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
                 C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                    C50706 +
                (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
                 C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                    C121) *
                   C50732 * C50606 * C50642) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50706) *
                  C50732 * C50606 * C964 -
              ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                   C50706 +
               (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                   C121) *
                  C50732 * C50606 * C965 +
              ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                   C121 +
               (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                   C50706) *
                  C50732 * C50606 * C966 -
              ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
                C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                   C50706 +
               (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
                C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                   C121) *
                  C50732 * C50606 * C967) *
             C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C393) *
              C893 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C392 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C391 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50706 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C893 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50642 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C893) *
              C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50606 * C893 -
           ((C49740 * C973 + C50545 * C981 + C49747 * C974 + C50821 * C982) *
                C7777 +
            (C49740 * C969 + C50545 * C977 + C49747 * C970 + C50821 * C978) *
                C7782 +
            (C8321 + C8320) * C7776 + (C8319 + C8318) * C7781 +
            (C8317 + C8316) * C7775 + (C8315 + C8314) * C7780) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
           C8003 * C7777) *
              C50732 * C50606 * C964 -
          (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
           (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
           (C7979 + C7978) * C7780) *
              C50732 * C50606 * C965 +
          (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
           (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
           (C8974 + C8975) * C7777) *
              C50732 * C50606 * C966 -
          ((C49740 * C8955 + C50545 * C8959 + C49747 * C8956 + C50821 * C8960) *
               C7777 +
           (C49740 * C8953 + C50545 * C8957 + C49747 * C8954 + C50821 * C8958) *
               C7782 +
           (C8975 + C8974) * C7776 + (C8973 + C8972) * C7781 + C8962 * C7775 +
           C8963 * C7780) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C391 -
           ((C8694 + C8695) * C7777 + (C8696 + C8697) * C7782 +
            (C8698 + C8699) * C7776 + (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C392 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
            (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
               C50732 * C393) *
              C893 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C49747 * C4009 + C50821 * C4015 + C49740 * C4008 +
             C50545 * C4014) *
                C7782 +
            (C49747 * C4012 + C50821 * C4018 + C49740 * C4011 +
             C50545 * C4017) *
                C7777) *
               C50732 * C392 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C391 -
           ((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
             C50821 * C9128) *
                C7777 +
            (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
             C50821 * C9126) *
                C7782 +
            (C9153 + C9152) * C7776 + (C9151 + C9150) * C7781 +
            (C9149 + C9148) * C7775 + (C9147 + C9146) * C7780) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50606 * C893 -
           (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50606 * C50642) *
              C895 +
          ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
            ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
            ((C16229 + C16230) * C121 + (C16231 + C16232) * C50706) * C15335) *
               C50606 * C50642 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50606 * C893) *
              C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C121 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C50706) *
                C15333 +
            ((C16019 + C16020) * C121 + (C16021 + C16022) * C50706) * C15334 +
            ((C16023 + C16024) * C121 + (C16025 + C16026) * C50706) * C15335) *
               C50606 * C893 -
           (((C49740 * C1087 + C50545 * C1095 + C49747 * C1088 +
              C50821 * C1096) *
                 C50706 +
             (C49740 * C1083 + C50545 * C1091 + C49747 * C1084 +
              C50821 * C1092) *
                 C121) *
                C15335 +
            ((C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                 C50706 +
             (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                 C121) *
                C15334 +
            ((C8317 + C8316) * C50706 + (C8315 + C8314) * C121) * C15333) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C121 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C50706) *
               C15333 +
           ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
           C15709 * C15335) *
              C50606 * C964 -
          (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
           ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
           ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
              C50606 * C965 +
          ((C8002 * C121 + C8003 * C50706) * C15333 +
           ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
           ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
              C50606 * C966 -
          (((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
             C50821 * C9128) *
                C50706 +
            (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
             C50821 * C9126) *
                C121) *
               C15335 +
           ((C9661 + C9660) * C50706 + (C9659 + C9658) * C121) * C15334 +
           (C8962 * C50706 + C8963 * C121) * C15333) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C391 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C392 +
           (C15709 * C15333 +
            ((C15688 + C15687) * C121 + (C15686 + C15685) * C50706) * C15334 +
            ((C49747 * C7161 + C50821 * C7167 + C49740 * C7160 +
              C50545 * C7166) *
                 C121 +
             (C49747 * C7164 + C50821 * C7170 + C49740 * C7163 +
              C50545 * C7169) *
                 C50706) *
                C15335) *
               C393) *
              C893 +
          ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
            ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
            ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
               C392 -
           (C16643 * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C391 -
           (((C49740 * C16623 + C50545 * C16625 + C49747 * C14733 +
              C50821 * C14736) *
                 C50706 +
             (C49740 * C16622 + C50545 * C16624 + C49747 * C14730 +
              C50821 * C14734) *
                 C121) *
                C15335 +
            ((C16640 + C16639) * C50706 + (C16638 + C16637) * C121) * C15334 +
            C16643 * C15333) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C7780 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C7775 +
             (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
             C8003 * C7777) *
                C50732 * C50839 -
            ((C8694 + C8695) * C7777 + (C8696 + C8697) * C7782 +
             (C8698 + C8699) * C7776 + (C8700 + C8701) * C7781 +
             (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                 C7775 +
             (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                 C7780) *
                C50732 * C50670) *
               C893 +
           (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
             (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
             (C49747 * C4009 + C50821 * C4015 + C49740 * C4008 +
              C50545 * C4014) *
                 C7782 +
             (C49747 * C4012 + C50821 * C4018 + C49740 * C4011 +
              C50545 * C4017) *
                 C7777) *
                C50732 * C50670 -
            (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
             (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
             (C7979 + C7978) * C7780) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                 C7780 +
             (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                 C7775 +
             (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
             (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
                C50732 * C50670 -
            (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
             (C7991 + C7990) * C7781 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C7775 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C7780) *
                C50732 * C50839) *
               C893 +
           (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
             (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
             (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
                C50732 * C50839 -
            ((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C7777 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C7782 +
             (C8709 + C8708) * C7776 + (C8707 + C8706) * C7781 +
             (C8705 + C8704) * C7775 + (C8703 + C8702) * C7780) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50706 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50732 * C50670) *
               C893 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50706 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50706 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50732 * C50839) *
               C893 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50706 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                  C121 +
              (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                  C50706) *
                 C15333 +
             ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
             C15709 * C15335) *
                C50839 -
            (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
             ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
             ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
                C50670) *
               C893 +
           ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
             ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
             ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
                C50670 -
            (C16643 * C15335 +
             ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
             ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
                C50839) *
               C50642) *
              C50830 +
          (((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
             ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
             ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
                C50670 -
            (C15710 * C15335 +
             ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
             ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                  C50706 +
              (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                  C121) *
                 C15333) *
                C50839) *
               C893 +
           ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
             ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
             ((C16229 + C16230) * C121 + (C16231 + C16232) * C50706) * C15335) *
                C50839 -
            (((C49740 * C4430 + C50545 * C4436 + C49747 * C4431 +
               C50821 * C4437) *
                  C50706 +
              (C49740 * C4427 + C50545 * C4433 + C49747 * C4428 +
               C50821 * C4434) *
                  C121) *
                 C15335 +
             ((C16232 + C16231) * C50706 + (C16230 + C16229) * C121) * C15334 +
             ((C8705 + C8704) * C50706 + (C8703 + C8702) * C121) * C15333) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C50606 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50706 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50732 * C50606 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50706) *
              C50732 * C50606 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50706 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50642 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50606 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50706 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C893 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50642 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C893) *
              C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50606 * C893 -
           ((C49740 * C973 + C50545 * C981 + C49747 * C974 + C50821 * C982) *
                C7777 +
            (C49740 * C969 + C50545 * C977 + C49747 * C970 + C50821 * C978) *
                C7782 +
            (C8321 + C8320) * C7776 + (C8319 + C8318) * C7781 +
            (C8317 + C8316) * C7775 + (C8315 + C8314) * C7780) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
           C8003 * C7777) *
              C50732 * C50606 * C964 -
          (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
           (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
           (C7979 + C7978) * C7780) *
              C50732 * C50606 * C965 +
          (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
           (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
           (C8974 + C8975) * C7777) *
              C50732 * C50606 * C966 -
          ((C49740 * C8955 + C50545 * C8959 + C49747 * C8956 + C50821 * C8960) *
               C7777 +
           (C49740 * C8953 + C50545 * C8957 + C49747 * C8954 + C50821 * C8958) *
               C7782 +
           (C8975 + C8974) * C7776 + (C8973 + C8972) * C7781 + C8962 * C7775 +
           C8963 * C7780) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50606 * C893 -
           (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50606 * C50642) *
              C895 +
          ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
            ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
            ((C16229 + C16230) * C121 + (C16231 + C16232) * C50706) * C15335) *
               C50606 * C50642 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50606 * C893) *
              C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C121 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C50706) *
                C15333 +
            ((C16019 + C16020) * C121 + (C16021 + C16022) * C50706) * C15334 +
            ((C16023 + C16024) * C121 + (C16025 + C16026) * C50706) * C15335) *
               C50606 * C893 -
           (((C49740 * C1087 + C50545 * C1095 + C49747 * C1088 +
              C50821 * C1096) *
                 C50706 +
             (C49740 * C1083 + C50545 * C1091 + C49747 * C1084 +
              C50821 * C1092) *
                 C121) *
                C15335 +
            ((C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                 C50706 +
             (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                 C121) *
                C15334 +
            ((C8317 + C8316) * C50706 + (C8315 + C8314) * C121) * C15333) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C121 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C50706) *
               C15333 +
           ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
           C15709 * C15335) *
              C50606 * C964 -
          (((C9149 + C9148) * C50706 + (C9147 + C9146) * C121) * C15335 +
           ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
           ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
              C50606 * C965 +
          ((C8002 * C121 + C8003 * C50706) * C15333 +
           ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
           ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
              C50606 * C966 -
          (((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
             C50821 * C9128) *
                C50706 +
            (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
             C50821 * C9126) *
                C121) *
               C15335 +
           ((C9661 + C9660) * C50706 + (C9659 + C9658) * C121) * C15334 +
           (C8962 * C50706 + C8963 * C121) * C15333) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C7780 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C7775 +
             (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
             C8003 * C7777) *
                C50732 * C1544 -
            (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
             (C8700 + C8701) * C7781 +
             (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                 C7775 +
             (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                 C7780) *
                C50732 * C50670) *
               C50838 +
           (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
             (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
             (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
                C50732 * C50670 -
            (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
             (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
             (C7979 + C7978) * C7780) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                 C7780 +
             (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                 C7775 +
             (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
             (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
                C50732 * C50670 -
            (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
             (C7991 + C7990) * C7781 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C7775 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C7780) *
                C50732 * C1544) *
               C50838 +
           (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
             (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
             (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
                C50732 * C1544 -
            ((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C7777 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C7782 +
             (C8709 + C8708) * C7776 + (C8707 + C8706) * C7781 +
             (C8705 + C8704) * C7775 + (C8703 + C8702) * C7780) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50706) *
                C50732 * C1544 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50706 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50732 * C50670) *
               C50838 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50706 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50706 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50732 * C1544) *
               C50838 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50706) *
                C50732 * C1544 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50706 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                  C121 +
              (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                  C50706) *
                 C15333 +
             ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
             C15709 * C15335) *
                C1544 -
            (C17544 * C15335 +
             ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
             ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
                C50670) *
               C50838 +
           ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
             ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
             ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
                C50670 -
            (C16643 * C15335 +
             ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
             ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
                C1544) *
               C50642) *
              C50830 +
          (((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
             ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
             ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
                C50670 -
            (C15710 * C15335 +
             ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
             ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                  C50706 +
              (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                  C121) *
                 C15333) *
                C1544) *
               C50838 +
           ((((C7990 + C7991) * C121 + (C7992 + C7993) * C50706) * C15333 +
             ((C8702 + C8703) * C121 + (C8704 + C8705) * C50706) * C15334 +
             ((C16229 + C16230) * C121 + (C16231 + C16232) * C50706) * C15335) *
                C1544 -
            (((C49740 * C4430 + C50545 * C4436 + C49747 * C4431 +
               C50821 * C4437) *
                  C50706 +
              (C49740 * C4427 + C50545 * C4433 + C49747 * C4428 +
               C50821 * C4434) *
                  C121) *
                 C15335 +
             ((C16232 + C16231) * C50706 + (C16230 + C16229) * C121) * C15334 +
             ((C8705 + C8704) * C50706 + (C8703 + C8702) * C121) * C15333) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50884 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50885 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
            (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
               C50732 * C1960) *
              C50838 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50885 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C50884 -
           ((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
             C50821 * C9128) *
                C7777 +
            (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
             C50821 * C9126) *
                C7782 +
            (C9153 + C9152) * C7776 + (C9151 + C9150) * C7781 +
            (C9149 + C9148) * C7775 + (C9147 + C9146) * C7780) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50884 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50885 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C1960) *
              C50838 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50885 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50884 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50706 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50884 -
           (C17544 * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50885 +
           (C15709 * C15333 +
            ((C15688 + C15687) * C121 + (C15686 + C15685) * C50706) * C15334 +
            ((C17540 + C17541) * C121 + (C17542 + C17543) * C50706) * C15335) *
               C1960) *
              C50838 +
          ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
            ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
            ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
               C50885 -
           (C16643 * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C50884 -
           (((C49740 * C16623 + C50545 * C16625 + C49747 * C14733 +
              C50821 * C14736) *
                 C50706 +
             (C49740 * C16622 + C50545 * C16624 + C49747 * C14730 +
              C50821 * C14734) *
                 C121) *
                C15335 +
            ((C16640 + C16639) * C50706 + (C16638 + C16637) * C121) * C15334 +
            C16643 * C15333) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50706) *
                   C50732 * C1544 -
               ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
                 C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                    C50706 +
                (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
                 C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                    C121) *
                   C50732 * C50670) *
                  C50590 * C895 +
              (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
                 C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                    C121 +
                (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
                 C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                    C50706) *
                   C50732 * C50670 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50706 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50732 * C1544) *
                  C50590 * C896 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50706) *
                   C50732 * C1544 -
               ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
                 C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                    C50706 +
                (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
                 C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                    C121) *
                   C50732 * C50670) *
                  C50590 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50706) *
                   C50732 * C1544 -
               ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
                 C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                    C50706 +
                (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
                 C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                    C121) *
                   C50732 * C50670) *
                  C248 +
              (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
                 C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                    C121 +
                (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
                 C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                    C50706) *
                   C50732 * C50670 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50706 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50732 * C1544) *
                  C249 +
              (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50706) *
                   C50732 * C1544 -
               ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
                 C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                    C50706 +
                (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
                 C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                    C121) *
                   C50732 * C50670) *
                  C250) *
             C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C1710 -
          ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
            C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
               C50706 +
           (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
            C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
               C121) *
              C50732 * C1711 +
          ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
            C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
               C121 +
           (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
            C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
               C50706) *
              C50732 * C1712 -
          ((C120 * C1718 + C108 * C1726 + C119 * C1719 + C107 * C1727 +
            C118 * C1720 + C106 * C1728 + C117 * C1721 + C105 * C1729) *
               C50706 +
           (C120 * C1714 + C108 * C1722 + C119 * C1715 + C107 * C1723 +
            C118 * C1716 + C106 * C1724 + C117 * C1717 + C105 * C1725) *
               C121) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
            (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
               C50732 * C50670 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C1544 -
           ((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
             C50821 * C1443) *
                C7777 +
            (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
             C50821 * C1439) *
                C7782 +
            (C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                C7776 +
            (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                C7781 +
            (C49740 * C404 + C50545 * C424 + C49747 * C405 + C50821 * C425) *
                C7775 +
            (C49740 * C394 + C50545 * C408 + C49747 * C395 + C50821 * C409) *
                C7780) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C248 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50670 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C1544) *
              C249 +
          ((C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C1544 -
           ((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C7777 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C7782 +
            (C9661 + C9660) * C7776 + (C9659 + C9658) * C7781 + C9648 * C7775 +
            C9649 * C7780) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
           C8003 * C7777) *
              C50732 * C1710 -
          (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
           (C8700 + C8701) * C7781 +
           (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
               C7775 +
           (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
               C7780) *
              C50732 * C1711 +
          ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
               C7780 +
           (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
               C7775 +
           (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
           (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
              C50732 * C1712 -
          ((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
            C50821 * C10058) *
               C7777 +
           (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
            C50821 * C10056) *
               C7782 +
           (C49740 * C4431 + C50545 * C4437 + C49747 * C4432 + C50821 * C4438) *
               C7776 +
           (C49740 * C4428 + C50545 * C4434 + C49747 * C4429 + C50821 * C4435) *
               C7781 +
           (C49740 * C1720 + C50545 * C1728 + C49747 * C1721 + C50821 * C1729) *
               C7775 +
           (C49740 * C1716 + C50545 * C1724 + C49747 * C1717 + C50821 * C1725) *
               C7780) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C1544 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50670) *
              C50590 * C895 +
          ((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
            ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
            ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
               C50670 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C1544) *
              C50590 * C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C121 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C50706) *
                C15333 +
            ((C16019 + C16020) * C121 + (C16021 + C16022) * C50706) * C15334 +
            ((C16023 + C16024) * C121 + (C16025 + C16026) * C50706) * C15335) *
               C1544 -
           (((C49740 * C1718 + C50545 * C1726 + C49747 * C1719 +
              C50821 * C1727) *
                 C50706 +
             (C49740 * C1714 + C50545 * C1722 + C49747 * C1715 +
              C50821 * C1723) *
                 C121) *
                C15335 +
            ((C16026 + C16025) * C50706 + (C16024 + C16023) * C121) * C15334 +
            ((C16022 + C16021) * C50706 + (C16020 + C16019) * C121) * C15333) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C1544 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50670) *
              C248 +
          ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
            ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
            ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
               C50670 -
           (C16643 * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C1544) *
              C249 +
          (((C8002 * C121 + C8003 * C50706) * C15333 +
            ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
            ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
               C1544 -
           (((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
              C50821 * C10058) *
                 C50706 +
             (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
              C50821 * C10056) *
                 C121) *
                C15335 +
            ((C9153 + C9152) * C50706 + (C9151 + C9150) * C121) * C15334 +
            (C9648 * C50706 + C9649 * C121) * C15333) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C121 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C50706) *
               C15333 +
           ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
           C15709 * C15335) *
              C1710 -
          (C17544 * C15335 +
           ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
           ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
              C1711 +
          (C15709 * C15333 +
           ((C15688 + C15687) * C121 + (C15686 + C15685) * C50706) * C15334 +
           ((C17540 + C17541) * C121 + (C17542 + C17543) * C50706) * C15335) *
              C1712 -
          (((C49740 * C17521 + C50545 * C17525 + C49747 * C17522 +
             C50821 * C17526) *
                C50706 +
            (C49740 * C17519 + C50545 * C17523 + C49747 * C17520 +
             C50821 * C17524) *
                C121) *
               C15335 +
           ((C17543 + C17542) * C50706 + (C17541 + C17540) * C121) * C15334 +
           C17544 * C15333) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50884 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50885 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
            (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
            (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
               C50732 * C50885 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50884 -
           ((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
             C50821 * C3501) *
                C7777 +
            (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
             C50821 * C3498) *
                C7782 +
            (C49740 * C1088 + C50545 * C1096 + C49747 * C1089 +
             C50821 * C1097) *
                C7776 +
            (C49740 * C1084 + C50545 * C1092 + C49747 * C1085 +
             C50821 * C1093) *
                C7781 +
            (C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                C7775 +
            (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                C7780) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50884 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50885 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50885 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50884 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50706 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C50884 -
           (C17544 * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50885 +
           (C15709 * C15333 +
            ((C15688 + C15687) * C121 + (C15686 + C15685) * C50706) * C15334 +
            ((C17540 + C17541) * C121 + (C17542 + C17543) * C50706) * C15335) *
               C1960) *
              C50590 * C50830 +
          ((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
            ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
            ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
               C50885 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C50884 -
           (((C49740 * C7162 + C50545 * C7168 + C49747 * C7163 +
              C50821 * C7169) *
                 C50706 +
             (C49740 * C7159 + C50545 * C7165 + C49747 * C7160 +
              C50821 * C7166) *
                 C121) *
                C15335 +
            ((C15700 + C15699) * C50706 + (C15698 + C15697) * C121) * C15334 +
            C15710 * C15333) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50706 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50706 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
            (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
               C50732 * C50670 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C1544 -
           ((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
             C50821 * C1443) *
                C7777 +
            (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
             C50821 * C1439) *
                C7782 +
            (C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                C7776 +
            (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                C7781 +
            (C49740 * C404 + C50545 * C424 + C49747 * C405 + C50821 * C425) *
                C7775 +
            (C49740 * C394 + C50545 * C408 + C49747 * C395 + C50821 * C409) *
                C7780) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C248 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50670 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C1544) *
              C249 +
          ((C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C1544 -
           ((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C7777 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C7782 +
            (C9661 + C9660) * C7776 + (C9659 + C9658) * C7781 + C9648 * C7775 +
            C9649 * C7780) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C1544 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50670) *
              C50590 * C895 +
          ((((C15689 + C15690) * C121 + (C15691 + C15692) * C50706) * C15333 +
            ((C15693 + C15694) * C121 + (C15695 + C15696) * C50706) * C15334 +
            ((C15697 + C15698) * C121 + (C15699 + C15700) * C50706) * C15335) *
               C50670 -
           (C15710 * C15335 +
            ((C15692 + C15691) * C50706 + (C15690 + C15689) * C121) * C15334 +
            ((C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C50706 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C121) *
                C15333) *
               C1544) *
              C50590 * C896 +
          ((((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                 C121 +
             (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                 C50706) *
                C15333 +
            ((C16019 + C16020) * C121 + (C16021 + C16022) * C50706) * C15334 +
            ((C16023 + C16024) * C121 + (C16025 + C16026) * C50706) * C15335) *
               C1544 -
           (((C49740 * C1718 + C50545 * C1726 + C49747 * C1719 +
              C50821 * C1727) *
                 C50706 +
             (C49740 * C1714 + C50545 * C1722 + C49747 * C1715 +
              C50821 * C1723) *
                 C121) *
                C15335 +
            ((C16026 + C16025) * C50706 + (C16024 + C16023) * C121) * C15334 +
            ((C16022 + C16021) * C50706 + (C16020 + C16019) * C121) * C15333) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C121 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C50706) *
                C15333 +
            ((C15677 + C15678) * C121 + (C15679 + C15680) * C50706) * C15334 +
            C15709 * C15335) *
               C1544 -
           (((C15685 + C15686) * C50706 + (C15687 + C15688) * C121) * C15335 +
            ((C15684 + C15683) * C50706 + (C15682 + C15681) * C121) * C15334 +
            ((C15680 + C15679) * C50706 + (C15678 + C15677) * C121) * C15333) *
               C50670) *
              C248 +
          ((((C8701 + C8700) * C121 + (C8699 + C8698) * C50706) * C15333 +
            ((C9146 + C9147) * C121 + (C9148 + C9149) * C50706) * C15334 +
            ((C16637 + C16638) * C121 + (C16639 + C16640) * C50706) * C15335) *
               C50670 -
           (C16643 * C15335 +
            ((C8698 + C8699) * C50706 + (C8700 + C8701) * C121) * C15334 +
            ((C7981 + C7980) * C50706 + (C7979 + C7978) * C121) * C15333) *
               C1544) *
              C249 +
          (((C8002 * C121 + C8003 * C50706) * C15333 +
            ((C8697 + C8696) * C121 + (C8695 + C8694) * C50706) * C15334 +
            ((C9150 + C9151) * C121 + (C9152 + C9153) * C50706) * C15335) *
               C1544 -
           (((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
              C50821 * C10058) *
                 C50706 +
             (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
              C50821 * C10056) *
                 C121) *
                C15335 +
            ((C9153 + C9152) * C50706 + (C9151 + C9150) * C121) * C15334 +
            (C9648 * C50706 + C9649 * C121) * C15333) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C50838 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50642) *
              C50880 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50642 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50606 * C50838 -
           ((C10616 * C3318 + C50540 * C3324) * C10615 +
            (C10616 * C3315 + C50540 * C3321) * C10620 + C10981 * C10614 +
            C10980 * C10619 + C10979 * C10613 + C10978 * C10618 +
            C10977 * C10612 + C10976 * C10617) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C50838 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50642 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50606 * C50838 -
           ((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
             C2162 * C277 + C2157 * C289) *
                C50720 +
            (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
             C2162 * C259 + C2157 * C273) *
                C2166 +
            (C2695 + C2694 + C2693) * C50849 +
            (C2692 + C2691 + C2690) * C2165) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50606 * C50838 -
           ((C11537 * C50720 + C11536 * C2166 + C11535 * C50849 +
             C11534 * C2165) *
                C15335 +
            (C11236 * C50720 + C11237 * C2166 + C11238 * C50849 +
             C11239 * C2165) *
                C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50606 * C50642) *
              C50880 +
          (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
             C10763 * C50720) *
                C15333 +
            (C11240 * C2165 + C11241 * C50849 + C11242 * C2166 +
             C11243 * C50720) *
                C15334 +
            (C12902 * C2165 + C12903 * C50849 + C12904 * C2166 +
             C12905 * C50720) *
                C15335) *
               C50606 * C50642 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50606 * C50838) *
              C50881 +
          ((((C10616 * C124 + C50540 * C131) * C2165 +
             (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
             C10977 * C50720) *
                C15333 +
            (C13230 * C2165 + C13231 * C50849 + C13072 * C2166 +
             C13073 * C50720) *
                C15334 +
            ((C10616 * C400 + C50540 * C414) * C2165 +
             (C10616 * C418 + C50540 * C430) * C50849 + C18613 * C2166 +
             C18614 * C50720) *
                C15335) *
               C50606 * C50838 -
           (((C10616 * C3494 + C50540 * C3500) * C50720 +
             (C10616 * C3491 + C50540 * C3497) * C2166 + C18614 * C50849 +
             C18613 * C2165) *
                C15335 +
            (C13075 * C50720 + C13074 * C2166 + C13073 * C50849 +
             C13072 * C2165) *
                C15334 +
            (C10979 * C50720 + C10978 * C2166 + C10977 * C50849 +
             C10976 * C2165) *
                C15333) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C10617 +
             (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
             C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
             C10756 * C10620 + C10757 * C10615) *
                C50732 * C50839 -
            (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
             C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
             (C10616 * C407 + C50540 * C427) * C10612 +
             (C10616 * C397 + C50540 * C411) * C10617) *
                C50732 * C50670) *
               C50838 +
           ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
             C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
             (C10616 * C9640 + C50540 * C9644) * C10620 +
             (C10616 * C9642 + C50540 * C9646) * C10615) *
                C50732 * C50670 -
            (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
             C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
             C10753 * C10612 + C10752 * C10617) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C10616 * C396 + C50540 * C410) * C10617 +
             (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
             C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
             C11244 * C10620 + C11245 * C10615) *
                C50732 * C50670 -
            (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
             C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
             (C10616 * C134 + C50540 * C144) * C10612 +
             (C10616 * C123 + C50540 * C130) * C10617) *
                C50732 * C50839) *
               C50838 +
           ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
             C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
             C10766 * C10620 + C10767 * C10615) *
                C50732 * C50839 -
            ((C10616 * C9641 + C50540 * C9645) * C10615 +
             (C10616 * C9639 + C50540 * C9643) * C10620 + C11245 * C10614 +
             C11244 * C10619 + C11243 * C10613 + C11242 * C10618 +
             C11241 * C10612 + C11240 * C10617) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C2165 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50849 +
             (C2362 + C2363 + C2364) * C2166 +
             (C2365 + C2366 + C2367) * C50720) *
                C50732 * C50839 -
            ((C3060 + C3061 + C3062) * C50720 +
             (C3063 + C3064 + C3065) * C2166 +
             (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50849 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C2165) *
                C50732 * C50670) *
               C50838 +
           (((C3065 + C3064 + C3063) * C2165 +
             (C3062 + C3061 + C3060) * C50849 +
             (C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
              C2164 * C1431 + C2159 * C1439) *
                 C2166 +
             (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
              C2164 * C1435 + C2159 * C1443) *
                 C50720) *
                C50732 * C50670 -
            ((C2368 + C2369 + C2370) * C50720 +
             (C2371 + C2372 + C2373) * C2166 +
             (C2367 + C2366 + C2365) * C50849 +
             (C2364 + C2363 + C2362) * C2165) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C2165 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50849 +
             (C3066 + C3067 + C3068) * C2166 +
             (C3069 + C3070 + C3071) * C50720) *
                C50732 * C50670 -
            ((C2379 + C2378 + C2377) * C50720 +
             (C2376 + C2375 + C2374) * C2166 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50849 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C2165) *
                C50732 * C50839) *
               C50838 +
           (((C2374 + C2375 + C2376) * C2165 +
             (C2377 + C2378 + C2379) * C50849 +
             (C2380 + C2381 + C2382) * C2166 +
             (C2383 + C2384 + C2385) * C50720) *
                C50732 * C50839 -
            ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50720 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C2166 +
             (C3071 + C3070 + C3069) * C50849 +
             (C3068 + C3067 + C3066) * C2165) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C2165 +
              (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
              C10753 * C50720) *
                 C15333 +
             (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
                C50839 -
            ((C18429 + C18430 + C18431 + C18432) * C15335 +
             (C18428 + C18427 + C18426 + C18425) * C15334 +
             (C18424 + C18423 + C18422 + C18421) * C15333) *
                C50670) *
               C50838 +
           (((C18969 + C18970 + C18971 + C18972) * C15333 +
             (C18973 + C18974 + C18975 + C18976) * C15334 +
             (C13844 * C2165 + C13845 * C50849 + C13846 * C2166 +
              C13847 * C50720) *
                 C15335) *
                C50670 -
            ((C18976 + C18975 + C18974 + C18973) * C15335 +
             (C18972 + C18971 + C18970 + C18969) * C15334 +
             (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
              C10752 * C2165) *
                 C15333) *
                C50839) *
               C50642) *
              C251 +
          ((((C18433 + C18434 + C18435 + C18436) * C15333 +
             (C18437 + C18438 + C18439 + C18440) * C15334 +
             (C18456 + C18457 + C18458 + C18459) * C15335) *
                C50670 -
            (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
             (C10761 * C50720 + C10760 * C2166 +
              (C10616 * C134 + C50540 * C144) * C50849 +
              (C10616 * C123 + C50540 * C130) * C2165) *
                 C15333) *
                C50839) *
               C50838 +
           (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
              C10763 * C50720) *
                 C15333 +
             (C18977 + C18978 + C18979 + C18980) * C15334 +
             (C18981 + C18982 + C18983 + C18984) * C15335) *
                C50839 -
            (((C10616 * C10053 + C50540 * C10057) * C50720 +
              (C10616 * C10051 + C50540 * C10055) * C2166 + C18453 * C50849 +
              C18452 * C2165) *
                 C15335 +
             (C18984 + C18983 + C18982 + C18981) * C15334 +
             (C18980 + C18979 + C18978 + C18977) * C15333) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                C2164 * C124 + C2159 * C131) *
                   C2165 +
               (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                C2164 * C135 + C2159 * C145) *
                   C50849 +
               (C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
                C2164 * C254 + C2159 * C268) *
                   C2166 +
               (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
                C2164 * C264 + C2159 * C284) *
                   C50720) *
                  C50732 * C50606 * C50590 * C113 -
              ((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
                C2162 * C265 + C2157 * C285) *
                   C50720 +
               (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
                C2162 * C255 + C2157 * C269) *
                   C2166 +
               (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                C2162 * C134 + C2157 * C144) *
                   C50849 +
               (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                C2162 * C123 + C2157 * C130) *
                   C2165) *
                  C50732 * C50606 * C50590 * C114 +
              ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                C2164 * C126 + C2159 * C138) *
                   C2165 +
               (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                C2164 * C137 + C2159 * C147) *
                   C50849 +
               (C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
                C2164 * C261 + C2159 * C279) *
                   C2166 +
               (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
                C2164 * C280 + C2159 * C291) *
                   C50720) *
                  C50732 * C50606 * C50590 * C115 -
              ((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
                C2162 * C263 + C2157 * C283) *
                   C50720 +
               (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
                C2162 * C253 + C2157 * C267) *
                   C2166 +
               (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
                C2162 * C136 + C2157 * C146) *
                   C50849 +
               (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
                C2162 * C125 + C2157 * C132) *
                   C2165) *
                  C50732 * C50606 * C50590 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C2165 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50849 +
                (C2362 + C2363 + C2364) * C2166 +
                (C2365 + C2366 + C2367) * C50720) *
                   C50732 * C50606 * C248 -
               ((C2368 + C2369 + C2370) * C50720 +
                (C2371 + C2372 + C2373) * C2166 +
                (C2367 + C2366 + C2365) * C50849 +
                (C2364 + C2363 + C2362) * C2165) *
                   C50732 * C50606 * C249 +
               ((C2373 + C2372 + C2371) * C2165 +
                (C2370 + C2369 + C2368) * C50849 +
                (C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
                 C2164 * C970 + C2159 * C978) *
                    C2166 +
                (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
                 C2164 * C974 + C2159 * C982) *
                    C50720) *
                   C50732 * C50606 * C250) *
                  C251 +
              (((C2374 + C2375 + C2376) * C2165 +
                (C2377 + C2378 + C2379) * C50849 +
                (C2380 + C2381 + C2382) * C2166 +
                (C2383 + C2384 + C2385) * C50720) *
                   C50732 * C50606 * C249 -
               ((C2379 + C2378 + C2377) * C50720 +
                (C2376 + C2375 + C2374) * C2166 +
                (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50849 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C2165) *
                   C50732 * C50606 * C248 -
               ((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
                 C2162 * C975 + C2157 * C983) *
                    C50720 +
                (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
                 C2162 * C971 + C2157 * C979) *
                    C2166 +
                (C2385 + C2384 + C2383) * C50849 +
                (C2382 + C2381 + C2380) * C2165) *
                   C50732 * C50606 * C250) *
                  C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C391 -
           ((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
             C2162 * C784 + C2157 * C790) *
                C50720 +
            (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
             C2162 * C775 + C2157 * C780) *
                C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C2162 * C1086 + C2157 * C1094 + C2163 * C1085 + C2158 * C1093 +
             C2164 * C1084 + C2159 * C1092) *
                C2166 +
            (C2162 * C1090 + C2157 * C1098 + C2163 * C1089 + C2158 * C1097 +
             C2164 * C1088 + C2159 * C1096) *
                C50720) *
               C50732 * C393) *
              C50590 * C251 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
             C2164 * C778 + C2159 * C783) *
                C2166 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
             C2164 * C787 + C2159 * C793) *
                C50720) *
               C50732 * C392 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C391 -
           ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
             C2162 * C1089 + C2157 * C1097) *
                C50720 +
            (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
             C2162 * C1085 + C2157 * C1093) *
                C2166 +
            (C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
             C2162 * C417 + C2157 * C429) *
                C50849 +
            (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
             C2162 * C399 + C2157 * C413) *
                C2165) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 +
           (C10616 * C256 + C50540 * C270) * C10618 +
           (C10616 * C266 + C50540 * C286) * C10613 +
           (C10616 * C257 + C50540 * C271) * C10619 +
           (C10616 * C275 + C50540 * C287) * C10614 +
           (C10616 * C972 + C50540 * C980) * C10620 +
           (C10616 * C976 + C50540 * C984) * C10615) *
              C50732 * C50606 * C50590 * C113 -
          ((C10616 * C975 + C50540 * C983) * C10615 +
           (C10616 * C971 + C50540 * C979) * C10620 +
           (C10616 * C276 + C50540 * C288) * C10614 +
           (C10616 * C258 + C50540 * C272) * C10619 +
           (C10616 * C265 + C50540 * C285) * C10613 +
           (C10616 * C255 + C50540 * C269) * C10618 +
           (C10616 * C134 + C50540 * C144) * C10612 +
           (C10616 * C123 + C50540 * C130) * C10617) *
              C50732 * C50606 * C50590 * C114 +
          ((C10616 * C124 + C50540 * C131) * C10617 +
           (C10616 * C135 + C50540 * C145) * C10612 +
           (C10616 * C254 + C50540 * C268) * C10618 +
           (C10616 * C264 + C50540 * C284) * C10613 +
           (C10616 * C259 + C50540 * C273) * C10619 +
           (C10616 * C277 + C50540 * C289) * C10614 +
           (C10616 * C970 + C50540 * C978) * C10620 +
           (C10616 * C974 + C50540 * C982) * C10615) *
              C50732 * C50606 * C50590 * C115 -
          ((C10616 * C973 + C50540 * C981) * C10615 +
           (C10616 * C969 + C50540 * C977) * C10620 +
           (C10616 * C278 + C50540 * C290) * C10614 +
           (C10616 * C260 + C50540 * C274) * C10619 +
           (C10616 * C263 + C50540 * C283) * C10613 +
           (C10616 * C253 + C50540 * C267) * C10618 +
           (C10616 * C136 + C50540 * C146) * C10612 +
           (C10616 * C125 + C50540 * C132) * C10617) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C248 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C249 +
           (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            (C10616 * C8954 + C50540 * C8958) * C10620 +
            (C10616 * C8956 + C50540 * C8960) * C10615) *
               C50732 * C50606 * C250) *
              C251 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C249 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C248 -
           ((C10616 * C8955 + C50540 * C8959) * C10615 +
            (C10616 * C8953 + C50540 * C8957) * C10620 + C10767 * C10614 +
            C10766 * C10619 + C10765 * C10613 + C10764 * C10618 +
            C10763 * C10612 + C10762 * C10617) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C391 -
           ((C10616 * C4012 + C50540 * C4018) * C10615 +
            (C10616 * C4009 + C50540 * C4015) * C10620 +
            (C10616 * C1437 + C50540 * C1445) * C10614 +
            (C10616 * C1433 + C50540 * C1441) * C10619 +
            (C10616 * C784 + C50540 * C790) * C10613 +
            (C10616 * C775 + C50540 * C780) * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C392 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 +
            (C10616 * C1086 + C50540 * C1094) * C10618 +
            (C10616 * C1090 + C50540 * C1098) * C10613 +
            (C10616 * C3493 + C50540 * C3499) * C10619 +
            (C10616 * C3496 + C50540 * C3502) * C10614 +
            (C10616 * C9122 + C50540 * C9126) * C10620 +
            (C10616 * C9124 + C50540 * C9128) * C10615) *
               C50732 * C393) *
              C50590 * C251 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 +
            (C10616 * C776 + C50540 * C781) * C10618 +
            (C10616 * C785 + C50540 * C791) * C10613 +
            (C10616 * C1432 + C50540 * C1440) * C10619 +
            (C10616 * C1436 + C50540 * C1444) * C10614 +
            (C10616 * C4008 + C50540 * C4014) * C10620 +
            (C10616 * C4011 + C50540 * C4017) * C10615) *
               C50732 * C392 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C391 -
           ((C10616 * C9123 + C50540 * C9127) * C10615 +
            (C10616 * C9121 + C50540 * C9125) * C10620 +
            (C10616 * C3495 + C50540 * C3501) * C10614 +
            (C10616 * C3492 + C50540 * C3498) * C10619 +
            (C10616 * C1089 + C50540 * C1097) * C10613 +
            (C10616 * C1085 + C50540 * C1093) * C10618 +
            (C10616 * C417 + C50540 * C429) * C10612 +
            (C10616 * C399 + C50540 * C413) * C10617) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C10616 * C122 + C50540 * C129) * C2165 +
                                (C10616 * C133 + C50540 * C143) * C50849 +
                                C10752 * C2166 + C10753 * C50720) *
                                   C15333 +
                               (C12894 * C2165 + C12895 * C50849 +
                                C11239 * C2166 + C11238 * C50720) *
                                   C15334 +
                               (C12897 * C2165 + C12896 * C50849 +
                                C11534 * C2166 + C11535 * C50720) *
                                   C15335) *
                                  C50606 * C50590 * C113 -
                              ((C12903 * C50720 + C12902 * C2166 +
                                C12901 * C50849 + C12900 * C2165) *
                                   C15335 +
                               (C11241 * C50720 + C11240 * C2166 +
                                C12899 * C50849 + C12898 * C2165) *
                                   C15334 +
                               (C10761 * C50720 + C10760 * C2166 +
                                (C10616 * C134 + C50540 * C144) * C50849 +
                                (C10616 * C123 + C50540 * C130) * C2165) *
                                   C15333) *
                                  C50606 * C50590 * C114 +
                              (((C10616 * C124 + C50540 * C131) * C2165 +
                                (C10616 * C135 + C50540 * C145) * C50849 +
                                C10976 * C2166 + C10977 * C50720) *
                                   C15333 +
                               (C13230 * C2165 + C13231 * C50849 +
                                C13072 * C2166 + C13073 * C50720) *
                                   C15334 +
                               ((C10616 * C400 + C50540 * C414) * C2165 +
                                (C10616 * C418 + C50540 * C430) * C50849 +
                                (C10616 * C1084 + C50540 * C1092) * C2166 +
                                (C10616 * C1088 + C50540 * C1096) * C50720) *
                                   C15335) *
                                  C50606 * C50590 * C115 -
                              (((C10616 * C1087 + C50540 * C1095) * C50720 +
                                (C10616 * C1083 + C50540 * C1091) * C2166 +
                                (C10616 * C419 + C50540 * C431) * C50849 +
                                (C10616 * C401 + C50540 * C415) * C2165) *
                                   C15335 +
                               ((C10616 * C787 + C50540 * C793) * C50720 +
                                (C10616 * C778 + C50540 * C783) * C2166 +
                                (C10616 * C404 + C50540 * C424) * C50849 +
                                (C10616 * C394 + C50540 * C408) * C2165) *
                                   C15334 +
                               ((C10616 * C263 + C50540 * C283) * C50720 +
                                (C10616 * C253 + C50540 * C267) * C2166 +
                                (C10616 * C136 + C50540 * C146) * C50849 +
                                (C10616 * C125 + C50540 * C132) * C2165) *
                                   C15333) *
                                  C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C10616 * C122 + C50540 * C129) * C2165 +
                                 (C10616 * C133 + C50540 * C143) * C50849 +
                                 C10752 * C2166 + C10753 * C50720) *
                                    C15333 +
                                (C12894 * C2165 + C12895 * C50849 +
                                 C11239 * C2166 + C11238 * C50720) *
                                    C15334 +
                                (C12897 * C2165 + C12896 * C50849 +
                                 C11534 * C2166 + C11535 * C50720) *
                                    C15335) *
                                   C50606 * C248 -
                               ((C11537 * C50720 + C11536 * C2166 +
                                 C11535 * C50849 + C11534 * C2165) *
                                    C15335 +
                                (C11236 * C50720 + C11237 * C2166 +
                                 C11238 * C50849 + C11239 * C2165) *
                                    C15334 +
                                (C10755 * C50720 + C10754 * C2166 +
                                 C10753 * C50849 + C10752 * C2165) *
                                    C15333) *
                                   C50606 * C249 +
                               ((C10754 * C2165 + C10755 * C50849 +
                                 C10756 * C2166 + C10757 * C50720) *
                                    C15333 +
                                (C11237 * C2165 + C11236 * C50849 +
                                 C11235 * C2166 + C11234 * C50720) *
                                    C15334 +
                                (C11536 * C2165 + C11537 * C50849 +
                                 C11538 * C2166 + C11539 * C50720) *
                                    C15335) *
                                   C50606 * C250) *
                                  C251 +
                              (((C10760 * C2165 + C10761 * C50849 +
                                 C10762 * C2166 + C10763 * C50720) *
                                    C15333 +
                                (C11240 * C2165 + C11241 * C50849 +
                                 C11242 * C2166 + C11243 * C50720) *
                                    C15334 +
                                (C12902 * C2165 + C12903 * C50849 +
                                 C12904 * C2166 + C12905 * C50720) *
                                    C15335) *
                                   C50606 * C249 -
                               ((C12903 * C50720 + C12902 * C2166 +
                                 C12901 * C50849 + C12900 * C2165) *
                                    C15335 +
                                (C11241 * C50720 + C11240 * C2166 +
                                 C12899 * C50849 + C12898 * C2165) *
                                    C15334 +
                                (C10761 * C50720 + C10760 * C2166 +
                                 (C10616 * C134 + C50540 * C144) * C50849 +
                                 (C10616 * C123 + C50540 * C130) * C2165) *
                                    C15333) *
                                   C50606 * C248 -
                               (((C10616 * C9123 + C50540 * C9127) * C50720 +
                                 (C10616 * C9121 + C50540 * C9125) * C2166 +
                                 C12905 * C50849 + C12904 * C2165) *
                                    C15335 +
                                (C11245 * C50720 + C11244 * C2166 +
                                 C11243 * C50849 + C11242 * C2165) *
                                    C15334 +
                                (C10765 * C50720 + C10764 * C2166 +
                                 C10763 * C50849 + C10762 * C2165) *
                                    C15333) *
                                   C50606 * C250) *
                                  C50577)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C391 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C392 +
           (C18461 * C15333 + (C18432 + C18431 + C18430 + C18429) * C15334 +
            ((C10616 * C7161 + C50540 * C7167) * C2165 +
             (C10616 * C7164 + C50540 * C7170) * C50849 +
             (C10616 * C14730 + C50540 * C14734) * C2166 +
             (C10616 * C14733 + C50540 * C14736) * C50720) *
                C15335) *
               C393) *
              C50590 * C251 +
          (((C18433 + C18434 + C18435 + C18436) * C15333 +
            (C18437 + C18438 + C18439 + C18440) * C15334 +
            (C18456 + C18457 + C18458 + C18459) * C15335) *
               C392 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C391 -
           (((C10616 * C16623 + C50540 * C16625) * C50720 +
             (C10616 * C16622 + C50540 * C16624) * C2166 +
             (C10616 * C7163 + C50540 * C7169) * C50849 +
             (C10616 * C7160 + C50540 * C7166) * C2165) *
                C15335 +
            (C18459 + C18458 + C18457 + C18456) * C15334 + C18462 * C15333) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50839 -
           ((C10616 * C4012 + C50540 * C4018) * C10615 +
            (C10616 * C4009 + C50540 * C4015) * C10620 +
            (C10616 * C1437 + C50540 * C1445) * C10614 +
            (C10616 * C1433 + C50540 * C1441) * C10619 +
            (C10616 * C784 + C50540 * C790) * C10613 +
            (C10616 * C775 + C50540 * C780) * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 +
            (C10616 * C776 + C50540 * C781) * C10618 +
            (C10616 * C785 + C50540 * C791) * C10613 +
            (C10616 * C1432 + C50540 * C1440) * C10619 +
            (C10616 * C1436 + C50540 * C1444) * C10614 +
            (C10616 * C4008 + C50540 * C4014) * C10620 +
            (C10616 * C4011 + C50540 * C4017) * C10615) *
               C50732 * C50670 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50839 -
           ((C10616 * C4010 + C50540 * C4016) * C10615 +
            (C10616 * C4007 + C50540 * C4013) * C10620 +
            (C10616 * C1435 + C50540 * C1443) * C10614 +
            (C10616 * C1431 + C50540 * C1439) * C10619 +
            (C10616 * C786 + C50540 * C792) * C10613 +
            (C10616 * C777 + C50540 * C782) * C10618 +
            (C10616 * C405 + C50540 * C425) * C10612 +
            (C10616 * C395 + C50540 * C409) * C10617) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50839 -
           ((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
             C2162 * C784 + C2157 * C790) *
                C50720 +
            (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
             C2162 * C775 + C2157 * C780) *
                C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
             C2164 * C778 + C2159 * C783) *
                C2166 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
             C2164 * C787 + C2159 * C793) *
                C50720) *
               C50732 * C50670 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50839 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50720 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C2166 +
            (C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
             C2162 * C405 + C2157 * C425) *
                C50849 +
            (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
             C2162 * C395 + C2157 * C409) *
                C2165) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50839 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50670) *
              C50590 * C50880 +
          (((C18433 + C18434 + C18435 + C18436) * C15333 +
            (C18437 + C18438 + C18439 + C18440) * C15334 +
            (C18456 + C18457 + C18458 + C18459) * C15335) *
               C50670 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50839) *
              C50590 * C50881 +
          ((((C10616 * C124 + C50540 * C131) * C2165 +
             (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
             C10977 * C50720) *
                C15333 +
            (C18761 + C18762 + C18763 + C18764) * C15334 +
            (C18773 + C18774 + C18769 + C18770) * C15335) *
               C50839 -
           (((C10616 * C4430 + C50540 * C4436) * C50720 +
             (C10616 * C4427 + C50540 * C4433) * C2166 +
             (C10616 * C1719 + C50540 * C1727) * C50849 +
             (C10616 * C1715 + C50540 * C1723) * C2165) *
                C15335 +
            (C18770 + C18769 + C18774 + C18773) * C15334 +
            (C18764 + C18763 + C18762 + C18761) * C15333) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C248 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C249 +
           ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
             C2164 * C970 + C2159 * C978) *
                C2166 +
            (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
             C2164 * C974 + C2159 * C982) *
                C50720) *
               C50732 * C50606 * C250) *
              C251 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C249 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C248 -
           ((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
             C2162 * C975 + C2157 * C983) *
                C50720 +
            (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
             C2162 * C971 + C2157 * C979) *
                C2166 +
            (C2385 + C2384 + C2383) * C50849 +
            (C2382 + C2381 + C2380) * C2165) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
            C2164 * C254 + C2159 * C268) *
               C2166 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
            C2164 * C264 + C2159 * C284) *
               C50720) *
              C50732 * C50606 * C50590 * C113 -
          ((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
            C2162 * C265 + C2157 * C285) *
               C50720 +
           (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
            C2162 * C255 + C2157 * C269) *
               C2166 +
           (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
            C2162 * C134 + C2157 * C144) *
               C50849 +
           (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
            C2162 * C123 + C2157 * C130) *
               C2165) *
              C50732 * C50606 * C50590 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
            C2164 * C126 + C2159 * C138) *
               C2165 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
            C2164 * C137 + C2159 * C147) *
               C50849 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
            C2164 * C261 + C2159 * C279) *
               C2166 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
            C2164 * C280 + C2159 * C291) *
               C50720) *
              C50732 * C50606 * C50590 * C115 -
          ((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
            C2162 * C263 + C2157 * C283) *
               C50720 +
           (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
            C2162 * C253 + C2157 * C267) *
               C2166 +
           (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
            C2162 * C136 + C2157 * C146) *
               C50849 +
           (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
            C2162 * C125 + C2157 * C132) *
               C2165) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 +
           (C10616 * C256 + C50540 * C270) * C10618 +
           (C10616 * C266 + C50540 * C286) * C10613 +
           (C10616 * C257 + C50540 * C271) * C10619 +
           (C10616 * C275 + C50540 * C287) * C10614 +
           (C10616 * C972 + C50540 * C980) * C10620 +
           (C10616 * C976 + C50540 * C984) * C10615) *
              C50732 * C50606 * C50590 * C113 -
          ((C10616 * C975 + C50540 * C983) * C10615 +
           (C10616 * C971 + C50540 * C979) * C10620 +
           (C10616 * C276 + C50540 * C288) * C10614 +
           (C10616 * C258 + C50540 * C272) * C10619 +
           (C10616 * C265 + C50540 * C285) * C10613 +
           (C10616 * C255 + C50540 * C269) * C10618 +
           (C10616 * C134 + C50540 * C144) * C10612 +
           (C10616 * C123 + C50540 * C130) * C10617) *
              C50732 * C50606 * C50590 * C114 +
          ((C10616 * C124 + C50540 * C131) * C10617 +
           (C10616 * C135 + C50540 * C145) * C10612 +
           (C10616 * C254 + C50540 * C268) * C10618 +
           (C10616 * C264 + C50540 * C284) * C10613 +
           (C10616 * C259 + C50540 * C273) * C10619 +
           (C10616 * C277 + C50540 * C289) * C10614 +
           (C10616 * C970 + C50540 * C978) * C10620 +
           (C10616 * C974 + C50540 * C982) * C10615) *
              C50732 * C50606 * C50590 * C115 -
          ((C10616 * C973 + C50540 * C981) * C10615 +
           (C10616 * C969 + C50540 * C977) * C10620 +
           (C10616 * C278 + C50540 * C290) * C10614 +
           (C10616 * C260 + C50540 * C274) * C10619 +
           (C10616 * C263 + C50540 * C283) * C10613 +
           (C10616 * C253 + C50540 * C267) * C10618 +
           (C10616 * C136 + C50540 * C146) * C10612 +
           (C10616 * C125 + C50540 * C132) * C10617) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C248 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C249 +
           (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            (C10616 * C8954 + C50540 * C8958) * C10620 +
            (C10616 * C8956 + C50540 * C8960) * C10615) *
               C50732 * C50606 * C250) *
              C251 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C249 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C248 -
           ((C10616 * C8955 + C50540 * C8959) * C10615 +
            (C10616 * C8953 + C50540 * C8957) * C10620 + C10767 * C10614 +
            C10766 * C10619 + C10765 * C10613 + C10764 * C10618 +
            C10763 * C10612 + C10762 * C10617) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C2165 +
            (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
            C10753 * C50720) *
               C15333 +
           (C12894 * C2165 + C12895 * C50849 + C11239 * C2166 +
            C11238 * C50720) *
               C15334 +
           (C12897 * C2165 + C12896 * C50849 + C11534 * C2166 +
            C11535 * C50720) *
               C15335) *
              C50606 * C50590 * C113 -
          ((C12903 * C50720 + C12902 * C2166 + C12901 * C50849 +
            C12900 * C2165) *
               C15335 +
           (C11241 * C50720 + C11240 * C2166 + C12899 * C50849 +
            C12898 * C2165) *
               C15334 +
           (C10761 * C50720 + C10760 * C2166 +
            (C10616 * C134 + C50540 * C144) * C50849 +
            (C10616 * C123 + C50540 * C130) * C2165) *
               C15333) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C2165 +
            (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
            C10977 * C50720) *
               C15333 +
           (C13230 * C2165 + C13231 * C50849 + C13072 * C2166 +
            C13073 * C50720) *
               C15334 +
           ((C10616 * C400 + C50540 * C414) * C2165 +
            (C10616 * C418 + C50540 * C430) * C50849 +
            (C10616 * C1084 + C50540 * C1092) * C2166 +
            (C10616 * C1088 + C50540 * C1096) * C50720) *
               C15335) *
              C50606 * C50590 * C115 -
          (((C10616 * C1087 + C50540 * C1095) * C50720 +
            (C10616 * C1083 + C50540 * C1091) * C2166 +
            (C10616 * C419 + C50540 * C431) * C50849 +
            (C10616 * C401 + C50540 * C415) * C2165) *
               C15335 +
           ((C10616 * C787 + C50540 * C793) * C50720 +
            (C10616 * C778 + C50540 * C783) * C2166 +
            (C10616 * C404 + C50540 * C424) * C50849 +
            (C10616 * C394 + C50540 * C408) * C2165) *
               C15334 +
           ((C10616 * C263 + C50540 * C283) * C50720 +
            (C10616 * C253 + C50540 * C267) * C2166 +
            (C10616 * C136 + C50540 * C146) * C50849 +
            (C10616 * C125 + C50540 * C132) * C2165) *
               C15333) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C12894 * C2165 + C12895 * C50849 + C11239 * C2166 +
             C11238 * C50720) *
                C15334 +
            (C12897 * C2165 + C12896 * C50849 + C11534 * C2166 +
             C11535 * C50720) *
                C15335) *
               C50606 * C248 -
           ((C11537 * C50720 + C11536 * C2166 + C11535 * C50849 +
             C11534 * C2165) *
                C15335 +
            (C11236 * C50720 + C11237 * C2166 + C11238 * C50849 +
             C11239 * C2165) *
                C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50606 * C249 +
           ((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
             C10757 * C50720) *
                C15333 +
            (C11237 * C2165 + C11236 * C50849 + C11235 * C2166 +
             C11234 * C50720) *
                C15334 +
            (C11536 * C2165 + C11537 * C50849 + C11538 * C2166 +
             C11539 * C50720) *
                C15335) *
               C50606 * C250) *
              C251 +
          (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
             C10763 * C50720) *
                C15333 +
            (C11240 * C2165 + C11241 * C50849 + C11242 * C2166 +
             C11243 * C50720) *
                C15334 +
            (C12902 * C2165 + C12903 * C50849 + C12904 * C2166 +
             C12905 * C50720) *
                C15335) *
               C50606 * C249 -
           ((C12903 * C50720 + C12902 * C2166 + C12901 * C50849 +
             C12900 * C2165) *
                C15335 +
            (C11241 * C50720 + C11240 * C2166 + C12899 * C50849 +
             C12898 * C2165) *
                C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50606 * C248 -
           (((C10616 * C9123 + C50540 * C9127) * C50720 +
             (C10616 * C9121 + C50540 * C9125) * C2166 + C12905 * C50849 +
             C12904 * C2165) *
                C15335 +
            (C11245 * C50720 + C11244 * C2166 + C11243 * C50849 +
             C11242 * C2165) *
                C15334 +
            (C10765 * C50720 + C10764 * C2166 + C10763 * C50849 +
             C10762 * C2165) *
                C15333) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C50882 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50883 +
           (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C50606 * C1199) *
              C50830 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50883 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C50882 -
           ((C10616 * C8955 + C50540 * C8959) * C10615 +
            (C10616 * C8953 + C50540 * C8957) * C10620 + C10767 * C10614 +
            C10766 * C10619 + C10765 * C10613 + C10764 * C10618 +
            C10763 * C10612 + C10762 * C10617) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C50882 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50883 +
           ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50883 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C50882 -
           ((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
             C2162 * C975 + C2157 * C983) *
                C50720 +
            (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
             C2162 * C971 + C2157 * C979) *
                C2166 +
            (C2385 + C2384 + C2383) * C50849 +
            (C2382 + C2381 + C2380) * C2165) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50606 * C50882 -
           (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50606 * C50883 +
           ((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
             C10757 * C50720) *
                C15333 +
            (C11237 * C2165 + C11236 * C50849 + C11235 * C2166 +
             C11234 * C50720) *
                C15334 +
            (C11536 * C2165 + C11537 * C50849 + C11538 * C2166 +
             C11539 * C50720) *
                C15335) *
               C50606 * C1199) *
              C50830 +
          (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
             C10763 * C50720) *
                C15333 +
            (C18977 + C18978 + C18979 + C18980) * C15334 +
            (C18981 + C18982 + C18983 + C18984) * C15335) *
               C50606 * C50883 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50606 * C50882 -
           (((C10616 * C9123 + C50540 * C9127) * C50720 +
             (C10616 * C9121 + C50540 * C9125) * C2166 + C12905 * C50849 +
             C12904 * C2165) *
                C15335 +
            (C11245 * C50720 + C11244 * C2166 + C11243 * C50849 +
             C11242 * C2165) *
                C15334 +
            (C10765 * C50720 + C10764 * C2166 + C10763 * C50849 +
             C10762 * C2165) *
                C15333) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50839 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50882 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50670 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50839) *
              C50883 +
          ((C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C50839 -
           ((C10616 * C11866 + C50540 * C11868) * C10615 +
            (C10616 * C11865 + C50540 * C11867) * C10620 + C11875 * C10614 +
            C11874 * C10619 + C11234 * C10613 + C11235 * C10618 +
            C11236 * C10612 + C11237 * C10617) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50839 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50882 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50670 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50839) *
              C50883 +
          (((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C50839 -
           ((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50720 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C2166 +
            (C4037 + C4036 + C4035) * C50849 +
            (C4034 + C4033 + C4032) * C2165) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50839 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50670) *
              C50882 +
          (((C18969 + C18970 + C18971 + C18972) * C15333 +
            (C18973 + C18974 + C18975 + C18976) * C15334 +
            (C19379 + C19380 + C19381 + C19382) * C15335) *
               C50670 -
           (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50839) *
              C50883 +
          (((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
             C10757 * C50720) *
                C15333 +
            (C19874 + C19875 + C19876 + C19877) * C15334 +
            (C19878 + C19879 + C19880 + C19881) * C15335) *
               C50839 -
           (((C10616 * C12138 + C50540 * C12140) * C50720 +
             (C10616 * C12137 + C50540 * C12139) * C2166 + C13847 * C50849 +
             C13846 * C2165) *
                C15335 +
            (C19881 + C19880 + C19879 + C19878) * C15334 +
            (C19877 + C19876 + C19875 + C19874) * C15333) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C2165 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50849 +
                (C2362 + C2363 + C2364) * C2166 +
                (C2365 + C2366 + C2367) * C50720) *
                   C50732 * C50606 * C893 -
               ((C2368 + C2369 + C2370) * C50720 +
                (C2371 + C2372 + C2373) * C2166 +
                (C2367 + C2366 + C2365) * C50849 +
                (C2364 + C2363 + C2362) * C2165) *
                   C50732 * C50606 * C50642) *
                  C895 +
              (((C2374 + C2375 + C2376) * C2165 +
                (C2377 + C2378 + C2379) * C50849 +
                (C2380 + C2381 + C2382) * C2166 +
                (C2383 + C2384 + C2385) * C50720) *
                   C50732 * C50606 * C50642 -
               ((C2379 + C2378 + C2377) * C50720 +
                (C2376 + C2375 + C2374) * C2166 +
                (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50849 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C2165) *
                   C50732 * C50606 * C893) *
                  C896 +
              (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                 C2164 * C126 + C2159 * C138) *
                    C2165 +
                (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                 C2164 * C137 + C2159 * C147) *
                    C50849 +
                (C2690 + C2691 + C2692) * C2166 +
                (C2693 + C2694 + C2695) * C50720) *
                   C50732 * C50606 * C893 -
               ((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
                 C2162 * C277 + C2157 * C289) *
                    C50720 +
                (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
                 C2162 * C259 + C2157 * C273) *
                    C2166 +
                (C2695 + C2694 + C2693) * C50849 +
                (C2692 + C2691 + C2690) * C2165) *
                   C50732 * C50606 * C50642) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                C2164 * C124 + C2159 * C131) *
                   C2165 +
               (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                C2164 * C135 + C2159 * C145) *
                   C50849 +
               (C2362 + C2363 + C2364) * C2166 +
               (C2365 + C2366 + C2367) * C50720) *
                  C50732 * C50606 * C964 -
              ((C2368 + C2369 + C2370) * C50720 +
               (C2371 + C2372 + C2373) * C2166 +
               (C2367 + C2366 + C2365) * C50849 +
               (C2364 + C2363 + C2362) * C2165) *
                  C50732 * C50606 * C965 +
              ((C2373 + C2372 + C2371) * C2165 +
               (C2370 + C2369 + C2368) * C50849 +
               (C3340 + C3341 + C3342) * C2166 +
               (C3343 + C3344 + C3345) * C50720) *
                  C50732 * C50606 * C966 -
              ((C2164 * C3318 + C2159 * C3324 + C2163 * C3319 + C2158 * C3325 +
                C2162 * C3320 + C2157 * C3326) *
                   C50720 +
               (C2164 * C3315 + C2159 * C3321 + C2163 * C3316 + C2158 * C3322 +
                C2162 * C3317 + C2157 * C3323) *
                   C2166 +
               (C3345 + C3344 + C3343) * C50849 +
               (C3342 + C3341 + C3340) * C2165) *
                  C50732 * C50606 * C967) *
             C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C391 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C3516 + C3517 + C3518) * C2166 +
            (C3519 + C3520 + C3521) * C50720) *
               C50732 * C393) *
              C893 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
             C2164 * C1431 + C2159 * C1439) *
                C2166 +
            (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
             C2164 * C1435 + C2159 * C1443) *
                C50720) *
               C50732 * C392 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C391 -
           ((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
             C2162 * C3496 + C2157 * C3502) *
                C50720 +
            (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
             C2162 * C3493 + C2157 * C3499) *
                C2166 +
            (C3521 + C3520 + C3519) * C50849 +
            (C3518 + C3517 + C3516) * C2165) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C893 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50642) *
              C895 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50642 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C893) *
              C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50606 * C893 -
           ((C10616 * C3318 + C50540 * C3324) * C10615 +
            (C10616 * C3315 + C50540 * C3321) * C10620 + C10981 * C10614 +
            C10980 * C10619 + C10979 * C10613 + C10978 * C10618 +
            C10977 * C10612 + C10976 * C10617) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
           C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
           C10756 * C10620 + C10757 * C10615) *
              C50732 * C50606 * C964 -
          (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
           C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
           C10753 * C10612 + C10752 * C10617) *
              C50732 * C50606 * C965 +
          (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
           C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
           C11418 * C10620 + C11419 * C10615) *
              C50732 * C50606 * C966 -
          ((C10616 * C11410 + C50540 * C11412) * C10615 +
           (C10616 * C11409 + C50540 * C11411) * C10620 + C11419 * C10614 +
           C11418 * C10619 + C10758 * C10613 + C10759 * C10618 +
           C10757 * C10612 + C10756 * C10617) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C391 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C392 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
            C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
            C11538 * C10620 + C11539 * C10615) *
               C50732 * C393) *
              C893 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            (C10616 * C9640 + C50540 * C9644) * C10620 +
            (C10616 * C9642 + C50540 * C9646) * C10615) *
               C50732 * C392 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C391 -
           ((C10616 * C11518 + C50540 * C11520) * C10615 +
            (C10616 * C11517 + C50540 * C11519) * C10620 + C11539 * C10614 +
            C11538 * C10619 + C11537 * C10613 + C11536 * C10618 +
            C11535 * C10612 + C11534 * C10617) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50606 * C893 -
           ((C18976 + C18975 + C18974 + C18973) * C15335 +
            (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
             C10763 * C50720) *
                C15333 +
            (C18977 + C18978 + C18979 + C18980) * C15334 +
            (C18981 + C18982 + C18983 + C18984) * C15335) *
               C50606 * C50642 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C2165 +
             (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
             C10977 * C50720) *
                C15333 +
            (C18761 + C18762 + C18763 + C18764) * C15334 +
            (C18773 + C18774 + C18769 + C18770) * C15335) *
               C50606 * C893 -
           (((C10616 * C3494 + C50540 * C3500) * C50720 +
             (C10616 * C3491 + C50540 * C3497) * C2166 + C18614 * C50849 +
             C18613 * C2165) *
                C15335 +
            (C13075 * C50720 + C13074 * C2166 + C13073 * C50849 +
             C13072 * C2165) *
                C15334 +
            (C10979 * C50720 + C10978 * C2166 + C10977 * C50849 +
             C10976 * C2165) *
                C15333) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C2165 +
            (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
            C10753 * C50720) *
               C15333 +
           (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
              C50606 * C964 -
          ((C18976 + C18975 + C18974 + C18973) * C15335 +
           (C18972 + C18971 + C18970 + C18969) * C15334 +
           (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
            C10752 * C2165) *
               C15333) *
              C50606 * C965 +
          ((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
            C10757 * C50720) *
               C15333 +
           (C11237 * C2165 + C11236 * C50849 + C11235 * C2166 +
            C11234 * C50720) *
               C15334 +
           (C11536 * C2165 + C11537 * C50849 + C11538 * C2166 +
            C11539 * C50720) *
               C15335) *
              C50606 * C966 -
          (((C10616 * C11518 + C50540 * C11520) * C50720 +
            (C10616 * C11517 + C50540 * C11519) * C2166 + C11539 * C50849 +
            C11538 * C2165) *
               C15335 +
           (C11875 * C50720 + C11874 * C2166 + C11234 * C50849 +
            C11235 * C2165) *
               C15334 +
           (C10758 * C50720 + C10759 * C2166 + C10757 * C50849 +
            C10756 * C2165) *
               C15333) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C391 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C392 +
           (C18461 * C15333 + (C18432 + C18431 + C18430 + C18429) * C15334 +
            ((C10616 * C7161 + C50540 * C7167) * C2165 +
             (C10616 * C7164 + C50540 * C7170) * C50849 + C19384 * C2166 +
             C19385 * C50720) *
                C15335) *
               C393) *
              C893 +
          (((C18969 + C18970 + C18971 + C18972) * C15333 +
            (C18973 + C18974 + C18975 + C18976) * C15334 +
            (C19379 + C19380 + C19381 + C19382) * C15335) *
               C392 -
           (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C391 -
           (((C10616 * C14731 + C50540 * C14735) * C50720 +
             (C10616 * C14729 + C50540 * C14732) * C2166 + C19385 * C50849 +
             C19384 * C2165) *
                C15335 +
            (C19382 + C19381 + C19380 + C19379) * C15334 + C19387 * C15333) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C10617 +
             (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
             C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
             C10756 * C10620 + C10757 * C10615) *
                C50732 * C50839 -
            (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
             C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
             (C10616 * C407 + C50540 * C427) * C10612 +
             (C10616 * C397 + C50540 * C411) * C10617) *
                C50732 * C50670) *
               C893 +
           ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
             C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
             (C10616 * C9640 + C50540 * C9644) * C10620 +
             (C10616 * C9642 + C50540 * C9646) * C10615) *
                C50732 * C50670 -
            (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
             C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
             C10753 * C10612 + C10752 * C10617) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C10616 * C396 + C50540 * C410) * C10617 +
             (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
             C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
             C11244 * C10620 + C11245 * C10615) *
                C50732 * C50670 -
            (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
             C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
             (C10616 * C134 + C50540 * C144) * C10612 +
             (C10616 * C123 + C50540 * C130) * C10617) *
                C50732 * C50839) *
               C893 +
           ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
             C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
             C10766 * C10620 + C10767 * C10615) *
                C50732 * C50839 -
            ((C10616 * C9641 + C50540 * C9645) * C10615 +
             (C10616 * C9639 + C50540 * C9643) * C10620 + C11245 * C10614 +
             C11244 * C10619 + C11243 * C10613 + C11242 * C10618 +
             C11241 * C10612 + C11240 * C10617) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C2165 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50849 +
             (C2362 + C2363 + C2364) * C2166 +
             (C2365 + C2366 + C2367) * C50720) *
                C50732 * C50839 -
            ((C3060 + C3061 + C3062) * C50720 +
             (C3063 + C3064 + C3065) * C2166 +
             (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50849 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C2165) *
                C50732 * C50670) *
               C893 +
           (((C3065 + C3064 + C3063) * C2165 +
             (C3062 + C3061 + C3060) * C50849 +
             (C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
              C2164 * C1431 + C2159 * C1439) *
                 C2166 +
             (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
              C2164 * C1435 + C2159 * C1443) *
                 C50720) *
                C50732 * C50670 -
            ((C2368 + C2369 + C2370) * C50720 +
             (C2371 + C2372 + C2373) * C2166 +
             (C2367 + C2366 + C2365) * C50849 +
             (C2364 + C2363 + C2362) * C2165) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C2165 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50849 +
             (C3066 + C3067 + C3068) * C2166 +
             (C3069 + C3070 + C3071) * C50720) *
                C50732 * C50670 -
            ((C2379 + C2378 + C2377) * C50720 +
             (C2376 + C2375 + C2374) * C2166 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50849 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C2165) *
                C50732 * C50839) *
               C893 +
           (((C2374 + C2375 + C2376) * C2165 +
             (C2377 + C2378 + C2379) * C50849 +
             (C2380 + C2381 + C2382) * C2166 +
             (C2383 + C2384 + C2385) * C50720) *
                C50732 * C50839 -
            ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50720 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C2166 +
             (C3071 + C3070 + C3069) * C50849 +
             (C3068 + C3067 + C3066) * C2165) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C2165 +
              (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
              C10753 * C50720) *
                 C15333 +
             (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
                C50839 -
            ((C18429 + C18430 + C18431 + C18432) * C15335 +
             (C18428 + C18427 + C18426 + C18425) * C15334 +
             (C18424 + C18423 + C18422 + C18421) * C15333) *
                C50670) *
               C893 +
           (((C18969 + C18970 + C18971 + C18972) * C15333 +
             (C18973 + C18974 + C18975 + C18976) * C15334 +
             (C19379 + C19380 + C19381 + C19382) * C15335) *
                C50670 -
            (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
             (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
              C10752 * C2165) *
                 C15333) *
                C50839) *
               C50642) *
              C50830 +
          ((((C18433 + C18434 + C18435 + C18436) * C15333 +
             (C18437 + C18438 + C18439 + C18440) * C15334 +
             (C18456 + C18457 + C18458 + C18459) * C15335) *
                C50670 -
            (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
             (C10761 * C50720 + C10760 * C2166 +
              (C10616 * C134 + C50540 * C144) * C50849 +
              (C10616 * C123 + C50540 * C130) * C2165) *
                 C15333) *
                C50839) *
               C893 +
           (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
              C10763 * C50720) *
                 C15333 +
             (C18977 + C18978 + C18979 + C18980) * C15334 +
             (C18981 + C18982 + C18983 + C18984) * C15335) *
                C50839 -
            (((C10616 * C10053 + C50540 * C10057) * C50720 +
              (C10616 * C10051 + C50540 * C10055) * C2166 + C18453 * C50849 +
              C18452 * C2165) *
                 C15335 +
             (C18984 + C18983 + C18982 + C18981) * C15334 +
             (C18980 + C18979 + C18978 + C18977) * C15333) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2362 + C2363 + C2364) * C2166 + (C2365 + C2366 + C2367) * C50720) *
              C50732 * C50606 * C964 -
          ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
           (C2367 + C2366 + C2365) * C50849 + (C2364 + C2363 + C2362) * C2165) *
              C50732 * C50606 * C965 +
          ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
           (C3340 + C3341 + C3342) * C2166 + (C3343 + C3344 + C3345) * C50720) *
              C50732 * C50606 * C966 -
          ((C2164 * C3318 + C2159 * C3324 + C2163 * C3319 + C2158 * C3325 +
            C2162 * C3320 + C2157 * C3326) *
               C50720 +
           (C2164 * C3315 + C2159 * C3321 + C2163 * C3316 + C2158 * C3322 +
            C2162 * C3317 + C2157 * C3323) *
               C2166 +
           (C3345 + C3344 + C3343) * C50849 + (C3342 + C3341 + C3340) * C2165) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C893 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50642 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50606 * C893 -
           ((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
             C2162 * C277 + C2157 * C289) *
                C50720 +
            (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
             C2162 * C259 + C2157 * C273) *
                C2166 +
            (C2695 + C2694 + C2693) * C50849 +
            (C2692 + C2691 + C2690) * C2165) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C893 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50642) *
              C895 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50642 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C893) *
              C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50606 * C893 -
           ((C10616 * C3318 + C50540 * C3324) * C10615 +
            (C10616 * C3315 + C50540 * C3321) * C10620 + C10981 * C10614 +
            C10980 * C10619 + C10979 * C10613 + C10978 * C10618 +
            C10977 * C10612 + C10976 * C10617) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
           C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
           C10756 * C10620 + C10757 * C10615) *
              C50732 * C50606 * C964 -
          (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
           C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
           C10753 * C10612 + C10752 * C10617) *
              C50732 * C50606 * C965 +
          (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
           C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
           C11418 * C10620 + C11419 * C10615) *
              C50732 * C50606 * C966 -
          ((C10616 * C11410 + C50540 * C11412) * C10615 +
           (C10616 * C11409 + C50540 * C11411) * C10620 + C11419 * C10614 +
           C11418 * C10619 + C10758 * C10613 + C10759 * C10618 +
           C10757 * C10612 + C10756 * C10617) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50606 * C893 -
           ((C18976 + C18975 + C18974 + C18973) * C15335 +
            (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
             C10763 * C50720) *
                C15333 +
            (C18977 + C18978 + C18979 + C18980) * C15334 +
            (C18981 + C18982 + C18983 + C18984) * C15335) *
               C50606 * C50642 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C2165 +
             (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
             C10977 * C50720) *
                C15333 +
            (C18761 + C18762 + C18763 + C18764) * C15334 +
            (C18773 + C18774 + C18769 + C18770) * C15335) *
               C50606 * C893 -
           (((C10616 * C3494 + C50540 * C3500) * C50720 +
             (C10616 * C3491 + C50540 * C3497) * C2166 + C18614 * C50849 +
             C18613 * C2165) *
                C15335 +
            (C13075 * C50720 + C13074 * C2166 + C13073 * C50849 +
             C13072 * C2165) *
                C15334 +
            (C10979 * C50720 + C10978 * C2166 + C10977 * C50849 +
             C10976 * C2165) *
                C15333) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C2165 +
            (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
            C10753 * C50720) *
               C15333 +
           (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
              C50606 * C964 -
          ((C18976 + C18975 + C18974 + C18973) * C15335 +
           (C18972 + C18971 + C18970 + C18969) * C15334 +
           (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
            C10752 * C2165) *
               C15333) *
              C50606 * C965 +
          ((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
            C10757 * C50720) *
               C15333 +
           (C11237 * C2165 + C11236 * C50849 + C11235 * C2166 +
            C11234 * C50720) *
               C15334 +
           (C11536 * C2165 + C11537 * C50849 + C11538 * C2166 +
            C11539 * C50720) *
               C15335) *
              C50606 * C966 -
          (((C10616 * C11518 + C50540 * C11520) * C50720 +
            (C10616 * C11517 + C50540 * C11519) * C2166 + C11539 * C50849 +
            C11538 * C2165) *
               C15335 +
           (C11875 * C50720 + C11874 * C2166 + C11234 * C50849 +
            C11235 * C2165) *
               C15334 +
           (C10758 * C50720 + C10759 * C2166 + C10757 * C50849 +
            C10756 * C2165) *
               C15333) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C10617 +
             (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
             C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
             C10756 * C10620 + C10757 * C10615) *
                C50732 * C1544 -
            (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
             C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
             (C10616 * C407 + C50540 * C427) * C10612 +
             (C10616 * C397 + C50540 * C411) * C10617) *
                C50732 * C50670) *
               C50838 +
           ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
             C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
             C11874 * C10620 + C11875 * C10615) *
                C50732 * C50670 -
            (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
             C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
             C10753 * C10612 + C10752 * C10617) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C10616 * C396 + C50540 * C410) * C10617 +
             (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
             C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
             C11244 * C10620 + C11245 * C10615) *
                C50732 * C50670 -
            (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
             C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
             (C10616 * C134 + C50540 * C144) * C10612 +
             (C10616 * C123 + C50540 * C130) * C10617) *
                C50732 * C1544) *
               C50838 +
           ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
             C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
             C10766 * C10620 + C10767 * C10615) *
                C50732 * C1544 -
            ((C10616 * C9641 + C50540 * C9645) * C10615 +
             (C10616 * C9639 + C50540 * C9643) * C10620 + C11245 * C10614 +
             C11244 * C10619 + C11243 * C10613 + C11242 * C10618 +
             C11241 * C10612 + C11240 * C10617) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C2165 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50849 +
             (C2362 + C2363 + C2364) * C2166 +
             (C2365 + C2366 + C2367) * C50720) *
                C50732 * C1544 -
            ((C3060 + C3061 + C3062) * C50720 +
             (C3063 + C3064 + C3065) * C2166 +
             (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50849 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C2165) *
                C50732 * C50670) *
               C50838 +
           (((C3065 + C3064 + C3063) * C2165 +
             (C3062 + C3061 + C3060) * C50849 +
             (C4032 + C4033 + C4034) * C2166 +
             (C4035 + C4036 + C4037) * C50720) *
                C50732 * C50670 -
            ((C2368 + C2369 + C2370) * C50720 +
             (C2371 + C2372 + C2373) * C2166 +
             (C2367 + C2366 + C2365) * C50849 +
             (C2364 + C2363 + C2362) * C2165) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C2165 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50849 +
             (C3066 + C3067 + C3068) * C2166 +
             (C3069 + C3070 + C3071) * C50720) *
                C50732 * C50670 -
            ((C2379 + C2378 + C2377) * C50720 +
             (C2376 + C2375 + C2374) * C2166 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50849 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C2165) *
                C50732 * C1544) *
               C50838 +
           (((C2374 + C2375 + C2376) * C2165 +
             (C2377 + C2378 + C2379) * C50849 +
             (C2380 + C2381 + C2382) * C2166 +
             (C2383 + C2384 + C2385) * C50720) *
                C50732 * C1544 -
            ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50720 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C2166 +
             (C3071 + C3070 + C3069) * C50849 +
             (C3068 + C3067 + C3066) * C2165) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C2165 +
              (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
              C10753 * C50720) *
                 C15333 +
             (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
                C1544 -
            (C20286 * C15335 + (C18428 + C18427 + C18426 + C18425) * C15334 +
             (C18424 + C18423 + C18422 + C18421) * C15333) *
                C50670) *
               C50838 +
           (((C18969 + C18970 + C18971 + C18972) * C15333 +
             (C18973 + C18974 + C18975 + C18976) * C15334 +
             (C19379 + C19380 + C19381 + C19382) * C15335) *
                C50670 -
            (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
             (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
              C10752 * C2165) *
                 C15333) *
                C1544) *
               C50642) *
              C50830 +
          ((((C18433 + C18434 + C18435 + C18436) * C15333 +
             (C18437 + C18438 + C18439 + C18440) * C15334 +
             (C18456 + C18457 + C18458 + C18459) * C15335) *
                C50670 -
            (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
             (C10761 * C50720 + C10760 * C2166 +
              (C10616 * C134 + C50540 * C144) * C50849 +
              (C10616 * C123 + C50540 * C130) * C2165) *
                 C15333) *
                C1544) *
               C50838 +
           (((C10760 * C2165 + C10761 * C50849 + C10762 * C2166 +
              C10763 * C50720) *
                 C15333 +
             (C18977 + C18978 + C18979 + C18980) * C15334 +
             (C18981 + C18982 + C18983 + C18984) * C15335) *
                C1544 -
            (((C10616 * C10053 + C50540 * C10057) * C50720 +
              (C10616 * C10051 + C50540 * C10055) * C2166 + C18453 * C50849 +
              C18452 * C2165) *
                 C15335 +
             (C18984 + C18983 + C18982 + C18981) * C15334 +
             (C18980 + C18979 + C18978 + C18977) * C15333) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50884 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50885 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
            C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
            C11538 * C10620 + C11539 * C10615) *
               C50732 * C1960) *
              C50838 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50885 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50884 -
           ((C10616 * C11518 + C50540 * C11520) * C10615 +
            (C10616 * C11517 + C50540 * C11519) * C10620 + C11539 * C10614 +
            C11538 * C10619 + C11537 * C10613 + C11536 * C10618 +
            C11535 * C10612 + C11534 * C10617) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50884 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50885 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C3516 + C3517 + C3518) * C2166 +
            (C3519 + C3520 + C3521) * C50720) *
               C50732 * C1960) *
              C50838 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50885 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50884 -
           ((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
             C2162 * C3496 + C2157 * C3502) *
                C50720 +
            (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
             C2162 * C3493 + C2157 * C3499) *
                C2166 +
            (C3521 + C3520 + C3519) * C50849 +
            (C3518 + C3517 + C3516) * C2165) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50884 -
           (C20286 * C15335 + (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50885 +
           (C18461 * C15333 + (C18432 + C18431 + C18430 + C18429) * C15334 +
            (C20287 + C20288 + C20281 + C20282) * C15335) *
               C1960) *
              C50838 +
          (((C18969 + C18970 + C18971 + C18972) * C15333 +
            (C18973 + C18974 + C18975 + C18976) * C15334 +
            (C19379 + C19380 + C19381 + C19382) * C15335) *
               C50885 -
           (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C50884 -
           (((C10616 * C14731 + C50540 * C14735) * C50720 +
             (C10616 * C14729 + C50540 * C14732) * C2166 + C19385 * C50849 +
             C19384 * C2165) *
                C15335 +
            (C19382 + C19381 + C19380 + C19379) * C15334 + C19387 * C15333) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C2165 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50849 +
                (C2362 + C2363 + C2364) * C2166 +
                (C2365 + C2366 + C2367) * C50720) *
                   C50732 * C1544 -
               ((C3060 + C3061 + C3062) * C50720 +
                (C3063 + C3064 + C3065) * C2166 +
                (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
                 C2162 * C407 + C2157 * C427) *
                    C50849 +
                (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
                 C2162 * C397 + C2157 * C411) *
                    C2165) *
                   C50732 * C50670) *
                  C50590 * C895 +
              (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
                 C2164 * C394 + C2159 * C408) *
                    C2165 +
                (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
                 C2164 * C404 + C2159 * C424) *
                    C50849 +
                (C3066 + C3067 + C3068) * C2166 +
                (C3069 + C3070 + C3071) * C50720) *
                   C50732 * C50670 -
               ((C2379 + C2378 + C2377) * C50720 +
                (C2376 + C2375 + C2374) * C2166 +
                (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50849 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C2165) *
                   C50732 * C1544) *
                  C50590 * C896 +
              (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                 C2164 * C126 + C2159 * C138) *
                    C2165 +
                (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                 C2164 * C137 + C2159 * C147) *
                    C50849 +
                (C2690 + C2691 + C2692) * C2166 +
                (C2693 + C2694 + C2695) * C50720) *
                   C50732 * C1544 -
               ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
                 C2162 * C786 + C2157 * C792) *
                    C50720 +
                (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
                 C2162 * C777 + C2157 * C782) *
                    C2166 +
                (C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
                 C2162 * C405 + C2157 * C425) *
                    C50849 +
                (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
                 C2162 * C395 + C2157 * C409) *
                    C2165) *
                   C50732 * C50670) *
                  C50590 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C2165 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50849 +
                (C2362 + C2363 + C2364) * C2166 +
                (C2365 + C2366 + C2367) * C50720) *
                   C50732 * C1544 -
               ((C3060 + C3061 + C3062) * C50720 +
                (C3063 + C3064 + C3065) * C2166 +
                (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
                 C2162 * C407 + C2157 * C427) *
                    C50849 +
                (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
                 C2162 * C397 + C2157 * C411) *
                    C2165) *
                   C50732 * C50670) *
                  C248 +
              (((C3065 + C3064 + C3063) * C2165 +
                (C3062 + C3061 + C3060) * C50849 +
                (C4032 + C4033 + C4034) * C2166 +
                (C4035 + C4036 + C4037) * C50720) *
                   C50732 * C50670 -
               ((C2368 + C2369 + C2370) * C50720 +
                (C2371 + C2372 + C2373) * C2166 +
                (C2367 + C2366 + C2365) * C50849 +
                (C2364 + C2363 + C2362) * C2165) *
                   C50732 * C1544) *
                  C249 +
              (((C2373 + C2372 + C2371) * C2165 +
                (C2370 + C2369 + C2368) * C50849 +
                (C3340 + C3341 + C3342) * C2166 +
                (C3343 + C3344 + C3345) * C50720) *
                   C50732 * C1544 -
               ((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
                 C2162 * C4012 + C2157 * C4018) *
                    C50720 +
                (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
                 C2162 * C4009 + C2157 * C4015) *
                    C2166 +
                (C4037 + C4036 + C4035) * C50849 +
                (C4034 + C4033 + C4032) * C2165) *
                   C50732 * C50670) *
                  C250) *
             C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2362 + C2363 + C2364) * C2166 + (C2365 + C2366 + C2367) * C50720) *
              C50732 * C1710 -
          ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
           (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
            C2162 * C407 + C2157 * C427) *
               C50849 +
           (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
            C2162 * C397 + C2157 * C411) *
               C2165) *
              C50732 * C1711 +
          ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
            C2164 * C400 + C2159 * C414) *
               C2165 +
           (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
            C2164 * C418 + C2159 * C430) *
               C50849 +
           (C3516 + C3517 + C3518) * C2166 + (C3519 + C3520 + C3521) * C50720) *
              C50732 * C1712 -
          ((C2164 * C4430 + C2159 * C4436 + C2163 * C4431 + C2158 * C4437 +
            C2162 * C4432 + C2157 * C4438) *
               C50720 +
           (C2164 * C4427 + C2159 * C4433 + C2163 * C4428 + C2158 * C4434 +
            C2162 * C4429 + C2157 * C4435) *
               C2166 +
           (C2164 * C1719 + C2159 * C1727 + C2163 * C1720 + C2158 * C1728 +
            C2162 * C1721 + C2157 * C1729) *
               C50849 +
           (C2164 * C1715 + C2159 * C1723 + C2163 * C1716 + C2158 * C1724 +
            C2162 * C1717 + C2157 * C1725) *
               C2165) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
            C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
            C11244 * C10620 + C11245 * C10615) *
               C50732 * C50670 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C1544 -
           ((C10616 * C4010 + C50540 * C4016) * C10615 +
            (C10616 * C4007 + C50540 * C4013) * C10620 +
            (C10616 * C1435 + C50540 * C1443) * C10614 +
            (C10616 * C1431 + C50540 * C1439) * C10619 +
            (C10616 * C786 + C50540 * C792) * C10613 +
            (C10616 * C777 + C50540 * C782) * C10618 +
            (C10616 * C405 + C50540 * C425) * C10612 +
            (C10616 * C395 + C50540 * C409) * C10617) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C248 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50670 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C1544) *
              C249 +
          ((C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C1544 -
           ((C10616 * C11866 + C50540 * C11868) * C10615 +
            (C10616 * C11865 + C50540 * C11867) * C10620 + C11875 * C10614 +
            C11874 * C10619 + C11234 * C10613 + C11235 * C10618 +
            C11236 * C10612 + C11237 * C10617) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
           C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
           C10756 * C10620 + C10757 * C10615) *
              C50732 * C1710 -
          (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
           C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
           (C10616 * C407 + C50540 * C427) * C10612 +
           (C10616 * C397 + C50540 * C411) * C10617) *
              C50732 * C1711 +
          ((C10616 * C398 + C50540 * C412) * C10617 +
           (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
           C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
           C11538 * C10620 + C11539 * C10615) *
              C50732 * C1712 -
          ((C10616 * C12138 + C50540 * C12140) * C10615 +
           (C10616 * C12137 + C50540 * C12139) * C10620 +
           (C10616 * C10054 + C50540 * C10058) * C10614 +
           (C10616 * C10052 + C50540 * C10056) * C10619 +
           (C10616 * C4432 + C50540 * C4438) * C10613 +
           (C10616 * C4429 + C50540 * C4435) * C10618 +
           (C10616 * C1721 + C50540 * C1729) * C10612 +
           (C10616 * C1717 + C50540 * C1725) * C10617) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C1544 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50670) *
              C50590 * C895 +
          (((C18433 + C18434 + C18435 + C18436) * C15333 +
            (C18437 + C18438 + C18439 + C18440) * C15334 +
            (C18456 + C18457 + C18458 + C18459) * C15335) *
               C50670 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C2165 +
             (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
             C10977 * C50720) *
                C15333 +
            (C18761 + C18762 + C18763 + C18764) * C15334 +
            (C18773 + C18774 + C18769 + C18770) * C15335) *
               C1544 -
           (((C10616 * C4430 + C50540 * C4436) * C50720 +
             (C10616 * C4427 + C50540 * C4433) * C2166 +
             (C10616 * C1719 + C50540 * C1727) * C50849 +
             (C10616 * C1715 + C50540 * C1723) * C2165) *
                C15335 +
            (C18770 + C18769 + C18774 + C18773) * C15334 +
            (C18764 + C18763 + C18762 + C18761) * C15333) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C1544 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50670) *
              C248 +
          (((C18969 + C18970 + C18971 + C18972) * C15333 +
            (C18973 + C18974 + C18975 + C18976) * C15334 +
            (C19379 + C19380 + C19381 + C19382) * C15335) *
               C50670 -
           (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C1544) *
              C249 +
          (((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
             C10757 * C50720) *
                C15333 +
            (C19874 + C19875 + C19876 + C19877) * C15334 +
            (C19878 + C19879 + C19880 + C19881) * C15335) *
               C1544 -
           (((C10616 * C12138 + C50540 * C12140) * C50720 +
             (C10616 * C12137 + C50540 * C12139) * C2166 + C13847 * C50849 +
             C13846 * C2165) *
                C15335 +
            (C19881 + C19880 + C19879 + C19878) * C15334 +
            (C19877 + C19876 + C19875 + C19874) * C15333) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C2165 +
            (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
            C10753 * C50720) *
               C15333 +
           (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
              C1710 -
          (C20286 * C15335 + (C18428 + C18427 + C18426 + C18425) * C15334 +
           (C18424 + C18423 + C18422 + C18421) * C15333) *
              C1711 +
          (C18461 * C15333 + (C18432 + C18431 + C18430 + C18429) * C15334 +
           (C20287 + C20288 + C20281 + C20282) * C15335) *
              C1712 -
          (((C10616 * C20272 + C50540 * C20274) * C50720 +
            (C10616 * C20271 + C50540 * C20273) * C2166 +
            (C10616 * C17522 + C50540 * C17526) * C50849 +
            (C10616 * C17520 + C50540 * C17524) * C2165) *
               C15335 +
           (C20282 + C20281 + C20288 + C20287) * C15334 + C20286 * C15333) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50884 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50885 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
            C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
            C11538 * C10620 + C11539 * C10615) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
            C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
            C11244 * C10620 + C11245 * C10615) *
               C50732 * C50885 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50884 -
           ((C10616 * C9123 + C50540 * C9127) * C10615 +
            (C10616 * C9121 + C50540 * C9125) * C10620 +
            (C10616 * C3495 + C50540 * C3501) * C10614 +
            (C10616 * C3492 + C50540 * C3498) * C10619 +
            (C10616 * C1089 + C50540 * C1097) * C10613 +
            (C10616 * C1085 + C50540 * C1093) * C10618 +
            (C10616 * C417 + C50540 * C429) * C10612 +
            (C10616 * C399 + C50540 * C413) * C10617) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50884 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50885 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C3516 + C3517 + C3518) * C2166 +
            (C3519 + C3520 + C3521) * C50720) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C3066 + C3067 + C3068) * C2166 +
            (C3069 + C3070 + C3071) * C50720) *
               C50732 * C50885 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50884 -
           ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
             C2162 * C1089 + C2157 * C1097) *
                C50720 +
            (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
             C2162 * C1085 + C2157 * C1093) *
                C2166 +
            (C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
             C2162 * C417 + C2157 * C429) *
                C50849 +
            (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
             C2162 * C399 + C2157 * C413) *
                C2165) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C50884 -
           (C20286 * C15335 + (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50885 +
           (C18461 * C15333 + (C18432 + C18431 + C18430 + C18429) * C15334 +
            (C20287 + C20288 + C20281 + C20282) * C15335) *
               C1960) *
              C50590 * C50830 +
          (((C18433 + C18434 + C18435 + C18436) * C15333 +
            (C18437 + C18438 + C18439 + C18440) * C15334 +
            (C18456 + C18457 + C18458 + C18459) * C15335) *
               C50885 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C50884 -
           (((C10616 * C16623 + C50540 * C16625) * C50720 +
             (C10616 * C16622 + C50540 * C16624) * C2166 +
             (C10616 * C7163 + C50540 * C7169) * C50849 +
             (C10616 * C7160 + C50540 * C7166) * C2165) *
                C15335 +
            (C18459 + C18458 + C18457 + C18456) * C15334 + C18462 * C15333) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C1544 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C248 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50670 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C1544) *
              C249 +
          (((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C1544 -
           ((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50720 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C2166 +
            (C4037 + C4036 + C4035) * C50849 +
            (C4034 + C4033 + C4032) * C2165) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C1544 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C3066 + C3067 + C3068) * C2166 +
            (C3069 + C3070 + C3071) * C50720) *
               C50732 * C50670 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C1544 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50720 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C2166 +
            (C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
             C2162 * C405 + C2157 * C425) *
                C50849 +
            (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
             C2162 * C395 + C2157 * C409) *
                C2165) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
            C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
            C11244 * C10620 + C11245 * C10615) *
               C50732 * C50670 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C1544 -
           ((C10616 * C4010 + C50540 * C4016) * C10615 +
            (C10616 * C4007 + C50540 * C4013) * C10620 +
            (C10616 * C1435 + C50540 * C1443) * C10614 +
            (C10616 * C1431 + C50540 * C1439) * C10619 +
            (C10616 * C786 + C50540 * C792) * C10613 +
            (C10616 * C777 + C50540 * C782) * C10618 +
            (C10616 * C405 + C50540 * C425) * C10612 +
            (C10616 * C395 + C50540 * C409) * C10617) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C248 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50670 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C1544) *
              C249 +
          ((C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C1544 -
           ((C10616 * C11866 + C50540 * C11868) * C10615 +
            (C10616 * C11865 + C50540 * C11867) * C10620 + C11875 * C10614 +
            C11874 * C10619 + C11234 * C10613 + C11235 * C10618 +
            C11236 * C10612 + C11237 * C10617) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C1544 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50670) *
              C50590 * C895 +
          (((C18433 + C18434 + C18435 + C18436) * C15333 +
            (C18437 + C18438 + C18439 + C18440) * C15334 +
            (C18456 + C18457 + C18458 + C18459) * C15335) *
               C50670 -
           (C18462 * C15335 + (C18436 + C18435 + C18434 + C18433) * C15334 +
            (C10761 * C50720 + C10760 * C2166 +
             (C10616 * C134 + C50540 * C144) * C50849 +
             (C10616 * C123 + C50540 * C130) * C2165) *
                C15333) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C2165 +
             (C10616 * C135 + C50540 * C145) * C50849 + C10976 * C2166 +
             C10977 * C50720) *
                C15333 +
            (C18761 + C18762 + C18763 + C18764) * C15334 +
            (C18773 + C18774 + C18769 + C18770) * C15335) *
               C1544 -
           (((C10616 * C4430 + C50540 * C4436) * C50720 +
             (C10616 * C4427 + C50540 * C4433) * C2166 +
             (C10616 * C1719 + C50540 * C1727) * C50849 +
             (C10616 * C1715 + C50540 * C1723) * C2165) *
                C15335 +
            (C18770 + C18769 + C18774 + C18773) * C15334 +
            (C18764 + C18763 + C18762 + C18761) * C15333) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C2165 +
             (C10616 * C133 + C50540 * C143) * C50849 + C10752 * C2166 +
             C10753 * C50720) *
                C15333 +
            (C18421 + C18422 + C18423 + C18424) * C15334 + C18461 * C15335) *
               C1544 -
           ((C18429 + C18430 + C18431 + C18432) * C15335 +
            (C18428 + C18427 + C18426 + C18425) * C15334 +
            (C18424 + C18423 + C18422 + C18421) * C15333) *
               C50670) *
              C248 +
          (((C18969 + C18970 + C18971 + C18972) * C15333 +
            (C18973 + C18974 + C18975 + C18976) * C15334 +
            (C19379 + C19380 + C19381 + C19382) * C15335) *
               C50670 -
           (C19387 * C15335 + (C18972 + C18971 + C18970 + C18969) * C15334 +
            (C10755 * C50720 + C10754 * C2166 + C10753 * C50849 +
             C10752 * C2165) *
                C15333) *
               C1544) *
              C249 +
          (((C10754 * C2165 + C10755 * C50849 + C10756 * C2166 +
             C10757 * C50720) *
                C15333 +
            (C19874 + C19875 + C19876 + C19877) * C15334 +
            (C19878 + C19879 + C19880 + C19881) * C15335) *
               C1544 -
           (((C10616 * C12138 + C50540 * C12140) * C50720 +
             (C10616 * C12137 + C50540 * C12139) * C2166 + C13847 * C50849 +
             C13846 * C2165) *
                C15335 +
            (C19881 + C19880 + C19879 + C19878) * C15334 +
            (C19877 + C19876 + C19875 + C19874) * C15333) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C50838 -
           ((C11234 * C7777 + C11235 * C7782 + C11236 * C7776 + C11237 * C7781 +
             C11238 * C7775 + C11239 * C7780) *
                C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50642) *
              C50880 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C11240 * C7780 + C11241 * C7775 + C11242 * C7781 + C11243 * C7776 +
             C11244 * C7782 + C11245 * C7777) *
                C50744) *
               C50606 * C50642 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C50838) *
              C50881 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            ((C10616 * C395 + C50540 * C409) * C7780 +
             (C10616 * C405 + C50540 * C425) * C7775 + C13072 * C7781 +
             C13073 * C7776 + C13074 * C7782 + C13075 * C7777) *
                C50744) *
               C50606 * C50838 -
           (((C10616 * C4010 + C50540 * C4016) * C7777 +
             (C10616 * C4007 + C50540 * C4013) * C7782 + C13075 * C7776 +
             C13074 * C7781 + C13073 * C7775 + C13072 * C7780) *
                C50744 +
            (C10981 * C7777 + C10980 * C7782 + C10979 * C7776 + C10978 * C7781 +
             C10977 * C7775 + C10976 * C7780) *
                C50850) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C50838 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50642) *
              C50880 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50642 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C50838) *
              C50881 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
              C2164 * C402 + C2159 * C420) *
                 C121 +
             (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
              C2164 * C421 + C2159 * C432) *
                 C50706) *
                C50744) *
               C50606 * C50838 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50706 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50744 +
            ((C2695 + C2694 + C2693) * C50706 +
             (C2692 + C2691 + C2690) * C121) *
                C50850) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50606 * C50838 -
           ((C13845 * C50706 + C13844 * C121) * C20843 +
            (C11535 * C50706 + C11534 * C121) * C20842 +
            (C11238 * C50706 + C11239 * C121) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50606 * C50642) *
              C50880 +
          (((C10760 * C121 + C10761 * C50706) * C20840 +
            (C11240 * C121 + C11241 * C50706) * C20841 +
            (C12902 * C121 + C12903 * C50706) * C20842 +
            (C18452 * C121 + C18453 * C50706) * C20843) *
               C50606 * C50642 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50606 * C50838) *
              C50881 +
          ((((C10616 * C124 + C50540 * C131) * C121 +
             (C10616 * C135 + C50540 * C145) * C50706) *
                C20840 +
            (C13230 * C121 + C13231 * C50706) * C20841 +
            (C18771 * C121 + C18772 * C50706) * C20842 +
            ((C10616 * C1715 + C50540 * C1723) * C121 +
             (C10616 * C1719 + C50540 * C1727) * C50706) *
                C20843) *
               C50606 * C50838 -
           (((C10616 * C4430 + C50540 * C4436) * C50706 +
             (C10616 * C4427 + C50540 * C4433) * C121) *
                C20843 +
            (C18614 * C50706 + C18613 * C121) * C20842 +
            (C13073 * C50706 + C13072 * C121) * C20841 +
            (C10977 * C50706 + C10976 * C121) * C20840) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C7780 +
              (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
              C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                 C50850 +
             (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
                C50839 -
            ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
             (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
                C50670) *
               C50838 +
           (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
             (C11534 * C7780 + C11535 * C7775 + C11536 * C7781 +
              C11537 * C7776 + C11538 * C7782 + C11539 * C7777) *
                 C50744) *
                C50670 -
            ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
             (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 +
              C10754 * C7781 + C10753 * C7775 + C10752 * C7780) *
                 C50850) *
                C50839) *
               C50642) *
              C251 +
          ((((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
             (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
                C50670 -
            ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
             (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 +
              C10760 * C7781 + (C10616 * C134 + C50540 * C144) * C7775 +
              (C10616 * C123 + C50540 * C130) * C7780) *
                 C50850) *
                C50839) *
               C50838 +
           (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 +
              C10763 * C7776 + C10764 * C7782 + C10765 * C7777) *
                 C50850 +
             (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
                C50839 -
            (((C10616 * C9123 + C50540 * C9127) * C7777 +
              (C10616 * C9121 + C50540 * C9125) * C7782 + C12905 * C7776 +
              C12904 * C7781 + C12903 * C7775 + C12902 * C7780) *
                 C50744 +
             (C13439 + C13438 + C13437 + C13436 + C13435 + C13434) * C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50706) *
                 C50850 +
             ((C5366 + C5367 + C5368) * C121 +
              (C5369 + C5370 + C5371) * C50706) *
                 C50744) *
                C50839 -
            (((C5372 + C5373 + C5374) * C50706 +
              (C5375 + C5376 + C5377) * C121) *
                 C50744 +
             ((C5371 + C5370 + C5369) * C50706 +
              (C5368 + C5367 + C5366) * C121) *
                 C50850) *
                C50670) *
               C50838 +
           ((((C3065 + C3064 + C3063) * C121 +
              (C3062 + C3061 + C3060) * C50706) *
                 C50850 +
             ((C3516 + C3517 + C3518) * C121 +
              (C3519 + C3520 + C3521) * C50706) *
                 C50744) *
                C50670 -
            (((C3060 + C3061 + C3062) * C50706 +
              (C3063 + C3064 + C3065) * C121) *
                 C50744 +
             ((C2367 + C2366 + C2365) * C50706 +
              (C2364 + C2363 + C2362) * C121) *
                 C50850) *
                C50839) *
               C50642) *
              C251 +
          (((((C5378 + C5379 + C5380) * C121 +
              (C5381 + C5382 + C5383) * C50706) *
                 C50850 +
             ((C5384 + C5385 + C5386) * C121 +
              (C5387 + C5388 + C5389) * C50706) *
                 C50744) *
                C50670 -
            (((C5383 + C5382 + C5381) * C50706 +
              (C5380 + C5379 + C5378) * C121) *
                 C50744 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50706 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50850) *
                C50839) *
               C50838 +
           ((((C2374 + C2375 + C2376) * C121 +
              (C2377 + C2378 + C2379) * C50706) *
                 C50850 +
             ((C3066 + C3067 + C3068) * C121 +
              (C3069 + C3070 + C3071) * C50706) *
                 C50744) *
                C50839 -
            (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
               C2162 * C1089 + C2157 * C1097) *
                  C50706 +
              (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
               C2162 * C1085 + C2157 * C1093) *
                  C121) *
                 C50744 +
             ((C3071 + C3070 + C3069) * C50706 +
              (C3068 + C3067 + C3066) * C121) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C121 +
              (C10616 * C133 + C50540 * C143) * C50706) *
                 C20840 +
             (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
                C50839 -
            ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
             (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
                C50670) *
               C50838 +
           (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
             (C21409 + C21410) * C20842 +
             (C19384 * C121 + C19385 * C50706) * C20843) *
                C50670 -
            ((C21410 + C21409) * C20843 + (C21408 + C21407) * C20842 +
             (C21406 + C21405) * C20841 +
             (C10753 * C50706 + C10752 * C121) * C20840) *
                C50839) *
               C50642) *
              C251 +
          ((((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
             (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
                C50670 -
            (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
             ((C10616 * C134 + C50540 * C144) * C50706 +
              (C10616 * C123 + C50540 * C130) * C121) *
                 C20840) *
                C50839) *
               C50838 +
           (((C10760 * C121 + C10761 * C50706) * C20840 +
             (C21411 + C21412) * C20841 + (C21413 + C21414) * C20842 +
             (C21415 + C21416) * C20843) *
                C50839 -
            (((C10616 * C16623 + C50540 * C16625) * C50706 +
              (C10616 * C16622 + C50540 * C16624) * C121) *
                 C20843 +
             (C21416 + C21415) * C20842 + (C21414 + C21413) * C20841 +
             (C21412 + C21411) * C20840) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C121 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50706) *
                   C50850 +
               ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
                 C2164 * C395 + C2159 * C409) *
                    C121 +
                (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
                 C2164 * C405 + C2159 * C425) *
                    C50706) *
                   C50744) *
                  C50606 * C50590 * C113 -
              (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
                 C2162 * C406 + C2157 * C426) *
                    C50706 +
                (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
                 C2162 * C396 + C2157 * C410) *
                    C121) *
                   C50744 +
               ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50706 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C121) *
                   C50850) *
                  C50606 * C50590 * C114 +
              (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                 C2164 * C126 + C2159 * C138) *
                    C121 +
                (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                 C2164 * C137 + C2159 * C147) *
                    C50706) *
                   C50850 +
               ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
                 C2164 * C402 + C2159 * C420) *
                    C121 +
                (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
                 C2164 * C421 + C2159 * C432) *
                    C50706) *
                   C50744) *
                  C50606 * C50590 * C115 -
              (((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
                 C2162 * C404 + C2157 * C424) *
                    C50706 +
                (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
                 C2162 * C394 + C2157 * C408) *
                    C121) *
                   C50744 +
               ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
                 C2162 * C136 + C2157 * C146) *
                    C50706 +
                (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
                 C2162 * C125 + C2157 * C132) *
                    C121) *
                   C50850) *
                  C50606 * C50590 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50706) *
                    C50850 +
                ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
                  C2164 * C395 + C2159 * C409) *
                     C121 +
                 (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
                  C2164 * C405 + C2159 * C425) *
                     C50706) *
                    C50744) *
                   C50606 * C248 -
               (((C3060 + C3061 + C3062) * C50706 +
                 (C3063 + C3064 + C3065) * C121) *
                    C50744 +
                ((C2367 + C2366 + C2365) * C50706 +
                 (C2364 + C2363 + C2362) * C121) *
                    C50850) *
                   C50606 * C249 +
               (((C2373 + C2372 + C2371) * C121 +
                 (C2370 + C2369 + C2368) * C50706) *
                    C50850 +
                ((C4032 + C4033 + C4034) * C121 +
                 (C4035 + C4036 + C4037) * C50706) *
                    C50744) *
                   C50606 * C250) *
                  C251 +
              ((((C2374 + C2375 + C2376) * C121 +
                 (C2377 + C2378 + C2379) * C50706) *
                    C50850 +
                ((C3066 + C3067 + C3068) * C121 +
                 (C3069 + C3070 + C3071) * C50706) *
                    C50744) *
                   C50606 * C249 -
               (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
                  C2162 * C406 + C2157 * C426) *
                     C50706 +
                 (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
                  C2162 * C396 + C2157 * C410) *
                     C121) *
                    C50744 +
                ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                  C2162 * C134 + C2157 * C144) *
                     C50706 +
                 (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                  C2162 * C123 + C2157 * C130) *
                     C121) *
                    C50850) *
                   C50606 * C248 -
               (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 +
                  C2158 * C1443 + C2162 * C1436 + C2157 * C1444) *
                     C50706 +
                 (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 +
                  C2158 * C1439 + C2162 * C1432 + C2157 * C1440) *
                     C121) *
                    C50744 +
                ((C2385 + C2384 + C2383) * C50706 +
                 (C2382 + C2381 + C2380) * C121) *
                    C50850) *
                   C50606 * C250) *
                  C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C391 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C392 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
              C2164 * C1715 + C2159 * C1723) *
                 C121 +
             (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
              C2164 * C1719 + C2159 * C1727) *
                 C50706) *
                C50744) *
               C393) *
              C50590 * C251 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C392 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C391 -
           (((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
              C2162 * C1720 + C2157 * C1728) *
                 C50706 +
             (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
              C2162 * C1716 + C2157 * C1724) *
                 C121) *
                C50744 +
            ((C5389 + C5388 + C5387) * C50706 +
             (C5386 + C5385 + C5384) * C121) *
                C50850) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           ((C10616 * C397 + C50540 * C411) * C7780 +
            (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
            C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
            (C10616 * C406 + C50540 * C426) * C7775 +
            (C10616 * C396 + C50540 * C410) * C7780) *
               C50744 +
           (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
            (C10616 * C134 + C50540 * C144) * C7775 +
            (C10616 * C123 + C50540 * C130) * C7780) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C7780 +
            (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
            C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
               C50850 +
           ((C10616 * C395 + C50540 * C409) * C7780 +
            (C10616 * C405 + C50540 * C425) * C7775 +
            (C10616 * C777 + C50540 * C782) * C7781 +
            (C10616 * C786 + C50540 * C792) * C7776 +
            (C10616 * C1431 + C50540 * C1439) * C7782 +
            (C10616 * C1435 + C50540 * C1443) * C7777) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C10616 * C1434 + C50540 * C1442) * C7777 +
            (C10616 * C1430 + C50540 * C1438) * C7782 +
            (C10616 * C787 + C50540 * C793) * C7776 +
            (C10616 * C778 + C50540 * C783) * C7781 +
            (C10616 * C404 + C50540 * C424) * C7775 +
            (C10616 * C394 + C50540 * C408) * C7780) *
               C50744 +
           ((C10616 * C278 + C50540 * C290) * C7777 +
            (C10616 * C260 + C50540 * C274) * C7782 +
            (C10616 * C263 + C50540 * C283) * C7776 +
            (C10616 * C253 + C50540 * C267) * C7781 +
            (C10616 * C136 + C50540 * C146) * C7775 +
            (C10616 * C125 + C50540 * C132) * C7780) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            ((C10616 * C397 + C50540 * C411) * C7780 +
             (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
             C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
                C50744) *
               C50606 * C248 -
           ((C11234 * C7777 + C11235 * C7782 + C11236 * C7776 + C11237 * C7781 +
             C11238 * C7775 + C11239 * C7780) *
                C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C249 +
           ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
             C11874 * C7782 + C11875 * C7777) *
                C50744) *
               C50606 * C250) *
              C251 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C11240 * C7780 + C11241 * C7775 + C11242 * C7781 + C11243 * C7776 +
             C11244 * C7782 + C11245 * C7777) *
                C50744) *
               C50606 * C249 -
           ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
             (C10616 * C406 + C50540 * C426) * C7775 +
             (C10616 * C396 + C50540 * C410) * C7780) *
                C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C248 -
           (((C10616 * C9641 + C50540 * C9645) * C7777 +
             (C10616 * C9639 + C50540 * C9643) * C7782 + C11245 * C7776 +
             C11244 * C7781 + C11243 * C7775 + C11242 * C7780) *
                C50744 +
            (C10767 * C7777 + C10766 * C7782 + C10765 * C7776 + C10764 * C7781 +
             C10763 * C7775 + C10762 * C7780) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C391 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C392 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            ((C10616 * C1717 + C50540 * C1725) * C7780 +
             (C10616 * C1721 + C50540 * C1729) * C7775 +
             (C10616 * C4429 + C50540 * C4435) * C7781 +
             (C10616 * C4432 + C50540 * C4438) * C7776 +
             (C10616 * C10052 + C50540 * C10056) * C7782 +
             (C10616 * C10054 + C50540 * C10058) * C7777) *
                C50744) *
               C393) *
              C50590 * C251 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C392 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C391 -
           (((C10616 * C10053 + C50540 * C10057) * C7777 +
             (C10616 * C10051 + C50540 * C10055) * C7782 +
             (C10616 * C4431 + C50540 * C4437) * C7776 +
             (C10616 * C4428 + C50540 * C4434) * C7781 +
             (C10616 * C1720 + C50540 * C1728) * C7775 +
             (C10616 * C1716 + C50540 * C1724) * C7780) *
                C50744 +
            (C12917 + C12916 + C12915 + C12914 + C12913 + C12912) * C50850) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C10616 * C122 + C50540 * C129) * C121 +
                                (C10616 * C133 + C50540 * C143) * C50706) *
                                   C20840 +
                               (C12894 * C121 + C12895 * C50706) * C20841 +
                               (C12897 * C121 + C12896 * C50706) * C20842 +
                               (C14746 * C121 + C14747 * C50706) * C20843) *
                                  C50606 * C50590 * C113 -
                              ((C18451 * C50706 + C18450 * C121) * C20843 +
                               (C12901 * C50706 + C12900 * C121) * C20842 +
                               (C12899 * C50706 + C12898 * C121) * C20841 +
                               ((C10616 * C134 + C50540 * C144) * C50706 +
                                (C10616 * C123 + C50540 * C130) * C121) *
                                   C20840) *
                                  C50606 * C50590 * C114 +
                              (((C10616 * C124 + C50540 * C131) * C121 +
                                (C10616 * C135 + C50540 * C145) * C50706) *
                                   C20840 +
                               (C13230 * C121 + C13231 * C50706) * C20841 +
                               (C18771 * C121 + C18772 * C50706) * C20842 +
                               ((C10616 * C1715 + C50540 * C1723) * C121 +
                                (C10616 * C1719 + C50540 * C1727) * C50706) *
                                   C20843) *
                                  C50606 * C50590 * C115 -
                              (((C10616 * C1718 + C50540 * C1726) * C50706 +
                                (C10616 * C1714 + C50540 * C1722) * C121) *
                                   C20843 +
                               ((C10616 * C419 + C50540 * C431) * C50706 +
                                (C10616 * C401 + C50540 * C415) * C121) *
                                   C20842 +
                               ((C10616 * C404 + C50540 * C424) * C50706 +
                                (C10616 * C394 + C50540 * C408) * C121) *
                                   C20841 +
                               ((C10616 * C136 + C50540 * C146) * C50706 +
                                (C10616 * C125 + C50540 * C132) * C121) *
                                   C20840) *
                                  C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C10616 * C122 + C50540 * C129) * C121 +
                                 (C10616 * C133 + C50540 * C143) * C50706) *
                                    C20840 +
                                (C12894 * C121 + C12895 * C50706) * C20841 +
                                (C12897 * C121 + C12896 * C50706) * C20842 +
                                (C14746 * C121 + C14747 * C50706) * C20843) *
                                   C50606 * C248 -
                               ((C13845 * C50706 + C13844 * C121) * C20843 +
                                (C11535 * C50706 + C11534 * C121) * C20842 +
                                (C11238 * C50706 + C11239 * C121) * C20841 +
                                (C10753 * C50706 + C10752 * C121) * C20840) *
                                   C50606 * C249 +
                               ((C10754 * C121 + C10755 * C50706) * C20840 +
                                (C11237 * C121 + C11236 * C50706) * C20841 +
                                (C11536 * C121 + C11537 * C50706) * C20842 +
                                (C13846 * C121 + C13847 * C50706) * C20843) *
                                   C50606 * C250) *
                                  C251 +
                              (((C10760 * C121 + C10761 * C50706) * C20840 +
                                (C11240 * C121 + C11241 * C50706) * C20841 +
                                (C12902 * C121 + C12903 * C50706) * C20842 +
                                (C18452 * C121 + C18453 * C50706) * C20843) *
                                   C50606 * C249 -
                               ((C18451 * C50706 + C18450 * C121) * C20843 +
                                (C12901 * C50706 + C12900 * C121) * C20842 +
                                (C12899 * C50706 + C12898 * C121) * C20841 +
                                ((C10616 * C134 + C50540 * C144) * C50706 +
                                 (C10616 * C123 + C50540 * C130) * C121) *
                                    C20840) *
                                   C50606 * C248 -
                               (((C10616 * C10053 + C50540 * C10057) * C50706 +
                                 (C10616 * C10051 + C50540 * C10055) * C121) *
                                    C20843 +
                                (C12905 * C50706 + C12904 * C121) * C20842 +
                                (C11243 * C50706 + C11242 * C121) * C20841 +
                                (C10763 * C50706 + C10762 * C121) * C20840) *
                                   C50606 * C250) *
                                  C50577)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C391 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C392 +
           (C21059 * C20840 + C21060 * C20841 + (C21048 + C21047) * C20842 +
            ((C10616 * C17520 + C50540 * C17524) * C121 +
             (C10616 * C17522 + C50540 * C17526) * C50706) *
                C20843) *
               C393) *
              C50590 * C251 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
               C392 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C391 -
           (((C10616 * C17521 + C50540 * C17525) * C50706 +
             (C10616 * C17519 + C50540 * C17523) * C121) *
                C20843 +
            (C21066 + C21065) * C20842 + C21063 * C20841 + C21064 * C20840) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50839 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50590 * C50880 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50670 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50839) *
              C50590 * C50881 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C50839 -
           (((C10616 * C3494 + C50540 * C3500) * C7777 +
             (C10616 * C3491 + C50540 * C3497) * C7782 +
             (C10616 * C1088 + C50540 * C1096) * C7776 +
             (C10616 * C1084 + C50540 * C1092) * C7781 +
             (C10616 * C418 + C50540 * C430) * C7775 +
             (C10616 * C400 + C50540 * C414) * C7780) *
                C50744 +
            (C13229 + C13228 + C13227 + C13226 + C13233 + C13232) * C50850) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50839 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50590 * C50880 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50670 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50839) *
              C50590 * C50881 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C50839 -
           (((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
              C2162 * C418 + C2157 * C430) *
                 C50706 +
             (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
              C2162 * C400 + C2157 * C414) *
                 C121) *
                C50744 +
            ((C5699 + C5698 + C5697) * C50706 +
             (C5696 + C5695 + C5694) * C121) *
                C50850) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50839 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50670) *
              C50590 * C50880 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
               C50670 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50839) *
              C50590 * C50881 +
          ((((C10616 * C124 + C50540 * C131) * C121 +
             (C10616 * C135 + C50540 * C145) * C50706) *
                C20840 +
            (C21263 + C21264) * C20841 + (C21265 + C21266) * C20842 +
            (C21273 + C21274) * C20843) *
               C50839 -
           (((C10616 * C7162 + C50540 * C7168) * C50706 +
             (C10616 * C7159 + C50540 * C7165) * C121) *
                C20843 +
            (C21274 + C21273) * C20842 + (C21266 + C21265) * C20841 +
            (C21264 + C21263) * C20840) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
              C2164 * C395 + C2159 * C409) *
                 C121 +
             (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
              C2164 * C405 + C2159 * C425) *
                 C50706) *
                C50744) *
               C50606 * C248 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C249 +
           (((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C249 -
           (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
              C2162 * C406 + C2157 * C426) *
                 C50706 +
             (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
              C2162 * C396 + C2157 * C410) *
                 C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C248 -
           (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50706 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C121) *
                C50744 +
            ((C2385 + C2384 + C2383) * C50706 +
             (C2382 + C2381 + C2380) * C121) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
             C2164 * C395 + C2159 * C409) *
                C121 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
             C2164 * C405 + C2159 * C425) *
                C50706) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
             C2162 * C406 + C2157 * C426) *
                C50706 +
            (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
             C2162 * C396 + C2157 * C410) *
                C121) *
               C50744 +
           ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50706 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C121) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50706) *
               C50850 +
           ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
             C2164 * C402 + C2159 * C420) *
                C121 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
             C2164 * C421 + C2159 * C432) *
                C50706) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
             C2162 * C404 + C2157 * C424) *
                C50706 +
            (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
             C2162 * C394 + C2157 * C408) *
                C121) *
               C50744 +
           ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
             C2162 * C136 + C2157 * C146) *
                C50706 +
            (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
             C2162 * C125 + C2157 * C132) *
                C121) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           ((C10616 * C397 + C50540 * C411) * C7780 +
            (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
            C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
            (C10616 * C406 + C50540 * C426) * C7775 +
            (C10616 * C396 + C50540 * C410) * C7780) *
               C50744 +
           (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
            (C10616 * C134 + C50540 * C144) * C7775 +
            (C10616 * C123 + C50540 * C130) * C7780) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C7780 +
            (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
            C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
               C50850 +
           ((C10616 * C395 + C50540 * C409) * C7780 +
            (C10616 * C405 + C50540 * C425) * C7775 +
            (C10616 * C777 + C50540 * C782) * C7781 +
            (C10616 * C786 + C50540 * C792) * C7776 +
            (C10616 * C1431 + C50540 * C1439) * C7782 +
            (C10616 * C1435 + C50540 * C1443) * C7777) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C10616 * C1434 + C50540 * C1442) * C7777 +
            (C10616 * C1430 + C50540 * C1438) * C7782 +
            (C10616 * C787 + C50540 * C793) * C7776 +
            (C10616 * C778 + C50540 * C783) * C7781 +
            (C10616 * C404 + C50540 * C424) * C7775 +
            (C10616 * C394 + C50540 * C408) * C7780) *
               C50744 +
           ((C10616 * C278 + C50540 * C290) * C7777 +
            (C10616 * C260 + C50540 * C274) * C7782 +
            (C10616 * C263 + C50540 * C283) * C7776 +
            (C10616 * C253 + C50540 * C267) * C7781 +
            (C10616 * C136 + C50540 * C146) * C7775 +
            (C10616 * C125 + C50540 * C132) * C7780) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            ((C10616 * C397 + C50540 * C411) * C7780 +
             (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
             C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
                C50744) *
               C50606 * C248 -
           ((C11234 * C7777 + C11235 * C7782 + C11236 * C7776 + C11237 * C7781 +
             C11238 * C7775 + C11239 * C7780) *
                C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C249 +
           ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
             C11874 * C7782 + C11875 * C7777) *
                C50744) *
               C50606 * C250) *
              C251 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C11240 * C7780 + C11241 * C7775 + C11242 * C7781 + C11243 * C7776 +
             C11244 * C7782 + C11245 * C7777) *
                C50744) *
               C50606 * C249 -
           ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
             (C10616 * C406 + C50540 * C426) * C7775 +
             (C10616 * C396 + C50540 * C410) * C7780) *
                C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C248 -
           (((C10616 * C9641 + C50540 * C9645) * C7777 +
             (C10616 * C9639 + C50540 * C9643) * C7782 + C11245 * C7776 +
             C11244 * C7781 + C11243 * C7775 + C11242 * C7780) *
                C50744 +
            (C10767 * C7777 + C10766 * C7782 + C10765 * C7776 + C10764 * C7781 +
             C10763 * C7775 + C10762 * C7780) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C121 +
            (C10616 * C133 + C50540 * C143) * C50706) *
               C20840 +
           (C12894 * C121 + C12895 * C50706) * C20841 +
           (C12897 * C121 + C12896 * C50706) * C20842 +
           (C14746 * C121 + C14747 * C50706) * C20843) *
              C50606 * C50590 * C113 -
          ((C18451 * C50706 + C18450 * C121) * C20843 +
           (C12901 * C50706 + C12900 * C121) * C20842 +
           (C12899 * C50706 + C12898 * C121) * C20841 +
           ((C10616 * C134 + C50540 * C144) * C50706 +
            (C10616 * C123 + C50540 * C130) * C121) *
               C20840) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C121 +
            (C10616 * C135 + C50540 * C145) * C50706) *
               C20840 +
           (C13230 * C121 + C13231 * C50706) * C20841 +
           (C18771 * C121 + C18772 * C50706) * C20842 +
           ((C10616 * C1715 + C50540 * C1723) * C121 +
            (C10616 * C1719 + C50540 * C1727) * C50706) *
               C20843) *
              C50606 * C50590 * C115 -
          (((C10616 * C1718 + C50540 * C1726) * C50706 +
            (C10616 * C1714 + C50540 * C1722) * C121) *
               C20843 +
           ((C10616 * C419 + C50540 * C431) * C50706 +
            (C10616 * C401 + C50540 * C415) * C121) *
               C20842 +
           ((C10616 * C404 + C50540 * C424) * C50706 +
            (C10616 * C394 + C50540 * C408) * C121) *
               C20841 +
           ((C10616 * C136 + C50540 * C146) * C50706 +
            (C10616 * C125 + C50540 * C132) * C121) *
               C20840) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C12894 * C121 + C12895 * C50706) * C20841 +
            (C12897 * C121 + C12896 * C50706) * C20842 +
            (C14746 * C121 + C14747 * C50706) * C20843) *
               C50606 * C248 -
           ((C13845 * C50706 + C13844 * C121) * C20843 +
            (C11535 * C50706 + C11534 * C121) * C20842 +
            (C11238 * C50706 + C11239 * C121) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50606 * C249 +
           ((C10754 * C121 + C10755 * C50706) * C20840 +
            (C11237 * C121 + C11236 * C50706) * C20841 +
            (C11536 * C121 + C11537 * C50706) * C20842 +
            (C13846 * C121 + C13847 * C50706) * C20843) *
               C50606 * C250) *
              C251 +
          (((C10760 * C121 + C10761 * C50706) * C20840 +
            (C11240 * C121 + C11241 * C50706) * C20841 +
            (C12902 * C121 + C12903 * C50706) * C20842 +
            (C18452 * C121 + C18453 * C50706) * C20843) *
               C50606 * C249 -
           ((C18451 * C50706 + C18450 * C121) * C20843 +
            (C12901 * C50706 + C12900 * C121) * C20842 +
            (C12899 * C50706 + C12898 * C121) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50606 * C248 -
           (((C10616 * C10053 + C50540 * C10057) * C50706 +
             (C10616 * C10051 + C50540 * C10055) * C121) *
                C20843 +
            (C12905 * C50706 + C12904 * C121) * C20842 +
            (C11243 * C50706 + C11242 * C121) * C20841 +
            (C10763 * C50706 + C10762 * C121) * C20840) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C50882 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50883 +
           ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
             C11874 * C7782 + C11875 * C7777) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
               C50606 * C50883 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C50882 -
           (((C10616 * C9641 + C50540 * C9645) * C7777 +
             (C10616 * C9639 + C50540 * C9643) * C7782 + C11245 * C7776 +
             C11244 * C7781 + C11243 * C7775 + C11242 * C7780) *
                C50744 +
            (C10767 * C7777 + C10766 * C7782 + C10765 * C7776 + C10764 * C7781 +
             C10763 * C7775 + C10762 * C7780) *
                C50850) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C50882 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50883 +
           (((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50883 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C50882 -
           (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50706 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C121) *
                C50744 +
            ((C2385 + C2384 + C2383) * C50706 +
             (C2382 + C2381 + C2380) * C121) *
                C50850) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50606 * C50882 -
           (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50606 * C50883 +
           ((C10754 * C121 + C10755 * C50706) * C20840 +
            (C11237 * C121 + C11236 * C50706) * C20841 +
            (C11536 * C121 + C11537 * C50706) * C20842 +
            (C13846 * C121 + C13847 * C50706) * C20843) *
               C50606 * C1199) *
              C50830 +
          (((C10760 * C121 + C10761 * C50706) * C20840 +
            (C21411 + C21412) * C20841 + (C21413 + C21414) * C20842 +
            (C21415 + C21416) * C20843) *
               C50606 * C50883 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50606 * C50882 -
           (((C10616 * C10053 + C50540 * C10057) * C50706 +
             (C10616 * C10051 + C50540 * C10055) * C121) *
                C20843 +
            (C12905 * C50706 + C12904 * C121) * C20842 +
            (C11243 * C50706 + C11242 * C121) * C20841 +
            (C10763 * C50706 + C10762 * C121) * C20840) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50839 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50882 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50670 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50839) *
              C50883 +
          (((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C14334 + C14335 + C14336 + C14337 + C14338 + C14339) * C50744) *
               C50839 -
           (((C10616 * C11518 + C50540 * C11520) * C7777 +
             (C10616 * C11517 + C50540 * C11519) * C7782 + C11539 * C7776 +
             C11538 * C7781 + C11537 * C7775 + C11536 * C7780) *
                C50744 +
            (C14339 + C14338 + C14337 + C14336 + C14335 + C14334) * C50850) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50839 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50882 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50670 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50839) *
              C50883 +
          ((((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50839 -
           (((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
              C2162 * C3496 + C2157 * C3502) *
                 C50706 +
             (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
              C2162 * C3493 + C2157 * C3499) *
                 C121) *
                C50744 +
            ((C4037 + C4036 + C4035) * C50706 +
             (C4034 + C4033 + C4032) * C121) *
                C50850) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50839 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50670) *
              C50882 +
          (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
            (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
               C50670 -
           (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50839) *
              C50883 +
          (((C10754 * C121 + C10755 * C50706) * C20840 +
            (C22009 + C22010) * C20841 + (C22011 + C22012) * C20842 +
            (C22013 + C22014) * C20843) *
               C50839 -
           (((C10616 * C14731 + C50540 * C14735) * C50706 +
             (C10616 * C14729 + C50540 * C14732) * C121) *
                C20843 +
            (C22014 + C22013) * C20842 + (C22012 + C22011) * C20841 +
            (C22010 + C22009) * C20840) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50706) *
                    C50850 +
                ((C5366 + C5367 + C5368) * C121 +
                 (C5369 + C5370 + C5371) * C50706) *
                    C50744) *
                   C50606 * C893 -
               (((C3060 + C3061 + C3062) * C50706 +
                 (C3063 + C3064 + C3065) * C121) *
                    C50744 +
                ((C2367 + C2366 + C2365) * C50706 +
                 (C2364 + C2363 + C2362) * C121) *
                    C50850) *
                   C50606 * C50642) *
                  C895 +
              ((((C2374 + C2375 + C2376) * C121 +
                 (C2377 + C2378 + C2379) * C50706) *
                    C50850 +
                ((C3066 + C3067 + C3068) * C121 +
                 (C3069 + C3070 + C3071) * C50706) *
                    C50744) *
                   C50606 * C50642 -
               (((C5383 + C5382 + C5381) * C50706 +
                 (C5380 + C5379 + C5378) * C121) *
                    C50744 +
                ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                  C2162 * C134 + C2157 * C144) *
                     C50706 +
                 (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                  C2162 * C123 + C2157 * C130) *
                     C121) *
                    C50850) *
                   C50606 * C893) *
                  C896 +
              ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                  C2164 * C126 + C2159 * C138) *
                     C121 +
                 (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                  C2164 * C137 + C2159 * C147) *
                     C50706) *
                    C50850 +
                ((C5694 + C5695 + C5696) * C121 +
                 (C5697 + C5698 + C5699) * C50706) *
                    C50744) *
                   C50606 * C893 -
               (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
                  C2162 * C786 + C2157 * C792) *
                     C50706 +
                 (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
                  C2162 * C777 + C2157 * C782) *
                     C121) *
                    C50744 +
                ((C2695 + C2694 + C2693) * C50706 +
                 (C2692 + C2691 + C2690) * C121) *
                    C50850) *
                   C50606 * C50642) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C121 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50706) *
                   C50850 +
               ((C5366 + C5367 + C5368) * C121 +
                (C5369 + C5370 + C5371) * C50706) *
                   C50744) *
                  C50606 * C964 -
              (((C3060 + C3061 + C3062) * C50706 +
                (C3063 + C3064 + C3065) * C121) *
                   C50744 +
               ((C2367 + C2366 + C2365) * C50706 +
                (C2364 + C2363 + C2362) * C121) *
                   C50850) *
                  C50606 * C965 +
              (((C2373 + C2372 + C2371) * C121 +
                (C2370 + C2369 + C2368) * C50706) *
                   C50850 +
               ((C4032 + C4033 + C4034) * C121 +
                (C4035 + C4036 + C4037) * C50706) *
                   C50744) *
                  C50606 * C966 -
              (((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
                 C2162 * C4012 + C2157 * C4018) *
                    C50706 +
                (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
                 C2162 * C4009 + C2157 * C4015) *
                    C121) *
                   C50744 +
               ((C3345 + C3344 + C3343) * C50706 +
                (C3342 + C3341 + C3340) * C121) *
                   C50850) *
                  C50606 * C967) *
             C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C391 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C392 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
              C2164 * C1715 + C2159 * C1723) *
                 C121 +
             (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
              C2164 * C1719 + C2159 * C1727) *
                 C50706) *
                C50744) *
               C393) *
              C893 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C392 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C391 -
           (((C2164 * C4430 + C2159 * C4436 + C2163 * C4431 + C2158 * C4437 +
              C2162 * C4432 + C2157 * C4438) *
                 C50706 +
             (C2164 * C4427 + C2159 * C4433 + C2163 * C4428 + C2158 * C4434 +
              C2162 * C4429 + C2157 * C4435) *
                 C121) *
                C50744 +
            ((C3521 + C3520 + C3519) * C50706 +
             (C3518 + C3517 + C3516) * C121) *
                C50850) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C893 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
               C50606 * C50642 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C50606 * C893 -
           (((C10616 * C4010 + C50540 * C4016) * C7777 +
             (C10616 * C4007 + C50540 * C4013) * C7782 + C13075 * C7776 +
             C13074 * C7781 + C13073 * C7775 + C13072 * C7780) *
                C50744 +
            (C10981 * C7777 + C10980 * C7782 + C10979 * C7776 + C10978 * C7781 +
             C10977 * C7775 + C10976 * C7780) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
              C50606 * C964 -
          ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
           (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
            C10753 * C7775 + C10752 * C7780) *
               C50850) *
              C50606 * C965 +
          ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
            C10759 * C7782 + C10758 * C7777) *
               C50850 +
           (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
            C11874 * C7782 + C11875 * C7777) *
               C50744) *
              C50606 * C966 -
          (((C10616 * C11866 + C50540 * C11868) * C7777 +
            (C10616 * C11865 + C50540 * C11867) * C7782 + C11875 * C7776 +
            C11874 * C7781 + C11234 * C7775 + C11235 * C7780) *
               C50744 +
           (C11419 * C7777 + C11418 * C7782 + C10758 * C7776 + C10759 * C7781 +
            C10757 * C7775 + C10756 * C7780) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C391 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C392 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            ((C10616 * C1717 + C50540 * C1725) * C7780 +
             (C10616 * C1721 + C50540 * C1729) * C7775 + C13844 * C7781 +
             C13845 * C7776 + C13846 * C7782 + C13847 * C7777) *
                C50744) *
               C393) *
              C893 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C392 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C391 -
           (((C10616 * C12138 + C50540 * C12140) * C7777 +
             (C10616 * C12137 + C50540 * C12139) * C7782 + C13847 * C7776 +
             C13846 * C7781 + C13845 * C7775 + C13844 * C7780) *
                C50744 +
            (C13843 + C13842 + C13841 + C13840 + C13839 + C13838) * C50850) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50606 * C893 -
           ((C21410 + C21409) * C20843 + (C21408 + C21407) * C20842 +
            (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C121 + C10761 * C50706) * C20840 +
            (C21411 + C21412) * C20841 + (C21413 + C21414) * C20842 +
            (C21415 + C21416) * C20843) *
               C50606 * C50642 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C121 +
             (C10616 * C135 + C50540 * C145) * C50706) *
                C20840 +
            (C21263 + C21264) * C20841 + (C21265 + C21266) * C20842 +
            (C21273 + C21274) * C20843) *
               C50606 * C893 -
           (((C10616 * C4430 + C50540 * C4436) * C50706 +
             (C10616 * C4427 + C50540 * C4433) * C121) *
                C20843 +
            (C18614 * C50706 + C18613 * C121) * C20842 +
            (C13073 * C50706 + C13072 * C121) * C20841 +
            (C10977 * C50706 + C10976 * C121) * C20840) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C121 +
            (C10616 * C133 + C50540 * C143) * C50706) *
               C20840 +
           (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
              C50606 * C964 -
          ((C21410 + C21409) * C20843 + (C21408 + C21407) * C20842 +
           (C21406 + C21405) * C20841 +
           (C10753 * C50706 + C10752 * C121) * C20840) *
              C50606 * C965 +
          ((C10754 * C121 + C10755 * C50706) * C20840 +
           (C11237 * C121 + C11236 * C50706) * C20841 +
           (C11536 * C121 + C11537 * C50706) * C20842 +
           (C13846 * C121 + C13847 * C50706) * C20843) *
              C50606 * C966 -
          (((C10616 * C12138 + C50540 * C12140) * C50706 +
            (C10616 * C12137 + C50540 * C12139) * C121) *
               C20843 +
           (C11539 * C50706 + C11538 * C121) * C20842 +
           (C11234 * C50706 + C11235 * C121) * C20841 +
           (C10757 * C50706 + C10756 * C121) * C20840) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C391 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C392 +
           (C21059 * C20840 + C21060 * C20841 + (C21048 + C21047) * C20842 +
            ((C10616 * C17520 + C50540 * C17524) * C121 +
             (C10616 * C17522 + C50540 * C17526) * C50706) *
                C20843) *
               C393) *
              C893 +
          (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
            (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
               C392 -
           (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C391 -
           (((C10616 * C20272 + C50540 * C20274) * C50706 +
             (C10616 * C20271 + C50540 * C20273) * C121) *
                C20843 +
            (C21680 + C21679) * C20842 + C21681 * C20841 + C21682 * C20840) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C7780 +
              (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
              C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                 C50850 +
             (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
                C50839 -
            ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
             (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
                C50670) *
               C893 +
           (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
             (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
                C50670 -
            ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
             (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 +
              C10754 * C7781 + C10753 * C7775 + C10752 * C7780) *
                 C50850) *
                C50839) *
               C50642) *
              C50830 +
          ((((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
             (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
                C50670 -
            ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
             (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 +
              C10760 * C7781 + (C10616 * C134 + C50540 * C144) * C7775 +
              (C10616 * C123 + C50540 * C130) * C7780) *
                 C50850) *
                C50839) *
               C893 +
           (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 +
              C10763 * C7776 + C10764 * C7782 + C10765 * C7777) *
                 C50850 +
             (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
                C50839 -
            (((C10616 * C9123 + C50540 * C9127) * C7777 +
              (C10616 * C9121 + C50540 * C9125) * C7782 + C12905 * C7776 +
              C12904 * C7781 + C12903 * C7775 + C12902 * C7780) *
                 C50744 +
             (C13439 + C13438 + C13437 + C13436 + C13435 + C13434) * C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50706) *
                 C50850 +
             ((C5366 + C5367 + C5368) * C121 +
              (C5369 + C5370 + C5371) * C50706) *
                 C50744) *
                C50839 -
            (((C5372 + C5373 + C5374) * C50706 +
              (C5375 + C5376 + C5377) * C121) *
                 C50744 +
             ((C5371 + C5370 + C5369) * C50706 +
              (C5368 + C5367 + C5366) * C121) *
                 C50850) *
                C50670) *
               C893 +
           ((((C3065 + C3064 + C3063) * C121 +
              (C3062 + C3061 + C3060) * C50706) *
                 C50850 +
             ((C3516 + C3517 + C3518) * C121 +
              (C3519 + C3520 + C3521) * C50706) *
                 C50744) *
                C50670 -
            (((C3060 + C3061 + C3062) * C50706 +
              (C3063 + C3064 + C3065) * C121) *
                 C50744 +
             ((C2367 + C2366 + C2365) * C50706 +
              (C2364 + C2363 + C2362) * C121) *
                 C50850) *
                C50839) *
               C50642) *
              C50830 +
          (((((C5378 + C5379 + C5380) * C121 +
              (C5381 + C5382 + C5383) * C50706) *
                 C50850 +
             ((C5384 + C5385 + C5386) * C121 +
              (C5387 + C5388 + C5389) * C50706) *
                 C50744) *
                C50670 -
            (((C5383 + C5382 + C5381) * C50706 +
              (C5380 + C5379 + C5378) * C121) *
                 C50744 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50706 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50850) *
                C50839) *
               C893 +
           ((((C2374 + C2375 + C2376) * C121 +
              (C2377 + C2378 + C2379) * C50706) *
                 C50850 +
             ((C3066 + C3067 + C3068) * C121 +
              (C3069 + C3070 + C3071) * C50706) *
                 C50744) *
                C50839 -
            (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
               C2162 * C1089 + C2157 * C1097) *
                  C50706 +
              (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
               C2162 * C1085 + C2157 * C1093) *
                  C121) *
                 C50744 +
             ((C3071 + C3070 + C3069) * C50706 +
              (C3068 + C3067 + C3066) * C121) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C121 +
              (C10616 * C133 + C50540 * C143) * C50706) *
                 C20840 +
             (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
                C50839 -
            ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
             (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
                C50670) *
               C893 +
           (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
             (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
                C50670 -
            (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
             (C10753 * C50706 + C10752 * C121) * C20840) *
                C50839) *
               C50642) *
              C50830 +
          ((((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
             (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
                C50670 -
            (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
             ((C10616 * C134 + C50540 * C144) * C50706 +
              (C10616 * C123 + C50540 * C130) * C121) *
                 C20840) *
                C50839) *
               C893 +
           (((C10760 * C121 + C10761 * C50706) * C20840 +
             (C21411 + C21412) * C20841 + (C21413 + C21414) * C20842 +
             (C21415 + C21416) * C20843) *
                C50839 -
            (((C10616 * C16623 + C50540 * C16625) * C50706 +
              (C10616 * C16622 + C50540 * C16624) * C121) *
                 C20843 +
             (C21416 + C21415) * C20842 + (C21414 + C21413) * C20841 +
             (C21412 + C21411) * C20840) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C5366 + C5367 + C5368) * C121 + (C5369 + C5370 + C5371) * C50706) *
               C50744) *
              C50606 * C964 -
          (((C3060 + C3061 + C3062) * C50706 + (C3063 + C3064 + C3065) * C121) *
               C50744 +
           ((C2367 + C2366 + C2365) * C50706 + (C2364 + C2363 + C2362) * C121) *
               C50850) *
              C50606 * C965 +
          (((C2373 + C2372 + C2371) * C121 + (C2370 + C2369 + C2368) * C50706) *
               C50850 +
           ((C4032 + C4033 + C4034) * C121 + (C4035 + C4036 + C4037) * C50706) *
               C50744) *
              C50606 * C966 -
          (((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50706 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C121) *
               C50744 +
           ((C3345 + C3344 + C3343) * C50706 + (C3342 + C3341 + C3340) * C121) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C893 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50642) *
              C895 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50642 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C50606 * C893 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50706 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50744 +
            ((C2695 + C2694 + C2693) * C50706 +
             (C2692 + C2691 + C2690) * C121) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C893 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
               C50606 * C50642 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C50606 * C893 -
           (((C10616 * C4010 + C50540 * C4016) * C7777 +
             (C10616 * C4007 + C50540 * C4013) * C7782 + C13075 * C7776 +
             C13074 * C7781 + C13073 * C7775 + C13072 * C7780) *
                C50744 +
            (C10981 * C7777 + C10980 * C7782 + C10979 * C7776 + C10978 * C7781 +
             C10977 * C7775 + C10976 * C7780) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
              C50606 * C964 -
          ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
           (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
            C10753 * C7775 + C10752 * C7780) *
               C50850) *
              C50606 * C965 +
          ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
            C10759 * C7782 + C10758 * C7777) *
               C50850 +
           (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
            C11874 * C7782 + C11875 * C7777) *
               C50744) *
              C50606 * C966 -
          (((C10616 * C11866 + C50540 * C11868) * C7777 +
            (C10616 * C11865 + C50540 * C11867) * C7782 + C11875 * C7776 +
            C11874 * C7781 + C11234 * C7775 + C11235 * C7780) *
               C50744 +
           (C11419 * C7777 + C11418 * C7782 + C10758 * C7776 + C10759 * C7781 +
            C10757 * C7775 + C10756 * C7780) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50606 * C893 -
           ((C21410 + C21409) * C20843 + (C21408 + C21407) * C20842 +
            (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C121 + C10761 * C50706) * C20840 +
            (C21411 + C21412) * C20841 + (C21413 + C21414) * C20842 +
            (C21415 + C21416) * C20843) *
               C50606 * C50642 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C121 +
             (C10616 * C135 + C50540 * C145) * C50706) *
                C20840 +
            (C21263 + C21264) * C20841 + (C21265 + C21266) * C20842 +
            (C21273 + C21274) * C20843) *
               C50606 * C893 -
           (((C10616 * C4430 + C50540 * C4436) * C50706 +
             (C10616 * C4427 + C50540 * C4433) * C121) *
                C20843 +
            (C18614 * C50706 + C18613 * C121) * C20842 +
            (C13073 * C50706 + C13072 * C121) * C20841 +
            (C10977 * C50706 + C10976 * C121) * C20840) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C121 +
            (C10616 * C133 + C50540 * C143) * C50706) *
               C20840 +
           (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
              C50606 * C964 -
          ((C21410 + C21409) * C20843 + (C21408 + C21407) * C20842 +
           (C21406 + C21405) * C20841 +
           (C10753 * C50706 + C10752 * C121) * C20840) *
              C50606 * C965 +
          ((C10754 * C121 + C10755 * C50706) * C20840 +
           (C11237 * C121 + C11236 * C50706) * C20841 +
           (C11536 * C121 + C11537 * C50706) * C20842 +
           (C13846 * C121 + C13847 * C50706) * C20843) *
              C50606 * C966 -
          (((C10616 * C12138 + C50540 * C12140) * C50706 +
            (C10616 * C12137 + C50540 * C12139) * C121) *
               C20843 +
           (C11539 * C50706 + C11538 * C121) * C20842 +
           (C11234 * C50706 + C11235 * C121) * C20841 +
           (C10757 * C50706 + C10756 * C121) * C20840) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C7780 +
              (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
              C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                 C50850 +
             (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
                C1544 -
            ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
             (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
                C50670) *
               C50838 +
           (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
             (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
                C50670 -
            ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
             (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 +
              C10754 * C7781 + C10753 * C7775 + C10752 * C7780) *
                 C50850) *
                C1544) *
               C50642) *
              C50830 +
          ((((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
             (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
                C50670 -
            ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
             (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 +
              C10760 * C7781 + (C10616 * C134 + C50540 * C144) * C7775 +
              (C10616 * C123 + C50540 * C130) * C7780) *
                 C50850) *
                C1544) *
               C50838 +
           (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 +
              C10763 * C7776 + C10764 * C7782 + C10765 * C7777) *
                 C50850 +
             (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
                C1544 -
            (((C10616 * C9123 + C50540 * C9127) * C7777 +
              (C10616 * C9121 + C50540 * C9125) * C7782 + C12905 * C7776 +
              C12904 * C7781 + C12903 * C7775 + C12902 * C7780) *
                 C50744 +
             (C13439 + C13438 + C13437 + C13436 + C13435 + C13434) * C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50706) *
                 C50850 +
             ((C5366 + C5367 + C5368) * C121 +
              (C5369 + C5370 + C5371) * C50706) *
                 C50744) *
                C1544 -
            (((C5372 + C5373 + C5374) * C50706 +
              (C5375 + C5376 + C5377) * C121) *
                 C50744 +
             ((C5371 + C5370 + C5369) * C50706 +
              (C5368 + C5367 + C5366) * C121) *
                 C50850) *
                C50670) *
               C50838 +
           ((((C3065 + C3064 + C3063) * C121 +
              (C3062 + C3061 + C3060) * C50706) *
                 C50850 +
             ((C3516 + C3517 + C3518) * C121 +
              (C3519 + C3520 + C3521) * C50706) *
                 C50744) *
                C50670 -
            (((C3060 + C3061 + C3062) * C50706 +
              (C3063 + C3064 + C3065) * C121) *
                 C50744 +
             ((C2367 + C2366 + C2365) * C50706 +
              (C2364 + C2363 + C2362) * C121) *
                 C50850) *
                C1544) *
               C50642) *
              C50830 +
          (((((C5378 + C5379 + C5380) * C121 +
              (C5381 + C5382 + C5383) * C50706) *
                 C50850 +
             ((C5384 + C5385 + C5386) * C121 +
              (C5387 + C5388 + C5389) * C50706) *
                 C50744) *
                C50670 -
            (((C5383 + C5382 + C5381) * C50706 +
              (C5380 + C5379 + C5378) * C121) *
                 C50744 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50706 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50850) *
                C1544) *
               C50838 +
           ((((C2374 + C2375 + C2376) * C121 +
              (C2377 + C2378 + C2379) * C50706) *
                 C50850 +
             ((C3066 + C3067 + C3068) * C121 +
              (C3069 + C3070 + C3071) * C50706) *
                 C50744) *
                C1544 -
            (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
               C2162 * C1089 + C2157 * C1097) *
                  C50706 +
              (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
               C2162 * C1085 + C2157 * C1093) *
                  C121) *
                 C50744 +
             ((C3071 + C3070 + C3069) * C50706 +
              (C3068 + C3067 + C3066) * C121) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C121 +
              (C10616 * C133 + C50540 * C143) * C50706) *
                 C20840 +
             (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
                C1544 -
            (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
             (C21042 + C21041) * C20840) *
                C50670) *
               C50838 +
           (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
             (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
                C50670 -
            (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
             (C10753 * C50706 + C10752 * C121) * C20840) *
                C1544) *
               C50642) *
              C50830 +
          ((((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
             (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
                C50670 -
            (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
             ((C10616 * C134 + C50540 * C144) * C50706 +
              (C10616 * C123 + C50540 * C130) * C121) *
                 C20840) *
                C1544) *
               C50838 +
           (((C10760 * C121 + C10761 * C50706) * C20840 +
             (C21411 + C21412) * C20841 + (C21413 + C21414) * C20842 +
             (C21415 + C21416) * C20843) *
                C1544 -
            (((C10616 * C16623 + C50540 * C16625) * C50706 +
              (C10616 * C16622 + C50540 * C16624) * C121) *
                 C20843 +
             (C21416 + C21415) * C20842 + (C21414 + C21413) * C20841 +
             (C21412 + C21411) * C20840) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50884 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50885 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            (C14748 + C14749 + C14742 + C14743 + C14744 + C14745) * C50744) *
               C1960) *
              C50838 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50885 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50884 -
           (((C10616 * C12138 + C50540 * C12140) * C7777 +
             (C10616 * C12137 + C50540 * C12139) * C7782 + C13847 * C7776 +
             C13846 * C7781 + C13845 * C7775 + C13844 * C7780) *
                C50744 +
            (C13843 + C13842 + C13841 + C13840 + C13839 + C13838) * C50850) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50884 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50885 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C7184 + C7185 + C7186) * C121 +
             (C7187 + C7188 + C7189) * C50706) *
                C50744) *
               C1960) *
              C50838 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50885 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50884 -
           (((C2164 * C4430 + C2159 * C4436 + C2163 * C4431 + C2158 * C4437 +
              C2162 * C4432 + C2157 * C4438) *
                 C50706 +
             (C2164 * C4427 + C2159 * C4433 + C2163 * C4428 + C2158 * C4434 +
              C2162 * C4429 + C2157 * C4435) *
                 C121) *
                C50744 +
            ((C3521 + C3520 + C3519) * C50706 +
             (C3518 + C3517 + C3516) * C121) *
                C50850) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50884 -
           (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
            (C21042 + C21041) * C20840) *
               C50885 +
           (C21059 * C20840 + C21060 * C20841 + (C21048 + C21047) * C20842 +
            (C22289 + C22290) * C20843) *
               C1960) *
              C50838 +
          (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
            (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
               C50885 -
           (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C50884 -
           (((C10616 * C20272 + C50540 * C20274) * C50706 +
             (C10616 * C20271 + C50540 * C20273) * C121) *
                C20843 +
            (C21680 + C21679) * C20842 + C21681 * C20841 + C21682 * C20840) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50706) *
                    C50850 +
                ((C5366 + C5367 + C5368) * C121 +
                 (C5369 + C5370 + C5371) * C50706) *
                    C50744) *
                   C1544 -
               (((C5372 + C5373 + C5374) * C50706 +
                 (C5375 + C5376 + C5377) * C121) *
                    C50744 +
                ((C5371 + C5370 + C5369) * C50706 +
                 (C5368 + C5367 + C5366) * C121) *
                    C50850) *
                   C50670) *
                  C50590 * C895 +
              ((((C5378 + C5379 + C5380) * C121 +
                 (C5381 + C5382 + C5383) * C50706) *
                    C50850 +
                ((C5384 + C5385 + C5386) * C121 +
                 (C5387 + C5388 + C5389) * C50706) *
                    C50744) *
                   C50670 -
               (((C5383 + C5382 + C5381) * C50706 +
                 (C5380 + C5379 + C5378) * C121) *
                    C50744 +
                ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                  C2162 * C134 + C2157 * C144) *
                     C50706 +
                 (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                  C2162 * C123 + C2157 * C130) *
                     C121) *
                    C50850) *
                   C1544) *
                  C50590 * C896 +
              ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                  C2164 * C126 + C2159 * C138) *
                     C121 +
                 (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                  C2164 * C137 + C2159 * C147) *
                     C50706) *
                    C50850 +
                ((C5694 + C5695 + C5696) * C121 +
                 (C5697 + C5698 + C5699) * C50706) *
                    C50744) *
                   C1544 -
               (((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
                  C2162 * C418 + C2157 * C430) *
                     C50706 +
                 (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
                  C2162 * C400 + C2157 * C414) *
                     C121) *
                    C50744 +
                ((C5699 + C5698 + C5697) * C50706 +
                 (C5696 + C5695 + C5694) * C121) *
                    C50850) *
                   C50670) *
                  C50590 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50706) *
                    C50850 +
                ((C5366 + C5367 + C5368) * C121 +
                 (C5369 + C5370 + C5371) * C50706) *
                    C50744) *
                   C1544 -
               (((C5372 + C5373 + C5374) * C50706 +
                 (C5375 + C5376 + C5377) * C121) *
                    C50744 +
                ((C5371 + C5370 + C5369) * C50706 +
                 (C5368 + C5367 + C5366) * C121) *
                    C50850) *
                   C50670) *
                  C248 +
              ((((C3065 + C3064 + C3063) * C121 +
                 (C3062 + C3061 + C3060) * C50706) *
                    C50850 +
                ((C3516 + C3517 + C3518) * C121 +
                 (C3519 + C3520 + C3521) * C50706) *
                    C50744) *
                   C50670 -
               (((C3060 + C3061 + C3062) * C50706 +
                 (C3063 + C3064 + C3065) * C121) *
                    C50744 +
                ((C2367 + C2366 + C2365) * C50706 +
                 (C2364 + C2363 + C2362) * C121) *
                    C50850) *
                   C1544) *
                  C249 +
              ((((C2373 + C2372 + C2371) * C121 +
                 (C2370 + C2369 + C2368) * C50706) *
                    C50850 +
                ((C4032 + C4033 + C4034) * C121 +
                 (C4035 + C4036 + C4037) * C50706) *
                    C50744) *
                   C1544 -
               (((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 +
                  C2158 * C3501 + C2162 * C3496 + C2157 * C3502) *
                     C50706 +
                 (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 +
                  C2158 * C3498 + C2162 * C3493 + C2157 * C3499) *
                     C121) *
                    C50744 +
                ((C4037 + C4036 + C4035) * C50706 +
                 (C4034 + C4033 + C4032) * C121) *
                    C50850) *
                   C50670) *
                  C250) *
             C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C5366 + C5367 + C5368) * C121 + (C5369 + C5370 + C5371) * C50706) *
               C50744) *
              C1710 -
          (((C5372 + C5373 + C5374) * C50706 + (C5375 + C5376 + C5377) * C121) *
               C50744 +
           ((C5371 + C5370 + C5369) * C50706 + (C5368 + C5367 + C5366) * C121) *
               C50850) *
              C1711 +
          (((C5377 + C5376 + C5375) * C121 + (C5374 + C5373 + C5372) * C50706) *
               C50850 +
           ((C7184 + C7185 + C7186) * C121 + (C7187 + C7188 + C7189) * C50706) *
               C50744) *
              C1712 -
          (((C2164 * C7162 + C2159 * C7168 + C2163 * C7163 + C2158 * C7169 +
             C2162 * C7164 + C2157 * C7170) *
                C50706 +
            (C2164 * C7159 + C2159 * C7165 + C2163 * C7160 + C2158 * C7166 +
             C2162 * C7161 + C2157 * C7167) *
                C121) *
               C50744 +
           ((C7189 + C7188 + C7187) * C50706 + (C7186 + C7185 + C7184) * C121) *
               C50850) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50590 * C895 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50670 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C1544 -
           (((C10616 * C3494 + C50540 * C3500) * C7777 +
             (C10616 * C3491 + C50540 * C3497) * C7782 +
             (C10616 * C1088 + C50540 * C1096) * C7776 +
             (C10616 * C1084 + C50540 * C1092) * C7781 +
             (C10616 * C418 + C50540 * C430) * C7775 +
             (C10616 * C400 + C50540 * C414) * C7780) *
                C50744 +
            (C13229 + C13228 + C13227 + C13226 + C13233 + C13232) * C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C248 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50670 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C1544) *
              C249 +
          (((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C14334 + C14335 + C14336 + C14337 + C14338 + C14339) * C50744) *
               C1544 -
           (((C10616 * C11518 + C50540 * C11520) * C7777 +
             (C10616 * C11517 + C50540 * C11519) * C7782 + C11539 * C7776 +
             C11538 * C7781 + C11537 * C7775 + C11536 * C7780) *
                C50744 +
            (C14339 + C14338 + C14337 + C14336 + C14335 + C14334) * C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
              C1710 -
          ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
           (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
              C1711 +
          ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
           (C14748 + C14749 + C14742 + C14743 + C14744 + C14745) * C50744) *
              C1712 -
          (((C10616 * C14731 + C50540 * C14735) * C7777 +
            (C10616 * C14729 + C50540 * C14732) * C7782 +
            (C10616 * C14733 + C50540 * C14736) * C7776 +
            (C10616 * C14730 + C50540 * C14734) * C7781 +
            (C10616 * C7164 + C50540 * C7170) * C7775 +
            (C10616 * C7161 + C50540 * C7167) * C7780) *
               C50744 +
           (C14745 + C14744 + C14743 + C14742 + C14749 + C14748) * C50850) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C1544 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50670) *
              C50590 * C895 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
               C50670 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C121 +
             (C10616 * C135 + C50540 * C145) * C50706) *
                C20840 +
            (C21263 + C21264) * C20841 + (C21265 + C21266) * C20842 +
            (C21273 + C21274) * C20843) *
               C1544 -
           (((C10616 * C7162 + C50540 * C7168) * C50706 +
             (C10616 * C7159 + C50540 * C7165) * C121) *
                C20843 +
            (C21274 + C21273) * C20842 + (C21266 + C21265) * C20841 +
            (C21264 + C21263) * C20840) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C1544 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50670) *
              C248 +
          (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
            (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
               C50670 -
           (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C1544) *
              C249 +
          (((C10754 * C121 + C10755 * C50706) * C20840 +
            (C22009 + C22010) * C20841 + (C22011 + C22012) * C20842 +
            (C22013 + C22014) * C20843) *
               C1544 -
           (((C10616 * C14731 + C50540 * C14735) * C50706 +
             (C10616 * C14729 + C50540 * C14732) * C121) *
                C20843 +
            (C22014 + C22013) * C20842 + (C22012 + C22011) * C20841 +
            (C22010 + C22009) * C20840) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C121 +
            (C10616 * C133 + C50540 * C143) * C50706) *
               C20840 +
           (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
              C1710 -
          (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
           (C21042 + C21041) * C20840) *
              C1711 +
          (C21059 * C20840 + C21060 * C20841 + (C21048 + C21047) * C20842 +
           (C22289 + C22290) * C20843) *
              C1712 -
          (((C10616 * C22277 + C50540 * C22279) * C50706 +
            (C10616 * C22276 + C50540 * C22278) * C121) *
               C20843 +
           (C22290 + C22289) * C20842 + C22281 * C20841 + C22282 * C20840) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50884 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50885 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            (C14748 + C14749 + C14742 + C14743 + C14744 + C14745) * C50744) *
               C1960) *
              C50590 * C50830 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50885 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50884 -
           (((C10616 * C10053 + C50540 * C10057) * C7777 +
             (C10616 * C10051 + C50540 * C10055) * C7782 +
             (C10616 * C4431 + C50540 * C4437) * C7776 +
             (C10616 * C4428 + C50540 * C4434) * C7781 +
             (C10616 * C1720 + C50540 * C1728) * C7775 +
             (C10616 * C1716 + C50540 * C1724) * C7780) *
                C50744 +
            (C12917 + C12916 + C12915 + C12914 + C12913 + C12912) * C50850) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50884 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50885 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C7184 + C7185 + C7186) * C121 +
             (C7187 + C7188 + C7189) * C50706) *
                C50744) *
               C1960) *
              C50590 * C50830 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50885 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50884 -
           (((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
              C2162 * C1720 + C2157 * C1728) *
                 C50706 +
             (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
              C2162 * C1716 + C2157 * C1724) *
                 C121) *
                C50744 +
            ((C5389 + C5388 + C5387) * C50706 +
             (C5386 + C5385 + C5384) * C121) *
                C50850) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C50884 -
           (C22281 * C20843 + C22282 * C20842 + (C21044 + C21043) * C20841 +
            (C21042 + C21041) * C20840) *
               C50885 +
           (C21059 * C20840 + C21060 * C20841 + (C21048 + C21047) * C20842 +
            (C22289 + C22290) * C20843) *
               C1960) *
              C50590 * C50830 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
               C50885 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C50884 -
           (((C10616 * C17521 + C50540 * C17525) * C50706 +
             (C10616 * C17519 + C50540 * C17523) * C121) *
                C20843 +
            (C21066 + C21065) * C20842 + C21063 * C20841 + C21064 * C20840) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C1544 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C248 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50670 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C1544) *
              C249 +
          ((((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C1544 -
           (((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
              C2162 * C3496 + C2157 * C3502) *
                 C50706 +
             (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
              C2162 * C3493 + C2157 * C3499) *
                 C121) *
                C50744 +
            ((C4037 + C4036 + C4035) * C50706 +
             (C4034 + C4033 + C4032) * C121) *
                C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C1544 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50590 * C895 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50670 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C1544 -
           (((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
              C2162 * C418 + C2157 * C430) *
                 C50706 +
             (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
              C2162 * C400 + C2157 * C414) *
                 C121) *
                C50744 +
            ((C5699 + C5698 + C5697) * C50706 +
             (C5696 + C5695 + C5694) * C121) *
                C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50590 * C895 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50670 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C1544 -
           (((C10616 * C3494 + C50540 * C3500) * C7777 +
             (C10616 * C3491 + C50540 * C3497) * C7782 +
             (C10616 * C1088 + C50540 * C1096) * C7776 +
             (C10616 * C1084 + C50540 * C1092) * C7781 +
             (C10616 * C418 + C50540 * C430) * C7775 +
             (C10616 * C400 + C50540 * C414) * C7780) *
                C50744 +
            (C13229 + C13228 + C13227 + C13226 + C13233 + C13232) * C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C248 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50670 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C1544) *
              C249 +
          (((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C14334 + C14335 + C14336 + C14337 + C14338 + C14339) * C50744) *
               C1544 -
           (((C10616 * C11518 + C50540 * C11520) * C7777 +
             (C10616 * C11517 + C50540 * C11519) * C7782 + C11539 * C7776 +
             C11538 * C7781 + C11537 * C7775 + C11536 * C7780) *
                C50744 +
            (C14339 + C14338 + C14337 + C14336 + C14335 + C14334) * C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C1544 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50670) *
              C50590 * C895 +
          (((C21049 + C21050) * C20840 + (C21051 + C21052) * C20841 +
            (C21053 + C21054) * C20842 + (C21065 + C21066) * C20843) *
               C50670 -
           (C21063 * C20843 + C21064 * C20842 + (C21050 + C21049) * C20841 +
            ((C10616 * C134 + C50540 * C144) * C50706 +
             (C10616 * C123 + C50540 * C130) * C121) *
                C20840) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C121 +
             (C10616 * C135 + C50540 * C145) * C50706) *
                C20840 +
            (C21263 + C21264) * C20841 + (C21265 + C21266) * C20842 +
            (C21273 + C21274) * C20843) *
               C1544 -
           (((C10616 * C7162 + C50540 * C7168) * C50706 +
             (C10616 * C7159 + C50540 * C7165) * C121) *
                C20843 +
            (C21274 + C21273) * C20842 + (C21266 + C21265) * C20841 +
            (C21264 + C21263) * C20840) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C121 +
             (C10616 * C133 + C50540 * C143) * C50706) *
                C20840 +
            (C21041 + C21042) * C20841 + C21059 * C20842 + C21060 * C20843) *
               C1544 -
           ((C21047 + C21048) * C20843 + (C21046 + C21045) * C20842 +
            (C21044 + C21043) * C20841 + (C21042 + C21041) * C20840) *
               C50670) *
              C248 +
          (((C21405 + C21406) * C20840 + (C21407 + C21408) * C20841 +
            (C21409 + C21410) * C20842 + (C21679 + C21680) * C20843) *
               C50670 -
           (C21681 * C20843 + C21682 * C20842 + (C21406 + C21405) * C20841 +
            (C10753 * C50706 + C10752 * C121) * C20840) *
               C1544) *
              C249 +
          (((C10754 * C121 + C10755 * C50706) * C20840 +
            (C22009 + C22010) * C20841 + (C22011 + C22012) * C20842 +
            (C22013 + C22014) * C20843) *
               C1544 -
           (((C10616 * C14731 + C50540 * C14735) * C50706 +
             (C10616 * C14729 + C50540 * C14732) * C121) *
                C20843 +
            (C22014 + C22013) * C20842 + (C22012 + C22011) * C20841 +
            (C22010 + C22009) * C20840) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50606 * C50838 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50606 * C50642) *
                       C50880 +
                   ((((C22931 + C22932 + C22933) * C121 +
                      (C22934 + C22935 + C22936) * C50706) *
                         C31984 +
                     ((C23623 + C23624 + C23625) * C121 +
                      (C23626 + C23627 + C23628) * C50706) *
                         C50744) *
                        C50606 * C50642 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50606 * C50838) *
                       C50881 +
                   ((((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                       C50863 * C132 + C22721 * C126 + C22716 * C138) *
                          C121 +
                      (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                       C50863 * C146 + C22721 * C137 + C22716 * C147) *
                          C50706) *
                         C31984 +
                     ((C22719 * C395 + C50879 * C409 + C22720 * C394 +
                       C50863 * C408 + C22721 * C402 + C22716 * C420) *
                          C121 +
                      (C22719 * C405 + C50879 * C425 + C22720 * C404 +
                       C50863 * C424 + C22721 * C421 + C22716 * C432) *
                          C50706) *
                         C50744) *
                        C50606 * C50838 -
                    (((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                       C50863 * C793 + C22719 * C786 + C50879 * C792) *
                          C50706 +
                      (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                       C50863 * C783 + C22719 * C777 + C50879 * C782) *
                          C121) *
                         C50744 +
                     ((C23252 + C23251 + C23250) * C50706 +
                      (C23249 + C23248 + C23247) * C121) *
                         C31984) *
                        C50606 * C50642) *
                       C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                        C50863 * C130 + C22721 * C124 + C22716 * C131) *
                           C121 +
                       (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                        C50863 * C144 + C22721 * C135 + C22716 * C145) *
                           C50706) *
                          C31984 +
                      ((C32327 + C32328 + C32329) * C121 +
                       (C32330 + C32331 + C32332) * C50706) *
                          C50744) *
                         C50839 -
                     (((C32333 + C32334 + C32335) * C50706 +
                       (C32336 + C32337 + C32338) * C121) *
                          C50744 +
                      ((C32332 + C32331 + C32330) * C50706 +
                       (C32329 + C32328 + C32327) * C121) *
                          C31984) *
                         C50670) *
                        C50838 +
                    ((((C23622 + C23621 + C23620) * C121 +
                       (C23619 + C23618 + C23617) * C50706) *
                          C31984 +
                      ((C24049 + C24050 + C24051) * C121 +
                       (C24052 + C24053 + C24054) * C50706) *
                          C50744) *
                         C50670 -
                     (((C23617 + C23618 + C23619) * C50706 +
                       (C23620 + C23621 + C23622) * C121) *
                          C50744 +
                      ((C22924 + C22923 + C22922) * C50706 +
                       (C22921 + C22920 + C22919) * C121) *
                          C31984) *
                         C50839) *
                        C50642) *
                       C251 +
                   (((((C32339 + C32340 + C32341) * C121 +
                       (C32342 + C32343 + C32344) * C50706) *
                          C31984 +
                      ((C32345 + C32346 + C32347) * C121 +
                       (C32348 + C32349 + C32350) * C50706) *
                          C50744) *
                         C50670 -
                     (((C32344 + C32343 + C32342) * C50706 +
                       (C32341 + C32340 + C32339) * C121) *
                          C50744 +
                      ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                        C50863 * C145 + C22719 * C134 + C50879 * C144) *
                           C50706 +
                       (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                        C50863 * C131 + C22719 * C123 + C50879 * C130) *
                           C121) *
                          C31984) *
                         C50839) *
                        C50838 +
                    ((((C22931 + C22932 + C22933) * C121 +
                       (C22934 + C22935 + C22936) * C50706) *
                          C31984 +
                      ((C23623 + C23624 + C23625) * C121 +
                       (C23626 + C23627 + C23628) * C50706) *
                          C50744) *
                         C50839 -
                     (((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                        C50863 * C1096 + C22719 * C1089 + C50879 * C1097) *
                           C50706 +
                       (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                        C50863 * C1092 + C22719 * C1085 + C50879 * C1093) *
                           C121) *
                          C50744 +
                      ((C23628 + C23627 + C23626) * C50706 +
                       (C23625 + C23624 + C23623) * C121) *
                          C31984) *
                         C50670) *
                        C50642) *
                       C50577)) /
                 (p * q * std::sqrt(p + q));
    d2ee[137] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C22719 * C397 + C50879 * C411 + C22720 * C396 +
                       C50863 * C410 + C22721 * C395 + C22716 * C409) *
                          C121 +
                      (C22719 * C407 + C50879 * C427 + C22720 * C406 +
                       C50863 * C426 + C22721 * C405 + C22716 * C425) *
                          C50706) *
                         C50744) *
                        C50606 * C248 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50606 * C249 +
                    (((C22930 + C22929 + C22928) * C121 +
                      (C22927 + C22926 + C22925) * C50706) *
                         C31984 +
                     ((C24553 + C24554 + C24555) * C121 +
                      (C24556 + C24557 + C24558) * C50706) *
                         C50744) *
                        C50606 * C250) *
                       C251 +
                   ((((C22931 + C22932 + C22933) * C121 +
                      (C22934 + C22935 + C22936) * C50706) *
                         C31984 +
                     ((C23623 + C23624 + C23625) * C121 +
                      (C23626 + C23627 + C23628) * C50706) *
                         C50744) *
                        C50606 * C249 -
                    (((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                       C50863 * C425 + C22719 * C406 + C50879 * C426) *
                          C50706 +
                      (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                       C50863 * C409 + C22719 * C396 + C50879 * C410) *
                          C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50606 * C248 -
                    (((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                       C50863 * C1443 + C22719 * C1436 + C50879 * C1444) *
                          C50706 +
                      (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                       C50863 * C1439 + C22719 * C1432 + C50879 * C1440) *
                          C121) *
                         C50744 +
                     ((C22942 + C22941 + C22940) * C50706 +
                      (C22939 + C22938 + C22937) * C121) *
                         C31984) *
                        C50606 * C250) *
                       C50577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                      C50863 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                      C50863 * C144 + C22721 * C135 + C22716 * C145) *
                         C50706) *
                        C31984 +
                    ((C22719 * C397 + C50879 * C411 + C22720 * C396 +
                      C50863 * C410 + C22721 * C395 + C22716 * C409) *
                         C121 +
                     (C22719 * C407 + C50879 * C427 + C22720 * C406 +
                      C50863 * C426 + C22721 * C405 + C22716 * C425) *
                         C50706) *
                        C50744) *
                       C50606 * C50590 * C113 -
                   (((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                      C50863 * C425 + C22719 * C406 + C50879 * C426) *
                         C50706 +
                     (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                      C50863 * C409 + C22719 * C396 + C50879 * C410) *
                         C121) *
                        C50744 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50863 * C145 + C22719 * C134 + C50879 * C144) *
                         C50706 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50863 * C131 + C22719 * C123 + C50879 * C130) *
                         C121) *
                        C31984) *
                       C50606 * C50590 * C114 +
                   (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                      C50863 * C132 + C22721 * C126 + C22716 * C138) *
                         C121 +
                     (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                      C50863 * C146 + C22721 * C137 + C22716 * C147) *
                         C50706) *
                        C31984 +
                    ((C22719 * C395 + C50879 * C409 + C22720 * C394 +
                      C50863 * C408 + C22721 * C402 + C22716 * C420) *
                         C121 +
                     (C22719 * C405 + C50879 * C425 + C22720 * C404 +
                      C50863 * C424 + C22721 * C421 + C22716 * C432) *
                         C50706) *
                        C50744) *
                       C50606 * C50590 * C115 -
                   (((C22721 * C642 + C22716 * C644 + C22720 * C421 +
                      C50863 * C432 + C22719 * C404 + C50879 * C424) *
                         C50706 +
                     (C22721 * C641 + C22716 * C643 + C22720 * C402 +
                      C50863 * C420 + C22719 * C394 + C50879 * C408) *
                         C121) *
                        C50744 +
                    ((C22721 * C140 + C22716 * C148 + C22720 * C137 +
                      C50863 * C147 + C22719 * C136 + C50879 * C146) *
                         C50706 +
                     (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                      C50863 * C138 + C22719 * C125 + C50879 * C132) *
                         C121) *
                        C31984) *
                       C50606 * C50590 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C391 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C392 +
                    (((C32338 + C32337 + C32336) * C121 +
                      (C32335 + C32334 + C32333) * C50706) *
                         C31984 +
                     ((C22719 * C1717 + C50879 * C1725 + C22720 * C1716 +
                       C50863 * C1724 + C22721 * C1715 + C22716 * C1723) *
                          C121 +
                      (C22719 * C1721 + C50879 * C1729 + C22720 * C1720 +
                       C50863 * C1728 + C22721 * C1719 + C22716 * C1727) *
                          C50706) *
                         C50744) *
                        C393) *
                       C50590 * C251 +
                   ((((C32339 + C32340 + C32341) * C121 +
                      (C32342 + C32343 + C32344) * C50706) *
                         C31984 +
                     ((C32345 + C32346 + C32347) * C121 +
                      (C32348 + C32349 + C32350) * C50706) *
                         C50744) *
                        C392 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C391 -
                    (((C22721 * C1718 + C22716 * C1726 + C22720 * C1719 +
                       C50863 * C1727 + C22719 * C1720 + C50879 * C1728) *
                          C50706 +
                      (C22721 * C1714 + C22716 * C1722 + C22720 * C1715 +
                       C50863 * C1723 + C22719 * C1716 + C50879 * C1724) *
                          C121) *
                         C50744 +
                     ((C32350 + C32349 + C32348) * C50706 +
                      (C32347 + C32346 + C32345) * C121) *
                         C31984) *
                        C393) *
                       C50590 * C50577)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50839 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50670) *
                       C50590 * C50880 +
                   ((((C32339 + C32340 + C32341) * C121 +
                      (C32342 + C32343 + C32344) * C50706) *
                         C31984 +
                     ((C32345 + C32346 + C32347) * C121 +
                      (C32348 + C32349 + C32350) * C50706) *
                         C50744) *
                        C50670 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50839) *
                       C50590 * C50881 +
                   ((((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                       C50863 * C132 + C22721 * C126 + C22716 * C138) *
                          C121 +
                      (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                       C50863 * C146 + C22721 * C137 + C22716 * C147) *
                          C50706) *
                         C31984 +
                     ((C32655 + C32656 + C32657) * C121 +
                      (C32658 + C32659 + C32660) * C50706) *
                         C50744) *
                        C50839 -
                    (((C22721 * C422 + C22716 * C433 + C22720 * C419 +
                       C50863 * C431 + C22719 * C418 + C50879 * C430) *
                          C50706 +
                      (C22721 * C403 + C22716 * C423 + C22720 * C401 +
                       C50863 * C415 + C22719 * C400 + C50879 * C414) *
                          C121) *
                         C50744 +
                     ((C32660 + C32659 + C32658) * C50706 +
                      (C32657 + C32656 + C32655) * C121) *
                         C31984) *
                        C50670) *
                       C50590 * C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                      C50863 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                      C50863 * C144 + C22721 * C135 + C22716 * C145) *
                         C50706) *
                        C31984 +
                    ((C22719 * C397 + C50879 * C411 + C22720 * C396 +
                      C50863 * C410 + C22721 * C395 + C22716 * C409) *
                         C121 +
                     (C22719 * C407 + C50879 * C427 + C22720 * C406 +
                      C50863 * C426 + C22721 * C405 + C22716 * C425) *
                         C50706) *
                        C50744) *
                       C50606 * C50590 * C113 -
                   (((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                      C50863 * C425 + C22719 * C406 + C50879 * C426) *
                         C50706 +
                     (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                      C50863 * C409 + C22719 * C396 + C50879 * C410) *
                         C121) *
                        C50744 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50863 * C145 + C22719 * C134 + C50879 * C144) *
                         C50706 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50863 * C131 + C22719 * C123 + C50879 * C130) *
                         C121) *
                        C31984) *
                       C50606 * C50590 * C114 +
                   (((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                      C50863 * C132 + C22721 * C126 + C22716 * C138) *
                         C121 +
                     (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                      C50863 * C146 + C22721 * C137 + C22716 * C147) *
                         C50706) *
                        C31984 +
                    ((C22719 * C395 + C50879 * C409 + C22720 * C394 +
                      C50863 * C408 + C22721 * C402 + C22716 * C420) *
                         C121 +
                     (C22719 * C405 + C50879 * C425 + C22720 * C404 +
                      C50863 * C424 + C22721 * C421 + C22716 * C432) *
                         C50706) *
                        C50744) *
                       C50606 * C50590 * C115 -
                   (((C22721 * C642 + C22716 * C644 + C22720 * C421 +
                      C50863 * C432 + C22719 * C404 + C50879 * C424) *
                         C50706 +
                     (C22721 * C641 + C22716 * C643 + C22720 * C402 +
                      C50863 * C420 + C22719 * C394 + C50879 * C408) *
                         C121) *
                        C50744 +
                    ((C22721 * C140 + C22716 * C148 + C22720 * C137 +
                      C50863 * C147 + C22719 * C136 + C50879 * C146) *
                         C50706 +
                     (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                      C50863 * C138 + C22719 * C125 + C50879 * C132) *
                         C121) *
                        C31984) *
                       C50606 * C50590 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C22719 * C397 + C50879 * C411 + C22720 * C396 +
                       C50863 * C410 + C22721 * C395 + C22716 * C409) *
                          C121 +
                      (C22719 * C407 + C50879 * C427 + C22720 * C406 +
                       C50863 * C426 + C22721 * C405 + C22716 * C425) *
                          C50706) *
                         C50744) *
                        C50606 * C248 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50606 * C249 +
                    (((C22930 + C22929 + C22928) * C121 +
                      (C22927 + C22926 + C22925) * C50706) *
                         C31984 +
                     ((C24553 + C24554 + C24555) * C121 +
                      (C24556 + C24557 + C24558) * C50706) *
                         C50744) *
                        C50606 * C250) *
                       C251 +
                   ((((C22931 + C22932 + C22933) * C121 +
                      (C22934 + C22935 + C22936) * C50706) *
                         C31984 +
                     ((C23623 + C23624 + C23625) * C121 +
                      (C23626 + C23627 + C23628) * C50706) *
                         C50744) *
                        C50606 * C249 -
                    (((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                       C50863 * C425 + C22719 * C406 + C50879 * C426) *
                          C50706 +
                      (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                       C50863 * C409 + C22719 * C396 + C50879 * C410) *
                          C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50606 * C248 -
                    (((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                       C50863 * C1443 + C22719 * C1436 + C50879 * C1444) *
                          C50706 +
                      (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                       C50863 * C1439 + C22719 * C1432 + C50879 * C1440) *
                          C121) *
                         C50744 +
                     ((C22942 + C22941 + C22940) * C50706 +
                      (C22939 + C22938 + C22937) * C121) *
                         C31984) *
                        C50606 * C250) *
                       C50577)) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50606 * C50882 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50606 * C50883 +
                    (((C22930 + C22929 + C22928) * C121 +
                      (C22927 + C22926 + C22925) * C50706) *
                         C31984 +
                     ((C24553 + C24554 + C24555) * C121 +
                      (C24556 + C24557 + C24558) * C50706) *
                         C50744) *
                        C50606 * C1199) *
                       C50830 +
                   ((((C22931 + C22932 + C22933) * C121 +
                      (C22934 + C22935 + C22936) * C50706) *
                         C31984 +
                     ((C23623 + C23624 + C23625) * C121 +
                      (C23626 + C23627 + C23628) * C50706) *
                         C50744) *
                        C50606 * C50883 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50606 * C50882 -
                    (((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                       C50863 * C1443 + C22719 * C1436 + C50879 * C1444) *
                          C50706 +
                      (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                       C50863 * C1439 + C22719 * C1432 + C50879 * C1440) *
                          C121) *
                         C50744 +
                     ((C22942 + C22941 + C22940) * C50706 +
                      (C22939 + C22938 + C22937) * C121) *
                         C31984) *
                        C50606 * C1199) *
                       C50577)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50839 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50670) *
                       C50882 +
                   ((((C23622 + C23621 + C23620) * C121 +
                      (C23619 + C23618 + C23617) * C50706) *
                         C31984 +
                     ((C24049 + C24050 + C24051) * C121 +
                      (C24052 + C24053 + C24054) * C50706) *
                         C50744) *
                        C50670 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50839) *
                       C50883 +
                   ((((C22930 + C22929 + C22928) * C121 +
                      (C22927 + C22926 + C22925) * C50706) *
                         C31984 +
                     ((C24553 + C24554 + C24555) * C121 +
                      (C24556 + C24557 + C24558) * C50706) *
                         C50744) *
                        C50839 -
                    (((C22721 * C3494 + C22716 * C3500 + C22720 * C3495 +
                       C50863 * C3501 + C22719 * C3496 + C50879 * C3502) *
                          C50706 +
                      (C22721 * C3491 + C22716 * C3497 + C22720 * C3492 +
                       C50863 * C3498 + C22719 * C3493 + C50879 * C3499) *
                          C121) *
                         C50744 +
                     ((C24558 + C24557 + C24556) * C50706 +
                      (C24555 + C24554 + C24553) * C121) *
                         C31984) *
                        C50670) *
                       C1199) *
                  C50571) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                      C50863 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                      C50863 * C144 + C22721 * C135 + C22716 * C145) *
                         C50706) *
                        C31984 +
                    ((C32327 + C32328 + C32329) * C121 +
                     (C32330 + C32331 + C32332) * C50706) *
                        C50744) *
                       C50606 * C964 -
                   (((C23617 + C23618 + C23619) * C50706 +
                     (C23620 + C23621 + C23622) * C121) *
                        C50744 +
                    ((C22924 + C22923 + C22922) * C50706 +
                     (C22921 + C22920 + C22919) * C121) *
                        C31984) *
                       C50606 * C965 +
                   (((C22930 + C22929 + C22928) * C121 +
                     (C22927 + C22926 + C22925) * C50706) *
                        C31984 +
                    ((C24553 + C24554 + C24555) * C121 +
                     (C24556 + C24557 + C24558) * C50706) *
                        C50744) *
                       C50606 * C966 -
                   (((C22721 * C4010 + C22716 * C4016 + C22720 * C4011 +
                      C50863 * C4017 + C22719 * C4012 + C50879 * C4018) *
                         C50706 +
                     (C22721 * C4007 + C22716 * C4013 + C22720 * C4008 +
                      C50863 * C4014 + C22719 * C4009 + C50879 * C4015) *
                         C121) *
                        C50744 +
                    ((C23890 + C23889 + C23888) * C50706 +
                     (C23887 + C23886 + C23885) * C121) *
                        C31984) *
                       C50606 * C967) *
                  C50571) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50606 * C893 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50606 * C50642) *
                       C895 +
                   ((((C22931 + C22932 + C22933) * C121 +
                      (C22934 + C22935 + C22936) * C50706) *
                         C31984 +
                     ((C23623 + C23624 + C23625) * C121 +
                      (C23626 + C23627 + C23628) * C50706) *
                         C50744) *
                        C50606 * C50642 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50606 * C893) *
                       C896 +
                   ((((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                       C50863 * C132 + C22721 * C126 + C22716 * C138) *
                          C121 +
                      (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                       C50863 * C146 + C22721 * C137 + C22716 * C147) *
                          C50706) *
                         C31984 +
                     ((C32655 + C32656 + C32657) * C121 +
                      (C32658 + C32659 + C32660) * C50706) *
                         C50744) *
                        C50606 * C893 -
                    (((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                       C50863 * C793 + C22719 * C786 + C50879 * C792) *
                          C50706 +
                      (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                       C50863 * C783 + C22719 * C777 + C50879 * C782) *
                          C121) *
                         C50744 +
                     ((C23252 + C23251 + C23250) * C50706 +
                      (C23249 + C23248 + C23247) * C121) *
                         C31984) *
                        C50606 * C50642) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C391 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C392 +
                    (((C32338 + C32337 + C32336) * C121 +
                      (C32335 + C32334 + C32333) * C50706) *
                         C31984 +
                     ((C22719 * C1717 + C50879 * C1725 + C22720 * C1716 +
                       C50863 * C1724 + C22721 * C1715 + C22716 * C1723) *
                          C121 +
                      (C22719 * C1721 + C50879 * C1729 + C22720 * C1720 +
                       C50863 * C1728 + C22721 * C1719 + C22716 * C1727) *
                          C50706) *
                         C50744) *
                        C393) *
                       C893 +
                   ((((C23622 + C23621 + C23620) * C121 +
                      (C23619 + C23618 + C23617) * C50706) *
                         C31984 +
                     ((C24049 + C24050 + C24051) * C121 +
                      (C24052 + C24053 + C24054) * C50706) *
                         C50744) *
                        C392 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C391 -
                    (((C22721 * C4430 + C22716 * C4436 + C22720 * C4431 +
                       C50863 * C4437 + C22719 * C4432 + C50879 * C4438) *
                          C50706 +
                      (C22721 * C4427 + C22716 * C4433 + C22720 * C4428 +
                       C50863 * C4434 + C22719 * C4429 + C50879 * C4435) *
                          C121) *
                         C50744 +
                     ((C24054 + C24053 + C24052) * C50706 +
                      (C24051 + C24050 + C24049) * C121) *
                         C31984) *
                        C393) *
                       C50642) *
                  C50571) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                        C50863 * C130 + C22721 * C124 + C22716 * C131) *
                           C121 +
                       (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                        C50863 * C144 + C22721 * C135 + C22716 * C145) *
                           C50706) *
                          C31984 +
                      ((C32327 + C32328 + C32329) * C121 +
                       (C32330 + C32331 + C32332) * C50706) *
                          C50744) *
                         C50839 -
                     (((C32333 + C32334 + C32335) * C50706 +
                       (C32336 + C32337 + C32338) * C121) *
                          C50744 +
                      ((C32332 + C32331 + C32330) * C50706 +
                       (C32329 + C32328 + C32327) * C121) *
                          C31984) *
                         C50670) *
                        C893 +
                    ((((C23622 + C23621 + C23620) * C121 +
                       (C23619 + C23618 + C23617) * C50706) *
                          C31984 +
                      ((C24049 + C24050 + C24051) * C121 +
                       (C24052 + C24053 + C24054) * C50706) *
                          C50744) *
                         C50670 -
                     (((C23617 + C23618 + C23619) * C50706 +
                       (C23620 + C23621 + C23622) * C121) *
                          C50744 +
                      ((C22924 + C22923 + C22922) * C50706 +
                       (C22921 + C22920 + C22919) * C121) *
                          C31984) *
                         C50839) *
                        C50642) *
                       C50830 +
                   (((((C32339 + C32340 + C32341) * C121 +
                       (C32342 + C32343 + C32344) * C50706) *
                          C31984 +
                      ((C32345 + C32346 + C32347) * C121 +
                       (C32348 + C32349 + C32350) * C50706) *
                          C50744) *
                         C50670 -
                     (((C32344 + C32343 + C32342) * C50706 +
                       (C32341 + C32340 + C32339) * C121) *
                          C50744 +
                      ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                        C50863 * C145 + C22719 * C134 + C50879 * C144) *
                           C50706 +
                       (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                        C50863 * C131 + C22719 * C123 + C50879 * C130) *
                           C121) *
                          C31984) *
                         C50839) *
                        C893 +
                    ((((C22931 + C22932 + C22933) * C121 +
                       (C22934 + C22935 + C22936) * C50706) *
                          C31984 +
                      ((C23623 + C23624 + C23625) * C121 +
                       (C23626 + C23627 + C23628) * C50706) *
                          C50744) *
                         C50839 -
                     (((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                        C50863 * C1096 + C22719 * C1089 + C50879 * C1097) *
                           C50706 +
                       (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                        C50863 * C1092 + C22719 * C1085 + C50879 * C1093) *
                           C121) *
                          C50744 +
                      ((C23628 + C23627 + C23626) * C50706 +
                       (C23625 + C23624 + C23623) * C121) *
                          C31984) *
                         C50670) *
                        C50642) *
                       C50577)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50606 * C893 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50606 * C50642) *
                       C895 +
                   ((((C22931 + C22932 + C22933) * C121 +
                      (C22934 + C22935 + C22936) * C50706) *
                         C31984 +
                     ((C23623 + C23624 + C23625) * C121 +
                      (C23626 + C23627 + C23628) * C50706) *
                         C50744) *
                        C50606 * C50642 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50606 * C893) *
                       C896 +
                   ((((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                       C50863 * C132 + C22721 * C126 + C22716 * C138) *
                          C121 +
                      (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                       C50863 * C146 + C22721 * C137 + C22716 * C147) *
                          C50706) *
                         C31984 +
                     ((C32655 + C32656 + C32657) * C121 +
                      (C32658 + C32659 + C32660) * C50706) *
                         C50744) *
                        C50606 * C893 -
                    (((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                       C50863 * C793 + C22719 * C786 + C50879 * C792) *
                          C50706 +
                      (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                       C50863 * C783 + C22719 * C777 + C50879 * C782) *
                          C121) *
                         C50744 +
                     ((C23252 + C23251 + C23250) * C50706 +
                      (C23249 + C23248 + C23247) * C121) *
                         C31984) *
                        C50606 * C50642) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                      C50863 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                      C50863 * C144 + C22721 * C135 + C22716 * C145) *
                         C50706) *
                        C31984 +
                    ((C32327 + C32328 + C32329) * C121 +
                     (C32330 + C32331 + C32332) * C50706) *
                        C50744) *
                       C50606 * C964 -
                   (((C23617 + C23618 + C23619) * C50706 +
                     (C23620 + C23621 + C23622) * C121) *
                        C50744 +
                    ((C22924 + C22923 + C22922) * C50706 +
                     (C22921 + C22920 + C22919) * C121) *
                        C31984) *
                       C50606 * C965 +
                   (((C22930 + C22929 + C22928) * C121 +
                     (C22927 + C22926 + C22925) * C50706) *
                        C31984 +
                    ((C24553 + C24554 + C24555) * C121 +
                     (C24556 + C24557 + C24558) * C50706) *
                        C50744) *
                       C50606 * C966 -
                   (((C22721 * C4010 + C22716 * C4016 + C22720 * C4011 +
                      C50863 * C4017 + C22719 * C4012 + C50879 * C4018) *
                         C50706 +
                     (C22721 * C4007 + C22716 * C4013 + C22720 * C4008 +
                      C50863 * C4014 + C22719 * C4009 + C50879 * C4015) *
                         C121) *
                        C50744 +
                    ((C23890 + C23889 + C23888) * C50706 +
                     (C23887 + C23886 + C23885) * C121) *
                        C31984) *
                       C50606 * C967) *
                  C50571) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                        C50863 * C130 + C22721 * C124 + C22716 * C131) *
                           C121 +
                       (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                        C50863 * C144 + C22721 * C135 + C22716 * C145) *
                           C50706) *
                          C31984 +
                      ((C32327 + C32328 + C32329) * C121 +
                       (C32330 + C32331 + C32332) * C50706) *
                          C50744) *
                         C1544 -
                     (((C32333 + C32334 + C32335) * C50706 +
                       (C32336 + C32337 + C32338) * C121) *
                          C50744 +
                      ((C32332 + C32331 + C32330) * C50706 +
                       (C32329 + C32328 + C32327) * C121) *
                          C31984) *
                         C50670) *
                        C50838 +
                    ((((C23622 + C23621 + C23620) * C121 +
                       (C23619 + C23618 + C23617) * C50706) *
                          C31984 +
                      ((C24049 + C24050 + C24051) * C121 +
                       (C24052 + C24053 + C24054) * C50706) *
                          C50744) *
                         C50670 -
                     (((C23617 + C23618 + C23619) * C50706 +
                       (C23620 + C23621 + C23622) * C121) *
                          C50744 +
                      ((C22924 + C22923 + C22922) * C50706 +
                       (C22921 + C22920 + C22919) * C121) *
                          C31984) *
                         C1544) *
                        C50642) *
                       C50830 +
                   (((((C32339 + C32340 + C32341) * C121 +
                       (C32342 + C32343 + C32344) * C50706) *
                          C31984 +
                      ((C32345 + C32346 + C32347) * C121 +
                       (C32348 + C32349 + C32350) * C50706) *
                          C50744) *
                         C50670 -
                     (((C32344 + C32343 + C32342) * C50706 +
                       (C32341 + C32340 + C32339) * C121) *
                          C50744 +
                      ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                        C50863 * C145 + C22719 * C134 + C50879 * C144) *
                           C50706 +
                       (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                        C50863 * C131 + C22719 * C123 + C50879 * C130) *
                           C121) *
                          C31984) *
                         C1544) *
                        C50838 +
                    ((((C22931 + C22932 + C22933) * C121 +
                       (C22934 + C22935 + C22936) * C50706) *
                          C31984 +
                      ((C23623 + C23624 + C23625) * C121 +
                       (C23626 + C23627 + C23628) * C50706) *
                          C50744) *
                         C1544 -
                     (((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                        C50863 * C1096 + C22719 * C1089 + C50879 * C1097) *
                           C50706 +
                       (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                        C50863 * C1092 + C22719 * C1085 + C50879 * C1093) *
                           C121) *
                          C50744 +
                      ((C23628 + C23627 + C23626) * C50706 +
                       (C23625 + C23624 + C23623) * C121) *
                          C31984) *
                         C50670) *
                        C50642) *
                       C50577)) /
                 (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50884 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50885 +
                    (((C32338 + C32337 + C32336) * C121 +
                      (C32335 + C32334 + C32333) * C50706) *
                         C31984 +
                     ((C34133 + C34134 + C34135) * C121 +
                      (C34136 + C34137 + C34138) * C50706) *
                         C50744) *
                        C1960) *
                       C50838 +
                   ((((C23622 + C23621 + C23620) * C121 +
                      (C23619 + C23618 + C23617) * C50706) *
                         C31984 +
                     ((C24049 + C24050 + C24051) * C121 +
                      (C24052 + C24053 + C24054) * C50706) *
                         C50744) *
                        C50885 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C50884 -
                    (((C22721 * C4430 + C22716 * C4436 + C22720 * C4431 +
                       C50863 * C4437 + C22719 * C4432 + C50879 * C4438) *
                          C50706 +
                      (C22721 * C4427 + C22716 * C4433 + C22720 * C4428 +
                       C50863 * C4434 + C22719 * C4429 + C50879 * C4435) *
                          C121) *
                         C50744 +
                     ((C24054 + C24053 + C24052) * C50706 +
                      (C24051 + C24050 + C24049) * C121) *
                         C31984) *
                        C1960) *
                       C50642) *
                  C50571) /
                 (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C1544 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50670) *
                       C248 +
                   ((((C23622 + C23621 + C23620) * C121 +
                      (C23619 + C23618 + C23617) * C50706) *
                         C31984 +
                     ((C24049 + C24050 + C24051) * C121 +
                      (C24052 + C24053 + C24054) * C50706) *
                         C50744) *
                        C50670 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C1544) *
                       C249 +
                   ((((C22930 + C22929 + C22928) * C121 +
                      (C22927 + C22926 + C22925) * C50706) *
                         C31984 +
                     ((C24553 + C24554 + C24555) * C121 +
                      (C24556 + C24557 + C24558) * C50706) *
                         C50744) *
                        C1544 -
                    (((C22721 * C3494 + C22716 * C3500 + C22720 * C3495 +
                       C50863 * C3501 + C22719 * C3496 + C50879 * C3502) *
                          C50706 +
                      (C22721 * C3491 + C22716 * C3497 + C22720 * C3492 +
                       C50863 * C3498 + C22719 * C3493 + C50879 * C3499) *
                          C121) *
                         C50744 +
                     ((C24558 + C24557 + C24556) * C50706 +
                      (C24555 + C24554 + C24553) * C121) *
                         C31984) *
                        C50670) *
                       C250) *
                  C50571) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C1544 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50670) *
                       C50590 * C895 +
                   ((((C32339 + C32340 + C32341) * C121 +
                      (C32342 + C32343 + C32344) * C50706) *
                         C31984 +
                     ((C32345 + C32346 + C32347) * C121 +
                      (C32348 + C32349 + C32350) * C50706) *
                         C50744) *
                        C50670 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C1544) *
                       C50590 * C896 +
                   ((((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                       C50863 * C132 + C22721 * C126 + C22716 * C138) *
                          C121 +
                      (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                       C50863 * C146 + C22721 * C137 + C22716 * C147) *
                          C50706) *
                         C31984 +
                     ((C32655 + C32656 + C32657) * C121 +
                      (C32658 + C32659 + C32660) * C50706) *
                         C50744) *
                        C1544 -
                    (((C22721 * C422 + C22716 * C433 + C22720 * C419 +
                       C50863 * C431 + C22719 * C418 + C50879 * C430) *
                          C50706 +
                      (C22721 * C403 + C22716 * C423 + C22720 * C401 +
                       C50863 * C415 + C22719 * C400 + C50879 * C414) *
                          C121) *
                         C50744 +
                     ((C32660 + C32659 + C32658) * C50706 +
                      (C32657 + C32656 + C32655) * C121) *
                         C31984) *
                        C50670) *
                       C50590 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                      C50863 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                      C50863 * C144 + C22721 * C135 + C22716 * C145) *
                         C50706) *
                        C31984 +
                    ((C32327 + C32328 + C32329) * C121 +
                     (C32330 + C32331 + C32332) * C50706) *
                        C50744) *
                       C1710 -
                   (((C32333 + C32334 + C32335) * C50706 +
                     (C32336 + C32337 + C32338) * C121) *
                        C50744 +
                    ((C32332 + C32331 + C32330) * C50706 +
                     (C32329 + C32328 + C32327) * C121) *
                        C31984) *
                       C1711 +
                   (((C32338 + C32337 + C32336) * C121 +
                     (C32335 + C32334 + C32333) * C50706) *
                        C31984 +
                    ((C34133 + C34134 + C34135) * C121 +
                     (C34136 + C34137 + C34138) * C50706) *
                        C50744) *
                       C1712 -
                   (((C22721 * C7162 + C22716 * C7168 + C22720 * C7163 +
                      C50863 * C7169 + C22719 * C7164 + C50879 * C7170) *
                         C50706 +
                     (C22721 * C7159 + C22716 * C7165 + C22720 * C7160 +
                      C50863 * C7166 + C22719 * C7161 + C50879 * C7167) *
                         C121) *
                        C50744 +
                    ((C34138 + C34137 + C34136) * C50706 +
                     (C34135 + C34134 + C34133) * C121) *
                        C31984) *
                       C1713) *
                  C50590 * C50571) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C50884 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50885 +
                    (((C32338 + C32337 + C32336) * C121 +
                      (C32335 + C32334 + C32333) * C50706) *
                         C31984 +
                     ((C34133 + C34134 + C34135) * C121 +
                      (C34136 + C34137 + C34138) * C50706) *
                         C50744) *
                        C1960) *
                       C50590 * C50830 +
                   ((((C32339 + C32340 + C32341) * C121 +
                      (C32342 + C32343 + C32344) * C50706) *
                         C31984 +
                     ((C32345 + C32346 + C32347) * C121 +
                      (C32348 + C32349 + C32350) * C50706) *
                         C50744) *
                        C50885 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C50884 -
                    (((C22721 * C1718 + C22716 * C1726 + C22720 * C1719 +
                       C50863 * C1727 + C22719 * C1720 + C50879 * C1728) *
                          C50706 +
                      (C22721 * C1714 + C22716 * C1722 + C22720 * C1715 +
                       C50863 * C1723 + C22719 * C1716 + C50879 * C1724) *
                          C121) *
                         C50744 +
                     ((C32350 + C32349 + C32348) * C50706 +
                      (C32347 + C32346 + C32345) * C121) *
                         C31984) *
                        C1960) *
                       C50590 * C50577)) /
                 (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C1544 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50670) *
                       C50590 * C895 +
                   ((((C32339 + C32340 + C32341) * C121 +
                      (C32342 + C32343 + C32344) * C50706) *
                         C31984 +
                     ((C32345 + C32346 + C32347) * C121 +
                      (C32348 + C32349 + C32350) * C50706) *
                         C50744) *
                        C50670 -
                    (((C32344 + C32343 + C32342) * C50706 +
                      (C32341 + C32340 + C32339) * C121) *
                         C50744 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50863 * C145 + C22719 * C134 + C50879 * C144) *
                          C50706 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50863 * C131 + C22719 * C123 + C50879 * C130) *
                          C121) *
                         C31984) *
                        C1544) *
                       C50590 * C896 +
                   ((((C22719 * C124 + C50879 * C131 + C22720 * C125 +
                       C50863 * C132 + C22721 * C126 + C22716 * C138) *
                          C121 +
                      (C22719 * C135 + C50879 * C145 + C22720 * C136 +
                       C50863 * C146 + C22721 * C137 + C22716 * C147) *
                          C50706) *
                         C31984 +
                     ((C32655 + C32656 + C32657) * C121 +
                      (C32658 + C32659 + C32660) * C50706) *
                         C50744) *
                        C1544 -
                    (((C22721 * C422 + C22716 * C433 + C22720 * C419 +
                       C50863 * C431 + C22719 * C418 + C50879 * C430) *
                          C50706 +
                      (C22721 * C403 + C22716 * C423 + C22720 * C401 +
                       C50863 * C415 + C22719 * C400 + C50879 * C414) *
                          C121) *
                         C50744 +
                     ((C32660 + C32659 + C32658) * C50706 +
                      (C32657 + C32656 + C32655) * C121) *
                         C31984) *
                        C50670) *
                       C50590 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50879 * C129 + C22720 * C123 +
                       C50863 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50879 * C143 + C22720 * C134 +
                       C50863 * C144 + C22721 * C135 + C22716 * C145) *
                          C50706) *
                         C31984 +
                     ((C32327 + C32328 + C32329) * C121 +
                      (C32330 + C32331 + C32332) * C50706) *
                         C50744) *
                        C1544 -
                    (((C32333 + C32334 + C32335) * C50706 +
                      (C32336 + C32337 + C32338) * C121) *
                         C50744 +
                     ((C32332 + C32331 + C32330) * C50706 +
                      (C32329 + C32328 + C32327) * C121) *
                         C31984) *
                        C50670) *
                       C248 +
                   ((((C23622 + C23621 + C23620) * C121 +
                      (C23619 + C23618 + C23617) * C50706) *
                         C31984 +
                     ((C24049 + C24050 + C24051) * C121 +
                      (C24052 + C24053 + C24054) * C50706) *
                         C50744) *
                        C50670 -
                    (((C23617 + C23618 + C23619) * C50706 +
                      (C23620 + C23621 + C23622) * C121) *
                         C50744 +
                     ((C22924 + C22923 + C22922) * C50706 +
                      (C22921 + C22920 + C22919) * C121) *
                         C31984) *
                        C1544) *
                       C249 +
                   ((((C22930 + C22929 + C22928) * C121 +
                      (C22927 + C22926 + C22925) * C50706) *
                         C31984 +
                     ((C24553 + C24554 + C24555) * C121 +
                      (C24556 + C24557 + C24558) * C50706) *
                         C50744) *
                        C1544 -
                    (((C22721 * C3494 + C22716 * C3500 + C22720 * C3495 +
                       C50863 * C3501 + C22719 * C3496 + C50879 * C3502) *
                          C50706 +
                      (C22721 * C3491 + C22716 * C3497 + C22720 * C3492 +
                       C50863 * C3498 + C22719 * C3493 + C50879 * C3499) *
                          C121) *
                         C50744 +
                     ((C24558 + C24557 + C24556) * C50706 +
                      (C24555 + C24554 + C24553) * C121) *
                         C31984) *
                        C50670) *
                       C250) *
                  C50571) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50606 * C50838 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50606 * C50642) *
              C50880 +
          ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
             (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                C31984 +
            (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50606 * C50838) *
              C50881 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C2165 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50849 +
             (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
                C31984 +
            ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
             (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
                C50744) *
               C50606 * C50838 -
           (((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
              C25532 * C1443) *
                 C50720 +
             (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
              C25532 * C1439) *
                 C2166 +
             (C29056 + C29055) * C50849 + (C29054 + C29053) * C2165) *
                C50744 +
            ((C26080 + C26079) * C50720 + (C26078 + C26077) * C2166 +
             (C26076 + C26075) * C50849 + (C26074 + C26073) * C2165) *
                C31984) *
               C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C2165 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C50849 +
              (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                 C31984 +
             ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
              C29521 * C2166 + C29522 * C50720) *
                 C50744) *
                C50839 -
            ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
              (C28837 + C28838) * C2165) *
                 C50744 +
             (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
              (C28832 + C28831) * C2165) *
                 C31984) *
                C50670) *
               C50838 +
           (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
              C30710 * C50720) *
                 C31984 +
             (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
              (C26895 + C26896) * C50720) *
                 C50744) *
                C50670 -
            ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
              C29524 * C2165) *
                 C50744 +
             ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
              (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                 C31984) *
                C50839) *
               C50642) *
              C251 +
          (((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
              C29525 * C2166 + C29526 * C50720) *
                 C31984 +
             ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
              (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                 C50744) *
                C50670 -
            ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
              (C28840 + C28839) * C2165) *
                 C50744 +
             ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
              (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C50849 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C2165) *
                 C31984) *
                C50839) *
               C50838 +
           ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
              (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                 C31984 +
             (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
              (C26467 + C26468) * C50720) *
                 C50744) *
                C50839 -
            (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
               C25532 * C3501) *
                  C50720 +
              (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
               C25532 * C3498) *
                  C2166 +
              (C28850 + C28849) * C50849 + (C28848 + C28847) * C2165) *
                 C50744 +
             ((C26468 + C26467) * C50720 + (C26466 + C26465) * C2166 +
              C29527 * C50849 + C29528 * C2165) *
                 C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50606 * C248 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50606 * C249 +
           ((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
             (C25746 + C25745) * C50720) *
                C31984 +
            (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
             (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                C31984 +
            (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C249 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50606 * C248 -
           (((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C50720 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C2166 +
             (C26468 + C26467) * C50849 + (C26466 + C26465) * C2165) *
                C50744 +
            ((C25760 + C25759) * C50720 + (C25758 + C25757) * C2166 +
             C25763 * C50849 + C25764 * C2165) *
                C31984) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C2165 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50849 +
            (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
               C31984 +
           ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
            C29521 * C2166 + C29522 * C50720) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
            (C28840 + C28839) * C2165) *
               C50744 +
           ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50849 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C2165) *
               C31984) *
              C50606 * C50590 * C114 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C2165 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50849 +
            (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
               C31984 +
           ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
            (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C25538 * C788 + C50545 * C794 + C25537 * C787 + C25532 * C793) *
                C50720 +
            (C25538 * C779 + C50545 * C789 + C25537 * C778 + C25532 * C783) *
                C2166 +
            (C25538 * C421 + C50545 * C432 + C25537 * C404 + C25532 * C424) *
                C50849 +
            (C25538 * C402 + C50545 * C420 + C25537 * C394 + C25532 * C408) *
                C2165) *
               C50744 +
           ((C25538 * C280 + C50545 * C291 + C25537 * C263 + C25532 * C283) *
                C50720 +
            (C25538 * C261 + C50545 * C279 + C25537 * C253 + C25532 * C267) *
                C2166 +
            (C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
                C50849 +
            (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
                C2165) *
               C31984) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C391 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C392 +
           (((C28838 + C28837) * C2165 + (C28836 + C28835) * C50849 +
             C30049 * C2166 + C30050 * C50720) *
                C31984 +
            ((C31237 + C31238) * C2165 + (C31239 + C31240) * C50849 +
             (C30059 + C30060) * C2166 + (C30061 + C30062) * C50720) *
                C50744) *
               C393) *
              C50590 * C251 +
          ((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
             C29525 * C2166 + C29526 * C50720) *
                C31984 +
            ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
             (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                C50744) *
               C392 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C391 -
           (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
              C25532 * C4437) *
                 C50720 +
             (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
              C25532 * C4434) *
                 C2166 +
             (C25538 * C1719 + C50545 * C1727 + C25537 * C1720 +
              C25532 * C1728) *
                 C50849 +
             (C25538 * C1715 + C50545 * C1723 + C25537 * C1716 +
              C25532 * C1724) *
                 C2165) *
                C50744 +
            ((C28850 + C28849) * C50720 + (C28848 + C28847) * C2166 +
             (C28846 + C28845) * C50849 + (C28844 + C28843) * C2165) *
                C31984) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50839 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50670) *
              C50590 * C50880 +
          ((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
             C29525 * C2166 + C29526 * C50720) *
                C31984 +
            ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
             (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                C50744) *
               C50670 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50839) *
              C50590 * C50881 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C2165 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50849 +
             (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
                C31984 +
            ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
             (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
                C50744) *
               C50839 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50720 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C2166 +
             (C25538 * C419 + C50545 * C431 + C25537 * C418 + C25532 * C430) *
                 C50849 +
             (C25538 * C401 + C50545 * C415 + C25537 * C400 + C25532 * C414) *
                 C2165) *
                C50744 +
            ((C29056 + C29055) * C50720 + (C29054 + C29053) * C2166 +
             (C29262 + C29261) * C50849 + (C29260 + C29259) * C2165) *
                C31984) *
               C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C2165 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50849 +
            (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
               C31984 +
           ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
            C29521 * C2166 + C29522 * C50720) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
            (C28840 + C28839) * C2165) *
               C50744 +
           ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
            (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50849 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C2165) *
               C31984) *
              C50606 * C50590 * C114 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C2165 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50849 +
            (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
               C31984 +
           ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
            (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C25538 * C788 + C50545 * C794 + C25537 * C787 + C25532 * C793) *
                C50720 +
            (C25538 * C779 + C50545 * C789 + C25537 * C778 + C25532 * C783) *
                C2166 +
            (C25538 * C421 + C50545 * C432 + C25537 * C404 + C25532 * C424) *
                C50849 +
            (C25538 * C402 + C50545 * C420 + C25537 * C394 + C25532 * C408) *
                C2165) *
               C50744 +
           ((C25538 * C280 + C50545 * C291 + C25537 * C263 + C25532 * C283) *
                C50720 +
            (C25538 * C261 + C50545 * C279 + C25537 * C253 + C25532 * C267) *
                C2166 +
            (C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
                C50849 +
            (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
                C2165) *
               C31984) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50606 * C248 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50606 * C249 +
           ((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
             (C25746 + C25745) * C50720) *
                C31984 +
            (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
             (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                C31984 +
            (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C249 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50606 * C248 -
           (((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C50720 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C2166 +
             (C26468 + C26467) * C50849 + (C26466 + C26465) * C2165) *
                C50744 +
            ((C25760 + C25759) * C50720 + (C25758 + C25757) * C2166 +
             C25763 * C50849 + C25764 * C2165) *
                C31984) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50606 * C50882 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50606 * C50883 +
           ((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
             (C25746 + C25745) * C50720) *
                C31984 +
            (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
             (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                C31984 +
            (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50883 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50606 * C50882 -
           (((C25538 * C4010 + C50545 * C4016 + C25537 * C4011 +
              C25532 * C4017) *
                 C50720 +
             (C25538 * C4007 + C50545 * C4013 + C25537 * C4008 +
              C25532 * C4014) *
                 C2166 +
             (C26468 + C26467) * C50849 + (C26466 + C26465) * C2165) *
                C50744 +
            ((C25760 + C25759) * C50720 + (C25758 + C25757) * C2166 +
             C25763 * C50849 + C25764 * C2165) *
                C31984) *
               C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50839 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50670) *
              C50882 +
          (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
             C30710 * C50720) *
                C31984 +
            (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50670 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50839) *
              C50883 +
          (((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
             (C25746 + C25745) * C50720) *
                C31984 +
            (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C50839 -
           (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
              C25532 * C9128) *
                 C50720 +
             (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
              C25532 * C9126) *
                 C2166 +
             (C26896 + C26895) * C50849 + (C26894 + C26893) * C2165) *
                C50744 +
            ((C27396 + C27395) * C50720 + (C27394 + C27393) * C2166 +
             C27383 * C50849 + C27384 * C2165) *
                C31984) *
               C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C2165 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50849 +
            (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
               C31984 +
           ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
            C29521 * C2166 + C29522 * C50720) *
               C50744) *
              C50606 * C964 -
          ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
            C29524 * C2165) *
               C50744 +
           ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
            (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
               C31984) *
              C50606 * C965 +
          ((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
            (C25746 + C25745) * C50720) *
               C31984 +
           (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
            (C27395 + C27396) * C50720) *
               C50744) *
              C50606 * C966 -
          (((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C50720 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C2166 +
            (C27396 + C27395) * C50849 + (C27394 + C27393) * C2165) *
               C50744 +
           ((C26726 + C26725) * C50720 + (C26724 + C26723) * C2166 +
            C26713 * C50849 + C26714 * C2165) *
               C31984) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50606 * C893 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50606 * C50642) *
              C895 +
          ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
             (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                C31984 +
            (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50606 * C893) *
              C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C2165 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50849 +
             (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
                C31984 +
            ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
             (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
                C50744) *
               C50606 * C893 -
           (((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
              C25532 * C1443) *
                 C50720 +
             (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
              C25532 * C1439) *
                 C2166 +
             (C29056 + C29055) * C50849 + (C29054 + C29053) * C2165) *
                C50744 +
            ((C26080 + C26079) * C50720 + (C26078 + C26077) * C2166 +
             (C26076 + C26075) * C50849 + (C26074 + C26073) * C2165) *
                C31984) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C391 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C392 +
           (((C28838 + C28837) * C2165 + (C28836 + C28835) * C50849 +
             C30049 * C2166 + C30050 * C50720) *
                C31984 +
            ((C31237 + C31238) * C2165 + (C31239 + C31240) * C50849 +
             (C30059 + C30060) * C2166 + (C30061 + C30062) * C50720) *
                C50744) *
               C393) *
              C893 +
          (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
             C30710 * C50720) *
                C31984 +
            (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C392 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C391 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50720 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C2166 +
             (C30062 + C30061) * C50849 + (C30060 + C30059) * C2165) *
                C50744 +
            ((C26896 + C26895) * C50720 + (C26894 + C26893) * C2166 +
             C30047 * C50849 + C30048 * C2165) *
                C31984) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C2165 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C50849 +
              (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                 C31984 +
             ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
              C29521 * C2166 + C29522 * C50720) *
                 C50744) *
                C50839 -
            ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
              (C28837 + C28838) * C2165) *
                 C50744 +
             (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
              (C28832 + C28831) * C2165) *
                 C31984) *
                C50670) *
               C893 +
           (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
              C30710 * C50720) *
                 C31984 +
             (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
              (C26895 + C26896) * C50720) *
                 C50744) *
                C50670 -
            ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
              C29524 * C2165) *
                 C50744 +
             ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
              (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                 C31984) *
                C50839) *
               C50642) *
              C50830 +
          (((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
              C29525 * C2166 + C29526 * C50720) *
                 C31984 +
             ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
              (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                 C50744) *
                C50670 -
            ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
              (C28840 + C28839) * C2165) *
                 C50744 +
             ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
              (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C50849 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C2165) *
                 C31984) *
                C50839) *
               C893 +
           ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
              (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                 C31984 +
             (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
              (C26467 + C26468) * C50720) *
                 C50744) *
                C50839 -
            (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
               C25532 * C3501) *
                  C50720 +
              (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
               C25532 * C3498) *
                  C2166 +
              (C28850 + C28849) * C50849 + (C28848 + C28847) * C2165) *
                 C50744 +
             ((C26468 + C26467) * C50720 + (C26466 + C26465) * C2166 +
              C29527 * C50849 + C29528 * C2165) *
                 C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50606 * C893 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50606 * C50642) *
              C895 +
          ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
             (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                C31984 +
            (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
             (C26467 + C26468) * C50720) *
                C50744) *
               C50606 * C50642 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50606 * C893) *
              C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C2165 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50849 +
             (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
                C31984 +
            ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
             (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
                C50744) *
               C50606 * C893 -
           (((C25538 * C1434 + C50545 * C1442 + C25537 * C1435 +
              C25532 * C1443) *
                 C50720 +
             (C25538 * C1430 + C50545 * C1438 + C25537 * C1431 +
              C25532 * C1439) *
                 C2166 +
             (C29056 + C29055) * C50849 + (C29054 + C29053) * C2165) *
                C50744 +
            ((C26080 + C26079) * C50720 + (C26078 + C26077) * C2166 +
             (C26076 + C26075) * C50849 + (C26074 + C26073) * C2165) *
                C31984) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C2165 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50849 +
            (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
               C31984 +
           ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
            C29521 * C2166 + C29522 * C50720) *
               C50744) *
              C50606 * C964 -
          ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
            C29524 * C2165) *
               C50744 +
           ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
            (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
               C31984) *
              C50606 * C965 +
          ((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
            (C25746 + C25745) * C50720) *
               C31984 +
           (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
            (C27395 + C27396) * C50720) *
               C50744) *
              C50606 * C966 -
          (((C25538 * C9641 + C50545 * C9645 + C25537 * C9642 +
             C25532 * C9646) *
                C50720 +
            (C25538 * C9639 + C50545 * C9643 + C25537 * C9640 +
             C25532 * C9644) *
                C2166 +
            (C27396 + C27395) * C50849 + (C27394 + C27393) * C2165) *
               C50744 +
           ((C26726 + C26725) * C50720 + (C26724 + C26723) * C2166 +
            C26713 * C50849 + C26714 * C2165) *
               C31984) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C2165 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C50849 +
              (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                 C31984 +
             ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
              C29521 * C2166 + C29522 * C50720) *
                 C50744) *
                C1544 -
            ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
              (C28837 + C28838) * C2165) *
                 C50744 +
             (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
              (C28832 + C28831) * C2165) *
                 C31984) *
                C50670) *
               C50838 +
           (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
              C30710 * C50720) *
                 C31984 +
             (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
              (C26895 + C26896) * C50720) *
                 C50744) *
                C50670 -
            ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
              C29524 * C2165) *
                 C50744 +
             ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
              (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                 C31984) *
                C1544) *
               C50642) *
              C50830 +
          (((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
              C29525 * C2166 + C29526 * C50720) *
                 C31984 +
             ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
              (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                 C50744) *
                C50670 -
            ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
              (C28840 + C28839) * C2165) *
                 C50744 +
             ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
              (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C50849 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C2165) *
                 C31984) *
                C1544) *
               C50838 +
           ((((C25749 + C25750) * C2165 + (C25751 + C25752) * C50849 +
              (C25753 + C25754) * C2166 + (C25755 + C25756) * C50720) *
                 C31984 +
             (C29525 * C2165 + C29526 * C50849 + (C26465 + C26466) * C2166 +
              (C26467 + C26468) * C50720) *
                 C50744) *
                C1544 -
            (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
               C25532 * C3501) *
                  C50720 +
              (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
               C25532 * C3498) *
                  C2166 +
              (C28850 + C28849) * C50849 + (C28848 + C28847) * C2165) *
                 C50744 +
             ((C26468 + C26467) * C50720 + (C26466 + C26465) * C2166 +
              C29527 * C50849 + C29528 * C2165) *
                 C31984) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50884 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50885 +
           (((C28838 + C28837) * C2165 + (C28836 + C28835) * C50849 +
             C30049 * C2166 + C30050 * C50720) *
                C31984 +
            ((C31237 + C31238) * C2165 + (C31239 + C31240) * C50849 +
             (C30059 + C30060) * C2166 + (C30061 + C30062) * C50720) *
                C50744) *
               C1960) *
              C50838 +
          (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
             C30710 * C50720) *
                C31984 +
            (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50885 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C50884 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50720 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C2166 +
             (C30062 + C30061) * C50849 + (C30060 + C30059) * C2165) *
                C50744 +
            ((C26896 + C26895) * C50720 + (C26894 + C26893) * C2166 +
             C30047 * C50849 + C30048 * C2165) *
                C31984) *
               C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50670) *
              C248 +
          (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
             C30710 * C50720) *
                C31984 +
            (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50670 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C1544) *
              C249 +
          (((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
             (C25746 + C25745) * C50720) *
                C31984 +
            (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
              C25532 * C9128) *
                 C50720 +
             (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
              C25532 * C9126) *
                 C2166 +
             (C26896 + C26895) * C50849 + (C26894 + C26893) * C2165) *
                C50744 +
            ((C27396 + C27395) * C50720 + (C27394 + C27393) * C2166 +
             C27383 * C50849 + C27384 * C2165) *
                C31984) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50670) *
              C50590 * C895 +
          ((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
             C29525 * C2166 + C29526 * C50720) *
                C31984 +
            ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
             (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                C50744) *
               C50670 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C1544) *
              C50590 * C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C2165 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50849 +
             (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
                C31984 +
            ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
             (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50720 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C2166 +
             (C25538 * C419 + C50545 * C431 + C25537 * C418 + C25532 * C430) *
                 C50849 +
             (C25538 * C401 + C50545 * C415 + C25537 * C400 + C25532 * C414) *
                 C2165) *
                C50744 +
            ((C29056 + C29055) * C50720 + (C29054 + C29053) * C2166 +
             (C29262 + C29261) * C50849 + (C29260 + C29259) * C2165) *
                C31984) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C2165 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50849 +
            (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
               C31984 +
           ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
            C29521 * C2166 + C29522 * C50720) *
               C50744) *
              C1710 -
          ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
            (C28837 + C28838) * C2165) *
               C50744 +
           (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
            (C28832 + C28831) * C2165) *
               C31984) *
              C1711 +
          (((C28838 + C28837) * C2165 + (C28836 + C28835) * C50849 +
            C30049 * C2166 + C30050 * C50720) *
               C31984 +
           ((C31237 + C31238) * C2165 + (C31239 + C31240) * C50849 +
            (C30059 + C30060) * C2166 + (C30061 + C30062) * C50720) *
               C50744) *
              C1712 -
          (((C25538 * C16623 + C50545 * C16625 + C25537 * C14733 +
             C25532 * C14736) *
                C50720 +
            (C25538 * C16622 + C50545 * C16624 + C25537 * C14730 +
             C25532 * C14734) *
                C2166 +
            (C25538 * C7163 + C50545 * C7169 + C25537 * C7164 +
             C25532 * C7170) *
                C50849 +
            (C25538 * C7160 + C50545 * C7166 + C25537 * C7161 +
             C25532 * C7167) *
                C2165) *
               C50744 +
           ((C30062 + C30061) * C50720 + (C30060 + C30059) * C2166 +
            (C31240 + C31239) * C50849 + (C31238 + C31237) * C2165) *
               C31984) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C50884 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50885 +
           (((C28838 + C28837) * C2165 + (C28836 + C28835) * C50849 +
             C30049 * C2166 + C30050 * C50720) *
                C31984 +
            ((C31237 + C31238) * C2165 + (C31239 + C31240) * C50849 +
             (C30059 + C30060) * C2166 + (C30061 + C30062) * C50720) *
                C50744) *
               C1960) *
              C50590 * C50830 +
          ((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
             C29525 * C2166 + C29526 * C50720) *
                C31984 +
            ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
             (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                C50744) *
               C50885 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C50884 -
           (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
              C25532 * C4437) *
                 C50720 +
             (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
              C25532 * C4434) *
                 C2166 +
             (C25538 * C1719 + C50545 * C1727 + C25537 * C1720 +
              C25532 * C1728) *
                 C50849 +
             (C25538 * C1715 + C50545 * C1723 + C25537 * C1716 +
              C25532 * C1724) *
                 C2165) *
                C50744 +
            ((C28850 + C28849) * C50720 + (C28848 + C28847) * C2166 +
             (C28846 + C28845) * C50849 + (C28844 + C28843) * C2165) *
                C31984) *
               C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50670) *
              C50590 * C895 +
          ((((C28839 + C28840) * C2165 + (C28841 + C28842) * C50849 +
             C29525 * C2166 + C29526 * C50720) *
                C31984 +
            ((C28843 + C28844) * C2165 + (C28845 + C28846) * C50849 +
             (C28847 + C28848) * C2166 + (C28849 + C28850) * C50720) *
                C50744) *
               C50670 -
           ((C29527 * C50720 + C29528 * C2166 + (C28842 + C28841) * C50849 +
             (C28840 + C28839) * C2165) *
                C50744 +
            ((C25752 + C25751) * C50720 + (C25750 + C25749) * C2166 +
             (C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50849 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C2165) *
                C31984) *
               C1544) *
              C50590 * C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C2165 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50849 +
             (C26073 + C26074) * C2166 + (C26075 + C26076) * C50720) *
                C31984 +
            ((C29259 + C29260) * C2165 + (C29261 + C29262) * C50849 +
             (C29053 + C29054) * C2166 + (C29055 + C29056) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50720 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C2166 +
             (C25538 * C419 + C50545 * C431 + C25537 * C418 + C25532 * C430) *
                 C50849 +
             (C25538 * C401 + C50545 * C415 + C25537 * C400 + C25532 * C414) *
                 C2165) *
                C50744 +
            ((C29056 + C29055) * C50720 + (C29054 + C29053) * C2166 +
             (C29262 + C29261) * C50849 + (C29260 + C29259) * C2165) *
                C31984) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C2165 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50849 +
             (C25737 + C25738) * C2166 + (C25739 + C25740) * C50720) *
                C31984 +
            ((C28831 + C28832) * C2165 + (C28833 + C28834) * C50849 +
             C29521 * C2166 + C29522 * C50720) *
                C50744) *
               C1544 -
           ((C30047 * C50720 + C30048 * C2166 + (C28835 + C28836) * C50849 +
             (C28837 + C28838) * C2165) *
                C50744 +
            (C29523 * C50720 + C29524 * C2166 + (C28834 + C28833) * C50849 +
             (C28832 + C28831) * C2165) *
                C31984) *
               C50670) *
              C248 +
          (((C29521 * C2165 + C29522 * C50849 + C30709 * C2166 +
             C30710 * C50720) *
                C31984 +
            (C30049 * C2165 + C30050 * C50849 + (C26893 + C26894) * C2166 +
             (C26895 + C26896) * C50720) *
                C50744) *
               C50670 -
           ((C27383 * C50720 + C27384 * C2166 + C29523 * C50849 +
             C29524 * C2165) *
                C50744 +
            ((C25744 + C25743) * C50720 + (C25742 + C25741) * C2166 +
             (C25740 + C25739) * C50849 + (C25738 + C25737) * C2165) *
                C31984) *
               C1544) *
              C249 +
          (((C25761 * C2165 + C25762 * C50849 + (C25748 + C25747) * C2166 +
             (C25746 + C25745) * C50720) *
                C31984 +
            (C30709 * C2165 + C30710 * C50849 + (C27393 + C27394) * C2166 +
             (C27395 + C27396) * C50720) *
                C50744) *
               C1544 -
           (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
              C25532 * C9128) *
                 C50720 +
             (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
              C25532 * C9126) *
                 C2166 +
             (C26896 + C26895) * C50849 + (C26894 + C26893) * C2165) *
                C50744 +
            ((C27396 + C27395) * C50720 + (C27394 + C27393) * C2166 +
             C27383 * C50849 + C27384 * C2165) *
                C31984) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50606 * C50838 -
           ((C30047 * C50706 + C30048 * C121) * C38216 +
            (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50606 * C50642) *
              C50880 +
          ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
            (C29525 * C121 + C29526 * C50706) * C50878 +
            ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
               C50606 * C50642 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50606 * C50838) *
              C50881 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C121 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50706) *
                C50887 +
            ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
            ((C25537 * C400 + C25532 * C414 + C25538 * C401 + C50545 * C415) *
                 C121 +
             (C25537 * C418 + C25532 * C430 + C25538 * C419 + C50545 * C431) *
                 C50706) *
                C38216) *
               C50606 * C50838 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50706 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C121) *
                C38216 +
            ((C29056 + C29055) * C50706 + (C29054 + C29053) * C121) * C50878 +
            ((C26076 + C26075) * C50706 + (C26074 + C26073) * C121) * C50887) *
               C50606 * C50642) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C121 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C50706) *
                 C50887 +
             ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
             C38530 * C38216) *
                C50839 -
            (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
             ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
             ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
                C50670) *
               C50838 +
           (((C29521 * C121 + C29522 * C50706) * C50887 +
             (C30049 * C121 + C30050 * C50706) * C50878 +
             ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
                C50670 -
            ((C30047 * C50706 + C30048 * C121) * C38216 +
             (C29523 * C50706 + C29524 * C121) * C50878 +
             ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
                C50839) *
               C50642) *
              C251 +
          (((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
             ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
             ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
                C50670 -
            (C38531 * C38216 +
             ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
             ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C50706 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C121) *
                 C50887) *
                C50839) *
               C50838 +
           ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
             (C29525 * C121 + C29526 * C50706) * C50878 +
             ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
                C50839 -
            (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
               C25532 * C4437) *
                  C50706 +
              (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
               C25532 * C4434) *
                  C121) *
                 C38216 +
             ((C28850 + C28849) * C50706 + (C28848 + C28847) * C121) * C50878 +
             (C29527 * C50706 + C29528 * C121) * C50887) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            ((C28838 + C28837) * C121 + (C28836 + C28835) * C50706) * C38216) *
               C50606 * C248 -
           ((C30047 * C50706 + C30048 * C121) * C38216 +
            (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50606 * C249 +
           ((C25761 * C121 + C25762 * C50706) * C50887 +
            (C30709 * C121 + C30710 * C50706) * C50878 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
               C50606 * C250) *
              C251 +
          ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
            (C29525 * C121 + C29526 * C50706) * C50878 +
            ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
               C50606 * C249 -
           (((C28846 + C28845) * C50706 + (C28844 + C28843) * C121) * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50606 * C248 -
           (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
              C25532 * C3501) *
                 C50706 +
             (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
              C25532 * C3498) *
                 C121) *
                C38216 +
            ((C26468 + C26467) * C50706 + (C26466 + C26465) * C121) * C50878 +
            (C25763 * C50706 + C25764 * C121) * C50887) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C121 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50706) *
               C50887 +
           ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
           ((C28838 + C28837) * C121 + (C28836 + C28835) * C50706) * C38216) *
              C50606 * C50590 * C113 -
          (((C28846 + C28845) * C50706 + (C28844 + C28843) * C121) * C38216 +
           ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
           ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50706 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C121) *
               C50887) *
              C50606 * C50590 * C114 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C121 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50706) *
               C50887 +
           ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
           ((C25537 * C400 + C25532 * C414 + C25538 * C401 + C50545 * C415) *
                C121 +
            (C25537 * C418 + C25532 * C430 + C25538 * C419 + C50545 * C431) *
                C50706) *
               C38216) *
              C50606 * C50590 * C115 -
          (((C25538 * C422 + C50545 * C433 + C25537 * C419 + C25532 * C431) *
                C50706 +
            (C25538 * C403 + C50545 * C423 + C25537 * C401 + C25532 * C415) *
                C121) *
               C38216 +
           ((C25538 * C421 + C50545 * C432 + C25537 * C404 + C25532 * C424) *
                C50706 +
            (C25538 * C402 + C50545 * C420 + C25537 * C394 + C25532 * C408) *
                C121) *
               C50878 +
           ((C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
                C50706 +
            (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
                C121) *
               C50887) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C391 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C392 +
           (C38530 * C50887 +
            ((C31237 + C31238) * C121 + (C31239 + C31240) * C50706) * C50878 +
            ((C25537 * C7161 + C25532 * C7167 + C25538 * C7160 +
              C50545 * C7166) *
                 C121 +
             (C25537 * C7164 + C25532 * C7170 + C25538 * C7163 +
              C50545 * C7169) *
                 C50706) *
                C38216) *
               C393) *
              C50590 * C251 +
          ((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
            ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
            ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
               C392 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C391 -
           (((C25538 * C7162 + C50545 * C7168 + C25537 * C7163 +
              C25532 * C7169) *
                 C50706 +
             (C25538 * C7159 + C50545 * C7165 + C25537 * C7160 +
              C25532 * C7166) *
                 C121) *
                C38216 +
            ((C38527 + C38526) * C50706 + (C38525 + C38524) * C121) * C50878 +
            C38531 * C50887) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50839 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50670) *
              C50590 * C50880 +
          ((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
            ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
            ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
               C50670 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50839) *
              C50590 * C50881 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C121 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50706) *
                C50887 +
            ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
            ((C38832 + C38833) * C121 + (C38834 + C38835) * C50706) * C38216) *
               C50839 -
           (((C25538 * C1718 + C50545 * C1726 + C25537 * C1719 +
              C25532 * C1727) *
                 C50706 +
             (C25538 * C1714 + C50545 * C1722 + C25537 * C1715 +
              C25532 * C1723) *
                 C121) *
                C38216 +
            ((C38835 + C38834) * C50706 + (C38833 + C38832) * C121) * C50878 +
            ((C29262 + C29261) * C50706 + (C29260 + C29259) * C121) * C50887) *
               C50670) *
              C50590 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C121 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50706) *
               C50887 +
           ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
           ((C28838 + C28837) * C121 + (C28836 + C28835) * C50706) * C38216) *
              C50606 * C50590 * C113 -
          (((C28846 + C28845) * C50706 + (C28844 + C28843) * C121) * C38216 +
           ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
           ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                C50706 +
            (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                C121) *
               C50887) *
              C50606 * C50590 * C114 +
          (((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                C121 +
            (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                C50706) *
               C50887 +
           ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
           ((C25537 * C400 + C25532 * C414 + C25538 * C401 + C50545 * C415) *
                C121 +
            (C25537 * C418 + C25532 * C430 + C25538 * C419 + C50545 * C431) *
                C50706) *
               C38216) *
              C50606 * C50590 * C115 -
          (((C25538 * C422 + C50545 * C433 + C25537 * C419 + C25532 * C431) *
                C50706 +
            (C25538 * C403 + C50545 * C423 + C25537 * C401 + C25532 * C415) *
                C121) *
               C38216 +
           ((C25538 * C421 + C50545 * C432 + C25537 * C404 + C25532 * C424) *
                C50706 +
            (C25538 * C402 + C50545 * C420 + C25537 * C394 + C25532 * C408) *
                C121) *
               C50878 +
           ((C25538 * C137 + C50545 * C147 + C25537 * C136 + C25532 * C146) *
                C50706 +
            (C25538 * C126 + C50545 * C138 + C25537 * C125 + C25532 * C132) *
                C121) *
               C50887) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            ((C28838 + C28837) * C121 + (C28836 + C28835) * C50706) * C38216) *
               C50606 * C248 -
           ((C30047 * C50706 + C30048 * C121) * C38216 +
            (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50606 * C249 +
           ((C25761 * C121 + C25762 * C50706) * C50887 +
            (C30709 * C121 + C30710 * C50706) * C50878 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
               C50606 * C250) *
              C251 +
          ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
            (C29525 * C121 + C29526 * C50706) * C50878 +
            ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
               C50606 * C249 -
           (((C28846 + C28845) * C50706 + (C28844 + C28843) * C121) * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50606 * C248 -
           (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
              C25532 * C3501) *
                 C50706 +
             (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
              C25532 * C3498) *
                 C121) *
                C38216 +
            ((C26468 + C26467) * C50706 + (C26466 + C26465) * C121) * C50878 +
            (C25763 * C50706 + C25764 * C121) * C50887) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50606 * C50882 -
           (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50606 * C50883 +
           ((C25761 * C121 + C25762 * C50706) * C50887 +
            (C30709 * C121 + C30710 * C50706) * C50878 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
               C50606 * C1199) *
              C50830 +
          ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
            (C29525 * C121 + C29526 * C50706) * C50878 +
            ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
               C50606 * C50883 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50606 * C50882 -
           (((C25538 * C3494 + C50545 * C3500 + C25537 * C3495 +
              C25532 * C3501) *
                 C50706 +
             (C25538 * C3491 + C50545 * C3497 + C25537 * C3492 +
              C25532 * C3498) *
                 C121) *
                C38216 +
            ((C26468 + C26467) * C50706 + (C26466 + C26465) * C121) * C50878 +
            (C25763 * C50706 + C25764 * C121) * C50887) *
               C50606 * C1199) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50839 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50670) *
              C50882 +
          (((C29521 * C121 + C29522 * C50706) * C50887 +
            (C30049 * C121 + C30050 * C50706) * C50878 +
            ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
               C50670 -
           (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50839) *
              C50883 +
          (((C25761 * C121 + C25762 * C50706) * C50887 +
            (C30709 * C121 + C30710 * C50706) * C50878 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
               C50839 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50706 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C121) *
                C38216 +
            ((C26896 + C26895) * C50706 + (C26894 + C26893) * C121) * C50878 +
            (C27383 * C50706 + C27384 * C121) * C50887) *
               C50670) *
              C1199) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C121 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50706) *
               C50887 +
           ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
           C38530 * C38216) *
              C50606 * C964 -
          ((C30047 * C50706 + C30048 * C121) * C38216 +
           (C29523 * C50706 + C29524 * C121) * C50878 +
           ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
              C50606 * C965 +
          ((C25761 * C121 + C25762 * C50706) * C50887 +
           (C30709 * C121 + C30710 * C50706) * C50878 +
           ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
              C50606 * C966 -
          (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
             C25532 * C9128) *
                C50706 +
            (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
             C25532 * C9126) *
                C121) *
               C38216 +
           ((C27396 + C27395) * C50706 + (C27394 + C27393) * C121) * C50878 +
           (C26713 * C50706 + C26714 * C121) * C50887) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50606 * C893 -
           ((C30047 * C50706 + C30048 * C121) * C38216 +
            (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50606 * C50642) *
              C895 +
          ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
            (C29525 * C121 + C29526 * C50706) * C50878 +
            ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
               C50606 * C50642 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50606 * C893) *
              C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C121 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50706) *
                C50887 +
            ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
            ((C38832 + C38833) * C121 + (C38834 + C38835) * C50706) * C38216) *
               C50606 * C893 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50706 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C121) *
                C38216 +
            ((C29056 + C29055) * C50706 + (C29054 + C29053) * C121) * C50878 +
            ((C26076 + C26075) * C50706 + (C26074 + C26073) * C121) * C50887) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C391 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C392 +
           (C38530 * C50887 +
            ((C31237 + C31238) * C121 + (C31239 + C31240) * C50706) * C50878 +
            ((C25537 * C7161 + C25532 * C7167 + C25538 * C7160 +
              C50545 * C7166) *
                 C121 +
             (C25537 * C7164 + C25532 * C7170 + C25538 * C7163 +
              C50545 * C7169) *
                 C50706) *
                C38216) *
               C393) *
              C893 +
          (((C29521 * C121 + C29522 * C50706) * C50887 +
            (C30049 * C121 + C30050 * C50706) * C50878 +
            ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
               C392 -
           (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C391 -
           (((C25538 * C16623 + C50545 * C16625 + C25537 * C14733 +
              C25532 * C14736) *
                 C50706 +
             (C25538 * C16622 + C50545 * C16624 + C25537 * C14730 +
              C25532 * C14734) *
                 C121) *
                C38216 +
            ((C30062 + C30061) * C50706 + (C30060 + C30059) * C121) * C50878 +
            C39422 * C50887) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C121 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C50706) *
                 C50887 +
             ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
             C38530 * C38216) *
                C50839 -
            (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
             ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
             ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
                C50670) *
               C893 +
           (((C29521 * C121 + C29522 * C50706) * C50887 +
             (C30049 * C121 + C30050 * C50706) * C50878 +
             ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
                C50670 -
            (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
             ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
                C50839) *
               C50642) *
              C50830 +
          (((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
             ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
             ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
                C50670 -
            (C38531 * C38216 +
             ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
             ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C50706 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C121) *
                 C50887) *
                C50839) *
               C893 +
           ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
             (C29525 * C121 + C29526 * C50706) * C50878 +
             ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
                C50839 -
            (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
               C25532 * C4437) *
                  C50706 +
              (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
               C25532 * C4434) *
                  C121) *
                 C38216 +
             ((C28850 + C28849) * C50706 + (C28848 + C28847) * C121) * C50878 +
             (C29527 * C50706 + C29528 * C121) * C50887) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50606 * C893 -
           ((C30047 * C50706 + C30048 * C121) * C38216 +
            (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50606 * C50642) *
              C895 +
          ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
            (C29525 * C121 + C29526 * C50706) * C50878 +
            ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
               C50606 * C50642 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50606 * C893) *
              C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C121 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50706) *
                C50887 +
            ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
            ((C38832 + C38833) * C121 + (C38834 + C38835) * C50706) * C38216) *
               C50606 * C893 -
           (((C25538 * C1087 + C50545 * C1095 + C25537 * C1088 +
              C25532 * C1096) *
                 C50706 +
             (C25538 * C1083 + C50545 * C1091 + C25537 * C1084 +
              C25532 * C1092) *
                 C121) *
                C38216 +
            ((C29056 + C29055) * C50706 + (C29054 + C29053) * C121) * C50878 +
            ((C26076 + C26075) * C50706 + (C26074 + C26073) * C121) * C50887) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C121 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50706) *
               C50887 +
           ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
           C38530 * C38216) *
              C50606 * C964 -
          ((C30047 * C50706 + C30048 * C121) * C38216 +
           (C29523 * C50706 + C29524 * C121) * C50878 +
           ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
              C50606 * C965 +
          ((C25761 * C121 + C25762 * C50706) * C50887 +
           (C30709 * C121 + C30710 * C50706) * C50878 +
           ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
              C50606 * C966 -
          (((C25538 * C9123 + C50545 * C9127 + C25537 * C9124 +
             C25532 * C9128) *
                C50706 +
            (C25538 * C9121 + C50545 * C9125 + C25537 * C9122 +
             C25532 * C9126) *
                C121) *
               C38216 +
           ((C27396 + C27395) * C50706 + (C27394 + C27393) * C121) * C50878 +
           (C26713 * C50706 + C26714 * C121) * C50887) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                  C121 +
              (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                  C50706) *
                 C50887 +
             ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
             C38530 * C38216) *
                C1544 -
            (C40315 * C38216 +
             ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
             ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
                C50670) *
               C50838 +
           (((C29521 * C121 + C29522 * C50706) * C50887 +
             (C30049 * C121 + C30050 * C50706) * C50878 +
             ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
                C50670 -
            (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
             ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
                C1544) *
               C50642) *
              C50830 +
          (((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
             ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
             ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
                C50670 -
            (C38531 * C38216 +
             ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
             ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                  C50706 +
              (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                  C121) *
                 C50887) *
                C1544) *
               C50838 +
           ((((C25749 + C25750) * C121 + (C25751 + C25752) * C50706) * C50887 +
             (C29525 * C121 + C29526 * C50706) * C50878 +
             ((C28847 + C28848) * C121 + (C28849 + C28850) * C50706) * C38216) *
                C1544 -
            (((C25538 * C4430 + C50545 * C4436 + C25537 * C4431 +
               C25532 * C4437) *
                  C50706 +
              (C25538 * C4427 + C50545 * C4433 + C25537 * C4428 +
               C25532 * C4434) *
                  C121) *
                 C38216 +
             ((C28850 + C28849) * C50706 + (C28848 + C28847) * C121) * C50878 +
             (C29527 * C50706 + C29528 * C121) * C50887) *
                C50670) *
               C50642) *
              C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50884 -
           (C40315 * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50885 +
           (C38530 * C50887 +
            ((C31237 + C31238) * C121 + (C31239 + C31240) * C50706) * C50878 +
            ((C40311 + C40312) * C121 + (C40313 + C40314) * C50706) * C38216) *
               C1960) *
              C50838 +
          (((C29521 * C121 + C29522 * C50706) * C50887 +
            (C30049 * C121 + C30050 * C50706) * C50878 +
            ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
               C50885 -
           (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C50884 -
           (((C25538 * C16623 + C50545 * C16625 + C25537 * C14733 +
              C25532 * C14736) *
                 C50706 +
             (C25538 * C16622 + C50545 * C16624 + C25537 * C14730 +
              C25532 * C14734) *
                 C121) *
                C38216 +
            ((C30062 + C30061) * C50706 + (C30060 + C30059) * C121) * C50878 +
            C39422 * C50887) *
               C1960) *
              C50642) *
         C50571) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C1544 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50670) *
              C248 +
          (((C29521 * C121 + C29522 * C50706) * C50887 +
            (C30049 * C121 + C30050 * C50706) * C50878 +
            ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
               C50670 -
           (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C1544) *
              C249 +
          (((C25761 * C121 + C25762 * C50706) * C50887 +
            (C30709 * C121 + C30710 * C50706) * C50878 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
               C1544 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50706 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C121) *
                C38216 +
            ((C26896 + C26895) * C50706 + (C26894 + C26893) * C121) * C50878 +
            (C27383 * C50706 + C27384 * C121) * C50887) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C1544 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50670) *
              C50590 * C895 +
          ((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
            ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
            ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
               C50670 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C1544) *
              C50590 * C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C121 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50706) *
                C50887 +
            ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
            ((C38832 + C38833) * C121 + (C38834 + C38835) * C50706) * C38216) *
               C1544 -
           (((C25538 * C1718 + C50545 * C1726 + C25537 * C1719 +
              C25532 * C1727) *
                 C50706 +
             (C25538 * C1714 + C50545 * C1722 + C25537 * C1715 +
              C25532 * C1723) *
                 C121) *
                C38216 +
            ((C38835 + C38834) * C50706 + (C38833 + C38832) * C121) * C50878 +
            ((C29262 + C29261) * C50706 + (C29260 + C29259) * C121) * C50887) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                C121 +
            (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                C50706) *
               C50887 +
           ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
           C38530 * C38216) *
              C1710 -
          (C40315 * C38216 +
           ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
           ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
              C1711 +
          (C38530 * C50887 +
           ((C31237 + C31238) * C121 + (C31239 + C31240) * C50706) * C50878 +
           ((C40311 + C40312) * C121 + (C40313 + C40314) * C50706) * C38216) *
              C1712 -
          (((C25538 * C17521 + C50545 * C17525 + C25537 * C17522 +
             C25532 * C17526) *
                C50706 +
            (C25538 * C17519 + C50545 * C17523 + C25537 * C17520 +
             C25532 * C17524) *
                C121) *
               C38216 +
           ((C40314 + C40313) * C50706 + (C40312 + C40311) * C121) * C50878 +
           C40315 * C50887) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C50884 -
           (C40315 * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50885 +
           (C38530 * C50887 +
            ((C31237 + C31238) * C121 + (C31239 + C31240) * C50706) * C50878 +
            ((C40311 + C40312) * C121 + (C40313 + C40314) * C50706) * C38216) *
               C1960) *
              C50590 * C50830 +
          ((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
            ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
            ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
               C50885 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C50884 -
           (((C25538 * C7162 + C50545 * C7168 + C25537 * C7163 +
              C25532 * C7169) *
                 C50706 +
             (C25538 * C7159 + C50545 * C7165 + C25537 * C7160 +
              C25532 * C7166) *
                 C121) *
                C38216 +
            ((C38527 + C38526) * C50706 + (C38525 + C38524) * C121) * C50878 +
            C38531 * C50887) *
               C1960) *
              C50590 * C50577)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C1544 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50670) *
              C50590 * C895 +
          ((((C28839 + C28840) * C121 + (C28841 + C28842) * C50706) * C50887 +
            ((C28843 + C28844) * C121 + (C28845 + C28846) * C50706) * C50878 +
            ((C38524 + C38525) * C121 + (C38526 + C38527) * C50706) * C38216) *
               C50670 -
           (C38531 * C38216 +
            ((C28842 + C28841) * C50706 + (C28840 + C28839) * C121) * C50878 +
            ((C25538 * C135 + C50545 * C145 + C25537 * C134 + C25532 * C144) *
                 C50706 +
             (C25538 * C124 + C50545 * C131 + C25537 * C123 + C25532 * C130) *
                 C121) *
                C50887) *
               C1544) *
              C50590 * C896 +
          ((((C25537 * C124 + C25532 * C131 + C25538 * C125 + C50545 * C132) *
                 C121 +
             (C25537 * C135 + C25532 * C145 + C25538 * C136 + C50545 * C146) *
                 C50706) *
                C50887 +
            ((C29259 + C29260) * C121 + (C29261 + C29262) * C50706) * C50878 +
            ((C38832 + C38833) * C121 + (C38834 + C38835) * C50706) * C38216) *
               C1544 -
           (((C25538 * C1718 + C50545 * C1726 + C25537 * C1719 +
              C25532 * C1727) *
                 C50706 +
             (C25538 * C1714 + C50545 * C1722 + C25537 * C1715 +
              C25532 * C1723) *
                 C121) *
                C38216 +
            ((C38835 + C38834) * C50706 + (C38833 + C38832) * C121) * C50878 +
            ((C29262 + C29261) * C50706 + (C29260 + C29259) * C121) * C50887) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25537 * C122 + C25532 * C129 + C25538 * C123 + C50545 * C130) *
                 C121 +
             (C25537 * C133 + C25532 * C143 + C25538 * C134 + C50545 * C144) *
                 C50706) *
                C50887 +
            ((C28831 + C28832) * C121 + (C28833 + C28834) * C50706) * C50878 +
            C38530 * C38216) *
               C1544 -
           (((C31240 + C31239) * C50706 + (C31238 + C31237) * C121) * C38216 +
            ((C28835 + C28836) * C50706 + (C28837 + C28838) * C121) * C50878 +
            ((C28834 + C28833) * C50706 + (C28832 + C28831) * C121) * C50887) *
               C50670) *
              C248 +
          (((C29521 * C121 + C29522 * C50706) * C50887 +
            (C30049 * C121 + C30050 * C50706) * C50878 +
            ((C30059 + C30060) * C121 + (C30061 + C30062) * C50706) * C38216) *
               C50670 -
           (C39422 * C38216 + (C29523 * C50706 + C29524 * C121) * C50878 +
            ((C25740 + C25739) * C50706 + (C25738 + C25737) * C121) * C50887) *
               C1544) *
              C249 +
          (((C25761 * C121 + C25762 * C50706) * C50887 +
            (C30709 * C121 + C30710 * C50706) * C50878 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50706) * C38216) *
               C1544 -
           (((C25538 * C10053 + C50545 * C10057 + C25537 * C10054 +
              C25532 * C10058) *
                 C50706 +
             (C25538 * C10051 + C50545 * C10055 + C25537 * C10052 +
              C25532 * C10056) *
                 C121) *
                C38216 +
            ((C26896 + C26895) * C50706 + (C26894 + C26893) * C121) * C50878 +
            (C27383 * C50706 + C27384 * C121) * C50887) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C50838 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50642 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50606 * C50838 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50706 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C50838 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50642 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50606 * C50838 -
           ((C49740 * C973 + C50545 * C981 + C49747 * C974 + C50821 * C982) *
                C7777 +
            (C49740 * C969 + C50545 * C977 + C49747 * C970 + C50821 * C978) *
                C7782 +
            (C8321 + C8320) * C7776 + (C8319 + C8318) * C7781 +
            (C8317 + C8316) * C7775 + (C8315 + C8314) * C7780) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50706 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50732 * C50670) *
               C50838 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50706 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50706 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50732 * C50839) *
               C50838 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50706 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C7780 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C7775 +
             (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
             C8003 * C7777) *
                C50732 * C50839 -
            ((C8694 + C8695) * C7777 + (C8696 + C8697) * C7782 +
             (C8698 + C8699) * C7776 + (C8700 + C8701) * C7781 +
             (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                 C7775 +
             (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                 C7780) *
                C50732 * C50670) *
               C50838 +
           (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
             (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
             (C49747 * C4009 + C50821 * C4015 + C49740 * C4008 +
              C50545 * C4014) *
                 C7782 +
             (C49747 * C4012 + C50821 * C4018 + C49740 * C4011 +
              C50545 * C4017) *
                 C7777) *
                C50732 * C50670 -
            ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
             (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
             (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
                C50732 * C50839) *
               C50642) *
              C251 +
          ((((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                 C7780 +
             (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                 C7775 +
             (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
             (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
                C50732 * C50670 -
            (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
             (C7991 + C7990) * C7781 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C7775 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C7780) *
                C50732 * C50839) *
               C50838 +
           (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
             (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
             (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
                C50732 * C50839 -
            ((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C7777 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C7782 +
             (C8709 + C8708) * C7776 + (C8707 + C8706) * C7781 +
             (C8705 + C8704) * C7775 + (C8703 + C8702) * C7780) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50606 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50706 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C50606 * C50590 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50706 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50732 * C50606 * C50590 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50706) *
              C50732 * C50606 * C50590 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50706 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C393) *
              C50590 * C251 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C392 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C391 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50706 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C49747 * C256 + C50821 * C270 + C49740 * C255 + C50545 * C269) *
               C7781 +
           (C49747 * C266 + C50821 * C286 + C49740 * C265 + C50545 * C285) *
               C7776 +
           (C49747 * C257 + C50821 * C271 + C49740 * C258 + C50545 * C272) *
               C7782 +
           (C49747 * C275 + C50821 * C287 + C49740 * C276 + C50545 * C288) *
               C7777) *
              C50732 * C50606 * C50590 * C113 -
          ((C49740 * C277 + C50545 * C289 + C49747 * C276 + C50821 * C288) *
               C7777 +
           (C49740 * C259 + C50545 * C273 + C49747 * C258 + C50821 * C272) *
               C7782 +
           (C49740 * C264 + C50545 * C284 + C49747 * C265 + C50821 * C285) *
               C7776 +
           (C49740 * C254 + C50545 * C268 + C49747 * C255 + C50821 * C269) *
               C7781 +
           (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
               C7775 +
           (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
               C7780) *
              C50732 * C50606 * C50590 * C114 +
          ((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
               C7780 +
           (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
               C7775 +
           (C49747 * C254 + C50821 * C268 + C49740 * C253 + C50545 * C267) *
               C7781 +
           (C49747 * C264 + C50821 * C284 + C49740 * C263 + C50545 * C283) *
               C7776 +
           (C49747 * C259 + C50821 * C273 + C49740 * C260 + C50545 * C274) *
               C7782 +
           (C49747 * C277 + C50821 * C289 + C49740 * C278 + C50545 * C290) *
               C7777) *
              C50732 * C50606 * C50590 * C115 -
          ((C49740 * C281 + C50545 * C292 + C49747 * C278 + C50821 * C290) *
               C7777 +
           (C49740 * C262 + C50545 * C282 + C49747 * C260 + C50821 * C274) *
               C7782 +
           (C49740 * C280 + C50545 * C291 + C49747 * C263 + C50821 * C283) *
               C7776 +
           (C49740 * C261 + C50545 * C279 + C49747 * C253 + C50821 * C267) *
               C7781 +
           (C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
               C7775 +
           (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
               C7780) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C248 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C249 +
           (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 +
            (C49747 * C3317 + C50821 * C3323 + C49740 * C3316 +
             C50545 * C3322) *
                C7782 +
            (C49747 * C3320 + C50821 * C3326 + C49740 * C3319 +
             C50545 * C3325) *
                C7777) *
               C50732 * C50606 * C250) *
              C251 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C249 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C248 -
           ((C49740 * C3318 + C50545 * C3324 + C49747 * C3319 +
             C50821 * C3325) *
                C7777 +
            (C49740 * C3315 + C50545 * C3321 + C49747 * C3316 +
             C50821 * C3322) *
                C7782 +
            (C8001 + C8000) * C7776 + (C7999 + C7998) * C7781 + C8004 * C7775 +
            C8005 * C7780) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C391 -
           ((C49740 * C1436 + C50545 * C1444 + C49747 * C1437 +
             C50821 * C1445) *
                C7777 +
            (C49740 * C1432 + C50545 * C1440 + C49747 * C1433 +
             C50821 * C1441) *
                C7782 +
            (C49740 * C785 + C50545 * C791 + C49747 * C784 + C50821 * C790) *
                C7776 +
            (C49740 * C776 + C50545 * C781 + C49747 * C775 + C50821 * C780) *
                C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C392 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C49747 * C1086 + C50821 * C1094 + C49740 * C1085 +
             C50545 * C1093) *
                C7781 +
            (C49747 * C1090 + C50821 * C1098 + C49740 * C1089 +
             C50545 * C1097) *
                C7776 +
            (C49747 * C3493 + C50821 * C3499 + C49740 * C3492 +
             C50545 * C3498) *
                C7782 +
            (C49747 * C3496 + C50821 * C3502 + C49740 * C3495 +
             C50545 * C3501) *
                C7777) *
               C50732 * C393) *
              C50590 * C251 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C49747 * C776 + C50821 * C781 + C49740 * C777 + C50545 * C782) *
                C7781 +
            (C49747 * C785 + C50821 * C791 + C49740 * C786 + C50545 * C792) *
                C7776 +
            (C49747 * C1432 + C50821 * C1440 + C49740 * C1431 +
             C50545 * C1439) *
                C7782 +
            (C49747 * C1436 + C50821 * C1444 + C49740 * C1435 +
             C50545 * C1443) *
                C7777) *
               C50732 * C392 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C391 -
           ((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
             C50821 * C3501) *
                C7777 +
            (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
             C50821 * C3498) *
                C7782 +
            (C49740 * C1088 + C50545 * C1096 + C49747 * C1089 +
             C50821 * C1097) *
                C7776 +
            (C49740 * C1084 + C50545 * C1092 + C49747 * C1085 +
             C50821 * C1093) *
                C7781 +
            (C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                C7775 +
            (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                C7780) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50706 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50839 -
           ((C49740 * C1436 + C50545 * C1444 + C49747 * C1437 +
             C50821 * C1445) *
                C7777 +
            (C49740 * C1432 + C50545 * C1440 + C49747 * C1433 +
             C50821 * C1441) *
                C7782 +
            (C49740 * C785 + C50545 * C791 + C49747 * C784 + C50821 * C790) *
                C7776 +
            (C49740 * C776 + C50545 * C781 + C49747 * C775 + C50821 * C780) *
                C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C49747 * C776 + C50821 * C781 + C49740 * C777 + C50545 * C782) *
                C7781 +
            (C49747 * C785 + C50821 * C791 + C49740 * C786 + C50545 * C792) *
                C7776 +
            (C49747 * C1432 + C50821 * C1440 + C49740 * C1431 +
             C50545 * C1439) *
                C7782 +
            (C49747 * C1436 + C50821 * C1444 + C49740 * C1435 +
             C50545 * C1443) *
                C7777) *
               C50732 * C50670 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50839 -
           ((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
             C50821 * C1443) *
                C7777 +
            (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
             C50821 * C1439) *
                C7782 +
            (C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                C7776 +
            (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                C7781 +
            (C49740 * C404 + C50545 * C424 + C49747 * C405 + C50821 * C425) *
                C7775 +
            (C49740 * C394 + C50545 * C408 + C49747 * C395 + C50821 * C409) *
                C7780) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C50606 * C50590 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50706 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50732 * C50606 * C50590 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50706) *
              C50732 * C50606 * C50590 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50706 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50606 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50706 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C49747 * C256 + C50821 * C270 + C49740 * C255 + C50545 * C269) *
               C7781 +
           (C49747 * C266 + C50821 * C286 + C49740 * C265 + C50545 * C285) *
               C7776 +
           (C49747 * C257 + C50821 * C271 + C49740 * C258 + C50545 * C272) *
               C7782 +
           (C49747 * C275 + C50821 * C287 + C49740 * C276 + C50545 * C288) *
               C7777) *
              C50732 * C50606 * C50590 * C113 -
          ((C49740 * C277 + C50545 * C289 + C49747 * C276 + C50821 * C288) *
               C7777 +
           (C49740 * C259 + C50545 * C273 + C49747 * C258 + C50821 * C272) *
               C7782 +
           (C49740 * C264 + C50545 * C284 + C49747 * C265 + C50821 * C285) *
               C7776 +
           (C49740 * C254 + C50545 * C268 + C49747 * C255 + C50821 * C269) *
               C7781 +
           (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
               C7775 +
           (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
               C7780) *
              C50732 * C50606 * C50590 * C114 +
          ((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
               C7780 +
           (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
               C7775 +
           (C49747 * C254 + C50821 * C268 + C49740 * C253 + C50545 * C267) *
               C7781 +
           (C49747 * C264 + C50821 * C284 + C49740 * C263 + C50545 * C283) *
               C7776 +
           (C49747 * C259 + C50821 * C273 + C49740 * C260 + C50545 * C274) *
               C7782 +
           (C49747 * C277 + C50821 * C289 + C49740 * C278 + C50545 * C290) *
               C7777) *
              C50732 * C50606 * C50590 * C115 -
          ((C49740 * C281 + C50545 * C292 + C49747 * C278 + C50821 * C290) *
               C7777 +
           (C49740 * C262 + C50545 * C282 + C49747 * C260 + C50821 * C274) *
               C7782 +
           (C49740 * C280 + C50545 * C291 + C49747 * C263 + C50821 * C283) *
               C7776 +
           (C49740 * C261 + C50545 * C279 + C49747 * C253 + C50821 * C267) *
               C7781 +
           (C49740 * C137 + C50545 * C147 + C49747 * C136 + C50821 * C146) *
               C7775 +
           (C49740 * C126 + C50545 * C138 + C49747 * C125 + C50821 * C132) *
               C7780) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C248 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C249 +
           (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 +
            (C49747 * C3317 + C50821 * C3323 + C49740 * C3316 +
             C50545 * C3322) *
                C7782 +
            (C49747 * C3320 + C50821 * C3326 + C49740 * C3319 +
             C50545 * C3325) *
                C7777) *
               C50732 * C50606 * C250) *
              C251 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C249 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C248 -
           ((C49740 * C3318 + C50545 * C3324 + C49747 * C3319 +
             C50821 * C3325) *
                C7777 +
            (C49740 * C3315 + C50545 * C3321 + C49747 * C3316 +
             C50821 * C3322) *
                C7782 +
            (C8001 + C8000) * C7776 + (C7999 + C7998) * C7781 + C8004 * C7775 +
            C8005 * C7780) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C50882 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50883 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50883 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C50882 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50706 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C50882 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50883 +
           (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50883 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C50882 -
           ((C49740 * C3318 + C50545 * C3324 + C49747 * C3319 +
             C50821 * C3325) *
                C7777 +
            (C49740 * C3315 + C50545 * C3321 + C49747 * C3316 +
             C50821 * C3322) *
                C7782 +
            (C8001 + C8000) * C7776 + (C7999 + C7998) * C7781 + C8004 * C7775 +
            C8005 * C7780) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50882 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50839) *
              C50883 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C50839 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50706 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50839 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50882 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50670 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C50839) *
              C50883 +
          ((C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C50839 -
           ((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C7777 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C7782 +
            (C9661 + C9660) * C7776 + (C9659 + C9658) * C7781 + C9648 * C7775 +
            C9649 * C7780) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C50606 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50706 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50732 * C50606 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50706) *
              C50732 * C50606 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50706 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50642 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50606 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50706 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C393) *
              C893 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C392 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C391 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50706 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C893 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50642 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C893) *
              C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50606 * C893 -
           ((C49740 * C973 + C50545 * C981 + C49747 * C974 + C50821 * C982) *
                C7777 +
            (C49740 * C969 + C50545 * C977 + C49747 * C970 + C50821 * C978) *
                C7782 +
            (C8321 + C8320) * C7776 + (C8319 + C8318) * C7781 +
            (C8317 + C8316) * C7775 + (C8315 + C8314) * C7780) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
           C8003 * C7777) *
              C50732 * C50606 * C964 -
          (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
           (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
           (C7979 + C7978) * C7780) *
              C50732 * C50606 * C965 +
          (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
           (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
           (C8974 + C8975) * C7777) *
              C50732 * C50606 * C966 -
          ((C49740 * C8955 + C50545 * C8959 + C49747 * C8956 + C50821 * C8960) *
               C7777 +
           (C49740 * C8953 + C50545 * C8957 + C49747 * C8954 + C50821 * C8958) *
               C7782 +
           (C8975 + C8974) * C7776 + (C8973 + C8972) * C7781 + C8962 * C7775 +
           C8963 * C7780) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C391 -
           ((C8694 + C8695) * C7777 + (C8696 + C8697) * C7782 +
            (C8698 + C8699) * C7776 + (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C392 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
            (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
               C50732 * C393) *
              C893 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C49747 * C4009 + C50821 * C4015 + C49740 * C4008 +
             C50545 * C4014) *
                C7782 +
            (C49747 * C4012 + C50821 * C4018 + C49740 * C4011 +
             C50545 * C4017) *
                C7777) *
               C50732 * C392 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C391 -
           ((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
             C50821 * C9128) *
                C7777 +
            (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
             C50821 * C9126) *
                C7782 +
            (C9153 + C9152) * C7776 + (C9151 + C9150) * C7781 +
            (C9149 + C9148) * C7775 + (C9147 + C9146) * C7780) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50706 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50732 * C50670) *
               C893 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50706 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50706 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50732 * C50839) *
               C893 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50706) *
                C50732 * C50839 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50706 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C7780 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C7775 +
             (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
             C8003 * C7777) *
                C50732 * C50839 -
            ((C8694 + C8695) * C7777 + (C8696 + C8697) * C7782 +
             (C8698 + C8699) * C7776 + (C8700 + C8701) * C7781 +
             (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                 C7775 +
             (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                 C7780) *
                C50732 * C50670) *
               C893 +
           (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
             (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
             (C49747 * C4009 + C50821 * C4015 + C49740 * C4008 +
              C50545 * C4014) *
                 C7782 +
             (C49747 * C4012 + C50821 * C4018 + C49740 * C4011 +
              C50545 * C4017) *
                 C7777) *
                C50732 * C50670 -
            (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
             (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
             (C7979 + C7978) * C7780) *
                C50732 * C50839) *
               C50642) *
              C50830 +
          ((((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                 C7780 +
             (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                 C7775 +
             (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
             (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
                C50732 * C50670 -
            (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
             (C7991 + C7990) * C7781 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C7775 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C7780) *
                C50732 * C50839) *
               C893 +
           (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
             (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
             (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
                C50732 * C50839 -
            ((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C7777 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C7782 +
             (C8709 + C8708) * C7776 + (C8707 + C8706) * C7781 +
             (C8705 + C8704) * C7775 + (C8703 + C8702) * C7780) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50606 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50706) *
               C50732 * C50606 * C50642 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50606 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C50606 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50706 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C50606 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50706 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50732 * C50606 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50706) *
              C50732 * C50606 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50706 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50606 * C893 -
           ((C7986 + C7987) * C7777 + (C7988 + C7989) * C7782 +
            (C7985 + C7984) * C7776 + (C7983 + C7982) * C7781 +
            (C7981 + C7980) * C7775 + (C7979 + C7978) * C7780) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
            (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
            (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
               C50732 * C50606 * C50642 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50606 * C893) *
              C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C50606 * C893 -
           ((C49740 * C973 + C50545 * C981 + C49747 * C974 + C50821 * C982) *
                C7777 +
            (C49740 * C969 + C50545 * C977 + C49747 * C970 + C50821 * C978) *
                C7782 +
            (C8321 + C8320) * C7776 + (C8319 + C8318) * C7781 +
            (C8317 + C8316) * C7775 + (C8315 + C8314) * C7780) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
           C8003 * C7777) *
              C50732 * C50606 * C964 -
          (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
           (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
           (C7979 + C7978) * C7780) *
              C50732 * C50606 * C965 +
          (C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
           (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
           (C8974 + C8975) * C7777) *
              C50732 * C50606 * C966 -
          ((C49740 * C8955 + C50545 * C8959 + C49747 * C8956 + C50821 * C8960) *
               C7777 +
           (C49740 * C8953 + C50545 * C8957 + C49747 * C8954 + C50821 * C8958) *
               C7782 +
           (C8975 + C8974) * C7776 + (C8973 + C8972) * C7781 + C8962 * C7775 +
           C8963 * C7780) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50706) *
                C50732 * C1544 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50706 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50732 * C50670) *
               C50838 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50706 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50706) *
                C50732 * C50670 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50706 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50732 * C1544) *
               C50838 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50706) *
                C50732 * C1544 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50706 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                 C7780 +
             (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                 C7775 +
             (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
             C8003 * C7777) *
                C50732 * C1544 -
            (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
             (C8700 + C8701) * C7781 +
             (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                 C7775 +
             (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                 C7780) *
                C50732 * C50670) *
               C50838 +
           (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
             (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
             (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
                C50732 * C50670 -
            (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
             (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
             (C7979 + C7978) * C7780) *
                C50732 * C1544) *
               C50642) *
              C50830 +
          ((((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                 C7780 +
             (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                 C7775 +
             (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
             (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
                C50732 * C50670 -
            (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
             (C7991 + C7990) * C7781 +
             (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                 C7775 +
             (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                 C7780) *
                C50732 * C1544) *
               C50838 +
           (((C7990 + C7991) * C7780 + (C7992 + C7993) * C7775 +
             (C7994 + C7995) * C7781 + (C7996 + C7997) * C7776 +
             (C7998 + C7999) * C7782 + (C8000 + C8001) * C7777) *
                C50732 * C1544 -
            ((C49740 * C4010 + C50545 * C4016 + C49747 * C4011 +
              C50821 * C4017) *
                 C7777 +
             (C49740 * C4007 + C50545 * C4013 + C49747 * C4008 +
              C50821 * C4014) *
                 C7782 +
             (C8709 + C8708) * C7776 + (C8707 + C8706) * C7781 +
             (C8705 + C8704) * C7775 + (C8703 + C8702) * C7780) *
                C50732 * C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50884 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50885 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C1960) *
              C50838 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50885 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C50884 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50706 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50884 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50885 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
            (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
               C50732 * C1960) *
              C50838 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50885 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C50884 -
           ((C49740 * C9123 + C50545 * C9127 + C49747 * C9124 +
             C50821 * C9128) *
                C7777 +
            (C49740 * C9121 + C50545 * C9125 + C49747 * C9122 +
             C50821 * C9126) *
                C7782 +
            (C9153 + C9152) * C7776 + (C9151 + C9150) * C7781 +
            (C9149 + C9148) * C7775 + (C9147 + C9146) * C7780) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50706 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50706 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50706) *
              C50732 * C1710 -
          ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
            C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
               C50706 +
           (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
            C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
               C121) *
              C50732 * C1711 +
          ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
            C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
               C121 +
           (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
            C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
               C50706) *
              C50732 * C1712 -
          ((C120 * C1718 + C108 * C1726 + C119 * C1719 + C107 * C1727 +
            C118 * C1720 + C106 * C1728 + C117 * C1721 + C105 * C1729) *
               C50706 +
           (C120 * C1714 + C108 * C1722 + C119 * C1715 + C107 * C1723 +
            C118 * C1716 + C106 * C1724 + C117 * C1717 + C105 * C1725) *
               C121) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
            (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
               C50732 * C50670 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C1544 -
           ((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
             C50821 * C1443) *
                C7777 +
            (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
             C50821 * C1439) *
                C7782 +
            (C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                C7776 +
            (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                C7781 +
            (C49740 * C404 + C50545 * C424 + C49747 * C405 + C50821 * C425) *
                C7775 +
            (C49740 * C394 + C50545 * C408 + C49747 * C395 + C50821 * C409) *
                C7780) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C248 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50670 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C1544) *
              C249 +
          ((C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C1544 -
           ((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C7777 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C7782 +
            (C9661 + C9660) * C7776 + (C9659 + C9658) * C7781 + C9648 * C7775 +
            C9649 * C7780) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
               C7780 +
           (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
               C7775 +
           (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
           C8003 * C7777) *
              C50732 * C1710 -
          (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
           (C8700 + C8701) * C7781 +
           (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
               C7775 +
           (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
               C7780) *
              C50732 * C1711 +
          ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
               C7780 +
           (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
               C7775 +
           (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
           (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
              C50732 * C1712 -
          ((C49740 * C10053 + C50545 * C10057 + C49747 * C10054 +
            C50821 * C10058) *
               C7777 +
           (C49740 * C10051 + C50545 * C10055 + C49747 * C10052 +
            C50821 * C10056) *
               C7782 +
           (C49740 * C4431 + C50545 * C4437 + C49747 * C4432 + C50821 * C4438) *
               C7776 +
           (C49740 * C4428 + C50545 * C4434 + C49747 * C4429 + C50821 * C4435) *
               C7781 +
           (C49740 * C1720 + C50545 * C1728 + C49747 * C1721 + C50821 * C1729) *
               C7775 +
           (C49740 * C1716 + C50545 * C1724 + C49747 * C1717 + C50821 * C1725) *
               C7780) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C50884 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50885 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50706) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50885 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C50884 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50706 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C50884 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50885 +
           ((C49747 * C398 + C50821 * C412 + C49740 * C399 + C50545 * C413) *
                C7780 +
            (C49747 * C416 + C50821 * C428 + C49740 * C417 + C50545 * C429) *
                C7775 +
            (C9146 + C9147) * C7781 + (C9148 + C9149) * C7776 +
            (C9150 + C9151) * C7782 + (C9152 + C9153) * C7777) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
            (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
               C50732 * C50885 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C50884 -
           ((C49740 * C3494 + C50545 * C3500 + C49747 * C3495 +
             C50821 * C3501) *
                C7777 +
            (C49740 * C3491 + C50545 * C3497 + C49747 * C3492 +
             C50821 * C3498) *
                C7782 +
            (C49740 * C1088 + C50545 * C1096 + C49747 * C1089 +
             C50821 * C1097) *
                C7776 +
            (C49740 * C1084 + C50545 * C1092 + C49747 * C1085 +
             C50821 * C1093) *
                C7781 +
            (C49740 * C418 + C50545 * C430 + C49747 * C417 + C50821 * C429) *
                C7775 +
            (C49740 * C400 + C50545 * C414 + C49747 * C399 + C50821 * C413) *
                C7780) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50706 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50706 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50706 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50732 * C50670) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50706) *
               C50732 * C50670 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50706 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50732 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50706) *
               C50732 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50706 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C49747 * C396 + C50821 * C410 + C49740 * C395 + C50545 * C409) *
                C7780 +
            (C49747 * C406 + C50821 * C426 + C49740 * C405 + C50545 * C425) *
                C7775 +
            (C8702 + C8703) * C7781 + (C8704 + C8705) * C7776 +
            (C8706 + C8707) * C7782 + (C8708 + C8709) * C7777) *
               C50732 * C50670 -
           (C8004 * C7777 + C8005 * C7782 + (C7993 + C7992) * C7776 +
            (C7991 + C7990) * C7781 +
            (C49740 * C135 + C50545 * C145 + C49747 * C134 + C50821 * C144) *
                C7775 +
            (C49740 * C124 + C50545 * C131 + C49747 * C123 + C50821 * C130) *
                C7780) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C49747 * C124 + C50821 * C131 + C49740 * C125 + C50545 * C132) *
                C7780 +
            (C49747 * C135 + C50821 * C145 + C49740 * C136 + C50545 * C146) *
                C7775 +
            (C8314 + C8315) * C7781 + (C8316 + C8317) * C7776 +
            (C8318 + C8319) * C7782 + (C8320 + C8321) * C7777) *
               C50732 * C1544 -
           ((C49740 * C1434 + C50545 * C1442 + C49747 * C1435 +
             C50821 * C1443) *
                C7777 +
            (C49740 * C1430 + C50545 * C1438 + C49747 * C1431 +
             C50821 * C1439) *
                C7782 +
            (C49740 * C787 + C50545 * C793 + C49747 * C786 + C50821 * C792) *
                C7776 +
            (C49740 * C778 + C50545 * C783 + C49747 * C777 + C50821 * C782) *
                C7781 +
            (C49740 * C404 + C50545 * C424 + C49747 * C405 + C50821 * C425) *
                C7775 +
            (C49740 * C394 + C50545 * C408 + C49747 * C395 + C50821 * C409) *
                C7780) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50821 * C129 + C49740 * C123 + C50545 * C130) *
                C7780 +
            (C49747 * C133 + C50821 * C143 + C49740 * C134 + C50545 * C144) *
                C7775 +
            (C7978 + C7979) * C7781 + (C7980 + C7981) * C7776 + C8002 * C7782 +
            C8003 * C7777) *
               C50732 * C1544 -
           (C9648 * C7777 + C9649 * C7782 + (C8698 + C8699) * C7776 +
            (C8700 + C8701) * C7781 +
            (C49740 * C406 + C50545 * C426 + C49747 * C407 + C50821 * C427) *
                C7775 +
            (C49740 * C396 + C50545 * C410 + C49747 * C397 + C50821 * C411) *
                C7780) *
               C50732 * C50670) *
              C248 +
          (((C8701 + C8700) * C7780 + (C8699 + C8698) * C7775 +
            (C8697 + C8696) * C7781 + (C8695 + C8694) * C7776 +
            (C9658 + C9659) * C7782 + (C9660 + C9661) * C7777) *
               C50732 * C50670 -
           (C8962 * C7777 + C8963 * C7782 + (C7985 + C7984) * C7776 +
            (C7983 + C7982) * C7781 + (C7981 + C7980) * C7775 +
            (C7979 + C7978) * C7780) *
               C50732 * C1544) *
              C249 +
          ((C8002 * C7780 + C8003 * C7775 + (C7989 + C7988) * C7781 +
            (C7987 + C7986) * C7776 + (C8972 + C8973) * C7782 +
            (C8974 + C8975) * C7777) *
               C50732 * C1544 -
           ((C49740 * C9641 + C50545 * C9645 + C49747 * C9642 +
             C50821 * C9646) *
                C7777 +
            (C49740 * C9639 + C50545 * C9643 + C49747 * C9640 +
             C50821 * C9644) *
                C7782 +
            (C9661 + C9660) * C7776 + (C9659 + C9658) * C7781 + C9648 * C7775 +
            C9649 * C7780) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C50838 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50642) *
              C50880 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50642 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50606 * C50838 -
           ((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
             C2162 * C277 + C2157 * C289) *
                C50720 +
            (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
             C2162 * C259 + C2157 * C273) *
                C2166 +
            (C2695 + C2694 + C2693) * C50849 +
            (C2692 + C2691 + C2690) * C2165) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C50838 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50642) *
              C50880 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50642 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C50838) *
              C50881 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50606 * C50838 -
           ((C10616 * C3318 + C50540 * C3324) * C10615 +
            (C10616 * C3315 + C50540 * C3321) * C10620 + C10981 * C10614 +
            C10980 * C10619 + C10979 * C10613 + C10978 * C10618 +
            C10977 * C10612 + C10976 * C10617) *
               C50732 * C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2162 * C122 + C2157 * C129 + C2163 * C123 +
                       C2158 * C130 + C2164 * C124 + C2159 * C131) *
                          C2165 +
                      (C2162 * C133 + C2157 * C143 + C2163 * C134 +
                       C2158 * C144 + C2164 * C135 + C2159 * C145) *
                          C50849 +
                      (C2362 + C2363 + C2364) * C2166 +
                      (C2365 + C2366 + C2367) * C50720) *
                         C50732 * C50839 -
                     ((C3060 + C3061 + C3062) * C50720 +
                      (C3063 + C3064 + C3065) * C2166 +
                      (C2164 * C405 + C2159 * C425 + C2163 * C406 +
                       C2158 * C426 + C2162 * C407 + C2157 * C427) *
                          C50849 +
                      (C2164 * C395 + C2159 * C409 + C2163 * C396 +
                       C2158 * C410 + C2162 * C397 + C2157 * C411) *
                          C2165) *
                         C50732 * C50670) *
                        C50838 +
                    (((C3065 + C3064 + C3063) * C2165 +
                      (C3062 + C3061 + C3060) * C50849 +
                      (C2162 * C1433 + C2157 * C1441 + C2163 * C1432 +
                       C2158 * C1440 + C2164 * C1431 + C2159 * C1439) *
                          C2166 +
                      (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 +
                       C2158 * C1444 + C2164 * C1435 + C2159 * C1443) *
                          C50720) *
                         C50732 * C50670 -
                     ((C2368 + C2369 + C2370) * C50720 +
                      (C2371 + C2372 + C2373) * C2166 +
                      (C2367 + C2366 + C2365) * C50849 +
                      (C2364 + C2363 + C2362) * C2165) *
                         C50732 * C50839) *
                        C50642) *
                       C251 +
                   ((((C2162 * C396 + C2157 * C410 + C2163 * C395 +
                       C2158 * C409 + C2164 * C394 + C2159 * C408) *
                          C2165 +
                      (C2162 * C406 + C2157 * C426 + C2163 * C405 +
                       C2158 * C425 + C2164 * C404 + C2159 * C424) *
                          C50849 +
                      (C3066 + C3067 + C3068) * C2166 +
                      (C3069 + C3070 + C3071) * C50720) *
                         C50732 * C50670 -
                     ((C2379 + C2378 + C2377) * C50720 +
                      (C2376 + C2375 + C2374) * C2166 +
                      (C2164 * C136 + C2159 * C146 + C2163 * C135 +
                       C2158 * C145 + C2162 * C134 + C2157 * C144) *
                          C50849 +
                      (C2164 * C125 + C2159 * C132 + C2163 * C124 +
                       C2158 * C131 + C2162 * C123 + C2157 * C130) *
                          C2165) *
                         C50732 * C50839) *
                        C50838 +
                    (((C2374 + C2375 + C2376) * C2165 +
                      (C2377 + C2378 + C2379) * C50849 +
                      (C2380 + C2381 + C2382) * C2166 +
                      (C2383 + C2384 + C2385) * C50720) *
                         C50732 * C50839 -
                     ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 +
                       C2158 * C1443 + C2162 * C1436 + C2157 * C1444) *
                          C50720 +
                      (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 +
                       C2158 * C1439 + C2162 * C1432 + C2157 * C1440) *
                          C2166 +
                      (C3071 + C3070 + C3069) * C50849 +
                      (C3068 + C3067 + C3066) * C2165) *
                         C50732 * C50670) *
                        C50642) *
                       C50577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10616 * C122 + C50540 * C129) * C10617 +
                      (C10616 * C133 + C50540 * C143) * C10612 +
                      C10752 * C10618 + C10753 * C10613 + C10754 * C10619 +
                      C10755 * C10614 + C10756 * C10620 + C10757 * C10615) *
                         C50732 * C50839 -
                     (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
                      C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
                      (C10616 * C407 + C50540 * C427) * C10612 +
                      (C10616 * C397 + C50540 * C411) * C10617) *
                         C50732 * C50670) *
                        C50838 +
                    ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
                      C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
                      (C10616 * C9640 + C50540 * C9644) * C10620 +
                      (C10616 * C9642 + C50540 * C9646) * C10615) *
                         C50732 * C50670 -
                     (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
                      C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
                      C10753 * C10612 + C10752 * C10617) *
                         C50732 * C50839) *
                        C50642) *
                       C251 +
                   ((((C10616 * C396 + C50540 * C410) * C10617 +
                      (C10616 * C406 + C50540 * C426) * C10612 +
                      C11240 * C10618 + C11241 * C10613 + C11242 * C10619 +
                      C11243 * C10614 + C11244 * C10620 + C11245 * C10615) *
                         C50732 * C50670 -
                     (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
                      C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
                      (C10616 * C134 + C50540 * C144) * C10612 +
                      (C10616 * C123 + C50540 * C130) * C10617) *
                         C50732 * C50839) *
                        C50838 +
                    ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
                      C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
                      C10766 * C10620 + C10767 * C10615) *
                         C50732 * C50839 -
                     ((C10616 * C9641 + C50540 * C9645) * C10615 +
                      (C10616 * C9639 + C50540 * C9643) * C10620 +
                      C11245 * C10614 + C11244 * C10619 + C11243 * C10613 +
                      C11242 * C10618 + C11241 * C10612 + C11240 * C10617) *
                         C50732 * C50670) *
                        C50642) *
                       C50577)) /
                     (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C248 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C249 +
           ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
             C2164 * C970 + C2159 * C978) *
                C2166 +
            (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
             C2164 * C974 + C2159 * C982) *
                C50720) *
               C50732 * C50606 * C250) *
              C251 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C249 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C248 -
           ((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
             C2162 * C975 + C2157 * C983) *
                C50720 +
            (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
             C2162 * C971 + C2157 * C979) *
                C2166 +
            (C2385 + C2384 + C2383) * C50849 +
            (C2382 + C2381 + C2380) * C2165) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
            C2164 * C254 + C2159 * C268) *
               C2166 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
            C2164 * C264 + C2159 * C284) *
               C50720) *
              C50732 * C50606 * C50590 * C113 -
          ((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
            C2162 * C265 + C2157 * C285) *
               C50720 +
           (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
            C2162 * C255 + C2157 * C269) *
               C2166 +
           (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
            C2162 * C134 + C2157 * C144) *
               C50849 +
           (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
            C2162 * C123 + C2157 * C130) *
               C2165) *
              C50732 * C50606 * C50590 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
            C2164 * C126 + C2159 * C138) *
               C2165 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
            C2164 * C137 + C2159 * C147) *
               C50849 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
            C2164 * C261 + C2159 * C279) *
               C2166 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
            C2164 * C280 + C2159 * C291) *
               C50720) *
              C50732 * C50606 * C50590 * C115 -
          ((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
            C2162 * C263 + C2157 * C283) *
               C50720 +
           (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
            C2162 * C253 + C2157 * C267) *
               C2166 +
           (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
            C2162 * C136 + C2157 * C146) *
               C50849 +
           (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
            C2162 * C125 + C2157 * C132) *
               C2165) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C391 -
           ((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
             C2162 * C784 + C2157 * C790) *
                C50720 +
            (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
             C2162 * C775 + C2157 * C780) *
                C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C2162 * C1086 + C2157 * C1094 + C2163 * C1085 + C2158 * C1093 +
             C2164 * C1084 + C2159 * C1092) *
                C2166 +
            (C2162 * C1090 + C2157 * C1098 + C2163 * C1089 + C2158 * C1097 +
             C2164 * C1088 + C2159 * C1096) *
                C50720) *
               C50732 * C393) *
              C50590 * C251 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
             C2164 * C778 + C2159 * C783) *
                C2166 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
             C2164 * C787 + C2159 * C793) *
                C50720) *
               C50732 * C392 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C391 -
           ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
             C2162 * C1089 + C2157 * C1097) *
                C50720 +
            (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
             C2162 * C1085 + C2157 * C1093) *
                C2166 +
            (C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
             C2162 * C417 + C2157 * C429) *
                C50849 +
            (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
             C2162 * C399 + C2157 * C413) *
                C2165) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 +
           (C10616 * C256 + C50540 * C270) * C10618 +
           (C10616 * C266 + C50540 * C286) * C10613 +
           (C10616 * C257 + C50540 * C271) * C10619 +
           (C10616 * C275 + C50540 * C287) * C10614 +
           (C10616 * C972 + C50540 * C980) * C10620 +
           (C10616 * C976 + C50540 * C984) * C10615) *
              C50732 * C50606 * C50590 * C113 -
          ((C10616 * C975 + C50540 * C983) * C10615 +
           (C10616 * C971 + C50540 * C979) * C10620 +
           (C10616 * C276 + C50540 * C288) * C10614 +
           (C10616 * C258 + C50540 * C272) * C10619 +
           (C10616 * C265 + C50540 * C285) * C10613 +
           (C10616 * C255 + C50540 * C269) * C10618 +
           (C10616 * C134 + C50540 * C144) * C10612 +
           (C10616 * C123 + C50540 * C130) * C10617) *
              C50732 * C50606 * C50590 * C114 +
          ((C10616 * C124 + C50540 * C131) * C10617 +
           (C10616 * C135 + C50540 * C145) * C10612 +
           (C10616 * C254 + C50540 * C268) * C10618 +
           (C10616 * C264 + C50540 * C284) * C10613 +
           (C10616 * C259 + C50540 * C273) * C10619 +
           (C10616 * C277 + C50540 * C289) * C10614 +
           (C10616 * C970 + C50540 * C978) * C10620 +
           (C10616 * C974 + C50540 * C982) * C10615) *
              C50732 * C50606 * C50590 * C115 -
          ((C10616 * C973 + C50540 * C981) * C10615 +
           (C10616 * C969 + C50540 * C977) * C10620 +
           (C10616 * C278 + C50540 * C290) * C10614 +
           (C10616 * C260 + C50540 * C274) * C10619 +
           (C10616 * C263 + C50540 * C283) * C10613 +
           (C10616 * C253 + C50540 * C267) * C10618 +
           (C10616 * C136 + C50540 * C146) * C10612 +
           (C10616 * C125 + C50540 * C132) * C10617) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C248 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C249 +
           (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            (C10616 * C8954 + C50540 * C8958) * C10620 +
            (C10616 * C8956 + C50540 * C8960) * C10615) *
               C50732 * C50606 * C250) *
              C251 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C249 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C248 -
           ((C10616 * C8955 + C50540 * C8959) * C10615 +
            (C10616 * C8953 + C50540 * C8957) * C10620 + C10767 * C10614 +
            C10766 * C10619 + C10765 * C10613 + C10764 * C10618 +
            C10763 * C10612 + C10762 * C10617) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C391 -
           ((C10616 * C4012 + C50540 * C4018) * C10615 +
            (C10616 * C4009 + C50540 * C4015) * C10620 +
            (C10616 * C1437 + C50540 * C1445) * C10614 +
            (C10616 * C1433 + C50540 * C1441) * C10619 +
            (C10616 * C784 + C50540 * C790) * C10613 +
            (C10616 * C775 + C50540 * C780) * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C392 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 +
            (C10616 * C1086 + C50540 * C1094) * C10618 +
            (C10616 * C1090 + C50540 * C1098) * C10613 +
            (C10616 * C3493 + C50540 * C3499) * C10619 +
            (C10616 * C3496 + C50540 * C3502) * C10614 +
            (C10616 * C9122 + C50540 * C9126) * C10620 +
            (C10616 * C9124 + C50540 * C9128) * C10615) *
               C50732 * C393) *
              C50590 * C251 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 +
            (C10616 * C776 + C50540 * C781) * C10618 +
            (C10616 * C785 + C50540 * C791) * C10613 +
            (C10616 * C1432 + C50540 * C1440) * C10619 +
            (C10616 * C1436 + C50540 * C1444) * C10614 +
            (C10616 * C4008 + C50540 * C4014) * C10620 +
            (C10616 * C4011 + C50540 * C4017) * C10615) *
               C50732 * C392 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C391 -
           ((C10616 * C9123 + C50540 * C9127) * C10615 +
            (C10616 * C9121 + C50540 * C9125) * C10620 +
            (C10616 * C3495 + C50540 * C3501) * C10614 +
            (C10616 * C3492 + C50540 * C3498) * C10619 +
            (C10616 * C1089 + C50540 * C1097) * C10613 +
            (C10616 * C1085 + C50540 * C1093) * C10618 +
            (C10616 * C417 + C50540 * C429) * C10612 +
            (C10616 * C399 + C50540 * C413) * C10617) *
               C50732 * C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50839 -
           ((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
             C2162 * C784 + C2157 * C790) *
                C50720 +
            (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
             C2162 * C775 + C2157 * C780) *
                C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
             C2164 * C778 + C2159 * C783) *
                C2166 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
             C2164 * C787 + C2159 * C793) *
                C50720) *
               C50732 * C50670 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50839 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50720 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C2166 +
            (C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
             C2162 * C405 + C2157 * C425) *
                C50849 +
            (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
             C2162 * C395 + C2157 * C409) *
                C2165) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50839 -
           ((C10616 * C4012 + C50540 * C4018) * C10615 +
            (C10616 * C4009 + C50540 * C4015) * C10620 +
            (C10616 * C1437 + C50540 * C1445) * C10614 +
            (C10616 * C1433 + C50540 * C1441) * C10619 +
            (C10616 * C784 + C50540 * C790) * C10613 +
            (C10616 * C775 + C50540 * C780) * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50590 * C50880 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 +
            (C10616 * C776 + C50540 * C781) * C10618 +
            (C10616 * C785 + C50540 * C791) * C10613 +
            (C10616 * C1432 + C50540 * C1440) * C10619 +
            (C10616 * C1436 + C50540 * C1444) * C10614 +
            (C10616 * C4008 + C50540 * C4014) * C10620 +
            (C10616 * C4011 + C50540 * C4017) * C10615) *
               C50732 * C50670 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50839) *
              C50590 * C50881 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50839 -
           ((C10616 * C4010 + C50540 * C4016) * C10615 +
            (C10616 * C4007 + C50540 * C4013) * C10620 +
            (C10616 * C1435 + C50540 * C1443) * C10614 +
            (C10616 * C1431 + C50540 * C1439) * C10619 +
            (C10616 * C786 + C50540 * C792) * C10613 +
            (C10616 * C777 + C50540 * C782) * C10618 +
            (C10616 * C405 + C50540 * C425) * C10612 +
            (C10616 * C395 + C50540 * C409) * C10617) *
               C50732 * C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
            C2164 * C254 + C2159 * C268) *
               C2166 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
            C2164 * C264 + C2159 * C284) *
               C50720) *
              C50732 * C50606 * C50590 * C113 -
          ((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
            C2162 * C265 + C2157 * C285) *
               C50720 +
           (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
            C2162 * C255 + C2157 * C269) *
               C2166 +
           (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
            C2162 * C134 + C2157 * C144) *
               C50849 +
           (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
            C2162 * C123 + C2157 * C130) *
               C2165) *
              C50732 * C50606 * C50590 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
            C2164 * C126 + C2159 * C138) *
               C2165 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
            C2164 * C137 + C2159 * C147) *
               C50849 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
            C2164 * C261 + C2159 * C279) *
               C2166 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
            C2164 * C280 + C2159 * C291) *
               C50720) *
              C50732 * C50606 * C50590 * C115 -
          ((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
            C2162 * C263 + C2157 * C283) *
               C50720 +
           (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
            C2162 * C253 + C2157 * C267) *
               C2166 +
           (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
            C2162 * C136 + C2157 * C146) *
               C50849 +
           (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
            C2162 * C125 + C2157 * C132) *
               C2165) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C248 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C249 +
           ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
             C2164 * C970 + C2159 * C978) *
                C2166 +
            (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
             C2164 * C974 + C2159 * C982) *
                C50720) *
               C50732 * C50606 * C250) *
              C251 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C249 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C248 -
           ((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
             C2162 * C975 + C2157 * C983) *
                C50720 +
            (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
             C2162 * C971 + C2157 * C979) *
                C2166 +
            (C2385 + C2384 + C2383) * C50849 +
            (C2382 + C2381 + C2380) * C2165) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 +
           (C10616 * C256 + C50540 * C270) * C10618 +
           (C10616 * C266 + C50540 * C286) * C10613 +
           (C10616 * C257 + C50540 * C271) * C10619 +
           (C10616 * C275 + C50540 * C287) * C10614 +
           (C10616 * C972 + C50540 * C980) * C10620 +
           (C10616 * C976 + C50540 * C984) * C10615) *
              C50732 * C50606 * C50590 * C113 -
          ((C10616 * C975 + C50540 * C983) * C10615 +
           (C10616 * C971 + C50540 * C979) * C10620 +
           (C10616 * C276 + C50540 * C288) * C10614 +
           (C10616 * C258 + C50540 * C272) * C10619 +
           (C10616 * C265 + C50540 * C285) * C10613 +
           (C10616 * C255 + C50540 * C269) * C10618 +
           (C10616 * C134 + C50540 * C144) * C10612 +
           (C10616 * C123 + C50540 * C130) * C10617) *
              C50732 * C50606 * C50590 * C114 +
          ((C10616 * C124 + C50540 * C131) * C10617 +
           (C10616 * C135 + C50540 * C145) * C10612 +
           (C10616 * C254 + C50540 * C268) * C10618 +
           (C10616 * C264 + C50540 * C284) * C10613 +
           (C10616 * C259 + C50540 * C273) * C10619 +
           (C10616 * C277 + C50540 * C289) * C10614 +
           (C10616 * C970 + C50540 * C978) * C10620 +
           (C10616 * C974 + C50540 * C982) * C10615) *
              C50732 * C50606 * C50590 * C115 -
          ((C10616 * C973 + C50540 * C981) * C10615 +
           (C10616 * C969 + C50540 * C977) * C10620 +
           (C10616 * C278 + C50540 * C290) * C10614 +
           (C10616 * C260 + C50540 * C274) * C10619 +
           (C10616 * C263 + C50540 * C283) * C10613 +
           (C10616 * C253 + C50540 * C267) * C10618 +
           (C10616 * C136 + C50540 * C146) * C10612 +
           (C10616 * C125 + C50540 * C132) * C10617) *
              C50732 * C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C248 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C249 +
           (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            (C10616 * C8954 + C50540 * C8958) * C10620 +
            (C10616 * C8956 + C50540 * C8960) * C10615) *
               C50732 * C50606 * C250) *
              C251 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C249 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C248 -
           ((C10616 * C8955 + C50540 * C8959) * C10615 +
            (C10616 * C8953 + C50540 * C8957) * C10620 + C10767 * C10614 +
            C10766 * C10619 + C10765 * C10613 + C10764 * C10618 +
            C10763 * C10612 + C10762 * C10617) *
               C50732 * C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C50882 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50883 +
           ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C50606 * C1199) *
              C50830 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50883 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C50882 -
           ((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
             C2162 * C975 + C2157 * C983) *
                C50720 +
            (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
             C2162 * C971 + C2157 * C979) *
                C2166 +
            (C2385 + C2384 + C2383) * C50849 +
            (C2382 + C2381 + C2380) * C2165) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C50882 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50883 +
           (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C50606 * C1199) *
              C50830 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50883 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C50882 -
           ((C10616 * C8955 + C50540 * C8959) * C10615 +
            (C10616 * C8953 + C50540 * C8957) * C10620 + C10767 * C10614 +
            C10766 * C10619 + C10765 * C10613 + C10764 * C10618 +
            C10763 * C10612 + C10762 * C10617) *
               C50732 * C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50839 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50882 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50670 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50839) *
              C50883 +
          (((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C50839 -
           ((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50720 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C2166 +
            (C4037 + C4036 + C4035) * C50849 +
            (C4034 + C4033 + C4032) * C2165) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50839 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50882 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50670 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50839) *
              C50883 +
          ((C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C50839 -
           ((C10616 * C11866 + C50540 * C11868) * C10615 +
            (C10616 * C11865 + C50540 * C11867) * C10620 + C11875 * C10614 +
            C11874 * C10619 + C11234 * C10613 + C11235 * C10618 +
            C11236 * C10612 + C11237 * C10617) *
               C50732 * C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2362 + C2363 + C2364) * C2166 + (C2365 + C2366 + C2367) * C50720) *
              C50732 * C50606 * C964 -
          ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
           (C2367 + C2366 + C2365) * C50849 + (C2364 + C2363 + C2362) * C2165) *
              C50732 * C50606 * C965 +
          ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
           (C3340 + C3341 + C3342) * C2166 + (C3343 + C3344 + C3345) * C50720) *
              C50732 * C50606 * C966 -
          ((C2164 * C3318 + C2159 * C3324 + C2163 * C3319 + C2158 * C3325 +
            C2162 * C3320 + C2157 * C3326) *
               C50720 +
           (C2164 * C3315 + C2159 * C3321 + C2163 * C3316 + C2158 * C3322 +
            C2162 * C3317 + C2157 * C3323) *
               C2166 +
           (C3345 + C3344 + C3343) * C50849 + (C3342 + C3341 + C3340) * C2165) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C893 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50642 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50606 * C893 -
           ((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
             C2162 * C277 + C2157 * C289) *
                C50720 +
            (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
             C2162 * C259 + C2157 * C273) *
                C2166 +
            (C2695 + C2694 + C2693) * C50849 +
            (C2692 + C2691 + C2690) * C2165) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C391 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C3516 + C3517 + C3518) * C2166 +
            (C3519 + C3520 + C3521) * C50720) *
               C50732 * C393) *
              C893 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
             C2164 * C1431 + C2159 * C1439) *
                C2166 +
            (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
             C2164 * C1435 + C2159 * C1443) *
                C50720) *
               C50732 * C392 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C391 -
           ((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
             C2162 * C3496 + C2157 * C3502) *
                C50720 +
            (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
             C2162 * C3493 + C2157 * C3499) *
                C2166 +
            (C3521 + C3520 + C3519) * C50849 +
            (C3518 + C3517 + C3516) * C2165) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C893 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50642) *
              C895 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50642 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C893) *
              C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50606 * C893 -
           ((C10616 * C3318 + C50540 * C3324) * C10615 +
            (C10616 * C3315 + C50540 * C3321) * C10620 + C10981 * C10614 +
            C10980 * C10619 + C10979 * C10613 + C10978 * C10618 +
            C10977 * C10612 + C10976 * C10617) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
           C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
           C10756 * C10620 + C10757 * C10615) *
              C50732 * C50606 * C964 -
          (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
           C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
           C10753 * C10612 + C10752 * C10617) *
              C50732 * C50606 * C965 +
          (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
           C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
           C11418 * C10620 + C11419 * C10615) *
              C50732 * C50606 * C966 -
          ((C10616 * C11410 + C50540 * C11412) * C10615 +
           (C10616 * C11409 + C50540 * C11411) * C10620 + C11419 * C10614 +
           C11418 * C10619 + C10758 * C10613 + C10759 * C10618 +
           C10757 * C10612 + C10756 * C10617) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C391 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C392 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
            C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
            C11538 * C10620 + C11539 * C10615) *
               C50732 * C393) *
              C893 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            (C10616 * C9640 + C50540 * C9644) * C10620 +
            (C10616 * C9642 + C50540 * C9646) * C10615) *
               C50732 * C392 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C391 -
           ((C10616 * C11518 + C50540 * C11520) * C10615 +
            (C10616 * C11517 + C50540 * C11519) * C10620 + C11539 * C10614 +
            C11538 * C10619 + C11537 * C10613 + C11536 * C10618 +
            C11535 * C10612 + C11534 * C10617) *
               C50732 * C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[203] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2162 * C122 + C2157 * C129 + C2163 * C123 +
                       C2158 * C130 + C2164 * C124 + C2159 * C131) *
                          C2165 +
                      (C2162 * C133 + C2157 * C143 + C2163 * C134 +
                       C2158 * C144 + C2164 * C135 + C2159 * C145) *
                          C50849 +
                      (C2362 + C2363 + C2364) * C2166 +
                      (C2365 + C2366 + C2367) * C50720) *
                         C50732 * C50839 -
                     ((C3060 + C3061 + C3062) * C50720 +
                      (C3063 + C3064 + C3065) * C2166 +
                      (C2164 * C405 + C2159 * C425 + C2163 * C406 +
                       C2158 * C426 + C2162 * C407 + C2157 * C427) *
                          C50849 +
                      (C2164 * C395 + C2159 * C409 + C2163 * C396 +
                       C2158 * C410 + C2162 * C397 + C2157 * C411) *
                          C2165) *
                         C50732 * C50670) *
                        C893 +
                    (((C3065 + C3064 + C3063) * C2165 +
                      (C3062 + C3061 + C3060) * C50849 +
                      (C2162 * C1433 + C2157 * C1441 + C2163 * C1432 +
                       C2158 * C1440 + C2164 * C1431 + C2159 * C1439) *
                          C2166 +
                      (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 +
                       C2158 * C1444 + C2164 * C1435 + C2159 * C1443) *
                          C50720) *
                         C50732 * C50670 -
                     ((C2368 + C2369 + C2370) * C50720 +
                      (C2371 + C2372 + C2373) * C2166 +
                      (C2367 + C2366 + C2365) * C50849 +
                      (C2364 + C2363 + C2362) * C2165) *
                         C50732 * C50839) *
                        C50642) *
                       C50830 +
                   ((((C2162 * C396 + C2157 * C410 + C2163 * C395 +
                       C2158 * C409 + C2164 * C394 + C2159 * C408) *
                          C2165 +
                      (C2162 * C406 + C2157 * C426 + C2163 * C405 +
                       C2158 * C425 + C2164 * C404 + C2159 * C424) *
                          C50849 +
                      (C3066 + C3067 + C3068) * C2166 +
                      (C3069 + C3070 + C3071) * C50720) *
                         C50732 * C50670 -
                     ((C2379 + C2378 + C2377) * C50720 +
                      (C2376 + C2375 + C2374) * C2166 +
                      (C2164 * C136 + C2159 * C146 + C2163 * C135 +
                       C2158 * C145 + C2162 * C134 + C2157 * C144) *
                          C50849 +
                      (C2164 * C125 + C2159 * C132 + C2163 * C124 +
                       C2158 * C131 + C2162 * C123 + C2157 * C130) *
                          C2165) *
                         C50732 * C50839) *
                        C893 +
                    (((C2374 + C2375 + C2376) * C2165 +
                      (C2377 + C2378 + C2379) * C50849 +
                      (C2380 + C2381 + C2382) * C2166 +
                      (C2383 + C2384 + C2385) * C50720) *
                         C50732 * C50839 -
                     ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 +
                       C2158 * C1443 + C2162 * C1436 + C2157 * C1444) *
                          C50720 +
                      (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 +
                       C2158 * C1439 + C2162 * C1432 + C2157 * C1440) *
                          C2166 +
                      (C3071 + C3070 + C3069) * C50849 +
                      (C3068 + C3067 + C3066) * C2165) *
                         C50732 * C50670) *
                        C50642) *
                       C50577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10616 * C122 + C50540 * C129) * C10617 +
                      (C10616 * C133 + C50540 * C143) * C10612 +
                      C10752 * C10618 + C10753 * C10613 + C10754 * C10619 +
                      C10755 * C10614 + C10756 * C10620 + C10757 * C10615) *
                         C50732 * C50839 -
                     (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
                      C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
                      (C10616 * C407 + C50540 * C427) * C10612 +
                      (C10616 * C397 + C50540 * C411) * C10617) *
                         C50732 * C50670) *
                        C893 +
                    ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
                      C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
                      (C10616 * C9640 + C50540 * C9644) * C10620 +
                      (C10616 * C9642 + C50540 * C9646) * C10615) *
                         C50732 * C50670 -
                     (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
                      C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
                      C10753 * C10612 + C10752 * C10617) *
                         C50732 * C50839) *
                        C50642) *
                       C50830 +
                   ((((C10616 * C396 + C50540 * C410) * C10617 +
                      (C10616 * C406 + C50540 * C426) * C10612 +
                      C11240 * C10618 + C11241 * C10613 + C11242 * C10619 +
                      C11243 * C10614 + C11244 * C10620 + C11245 * C10615) *
                         C50732 * C50670 -
                     (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
                      C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
                      (C10616 * C134 + C50540 * C144) * C10612 +
                      (C10616 * C123 + C50540 * C130) * C10617) *
                         C50732 * C50839) *
                        C893 +
                    ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
                      C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
                      C10766 * C10620 + C10767 * C10615) *
                         C50732 * C50839 -
                     ((C10616 * C9641 + C50540 * C9645) * C10615 +
                      (C10616 * C9639 + C50540 * C9643) * C10620 +
                      C11245 * C10614 + C11244 * C10619 + C11243 * C10613 +
                      C11242 * C10618 + C11241 * C10612 + C11240 * C10617) *
                         C50732 * C50670) *
                        C50642) *
                       C50577)) /
                     (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50606 * C893 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50606 * C50642) *
              C895 +
          (((C2374 + C2375 + C2376) * C2165 + (C2377 + C2378 + C2379) * C50849 +
            (C2380 + C2381 + C2382) * C2166 +
            (C2383 + C2384 + C2385) * C50720) *
               C50732 * C50606 * C50642 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50606 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C50606 * C893 -
           ((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
             C2162 * C277 + C2157 * C289) *
                C50720 +
            (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
             C2162 * C259 + C2157 * C273) *
                C2166 +
            (C2695 + C2694 + C2693) * C50849 +
            (C2692 + C2691 + C2690) * C2165) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2362 + C2363 + C2364) * C2166 + (C2365 + C2366 + C2367) * C50720) *
              C50732 * C50606 * C964 -
          ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
           (C2367 + C2366 + C2365) * C50849 + (C2364 + C2363 + C2362) * C2165) *
              C50732 * C50606 * C965 +
          ((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
           (C3340 + C3341 + C3342) * C2166 + (C3343 + C3344 + C3345) * C50720) *
              C50732 * C50606 * C966 -
          ((C2164 * C3318 + C2159 * C3324 + C2163 * C3319 + C2158 * C3325 +
            C2162 * C3320 + C2157 * C3326) *
               C50720 +
           (C2164 * C3315 + C2159 * C3321 + C2163 * C3316 + C2158 * C3322 +
            C2162 * C3317 + C2157 * C3323) *
               C2166 +
           (C3345 + C3344 + C3343) * C50849 + (C3342 + C3341 + C3340) * C2165) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50606 * C893 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50606 * C50642) *
              C895 +
          ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
            C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
            C10766 * C10620 + C10767 * C10615) *
               C50732 * C50606 * C50642 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50606 * C893) *
              C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C50606 * C893 -
           ((C10616 * C3318 + C50540 * C3324) * C10615 +
            (C10616 * C3315 + C50540 * C3321) * C10620 + C10981 * C10614 +
            C10980 * C10619 + C10979 * C10613 + C10978 * C10618 +
            C10977 * C10612 + C10976 * C10617) *
               C50732 * C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
           C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
           C10756 * C10620 + C10757 * C10615) *
              C50732 * C50606 * C964 -
          (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
           C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
           C10753 * C10612 + C10752 * C10617) *
              C50732 * C50606 * C965 +
          (C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
           C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
           C11418 * C10620 + C11419 * C10615) *
              C50732 * C50606 * C966 -
          ((C10616 * C11410 + C50540 * C11412) * C10615 +
           (C10616 * C11409 + C50540 * C11411) * C10620 + C11419 * C10614 +
           C11418 * C10619 + C10758 * C10613 + C10759 * C10618 +
           C10757 * C10612 + C10756 * C10617) *
              C50732 * C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2162 * C122 + C2157 * C129 + C2163 * C123 +
                       C2158 * C130 + C2164 * C124 + C2159 * C131) *
                          C2165 +
                      (C2162 * C133 + C2157 * C143 + C2163 * C134 +
                       C2158 * C144 + C2164 * C135 + C2159 * C145) *
                          C50849 +
                      (C2362 + C2363 + C2364) * C2166 +
                      (C2365 + C2366 + C2367) * C50720) *
                         C50732 * C1544 -
                     ((C3060 + C3061 + C3062) * C50720 +
                      (C3063 + C3064 + C3065) * C2166 +
                      (C2164 * C405 + C2159 * C425 + C2163 * C406 +
                       C2158 * C426 + C2162 * C407 + C2157 * C427) *
                          C50849 +
                      (C2164 * C395 + C2159 * C409 + C2163 * C396 +
                       C2158 * C410 + C2162 * C397 + C2157 * C411) *
                          C2165) *
                         C50732 * C50670) *
                        C50838 +
                    (((C3065 + C3064 + C3063) * C2165 +
                      (C3062 + C3061 + C3060) * C50849 +
                      (C4032 + C4033 + C4034) * C2166 +
                      (C4035 + C4036 + C4037) * C50720) *
                         C50732 * C50670 -
                     ((C2368 + C2369 + C2370) * C50720 +
                      (C2371 + C2372 + C2373) * C2166 +
                      (C2367 + C2366 + C2365) * C50849 +
                      (C2364 + C2363 + C2362) * C2165) *
                         C50732 * C1544) *
                        C50642) *
                       C50830 +
                   ((((C2162 * C396 + C2157 * C410 + C2163 * C395 +
                       C2158 * C409 + C2164 * C394 + C2159 * C408) *
                          C2165 +
                      (C2162 * C406 + C2157 * C426 + C2163 * C405 +
                       C2158 * C425 + C2164 * C404 + C2159 * C424) *
                          C50849 +
                      (C3066 + C3067 + C3068) * C2166 +
                      (C3069 + C3070 + C3071) * C50720) *
                         C50732 * C50670 -
                     ((C2379 + C2378 + C2377) * C50720 +
                      (C2376 + C2375 + C2374) * C2166 +
                      (C2164 * C136 + C2159 * C146 + C2163 * C135 +
                       C2158 * C145 + C2162 * C134 + C2157 * C144) *
                          C50849 +
                      (C2164 * C125 + C2159 * C132 + C2163 * C124 +
                       C2158 * C131 + C2162 * C123 + C2157 * C130) *
                          C2165) *
                         C50732 * C1544) *
                        C50838 +
                    (((C2374 + C2375 + C2376) * C2165 +
                      (C2377 + C2378 + C2379) * C50849 +
                      (C2380 + C2381 + C2382) * C2166 +
                      (C2383 + C2384 + C2385) * C50720) *
                         C50732 * C1544 -
                     ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 +
                       C2158 * C1443 + C2162 * C1436 + C2157 * C1444) *
                          C50720 +
                      (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 +
                       C2158 * C1439 + C2162 * C1432 + C2157 * C1440) *
                          C2166 +
                      (C3071 + C3070 + C3069) * C50849 +
                      (C3068 + C3067 + C3066) * C2165) *
                         C50732 * C50670) *
                        C50642) *
                       C50577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10616 * C122 + C50540 * C129) * C10617 +
                      (C10616 * C133 + C50540 * C143) * C10612 +
                      C10752 * C10618 + C10753 * C10613 + C10754 * C10619 +
                      C10755 * C10614 + C10756 * C10620 + C10757 * C10615) *
                         C50732 * C1544 -
                     (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
                      C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
                      (C10616 * C407 + C50540 * C427) * C10612 +
                      (C10616 * C397 + C50540 * C411) * C10617) *
                         C50732 * C50670) *
                        C50838 +
                    ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
                      C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
                      C11874 * C10620 + C11875 * C10615) *
                         C50732 * C50670 -
                     (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
                      C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
                      C10753 * C10612 + C10752 * C10617) *
                         C50732 * C1544) *
                        C50642) *
                       C50830 +
                   ((((C10616 * C396 + C50540 * C410) * C10617 +
                      (C10616 * C406 + C50540 * C426) * C10612 +
                      C11240 * C10618 + C11241 * C10613 + C11242 * C10619 +
                      C11243 * C10614 + C11244 * C10620 + C11245 * C10615) *
                         C50732 * C50670 -
                     (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
                      C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
                      (C10616 * C134 + C50540 * C144) * C10612 +
                      (C10616 * C123 + C50540 * C130) * C10617) *
                         C50732 * C1544) *
                        C50838 +
                    ((C10760 * C10617 + C10761 * C10612 + C10762 * C10618 +
                      C10763 * C10613 + C10764 * C10619 + C10765 * C10614 +
                      C10766 * C10620 + C10767 * C10615) *
                         C50732 * C1544 -
                     ((C10616 * C9641 + C50540 * C9645) * C10615 +
                      (C10616 * C9639 + C50540 * C9643) * C10620 +
                      C11245 * C10614 + C11244 * C10619 + C11243 * C10613 +
                      C11242 * C10618 + C11241 * C10612 + C11240 * C10617) *
                         C50732 * C50670) *
                        C50642) *
                       C50577)) /
                     (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50884 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50885 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C3516 + C3517 + C3518) * C2166 +
            (C3519 + C3520 + C3521) * C50720) *
               C50732 * C1960) *
              C50838 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50885 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C50884 -
           ((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
             C2162 * C3496 + C2157 * C3502) *
                C50720 +
            (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
             C2162 * C3493 + C2157 * C3499) *
                C2166 +
            (C3521 + C3520 + C3519) * C50849 +
            (C3518 + C3517 + C3516) * C2165) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50884 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50885 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
            C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
            C11538 * C10620 + C11539 * C10615) *
               C50732 * C1960) *
              C50838 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50885 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C50884 -
           ((C10616 * C11518 + C50540 * C11520) * C10615 +
            (C10616 * C11517 + C50540 * C11519) * C10620 + C11539 * C10614 +
            C11538 * C10619 + C11537 * C10613 + C11536 * C10618 +
            C11535 * C10612 + C11534 * C10617) *
               C50732 * C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C1544 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C248 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50670 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C1544) *
              C249 +
          (((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C1544 -
           ((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50720 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C2166 +
            (C4037 + C4036 + C4035) * C50849 +
            (C4034 + C4033 + C4032) * C2165) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C1544 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C3066 + C3067 + C3068) * C2166 +
            (C3069 + C3070 + C3071) * C50720) *
               C50732 * C50670 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C1544 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50720 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C2166 +
            (C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
             C2162 * C405 + C2157 * C425) *
                C50849 +
            (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
             C2162 * C395 + C2157 * C409) *
                C2165) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C2165 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50849 +
           (C2362 + C2363 + C2364) * C2166 + (C2365 + C2366 + C2367) * C50720) *
              C50732 * C1710 -
          ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
           (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
            C2162 * C407 + C2157 * C427) *
               C50849 +
           (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
            C2162 * C397 + C2157 * C411) *
               C2165) *
              C50732 * C1711 +
          ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
            C2164 * C400 + C2159 * C414) *
               C2165 +
           (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
            C2164 * C418 + C2159 * C430) *
               C50849 +
           (C3516 + C3517 + C3518) * C2166 + (C3519 + C3520 + C3521) * C50720) *
              C50732 * C1712 -
          ((C2164 * C4430 + C2159 * C4436 + C2163 * C4431 + C2158 * C4437 +
            C2162 * C4432 + C2157 * C4438) *
               C50720 +
           (C2164 * C4427 + C2159 * C4433 + C2163 * C4428 + C2158 * C4434 +
            C2162 * C4429 + C2157 * C4435) *
               C2166 +
           (C2164 * C1719 + C2159 * C1727 + C2163 * C1720 + C2158 * C1728 +
            C2162 * C1721 + C2157 * C1729) *
               C50849 +
           (C2164 * C1715 + C2159 * C1723 + C2163 * C1716 + C2158 * C1724 +
            C2162 * C1717 + C2157 * C1725) *
               C2165) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
            C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
            C11244 * C10620 + C11245 * C10615) *
               C50732 * C50670 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C1544 -
           ((C10616 * C4010 + C50540 * C4016) * C10615 +
            (C10616 * C4007 + C50540 * C4013) * C10620 +
            (C10616 * C1435 + C50540 * C1443) * C10614 +
            (C10616 * C1431 + C50540 * C1439) * C10619 +
            (C10616 * C786 + C50540 * C792) * C10613 +
            (C10616 * C777 + C50540 * C782) * C10618 +
            (C10616 * C405 + C50540 * C425) * C10612 +
            (C10616 * C395 + C50540 * C409) * C10617) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C248 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50670 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C1544) *
              C249 +
          ((C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C1544 -
           ((C10616 * C11866 + C50540 * C11868) * C10615 +
            (C10616 * C11865 + C50540 * C11867) * C10620 + C11875 * C10614 +
            C11874 * C10619 + C11234 * C10613 + C11235 * C10618 +
            C11236 * C10612 + C11237 * C10617) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10616 * C122 + C50540 * C129) * C10617 +
           (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
           C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
           C10756 * C10620 + C10757 * C10615) *
              C50732 * C1710 -
          (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
           C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
           (C10616 * C407 + C50540 * C427) * C10612 +
           (C10616 * C397 + C50540 * C411) * C10617) *
              C50732 * C1711 +
          ((C10616 * C398 + C50540 * C412) * C10617 +
           (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
           C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
           C11538 * C10620 + C11539 * C10615) *
              C50732 * C1712 -
          ((C10616 * C12138 + C50540 * C12140) * C10615 +
           (C10616 * C12137 + C50540 * C12139) * C10620 +
           (C10616 * C10054 + C50540 * C10058) * C10614 +
           (C10616 * C10052 + C50540 * C10056) * C10619 +
           (C10616 * C4432 + C50540 * C4438) * C10613 +
           (C10616 * C4429 + C50540 * C4435) * C10618 +
           (C10616 * C1721 + C50540 * C1729) * C10612 +
           (C10616 * C1717 + C50540 * C1725) * C10617) *
              C50732 * C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C50884 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50885 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C2165 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50849 +
            (C3516 + C3517 + C3518) * C2166 +
            (C3519 + C3520 + C3521) * C50720) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C3066 + C3067 + C3068) * C2166 +
            (C3069 + C3070 + C3071) * C50720) *
               C50732 * C50885 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C50884 -
           ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
             C2162 * C1089 + C2157 * C1097) *
                C50720 +
            (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
             C2162 * C1085 + C2157 * C1093) *
                C2166 +
            (C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
             C2162 * C417 + C2157 * C429) *
                C50849 +
            (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
             C2162 * C399 + C2157 * C413) *
                C2165) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C50884 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50885 +
           ((C10616 * C398 + C50540 * C412) * C10617 +
            (C10616 * C416 + C50540 * C428) * C10612 + C11534 * C10618 +
            C11535 * C10613 + C11536 * C10619 + C11537 * C10614 +
            C11538 * C10620 + C11539 * C10615) *
               C50732 * C1960) *
              C50590 * C50830 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
            C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
            C11244 * C10620 + C11245 * C10615) *
               C50732 * C50885 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C50884 -
           ((C10616 * C9123 + C50540 * C9127) * C10615 +
            (C10616 * C9121 + C50540 * C9125) * C10620 +
            (C10616 * C3495 + C50540 * C3501) * C10614 +
            (C10616 * C3492 + C50540 * C3498) * C10619 +
            (C10616 * C1089 + C50540 * C1097) * C10613 +
            (C10616 * C1085 + C50540 * C1093) * C10618 +
            (C10616 * C417 + C50540 * C429) * C10612 +
            (C10616 * C399 + C50540 * C413) * C10617) *
               C50732 * C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C1544 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
             C2164 * C394 + C2159 * C408) *
                C2165 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
             C2164 * C404 + C2159 * C424) *
                C50849 +
            (C3066 + C3067 + C3068) * C2166 +
            (C3069 + C3070 + C3071) * C50720) *
               C50732 * C50670 -
           ((C2379 + C2378 + C2377) * C50720 + (C2376 + C2375 + C2374) * C2166 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50849 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C2165) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C2165 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50849 +
            (C2690 + C2691 + C2692) * C2166 +
            (C2693 + C2694 + C2695) * C50720) *
               C50732 * C1544 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50720 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C2166 +
            (C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
             C2162 * C405 + C2157 * C425) *
                C50849 +
            (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
             C2162 * C395 + C2157 * C409) *
                C2165) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C2165 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50849 +
            (C2362 + C2363 + C2364) * C2166 +
            (C2365 + C2366 + C2367) * C50720) *
               C50732 * C1544 -
           ((C3060 + C3061 + C3062) * C50720 + (C3063 + C3064 + C3065) * C2166 +
            (C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50849 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C2165) *
               C50732 * C50670) *
              C248 +
          (((C3065 + C3064 + C3063) * C2165 + (C3062 + C3061 + C3060) * C50849 +
            (C4032 + C4033 + C4034) * C2166 +
            (C4035 + C4036 + C4037) * C50720) *
               C50732 * C50670 -
           ((C2368 + C2369 + C2370) * C50720 + (C2371 + C2372 + C2373) * C2166 +
            (C2367 + C2366 + C2365) * C50849 +
            (C2364 + C2363 + C2362) * C2165) *
               C50732 * C1544) *
              C249 +
          (((C2373 + C2372 + C2371) * C2165 + (C2370 + C2369 + C2368) * C50849 +
            (C3340 + C3341 + C3342) * C2166 +
            (C3343 + C3344 + C3345) * C50720) *
               C50732 * C1544 -
           ((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50720 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C2166 +
            (C4037 + C4036 + C4035) * C50849 +
            (C4034 + C4033 + C4032) * C2165) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C50590 * C895 +
          (((C10616 * C396 + C50540 * C410) * C10617 +
            (C10616 * C406 + C50540 * C426) * C10612 + C11240 * C10618 +
            C11241 * C10613 + C11242 * C10619 + C11243 * C10614 +
            C11244 * C10620 + C11245 * C10615) *
               C50732 * C50670 -
           (C10765 * C10615 + C10764 * C10620 + C10763 * C10614 +
            C10762 * C10619 + C10761 * C10613 + C10760 * C10618 +
            (C10616 * C134 + C50540 * C144) * C10612 +
            (C10616 * C123 + C50540 * C130) * C10617) *
               C50732 * C1544) *
              C50590 * C896 +
          (((C10616 * C124 + C50540 * C131) * C10617 +
            (C10616 * C135 + C50540 * C145) * C10612 + C10976 * C10618 +
            C10977 * C10613 + C10978 * C10619 + C10979 * C10614 +
            C10980 * C10620 + C10981 * C10615) *
               C50732 * C1544 -
           ((C10616 * C4010 + C50540 * C4016) * C10615 +
            (C10616 * C4007 + C50540 * C4013) * C10620 +
            (C10616 * C1435 + C50540 * C1443) * C10614 +
            (C10616 * C1431 + C50540 * C1439) * C10619 +
            (C10616 * C786 + C50540 * C792) * C10613 +
            (C10616 * C777 + C50540 * C782) * C10618 +
            (C10616 * C405 + C50540 * C425) * C10612 +
            (C10616 * C395 + C50540 * C409) * C10617) *
               C50732 * C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C10617 +
            (C10616 * C133 + C50540 * C143) * C10612 + C10752 * C10618 +
            C10753 * C10613 + C10754 * C10619 + C10755 * C10614 +
            C10756 * C10620 + C10757 * C10615) *
               C50732 * C1544 -
           (C11234 * C10615 + C11235 * C10620 + C11236 * C10614 +
            C11237 * C10619 + C11238 * C10613 + C11239 * C10618 +
            (C10616 * C407 + C50540 * C427) * C10612 +
            (C10616 * C397 + C50540 * C411) * C10617) *
               C50732 * C50670) *
              C248 +
          ((C11239 * C10617 + C11238 * C10612 + C11237 * C10618 +
            C11236 * C10613 + C11235 * C10619 + C11234 * C10614 +
            C11874 * C10620 + C11875 * C10615) *
               C50732 * C50670 -
           (C10758 * C10615 + C10759 * C10620 + C10757 * C10614 +
            C10756 * C10619 + C10755 * C10613 + C10754 * C10618 +
            C10753 * C10612 + C10752 * C10617) *
               C50732 * C1544) *
              C249 +
          ((C10754 * C10617 + C10755 * C10612 + C10756 * C10618 +
            C10757 * C10613 + C10759 * C10619 + C10758 * C10614 +
            C11418 * C10620 + C11419 * C10615) *
               C50732 * C1544 -
           ((C10616 * C11866 + C50540 * C11868) * C10615 +
            (C10616 * C11865 + C50540 * C11867) * C10620 + C11875 * C10614 +
            C11874 * C10619 + C11234 * C10613 + C11235 * C10618 +
            C11236 * C10612 + C11237 * C10617) *
               C50732 * C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C50838 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50642) *
              C50880 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50642 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C50838) *
              C50881 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
              C2164 * C402 + C2159 * C420) *
                 C121 +
             (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
              C2164 * C421 + C2159 * C432) *
                 C50706) *
                C50744) *
               C50606 * C50838 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50706 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50744 +
            ((C2695 + C2694 + C2693) * C50706 +
             (C2692 + C2691 + C2690) * C121) *
                C50850) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C50838 -
           ((C11234 * C7777 + C11235 * C7782 + C11236 * C7776 + C11237 * C7781 +
             C11238 * C7775 + C11239 * C7780) *
                C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50642) *
              C50880 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C11240 * C7780 + C11241 * C7775 + C11242 * C7781 + C11243 * C7776 +
             C11244 * C7782 + C11245 * C7777) *
                C50744) *
               C50606 * C50642 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C50838) *
              C50881 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            ((C10616 * C395 + C50540 * C409) * C7780 +
             (C10616 * C405 + C50540 * C425) * C7775 + C13072 * C7781 +
             C13073 * C7776 + C13074 * C7782 + C13075 * C7777) *
                C50744) *
               C50606 * C50838 -
           (((C10616 * C4010 + C50540 * C4016) * C7777 +
             (C10616 * C4007 + C50540 * C4013) * C7782 + C13075 * C7776 +
             C13074 * C7781 + C13073 * C7775 + C13072 * C7780) *
                C50744 +
            (C10981 * C7777 + C10980 * C7782 + C10979 * C7776 + C10978 * C7781 +
             C10977 * C7775 + C10976 * C7780) *
                C50850) *
               C50606 * C50642) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50706) *
                 C50850 +
             ((C5366 + C5367 + C5368) * C121 +
              (C5369 + C5370 + C5371) * C50706) *
                 C50744) *
                C50839 -
            (((C5372 + C5373 + C5374) * C50706 +
              (C5375 + C5376 + C5377) * C121) *
                 C50744 +
             ((C5371 + C5370 + C5369) * C50706 +
              (C5368 + C5367 + C5366) * C121) *
                 C50850) *
                C50670) *
               C50838 +
           ((((C3065 + C3064 + C3063) * C121 +
              (C3062 + C3061 + C3060) * C50706) *
                 C50850 +
             ((C3516 + C3517 + C3518) * C121 +
              (C3519 + C3520 + C3521) * C50706) *
                 C50744) *
                C50670 -
            (((C3060 + C3061 + C3062) * C50706 +
              (C3063 + C3064 + C3065) * C121) *
                 C50744 +
             ((C2367 + C2366 + C2365) * C50706 +
              (C2364 + C2363 + C2362) * C121) *
                 C50850) *
                C50839) *
               C50642) *
              C251 +
          (((((C5378 + C5379 + C5380) * C121 +
              (C5381 + C5382 + C5383) * C50706) *
                 C50850 +
             ((C5384 + C5385 + C5386) * C121 +
              (C5387 + C5388 + C5389) * C50706) *
                 C50744) *
                C50670 -
            (((C5383 + C5382 + C5381) * C50706 +
              (C5380 + C5379 + C5378) * C121) *
                 C50744 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50706 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50850) *
                C50839) *
               C50838 +
           ((((C2374 + C2375 + C2376) * C121 +
              (C2377 + C2378 + C2379) * C50706) *
                 C50850 +
             ((C3066 + C3067 + C3068) * C121 +
              (C3069 + C3070 + C3071) * C50706) *
                 C50744) *
                C50839 -
            (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
               C2162 * C1089 + C2157 * C1097) *
                  C50706 +
              (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
               C2162 * C1085 + C2157 * C1093) *
                  C121) *
                 C50744 +
             ((C3071 + C3070 + C3069) * C50706 +
              (C3068 + C3067 + C3066) * C121) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C7780 +
              (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
              C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                 C50850 +
             (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
                C50839 -
            ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
             (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
                C50670) *
               C50838 +
           (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
             (C11534 * C7780 + C11535 * C7775 + C11536 * C7781 +
              C11537 * C7776 + C11538 * C7782 + C11539 * C7777) *
                 C50744) *
                C50670 -
            ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
             (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 +
              C10754 * C7781 + C10753 * C7775 + C10752 * C7780) *
                 C50850) *
                C50839) *
               C50642) *
              C251 +
          ((((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
             (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
                C50670 -
            ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
             (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 +
              C10760 * C7781 + (C10616 * C134 + C50540 * C144) * C7775 +
              (C10616 * C123 + C50540 * C130) * C7780) *
                 C50850) *
                C50839) *
               C50838 +
           (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 +
              C10763 * C7776 + C10764 * C7782 + C10765 * C7777) *
                 C50850 +
             (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
                C50839 -
            (((C10616 * C9123 + C50540 * C9127) * C7777 +
              (C10616 * C9121 + C50540 * C9125) * C7782 + C12905 * C7776 +
              C12904 * C7781 + C12903 * C7775 + C12902 * C7780) *
                 C50744 +
             (C13439 + C13438 + C13437 + C13436 + C13435 + C13434) * C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
              C2164 * C395 + C2159 * C409) *
                 C121 +
             (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
              C2164 * C405 + C2159 * C425) *
                 C50706) *
                C50744) *
               C50606 * C248 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C249 +
           (((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C249 -
           (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
              C2162 * C406 + C2157 * C426) *
                 C50706 +
             (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
              C2162 * C396 + C2157 * C410) *
                 C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C248 -
           (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50706 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C121) *
                C50744 +
            ((C2385 + C2384 + C2383) * C50706 +
             (C2382 + C2381 + C2380) * C121) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
             C2164 * C395 + C2159 * C409) *
                C121 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
             C2164 * C405 + C2159 * C425) *
                C50706) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
             C2162 * C406 + C2157 * C426) *
                C50706 +
            (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
             C2162 * C396 + C2157 * C410) *
                C121) *
               C50744 +
           ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50706 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C121) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50706) *
               C50850 +
           ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
             C2164 * C402 + C2159 * C420) *
                C121 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
             C2164 * C421 + C2159 * C432) *
                C50706) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
             C2162 * C404 + C2157 * C424) *
                C50706 +
            (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
             C2162 * C394 + C2157 * C408) *
                C121) *
               C50744 +
           ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
             C2162 * C136 + C2157 * C146) *
                C50706 +
            (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
             C2162 * C125 + C2157 * C132) *
                C121) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C391 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C392 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
              C2164 * C1715 + C2159 * C1723) *
                 C121 +
             (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
              C2164 * C1719 + C2159 * C1727) *
                 C50706) *
                C50744) *
               C393) *
              C50590 * C251 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C392 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C391 -
           (((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
              C2162 * C1720 + C2157 * C1728) *
                 C50706 +
             (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
              C2162 * C1716 + C2157 * C1724) *
                 C121) *
                C50744 +
            ((C5389 + C5388 + C5387) * C50706 +
             (C5386 + C5385 + C5384) * C121) *
                C50850) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           ((C10616 * C397 + C50540 * C411) * C7780 +
            (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
            C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
            (C10616 * C406 + C50540 * C426) * C7775 +
            (C10616 * C396 + C50540 * C410) * C7780) *
               C50744 +
           (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
            (C10616 * C134 + C50540 * C144) * C7775 +
            (C10616 * C123 + C50540 * C130) * C7780) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C7780 +
            (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
            C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
               C50850 +
           ((C10616 * C395 + C50540 * C409) * C7780 +
            (C10616 * C405 + C50540 * C425) * C7775 +
            (C10616 * C777 + C50540 * C782) * C7781 +
            (C10616 * C786 + C50540 * C792) * C7776 +
            (C10616 * C1431 + C50540 * C1439) * C7782 +
            (C10616 * C1435 + C50540 * C1443) * C7777) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C10616 * C1434 + C50540 * C1442) * C7777 +
            (C10616 * C1430 + C50540 * C1438) * C7782 +
            (C10616 * C787 + C50540 * C793) * C7776 +
            (C10616 * C778 + C50540 * C783) * C7781 +
            (C10616 * C404 + C50540 * C424) * C7775 +
            (C10616 * C394 + C50540 * C408) * C7780) *
               C50744 +
           ((C10616 * C278 + C50540 * C290) * C7777 +
            (C10616 * C260 + C50540 * C274) * C7782 +
            (C10616 * C263 + C50540 * C283) * C7776 +
            (C10616 * C253 + C50540 * C267) * C7781 +
            (C10616 * C136 + C50540 * C146) * C7775 +
            (C10616 * C125 + C50540 * C132) * C7780) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            ((C10616 * C397 + C50540 * C411) * C7780 +
             (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
             C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
                C50744) *
               C50606 * C248 -
           ((C11234 * C7777 + C11235 * C7782 + C11236 * C7776 + C11237 * C7781 +
             C11238 * C7775 + C11239 * C7780) *
                C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C249 +
           ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
             C11874 * C7782 + C11875 * C7777) *
                C50744) *
               C50606 * C250) *
              C251 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C11240 * C7780 + C11241 * C7775 + C11242 * C7781 + C11243 * C7776 +
             C11244 * C7782 + C11245 * C7777) *
                C50744) *
               C50606 * C249 -
           ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
             (C10616 * C406 + C50540 * C426) * C7775 +
             (C10616 * C396 + C50540 * C410) * C7780) *
                C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C248 -
           (((C10616 * C9641 + C50540 * C9645) * C7777 +
             (C10616 * C9639 + C50540 * C9643) * C7782 + C11245 * C7776 +
             C11244 * C7781 + C11243 * C7775 + C11242 * C7780) *
                C50744 +
            (C10767 * C7777 + C10766 * C7782 + C10765 * C7776 + C10764 * C7781 +
             C10763 * C7775 + C10762 * C7780) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C391 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C392 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            ((C10616 * C1717 + C50540 * C1725) * C7780 +
             (C10616 * C1721 + C50540 * C1729) * C7775 +
             (C10616 * C4429 + C50540 * C4435) * C7781 +
             (C10616 * C4432 + C50540 * C4438) * C7776 +
             (C10616 * C10052 + C50540 * C10056) * C7782 +
             (C10616 * C10054 + C50540 * C10058) * C7777) *
                C50744) *
               C393) *
              C50590 * C251 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C392 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C391 -
           (((C10616 * C10053 + C50540 * C10057) * C7777 +
             (C10616 * C10051 + C50540 * C10055) * C7782 +
             (C10616 * C4431 + C50540 * C4437) * C7776 +
             (C10616 * C4428 + C50540 * C4434) * C7781 +
             (C10616 * C1720 + C50540 * C1728) * C7775 +
             (C10616 * C1716 + C50540 * C1724) * C7780) *
                C50744 +
            (C12917 + C12916 + C12915 + C12914 + C12913 + C12912) * C50850) *
               C393) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50839 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50590 * C50880 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50670 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50839) *
              C50590 * C50881 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C50839 -
           (((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
              C2162 * C418 + C2157 * C430) *
                 C50706 +
             (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
              C2162 * C400 + C2157 * C414) *
                 C121) *
                C50744 +
            ((C5699 + C5698 + C5697) * C50706 +
             (C5696 + C5695 + C5694) * C121) *
                C50850) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50839 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50590 * C50880 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50670 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50839) *
              C50590 * C50881 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C50839 -
           (((C10616 * C3494 + C50540 * C3500) * C7777 +
             (C10616 * C3491 + C50540 * C3497) * C7782 +
             (C10616 * C1088 + C50540 * C1096) * C7776 +
             (C10616 * C1084 + C50540 * C1092) * C7781 +
             (C10616 * C418 + C50540 * C430) * C7775 +
             (C10616 * C400 + C50540 * C414) * C7780) *
                C50744 +
            (C13229 + C13228 + C13227 + C13226 + C13233 + C13232) * C50850) *
               C50670) *
              C50590 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
             C2164 * C395 + C2159 * C409) *
                C121 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
             C2164 * C405 + C2159 * C425) *
                C50706) *
               C50744) *
              C50606 * C50590 * C113 -
          (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
             C2162 * C406 + C2157 * C426) *
                C50706 +
            (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
             C2162 * C396 + C2157 * C410) *
                C121) *
               C50744 +
           ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50706 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C121) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50706) *
               C50850 +
           ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
             C2164 * C402 + C2159 * C420) *
                C121 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
             C2164 * C421 + C2159 * C432) *
                C50706) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
             C2162 * C404 + C2157 * C424) *
                C50706 +
            (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
             C2162 * C394 + C2157 * C408) *
                C121) *
               C50744 +
           ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
             C2162 * C136 + C2157 * C146) *
                C50706 +
            (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
             C2162 * C125 + C2157 * C132) *
                C121) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
              C2164 * C395 + C2159 * C409) *
                 C121 +
             (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
              C2164 * C405 + C2159 * C425) *
                 C50706) *
                C50744) *
               C50606 * C248 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C249 +
           (((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50606 * C250) *
              C251 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C249 -
           (((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
              C2162 * C406 + C2157 * C426) *
                 C50706 +
             (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
              C2162 * C396 + C2157 * C410) *
                 C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C248 -
           (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50706 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C121) *
                C50744 +
            ((C2385 + C2384 + C2383) * C50706 +
             (C2382 + C2381 + C2380) * C121) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           ((C10616 * C397 + C50540 * C411) * C7780 +
            (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
            C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
               C50744) *
              C50606 * C50590 * C113 -
          ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
            (C10616 * C406 + C50540 * C426) * C7775 +
            (C10616 * C396 + C50540 * C410) * C7780) *
               C50744 +
           (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
            (C10616 * C134 + C50540 * C144) * C7775 +
            (C10616 * C123 + C50540 * C130) * C7780) *
               C50850) *
              C50606 * C50590 * C114 +
          (((C10616 * C124 + C50540 * C131) * C7780 +
            (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
            C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
               C50850 +
           ((C10616 * C395 + C50540 * C409) * C7780 +
            (C10616 * C405 + C50540 * C425) * C7775 +
            (C10616 * C777 + C50540 * C782) * C7781 +
            (C10616 * C786 + C50540 * C792) * C7776 +
            (C10616 * C1431 + C50540 * C1439) * C7782 +
            (C10616 * C1435 + C50540 * C1443) * C7777) *
               C50744) *
              C50606 * C50590 * C115 -
          (((C10616 * C1434 + C50540 * C1442) * C7777 +
            (C10616 * C1430 + C50540 * C1438) * C7782 +
            (C10616 * C787 + C50540 * C793) * C7776 +
            (C10616 * C778 + C50540 * C783) * C7781 +
            (C10616 * C404 + C50540 * C424) * C7775 +
            (C10616 * C394 + C50540 * C408) * C7780) *
               C50744 +
           ((C10616 * C278 + C50540 * C290) * C7777 +
            (C10616 * C260 + C50540 * C274) * C7782 +
            (C10616 * C263 + C50540 * C283) * C7776 +
            (C10616 * C253 + C50540 * C267) * C7781 +
            (C10616 * C136 + C50540 * C146) * C7775 +
            (C10616 * C125 + C50540 * C132) * C7780) *
               C50850) *
              C50606 * C50590 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            ((C10616 * C397 + C50540 * C411) * C7780 +
             (C10616 * C407 + C50540 * C427) * C7775 + C11239 * C7781 +
             C11238 * C7776 + C11237 * C7782 + C11236 * C7777) *
                C50744) *
               C50606 * C248 -
           ((C11234 * C7777 + C11235 * C7782 + C11236 * C7776 + C11237 * C7781 +
             C11238 * C7775 + C11239 * C7780) *
                C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C249 +
           ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
             C11874 * C7782 + C11875 * C7777) *
                C50744) *
               C50606 * C250) *
              C251 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C11240 * C7780 + C11241 * C7775 + C11242 * C7781 + C11243 * C7776 +
             C11244 * C7782 + C11245 * C7777) *
                C50744) *
               C50606 * C249 -
           ((C11243 * C7777 + C11242 * C7782 + C11241 * C7776 + C11240 * C7781 +
             (C10616 * C406 + C50540 * C426) * C7775 +
             (C10616 * C396 + C50540 * C410) * C7780) *
                C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C248 -
           (((C10616 * C9641 + C50540 * C9645) * C7777 +
             (C10616 * C9639 + C50540 * C9643) * C7782 + C11245 * C7776 +
             C11244 * C7781 + C11243 * C7775 + C11242 * C7780) *
                C50744 +
            (C10767 * C7777 + C10766 * C7782 + C10765 * C7776 + C10764 * C7781 +
             C10763 * C7775 + C10762 * C7780) *
                C50850) *
               C50606 * C250) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C50882 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50883 +
           (((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50883 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C50882 -
           (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
              C2162 * C1436 + C2157 * C1444) *
                 C50706 +
             (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
              C2162 * C1432 + C2157 * C1440) *
                 C121) *
                C50744 +
            ((C2385 + C2384 + C2383) * C50706 +
             (C2382 + C2381 + C2380) * C121) *
                C50850) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C50882 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50883 +
           ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
             C11874 * C7782 + C11875 * C7777) *
                C50744) *
               C50606 * C1199) *
              C50830 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
               C50606 * C50883 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C50882 -
           (((C10616 * C9641 + C50540 * C9645) * C7777 +
             (C10616 * C9639 + C50540 * C9643) * C7782 + C11245 * C7776 +
             C11244 * C7781 + C11243 * C7775 + C11242 * C7780) *
                C50744 +
            (C10767 * C7777 + C10766 * C7782 + C10765 * C7776 + C10764 * C7781 +
             C10763 * C7775 + C10762 * C7780) *
                C50850) *
               C50606 * C1199) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50839 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50882 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50670 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50839) *
              C50883 +
          ((((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C50839 -
           (((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
              C2162 * C3496 + C2157 * C3502) *
                 C50706 +
             (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
              C2162 * C3493 + C2157 * C3499) *
                 C121) *
                C50744 +
            ((C4037 + C4036 + C4035) * C50706 +
             (C4034 + C4033 + C4032) * C121) *
                C50850) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50839 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50882 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50670 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50839) *
              C50883 +
          (((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C14334 + C14335 + C14336 + C14337 + C14338 + C14339) * C50744) *
               C50839 -
           (((C10616 * C11518 + C50540 * C11520) * C7777 +
             (C10616 * C11517 + C50540 * C11519) * C7782 + C11539 * C7776 +
             C11538 * C7781 + C11537 * C7775 + C11536 * C7780) *
                C50744 +
            (C14339 + C14338 + C14337 + C14336 + C14335 + C14334) * C50850) *
               C50670) *
              C1199) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C5366 + C5367 + C5368) * C121 + (C5369 + C5370 + C5371) * C50706) *
               C50744) *
              C50606 * C964 -
          (((C3060 + C3061 + C3062) * C50706 + (C3063 + C3064 + C3065) * C121) *
               C50744 +
           ((C2367 + C2366 + C2365) * C50706 + (C2364 + C2363 + C2362) * C121) *
               C50850) *
              C50606 * C965 +
          (((C2373 + C2372 + C2371) * C121 + (C2370 + C2369 + C2368) * C50706) *
               C50850 +
           ((C4032 + C4033 + C4034) * C121 + (C4035 + C4036 + C4037) * C50706) *
               C50744) *
              C50606 * C966 -
          (((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50706 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C121) *
               C50744 +
           ((C3345 + C3344 + C3343) * C50706 + (C3342 + C3341 + C3340) * C121) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C893 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50642) *
              C895 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50642 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C50606 * C893 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50706 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50744 +
            ((C2695 + C2694 + C2693) * C50706 +
             (C2692 + C2691 + C2690) * C121) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C391 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C392 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
              C2164 * C1715 + C2159 * C1723) *
                 C121 +
             (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
              C2164 * C1719 + C2159 * C1727) *
                 C50706) *
                C50744) *
               C393) *
              C893 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C392 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C391 -
           (((C2164 * C4430 + C2159 * C4436 + C2163 * C4431 + C2158 * C4437 +
              C2162 * C4432 + C2157 * C4438) *
                 C50706 +
             (C2164 * C4427 + C2159 * C4433 + C2163 * C4428 + C2158 * C4434 +
              C2162 * C4429 + C2157 * C4435) *
                 C121) *
                C50744 +
            ((C3521 + C3520 + C3519) * C50706 +
             (C3518 + C3517 + C3516) * C121) *
                C50850) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C893 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
               C50606 * C50642 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C50606 * C893 -
           (((C10616 * C4010 + C50540 * C4016) * C7777 +
             (C10616 * C4007 + C50540 * C4013) * C7782 + C13075 * C7776 +
             C13074 * C7781 + C13073 * C7775 + C13072 * C7780) *
                C50744 +
            (C10981 * C7777 + C10980 * C7782 + C10979 * C7776 + C10978 * C7781 +
             C10977 * C7775 + C10976 * C7780) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
              C50606 * C964 -
          ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
           (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
            C10753 * C7775 + C10752 * C7780) *
               C50850) *
              C50606 * C965 +
          ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
            C10759 * C7782 + C10758 * C7777) *
               C50850 +
           (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
            C11874 * C7782 + C11875 * C7777) *
               C50744) *
              C50606 * C966 -
          (((C10616 * C11866 + C50540 * C11868) * C7777 +
            (C10616 * C11865 + C50540 * C11867) * C7782 + C11875 * C7776 +
            C11874 * C7781 + C11234 * C7775 + C11235 * C7780) *
               C50744 +
           (C11419 * C7777 + C11418 * C7782 + C10758 * C7776 + C10759 * C7781 +
            C10757 * C7775 + C10756 * C7780) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C391 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C392 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            ((C10616 * C1717 + C50540 * C1725) * C7780 +
             (C10616 * C1721 + C50540 * C1729) * C7775 + C13844 * C7781 +
             C13845 * C7776 + C13846 * C7782 + C13847 * C7777) *
                C50744) *
               C393) *
              C893 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C392 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C391 -
           (((C10616 * C12138 + C50540 * C12140) * C7777 +
             (C10616 * C12137 + C50540 * C12139) * C7782 + C13847 * C7776 +
             C13846 * C7781 + C13845 * C7775 + C13844 * C7780) *
                C50744 +
            (C13843 + C13842 + C13841 + C13840 + C13839 + C13838) * C50850) *
               C393) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50706) *
                 C50850 +
             ((C5366 + C5367 + C5368) * C121 +
              (C5369 + C5370 + C5371) * C50706) *
                 C50744) *
                C50839 -
            (((C5372 + C5373 + C5374) * C50706 +
              (C5375 + C5376 + C5377) * C121) *
                 C50744 +
             ((C5371 + C5370 + C5369) * C50706 +
              (C5368 + C5367 + C5366) * C121) *
                 C50850) *
                C50670) *
               C893 +
           ((((C3065 + C3064 + C3063) * C121 +
              (C3062 + C3061 + C3060) * C50706) *
                 C50850 +
             ((C3516 + C3517 + C3518) * C121 +
              (C3519 + C3520 + C3521) * C50706) *
                 C50744) *
                C50670 -
            (((C3060 + C3061 + C3062) * C50706 +
              (C3063 + C3064 + C3065) * C121) *
                 C50744 +
             ((C2367 + C2366 + C2365) * C50706 +
              (C2364 + C2363 + C2362) * C121) *
                 C50850) *
                C50839) *
               C50642) *
              C50830 +
          (((((C5378 + C5379 + C5380) * C121 +
              (C5381 + C5382 + C5383) * C50706) *
                 C50850 +
             ((C5384 + C5385 + C5386) * C121 +
              (C5387 + C5388 + C5389) * C50706) *
                 C50744) *
                C50670 -
            (((C5383 + C5382 + C5381) * C50706 +
              (C5380 + C5379 + C5378) * C121) *
                 C50744 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50706 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50850) *
                C50839) *
               C893 +
           ((((C2374 + C2375 + C2376) * C121 +
              (C2377 + C2378 + C2379) * C50706) *
                 C50850 +
             ((C3066 + C3067 + C3068) * C121 +
              (C3069 + C3070 + C3071) * C50706) *
                 C50744) *
                C50839 -
            (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
               C2162 * C1089 + C2157 * C1097) *
                  C50706 +
              (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
               C2162 * C1085 + C2157 * C1093) *
                  C121) *
                 C50744 +
             ((C3071 + C3070 + C3069) * C50706 +
              (C3068 + C3067 + C3066) * C121) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C7780 +
              (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
              C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                 C50850 +
             (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
                C50839 -
            ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
             (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
                C50670) *
               C893 +
           (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
             (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
                C50670 -
            ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
             (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 +
              C10754 * C7781 + C10753 * C7775 + C10752 * C7780) *
                 C50850) *
                C50839) *
               C50642) *
              C50830 +
          ((((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
             (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
                C50670 -
            ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
             (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 +
              C10760 * C7781 + (C10616 * C134 + C50540 * C144) * C7775 +
              (C10616 * C123 + C50540 * C130) * C7780) *
                 C50850) *
                C50839) *
               C893 +
           (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 +
              C10763 * C7776 + C10764 * C7782 + C10765 * C7777) *
                 C50850 +
             (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
                C50839 -
            (((C10616 * C9123 + C50540 * C9127) * C7777 +
              (C10616 * C9121 + C50540 * C9125) * C7782 + C12905 * C7776 +
              C12904 * C7781 + C12903 * C7775 + C12902 * C7780) *
                 C50744 +
             (C13439 + C13438 + C13437 + C13436 + C13435 + C13434) * C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50606 * C893 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50606 * C50642) *
              C895 +
          ((((C2374 + C2375 + C2376) * C121 +
             (C2377 + C2378 + C2379) * C50706) *
                C50850 +
            ((C3066 + C3067 + C3068) * C121 +
             (C3069 + C3070 + C3071) * C50706) *
                C50744) *
               C50606 * C50642 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C50606 * C893 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50706 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50744 +
            ((C2695 + C2694 + C2693) * C50706 +
             (C2692 + C2691 + C2690) * C121) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C5366 + C5367 + C5368) * C121 + (C5369 + C5370 + C5371) * C50706) *
               C50744) *
              C50606 * C964 -
          (((C3060 + C3061 + C3062) * C50706 + (C3063 + C3064 + C3065) * C121) *
               C50744 +
           ((C2367 + C2366 + C2365) * C50706 + (C2364 + C2363 + C2362) * C121) *
               C50850) *
              C50606 * C965 +
          (((C2373 + C2372 + C2371) * C121 + (C2370 + C2369 + C2368) * C50706) *
               C50850 +
           ((C4032 + C4033 + C4034) * C121 + (C4035 + C4036 + C4037) * C50706) *
               C50744) *
              C50606 * C966 -
          (((C2164 * C4010 + C2159 * C4016 + C2163 * C4011 + C2158 * C4017 +
             C2162 * C4012 + C2157 * C4018) *
                C50706 +
            (C2164 * C4007 + C2159 * C4013 + C2163 * C4008 + C2158 * C4014 +
             C2162 * C4009 + C2157 * C4015) *
                C121) *
               C50744 +
           ((C3345 + C3344 + C3343) * C50706 + (C3342 + C3341 + C3340) * C121) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50606 * C893 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50606 * C50642) *
              C895 +
          (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 + C10763 * C7776 +
             C10764 * C7782 + C10765 * C7777) *
                C50850 +
            (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
               C50606 * C50642 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50606 * C893) *
              C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C50606 * C893 -
           (((C10616 * C4010 + C50540 * C4016) * C7777 +
             (C10616 * C4007 + C50540 * C4013) * C7782 + C13075 * C7776 +
             C13074 * C7781 + C13073 * C7775 + C13072 * C7780) *
                C50744 +
            (C10981 * C7777 + C10980 * C7782 + C10979 * C7776 + C10978 * C7781 +
             C10977 * C7775 + C10976 * C7780) *
                C50850) *
               C50606 * C50642) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
              C50606 * C964 -
          ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
           (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
            C10753 * C7775 + C10752 * C7780) *
               C50850) *
              C50606 * C965 +
          ((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
            C10759 * C7782 + C10758 * C7777) *
               C50850 +
           (C11237 * C7780 + C11236 * C7775 + C11235 * C7781 + C11234 * C7776 +
            C11874 * C7782 + C11875 * C7777) *
               C50744) *
              C50606 * C966 -
          (((C10616 * C11866 + C50540 * C11868) * C7777 +
            (C10616 * C11865 + C50540 * C11867) * C7782 + C11875 * C7776 +
            C11874 * C7781 + C11234 * C7775 + C11235 * C7780) *
               C50744 +
           (C11419 * C7777 + C11418 * C7782 + C10758 * C7776 + C10759 * C7781 +
            C10757 * C7775 + C10756 * C7780) *
               C50850) *
              C50606 * C967) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50706) *
                 C50850 +
             ((C5366 + C5367 + C5368) * C121 +
              (C5369 + C5370 + C5371) * C50706) *
                 C50744) *
                C1544 -
            (((C5372 + C5373 + C5374) * C50706 +
              (C5375 + C5376 + C5377) * C121) *
                 C50744 +
             ((C5371 + C5370 + C5369) * C50706 +
              (C5368 + C5367 + C5366) * C121) *
                 C50850) *
                C50670) *
               C50838 +
           ((((C3065 + C3064 + C3063) * C121 +
              (C3062 + C3061 + C3060) * C50706) *
                 C50850 +
             ((C3516 + C3517 + C3518) * C121 +
              (C3519 + C3520 + C3521) * C50706) *
                 C50744) *
                C50670 -
            (((C3060 + C3061 + C3062) * C50706 +
              (C3063 + C3064 + C3065) * C121) *
                 C50744 +
             ((C2367 + C2366 + C2365) * C50706 +
              (C2364 + C2363 + C2362) * C121) *
                 C50850) *
                C1544) *
               C50642) *
              C50830 +
          (((((C5378 + C5379 + C5380) * C121 +
              (C5381 + C5382 + C5383) * C50706) *
                 C50850 +
             ((C5384 + C5385 + C5386) * C121 +
              (C5387 + C5388 + C5389) * C50706) *
                 C50744) *
                C50670 -
            (((C5383 + C5382 + C5381) * C50706 +
              (C5380 + C5379 + C5378) * C121) *
                 C50744 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50706 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50850) *
                C1544) *
               C50838 +
           ((((C2374 + C2375 + C2376) * C121 +
              (C2377 + C2378 + C2379) * C50706) *
                 C50850 +
             ((C3066 + C3067 + C3068) * C121 +
              (C3069 + C3070 + C3071) * C50706) *
                 C50744) *
                C1544 -
            (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
               C2162 * C1089 + C2157 * C1097) *
                  C50706 +
              (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
               C2162 * C1085 + C2157 * C1093) *
                  C121) *
                 C50744 +
             ((C3071 + C3070 + C3069) * C50706 +
              (C3068 + C3067 + C3066) * C121) *
                 C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10616 * C122 + C50540 * C129) * C7780 +
              (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
              C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                 C50850 +
             (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
                C1544 -
            ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
             (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
                C50670) *
               C50838 +
           (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
             (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
                C50670 -
            ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
             (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 +
              C10754 * C7781 + C10753 * C7775 + C10752 * C7780) *
                 C50850) *
                C1544) *
               C50642) *
              C50830 +
          ((((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
             (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
                C50670 -
            ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
             (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 +
              C10760 * C7781 + (C10616 * C134 + C50540 * C144) * C7775 +
              (C10616 * C123 + C50540 * C130) * C7780) *
                 C50850) *
                C1544) *
               C50838 +
           (((C10760 * C7780 + C10761 * C7775 + C10762 * C7781 +
              C10763 * C7776 + C10764 * C7782 + C10765 * C7777) *
                 C50850 +
             (C13434 + C13435 + C13436 + C13437 + C13438 + C13439) * C50744) *
                C1544 -
            (((C10616 * C9123 + C50540 * C9127) * C7777 +
              (C10616 * C9121 + C50540 * C9125) * C7782 + C12905 * C7776 +
              C12904 * C7781 + C12903 * C7775 + C12902 * C7780) *
                 C50744 +
             (C13439 + C13438 + C13437 + C13436 + C13435 + C13434) * C50850) *
                C50670) *
               C50642) *
              C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50884 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50885 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C7184 + C7185 + C7186) * C121 +
             (C7187 + C7188 + C7189) * C50706) *
                C50744) *
               C1960) *
              C50838 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50885 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C50884 -
           (((C2164 * C4430 + C2159 * C4436 + C2163 * C4431 + C2158 * C4437 +
              C2162 * C4432 + C2157 * C4438) *
                 C50706 +
             (C2164 * C4427 + C2159 * C4433 + C2163 * C4428 + C2158 * C4434 +
              C2162 * C4429 + C2157 * C4435) *
                 C121) *
                C50744 +
            ((C3521 + C3520 + C3519) * C50706 +
             (C3518 + C3517 + C3516) * C121) *
                C50850) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50884 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50885 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            (C14748 + C14749 + C14742 + C14743 + C14744 + C14745) * C50744) *
               C1960) *
              C50838 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50885 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C50884 -
           (((C10616 * C12138 + C50540 * C12140) * C7777 +
             (C10616 * C12137 + C50540 * C12139) * C7782 + C13847 * C7776 +
             C13846 * C7781 + C13845 * C7775 + C13844 * C7780) *
                C50744 +
            (C13843 + C13842 + C13841 + C13840 + C13839 + C13838) * C50850) *
               C1960) *
              C50642) *
         C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C1544 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C248 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50670 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C1544) *
              C249 +
          ((((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C1544 -
           (((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
              C2162 * C3496 + C2157 * C3502) *
                 C50706 +
             (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
              C2162 * C3493 + C2157 * C3499) *
                 C121) *
                C50744 +
            ((C4037 + C4036 + C4035) * C50706 +
             (C4034 + C4033 + C4032) * C121) *
                C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C1544 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50590 * C895 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50670 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C1544 -
           (((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
              C2162 * C418 + C2157 * C430) *
                 C50706 +
             (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
              C2162 * C400 + C2157 * C414) *
                 C121) *
                C50744 +
            ((C5699 + C5698 + C5697) * C50706 +
             (C5696 + C5695 + C5694) * C121) *
                C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50706) *
               C50850 +
           ((C5366 + C5367 + C5368) * C121 + (C5369 + C5370 + C5371) * C50706) *
               C50744) *
              C1710 -
          (((C5372 + C5373 + C5374) * C50706 + (C5375 + C5376 + C5377) * C121) *
               C50744 +
           ((C5371 + C5370 + C5369) * C50706 + (C5368 + C5367 + C5366) * C121) *
               C50850) *
              C1711 +
          (((C5377 + C5376 + C5375) * C121 + (C5374 + C5373 + C5372) * C50706) *
               C50850 +
           ((C7184 + C7185 + C7186) * C121 + (C7187 + C7188 + C7189) * C50706) *
               C50744) *
              C1712 -
          (((C2164 * C7162 + C2159 * C7168 + C2163 * C7163 + C2158 * C7169 +
             C2162 * C7164 + C2157 * C7170) *
                C50706 +
            (C2164 * C7159 + C2159 * C7165 + C2163 * C7160 + C2158 * C7166 +
             C2162 * C7161 + C2157 * C7167) *
                C121) *
               C50744 +
           ((C7189 + C7188 + C7187) * C50706 + (C7186 + C7185 + C7184) * C121) *
               C50850) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50590 * C895 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50670 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C1544 -
           (((C10616 * C3494 + C50540 * C3500) * C7777 +
             (C10616 * C3491 + C50540 * C3497) * C7782 +
             (C10616 * C1088 + C50540 * C1096) * C7776 +
             (C10616 * C1084 + C50540 * C1092) * C7781 +
             (C10616 * C418 + C50540 * C430) * C7775 +
             (C10616 * C400 + C50540 * C414) * C7780) *
                C50744 +
            (C13229 + C13228 + C13227 + C13226 + C13233 + C13232) * C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C248 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50670 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C1544) *
              C249 +
          (((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C14334 + C14335 + C14336 + C14337 + C14338 + C14339) * C50744) *
               C1544 -
           (((C10616 * C11518 + C50540 * C11520) * C7777 +
             (C10616 * C11517 + C50540 * C11519) * C7782 + C11539 * C7776 +
             C11538 * C7781 + C11537 * C7775 + C11536 * C7780) *
                C50744 +
            (C14339 + C14338 + C14337 + C14336 + C14335 + C14334) * C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10616 * C122 + C50540 * C129) * C7780 +
            (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
            C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
               C50850 +
           (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
              C1710 -
          ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
           (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
              C1711 +
          ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
           (C14748 + C14749 + C14742 + C14743 + C14744 + C14745) * C50744) *
              C1712 -
          (((C10616 * C14731 + C50540 * C14735) * C7777 +
            (C10616 * C14729 + C50540 * C14732) * C7782 +
            (C10616 * C14733 + C50540 * C14736) * C7776 +
            (C10616 * C14730 + C50540 * C14734) * C7781 +
            (C10616 * C7164 + C50540 * C7170) * C7775 +
            (C10616 * C7161 + C50540 * C7167) * C7780) *
               C50744 +
           (C14745 + C14744 + C14743 + C14742 + C14749 + C14748) * C50850) *
              C1713) *
         C50590 * C50571) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C50884 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50885 +
           (((C5377 + C5376 + C5375) * C121 +
             (C5374 + C5373 + C5372) * C50706) *
                C50850 +
            ((C7184 + C7185 + C7186) * C121 +
             (C7187 + C7188 + C7189) * C50706) *
                C50744) *
               C1960) *
              C50590 * C50830 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50885 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C50884 -
           (((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
              C2162 * C1720 + C2157 * C1728) *
                 C50706 +
             (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
              C2162 * C1716 + C2157 * C1724) *
                 C121) *
                C50744 +
            ((C5389 + C5388 + C5387) * C50706 +
             (C5386 + C5385 + C5384) * C121) *
                C50850) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C50884 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50885 +
           ((C12909 + C12908 + C12869 + C12868 + C12867 + C12866) * C50850 +
            (C14748 + C14749 + C14742 + C14743 + C14744 + C14745) * C50744) *
               C1960) *
              C50590 * C50830 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50885 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C50884 -
           (((C10616 * C10053 + C50540 * C10057) * C7777 +
             (C10616 * C10051 + C50540 * C10055) * C7782 +
             (C10616 * C4431 + C50540 * C4437) * C7776 +
             (C10616 * C4428 + C50540 * C4434) * C7781 +
             (C10616 * C1720 + C50540 * C1728) * C7775 +
             (C10616 * C1716 + C50540 * C1724) * C7780) *
                C50744 +
            (C12917 + C12916 + C12915 + C12914 + C12913 + C12912) * C50850) *
               C1960) *
              C50590 * C50577)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C1544 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C50590 * C895 +
          ((((C5378 + C5379 + C5380) * C121 +
             (C5381 + C5382 + C5383) * C50706) *
                C50850 +
            ((C5384 + C5385 + C5386) * C121 +
             (C5387 + C5388 + C5389) * C50706) *
                C50744) *
               C50670 -
           (((C5383 + C5382 + C5381) * C50706 +
             (C5380 + C5379 + C5378) * C121) *
                C50744 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50706 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50706) *
                C50850 +
            ((C5694 + C5695 + C5696) * C121 +
             (C5697 + C5698 + C5699) * C50706) *
                C50744) *
               C1544 -
           (((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
              C2162 * C418 + C2157 * C430) *
                 C50706 +
             (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
              C2162 * C400 + C2157 * C414) *
                 C121) *
                C50744 +
            ((C5699 + C5698 + C5697) * C50706 +
             (C5696 + C5695 + C5694) * C121) *
                C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50706) *
                C50850 +
            ((C5366 + C5367 + C5368) * C121 +
             (C5369 + C5370 + C5371) * C50706) *
                C50744) *
               C1544 -
           (((C5372 + C5373 + C5374) * C50706 +
             (C5375 + C5376 + C5377) * C121) *
                C50744 +
            ((C5371 + C5370 + C5369) * C50706 +
             (C5368 + C5367 + C5366) * C121) *
                C50850) *
               C50670) *
              C248 +
          ((((C3065 + C3064 + C3063) * C121 +
             (C3062 + C3061 + C3060) * C50706) *
                C50850 +
            ((C3516 + C3517 + C3518) * C121 +
             (C3519 + C3520 + C3521) * C50706) *
                C50744) *
               C50670 -
           (((C3060 + C3061 + C3062) * C50706 +
             (C3063 + C3064 + C3065) * C121) *
                C50744 +
            ((C2367 + C2366 + C2365) * C50706 +
             (C2364 + C2363 + C2362) * C121) *
                C50850) *
               C1544) *
              C249 +
          ((((C2373 + C2372 + C2371) * C121 +
             (C2370 + C2369 + C2368) * C50706) *
                C50850 +
            ((C4032 + C4033 + C4034) * C121 +
             (C4035 + C4036 + C4037) * C50706) *
                C50744) *
               C1544 -
           (((C2164 * C3494 + C2159 * C3500 + C2163 * C3495 + C2158 * C3501 +
              C2162 * C3496 + C2157 * C3502) *
                 C50706 +
             (C2164 * C3491 + C2159 * C3497 + C2163 * C3492 + C2158 * C3498 +
              C2162 * C3493 + C2157 * C3499) *
                 C121) *
                C50744 +
            ((C4037 + C4036 + C4035) * C50706 +
             (C4034 + C4033 + C4032) * C121) *
                C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C50590 * C895 +
          (((C12910 + C12911 + C12878 + C12879 + C12880 + C12881) * C50850 +
            (C12912 + C12913 + C12914 + C12915 + C12916 + C12917) * C50744) *
               C50670 -
           ((C12881 + C12880 + C12879 + C12878 + C12911 + C12910) * C50744 +
            (C10763 * C7777 + C10762 * C7782 + C10761 * C7776 + C10760 * C7781 +
             (C10616 * C134 + C50540 * C144) * C7775 +
             (C10616 * C123 + C50540 * C130) * C7780) *
                C50850) *
               C1544) *
              C50590 * C896 +
          ((((C10616 * C124 + C50540 * C131) * C7780 +
             (C10616 * C135 + C50540 * C145) * C7775 + C10976 * C7781 +
             C10977 * C7776 + C10978 * C7782 + C10979 * C7777) *
                C50850 +
            (C13232 + C13233 + C13226 + C13227 + C13228 + C13229) * C50744) *
               C1544 -
           (((C10616 * C3494 + C50540 * C3500) * C7777 +
             (C10616 * C3491 + C50540 * C3497) * C7782 +
             (C10616 * C1088 + C50540 * C1096) * C7776 +
             (C10616 * C1084 + C50540 * C1092) * C7781 +
             (C10616 * C418 + C50540 * C430) * C7775 +
             (C10616 * C400 + C50540 * C414) * C7780) *
                C50744 +
            (C13229 + C13228 + C13227 + C13226 + C13233 + C13232) * C50850) *
               C50670) *
              C50590 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10616 * C122 + C50540 * C129) * C7780 +
             (C10616 * C133 + C50540 * C143) * C7775 + C10752 * C7781 +
             C10753 * C7776 + C10754 * C7782 + C10755 * C7777) *
                C50850 +
            (C12906 + C12907 + C12862 + C12863 + C12864 + C12865) * C50744) *
               C1544 -
           ((C12866 + C12867 + C12868 + C12869 + C12908 + C12909) * C50744 +
            (C12865 + C12864 + C12863 + C12862 + C12907 + C12906) * C50850) *
               C50670) *
              C248 +
          (((C13428 + C13429 + C13430 + C13431 + C13432 + C13433) * C50850 +
            (C13838 + C13839 + C13840 + C13841 + C13842 + C13843) * C50744) *
               C50670 -
           ((C13433 + C13432 + C13431 + C13430 + C13429 + C13428) * C50744 +
            (C10757 * C7777 + C10756 * C7782 + C10755 * C7776 + C10754 * C7781 +
             C10753 * C7775 + C10752 * C7780) *
                C50850) *
               C1544) *
              C249 +
          (((C10754 * C7780 + C10755 * C7775 + C10756 * C7781 + C10757 * C7776 +
             C10759 * C7782 + C10758 * C7777) *
                C50850 +
            (C14334 + C14335 + C14336 + C14337 + C14338 + C14339) * C50744) *
               C1544 -
           (((C10616 * C11518 + C50540 * C11520) * C7777 +
             (C10616 * C11517 + C50540 * C11519) * C7782 + C11539 * C7776 +
             C11538 * C7781 + C11537 * C7775 + C11536 * C7780) *
                C50744 +
            (C14339 + C14338 + C14337 + C14336 + C14335 + C14334) * C50850) *
               C50670) *
              C250) *
         C50571) /
            (p * q * std::sqrt(p + q));
}
