/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49731 = ae + be;
    const double C49730 = ae * be;
    const double C49729 = yA - yB;
    const double C49748 = 0 * be;
    const double C49781 = 0 * ae;
    const double C49773 = 0 * be;
    const double C49839 = p + q;
    const double C49838 = p * q;
    const double C49847 = std::pow(ae, 2);
    const double C49845 = bs[3];
    const double C49844 = yP - yQ;
    const double C49853 = bs[4];
    const double C49851 = xP - xQ;
    const double C49861 = bs[5];
    const double C49870 = bs[6];
    const double C49881 = bs[7];
    const double C49900 = bs[2];
    const double C49985 = zP - zQ;
    const double C119 = bs[0];
    const double C50591 = xA - xB;
    const double C50619 = ce + de;
    const double C50618 = ce * de;
    const double C50617 = xC - xD;
    const double C50641 = yC - yD;
    const double C50657 = zC - zD;
    const double C50749 = zA - zB;
    const double C49750 = 2 * C49731;
    const double C49749 = std::pow(C49731, 2);
    const double C49752 = 2 * C49730;
    const double C49736 = C49730 * C49729;
    const double C50754 = std::pow(C49729, 2);
    const double C50770 = C49729 * be;
    const double C50769 = C49729 * ae;
    const double C49776 = C49729 * C49748;
    const double C49775 = -2 * C49748;
    const double C49789 = C49781 / C49731;
    const double C49840 = 2 * C49838;
    const double C49848 = std::pow(C49844, 2);
    const double C49893 = C49844 * ae;
    const double C49863 = std::pow(C49851, 2);
    const double C50036 = std::pow(C49985, 2);
    const double C50594 = C50591 * be;
    const double C50593 = C50591 * ae;
    const double C50592 = std::pow(C50591, 2);
    const double C50621 = 2 * C50619;
    const double C50631 = std::pow(C50619, 2);
    const double C50623 = C50617 * de;
    const double C50622 = C50617 * ce;
    const double C50620 = std::pow(C50617, 2);
    const double C50642 = std::pow(C50641, 2);
    const double C50694 = C50641 * de;
    const double C50693 = C50641 * ce;
    const double C50658 = std::pow(C50657, 2);
    const double C50722 = C50657 * de;
    const double C50721 = C50657 * ce;
    const double C50784 = std::pow(C50749, 2);
    const double C50796 = C50749 * be;
    const double C50795 = C50749 * ae;
    const double C50602 = std::pow(C49750, -1);
    const double C50885 = std::pow(C49750, -2);
    const double C49777 = 2 * C49749;
    const double C49774 = C49749 * C49750;
    const double C50863 = 4 * C49749;
    const double C50755 = C50754 * C49730;
    const double C49784 = C49776 / C49731;
    const double C49783 = ae * C49775;
    const double C49842 = C49840 / C49839;
    const double C133 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C49840 / C49839, 2) -
          (bs[1] * C49840) / C49839) *
         std::pow(ae, 2)) /
        C49749;
    const double C120 = -(C49851 * bs[1] * C49840) / C49839;
    const double C278 = -(C49844 * bs[1] * C49840) / C49839;
    const double C449 = -(C49985 * bs[1] * C49840) / C49839;
    const double C49855 = C49848 * C49853;
    const double C49864 = C49848 * C49861;
    const double C49872 = C49848 * C49870;
    const double C49884 = C49848 * C49881;
    const double C49894 = C49853 * C49893;
    const double C49903 = C49845 * C49893;
    const double C49917 = C49861 * C49893;
    const double C49929 = C49870 * C49893;
    const double C49950 = C49881 * C49893;
    const double C126 = (-(bs[1] * C49893 * C49840) / C49839) / C49731;
    const double C50595 = C50592 * C49730;
    const double C50632 = std::pow(C50621, -1);
    const double C50872 = std::pow(C50621, -2);
    const double C50636 = 2 * C50631;
    const double C50870 = 4 * C50631;
    const double C50624 = C50620 * C50618;
    const double C50643 = C50642 * C50618;
    const double C50659 = C50658 * C50618;
    const double C50785 = C50784 * C49730;
    const double C49788 = C49748 / C49777;
    const double C49785 = C49773 / C49777;
    const double C50756 = C50755 / C49731;
    const double C49790 = 0 - C49784;
    const double C49846 = -C49842;
    const double C49854 = std::pow(C49842, 4);
    const double C49871 = std::pow(C49842, 6);
    const double C49899 = std::pow(C49842, 2);
    const double C134 = ((xP - xQ) *
                         (bs[2] * std::pow(C49842, 2) +
                          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C49842, 3)) *
                         std::pow(ae, 2)) /
                        C49749;
    const double C50596 = C50595 / C49731;
    const double C50625 = C50624 / C50619;
    const double C50644 = C50643 / C50619;
    const double C50660 = C50659 / C50619;
    const double C50786 = C50785 / C49731;
    const double C50757 = -C50756;
    const double C49794 = C49790 * ae;
    const double C49849 = std::pow(C49846, 3);
    const double C49862 = std::pow(C49846, 5);
    const double C49882 = std::pow(C49846, 7);
    const double C49856 = C49855 * C49854;
    const double C49860 = C49853 * C49854;
    const double C49895 = C49854 * C49894;
    const double C49873 = C49872 * C49871;
    const double C49880 = C49870 * C49871;
    const double C49933 = C49871 * C49929;
    const double C49902 = C49900 * C49899;
    const double C127 = (C49851 * C49899 * C49900 * C49893) / C49731;
    const double C288 = (C49844 * C49899 * C49900 * C49893) / C49731 -
                        (ae * bs[1] * C49840) / (C49839 * C49731);
    const double C459 = (C49985 * C49899 * C49900 * C49893) / C49731;
    const double C50597 = -C50596;
    const double C50626 = -C50625;
    const double C50645 = -C50644;
    const double C50661 = -C50660;
    const double C50787 = -C50786;
    const double C50758 = std::exp(C50757);
    const double C49796 = C49794 / C49731;
    const double C49852 = C49845 * C49849;
    const double C49904 = C49849 * C49903;
    const double C135 =
        ((bs[2] * std::pow(C49842, 2) + C49848 * C49845 * C49849) * C49847 +
         (C49845 * C49849 + C49848 * bs[4] * std::pow(C49842, 4)) * C49847 *
             std::pow(xP - xQ, 2)) /
        C49749;
    const double C298 =
        (2 * ae * C49899 * C49900 * C49893 +
         C49844 * (C49900 * C49899 + C49848 * C49845 * C49849) * C49847) /
        C49749;
    const double C49865 = C49864 * C49862;
    const double C49869 = C49861 * C49862;
    const double C49919 = C49862 * C49917;
    const double C49885 = C49884 * C49882;
    const double C49955 = C49882 * C49950;
    const double C49918 = C49860 * C49863;
    const double C49930 = C49851 * C49860;
    const double C50109 = C49860 * C49848;
    const double C50108 = C49844 * C49860;
    const double C50107 = C49860 * ae;
    const double C50575 = C49860 * C50036;
    const double C50581 = C49985 * C49860;
    const double C49910 = C49851 * C49895;
    const double C50025 = C49844 * C49895;
    const double C50103 = ae * C49895;
    const double C49953 = C49880 * C49863;
    const double C50168 = C49851 * C49880;
    const double C50301 = C49880 * C49848;
    const double C50300 = C49844 * C49880;
    const double C50299 = C49880 * ae;
    const double C49936 = C49933 * C49863;
    const double C49949 = C49851 * C49933;
    const double C50206 = C49844 * C49933;
    const double C50293 = ae * C49933;
    const double C50341 = C49933 * C50036;
    const double C50360 = C49985 * C49933;
    const double C49905 = C49902 * ae;
    const double C469 =
        ((zP - zQ) * (C49902 + C49848 * C49845 * C49849) * C49847) / C49749;
    const double C121 = C49902 * C49863 - (bs[1] * C49840) / C49839;
    const double C277 = C49844 * C49851 * C49902;
    const double C279 = C49902 * C49848 - (bs[1] * C49840) / C49839;
    const double C448 = C49985 * C49851 * C49902;
    const double C450 = C49902 * C50036 - (bs[1] * C49840) / C49839;
    const double C867 = C49985 * C49844 * C49902;
    const double C50598 = std::exp(C50597);
    const double C50627 = std::exp(C50626);
    const double C50646 = std::exp(C50645);
    const double C50662 = std::exp(C50661);
    const double C50788 = std::exp(C50787);
    const double C144 = C50758 * C134;
    const double C49737 = C49736 * C50758;
    const double C117 =
        -((C50758 - (C49729 * 2 * C49730 * C49729 * C50758) / C49731) * 2 *
          C49730) /
        C49731;
    const double C118 = -(2 * C49730 * C49729 * C50758) / C49731;
    const double C50771 = C50758 * C50769;
    const double C50774 = C50602 * C50758;
    const double C50888 = C50758 * C50770;
    const double C50887 = C50758 / C49750;
    const double C7924 = C50885 * C50758;
    const double C49797 = C49796 - C49785;
    const double C49857 = C49852 + C49856;
    const double C49911 = C49851 * C49852;
    const double C50027 = C49844 * C49852;
    const double C50026 = C49852 * ae;
    const double C122 =
        2 * C49851 * C49902 + C49851 * (C49902 + C49852 * C49863);
    const double C276 = C49844 * (C49902 + C49852 * C49863);
    const double C447 = C49985 * (C49902 + C49852 * C49863);
    const double C1079 =
        2 * C49844 * C49902 + C49844 * (C49902 + C49852 * C49848);
    const double C1540 = C49985 * (C49902 + C49852 * C49848);
    const double C1824 =
        2 * C49985 * C49902 + C49985 * (C49902 + C49852 * C50036);
    const double C7320 =
        3 * (C49902 + C49852 * C50036) +
        C49985 * (2 * C49985 * C49852 + C49985 * (C49852 + C49860 * C50036));
    const double C49906 = C49844 * C49904;
    const double C128 = (C49899 * C49900 * C49893 + C49904 * C49863) / C49731;
    const double C129 =
        (2 * C49851 * C49904 + C49851 * (C49904 + C49895 * C49863)) / C49731;
    const double C286 = (C49844 * (C49904 + C49895 * C49863) +
                         (C49902 + C49852 * C49863) * ae) /
                        C49731;
    const double C287 =
        (C49844 * C49851 * C49904 + C49851 * C49902 * ae) / C49731;
    const double C457 = (C49985 * (C49904 + C49895 * C49863)) / C49731;
    const double C458 = (C49985 * C49851 * C49904) / C49731;
    const double C460 = (C49899 * C49900 * C49893 + C49904 * C50036) / C49731;
    const double C1828 =
        (2 * C49985 * C49904 + C49985 * (C49904 + C49895 * C50036)) / C49731;
    const double C147 = C50758 * C135;
    const double C49866 = C49860 + C49865;
    const double C49874 = C49869 + C49873;
    const double C49931 = C49869 * C49863;
    const double C49952 = C49851 * C49869;
    const double C50209 = C49869 * C49848;
    const double C50208 = C49844 * C49869;
    const double C50207 = C49869 * ae;
    const double C50582 = C49869 * C50036;
    const double C49921 = C49919 * C49863;
    const double C49928 = C49851 * C49919;
    const double C50106 = C49844 * C49919;
    const double C50202 = ae * C49919;
    const double C50268 = C49985 * C49919;
    const double C50484 = C49919 * C50036;
    const double C7323 =
        (3 * (C49904 + C49895 * C50036) +
         C49985 * (2 * C49985 * C49895 + C49985 * (C49895 + C49919 * C50036))) /
        C49731;
    const double C49886 = C49880 + C49885;
    const double C49958 = C49955 * C49863;
    const double C50167 = C49851 * C49955;
    const double C50298 = C49844 * C49955;
    const double C49920 = C49852 + C49918;
    const double C49934 = 2 * C49930;
    const double C50016 = C49844 * C49930;
    const double C50015 = C49930 * ae;
    const double C50113 = C49852 + C50109;
    const double C50112 = C50108 * ae;
    const double C50210 = 2 * C50108;
    const double C50576 = C49852 + C50575;
    const double C50583 = 2 * C50581;
    const double C49912 = C49844 * C49910;
    const double C461 = (C49851 * C49904 + C49910 * C50036) / C49731;
    const double C50110 = 2 * C50103;
    const double C49957 = C49869 + C49953;
    const double C50176 = C50168 * C49848;
    const double C50175 = C49844 * C50168;
    const double C50174 = C50168 * ae;
    const double C50309 = C49869 + C50301;
    const double C50308 = C50300 * ae;
    const double C49938 = C49919 + C49936;
    const double C49954 = 2 * C49949;
    const double C50083 = C49844 * C49949;
    const double C50163 = ae * C49949;
    const double C50255 = C49985 * C49949;
    const double C50481 = C49949 * C50036;
    const double C50306 = 2 * C50293;
    const double C50346 = C49919 + C50341;
    const double C50367 = ae * C50360;
    const double C5487 = C50758 * C469;
    const double C50599 = C50598 * C50593;
    const double C50603 = C50602 * C50598;
    const double C50859 = C50598 / C49750;
    const double C50858 = C50598 * C50594;
    const double C2268 = C50885 * C50598;
    const double C50628 = C50627 * C50622;
    const double C50633 = C50632 * C50627;
    const double C50867 = C50627 * C50623;
    const double C50864 = C50627 / C50621;
    const double C1004 = C50872 * C50627;
    const double C50695 = C50646 * C50693;
    const double C50698 = C50632 * C50646;
    const double C50876 = C50646 * C50694;
    const double C50871 = C50646 / C50621;
    const double C272 = C50872 * C50646;
    const double C50723 = C50662 * C50721;
    const double C50726 = C50632 * C50662;
    const double C50880 = C50662 * C50722;
    const double C50873 = C50662 / C50621;
    const double C445 = C50872 * C50662;
    const double C50797 = C50788 * C50795;
    const double C50800 = C50602 * C50788;
    const double C50893 = C50788 * C50796;
    const double C50892 = C50788 / C49750;
    const double C15432 = C50885 * C50788;
    const double C49751 = 2 * C49737;
    const double C49782 = C49737 / C49749;
    const double C49778 = -4 * C49737;
    const double C2269 =
        (((-4 * C49737) / C49731 -
          (C49729 * (C50758 - (C49729 * 2 * C49737) / C49731) * 2 * C49730) /
              C49731) *
         ae) /
        C49731;
    const double C2270 =
        ((C50758 - (C49729 * 2 * C49737) / C49731) * ae) / C49731 -
        (0 * be) / (2 * std::pow(C49731, 2));
    const double C2271 =
        (-((C50758 - (C49729 * 2 * C49737) / C49731) * 2 * C49730) / C49731) /
        (2 * C49731);
    const double C2272 = (0 * ae) / C49731 - C49737 / std::pow(C49731, 2);
    const double C145 = C117 * C121;
    const double C142 = C117 * C120;
    const double C312 = C117 * C277;
    const double C483 = C117 * C448;
    const double C5492 = C117 * C450;
    const double C5486 = C117 * C449;
    const double C6007 = C117 * C867;
    const double C143 = C118 * C127;
    const double C141 = C118 * C126;
    const double C315 = C118 * C288;
    const double C486 = C118 * C459;
    const double C50890 = C50771 / C49777;
    const double C50889 = C50771 * C50770;
    const double C50884 = C50771 / C49731;
    const double C50777 = C50774 * C50770;
    const double C10796 = C50774 / C50863;
    const double C25610 = C50774 / C49750;
    const double C50909 = C50888 / C49731;
    const double C7923 = (-2 * C50602 * C50888) / C49731;
    const double C7922 = (C50758 * std::pow(C50770, 2)) / C49749 + C50887;
    const double C49858 = C49857 * C49847;
    const double C49913 = C49911 * ae;
    const double C280 = C49851 * C49902 + C49911 * C49848;
    const double C451 = C49851 * C49902 + C49911 * C50036;
    const double C868 = C49985 * C49844 * C49911;
    const double C1078 =
        2 * C49844 * C49911 + C49844 * (C49911 + C49930 * C49848);
    const double C1539 = C49985 * (C49911 + C49930 * C49848);
    const double C1823 =
        2 * C49985 * C49911 + C49985 * (C49911 + C49930 * C50036);
    const double C50029 = C50027 * ae;
    const double C1193 = C49844 * C49902 + C50027 * C50036;
    const double C4584 =
        2 * C49985 * C50027 + C49985 * (C50027 + C50108 * C50036);
    const double C50028 = C50025 + C50026;
    const double C148 = C117 * C122;
    const double C309 = C117 * C276;
    const double C480 = C117 * C447;
    const double C6918 = C117 * C1540;
    const double C7328 = C117 * C1824;
    const double C17552 = C117 * C7320;
    const double C49907 = C49906 + C49905;
    const double C146 = C118 * C128;
    const double C149 = C118 * C129;
    const double C310 = C118 * C286;
    const double C313 = C118 * C287;
    const double C481 = C118 * C457;
    const double C484 = C118 * C458;
    const double C487 = C118 * C460;
    const double C1837 = C118 * C1828;
    const double C49867 = C49866 * C49847;
    const double C49875 = C49874 * C49847;
    const double C49935 = C49860 + C49931;
    const double C49956 = 2 * C49952;
    const double C50086 = C49952 * C49848;
    const double C50085 = C49844 * C49952;
    const double C50084 = C49952 * ae;
    const double C50572 = C49952 * C50036;
    const double C7319 =
        3 * (C49911 + C49930 * C50036) +
        C49985 * (2 * C49985 * C49930 + C49985 * (C49930 + C49952 * C50036));
    const double C50215 = C49860 + C50209;
    const double C50214 = C50208 * ae;
    const double C50302 = 2 * C50208;
    const double C50578 = C50208 * C50036;
    const double C14823 =
        3 * (C50027 + C50108 * C50036) +
        C49985 * (2 * C49985 * C50108 + C49985 * (C50108 + C50208 * C50036));
    const double C50213 = C50206 + C50207;
    const double C50584 = C49860 + C50582;
    const double C49923 = C49895 + C49921;
    const double C49932 = 2 * C49928;
    const double C50014 = C49844 * C49928;
    const double C50080 = ae * C49928;
    const double C1827 =
        (2 * C49985 * C49910 + C49985 * (C49910 + C49928 * C50036)) / C49731;
    const double C7322 =
        (3 * (C49910 + C49928 * C50036) +
         C49985 * (2 * C49985 * C49928 + C49985 * (C49928 + C49949 * C50036))) /
        C49731;
    const double C50111 = C50106 + C50107;
    const double C50212 = 2 * C50202;
    const double C50273 = ae * C50268;
    const double C50488 = 2 * C50268;
    const double C50485 = C49895 + C50484;
    const double C7334 = C118 * C7323;
    const double C49887 = C49886 * C49847;
    const double C49960 = C49933 + C49958;
    const double C50173 = C49844 * C50167;
    const double C50307 = C50298 + C50299;
    const double C49922 = C49920 * ae;
    const double C123 = 3 * (C49902 + C49852 * C49863) +
                        C49851 * (2 * C49911 + C49851 * C49920);
    const double C275 = C49844 * (2 * C49911 + C49851 * C49920);
    const double C281 = C49902 + C49852 * C49863 + C49920 * C49848;
    const double C446 = C49985 * (2 * C49911 + C49851 * C49920);
    const double C452 = C49902 + C49852 * C49863 + C49920 * C50036;
    const double C869 = C49985 * C49844 * C49920;
    const double C50018 = C50016 * ae;
    const double C1192 = C49844 * C49911 + C50016 * C50036;
    const double C50116 = C50113 * ae;
    const double C3517 = 3 * (C49902 + C49852 * C49848) +
                         C49844 * (2 * C50027 + C49844 * C50113);
    const double C3678 = C49902 + C49852 * C49848 + C50113 * C50036;
    const double C4179 = C49985 * (2 * C50027 + C49844 * C50113);
    const double C17545 =
        4 * (2 * C49985 * C49852 + C49985 * C50576) +
        C49985 * (3 * C50576 + C49985 * (2 * C49985 * C49860 +
                                         C49985 * (C49860 + C49869 * C50036)));
    const double C489 = C118 * C461;
    const double C49959 = C49851 * C49957;
    const double C50063 = C49957 * C49848;
    const double C50062 = C49844 * C49957;
    const double C50061 = C49957 * ae;
    const double C50180 = C49952 + C50176;
    const double C50179 = C50175 * ae;
    const double C50314 = C49844 * C50309;
    const double C50313 = C50309 * ae;
    const double C49940 = C49851 * C49938;
    const double C49948 = 3 * C49938;
    const double C50002 = C49844 * C49938;
    const double C50057 = ae * C49938;
    const double C50171 = 2 * C50163;
    const double C50260 = ae * C50255;
    const double C50482 = C49928 + C50481;
    const double C50351 = ae * C50346;
    const double C50489 = C49985 * C50346;
    const double C50373 = 2 * C50367;
    const double C50861 = C50599 / C49777;
    const double C50860 = C50599 * C50594;
    const double C50857 = C50599 / C49731;
    const double C50606 = C50603 * C50594;
    const double C109 = C50603 / C50863;
    const double C22731 = C50603 / C49750;
    const double C2266 = (C50598 * std::pow(C50594, 2)) / C49749 + C50859;
    const double C50897 = C50858 / C49731;
    const double C2267 = (-2 * C50602 * C50858) / C49731;
    const double C50868 = C50628 / C50636;
    const double C50866 = C50628 / C50619;
    const double C50865 = C50628 * C50623;
    const double C1003 = (2 * C50632 * C50628) / C50619;
    const double C50869 = C50633 * C50623;
    const double C116 = C50633 / C50870;
    const double C618 = C50633 / C50621;
    const double C50901 = C50867 / C50619;
    const double C1002 = (C50627 * std::pow(C50622, 2)) / C50631 + C50864;
    const double C50878 = C50695 / C50636;
    const double C50877 = C50695 * C50694;
    const double C50874 = C50695 / C50619;
    const double C271 = (2 * C50632 * C50695) / C50619;
    const double C50879 = C50698 * C50694;
    const double C1074 = C50698 / C50870;
    const double C1306 = C50698 / C50621;
    const double C50903 = C50876 / C50619;
    const double C270 = (C50646 * std::pow(C50693, 2)) / C50631 + C50871;
    const double C50882 = C50723 / C50636;
    const double C50881 = C50723 * C50722;
    const double C50875 = C50723 / C50619;
    const double C444 = (2 * C50632 * C50723) / C50619;
    const double C50883 = C50726 * C50722;
    const double C1820 = C50726 / C50870;
    const double C2067 = C50726 / C50621;
    const double C50906 = C50880 / C50619;
    const double C443 = (C50662 * std::pow(C50721, 2)) / C50631 + C50873;
    const double C50895 = C50797 / C49777;
    const double C50894 = C50797 * C50796;
    const double C50886 = C50797 / C49731;
    const double C50803 = C50800 * C50796;
    const double C20886 = C50800 / C50863;
    const double C38264 = C50800 / C49750;
    const double C50912 = C50893 / C49731;
    const double C15431 = (-2 * C50602 * C50893) / C49731;
    const double C15430 = (C50788 * std::pow(C50796, 2)) / C49749 + C50892;
    const double C49753 = C49729 * C49751;
    const double C7932 =
        ((-C49751 / C49731) / C49750 - (0 * be) / C49731) / C49750 -
        (0 * be) / C49731;
    const double C22735 = (-C49751 / C49731) / C49750 - (0 * be) / C49731;
    const double C49793 = C49789 - C49782;
    const double C49786 = C49778 / C49731;
    const double C2291 = C2269 * C122;
    const double C2282 = C2269 * C121;
    const double C2276 = C2269 * C120;
    const double C2483 = C2269 * C277;
    const double C2477 = C2269 * C276;
    const double C2685 = C2269 * C448;
    const double C2679 = C2269 * C447;
    const double C18451 = C2269 * C1824;
    const double C18445 = C2269 * C450;
    const double C18441 = C2269 * C449;
    const double C18975 = C2269 * C867;
    const double C19903 = C2269 * C1540;
    const double C20319 = C2269 * C7320;
    const double C2292 = C2270 * C129;
    const double C2283 = C2270 * C128;
    const double C2277 = C2270 * C127;
    const double C2274 = C2270 * C126;
    const double C2487 = C2270 * C288;
    const double C2484 = C2270 * C287;
    const double C2478 = C2270 * C286;
    const double C2693 = C2270 * C461;
    const double C2690 = C2270 * C460;
    const double C2689 = C2270 * C459;
    const double C2686 = C2270 * C458;
    const double C2680 = C2270 * C457;
    const double C4597 = C2270 * C1828;
    const double C18453 = C2270 * C7323;
    const double C2285 = C2271 * C276;
    const double C2279 = C2271 * C277;
    const double C18443 = C2271 * C867;
    const double C18977 = C2271 * C1540;
    const double C2286 = C2272 * C286;
    const double C2280 = C2272 * C287;
    const double C2275 = C2272 * C288;
    const double C158 = C142 + C143;
    const double C5504 = C5486 + C486;
    const double C50910 = C50889 / C49749;
    const double C2284 = C50884 * C135;
    const double C2278 = C50884 * C134;
    const double C18442 = C50884 * C469;
    const double C50891 = C50777 / C49731;
    const double C22727 = -C50909;
    const double C7954 = C7922 * C135;
    const double C7939 = C7922 * C134;
    const double C12988 = C7922 * C469;
    const double C136 =
        (2 * C49851 * C49858 +
         C49851 * (C49858 +
                   (C49853 * C49854 + C49848 * bs[5] * std::pow(C49846, 5)) *
                       C49847 * std::pow(C49851, 2))) /
        C49749;
    const double C297 = (2 * ae * C49851 * C49849 * C49845 * C49893 +
                         C49844 * C49851 * C49858) /
                        C49749;
    const double C468 = ((zP - zQ) * C49851 * C49858) / C49749;
    const double C470 = ((C49902 + C49848 * C49845 * C49849) * C49847 +
                         C49858 * std::pow(zP - zQ, 2)) /
                        C49749;
    const double C877 =
        (2 * ae * C49985 * C49904 + C49844 * C49985 * C49858) / C49749;
    const double C49914 = C49912 + C49913;
    const double C317 = C117 * C280;
    const double C2490 = C2269 * C280;
    const double C2480 = C2271 * C280;
    const double C488 = C117 * C451;
    const double C2692 = C2269 * C451;
    const double C884 = C117 * C868;
    const double C2682 = C2271 * C868;
    const double C3246 = C2269 * C868;
    const double C2493 = C2271 * C1078;
    const double C3249 = C2271 * C1539;
    const double C5330 = C117 * C1539;
    const double C34979 = C2269 * C1539;
    const double C5494 = C117 * C1823;
    const double C18455 = C2269 * C1823;
    const double C6421 = C117 * C1193;
    const double C18447 = C2271 * C1193;
    const double C18979 = C2269 * C1193;
    const double C16648 = C117 * C4584;
    const double C18449 = C2271 * C4584;
    const double C19403 = C2269 * C4584;
    const double C50031 = ae * C50028;
    const double C50030 = C49844 * C50028;
    const double C50050 = C49985 * C50028;
    const double C50105 = 2 * C50028;
    const double C49908 = ae * C49907;
    const double C289 =
        (C49899 * C49900 * C49893 + C49844 * C49907 + C49844 * C49902 * ae) /
        C49731;
    const double C872 = (C49985 * C49907) / C49731;
    const double C1197 = (C49907 + C50028 * C50036) / C49731;
    const double C159 = C145 + C146;
    const double C160 = C148 + C149;
    const double C329 = C309 + C310;
    const double C330 = C312 + C313;
    const double C500 = C480 + C481;
    const double C501 = C483 + C484;
    const double C5505 = C5492 + C487;
    const double C7335 = C7328 + C1837;
    const double C50013 = C49851 * C49867;
    const double C50104 = C49844 * C49867;
    const double C50150 = C49985 * C49867;
    const double C137 =
        (3 * (C49858 + C49867 * C49863) +
         C49851 * (2 * C49851 * C49867 +
                   C49851 * (C49867 + (C49861 * C49862 +
                                       C49848 * bs[6] * std::pow(C49842, 6)) *
                                          C49847 * C49863))) /
        C49749;
    const double C296 = (2 * ae * (C49849 * C49845 * C49893 + C49895 * C49863) +
                         C49844 * (C49858 + C49867 * C49863)) /
                        C49749;
    const double C467 = ((zP - zQ) * (C49858 + C49867 * C49863)) / C49749;
    const double C471 =
        (C49851 * C49858 + C49851 * C49867 * std::pow(zP - zQ, 2)) / C49749;
    const double C878 =
        (2 * ae * C49985 * C49910 + C49844 * C49985 * C49851 * C49867) / C49749;
    const double C1201 = (2 * ae * (C49904 + C49895 * C50036) +
                          C49844 * (C49858 + C49867 * C50036)) /
                         C49749;
    const double C1832 =
        (2 * C49985 * C49858 + C49985 * (C49858 + C49867 * C50036)) / C49749;
    const double C49876 = C49875 * C49863;
    const double C49879 = C49851 * C49875;
    const double C50203 = C49844 * C49875;
    const double C50246 = C49875 * C50036;
    const double C50269 = C49985 * C49875;
    const double C49937 = C49851 * C49935;
    const double C49951 = 3 * C49935;
    const double C50004 = C49844 * C49935;
    const double C50003 = C49935 * ae;
    const double C1077 =
        2 * C49844 * C49920 + C49844 * (C49920 + C49935 * C49848);
    const double C1538 = C49985 * (C49920 + C49935 * C49848);
    const double C1822 =
        2 * C49985 * C49920 + C49985 * (C49920 + C49935 * C50036);
    const double C7318 =
        3 * (C49920 + C49935 * C50036) +
        C49985 * (2 * C49985 * C49935 + C49985 * (C49935 + C49957 * C50036));
    const double C50090 = C49930 + C50086;
    const double C50089 = C50085 * ae;
    const double C50169 = 2 * C50085;
    const double C4583 =
        2 * C49985 * C50016 + C49985 * (C50016 + C50085 * C50036);
    const double C16644 =
        3 * (C50016 + C50085 * C50036) +
        C49985 * (2 * C49985 * C50085 + C49985 * (C50085 + C50175 * C50036));
    const double C50088 = C50083 + C50084;
    const double C50573 = C49930 + C50572;
    const double C15737 = C117 * C7319;
    const double C50219 = C49844 * C50215;
    const double C50218 = C50215 * ae;
    const double C50303 = 3 * C50215;
    const double C10230 =
        2 * C49985 * C50113 + C49985 * (C50113 + C50215 * C50036);
    const double C14822 =
        3 * (C50113 + C50215 * C50036) +
        C49985 * (2 * C49985 * C50215 + C49985 * (C50215 + C50309 * C50036));
    const double C50579 = C50108 + C50578;
    const double C20321 = C2271 * C14823;
    const double C21690 = C117 * C14823;
    const double C50220 = ae * C50213;
    const double C50217 = C49844 * C50213;
    const double C50248 = C50213 * C50036;
    const double C50272 = C49985 * C50213;
    const double C50297 = 2 * C50213;
    const double C50585 = C49985 * C50584;
    const double C49924 = C49844 * C49923;
    const double C130 = (3 * (C49904 + C49895 * C49863) +
                         C49851 * (2 * C49910 + C49851 * C49923)) /
                        C49731;
    const double C285 = (C49844 * (2 * C49910 + C49851 * C49923) +
                         (2 * C49911 + C49851 * C49920) * ae) /
                        C49731;
    const double C456 = (C49985 * (2 * C49910 + C49851 * C49923)) / C49731;
    const double C462 = (C49904 + C49895 * C49863 + C49923 * C50036) / C49731;
    const double C1826 =
        (2 * C49985 * C49923 + C49985 * (C49923 + C49938 * C50036)) / C49731;
    const double C50017 = C50014 + C50015;
    const double C50087 = 2 * C50080;
    const double C1836 = C118 * C1827;
    const double C4595 = C2270 * C1827;
    const double C7333 = C118 * C7322;
    const double C18461 = C2270 * C7322;
    const double C50117 = ae * C50111;
    const double C50115 = C49844 * C50111;
    const double C50134 = C50111 * C50036;
    const double C50152 = C49985 * C50111;
    const double C50205 = 2 * C50111;
    const double C50278 = 2 * C50273;
    const double C17547 =
        (4 * (2 * C49985 * C49895 + C49985 * C50485) +
         C49985 * (3 * C50485 + C49985 * (2 * C50268 + C49985 * C50346))) /
        C49731;
    const double C17557 = C17552 + C7334;
    const double C49888 = C49887 * C49863;
    const double C50164 = C49851 * C49887;
    const double C50294 = C49844 * C49887;
    const double C50342 = C49887 * C50036;
    const double C50361 = C49985 * C49887;
    const double C49962 = C49851 * C49960;
    const double C50060 = C49844 * C49960;
    const double C7321 =
        (3 * (C49923 + C49938 * C50036) +
         C49985 * (2 * C49985 * C49938 + C49985 * (C49938 + C49960 * C50036))) /
        C49731;
    const double C50178 = C50173 + C50174;
    const double C50315 = ae * C50307;
    const double C50312 = C49844 * C50307;
    const double C50345 = C50307 * C50036;
    const double C50365 = C49985 * C50307;
    const double C151 = C117 * C123;
    const double C2294 = C2269 * C123;
    const double C306 = C117 * C275;
    const double C2288 = C2271 * C275;
    const double C2879 = C2269 * C275;
    const double C320 = C117 * C281;
    const double C2496 = C2269 * C281;
    const double C2474 = C2271 * C281;
    const double C477 = C117 * C446;
    const double C3038 = C2269 * C446;
    const double C491 = C117 * C452;
    const double C2698 = C2269 * C452;
    const double C887 = C117 * C869;
    const double C2676 = C2271 * C869;
    const double C3252 = C2269 * C869;
    const double C2695 = C2271 * C1192;
    const double C6011 = C117 * C1192;
    const double C18985 = C2269 * C1192;
    const double C17146 = C117 * C3678;
    const double C18981 = C2271 * C3678;
    const double C19907 = C2269 * C3678;
    const double C19905 = C2271 * C4179;
    const double C22297 = C117 * C17545;
    const double C49961 = C49956 + C49959;
    const double C50067 = C49935 + C50063;
    const double C50066 = C50062 * ae;
    const double C50184 = C49844 * C50180;
    const double C50183 = C50180 * ae;
    const double C50318 = C50302 + C50314;
    const double C49942 = C49932 + C49940;
    const double C50064 = 2 * C50057;
    const double C50265 = 2 * C50260;
    const double C17546 =
        (4 * (2 * C49985 * C49928 + C49985 * C50482) +
         C49985 *
             (3 * C50482 +
              C49985 * (2 * C50255 + C49985 * (C49949 + C50167 * C50036)))) /
        C49731;
    const double C50356 = 2 * C50351;
    const double C50490 = C50488 + C50489;
    const double C50898 = C50860 / C49749;
    const double C50862 = C50606 / C49731;
    const double C25611 = -C50897;
    const double C50900 = C50865 / C50631;
    const double C50902 = C50869 / C50619;
    const double C273 = -C50901;
    const double C50904 = C50877 / C50631;
    const double C50905 = C50879 / C50619;
    const double C1000 = -C50903;
    const double C50907 = C50881 / C50631;
    const double C50908 = C50883 / C50619;
    const double C1651 = -C50906;
    const double C50913 = C50894 / C49749;
    const double C50896 = C50803 / C49731;
    const double C32092 = -C50912;
    const double C49754 = C49753 / C49731;
    const double C22749 = C22735 * C286;
    const double C22743 = C22735 * C287;
    const double C22738 = C22735 * C288;
    const double C10805 =
        (C49793 / C49750 - (0 * be) / C49731) / C49750 - (0 * be) / C49731;
    const double C25618 = C49793 / C49750 - (0 * be) / C49731;
    const double C2307 = C2291 + C2292;
    const double C2304 = C2282 + C2283;
    const double C2302 = C2276 + C2277;
    const double C2509 = C2483 + C2484;
    const double C2507 = C2477 + C2478;
    const double C18464 = C18445 + C2690;
    const double C18462 = C18441 + C2689;
    const double C2711 = C2685 + C2686;
    const double C2709 = C2679 + C2680;
    const double C18467 = C18451 + C4597;
    const double C20326 = C20319 + C18453;
    const double C2305 = C2285 + C2286;
    const double C2303 = C2279 + C2280;
    const double C163 = C158 + C143;
    const double C5508 = C5504 + C486;
    const double C50922 = C50887 - C50910;
    const double C50911 = C50890 - C50891;
    const double C22747 = C22727 * C135;
    const double C22741 = C22727 * C134;
    const double C28919 = C22727 * C469;
    const double C150 = C50758 * C136;
    const double C2293 = C50884 * C136;
    const double C7957 = C7922 * C136;
    const double C22756 = C22727 * C136;
    const double C314 = C50758 * C297;
    const double C2281 = C50774 * C297;
    const double C2485 = C50884 * C297;
    const double C7942 = C7923 * C297;
    const double C8148 = C7922 * C297;
    const double C22744 = C50774 * C297;
    const double C22948 = C22727 * C297;
    const double C485 = C50758 * C468;
    const double C2687 = C50884 * C468;
    const double C8342 = C7922 * C468;
    const double C23150 = C22727 * C468;
    const double C5493 = C50758 * C470;
    const double C12998 = C7922 * C470;
    const double C18446 = C50884 * C470;
    const double C28927 = C22727 * C470;
    const double C6008 = C50758 * C877;
    const double C12990 = C7923 * C877;
    const double C13504 = C7922 * C877;
    const double C18444 = C50774 * C877;
    const double C18976 = C50884 * C877;
    const double C28921 = C50774 * C877;
    const double C29600 = C22727 * C877;
    const double C49915 = ae * C49914;
    const double C290 =
        (C49851 * C49904 + C49844 * C49914 + C49844 * C49911 * ae) / C49731;
    const double C873 = (C49985 * C49914) / C49731;
    const double C502 = C488 + C489;
    const double C2712 = C2692 + C2693;
    const double C50032 = C49904 + C50030;
    const double C50051 = ae * C50050;
    const double C299 =
        ((C49902 + C49848 * C49845 * C49849) * C49847 + C49908 + C49908 +
         C49844 * (2 * ae * C49904 + C49844 * C49858)) /
        C49749;
    const double C316 = C118 * C289;
    const double C2488 = C2270 * C289;
    const double C2486 = C2272 * C289;
    const double C7936 = C7932 * C289;
    const double C22949 = C22735 * C289;
    const double C883 = C118 * C872;
    const double C2688 = C2272 * C872;
    const double C3244 = C2270 * C872;
    const double C23151 = C22735 * C872;
    const double C1206 = C118 * C1197;
    const double C2691 = C2272 * C1197;
    const double C3691 = C2270 * C1197;
    const double C23154 = C22735 * C1197;
    const double C164 = C159 + C146;
    const double C165 = C160 + C149;
    const double C335 = C329 + C310;
    const double C336 = C330 + C313;
    const double C506 = C500 + C481;
    const double C507 = C501 + C484;
    const double C5509 = C5505 + C487;
    const double C7336 = C7335 + C1837;
    const double C50114 = C50110 + C50104;
    const double C4590 =
        (2 * ae * (2 * C49985 * C49895 + C49985 * (C49895 + C49919 * C50036)) +
         C49844 * (2 * C50150 + C49985 * (C49867 + C49875 * C50036))) /
        C49749;
    const double C7326 =
        (3 * (C49858 + C49867 * C50036) +
         C49985 * (2 * C50150 + C49985 * (C49867 + C49875 * C50036))) /
        C49749;
    const double C153 = C50758 * C137;
    const double C2296 = C50884 * C137;
    const double C22759 = C22727 * C137;
    const double C311 = C50758 * C296;
    const double C2287 = C50774 * C296;
    const double C2479 = C50884 * C296;
    const double C7951 = C7923 * C296;
    const double C8529 = C7922 * C296;
    const double C22750 = C50774 * C296;
    const double C22942 = C22727 * C296;
    const double C482 = C50758 * C467;
    const double C2681 = C50884 * C467;
    const double C8693 = C7922 * C467;
    const double C23144 = C22727 * C467;
    const double C490 = C50758 * C471;
    const double C2694 = C50884 * C471;
    const double C8351 = C7922 * C471;
    const double C23157 = C22727 * C471;
    const double C886 = C50758 * C878;
    const double C2684 = C50774 * C878;
    const double C3248 = C50884 * C878;
    const double C8339 = C7923 * C878;
    const double C8909 = C7922 * C878;
    const double C23147 = C50774 * C878;
    const double C23711 = C22727 * C878;
    const double C6422 = C50758 * C1201;
    const double C12996 = C7923 * C1201;
    const double C13912 = C7922 * C1201;
    const double C18448 = C50774 * C1201;
    const double C18980 = C50884 * C1201;
    const double C28925 = C50774 * C1201;
    const double C30144 = C22727 * C1201;
    const double C7329 = C50758 * C1832;
    const double C14830 = C7922 * C1832;
    const double C18452 = C50884 * C1832;
    const double C31336 = C22727 * C1832;
    const double C49877 = C49867 + C49876;
    const double C49883 = 2 * C49879;
    const double C50081 = C49844 * C49879;
    const double C50144 = C49985 * C49879;
    const double C1200 = (2 * ae * (C49910 + C49928 * C50036) +
                          C49844 * (C50013 + C49879 * C50036)) /
                         C49749;
    const double C1831 =
        (2 * C49985 * C50013 + C49985 * (C50013 + C49879 * C50036)) / C49749;
    const double C50216 = C50212 + C50203;
    const double C50249 = C49867 + C50246;
    const double C50274 = C49844 * C50269;
    const double C50378 = 2 * C50269;
    const double C49939 = C49934 + C49937;
    const double C50006 = C50004 * ae;
    const double C1191 = C49844 * C49920 + C50004 * C50036;
    const double C4582 =
        2 * C49985 * C50004 + C49985 * (C50004 + C50062 * C50036);
    const double C50005 = C50002 + C50003;
    const double C2499 = C2271 * C1077;
    const double C3255 = C2271 * C1538;
    const double C5332 = C117 * C1538;
    const double C5496 = C117 * C1822;
    const double C50093 = C50090 * ae;
    const double C3516 = 3 * (C49911 + C49930 * C49848) +
                         C49844 * (2 * C50016 + C49844 * C50090);
    const double C3677 = C49911 + C49930 * C49848 + C50090 * C50036;
    const double C4178 = C49985 * (2 * C50016 + C49844 * C50090);
    const double C10229 =
        2 * C49985 * C50090 + C49985 * (C50090 + C50180 * C50036);
    const double C16244 = C117 * C4583;
    const double C18457 = C2271 * C4583;
    const double C50094 = ae * C50088;
    const double C50092 = C49844 * C50088;
    const double C50130 = C50088 * C50036;
    const double C50146 = C49985 * C50088;
    const double C50166 = 2 * C50088;
    const double C17544 =
        4 * (2 * C49985 * C49930 + C49985 * C50573) +
        C49985 * (3 * C50573 + C49985 * (2 * C49985 * C49952 +
                                         C49985 * (C49952 + C50168 * C50036)));
    const double C50223 = C50210 + C50219;
    const double C19405 = C2271 * C10230;
    const double C22025 = C117 * C10230;
    const double C20314 =
        4 * (2 * C49985 * C50108 + C49985 * C50579) +
        C49985 * (3 * C50579 + C49985 * (2 * C49985 * C50208 +
                                         C49985 * (C50208 + C50300 * C50036)));
    const double C50292 = C49875 + C50220;
    const double C50222 = C49919 + C50217;
    const double C50251 = C50111 + C50248;
    const double C50277 = ae * C50272;
    const double C50382 = 2 * C50272;
    const double C50586 = C50583 + C50585;
    const double C49925 = C49924 + C49922;
    const double C152 = C118 * C130;
    const double C2295 = C2270 * C130;
    const double C307 = C118 * C285;
    const double C2289 = C2272 * C285;
    const double C2502 = C2270 * C285;
    const double C22752 = C22735 * C285;
    const double C478 = C118 * C456;
    const double C2704 = C2270 * C456;
    const double C492 = C118 * C462;
    const double C2699 = C2270 * C462;
    const double C1835 = C118 * C1826;
    const double C4593 = C2270 * C1826;
    const double C50020 = ae * C50017;
    const double C50019 = C49844 * C50017;
    const double C50047 = C49985 * C50017;
    const double C50082 = 2 * C50017;
    const double C1196 = (C49914 + C50017 * C50036) / C49731;
    const double C5506 = C5494 + C1836;
    const double C18468 = C18455 + C4595;
    const double C15746 = C15737 + C7333;
    const double C50201 = C49867 + C50117;
    const double C50118 = C49895 + C50115;
    const double C50135 = C50028 + C50134;
    const double C50154 = ae * C50152;
    const double C50286 = 2 * C50152;
    const double C17556 = C118 * C17547;
    const double C20324 = C2270 * C17547;
    const double C17558 = C17557 + C7334;
    const double C49889 = C49875 + C49888;
    const double C50172 = C49844 * C50164;
    const double C50237 = C50164 * C50036;
    const double C50256 = C49985 * C50164;
    const double C50311 = C50306 + C50294;
    const double C50347 = C49875 + C50342;
    const double C50368 = C49844 * C50361;
    const double C49964 = C49954 + C49962;
    const double C50065 = C50060 + C50061;
    const double C7332 = C118 * C7321;
    const double C50185 = ae * C50178;
    const double C50182 = C49844 * C50178;
    const double C50239 = C50178 * C50036;
    const double C50259 = C49985 * C50178;
    const double C50317 = C49933 + C50312;
    const double C50350 = C50213 + C50345;
    const double C50372 = ae * C50365;
    const double C49963 = C49851 * C49961;
    const double C49993 = C49844 * C49961;
    const double C49992 = C49961 * ae;
    const double C50070 = C50067 * ae;
    const double C3515 = 3 * (C49920 + C49935 * C49848) +
                         C49844 * (2 * C50004 + C49844 * C50067);
    const double C3676 = C49920 + C49935 * C49848 + C50067 * C50036;
    const double C4177 = C49985 * (2 * C50004 + C49844 * C50067);
    const double C50188 = C50169 + C50184;
    const double C50322 = C49844 * C50318;
    const double C50321 = C50318 * ae;
    const double C49943 = C49844 * C49942;
    const double C131 = (4 * (2 * C49910 + C49851 * C49923) +
                         C49851 * (3 * C49923 + C49851 * C49942)) /
                        C49731;
    const double C463 =
        (2 * C49910 + C49851 * C49923 + C49942 * C50036) / C49731;
    const double C464 = (C49985 * (3 * C49923 + C49851 * C49942)) / C49731;
    const double C17555 = C118 * C17546;
    const double C22294 =
        (5 * (3 * C50485 + C49985 * C50490) +
         C49985 * (4 * C50490 +
                   C49985 * (3 * C50346 +
                             C49985 * (2 * C50360 +
                                       C49985 * (C49933 + C49955 * C50036))))) /
        C49731;
    const double C50915 = C50859 - C50898;
    const double C50899 = C50861 - C50862;
    const double C50916 = C50864 - C50900;
    const double C50917 = C50868 - C50902;
    const double C50918 = C50871 - C50904;
    const double C50919 = C50878 - C50905;
    const double C50920 = C50873 - C50907;
    const double C50921 = C50882 - C50908;
    const double C50923 = C50892 - C50913;
    const double C50914 = C50895 - C50896;
    const double C49755 = C50758 - C49754;
    const double C25622 = C25618 * C289;
    const double C2315 = C2307 + C2292;
    const double C2312 = C2304 + C2283;
    const double C2310 = C2302 + C2277;
    const double C2517 = C2509 + C2484;
    const double C2515 = C2507 + C2478;
    const double C18473 = C18464 + C2690;
    const double C18471 = C18462 + C2689;
    const double C2719 = C2711 + C2686;
    const double C2717 = C2709 + C2680;
    const double C18476 = C18467 + C4597;
    const double C20328 = C20326 + C18453;
    const double C2313 = C2305 + C2286;
    const double C2311 = C2303 + C2280;
    const double C168 = C163 + C144;
    const double C5512 = C5508 + C5487;
    const double C25643 = C50922 * C136;
    const double C25640 = C50922 * C135;
    const double C25625 = C50922 * C134;
    const double C25834 = C50922 * C297;
    const double C26037 = C50922 * C471;
    const double C26028 = C50922 * C468;
    const double C26215 = C50922 * C296;
    const double C26379 = C50922 * C467;
    const double C26595 = C50922 * C878;
    const double C44725 = C50922 * C470;
    const double C44715 = C50922 * C469;
    const double C45231 = C50922 * C877;
    const double C45639 = C50922 * C1201;
    const double C46551 = C50922 * C1832;
    const double C10793 =
        (C50884 - C50909) / C49750 - (C50922 * C50770) / C49731;
    const double C25637 = C50911 * C296;
    const double C25628 = C50911 * C297;
    const double C26025 = C50911 * C878;
    const double C44723 = C50911 * C1201;
    const double C44717 = C50911 * C877;
    const double C10794 =
        (2 * C50774 + C50922) / C49750 - (C50911 * C50770) / C49731;
    const double C10795 = C50911 / C49750 - C50777 / C49777;
    const double C300 =
        (C49851 * C49858 + C49915 + C49915 +
         C49844 * (2 * ae * C49910 + C49844 * C49851 * C49867)) /
        C49749;
    const double C318 = C118 * C290;
    const double C2491 = C2270 * C290;
    const double C2481 = C2272 * C290;
    const double C7944 = C7932 * C290;
    const double C22944 = C22735 * C290;
    const double C25630 = C25618 * C290;
    const double C885 = C118 * C873;
    const double C2683 = C2272 * C873;
    const double C3247 = C2270 * C873;
    const double C23146 = C22735 * C873;
    const double C508 = C502 + C489;
    const double C2720 = C2712 + C2693;
    const double C50033 = C50032 + C50029;
    const double C1548 =
        (C49985 * C49858 + C50051 + C50051 +
         C49844 * (2 * ae * C49985 * C49895 + C49844 * C49985 * C49867)) /
        C49749;
    const double C6018 = C6007 + C883;
    const double C18463 = C18443 + C2688;
    const double C18991 = C18975 + C3244;
    const double C6428 = C6421 + C1206;
    const double C18465 = C18447 + C2691;
    const double C18993 = C18979 + C3691;
    const double C169 = C164 + C147;
    const double C170 = C165 + C150;
    const double C342 = C336 + C314;
    const double C513 = C507 + C485;
    const double C5513 = C5509 + C5493;
    const double C14832 = C7923 * C4590;
    const double C16649 = C50758 * C4590;
    const double C18450 = C50774 * C4590;
    const double C19404 = C50884 * C4590;
    const double C31338 = C50774 * C4590;
    const double C46553 = C50911 * C4590;
    const double C48326 = C22727 * C4590;
    const double C17553 = C50758 * C7326;
    const double C20320 = C50884 * C7326;
    const double C49229 = C22727 * C7326;
    const double C341 = C335 + C311;
    const double C512 = C506 + C482;
    const double C7337 = C7336 + C7329;
    const double C138 =
        (4 * (2 * C49851 * C49867 + C49851 * C49877) +
         C49851 * (3 * C49877 +
                   C49851 * (2 * C49851 * C49875 +
                             C49851 * (C49875 +
                                       (C49870 * C49871 +
                                        C49848 * bs[7] * std::pow(C49846, 7)) *
                                           C49847 * C49863)))) /
        C49749;
    const double C295 =
        (2 * ae *
             (2 * C49851 * C49895 +
              C49851 * (C49895 + C49862 * C49861 * C49893 * C49863)) +
         C49844 * (2 * C49851 * C49867 + C49851 * C49877)) /
        C49749;
    const double C466 =
        ((zP - zQ) * (2 * C49851 * C49867 + C49851 * C49877)) / C49749;
    const double C472 =
        (C49858 + C49867 * C49863 + C49877 * std::pow(zP - zQ, 2)) / C49749;
    const double C879 =
        (2 * ae * C49985 * C49923 + C49844 * C49985 * C49877) / C49749;
    const double C50091 = C50087 + C50081;
    const double C4589 =
        (2 * ae * (2 * C49985 * C49928 + C49985 * (C49928 + C49949 * C50036)) +
         C49844 * (2 * C50144 + C49985 * (C49879 + C49851 * C49887 * C50036))) /
        C49749;
    const double C7325 =
        (3 * (C50013 + C49879 * C50036) +
         C49985 * (2 * C50144 + C49985 * (C49879 + C49851 * C49887 * C50036))) /
        C49749;
    const double C2697 = C50774 * C1200;
    const double C6012 = C50758 * C1200;
    const double C8354 = C7923 * C1200;
    const double C18986 = C50884 * C1200;
    const double C23160 = C50774 * C1200;
    const double C26040 = C50911 * C1200;
    const double C29605 = C22727 * C1200;
    const double C5495 = C50758 * C1831;
    const double C18456 = C50884 * C1831;
    const double C28931 = C22727 * C1831;
    const double C50221 = C49844 * C50216;
    const double C50291 = 2 * C50216;
    const double C50279 = C50278 + C50274;
    const double C49941 = C49939 * ae;
    const double C293 = (C49844 * (3 * C49923 + C49851 * C49942) +
                         (3 * C49920 + C49851 * C49939) * ae) /
                        C49731;
    const double C124 = 4 * (2 * C49911 + C49851 * C49920) +
                        C49851 * (3 * C49920 + C49851 * C49939);
    const double C282 = 2 * C49911 + C49851 * C49920 + C49939 * C49848;
    const double C283 = C49844 * (3 * C49920 + C49851 * C49939);
    const double C453 = 2 * C49911 + C49851 * C49920 + C49939 * C50036;
    const double C454 = C49985 * (3 * C49920 + C49851 * C49939);
    const double C870 = C49985 * C49844 * C49939;
    const double C1076 =
        2 * C49844 * C49939 + C49844 * (C49939 + C49961 * C49848);
    const double C1537 = C49985 * (C49939 + C49961 * C49848);
    const double C1821 =
        2 * C49985 * C49939 + C49985 * (C49939 + C49961 * C50036);
    const double C2701 = C2271 * C1191;
    const double C6013 = C117 * C1191;
    const double C50008 = ae * C50005;
    const double C50007 = C49844 * C50005;
    const double C50044 = C49985 * C50005;
    const double C50059 = 2 * C50005;
    const double C15580 = C117 * C3677;
    const double C18987 = C2271 * C3677;
    const double C34981 = C2271 * C4178;
    const double C50162 = C49879 + C50094;
    const double C50095 = C49928 + C50092;
    const double C50131 = C50017 + C50130;
    const double C50148 = ae * C50146;
    const double C50281 = 2 * C50146;
    const double C50226 = C50223 * ae;
    const double C9172 = 4 * (2 * C50027 + C49844 * C50113) +
                         C49844 * (3 * C50113 + C49844 * C50223);
    const double C9330 = 2 * C50027 + C49844 * C50113 + C50223 * C50036;
    const double C9828 = C49985 * (3 * C50113 + C49844 * C50223);
    const double C12263 =
        2 * C49985 * C50223 + C49985 * (C50223 + C50318 * C50036);
    const double C50305 = C50292 + C50220;
    const double C50225 = C50222 + C50214;
    const double C50253 = ae * C50251;
    const double C50287 = C49985 * C50251;
    const double C50390 = 3 * C50251;
    const double C50359 = C50269 + C50277;
    const double C22293 =
        5 * (3 * C50576 + C49985 * C50586) +
        C49985 * (4 * C50586 +
                  C49985 * (3 * C50584 +
                            C49985 * (2 * C49985 * C49869 +
                                      C49985 * (C49869 + C49880 * C50036))));
    const double C49926 = ae * C49925;
    const double C291 =
        (C49904 + C49895 * C49863 + C49844 * C49925 + C49844 * C49920 * ae) /
        C49731;
    const double C874 = (C49985 * C49925) / C49731;
    const double C1195 = (C49925 + C50005 * C50036) / C49731;
    const double C161 = C151 + C152;
    const double C2308 = C2294 + C2295;
    const double C328 = C306 + C307;
    const double C2306 = C2288 + C2289;
    const double C2885 = C2879 + C2502;
    const double C499 = C477 + C478;
    const double C3044 = C3038 + C2704;
    const double C503 = C491 + C492;
    const double C2714 = C2698 + C2699;
    const double C5507 = C5496 + C1835;
    const double C50021 = C49910 + C50019;
    const double C50048 = ae * C50047;
    const double C1205 = C118 * C1196;
    const double C2696 = C2272 * C1196;
    const double C3689 = C2270 * C1196;
    const double C23159 = C22735 * C1196;
    const double C5510 = C5506 + C1836;
    const double C18477 = C18468 + C4595;
    const double C15748 = C15746 + C7333;
    const double C50211 = C50201 + C50117;
    const double C50119 = C50118 + C50112;
    const double C50136 = ae * C50135;
    const double C4587 = (2 * C50050 + C49985 * C50135) / C49731;
    const double C22300 = C22297 + C17556;
    const double C49890 = C49851 * C49889;
    const double C50058 = C49844 * C49889;
    const double C50138 = C49985 * C49889;
    const double C1199 = (2 * ae * (C49923 + C49938 * C50036) +
                          C49844 * (C49877 + C49889 * C50036)) /
                         C49749;
    const double C1830 =
        (2 * C49985 * C49877 + C49985 * (C49877 + C49889 * C50036)) / C49749;
    const double C50177 = C50171 + C50172;
    const double C50240 = C49879 + C50237;
    const double C50261 = C49844 * C50256;
    const double C50316 = C49844 * C50311;
    const double C50352 = C49844 * C50347;
    const double C50379 = C49985 * C50347;
    const double C50374 = C50373 + C50368;
    const double C49966 = C49851 * C49964;
    const double C49991 = C49844 * C49964;
    const double C1825 =
        (2 * C49985 * C49942 + C49985 * (C49942 + C49964 * C50036)) / C49731;
    const double C50071 = ae * C50065;
    const double C50069 = C49844 * C50065;
    const double C50126 = C50065 * C50036;
    const double C50140 = C49985 * C50065;
    const double C50187 = C49949 + C50182;
    const double C50242 = C50088 + C50239;
    const double C50264 = ae * C50259;
    const double C50320 = C50317 + C50308;
    const double C50355 = ae * C50350;
    const double C50383 = C49985 * C50350;
    const double C49965 = C49951 + C49963;
    const double C49995 = C49993 * ae;
    const double C1190 = C49844 * C49939 + C49993 * C50036;
    const double C50190 = C50188 * ae;
    const double C9171 = 4 * (2 * C50016 + C49844 * C50090) +
                         C49844 * (3 * C50090 + C49844 * C50188);
    const double C9329 = 2 * C50016 + C49844 * C50090 + C50188 * C50036;
    const double C9827 = C49985 * (3 * C50090 + C49844 * C50188);
    const double C50325 = C50303 + C50322;
    const double C155 = C118 * C131;
    const double C2301 = C2270 * C131;
    const double C495 = C118 * C463;
    const double C2707 = C2270 * C463;
    const double C497 = C118 * C464;
    const double C3043 = C2270 * C464;
    const double C22299 = C118 * C22294;
    const double C106 = (C50857 - C50897) / C49750 - (C50915 * C50594) / C49731;
    const double C107 =
        (2 * C50603 + C50915) / C49750 - (C50899 * C50594) / C49731;
    const double C108 = C50899 / C49750 - C50606 / C49777;
    const double C113 = (C50916 * C50622) / C50619 + (C50866 - C50901) / C50621;
    const double C114 =
        (C50917 * C50622) / C50619 + (2 * C50633 + C50916) / C50621;
    const double C115 = (C50622 * C50633) / C50636 + C50917 / C50621;
    const double C1071 =
        (C50918 * C50693) / C50619 + (C50874 - C50903) / C50621;
    const double C1072 =
        (C50919 * C50693) / C50619 + (2 * C50698 + C50918) / C50621;
    const double C1073 = (C50693 * C50698) / C50636 + C50919 / C50621;
    const double C1817 =
        (C50920 * C50721) / C50619 + (C50875 - C50906) / C50621;
    const double C1818 =
        (C50921 * C50721) / C50619 + (2 * C50726 + C50920) / C50621;
    const double C1819 = (C50721 * C50726) / C50636 + C50921 / C50621;
    const double C20883 =
        (C50886 - C50912) / C49750 - (C50923 * C50796) / C49731;
    const double C20884 =
        (2 * C50800 + C50923) / C49750 - (C50914 * C50796) / C49731;
    const double C20885 = C50914 / C49750 - C50803 / C49777;
    const double C49756 = C49755 * C49752;
    const double C49780 = C49755 * ae;
    const double C7928 =
        ((-(0 * be) / C49731) / C49750 -
         ((0 - (C49729 * C49748) / C49731) * be) / C49731) /
            C49750 -
        ((C49729 * ((-C49748 / C49731) / C49750 - (C49755 * be) / C49731) +
          C22727) *
         be) /
            C49731 +
        (-C49751 / C49731) / C49750 - (0 * be) / C49731;
    const double C7930 =
        ((-C49748 / C49731) / C49750 - (C49755 * be) / C49731) / C49750 -
        ((C49729 * ((-C49751 / C49731) / C49750 - (0 * be) / C49731) + C50774) *
         be) /
            C49731;
    const double C22733 = (-C49748 / C49731) / C49750 - (C49755 * be) / C49731;
    const double C2323 = C2315 + C2293;
    const double C2320 = C2312 + C2284;
    const double C2318 = C2310 + C2278;
    const double C2525 = C2517 + C2485;
    const double C2523 = C2515 + C2479;
    const double C18481 = C18473 + C18446;
    const double C18479 = C18471 + C18442;
    const double C2727 = C2719 + C2687;
    const double C2725 = C2717 + C2681;
    const double C18484 = C18476 + C18452;
    const double C2321 = C2313 + C2287;
    const double C2319 = C2311 + C2281;
    const double C5516 = C5512 * C2266;
    const double C15731 = C5512 * C50857;
    const double C21084 = C5512 * C50598;
    const double C32387 = C5512 * C50915;
    const double C38558 = C5512 * C25611;
    const double C319 = C50758 * C300;
    const double C2492 = C50884 * C300;
    const double C2482 = C50774 * C300;
    const double C7945 = C7924 * C300;
    const double C8157 = C7922 * C300;
    const double C8145 = C7923 * C300;
    const double C22955 = C22727 * C300;
    const double C22945 = C50774 * C300;
    const double C25631 = C25610 * C300;
    const double C25843 = C50922 * C300;
    const double C25831 = C50911 * C300;
    const double C331 = C317 + C318;
    const double C2510 = C2490 + C2491;
    const double C2508 = C2480 + C2481;
    const double C894 = C884 + C885;
    const double C2710 = C2682 + C2683;
    const double C3260 = C3246 + C3247;
    const double C514 = C508 + C490;
    const double C2728 = C2720 + C2694;
    const double C50034 = ae * C50033;
    const double C1083 =
        (2 * C49907 + C49844 * C50033 + (C49902 + C49852 * C49848) * ae) /
        C49731;
    const double C1544 = (C49985 * C50033) / C49731;
    const double C6919 = C50758 * C1548;
    const double C12992 = C7924 * C1548;
    const double C13506 = C7923 * C1548;
    const double C14416 = C7922 * C1548;
    const double C18978 = C50774 * C1548;
    const double C19904 = C50884 * C1548;
    const double C29602 = C50774 * C1548;
    const double C30804 = C22727 * C1548;
    const double C44719 = C25610 * C1548;
    const double C45233 = C50911 * C1548;
    const double C46143 = C50922 * C1548;
    const double C6021 = C6018 + C883;
    const double C18472 = C18463 + C2688;
    const double C18997 = C18991 + C3244;
    const double C6429 = C6428 + C1206;
    const double C18474 = C18465 + C2691;
    const double C18999 = C18993 + C3691;
    const double C5498 = C513 * C2266;
    const double C5488 = C513 * C2267;
    const double C15739 = C513 * C50857;
    const double C15732 = C513 * C50603;
    const double C21088 = C513 * C50598;
    const double C32393 = C513 * C50915;
    const double C32388 = C513 * C50899;
    const double C38564 = C513 * C25611;
    const double C38559 = C513 * C50603;
    const double C5517 = C5513 * C2266;
    const double C15733 = C5513 * C50857;
    const double C21085 = C5513 * C50598;
    const double C32392 = C5513 * C50915;
    const double C38560 = C5513 * C25611;
    const double C17559 = C17558 + C17553;
    const double C20330 = C20328 + C20320;
    const double C5499 = C512 * C2267;
    const double C5489 = C512 * C2268;
    const double C5810 = C512 * C2266;
    const double C15740 = C512 * C50603;
    const double C16042 = C512 * C50857;
    const double C21288 = C512 * C50598;
    const double C32394 = C512 * C50899;
    const double C32389 = C512 * C22731;
    const double C32691 = C512 * C50915;
    const double C38565 = C512 * C50603;
    const double C38864 = C512 * C25611;
    const double C7338 = C7337 * C2266;
    const double C15736 = C7337 * C50857;
    const double C21086 = C7337 * C50598;
    const double C34166 = C7337 * C50915;
    const double C38563 = C7337 * C25611;
    const double C156 = C50758 * C138;
    const double C308 = C50758 * C295;
    const double C2290 = C50774 * C295;
    const double C2880 = C50884 * C295;
    const double C7960 = C7923 * C295;
    const double C22753 = C50774 * C295;
    const double C23343 = C22727 * C295;
    const double C25646 = C50911 * C295;
    const double C479 = C50758 * C466;
    const double C3039 = C50884 * C466;
    const double C23502 = C22727 * C466;
    const double C493 = C50758 * C472;
    const double C2700 = C50884 * C472;
    const double C23163 = C22727 * C472;
    const double C889 = C50758 * C879;
    const double C2678 = C50774 * C879;
    const double C3254 = C50884 * C879;
    const double C8695 = C7923 * C879;
    const double C23141 = C50774 * C879;
    const double C23717 = C22727 * C879;
    const double C26381 = C50911 * C879;
    const double C16245 = C50758 * C4589;
    const double C18458 = C50774 * C4589;
    const double C28933 = C50774 * C4589;
    const double C15738 = C50758 * C7325;
    const double C49944 = C49943 + C49941;
    const double C326 = C118 * C293;
    const double C2298 = C2272 * C293;
    const double C2884 = C2270 * C293;
    const double C22761 = C22735 * C293;
    const double C154 = C117 * C124;
    const double C323 = C117 * C282;
    const double C2881 = C2271 * C282;
    const double C623 = C117 * C283;
    const double C2297 = C2271 * C283;
    const double C494 = C117 * C453;
    const double C732 = C117 * C454;
    const double C890 = C117 * C870;
    const double C3040 = C2271 * C870;
    const double C50009 = C49923 + C50007;
    const double C50045 = ae * C50044;
    const double C50170 = C50162 + C50094;
    const double C50096 = C50095 + C50089;
    const double C50132 = ae * C50131;
    const double C4586 = (2 * C50047 + C49985 * C50131) / C49731;
    const double C19909 = C2271 * C9330;
    const double C50228 = ae * C50225;
    const double C50227 = C49844 * C50225;
    const double C50247 = C50225 * C50036;
    const double C50271 = C49985 * C50225;
    const double C50296 = 3 * C50225;
    const double C50288 = C50286 + C50287;
    const double C50366 = C50359 + C50277;
    const double C301 = (C49858 + C49867 * C49863 + C49926 + C49926 +
                         C49844 * (2 * ae * C49923 + C49844 * C49877)) /
                        C49749;
    const double C321 = C118 * C291;
    const double C2497 = C2270 * C291;
    const double C2475 = C2272 * C291;
    const double C7947 = C7932 * C291;
    const double C22938 = C22735 * C291;
    const double C25633 = C25618 * C291;
    const double C888 = C118 * C874;
    const double C2677 = C2272 * C874;
    const double C3253 = C2270 * C874;
    const double C23140 = C22735 * C874;
    const double C1204 = C118 * C1195;
    const double C2702 = C2272 * C1195;
    const double C3687 = C2270 * C1195;
    const double C23165 = C22735 * C1195;
    const double C166 = C161 + C152;
    const double C2316 = C2308 + C2295;
    const double C334 = C328 + C307;
    const double C2314 = C2306 + C2289;
    const double C2887 = C2885 + C2502;
    const double C505 = C499 + C478;
    const double C3046 = C3044 + C2704;
    const double C509 = C503 + C492;
    const double C2722 = C2714 + C2699;
    const double C5511 = C5507 + C1835;
    const double C50022 = C50021 + C50018;
    const double C1547 =
        (C49985 * C50013 + C50048 + C50048 +
         C49844 * (2 * ae * C49985 * C49928 + C49844 * C49985 * C49879)) /
        C49749;
    const double C6019 = C6011 + C1205;
    const double C2713 = C2695 + C2696;
    const double C18995 = C18985 + C3689;
    const double C5514 = C5510 + C5495;
    const double C18485 = C18477 + C18456;
    const double C50224 = C50211 + C50221;
    const double C50121 = ae * C50119;
    const double C50120 = C49844 * C50119;
    const double C50151 = C49985 * C50119;
    const double C50204 = 3 * C50119;
    const double C3681 = (C50033 + C50119 * C50036) / C49731;
    const double C3684 = (C49858 + C49867 * C50036 + C50136 + C50136 +
                          C49844 * (2 * ae * (C49895 + C49919 * C50036) +
                                    C49844 * (C49867 + C49875 * C50036))) /
                         C49749;
    const double C4596 = C2272 * C4587;
    const double C6427 = C118 * C4587;
    const double C18983 = C2270 * C4587;
    const double C25023 = C22735 * C4587;
    const double C22301 = C22300 + C17556;
    const double C49891 = C49883 + C49890;
    const double C50068 = C50064 + C50058;
    const double C4588 =
        (2 * ae * (2 * C49985 * C49938 + C49985 * (C49938 + C49960 * C50036)) +
         C49844 * (2 * C50138 +
                   C49985 * (C49889 +
                             (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863) *
                                 C50036))) /
        C49749;
    const double C7324 =
        (3 * (C49877 + C49889 * C50036) +
         C49985 * (2 * C50138 +
                   C49985 * (C49889 +
                             (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863) *
                                 C50036))) /
        C49749;
    const double C2703 = C50774 * C1199;
    const double C6014 = C50758 * C1199;
    const double C23166 = C50774 * C1199;
    const double C5497 = C50758 * C1830;
    const double C50181 = C49844 * C50177;
    const double C16646 =
        (2 * ae *
             (3 * (C49928 + C49949 * C50036) +
              C49985 * (2 * C50255 + C49985 * (C49949 + C50167 * C50036))) +
         C49844 * (3 * C50240 +
                   C49985 * (2 * C50256 +
                             C49985 * (C50164 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50036)))) /
        C49749;
    const double C17548 =
        (4 * (2 * C50144 + C49985 * C50240) +
         C49985 * (3 * C50240 +
                   C49985 * (2 * C50256 +
                             C49985 * (C50164 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50036)))) /
        C49749;
    const double C50266 = C50265 + C50261;
    const double C50319 = C50305 + C50316;
    const double C50357 = C50356 + C50352;
    const double C50384 = C50378 + C50379;
    const double C50375 = C49844 * C50374;
    const double C49968 = C49948 + C49966;
    const double C49994 = C49991 + C49992;
    const double C1834 = C118 * C1825;
    const double C50072 = C49938 + C50069;
    const double C50127 = C50005 + C50126;
    const double C50142 = ae * C50140;
    const double C50189 = C50187 + C50179;
    const double C50244 = ae * C50242;
    const double C50282 = C49985 * C50242;
    const double C50326 = ae * C50320;
    const double C50324 = C49844 * C50320;
    const double C50344 = C50320 * C50036;
    const double C50364 = C49985 * C50320;
    const double C50386 = C50382 + C50383;
    const double C49967 = C49965 * ae;
    const double C125 = 5 * (3 * C49920 + C49851 * C49939) +
                        C49851 * (4 * C49939 + C49851 * C49965);
    const double C284 = 3 * C49920 + C49851 * C49939 + C49965 * C49848;
    const double C455 = 3 * C49920 + C49851 * C49939 + C49965 * C50036;
    const double C619 = C49844 * (4 * C49939 + C49851 * C49965);
    const double C728 = C49985 * (4 * C49939 + C49851 * C49965);
    const double C871 = C49985 * C49844 * C49965;
    const double C50329 = C50325 * ae;
    const double C11556 = 5 * (3 * C50113 + C49844 * C50223) +
                          C49844 * (4 * C50223 + C49844 * C50325);
    const double C11661 = 3 * C50113 + C49844 * C50223 + C50325 * C50036;
    const double C11994 = C49985 * (4 * C50223 + C49844 * C50325);
    const double C49763 = C49729 * C49756;
    const double C7927 =
        (-(be * -2 * C49748) / C49749) / C49750 -
        ((2 * ((-C49748 / C49731) / C49750 - (C49755 * be) / C49731) -
          (C49729 * ((-4 * C49737) / C49731 - (C49729 * C49756) / C49731) *
           be) /
              C49731) *
         be) /
            C49731 -
        C49756 / (2 * C49749);
    const double C7931 = (-C49756 / C49731) / (4 * C49749);
    const double C10804 = (-C49756 / C49731) / (4 * C49774);
    const double C22734 = (-C49756 / C49731) / C49750;
    const double C25617 = (-C49756 / C49731) / (4 * C49749);
    const double C49787 = C49780 / C49731;
    const double C7966 = C7928 * C130;
    const double C7956 = C7928 * C129;
    const double C7953 = C7928 * C128;
    const double C7938 = C7928 * C127;
    const double C7934 = C7928 * C126;
    const double C8169 = C7928 * C291;
    const double C8164 = C7928 * C286;
    const double C8156 = C7928 * C290;
    const double C8152 = C7928 * C289;
    const double C8151 = C7928 * C288;
    const double C8147 = C7928 * C287;
    const double C8363 = C7928 * C462;
    const double C8358 = C7928 * C457;
    const double C8350 = C7928 * C461;
    const double C8346 = C7928 * C460;
    const double C8345 = C7928 * C459;
    const double C8341 = C7928 * C458;
    const double C8536 = C7928 * C285;
    const double C8700 = C7928 * C456;
    const double C8918 = C7928 * C874;
    const double C8908 = C7928 * C873;
    const double C8904 = C7928 * C872;
    const double C9341 = C7928 * C1197;
    const double C9338 = C7928 * C1196;
    const double C10241 = C7928 * C1828;
    const double C10238 = C7928 * C1827;
    const double C13919 = C7928 * C4587;
    const double C14837 = C7928 * C7323;
    const double C7965 = C7930 * C293;
    const double C7959 = C7930 * C285;
    const double C7950 = C7930 * C286;
    const double C7941 = C7930 * C287;
    const double C7935 = C7930 * C288;
    const double C8165 = C7930 * C291;
    const double C8150 = C7930 * C289;
    const double C8144 = C7930 * C290;
    const double C8362 = C7930 * C1195;
    const double C8359 = C7930 * C874;
    const double C8353 = C7930 * C1196;
    const double C8347 = C7930 * C1197;
    const double C8344 = C7930 * C872;
    const double C8338 = C7930 * C873;
    const double C10240 = C7930 * C4587;
    const double C22764 = C22733 * C131;
    const double C22758 = C22733 * C130;
    const double C22755 = C22733 * C129;
    const double C22746 = C22733 * C128;
    const double C22740 = C22733 * C127;
    const double C22737 = C22733 * C126;
    const double C22965 = C22733 * C285;
    const double C22960 = C22733 * C291;
    const double C22954 = C22733 * C290;
    const double C22951 = C22733 * C289;
    const double C22950 = C22733 * C288;
    const double C22947 = C22733 * C287;
    const double C22941 = C22733 * C286;
    const double C23170 = C22733 * C463;
    const double C23167 = C22733 * C456;
    const double C23162 = C22733 * C462;
    const double C23156 = C22733 * C461;
    const double C23153 = C22733 * C460;
    const double C23152 = C22733 * C459;
    const double C23149 = C22733 * C458;
    const double C23143 = C22733 * C457;
    const double C23347 = C22733 * C293;
    const double C23506 = C22733 * C464;
    const double C23716 = C22733 * C874;
    const double C23710 = C22733 * C873;
    const double C23707 = C22733 * C872;
    const double C24136 = C22733 * C1197;
    const double C24134 = C22733 * C1196;
    const double C24132 = C22733 * C1195;
    const double C25024 = C22733 * C1828;
    const double C25022 = C22733 * C1827;
    const double C25020 = C22733 * C1826;
    const double C30150 = C22733 * C4587;
    const double C31342 = C22733 * C7323;
    const double C31340 = C22733 * C7322;
    const double C49233 = C22733 * C17547;
    const double C2326 = C2320 + C2321;
    const double C337 = C331 + C318;
    const double C2518 = C2510 + C2491;
    const double C2516 = C2508 + C2481;
    const double C897 = C894 + C885;
    const double C2718 = C2710 + C2683;
    const double C3264 = C3260 + C3247;
    const double C5501 = C514 * C2266;
    const double C5491 = C514 * C2267;
    const double C15741 = C514 * C50857;
    const double C15734 = C514 * C50603;
    const double C21089 = C514 * C50598;
    const double C32396 = C514 * C50915;
    const double C32391 = C514 * C50899;
    const double C38566 = C514 * C25611;
    const double C38561 = C514 * C50603;
    const double C1087 =
        (2 * (2 * ae * C49904 + C49844 * C49858) + C50034 + C50034 +
         C49844 * (C49858 + C50031 + C50031 +
                   C49844 * (2 * ae * C49895 + C49844 * C49867))) /
        C49749;
    const double C1092 = C118 * C1083;
    const double C2489 = C2272 * C1083;
    const double C3530 = C2270 * C1083;
    const double C8153 = C7930 * C1083;
    const double C8149 = C7932 * C1083;
    const double C9183 = C7928 * C1083;
    const double C10810 = C10805 * C1083;
    const double C22952 = C22735 * C1083;
    const double C23984 = C22733 * C1083;
    const double C25835 = C25618 * C1083;
    const double C1553 = C118 * C1544;
    const double C3245 = C2272 * C1544;
    const double C4192 = C2270 * C1544;
    const double C8343 = C7932 * C1544;
    const double C8905 = C7930 * C1544;
    const double C9839 = C7928 * C1544;
    const double C23708 = C22735 * C1544;
    const double C24628 = C22733 * C1544;
    const double C26029 = C25618 * C1544;
    const double C6024 = C6021 + C6008;
    const double C18480 = C18472 + C18444;
    const double C19003 = C18997 + C18976;
    const double C6430 = C6429 + C6422;
    const double C18482 = C18474 + C18448;
    const double C19005 = C18999 + C18980;
    const double C17560 = C17559 * C50857;
    const double C21087 = C17559 * C50598;
    const double C40344 = C17559 * C25611;
    const double C15749 = C15748 + C15738;
    const double C49945 = ae * C49944;
    const double C292 = (2 * C49910 + C49851 * C49923 + C49844 * C49944 +
                         C49844 * C49939 * ae) /
                        C49731;
    const double C875 = (C49985 * C49944) / C49731;
    const double C162 = C154 + C155;
    const double C626 = C623 + C326;
    const double C2309 = C2297 + C2298;
    const double C504 = C494 + C495;
    const double C735 = C732 + C497;
    const double C50010 = C50009 + C50006;
    const double C1546 =
        (C49985 * C49877 + C50045 + C50045 +
         C49844 * (2 * ae * C49985 * C49938 + C49844 * C49985 * C49889)) /
        C49749;
    const double C50098 = ae * C50096;
    const double C50097 = C49844 * C50096;
    const double C50145 = C49985 * C50096;
    const double C50165 = 3 * C50096;
    const double C3683 =
        (C50013 + C49879 * C50036 + C50132 + C50132 +
         C49844 * (2 * ae * (C49928 + C49949 * C50036) +
                   C49844 * (C49879 + C49851 * C49887 * C50036))) /
        C49749;
    const double C4594 = C2272 * C4586;
    const double C6426 = C118 * C4586;
    const double C10237 = C7930 * C4586;
    const double C18990 = C2270 * C4586;
    const double C25021 = C22735 * C4586;
    const double C30148 = C22733 * C4586;
    const double C50304 = C50291 + C50228;
    const double C50229 = C50205 + C50227;
    const double C50250 = C50119 + C50247;
    const double C50276 = ae * C50271;
    const double C50380 = 2 * C50271;
    const double C50289 = ae * C50288;
    const double C14825 = (3 * C50135 + C49985 * C50288) / C49731;
    const double C322 = C50758 * C301;
    const double C2498 = C50884 * C301;
    const double C2476 = C50774 * C301;
    const double C7948 = C7924 * C301;
    const double C8531 = C7923 * C301;
    const double C22961 = C22727 * C301;
    const double C22939 = C50774 * C301;
    const double C25634 = C25610 * C301;
    const double C26217 = C50911 * C301;
    const double C332 = C320 + C321;
    const double C2512 = C2496 + C2497;
    const double C2506 = C2474 + C2475;
    const double C895 = C887 + C888;
    const double C2708 = C2676 + C2677;
    const double C3262 = C3252 + C3253;
    const double C6020 = C6013 + C1204;
    const double C2715 = C2701 + C2702;
    const double C171 = C166 + C153;
    const double C2324 = C2316 + C2296;
    const double C340 = C334 + C308;
    const double C2322 = C2314 + C2290;
    const double C2889 = C2887 + C2880;
    const double C511 = C505 + C479;
    const double C3048 = C3046 + C3039;
    const double C515 = C509 + C493;
    const double C2730 = C2722 + C2700;
    const double C50023 = ae * C50022;
    const double C1082 =
        (2 * C49914 + C49844 * C50022 + (C49911 + C49930 * C49848) * ae) /
        C49731;
    const double C1543 = (C49985 * C50022) / C49731;
    const double C3680 = (C50022 + C50096 * C50036) / C49731;
    const double C3251 = C50774 * C1547;
    const double C5331 = C50758 * C1547;
    const double C8336 = C7924 * C1547;
    const double C8912 = C7923 * C1547;
    const double C23714 = C50774 * C1547;
    const double C26022 = C25610 * C1547;
    const double C26598 = C50911 * C1547;
    const double C28715 = C22727 * C1547;
    const double C34980 = C50884 * C1547;
    const double C6022 = C6019 + C1205;
    const double C2721 = C2713 + C2696;
    const double C19001 = C18995 + C3689;
    const double C7330 = C5514 * C2267;
    const double C15743 = C5514 * C50857;
    const double C15735 = C5514 * C50603;
    const double C21090 = C5514 * C50598;
    const double C34167 = C5514 * C50899;
    const double C38568 = C5514 * C25611;
    const double C38562 = C5514 * C50603;
    const double C50122 = C50105 + C50120;
    const double C50153 = ae * C50151;
    const double C3690 = C2272 * C3681;
    const double C6924 = C118 * C3681;
    const double C8348 = C7932 * C3681;
    const double C9340 = C7930 * C3681;
    const double C14423 = C7928 * C3681;
    const double C18291 = C2270 * C3681;
    const double C24135 = C22735 * C3681;
    const double C26034 = C25618 * C3681;
    const double C30810 = C22733 * C3681;
    const double C12994 = C7924 * C3684;
    const double C13914 = C7923 * C3684;
    const double C17147 = C50758 * C3684;
    const double C18982 = C50774 * C3684;
    const double C19908 = C50884 * C3684;
    const double C30146 = C50774 * C3684;
    const double C44721 = C25610 * C3684;
    const double C45641 = C50911 * C3684;
    const double C48826 = C22727 * C3684;
    const double C18466 = C18449 + C4596;
    const double C16654 = C16648 + C6427;
    const double C19410 = C19403 + C18983;
    const double C139 =
        (5 * (3 * C49877 + C49851 * C49891) +
         C49851 *
             (4 * C49891 +
              C49851 * (3 * C49889 +
                        C49851 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C303 = (2 * ae * (3 * C49923 + C49851 * C49942) +
                         C49844 * (3 * C49877 + C49851 * C49891)) /
                        C49749;
    const double C473 = (2 * C49851 * C49867 + C49851 * C49877 +
                         C49891 * std::pow(zP - zQ, 2)) /
                        C49749;
    const double C474 = ((zP - zQ) * (3 * C49877 + C49851 * C49891)) / C49749;
    const double C475 =
        (3 * C49877 + C49851 * C49891 +
         (3 * C49889 +
          C49851 * (2 * C49851 * C49887 +
                    C49851 * (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863))) *
             std::pow(zP - zQ, 2)) /
        C49749;
    const double C730 =
        ((zP - zQ) *
         (4 * C49891 +
          C49851 * (3 * C49889 +
                    C49851 * (2 * C49851 * C49887 +
                              C49851 * (C49887 +
                                        (C49881 * C49882 +
                                         C49848 * bs[8] * std::pow(C49842, 8)) *
                                            C49847 * C49863))))) /
        C49749;
    const double C880 =
        (2 * ae * C49985 * C49942 + C49844 * C49985 * C49891) / C49749;
    const double C1198 =
        (2 * ae * (C49942 + C49964 * C50036) +
         C49844 * (C49891 +
                   (2 * C49851 * C49887 +
                    C49851 * (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863)) *
                       C50036)) /
        C49749;
    const double C1829 =
        (2 * C49985 * C49891 +
         C49985 * (C49891 +
                   (2 * C49851 * C49887 +
                    C49851 * (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863)) *
                       C50036)) /
        C49749;
    const double C5515 = C5511 + C5497;
    const double C50186 = C50170 + C50181;
    const double C50323 = C49844 * C50319;
    const double C14827 = (2 * ae *
                               (3 * (C49895 + C49919 * C50036) +
                                C49985 * (2 * C50268 + C49985 * C50346)) +
                           C49844 * (3 * C50249 + C49985 * C50384)) /
                          C49749;
    const double C17549 = (4 * (2 * C50150 + C49985 * C50249) +
                           C49985 * (3 * C50249 + C49985 * C50384)) /
                          C49749;
    const double C20316 =
        (2 * ae *
             (4 * (2 * C50268 + C49985 * C50346) +
              C49985 * (3 * C50346 +
                        C49985 * (2 * C50360 +
                                  C49985 * (C49933 + C49955 * C50036)))) +
         C49844 *
             (4 * C50384 +
              C49985 * (3 * C50347 +
                        C49985 * (2 * C50361 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50036))))) /
        C49749;
    const double C22295 =
        (5 * (3 * C50249 + C49985 * C50384) +
         C49985 *
             (4 * C50384 +
              C49985 * (3 * C50347 +
                        C49985 * (2 * C50361 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50036))))) /
        C49749;
    const double C50376 = C50366 + C50375;
    const double C49969 = C49844 * C49968;
    const double C621 =
        (2 * ae * (4 * C49942 + C49851 * C49968) +
         C49844 *
             (4 * C49891 +
              C49851 * (3 * C49889 +
                        C49851 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C881 =
        (2 * ae * C49985 * C49968 +
         C49844 * C49985 *
             (3 * C49889 +
              C49851 *
                  (2 * C49851 * C49887 +
                   C49851 * (C49887 + (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49847 * C49863)))) /
        C49749;
    const double C132 = (5 * (3 * C49923 + C49851 * C49942) +
                         C49851 * (4 * C49942 + C49851 * C49968)) /
                        C49731;
    const double C465 =
        (3 * C49923 + C49851 * C49942 + C49968 * C50036) / C49731;
    const double C620 = (C49844 * (4 * C49942 + C49851 * C49968) +
                         (4 * C49939 + C49851 * C49965) * ae) /
                        C49731;
    const double C729 = (C49985 * (4 * C49942 + C49851 * C49968)) / C49731;
    const double C49997 = ae * C49994;
    const double C49996 = C49844 * C49994;
    const double C50041 = C49985 * C49994;
    const double C1194 = (C49944 + C49994 * C50036) / C49731;
    const double C50073 = C50072 + C50066;
    const double C50128 = ae * C50127;
    const double C4585 = (2 * C50044 + C49985 * C50127) / C49731;
    const double C50192 = ae * C50189;
    const double C50191 = C49844 * C50189;
    const double C50238 = C50189 * C50036;
    const double C50258 = C49985 * C50189;
    const double C50283 = C50281 + C50282;
    const double C50328 = C50297 + C50324;
    const double C50349 = C50225 + C50344;
    const double C50371 = ae * C50364;
    const double C50388 = ae * C50386;
    const double C50391 = C49985 * C50386;
    const double C49779 = C49763 / C49731;
    const double C7929 =
        (-(((-4 * C49737) / C49731 - C49763 / C49731) * be) / C49731) / C49750 -
        ((2 * ((-C49751 / C49731) / C49750 - (0 * be) / C49731) -
          C49763 / (2 * C49749)) *
         be) /
            C49731;
    const double C7955 = C7927 * C122;
    const double C7952 = C7927 * C121;
    const double C7937 = C7927 * C120;
    const double C8155 = C7927 * C280;
    const double C8146 = C7927 * C277;
    const double C8349 = C7927 * C451;
    const double C8340 = C7927 * C448;
    const double C8528 = C7927 * C276;
    const double C8692 = C7927 * C447;
    const double C8907 = C7927 * C868;
    const double C12997 = C7927 * C450;
    const double C12987 = C7927 * C449;
    const double C13503 = C7927 * C867;
    const double C13911 = C7927 * C1193;
    const double C14415 = C7927 * C1540;
    const double C14829 = C7927 * C1824;
    const double C7961 = C7931 * C282;
    const double C7946 = C7931 * C281;
    const double C7943 = C7931 * C280;
    const double C8161 = C7931 * C3516;
    const double C8140 = C7931 * C1078;
    const double C8355 = C7931 * C3677;
    const double C8334 = C7931 * C1539;
    const double C8532 = C7931 * C1077;
    const double C8696 = C7931 * C1538;
    const double C8913 = C7931 * C4178;
    const double C12993 = C7931 * C3678;
    const double C12991 = C7931 * C1540;
    const double C13507 = C7931 * C4179;
    const double C13915 = C7931 * C9330;
    const double C14419 = C7931 * C9828;
    const double C14833 = C7931 * C10230;
    const double C22760 = C22734 * C283;
    const double C22751 = C22734 * C275;
    const double C22748 = C22734 * C276;
    const double C22742 = C22734 * C277;
    const double C22962 = C22734 * C1077;
    const double C22956 = C22734 * C1078;
    const double C22943 = C22734 * C280;
    const double C22937 = C22734 * C281;
    const double C23164 = C22734 * C1191;
    const double C23158 = C22734 * C1192;
    const double C23145 = C22734 * C868;
    const double C23139 = C22734 * C869;
    const double C23344 = C22734 * C282;
    const double C23503 = C22734 * C870;
    const double C23718 = C22734 * C1538;
    const double C23712 = C22734 * C1539;
    const double C28716 = C22734 * C4178;
    const double C28932 = C22734 * C4583;
    const double C28924 = C22734 * C1193;
    const double C28920 = C22734 * C867;
    const double C29606 = C22734 * C3677;
    const double C29601 = C22734 * C1540;
    const double C30145 = C22734 * C3678;
    const double C30805 = C22734 * C4179;
    const double C31337 = C22734 * C4584;
    const double C48327 = C22734 * C10230;
    const double C48827 = C22734 * C9330;
    const double C49230 = C22734 * C14823;
    const double C25647 = C25617 * C282;
    const double C25632 = C25617 * C281;
    const double C25629 = C25617 * C280;
    const double C25847 = C25617 * C3516;
    const double C25826 = C25617 * C1078;
    const double C26041 = C25617 * C3677;
    const double C26020 = C25617 * C1539;
    const double C26218 = C25617 * C1077;
    const double C26382 = C25617 * C1538;
    const double C26599 = C25617 * C4178;
    const double C44720 = C25617 * C3678;
    const double C44718 = C25617 * C1540;
    const double C45234 = C25617 * C4179;
    const double C45642 = C25617 * C9330;
    const double C46146 = C25617 * C9828;
    const double C46554 = C25617 * C10230;
    const double C49792 = C49787 - C49788;
    const double C343 = C337 + C319;
    const double C2526 = C2518 + C2492;
    const double C2524 = C2516 + C2482;
    const double C900 = C897 + C886;
    const double C2726 = C2718 + C2684;
    const double C3268 = C3264 + C3248;
    const double C15745 = C15733 + C15734;
    const double C38570 = C38560 + C38561;
    const double C6925 = C6918 + C1553;
    const double C18992 = C18977 + C3245;
    const double C19913 = C19903 + C4192;
    const double C6027 = C6024 * C2266;
    const double C16240 = C6024 * C50857;
    const double C21421 = C6024 * C50598;
    const double C32888 = C6024 * C50915;
    const double C39062 = C6024 * C25611;
    const double C6431 = C6430 * C2266;
    const double C16242 = C6430 * C50857;
    const double C21422 = C6430 * C50598;
    const double C33284 = C6430 * C50915;
    const double C39064 = C6430 * C25611;
    const double C18487 = C18481 + C18482;
    const double C17554 = C15749 * C50603;
    const double C21091 = C15749 * C50598;
    const double C40345 = C15749 * C50603;
    const double C302 =
        (2 * C49851 * C49867 + C49851 * C49877 + C49945 + C49945 +
         C49844 * (2 * ae * C49942 + C49844 * C49891)) /
        C49749;
    const double C324 = C118 * C292;
    const double C2505 = C2270 * C292;
    const double C2503 = C2272 * C292;
    const double C7962 = C7932 * C292;
    const double C8535 = C7930 * C292;
    const double C22968 = C22733 * C292;
    const double C22966 = C22735 * C292;
    const double C25648 = C25618 * C292;
    const double C891 = C118 * C875;
    const double C2705 = C2272 * C875;
    const double C3259 = C2270 * C875;
    const double C8699 = C7930 * C875;
    const double C23168 = C22735 * C875;
    const double C23722 = C22733 * C875;
    const double C167 = C162 + C155;
    const double C627 = C626 + C326;
    const double C2317 = C2309 + C2298;
    const double C510 = C504 + C495;
    const double C736 = C735 + C497;
    const double C50011 = ae * C50010;
    const double C1081 =
        (2 * C49925 + C49844 * C50010 + (C49920 + C49935 * C49848) * ae) /
        C49731;
    const double C1542 = (C49985 * C50010) / C49731;
    const double C3257 = C50774 * C1546;
    const double C5333 = C50758 * C1546;
    const double C8697 = C7924 * C1546;
    const double C23720 = C50774 * C1546;
    const double C26383 = C25610 * C1546;
    const double C50099 = C50082 + C50097;
    const double C50147 = ae * C50145;
    const double C8357 = C7924 * C3683;
    const double C15581 = C50758 * C3683;
    const double C18988 = C50774 * C3683;
    const double C26043 = C25610 * C3683;
    const double C29607 = C50774 * C3683;
    const double C18469 = C18457 + C4594;
    const double C16250 = C16244 + C6426;
    const double C50310 = C50304 + C50228;
    const double C50230 = C50229 + C50218;
    const double C50252 = ae * C50250;
    const double C10232 = (2 * C50151 + C49985 * C50250) / C49731;
    const double C10234 =
        (2 * C50150 + C49985 * C50249 + C50289 + C50289 +
         C49844 *
             (2 * ae * (2 * C50268 + C49985 * (C49919 + C49933 * C50036)) +
              C49844 * (2 * C50269 + C49985 * (C49875 + C49887 * C50036)))) /
        C49749;
    const double C14836 = C7930 * C14825;
    const double C16653 = C118 * C14825;
    const double C18454 = C2272 * C14825;
    const double C19409 = C2270 * C14825;
    const double C31341 = C22735 * C14825;
    const double C48331 = C22733 * C14825;
    const double C338 = C332 + C321;
    const double C2520 = C2512 + C2497;
    const double C2514 = C2506 + C2475;
    const double C898 = C895 + C888;
    const double C2716 = C2708 + C2677;
    const double C3266 = C3262 + C3253;
    const double C6023 = C6020 + C1204;
    const double C2723 = C2715 + C2702;
    const double C2327 = C2322 + C2323;
    const double C5500 = C511 * C2268;
    const double C5811 = C511 * C2267;
    const double C16043 = C511 * C50603;
    const double C32395 = C511 * C22731;
    const double C32692 = C511 * C50899;
    const double C38865 = C511 * C50603;
    const double C5502 = C515 * C2267;
    const double C5490 = C515 * C2268;
    const double C15742 = C515 * C50603;
    const double C16044 = C515 * C50857;
    const double C21289 = C515 * C50598;
    const double C32397 = C515 * C50899;
    const double C32390 = C515 * C22731;
    const double C38567 = C515 * C50603;
    const double C38866 = C515 * C25611;
    const double C1086 =
        (2 * (2 * ae * C49910 + C49844 * C50013) + C50023 + C50023 +
         C49844 * (C50013 + C50020 + C50020 +
                   C49844 * (2 * ae * C49928 + C49844 * C49879))) /
        C49749;
    const double C1091 = C118 * C1082;
    const double C2494 = C2272 * C1082;
    const double C3528 = C2270 * C1082;
    const double C8159 = C7930 * C1082;
    const double C8141 = C7932 * C1082;
    const double C9180 = C7928 * C1082;
    const double C10811 = C10805 * C1082;
    const double C22957 = C22735 * C1082;
    const double C23982 = C22733 * C1082;
    const double C25827 = C25618 * C1082;
    const double C1552 = C118 * C1543;
    const double C3250 = C2272 * C1543;
    const double C4190 = C2270 * C1543;
    const double C8335 = C7932 * C1543;
    const double C8911 = C7930 * C1543;
    const double C9836 = C7928 * C1543;
    const double C23713 = C22735 * C1543;
    const double C24626 = C22733 * C1543;
    const double C26021 = C25618 * C1543;
    const double C3688 = C2272 * C3680;
    const double C6923 = C118 * C3680;
    const double C8356 = C7932 * C3680;
    const double C9337 = C7930 * C3680;
    const double C18294 = C2270 * C3680;
    const double C24133 = C22735 * C3680;
    const double C26042 = C25618 * C3680;
    const double C30808 = C22733 * C3680;
    const double C6025 = C6022 + C6012;
    const double C2729 = C2721 + C2697;
    const double C19007 = C19001 + C18986;
    const double C17551 = C15735 + C15736;
    const double C40343 = C38562 + C38563;
    const double C50123 = C50122 + C50116;
    const double C4185 =
        (2 * (2 * ae * C49985 * C49895 + C49844 * C50150) + C50153 + C50153 +
         C49844 *
             (C50150 + C50154 + C50154 +
              C49844 * (2 * ae * C49985 * C49919 + C49844 * C49985 * C49875))) /
        C49749;
    const double C18994 = C18981 + C3690;
    const double C17151 = C17146 + C6924;
    const double C19915 = C19907 + C18291;
    const double C18475 = C18466 + C4596;
    const double C16655 = C16654 + C6427;
    const double C19413 = C19410 + C18983;
    const double C624 = C50758 * C303;
    const double C2299 = C50774 * C303;
    const double C22762 = C50774 * C303;
    const double C496 = C50758 * C473;
    const double C733 = C50758 * C474;
    const double C892 = C50758 * C880;
    const double C3041 = C50774 * C880;
    const double C23504 = C50774 * C880;
    const double C7331 = C5515 * C2268;
    const double C15744 = C5515 * C50603;
    const double C21290 = C5515 * C50598;
    const double C34168 = C5515 * C22731;
    const double C38569 = C5515 * C50603;
    const double C20322 = C50774 * C14827;
    const double C21691 = C50758 * C14827;
    const double C49231 = C50774 * C14827;
    const double C22298 = C50758 * C17549;
    const double C49970 = C49969 + C49967;
    const double C157 = C118 * C132;
    const double C498 = C118 * C465;
    const double C625 = C118 * C620;
    const double C2300 = C2272 * C620;
    const double C22763 = C22735 * C620;
    const double C734 = C118 * C729;
    const double C49998 = C49942 + C49996;
    const double C50042 = ae * C50041;
    const double C1203 = C118 * C1194;
    const double C2706 = C2272 * C1194;
    const double C23169 = C22735 * C1194;
    const double C50075 = ae * C50073;
    const double C50074 = C49844 * C50073;
    const double C50139 = C49985 * C50073;
    const double C3679 = (C50010 + C50073 * C50036) / C49731;
    const double C3682 =
        (C49877 + C49889 * C50036 + C50128 + C50128 +
         C49844 * (2 * ae * (C49938 + C49960 * C50036) +
                   C49844 * (C49889 +
                             (C49887 + (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C49863) *
                                 C50036))) /
        C49749;
    const double C4592 = C2272 * C4585;
    const double C6425 = C118 * C4585;
    const double C25019 = C22735 * C4585;
    const double C50193 = C50166 + C50191;
    const double C50241 = C50096 + C50238;
    const double C50263 = ae * C50258;
    const double C50284 = ae * C50283;
    const double C16645 = (3 * C50131 + C49985 * C50283) / C49731;
    const double C50330 = C50328 + C50313;
    const double C50354 = ae * C50349;
    const double C50381 = C49985 * C50349;
    const double C50392 = C50390 + C50391;
    const double C49791 = C49786 - C49779;
    const double C7958 = C7929 * C275;
    const double C7949 = C7929 * C276;
    const double C7940 = C7929 * C277;
    const double C8158 = C7929 * C1078;
    const double C8143 = C7929 * C280;
    const double C8352 = C7929 * C1192;
    const double C8337 = C7929 * C868;
    const double C8530 = C7929 * C281;
    const double C8694 = C7929 * C869;
    const double C8910 = C7929 * C1539;
    const double C12995 = C7929 * C1193;
    const double C12989 = C7929 * C867;
    const double C13505 = C7929 * C1540;
    const double C13913 = C7929 * C3678;
    const double C14417 = C7929 * C4179;
    const double C14831 = C7929 * C4584;
    const double C7973 = C7955 + C7956;
    const double C7972 = C7952 + C7953;
    const double C7967 = C7937 + C7938;
    const double C8173 = C8155 + C8156;
    const double C8172 = C8146 + C8147;
    const double C8367 = C8349 + C8350;
    const double C8366 = C8340 + C8341;
    const double C8537 = C8528 + C8164;
    const double C8701 = C8692 + C8358;
    const double C8919 = C8907 + C8908;
    const double C13004 = C12997 + C8346;
    const double C12999 = C12987 + C8345;
    const double C13509 = C13503 + C8904;
    const double C13920 = C13911 + C9341;
    const double C14424 = C14415 + C9839;
    const double C14838 = C14829 + C10241;
    const double C7970 = C7946 + C7947;
    const double C7969 = C7943 + C7944;
    const double C13002 = C12993 + C8348;
    const double C13001 = C12991 + C8343;
    const double C22772 = C22760 + C22761;
    const double C22769 = C22751 + C22752;
    const double C22768 = C22748 + C22749;
    const double C22766 = C22742 + C22743;
    const double C22971 = C22943 + C22944;
    const double C22969 = C22937 + C22938;
    const double C23178 = C23164 + C23165;
    const double C23176 = C23158 + C23159;
    const double C23173 = C23145 + C23146;
    const double C23171 = C23139 + C23140;
    const double C28939 = C28932 + C25021;
    const double C28936 = C28924 + C23154;
    const double C28935 = C28920 + C23151;
    const double C29610 = C29601 + C23708;
    const double C30152 = C30145 + C24135;
    const double C31344 = C31337 + C25023;
    const double C25656 = C25632 + C25633;
    const double C25655 = C25629 + C25630;
    const double C44729 = C44720 + C26034;
    const double C44728 = C44718 + C26029;
    const double C10799 =
        ((((0 - (C49729 * C49773) / C49731) * ae) / C49731 - (0 * be) / C49777 +
          C49748 / C49731) /
             C49750 -
         ((C49729 * C49797 + 0) * be) / C49731) /
            C49750 -
        ((C49729 * (C49797 / C49750 -
                    ((C49729 * C49792 + C50884) * be) / C49731 + C49793) +
          C50922) *
         be) /
            C49731 +
        C49792 / C49750 - ((C49729 * C49793 + C50774) * be) / C49731;
    const double C10801 =
        (C49797 / C49750 - ((C49729 * C49792 + C50884) * be) / C49731 +
         C49793) /
            C49750 -
        ((C49729 *
              (C49792 / C49750 - ((C49729 * C49793 + C50774) * be) / C49731) +
          C50911) *
         be) /
            C49731 +
        2 * (C49793 / C49750 - (0 * be) / C49731);
    const double C10803 =
        (C49792 / C49750 - ((C49729 * C49793 + C50774) * be) / C49731) /
            C49750 -
        ((C49729 * (C49793 / C49750 - (0 * be) / C49731) + C25610) * be) /
            C49731;
    const double C25614 =
        C49797 / C49750 - ((C49729 * C49792 + C50884) * be) / C49731 + C49793;
    const double C25616 =
        C49792 / C49750 - ((C49729 * C49793 + C50774) * be) / C49731;
    const double C6015 = C900 * C2266;
    const double C6009 = C900 * C2267;
    const double C16246 = C900 * C50857;
    const double C16241 = C900 * C50603;
    const double C21424 = C900 * C50598;
    const double C32891 = C900 * C50915;
    const double C32889 = C900 * C50899;
    const double C39066 = C900 * C25611;
    const double C39063 = C900 * C50603;
    const double C35184 = C2726 + C2727;
    const double C35183 = C2727 + C2726;
    const double C6926 = C6925 + C1553;
    const double C18998 = C18992 + C3245;
    const double C19917 = C19913 + C4192;
    const double C18488 = C18487 * C50598;
    const double C325 = C50758 * C302;
    const double C2882 = C50774 * C302;
    const double C7963 = C7924 * C302;
    const double C23345 = C50774 * C302;
    const double C25649 = C25610 * C302;
    const double C333 = C323 + C324;
    const double C2886 = C2881 + C2503;
    const double C7975 = C7961 + C7962;
    const double C23349 = C23344 + C22966;
    const double C25661 = C25647 + C25648;
    const double C896 = C890 + C891;
    const double C3045 = C3040 + C2705;
    const double C23508 = C23503 + C23168;
    const double C172 = C167 + C156;
    const double C1085 =
        (2 * (2 * ae * C49923 + C49844 * C49877) + C50011 + C50011 +
         C49844 * (C49877 + C50008 + C50008 +
                   C49844 * (2 * ae * C49938 + C49844 * C49889))) /
        C49749;
    const double C1090 = C118 * C1081;
    const double C2500 = C2272 * C1081;
    const double C3526 = C2270 * C1081;
    const double C8168 = C7930 * C1081;
    const double C8166 = C7932 * C1081;
    const double C10818 = C10805 * C1081;
    const double C22963 = C22735 * C1081;
    const double C23980 = C22733 * C1081;
    const double C25852 = C25618 * C1081;
    const double C1551 = C118 * C1542;
    const double C3256 = C2272 * C1542;
    const double C4188 = C2270 * C1542;
    const double C8360 = C7932 * C1542;
    const double C8917 = C7930 * C1542;
    const double C23719 = C22735 * C1542;
    const double C24624 = C22733 * C1542;
    const double C26046 = C25618 * C1542;
    const double C50100 = C50099 + C50093;
    const double C4184 =
        (2 * (2 * ae * C49985 * C49928 + C49844 * C50144) + C50147 + C50147 +
         C49844 * (C50144 + C50148 + C50148 +
                   C49844 * (2 * ae * C49985 * C49949 +
                             C49844 * C49985 * C49851 * C49887))) /
        C49749;
    const double C18478 = C18469 + C4594;
    const double C16251 = C16250 + C6426;
    const double C50327 = C50310 + C50323;
    const double C50232 = ae * C50230;
    const double C50231 = C49844 * C50230;
    const double C50270 = C49985 * C50230;
    const double C50295 = 4 * C50230;
    const double C9334 =
        (2 * (2 * ae * (C49895 + C49919 * C50036) + C49844 * C50249) + C50252 +
         C50252 +
         C49844 * (C50249 + C50253 + C50253 +
                   C49844 * (2 * ae * (C49919 + C49933 * C50036) +
                             C49844 * (C49875 + C49887 * C50036)))) /
        C49749;
    const double C10239 = C7932 * C10232;
    const double C13918 = C7930 * C10232;
    const double C17150 = C118 * C10232;
    const double C18984 = C2272 * C10232;
    const double C19912 = C2270 * C10232;
    const double C27901 = C25618 * C10232;
    const double C30149 = C22735 * C10232;
    const double C48830 = C22733 * C10232;
    const double C14834 = C7924 * C10234;
    const double C19406 = C50774 * C10234;
    const double C22026 = C50758 * C10234;
    const double C46555 = C25610 * C10234;
    const double C48328 = C50774 * C10234;
    const double C21693 = C21690 + C16653;
    const double C20327 = C20321 + C18454;
    const double C49236 = C49230 + C31341;
    const double C344 = C338 + C322;
    const double C2528 = C2520 + C2498;
    const double C2522 = C2514 + C2476;
    const double C901 = C898 + C889;
    const double C2724 = C2716 + C2678;
    const double C3270 = C3266 + C3254;
    const double C6026 = C6023 + C6014;
    const double C2731 = C2723 + C2703;
    const double C15747 = C15742 + C15741;
    const double C38571 = C38567 + C38566;
    const double C2495 = C50774 * C1086;
    const double C8160 = C7923 * C1086;
    const double C8142 = C7924 * C1086;
    const double C22958 = C50774 * C1086;
    const double C25846 = C50911 * C1086;
    const double C25828 = C25610 * C1086;
    const double C2511 = C2493 + C2494;
    const double C8170 = C8140 + C8141;
    const double C22974 = C22956 + C22957;
    const double C25856 = C25826 + C25827;
    const double C5334 = C5330 + C1552;
    const double C3261 = C3249 + C3250;
    const double C34983 = C34979 + C4190;
    const double C8364 = C8334 + C8335;
    const double C23724 = C23712 + C23713;
    const double C26050 = C26020 + C26021;
    const double C18996 = C18987 + C3688;
    const double C15582 = C15580 + C6923;
    const double C8369 = C8355 + C8356;
    const double C29612 = C29606 + C24133;
    const double C26055 = C26041 + C26042;
    const double C6423 = C6025 * C2267;
    const double C16248 = C6025 * C50857;
    const double C16243 = C6025 * C50603;
    const double C21425 = C6025 * C50598;
    const double C33285 = C6025 * C50899;
    const double C39068 = C6025 * C25611;
    const double C39065 = C6025 * C50603;
    const double C18459 = C2729 + C2728;
    const double C35185 = C2728 + C2729;
    const double C50124 = ae * C50123;
    const double C3520 =
        (3 * C50033 + C49844 * C50123 + (2 * C50027 + C49844 * C50113) * ae) /
        C49731;
    const double C4182 = (C49985 * C50123) / C49731;
    const double C9332 = (C50123 + C50230 * C50036) / C49731;
    const double C13508 = C7924 * C4185;
    const double C14418 = C7923 * C4185;
    const double C19906 = C50774 * C4185;
    const double C30806 = C50774 * C4185;
    const double C45235 = C25610 * C4185;
    const double C46145 = C50911 * C4185;
    const double C19000 = C18994 + C3690;
    const double C17152 = C17151 + C6924;
    const double C19919 = C19915 + C18291;
    const double C18483 = C18475 + C18450;
    const double C16656 = C16655 + C16649;
    const double C19415 = C19413 + C19404;
    const double C628 = C627 + C624;
    const double C2325 = C2317 + C2299;
    const double C516 = C510 + C496;
    const double C737 = C736 + C733;
    const double C22302 = C22301 + C22298;
    const double C49971 = ae * C49970;
    const double C294 = (3 * C49923 + C49851 * C49942 + C49844 * C49970 +
                         C49844 * C49965 * ae) /
                        C49731;
    const double C876 = (C49985 * C49970) / C49731;
    const double C49999 = C49998 + C49995;
    const double C1545 =
        (C49985 * C49891 + C50042 + C50042 +
         C49844 *
             (2 * ae * C49985 * C49964 +
              C49844 * C49985 *
                  (2 * C49851 * C49887 +
                   C49851 * (C49887 + (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49847 * C49863)))) /
        C49749;
    const double C50076 = C50059 + C50074;
    const double C50141 = ae * C50139;
    const double C3686 = C2272 * C3679;
    const double C6922 = C118 * C3679;
    const double C8361 = C7932 * C3679;
    const double C24131 = C22735 * C3679;
    const double C26047 = C25618 * C3679;
    const double C50194 = C50193 + C50183;
    const double C50243 = ae * C50241;
    const double C10231 = (2 * C50145 + C49985 * C50241) / C49731;
    const double C10233 =
        (2 * C50144 + C49985 * C50240 + C50284 + C50284 +
         C49844 * (2 * ae * (2 * C50255 + C49985 * (C49949 + C50167 * C50036)) +
                   C49844 * (2 * C50256 +
                             C49985 * (C50164 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50036)))) /
        C49749;
    const double C16652 = C118 * C16645;
    const double C18460 = C2272 * C16645;
    const double C31339 = C22735 * C16645;
    const double C50332 = ae * C50330;
    const double C50331 = C49844 * C50330;
    const double C50343 = C50330 * C50036;
    const double C50363 = C49985 * C50330;
    const double C50385 = C50380 + C50381;
    const double C50393 = ae * C50392;
    const double C20315 = (4 * C50288 + C49985 * C50392) / C49731;
    const double C49795 = C49791 * ae;
    const double C22732 = -(C49791 * be) / C49731;
    const double C7974 = C7958 + C7959;
    const double C7971 = C7949 + C7950;
    const double C7968 = C7940 + C7941;
    const double C8174 = C8158 + C8159;
    const double C8171 = C8143 + C8144;
    const double C8368 = C8352 + C8353;
    const double C8365 = C8337 + C8338;
    const double C8538 = C8530 + C8165;
    const double C8702 = C8694 + C8359;
    const double C8920 = C8910 + C8911;
    const double C13003 = C12995 + C8347;
    const double C13000 = C12989 + C8344;
    const double C13510 = C13505 + C8905;
    const double C13921 = C13913 + C9340;
    const double C14839 = C14831 + C10240;
    const double C7982 = C7973 + C7956;
    const double C7981 = C7972 + C7953;
    const double C7976 = C7967 + C7938;
    const double C8179 = C8173 + C8156;
    const double C8178 = C8172 + C8147;
    const double C8373 = C8367 + C8350;
    const double C8372 = C8366 + C8341;
    const double C8540 = C8537 + C8164;
    const double C8704 = C8701 + C8358;
    const double C8922 = C8919 + C8908;
    const double C13010 = C13004 + C8346;
    const double C13005 = C12999 + C8345;
    const double C13512 = C13509 + C8904;
    const double C13923 = C13920 + C9341;
    const double C14427 = C14424 + C9839;
    const double C14841 = C14838 + C10241;
    const double C7979 = C7970 + C7947;
    const double C7978 = C7969 + C7944;
    const double C13008 = C13002 + C8348;
    const double C13007 = C13001 + C8343;
    const double C22780 = C22772 + C22761;
    const double C22777 = C22769 + C22752;
    const double C22776 = C22768 + C22749;
    const double C22774 = C22766 + C22743;
    const double C22979 = C22971 + C22944;
    const double C22977 = C22969 + C22938;
    const double C23186 = C23178 + C23165;
    const double C23184 = C23176 + C23159;
    const double C23181 = C23173 + C23146;
    const double C23179 = C23171 + C23140;
    const double C28945 = C28939 + C25021;
    const double C28942 = C28936 + C23154;
    const double C28941 = C28935 + C23151;
    const double C29614 = C29610 + C23708;
    const double C30154 = C30152 + C24135;
    const double C31346 = C31344 + C25023;
    const double C25665 = C25656 + C25633;
    const double C25664 = C25655 + C25630;
    const double C44735 = C44729 + C26034;
    const double C44734 = C44728 + C26029;
    const double C10822 = C10799 * C129;
    const double C10815 = C10799 * C128;
    const double C10814 = C10799 * C127;
    const double C10807 = C10799 * C126;
    const double C10936 = C10799 * C290;
    const double C10929 = C10799 * C287;
    const double C10925 = C10799 * C289;
    const double C10924 = C10799 * C288;
    const double C11050 = C10799 * C461;
    const double C11043 = C10799 * C458;
    const double C11039 = C10799 * C460;
    const double C11038 = C10799 * C459;
    const double C11152 = C10799 * C286;
    const double C11254 = C10799 * C457;
    const double C11392 = C10799 * C873;
    const double C11385 = C10799 * C872;
    const double C11563 = C10799 * C1083;
    const double C11668 = C10799 * C1197;
    const double C12001 = C10799 * C1544;
    const double C12270 = C10799 * C1828;
    const double C10821 = C10801 * C285;
    const double C10816 = C10801 * C286;
    const double C10813 = C10801 * C287;
    const double C10808 = C10801 * C288;
    const double C10935 = C10801 * C1082;
    const double C10930 = C10801 * C290;
    const double C10926 = C10801 * C1083;
    const double C10923 = C10801 * C289;
    const double C11049 = C10801 * C1196;
    const double C11044 = C10801 * C873;
    const double C11040 = C10801 * C1197;
    const double C11037 = C10801 * C872;
    const double C11151 = C10801 * C291;
    const double C11253 = C10801 * C874;
    const double C11391 = C10801 * C1543;
    const double C11386 = C10801 * C1544;
    const double C11667 = C10801 * C3681;
    const double C12269 = C10801 * C4587;
    const double C10820 = C10803 * C292;
    const double C10817 = C10803 * C291;
    const double C10812 = C10803 * C290;
    const double C10809 = C10803 * C289;
    const double C10931 = C10803 * C1082;
    const double C10922 = C10803 * C1083;
    const double C11048 = C10803 * C3680;
    const double C11045 = C10803 * C1543;
    const double C11041 = C10803 * C3681;
    const double C11036 = C10803 * C1544;
    const double C11150 = C10803 * C1081;
    const double C11252 = C10803 * C1542;
    const double C12268 = C10803 * C10232;
    const double C25652 = C25614 * C130;
    const double C25642 = C25614 * C129;
    const double C25639 = C25614 * C128;
    const double C25624 = C25614 * C127;
    const double C25620 = C25614 * C126;
    const double C25855 = C25614 * C291;
    const double C25850 = C25614 * C286;
    const double C25842 = C25614 * C290;
    const double C25838 = C25614 * C289;
    const double C25837 = C25614 * C288;
    const double C25833 = C25614 * C287;
    const double C26049 = C25614 * C462;
    const double C26044 = C25614 * C457;
    const double C26036 = C25614 * C461;
    const double C26032 = C25614 * C460;
    const double C26031 = C25614 * C459;
    const double C26027 = C25614 * C458;
    const double C26222 = C25614 * C285;
    const double C26386 = C25614 * C456;
    const double C26604 = C25614 * C874;
    const double C26594 = C25614 * C873;
    const double C26590 = C25614 * C872;
    const double C26863 = C25614 * C1083;
    const double C26860 = C25614 * C1082;
    const double C27015 = C25614 * C1197;
    const double C27012 = C25614 * C1196;
    const double C27507 = C25614 * C1544;
    const double C27504 = C25614 * C1543;
    const double C27903 = C25614 * C1828;
    const double C27900 = C25614 * C1827;
    const double C45646 = C25614 * C4587;
    const double C46150 = C25614 * C3681;
    const double C46558 = C25614 * C7323;
    const double C25651 = C25616 * C293;
    const double C25645 = C25616 * C285;
    const double C25636 = C25616 * C286;
    const double C25627 = C25616 * C287;
    const double C25621 = C25616 * C288;
    const double C25854 = C25616 * C1081;
    const double C25851 = C25616 * C291;
    const double C25845 = C25616 * C1082;
    const double C25839 = C25616 * C1083;
    const double C25836 = C25616 * C289;
    const double C25830 = C25616 * C290;
    const double C26048 = C25616 * C1195;
    const double C26045 = C25616 * C874;
    const double C26039 = C25616 * C1196;
    const double C26033 = C25616 * C1197;
    const double C26030 = C25616 * C872;
    const double C26024 = C25616 * C873;
    const double C26221 = C25616 * C292;
    const double C26385 = C25616 * C875;
    const double C26603 = C25616 * C1542;
    const double C26597 = C25616 * C1543;
    const double C26591 = C25616 * C1544;
    const double C27014 = C25616 * C3681;
    const double C27011 = C25616 * C3680;
    const double C27902 = C25616 * C4587;
    const double C27899 = C25616 * C4586;
    const double C45645 = C25616 * C10232;
    const double C46557 = C25616 * C14825;
    const double C6927 = C6926 + C6919;
    const double C19004 = C18998 + C18978;
    const double C19921 = C19917 + C19904;
    const double C339 = C333 + C324;
    const double C2888 = C2886 + C2503;
    const double C7984 = C7975 + C7962;
    const double C23351 = C23349 + C22966;
    const double C25670 = C25661 + C25648;
    const double C899 = C896 + C891;
    const double C3047 = C3045 + C2705;
    const double C23510 = C23508 + C23168;
    const double C2501 = C50774 * C1085;
    const double C8533 = C7924 * C1085;
    const double C22964 = C50774 * C1085;
    const double C26219 = C25610 * C1085;
    const double C2513 = C2499 + C2500;
    const double C8539 = C8532 + C8166;
    const double C22976 = C22962 + C22963;
    const double C26225 = C26218 + C25852;
    const double C5335 = C5332 + C1551;
    const double C3263 = C3255 + C3256;
    const double C8703 = C8696 + C8360;
    const double C23726 = C23718 + C23719;
    const double C26389 = C26382 + C26046;
    const double C50101 = ae * C50100;
    const double C3519 =
        (3 * C50022 + C49844 * C50100 + (2 * C50016 + C49844 * C50090) * ae) /
        C49731;
    const double C4181 = (C49985 * C50100) / C49731;
    const double C8915 = C7924 * C4184;
    const double C26601 = C25610 * C4184;
    const double C28717 = C50774 * C4184;
    const double C34982 = C50774 * C4184;
    const double C18486 = C18478 + C18458;
    const double C16252 = C16251 + C16245;
    const double C50233 = C50204 + C50231;
    const double C50275 = ae * C50270;
    const double C13916 = C7924 * C9334;
    const double C19910 = C50774 * C9334;
    const double C45643 = C25610 * C9334;
    const double C48828 = C50774 * C9334;
    const double C14840 = C14833 + C10239;
    const double C22028 = C22025 + C17150;
    const double C19411 = C19405 + C18984;
    const double C46561 = C46554 + C27901;
    const double C48333 = C48327 + C30149;
    const double C21694 = C21693 + C16653;
    const double C20329 = C20327 + C18454;
    const double C49238 = C49236 + C31341;
    const double C2878 = C2522 + C2523;
    const double C6016 = C901 * C2267;
    const double C6010 = C901 * C2268;
    const double C16247 = C901 * C50603;
    const double C32892 = C901 * C50899;
    const double C32890 = C901 * C22731;
    const double C39067 = C901 * C50603;
    const double C3037 = C2724 + C2725;
    const double C35574 = C2725 + C2724;
    const double C6424 = C6026 * C2268;
    const double C16249 = C6026 * C50603;
    const double C33286 = C6026 * C22731;
    const double C39069 = C6026 * C50603;
    const double C2519 = C2511 + C2494;
    const double C8176 = C8170 + C8141;
    const double C22982 = C22974 + C22957;
    const double C25862 = C25856 + C25827;
    const double C5336 = C5334 + C1552;
    const double C3265 = C3261 + C3250;
    const double C34985 = C34983 + C4190;
    const double C8370 = C8364 + C8335;
    const double C23728 = C23724 + C23713;
    const double C26056 = C26050 + C26021;
    const double C19002 = C18996 + C3688;
    const double C15583 = C15582 + C6923;
    const double C8375 = C8369 + C8356;
    const double C29616 = C29612 + C24133;
    const double C26061 = C26055 + C26042;
    const double C16651 = C16243 + C16242;
    const double C39462 = C39065 + C39064;
    const double C18470 = C18459 * C50598;
    const double C3523 =
        (3 * (C49858 + C50031 + C50031 + C49844 * C50114) + C50124 + C50124 +
         C49844 * (2 * C50114 + C50121 + C50121 +
                   C49844 * (C49867 + C50117 + C50117 +
                             C49844 * (2 * ae * C49919 + C49844 * C49875)))) /
        C49749;
    const double C3529 = C2272 * C3520;
    const double C8154 = C7932 * C3520;
    const double C9182 = C7930 * C3520;
    const double C10927 = C10803 * C3520;
    const double C10921 = C10805 * C3520;
    const double C11562 = C10801 * C3520;
    const double C23983 = C22735 * C3520;
    const double C25840 = C25618 * C3520;
    const double C26862 = C25616 * C3520;
    const double C4191 = C2272 * C4182;
    const double C6274 = C118 * C4182;
    const double C8906 = C7932 * C4182;
    const double C9838 = C7930 * C4182;
    const double C11035 = C10805 * C4182;
    const double C11387 = C10803 * C4182;
    const double C12000 = C10801 * C4182;
    const double C13764 = C7928 * C4182;
    const double C19256 = C2270 * C4182;
    const double C24627 = C22735 * C4182;
    const double C26592 = C25618 * C4182;
    const double C27506 = C25616 * C4182;
    const double C29948 = C22733 * C4182;
    const double C45491 = C25614 * C4182;
    const double C9339 = C7932 * C9332;
    const double C11042 = C10805 * C9332;
    const double C11666 = C10803 * C9332;
    const double C14422 = C7930 * C9332;
    const double C16498 = C118 * C9332;
    const double C18292 = C2272 * C9332;
    const double C19254 = C2270 * C9332;
    const double C27013 = C25618 * C9332;
    const double C30809 = C22735 * C9332;
    const double C46149 = C25616 * C9332;
    const double C48178 = C22733 * C9332;
    const double C19006 = C19000 + C18982;
    const double C17153 = C17152 + C17147;
    const double C19923 = C19919 + C19908;
    const double C20318 = C18483 + C18484;
    const double C16657 = C16656 * C50857;
    const double C21423 = C16656 * C50598;
    const double C39460 = C16656 * C25611;
    const double C5503 = C516 * C2268;
    const double C16045 = C516 * C50603;
    const double C32398 = C516 * C22731;
    const double C38867 = C516 * C50603;
    const double C5812 = C737 * C2268;
    const double C32693 = C737 * C22731;
    const double C22303 = C22302 * C50598;
    const double C304 =
        (3 * C49877 + C49851 * C49891 + C49971 + C49971 +
         C49844 *
             (2 * ae * C49968 +
              C49844 * (3 * C49889 +
                        C49851 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C327 = C118 * C294;
    const double C2883 = C2272 * C294;
    const double C7964 = C7932 * C294;
    const double C23346 = C22735 * C294;
    const double C25650 = C25618 * C294;
    const double C893 = C118 * C876;
    const double C3042 = C2272 * C876;
    const double C23505 = C22735 * C876;
    const double C50000 = ae * C49999;
    const double C1080 =
        (2 * C49944 + C49844 * C49999 + (C49939 + C49961 * C49848) * ae) /
        C49731;
    const double C1541 = (C49985 * C49999) / C49731;
    const double C50077 = C50076 + C50070;
    const double C4183 =
        (2 * (2 * ae * C49985 * C49938 + C49844 * C50138) + C50141 + C50141 +
         C49844 *
             (C50138 + C50142 + C50142 +
              C49844 * (2 * ae * C49985 * C49960 +
                        C49844 * C49985 *
                            (C49887 + (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                          C49847 * C49863)))) /
        C49749;
    const double C50196 = ae * C50194;
    const double C50195 = C49844 * C50194;
    const double C50257 = C49985 * C50194;
    const double C9331 = (C50100 + C50194 * C50036) / C49731;
    const double C9333 =
        (2 * (2 * ae * (C49928 + C49949 * C50036) + C49844 * C50240) + C50243 +
         C50243 +
         C49844 * (C50240 + C50244 + C50244 +
                   C49844 * (2 * ae * (C49949 + C50167 * C50036) +
                             C49844 * (C50164 + C49851 *
                                                    (C49881 * C49882 +
                                                     C49848 * bs[8] *
                                                         std::pow(C49842, 8)) *
                                                    C49847 * C50036)))) /
        C49749;
    const double C10236 = C7932 * C10231;
    const double C17149 = C118 * C10231;
    const double C18989 = C2272 * C10231;
    const double C27898 = C25618 * C10231;
    const double C30147 = C22735 * C10231;
    const double C50333 = C50296 + C50331;
    const double C50348 = C50230 + C50343;
    const double C50370 = ae * C50363;
    const double C50387 = ae * C50385;
    const double C14824 = (3 * C50250 + C49985 * C50385) / C49731;
    const double C14826 =
        (3 * C50249 + C49985 * C50384 + C50393 + C50393 +
         C49844 *
             (2 * ae *
                  (3 * C50346 +
                   C49985 *
                       (2 * C50360 + C49985 * (C49933 + C49955 * C50036))) +
              C49844 * (3 * C50347 +
                        C49985 * (2 * C50361 +
                                  C49985 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50036))))) /
        C49749;
    const double C20323 = C2272 * C20315;
    const double C21692 = C118 * C20315;
    const double C49232 = C22735 * C20315;
    const double C10798 =
        ((ae * -2 * C49773) / C49774 -
         (((C49729 * C49783) / C49749 + 2 * C49797) * be) / C49731) /
            C49750 -
        ((C49729 * (C49783 / C49774 -
                    (((C49729 * C49795) / C49731 + 2 * C49792) * be) / C49731 -
                    C49756 / C49777) +
          2 * (C49797 / C49750 - ((C49729 * C49792 + C50884) * be) / C49731 +
               C49793)) *
         be) /
            C49731 +
        C49795 / C49777 - ((2 * C49793 - C49763 / C49777) * be) / C49731;
    const double C10800 =
        (C49783 / C49774 -
         (((C49729 * C49795) / C49731 + 2 * C49792) * be) / C49731 -
         C49756 / C49777) /
            C49750 -
        ((C49729 * (C49795 / C49777 -
                    ((2 * C49793 - C49763 / C49777) * be) / C49731) +
          2 * (C49792 / C49750 - ((C49729 * C49793 + C50774) * be) / C49731)) *
         be) /
            C49731 +
        (-2 * C49756) / (C49731 * 4 * C49749);
    const double C10802 =
        (C49795 / C49777 - ((2 * C49793 - C49763 / C49777) * be) / C49731) /
            C49750 -
        ((2 * (C49793 / C49750 - (0 * be) / C49731) -
          C49763 / (C49731 * 4 * C49749)) *
         be) /
            C49731;
    const double C25613 =
        C49783 / C49774 -
        (((C49729 * C49795) / C49731 + 2 * C49792) * be) / C49731 -
        C49756 / C49777;
    const double C25615 =
        C49795 / C49777 - ((2 * C49793 - C49763 / C49777) * be) / C49731;
    const double C22757 = C22732 * C123;
    const double C22754 = C22732 * C122;
    const double C22745 = C22732 * C121;
    const double C22739 = C22732 * C120;
    const double C22959 = C22732 * C281;
    const double C22953 = C22732 * C280;
    const double C22946 = C22732 * C277;
    const double C22940 = C22732 * C276;
    const double C23161 = C22732 * C452;
    const double C23155 = C22732 * C451;
    const double C23148 = C22732 * C448;
    const double C23142 = C22732 * C447;
    const double C23342 = C22732 * C275;
    const double C23501 = C22732 * C446;
    const double C23715 = C22732 * C869;
    const double C23709 = C22732 * C868;
    const double C28714 = C22732 * C1539;
    const double C28930 = C22732 * C1823;
    const double C28926 = C22732 * C450;
    const double C28918 = C22732 * C449;
    const double C29604 = C22732 * C1192;
    const double C29599 = C22732 * C867;
    const double C30143 = C22732 * C1193;
    const double C30803 = C22732 * C1540;
    const double C31335 = C22732 * C1824;
    const double C48325 = C22732 * C4584;
    const double C48825 = C22732 * C3678;
    const double C49228 = C22732 * C7320;
    const double C7983 = C7974 + C7959;
    const double C7980 = C7971 + C7950;
    const double C7977 = C7968 + C7941;
    const double C8180 = C8174 + C8159;
    const double C8177 = C8171 + C8144;
    const double C8374 = C8368 + C8353;
    const double C8371 = C8365 + C8338;
    const double C8541 = C8538 + C8165;
    const double C8705 = C8702 + C8359;
    const double C8923 = C8920 + C8911;
    const double C13009 = C13003 + C8347;
    const double C13006 = C13000 + C8344;
    const double C13513 = C13510 + C8905;
    const double C13924 = C13921 + C9340;
    const double C14842 = C14839 + C10240;
    const double C7991 = C7982 + C7957;
    const double C7990 = C7981 + C7954;
    const double C7985 = C7976 + C7939;
    const double C8185 = C8179 + C8157;
    const double C8184 = C8178 + C8148;
    const double C8379 = C8373 + C8351;
    const double C8378 = C8372 + C8342;
    const double C8543 = C8540 + C8529;
    const double C8707 = C8704 + C8693;
    const double C8925 = C8922 + C8909;
    const double C13016 = C13010 + C12998;
    const double C13011 = C13005 + C12988;
    const double C13515 = C13512 + C13504;
    const double C13926 = C13923 + C13912;
    const double C14430 = C14427 + C14416;
    const double C14844 = C14841 + C14830;
    const double C7988 = C7979 + C7948;
    const double C7987 = C7978 + C7945;
    const double C13014 = C13008 + C12994;
    const double C13013 = C13007 + C12992;
    const double C22788 = C22780 + C22762;
    const double C22785 = C22777 + C22753;
    const double C22784 = C22776 + C22750;
    const double C22782 = C22774 + C22744;
    const double C22987 = C22979 + C22945;
    const double C22985 = C22977 + C22939;
    const double C23194 = C23186 + C23166;
    const double C23192 = C23184 + C23160;
    const double C23189 = C23181 + C23147;
    const double C23187 = C23179 + C23141;
    const double C28951 = C28945 + C28933;
    const double C28948 = C28942 + C28925;
    const double C28947 = C28941 + C28921;
    const double C29618 = C29614 + C29602;
    const double C30156 = C30154 + C30146;
    const double C31348 = C31346 + C31338;
    const double C25674 = C25665 + C25634;
    const double C25673 = C25664 + C25631;
    const double C44741 = C44735 + C44721;
    const double C44740 = C44734 + C44719;
    const double C6928 = C6927 * C2266;
    const double C17144 = C6927 * C50857;
    const double C22023 = C6927 * C50598;
    const double C33773 = C6927 * C50915;
    const double C39949 = C6927 * C25611;
    const double C345 = C339 + C325;
    const double C2890 = C2888 + C2882;
    const double C7993 = C7984 + C7963;
    const double C23353 = C23351 + C23345;
    const double C25679 = C25670 + C25649;
    const double C902 = C899 + C892;
    const double C3049 = C3047 + C3041;
    const double C23512 = C23510 + C23504;
    const double C2521 = C2513 + C2500;
    const double C8542 = C8539 + C8166;
    const double C22984 = C22976 + C22963;
    const double C26228 = C26225 + C25852;
    const double C5337 = C5335 + C1551;
    const double C3267 = C3263 + C3256;
    const double C8706 = C8703 + C8360;
    const double C23730 = C23726 + C23719;
    const double C26392 = C26389 + C26046;
    const double C3522 =
        (3 * (C50013 + C50020 + C50020 + C49844 * C50091) + C50101 + C50101 +
         C49844 * (2 * C50091 + C50098 + C50098 +
                   C49844 * (C49879 + C50094 + C50094 +
                             C49844 * (2 * ae * C49949 +
                                       C49844 * C49851 * C49887)))) /
        C49749;
    const double C3527 = C2272 * C3519;
    const double C8162 = C7932 * C3519;
    const double C9179 = C7930 * C3519;
    const double C10934 = C10803 * C3519;
    const double C10932 = C10805 * C3519;
    const double C23981 = C22735 * C3519;
    const double C25848 = C25618 * C3519;
    const double C26859 = C25616 * C3519;
    const double C4189 = C2272 * C4181;
    const double C6273 = C118 * C4181;
    const double C8914 = C7932 * C4181;
    const double C9835 = C7930 * C4181;
    const double C11046 = C10805 * C4181;
    const double C11390 = C10803 * C4181;
    const double C24625 = C22735 * C4181;
    const double C26600 = C25618 * C4181;
    const double C27503 = C25616 * C4181;
    const double C29946 = C22733 * C4181;
    const double C36160 = C2270 * C4181;
    const double C16650 = C16252 * C50603;
    const double C21426 = C16252 * C50598;
    const double C39461 = C16252 * C50603;
    const double C50234 = C50233 + C50226;
    const double C9832 =
        (3 * (C50150 + C50154 + C50154 + C49844 * C50279) + C50275 + C50275 +
         C49844 * (2 * C50279 + C50276 + C50276 +
                   C49844 * (C50269 + C50277 + C50277 +
                             C49844 * (2 * ae * C49985 * C49933 +
                                       C49844 * C49985 * C49887)))) /
        C49749;
    const double C14843 = C14840 + C10239;
    const double C22029 = C22028 + C17150;
    const double C19414 = C19411 + C18984;
    const double C46564 = C46561 + C27901;
    const double C48336 = C48333 + C30149;
    const double C21695 = C21694 + C21691;
    const double C20331 = C20329 + C20322;
    const double C49240 = C49238 + C49231;
    const double C2527 = C2519 + C2495;
    const double C8182 = C8176 + C8142;
    const double C22990 = C22982 + C22958;
    const double C25868 = C25862 + C25828;
    const double C5338 = C5336 + C5331;
    const double C3269 = C3265 + C3251;
    const double C34987 = C34985 + C34980;
    const double C8376 = C8370 + C8336;
    const double C23732 = C23728 + C23714;
    const double C26062 = C26056 + C26022;
    const double C19008 = C19002 + C18988;
    const double C15584 = C15583 + C15581;
    const double C8381 = C8375 + C8357;
    const double C29620 = C29616 + C29607;
    const double C26067 = C26061 + C26043;
    const double C19914 = C19905 + C4191;
    const double C13511 = C13507 + C8906;
    const double C14425 = C14417 + C9838;
    const double C30812 = C30805 + C24627;
    const double C45238 = C45234 + C26592;
    const double C13922 = C13915 + C9339;
    const double C19916 = C19909 + C18292;
    const double C45649 = C45642 + C27013;
    const double C48832 = C48827 + C30809;
    const double C19407 = C19006 + C19005;
    const double C17154 = C17153 * C50857;
    const double C22024 = C17153 * C50598;
    const double C39951 = C17153 * C25611;
    const double C20325 = C20318 * C50598;
    const double C1084 =
        (2 * (2 * ae * C49942 + C49844 * C49891) + C50000 + C50000 +
         C49844 *
             (C49891 + C49997 + C49997 +
              C49844 * (2 * ae * C49964 +
                        C49844 * (2 * C49851 * C49887 +
                                  C49851 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C1089 = C118 * C1080;
    const double C2504 = C2272 * C1080;
    const double C8534 = C7932 * C1080;
    const double C10819 = C10805 * C1080;
    const double C22967 = C22735 * C1080;
    const double C26220 = C25618 * C1080;
    const double C1550 = C118 * C1541;
    const double C3258 = C2272 * C1541;
    const double C8698 = C7932 * C1541;
    const double C23721 = C22735 * C1541;
    const double C26384 = C25618 * C1541;
    const double C50078 = ae * C50077;
    const double C3518 =
        (3 * C50010 + C49844 * C50077 + (2 * C50004 + C49844 * C50067) * ae) /
        C49731;
    const double C4180 = (C49985 * C50077) / C49731;
    const double C50197 = C50165 + C50195;
    const double C50262 = ae * C50257;
    const double C9336 = C7932 * C9331;
    const double C11047 = C10805 * C9331;
    const double C16497 = C118 * C9331;
    const double C18293 = C2272 * C9331;
    const double C27010 = C25618 * C9331;
    const double C30807 = C22735 * C9331;
    const double C50334 = C50333 + C50321;
    const double C50353 = ae * C50348;
    const double C12264 = (2 * C50270 + C49985 * C50348) / C49731;
    const double C12265 =
        (2 * (2 * ae * (2 * C50268 + C49985 * C50346) + C49844 * C50384) +
         C50387 + C50387 +
         C49844 *
             (C50384 + C50388 + C50388 +
              C49844 *
                  (2 * ae * (2 * C50360 + C49985 * (C49933 + C49955 * C50036)) +
                   C49844 * (2 * C50361 +
                             C49985 * (C49887 +
                                       (C49881 * C49882 +
                                        C49848 * bs[8] * std::pow(C49842, 8)) *
                                           C49847 * C50036))))) /
        C49749;
    const double C14835 = C7932 * C14824;
    const double C19408 = C2272 * C14824;
    const double C22027 = C118 * C14824;
    const double C46556 = C25618 * C14824;
    const double C48330 = C22735 * C14824;
    const double C25641 = C25613 * C122;
    const double C25638 = C25613 * C121;
    const double C25623 = C25613 * C120;
    const double C25841 = C25613 * C280;
    const double C25832 = C25613 * C277;
    const double C26035 = C25613 * C451;
    const double C26026 = C25613 * C448;
    const double C26214 = C25613 * C276;
    const double C26378 = C25613 * C447;
    const double C26593 = C25613 * C868;
    const double C44724 = C25613 * C450;
    const double C44714 = C25613 * C449;
    const double C45230 = C25613 * C867;
    const double C45638 = C25613 * C1193;
    const double C46142 = C25613 * C1540;
    const double C46550 = C25613 * C1824;
    const double C25644 = C25615 * C275;
    const double C25635 = C25615 * C276;
    const double C25626 = C25615 * C277;
    const double C25844 = C25615 * C1078;
    const double C25829 = C25615 * C280;
    const double C26038 = C25615 * C1192;
    const double C26023 = C25615 * C868;
    const double C26216 = C25615 * C281;
    const double C26380 = C25615 * C869;
    const double C26596 = C25615 * C1539;
    const double C44722 = C25615 * C1193;
    const double C44716 = C25615 * C867;
    const double C45232 = C25615 * C1540;
    const double C45640 = C25615 * C3678;
    const double C46144 = C25615 * C4179;
    const double C46552 = C25615 * C4584;
    const double C22771 = C22757 + C22758;
    const double C22770 = C22754 + C22755;
    const double C22767 = C22745 + C22746;
    const double C22765 = C22739 + C22740;
    const double C22975 = C22959 + C22960;
    const double C22973 = C22953 + C22954;
    const double C22972 = C22946 + C22947;
    const double C22970 = C22940 + C22941;
    const double C23177 = C23161 + C23162;
    const double C23175 = C23155 + C23156;
    const double C23174 = C23148 + C23149;
    const double C23172 = C23142 + C23143;
    const double C23348 = C23342 + C22965;
    const double C23507 = C23501 + C23167;
    const double C23725 = C23715 + C23716;
    const double C23723 = C23709 + C23710;
    const double C28718 = C28714 + C24626;
    const double C28938 = C28930 + C25022;
    const double C28937 = C28926 + C23153;
    const double C28934 = C28918 + C23152;
    const double C29611 = C29604 + C24134;
    const double C29609 = C29599 + C23707;
    const double C30151 = C30143 + C24136;
    const double C30811 = C30803 + C24628;
    const double C31343 = C31335 + C25024;
    const double C48332 = C48325 + C30150;
    const double C48831 = C48825 + C30810;
    const double C49235 = C49228 + C31342;
    const double C7992 = C7983 + C7960;
    const double C7989 = C7980 + C7951;
    const double C7986 = C7977 + C7942;
    const double C8186 = C8180 + C8160;
    const double C8183 = C8177 + C8145;
    const double C8380 = C8374 + C8354;
    const double C8377 = C8371 + C8339;
    const double C8544 = C8541 + C8531;
    const double C8708 = C8705 + C8695;
    const double C8926 = C8923 + C8912;
    const double C13015 = C13009 + C12996;
    const double C13012 = C13006 + C12990;
    const double C13516 = C13513 + C13506;
    const double C13927 = C13924 + C13914;
    const double C14845 = C14842 + C14832;
    const double C6017 = C902 * C2268;
    const double C32893 = C902 * C22731;
    const double C2529 = C2521 + C2501;
    const double C8545 = C8542 + C8533;
    const double C22992 = C22984 + C22964;
    const double C26231 = C26228 + C26219;
    const double C5339 = C5337 + C5333;
    const double C3271 = C3267 + C3257;
    const double C8709 = C8706 + C8697;
    const double C23734 = C23730 + C23720;
    const double C26395 = C26392 + C26383;
    const double C8163 = C7924 * C3522;
    const double C25849 = C25610 * C3522;
    const double C8175 = C8161 + C8162;
    const double C25861 = C25847 + C25848;
    const double C34984 = C34981 + C4189;
    const double C8921 = C8913 + C8914;
    const double C28719 = C28716 + C24625;
    const double C26607 = C26599 + C26600;
    const double C50235 = ae * C50234;
    const double C9174 =
        (4 * C50123 + C49844 * C50234 + (3 * C50113 + C49844 * C50223) * ae) /
        C49731;
    const double C9830 = (C49985 * C50234) / C49731;
    const double C14420 = C7924 * C9832;
    const double C46147 = C25610 * C9832;
    const double C14846 = C14843 + C14834;
    const double C22030 = C22029 + C22026;
    const double C19416 = C19414 + C19406;
    const double C46567 = C46564 + C46555;
    const double C48338 = C48336 + C48328;
    const double C21696 = C21695 * C50598;
    const double C6920 = C5338 * C2267;
    const double C17145 = C5338 * C50603;
    const double C33774 = C5338 * C50899;
    const double C39950 = C5338 * C50603;
    const double C35834 = C3269 + C3268;
    const double C35833 = C3268 + C3269;
    const double C17148 = C15584 * C50603;
    const double C39952 = C15584 * C50603;
    const double C19918 = C19914 + C4191;
    const double C13514 = C13511 + C8906;
    const double C14428 = C14425 + C9838;
    const double C30814 = C30812 + C24627;
    const double C45241 = C45238 + C26592;
    const double C13925 = C13922 + C9339;
    const double C19920 = C19916 + C18292;
    const double C45652 = C45649 + C27013;
    const double C48834 = C48832 + C30809;
    const double C19412 = C19407 * C50598;
    const double C3521 =
        (3 * (C49877 + C50008 + C50008 + C49844 * C50068) + C50078 + C50078 +
         C49844 *
             (2 * C50068 + C50075 + C50075 +
              C49844 * (C49889 + C50071 + C50071 +
                        C49844 * (2 * ae * C49960 +
                                  C49844 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C49863))))) /
        C49749;
    const double C3525 = C2272 * C3518;
    const double C8167 = C7932 * C3518;
    const double C11149 = C10805 * C3518;
    const double C23979 = C22735 * C3518;
    const double C25853 = C25618 * C3518;
    const double C4187 = C2272 * C4180;
    const double C6272 = C118 * C4180;
    const double C8916 = C7932 * C4180;
    const double C11251 = C10805 * C4180;
    const double C24623 = C22735 * C4180;
    const double C26602 = C25618 * C4180;
    const double C50198 = C50197 + C50190;
    const double C9831 =
        (3 * (C50144 + C50148 + C50148 + C49844 * C50266) + C50262 + C50262 +
         C49844 *
             (2 * C50266 + C50263 + C50263 +
              C49844 * (C50256 + C50264 + C50264 +
                        C49844 * (2 * ae * C49985 * C50167 +
                                  C49844 * C49985 * C49851 *
                                      (C49881 * C49882 +
                                       C49848 * bs[8] * std::pow(C49842, 8)) *
                                      C49847)))) /
        C49749;
    const double C50336 = ae * C50334;
    const double C50335 = C49844 * C50334;
    const double C50362 = C49985 * C50334;
    const double C11662 = (C50234 + C50334 * C50036) / C49731;
    const double C11663 =
        (3 * (C50249 + C50253 + C50253 + C49844 * C50357) + C50353 + C50353 +
         C49844 *
             (2 * C50357 + C50354 + C50354 +
              C49844 * (C50347 + C50355 + C50355 +
                        C49844 * (2 * ae * (C49933 + C49955 * C50036) +
                                  C49844 * (C49887 + (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                         C49847 * C50036))))) /
        C49749;
    const double C12267 = C10805 * C12264;
    const double C13917 = C7932 * C12264;
    const double C19911 = C2272 * C12264;
    const double C21591 = C118 * C12264;
    const double C45644 = C25618 * C12264;
    const double C48829 = C22735 * C12264;
    const double C25659 = C25641 + C25642;
    const double C25658 = C25638 + C25639;
    const double C25653 = C25623 + C25624;
    const double C25859 = C25841 + C25842;
    const double C25858 = C25832 + C25833;
    const double C26053 = C26035 + C26036;
    const double C26052 = C26026 + C26027;
    const double C26223 = C26214 + C25850;
    const double C26387 = C26378 + C26044;
    const double C26605 = C26593 + C26594;
    const double C44731 = C44724 + C26032;
    const double C44726 = C44714 + C26031;
    const double C45236 = C45230 + C26590;
    const double C45647 = C45638 + C27015;
    const double C46151 = C46142 + C27507;
    const double C46559 = C46550 + C27903;
    const double C25660 = C25644 + C25645;
    const double C25657 = C25635 + C25636;
    const double C25654 = C25626 + C25627;
    const double C25860 = C25844 + C25845;
    const double C25857 = C25829 + C25830;
    const double C26054 = C26038 + C26039;
    const double C26051 = C26023 + C26024;
    const double C26224 = C26216 + C25851;
    const double C26388 = C26380 + C26045;
    const double C26606 = C26596 + C26597;
    const double C44730 = C44722 + C26033;
    const double C44727 = C44716 + C26030;
    const double C45237 = C45232 + C26591;
    const double C45648 = C45640 + C27014;
    const double C46152 = C46144 + C27506;
    const double C46560 = C46552 + C27902;
    const double C22779 = C22771 + C22758;
    const double C22778 = C22770 + C22755;
    const double C22775 = C22767 + C22746;
    const double C22773 = C22765 + C22740;
    const double C22983 = C22975 + C22960;
    const double C22981 = C22973 + C22954;
    const double C22980 = C22972 + C22947;
    const double C22978 = C22970 + C22941;
    const double C23185 = C23177 + C23162;
    const double C23183 = C23175 + C23156;
    const double C23182 = C23174 + C23149;
    const double C23180 = C23172 + C23143;
    const double C23350 = C23348 + C22965;
    const double C23509 = C23507 + C23167;
    const double C23729 = C23725 + C23716;
    const double C23727 = C23723 + C23710;
    const double C28720 = C28718 + C24626;
    const double C28944 = C28938 + C25022;
    const double C28943 = C28937 + C23153;
    const double C28940 = C28934 + C23152;
    const double C29615 = C29611 + C24134;
    const double C29613 = C29609 + C23707;
    const double C30153 = C30151 + C24136;
    const double C30813 = C30811 + C24628;
    const double C31345 = C31343 + C25024;
    const double C48335 = C48332 + C30150;
    const double C48833 = C48831 + C30810;
    const double C49237 = C49235 + C31342;
    const double C6921 = C5339 * C2268;
    const double C33775 = C5339 * C22731;
    const double C8181 = C8175 + C8162;
    const double C25867 = C25861 + C25848;
    const double C34986 = C34984 + C4189;
    const double C8924 = C8921 + C8914;
    const double C28721 = C28719 + C24625;
    const double C26610 = C26607 + C26600;
    const double C9176 =
        (4 * (2 * C50114 + C50121 + C50121 + C49844 * C50224) + C50235 +
         C50235 +
         C49844 * (3 * C50224 + C50232 + C50232 +
                   C49844 * (2 * C50216 + C50228 + C50228 +
                             C49844 * (C49875 + C50220 + C50220 +
                                       C49844 * (2 * ae * C49933 +
                                                 C49844 * C49887))))) /
        C49749;
    const double C9181 = C7932 * C9174;
    const double C10928 = C10805 * C9174;
    const double C11561 = C10803 * C9174;
    const double C26861 = C25618 * C9174;
    const double C9837 = C7932 * C9830;
    const double C11388 = C10805 * C9830;
    const double C11999 = C10803 * C9830;
    const double C13763 = C7930 * C9830;
    const double C19255 = C2272 * C9830;
    const double C27505 = C25618 * C9830;
    const double C29947 = C22735 * C9830;
    const double C45490 = C25616 * C9830;
    const double C22031 = C22030 * C50598;
    const double C19922 = C19918 + C19906;
    const double C13517 = C13514 + C13508;
    const double C14431 = C14428 + C14418;
    const double C30816 = C30814 + C30806;
    const double C45244 = C45241 + C45235;
    const double C13928 = C13925 + C13916;
    const double C19924 = C19920 + C19910;
    const double C45655 = C45652 + C45643;
    const double C48836 = C48834 + C48828;
    const double C50199 = ae * C50198;
    const double C9173 =
        (4 * C50100 + C49844 * C50198 + (3 * C50090 + C49844 * C50188) * ae) /
        C49731;
    const double C9829 = (C49985 * C50198) / C49731;
    const double C50337 = C50295 + C50335;
    const double C50369 = ae * C50362;
    const double C11665 = C10805 * C11662;
    const double C14421 = C7932 * C11662;
    const double C19253 = C2272 * C11662;
    const double C46148 = C25618 * C11662;
    const double C48177 = C22735 * C11662;
    const double C25668 = C25659 + C25642;
    const double C25667 = C25658 + C25639;
    const double C25662 = C25653 + C25624;
    const double C25865 = C25859 + C25842;
    const double C25864 = C25858 + C25833;
    const double C26059 = C26053 + C26036;
    const double C26058 = C26052 + C26027;
    const double C26226 = C26223 + C25850;
    const double C26390 = C26387 + C26044;
    const double C26608 = C26605 + C26594;
    const double C44737 = C44731 + C26032;
    const double C44732 = C44726 + C26031;
    const double C45239 = C45236 + C26590;
    const double C45650 = C45647 + C27015;
    const double C46154 = C46151 + C27507;
    const double C46562 = C46559 + C27903;
    const double C25669 = C25660 + C25645;
    const double C25666 = C25657 + C25636;
    const double C25663 = C25654 + C25627;
    const double C25866 = C25860 + C25845;
    const double C25863 = C25857 + C25830;
    const double C26060 = C26054 + C26039;
    const double C26057 = C26051 + C26024;
    const double C26227 = C26224 + C25851;
    const double C26391 = C26388 + C26045;
    const double C26609 = C26606 + C26597;
    const double C44736 = C44730 + C26033;
    const double C44733 = C44727 + C26030;
    const double C45240 = C45237 + C26591;
    const double C45651 = C45648 + C27014;
    const double C46155 = C46152 + C27506;
    const double C46563 = C46560 + C27902;
    const double C22787 = C22779 + C22759;
    const double C22786 = C22778 + C22756;
    const double C22783 = C22775 + C22747;
    const double C22781 = C22773 + C22741;
    const double C22991 = C22983 + C22961;
    const double C22989 = C22981 + C22955;
    const double C22988 = C22980 + C22948;
    const double C22986 = C22978 + C22942;
    const double C23193 = C23185 + C23163;
    const double C23191 = C23183 + C23157;
    const double C23190 = C23182 + C23150;
    const double C23188 = C23180 + C23144;
    const double C23352 = C23350 + C23343;
    const double C23511 = C23509 + C23502;
    const double C23733 = C23729 + C23717;
    const double C23731 = C23727 + C23711;
    const double C28722 = C28720 + C28715;
    const double C28950 = C28944 + C28931;
    const double C28949 = C28943 + C28927;
    const double C28946 = C28940 + C28919;
    const double C29619 = C29615 + C29605;
    const double C29617 = C29613 + C29600;
    const double C30155 = C30153 + C30144;
    const double C30815 = C30813 + C30804;
    const double C31347 = C31345 + C31336;
    const double C48337 = C48335 + C48326;
    const double C48835 = C48833 + C48826;
    const double C49239 = C49237 + C49229;
    const double C8187 = C8181 + C8163;
    const double C25873 = C25867 + C25849;
    const double C34988 = C34986 + C34982;
    const double C8927 = C8924 + C8915;
    const double C28723 = C28721 + C28717;
    const double C26613 = C26610 + C26601;
    const double C14426 = C14419 + C9837;
    const double C46153 = C46146 + C27505;
    const double C9175 =
        (4 * (2 * C50091 + C50098 + C50098 + C49844 * C50186) + C50199 +
         C50199 +
         C49844 * (3 * C50186 + C50196 + C50196 +
                   C49844 * (2 * C50177 + C50192 + C50192 +
                             C49844 * (C50164 + C50185 + C50185 +
                                       C49844 * (2 * ae * C50167 +
                                                 C49844 * C49851 *
                                                     (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49847))))) /
        C49749;
    const double C9178 = C7932 * C9173;
    const double C10933 = C10805 * C9173;
    const double C26858 = C25618 * C9173;
    const double C9834 = C7932 * C9829;
    const double C11389 = C10805 * C9829;
    const double C27502 = C25618 * C9829;
    const double C29945 = C22735 * C9829;
    const double C36159 = C2272 * C9829;
    const double C50338 = C50337 + C50329;
    const double C11996 =
        (4 * (2 * C50279 + C50276 + C50276 + C49844 * C50376) + C50369 +
         C50369 +
         C49844 * (3 * C50376 + C50370 + C50370 +
                   C49844 * (2 * C50374 + C50371 + C50371 +
                             C49844 * (C50361 + C50372 + C50372 +
                                       C49844 * (2 * ae * C49985 * C49955 +
                                                 C49844 * C49985 *
                                                     (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49847))))) /
        C49749;
    const double C25677 = C25668 + C25643;
    const double C25676 = C25667 + C25640;
    const double C25671 = C25662 + C25625;
    const double C25871 = C25865 + C25843;
    const double C25870 = C25864 + C25834;
    const double C26065 = C26059 + C26037;
    const double C26064 = C26058 + C26028;
    const double C26229 = C26226 + C26215;
    const double C26393 = C26390 + C26379;
    const double C26611 = C26608 + C26595;
    const double C44743 = C44737 + C44725;
    const double C44738 = C44732 + C44715;
    const double C45242 = C45239 + C45231;
    const double C45653 = C45650 + C45639;
    const double C46157 = C46154 + C46143;
    const double C46565 = C46562 + C46551;
    const double C25678 = C25669 + C25646;
    const double C25675 = C25666 + C25637;
    const double C25672 = C25663 + C25628;
    const double C25872 = C25866 + C25846;
    const double C25869 = C25863 + C25831;
    const double C26066 = C26060 + C26040;
    const double C26063 = C26057 + C26025;
    const double C26230 = C26227 + C26217;
    const double C26394 = C26391 + C26381;
    const double C26612 = C26609 + C26598;
    const double C44742 = C44736 + C44723;
    const double C44739 = C44733 + C44717;
    const double C45243 = C45240 + C45233;
    const double C45654 = C45651 + C45641;
    const double C46158 = C46155 + C46145;
    const double C46566 = C46563 + C46553;
    const double C22790 = C22785 + C22786;
    const double C22789 = C22783 + C22784;
    const double C23341 = C22985 + C22986;
    const double C28929 = C23191 + C23192;
    const double C28923 = C23192 + C23191;
    const double C28928 = C23189 + C23190;
    const double C28922 = C23190 + C23189;
    const double C23500 = C23187 + C23188;
    const double C29340 = C23188 + C23187;
    const double C29608 = C23732 + C23731;
    const double C29603 = C23731 + C23732;
    const double C47444 = C28949 + C28948;
    const double C48329 = C30156 + C30155;
    const double C49227 = C31348 + C31347;
    const double C14429 = C14426 + C9837;
    const double C46156 = C46153 + C27505;
    const double C50339 = ae * C50338;
    const double C11557 =
        (5 * C50234 + C49844 * C50338 + (4 * C50223 + C49844 * C50325) * ae) /
        C49731;
    const double C11995 = (C49985 * C50338) / C49731;
    const double C47445 = C28923 * C50598;
    const double C47446 = C47444 * C50598;
    const double C48334 = C48329 * C50598;
    const double C49234 = C49227 * C50598;
    const double C14432 = C14429 + C14420;
    const double C46159 = C46156 + C46147;
    const double C11558 =
        (5 * (3 * C50224 + C50232 + C50232 + C49844 * C50327) + C50339 +
         C50339 +
         C49844 *
             (4 * C50327 + C50336 + C50336 +
              C49844 *
                  (3 * C50319 + C50332 + C50332 +
                   C49844 * (2 * C50311 + C50326 + C50326 +
                             C49844 * (C49887 + C50315 + C50315 +
                                       C49844 * (2 * ae * C49955 +
                                                 C49844 *
                                                     (C49881 * C49882 +
                                                      C49848 * bs[8] *
                                                          std::pow(C49842, 8)) *
                                                     C49847)))))) /
        C49749;
    const double C11560 = C10805 * C11557;
    const double C11998 = C10805 * C11995;
    const double C13762 = C7932 * C11995;
    const double C45489 = C25618 * C11995;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50662 * C50874 -
                  (C23341 * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50662 * C50698) *
                     C50916 +
                 (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                   (C23352 + C23353) * C22731) *
                      C50788 * C50662 * C50698 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50662 * C50874) *
                     C50917 +
                 ((C22789 * C50915 + (C22786 + C22785) * C50899 +
                   (C22787 + C22788) * C22731) *
                      C50788 * C50662 * C50874 -
                  ((C22734 * C284 + C23346 + C23346 + C50774 * C304 +
                    C22732 * C283 + C23347 + C23347 + C22727 * C303) *
                       C22731 +
                   (C23353 + C23352) * C50899 + C23341 * C50915) *
                      C50788 * C50662 * C50698) *
                     C618)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C50875 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50726) *
                      C50874 +
                  (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                     C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                        C50915 +
                    (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                       C50788 * C50726 -
                   (C23341 * C22731 + (C22987 + C22988) * C50899 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50915) *
                       C50788 * C50875) *
                      C50698) *
                     C273 +
                 ((((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                    (C23511 + C23512) * C22731) *
                       C50788 * C50726 -
                   (C22790 * C22731 + (C22784 + C22783) * C50899 +
                    (C22782 + C22781) * C50915) *
                       C50788 * C50875) *
                      C50874 +
                  (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                    (C23352 + C23353) * C22731) *
                       C50788 * C50875 -
                   ((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
                     C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                        C22731 +
                    (C23734 + C23733) * C50899 + (C23732 + C23731) * C50915) *
                       C50788 * C50726) *
                      C50698) *
                     C50633)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50662 * C270 -
                  ((C22985 + C22986) * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50662 * C271 +
                  ((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                    C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                       C50915 +
                   (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                      C50788 * C50662 * C272) *
                     C273 +
                 (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                   (C22732 * C275 + C22965 + C22965 + C22727 * C295 +
                    C22734 * C282 + C22966 + C22966 + C50774 * C302) *
                       C22731) *
                      C50788 * C50662 * C271 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50662 * C270 -
                  ((C22734 * C1076 + C22967 + C22967 + C50774 * C1084 +
                    C22732 * C282 + C22968 + C22968 + C22727 * C302) *
                       C22731 +
                   (C22992 + C22991) * C50899 + (C22990 + C22989) * C50915) *
                      C50788 * C50662 * C272) *
                     C50633)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                   C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                      C50915 +
                  (C22781 + C22782) * C50899 + C22789 * C22731) *
                     C50788 * C50662 * C50646 * C113 -
                 (C22790 * C22731 + (C22784 + C22783) * C50899 +
                  (C22782 + C22781) * C50915) *
                     C50788 * C50662 * C50646 * C114 +
                 (C22789 * C50915 + (C22786 + C22785) * C50899 +
                  (C22787 + C22788) * C22731) *
                     C50788 * C50662 * C50646 * C115 -
                 ((C22734 * C619 + C22763 + C22763 + C50774 * C621 +
                   C22732 * C124 + C22764 + C22764 + C22727 * C138) *
                      C22731 +
                  (C22788 + C22787) * C50899 + C22790 * C50915) *
                     C50788 * C50662 * C50646 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C443 -
                  ((C23187 + C23188) * C22731 + (C23189 + C23190) * C50899 +
                   (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                    C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                       C50915) *
                      C50788 * C444 +
                  ((C22732 * C450 + C23153 + C23153 + C22727 * C470 +
                    C22734 * C1193 + C23154 + C23154 + C50774 * C1201) *
                       C50915 +
                   (C23191 + C23192) * C50899 + (C23193 + C23194) * C22731) *
                      C50788 * C445) *
                     C50646 * C273 +
                 (((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                   (C22732 * C446 + C23167 + C23167 + C22727 * C466 +
                    C22734 * C870 + C23168 + C23168 + C50774 * C880) *
                       C22731) *
                      C50788 * C444 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C443 -
                  ((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
                    C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                       C22731 +
                   (C23194 + C23193) * C50899 + (C23192 + C23191) * C50915) *
                      C50788 * C445) *
                     C50646 * C50633)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50875 -
                  (C23500 * C22731 + (C23189 + C23190) * C50899 +
                   (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                    C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                       C50915) *
                      C50788 * C50726) *
                     C50646 * C50916 +
                 (((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                   (C23511 + C23512) * C22731) *
                      C50788 * C50726 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50875) *
                     C50646 * C50917 +
                 ((C22789 * C50915 + (C22786 + C22785) * C50899 +
                   (C22787 + C22788) * C22731) *
                      C50788 * C50875 -
                  ((C22734 * C871 + C23505 + C23505 + C50774 * C881 +
                    C22732 * C454 + C23506 + C23506 + C22727 * C474) *
                       C22731 +
                   (C23512 + C23511) * C50899 + C23500 * C50915) *
                      C50788 * C50726) *
                     C50646 * C618)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                   C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                      C50915 +
                  (C22781 + C22782) * C50899 + C22789 * C22731) *
                     C50788 * C50662 * C50646 * C113 -
                 (C22790 * C22731 + (C22784 + C22783) * C50899 +
                  (C22782 + C22781) * C50915) *
                     C50788 * C50662 * C50646 * C114 +
                 (C22789 * C50915 + (C22786 + C22785) * C50899 +
                  (C22787 + C22788) * C22731) *
                     C50788 * C50662 * C50646 * C115 -
                 ((C22734 * C619 + C22763 + C22763 + C50774 * C621 +
                   C22732 * C124 + C22764 + C22764 + C22727 * C138) *
                      C22731 +
                  (C22788 + C22787) * C50899 + C22790 * C50915) *
                     C50788 * C50662 * C50646 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50662 * C270 -
                  ((C22985 + C22986) * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50662 * C271 +
                  ((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                    C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                       C50915 +
                   (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                      C50788 * C50662 * C272) *
                     C273 +
                 (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                   (C22732 * C275 + C22965 + C22965 + C22727 * C295 +
                    C22734 * C282 + C22966 + C22966 + C50774 * C302) *
                       C22731) *
                      C50788 * C50662 * C271 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50662 * C270 -
                  ((C22734 * C1076 + C22967 + C22967 + C50774 * C1084 +
                    C22732 * C282 + C22968 + C22968 + C22727 * C302) *
                       C22731 +
                   (C22992 + C22991) * C50899 + (C22990 + C22989) * C50915) *
                      C50788 * C50662 * C272) *
                     C50633)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50662 * C50918 -
                  (C23341 * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50662 * C50919 +
                  ((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                    C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                       C50915 +
                   (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                      C50788 * C50662 * C1306) *
                     C50866 +
                 (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                   (C23352 + C23353) * C22731) *
                      C50788 * C50662 * C50919 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50662 * C50918 -
                  ((C22734 * C1076 + C22967 + C22967 + C50774 * C1084 +
                    C22732 * C282 + C22968 + C22968 + C22727 * C302) *
                       C22731 +
                   (C22992 + C22991) * C50899 + (C22990 + C22989) * C50915) *
                      C50788 * C50662 * C1306) *
                     C50633)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50875 -
                  (C23500 * C22731 + (C23189 + C23190) * C50899 +
                   (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                    C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                       C50915) *
                      C50788 * C50726) *
                     C50918 +
                 (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                    C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                       C50915 +
                   (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                      C50788 * C50726 -
                  (C23341 * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50875) *
                     C50919 +
                 (((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                    C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                       C50915 +
                   (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                      C50788 * C50875 -
                  ((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
                    C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                       C22731 +
                   (C22734 * C4178 + C24625 + C24625 + C50774 * C4184 +
                    C22732 * C1539 + C24626 + C24626 + C22727 * C1547) *
                       C50899 +
                   (C22734 * C4179 + C24627 + C24627 + C50774 * C4185 +
                    C22732 * C1540 + C24628 + C24628 + C22727 * C1548) *
                       C50915) *
                      C50788 * C50726) *
                     C1306) *
                C50627) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                   C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                      C50915 +
                  (C22781 + C22782) * C50899 + C22789 * C22731) *
                     C50788 * C50662 * C1071 -
                 (C23341 * C22731 + (C22987 + C22988) * C50899 +
                  (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                   C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                      C50915) *
                     C50788 * C50662 * C1072 +
                 ((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                   C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                      C50915 +
                  (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                     C50788 * C50662 * C1073 -
                 ((C22734 * C3515 + C23979 + C23979 + C50774 * C3521 +
                   C22732 * C1077 + C23980 + C23980 + C22727 * C1085) *
                      C22731 +
                  (C22734 * C3516 + C23981 + C23981 + C50774 * C3522 +
                   C22732 * C1078 + C23982 + C23982 + C22727 * C1086) *
                      C50899 +
                  (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 +
                   C22732 * C1079 + C23984 + C23984 + C22727 * C1087) *
                      C50915) *
                     C50788 * C50662 * C1074) *
                C50627) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50662 * C1000 -
                  (C23341 * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50662 * C50698) *
                     C1002 +
                 (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                   (C23352 + C23353) * C22731) *
                      C50788 * C50662 * C50698 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50662 * C1000) *
                     C1003 +
                 ((C22789 * C50915 + (C22786 + C22785) * C50899 +
                   (C22787 + C22788) * C22731) *
                      C50788 * C50662 * C1000 -
                  ((C22734 * C284 + C23346 + C23346 + C50774 * C304 +
                    C22732 * C283 + C23347 + C23347 + C22727 * C303) *
                       C22731 +
                   (C23353 + C23352) * C50899 + C23341 * C50915) *
                      C50788 * C50662 * C50698) *
                     C1004)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C443 -
                  (C23500 * C22731 + (C23189 + C23190) * C50899 +
                   (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                    C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                       C50915) *
                      C50788 * C444 +
                  ((C22732 * C450 + C23153 + C23153 + C22727 * C470 +
                    C22734 * C1193 + C23154 + C23154 + C50774 * C1201) *
                       C50915 +
                   (C23191 + C23192) * C50899 + (C23193 + C23194) * C22731) *
                      C50788 * C445) *
                     C1000 +
                 (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                    C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                       C50915 +
                   (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                      C50788 * C444 -
                  (C23341 * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C443 -
                  ((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                    C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                       C22731 +
                   (C22734 * C3677 + C24133 + C24133 + C50774 * C3683 +
                    C22732 * C1192 + C24134 + C24134 + C22727 * C1200) *
                       C50899 +
                   (C22734 * C3678 + C24135 + C24135 + C50774 * C3684 +
                    C22732 * C1193 + C24136 + C24136 + C22727 * C1201) *
                       C50915) *
                      C50788 * C445) *
                     C50698) *
                C50627) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C50875 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50726) *
                      C1000 +
                  (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                     C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                        C50915 +
                    (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                       C50788 * C50726 -
                   (C23341 * C22731 + (C22987 + C22988) * C50899 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50915) *
                       C50788 * C50875) *
                      C50698) *
                     C50866 +
                 ((((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                    (C23511 + C23512) * C22731) *
                       C50788 * C50726 -
                   (C22790 * C22731 + (C22784 + C22783) * C50899 +
                    (C22782 + C22781) * C50915) *
                       C50788 * C50875) *
                      C1000 +
                  (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                    (C23352 + C23353) * C22731) *
                       C50788 * C50875 -
                   ((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
                     C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                        C22731 +
                    (C23734 + C23733) * C50899 + (C23732 + C23731) * C50915) *
                       C50788 * C50726) *
                      C50698) *
                     C50633)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C50662 * C1000 -
                  (C23341 * C22731 + (C22987 + C22988) * C50899 +
                   (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                    C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                       C50915) *
                      C50788 * C50662 * C50698) *
                     C1002 +
                 (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                   (C23352 + C23353) * C22731) *
                      C50788 * C50662 * C50698 -
                  (C22790 * C22731 + (C22784 + C22783) * C50899 +
                   (C22782 + C22781) * C50915) *
                      C50788 * C50662 * C1000) *
                     C1003 +
                 ((C22789 * C50915 + (C22786 + C22785) * C50899 +
                   (C22787 + C22788) * C22731) *
                      C50788 * C50662 * C1000 -
                  ((C22734 * C284 + C23346 + C23346 + C50774 * C304 +
                    C22732 * C283 + C23347 + C23347 + C22727 * C303) *
                       C22731 +
                   (C23353 + C23352) * C50899 + C23341 * C50915) *
                      C50788 * C50662 * C50698) *
                     C1004)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                   C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                      C50915 +
                  (C22781 + C22782) * C50899 + C22789 * C22731) *
                     C50788 * C50662 * C1071 -
                 (C23341 * C22731 + (C22987 + C22988) * C50899 +
                  (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                   C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                      C50915) *
                     C50788 * C50662 * C1072 +
                 ((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                   C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                      C50915 +
                  (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                     C50788 * C50662 * C1073 -
                 ((C22734 * C3515 + C23979 + C23979 + C50774 * C3521 +
                   C22732 * C1077 + C23980 + C23980 + C22727 * C1085) *
                      C22731 +
                  (C22734 * C3516 + C23981 + C23981 + C50774 * C3522 +
                   C22732 * C1078 + C23982 + C23982 + C22727 * C1086) *
                      C50899 +
                  (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 +
                   C22732 * C1079 + C23984 + C23984 + C22727 * C1087) *
                      C50915) *
                     C50788 * C50662 * C1074) *
                C50627) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50915 +
                     (C22781 + C22782) * C50899 + C22789 * C22731) *
                        C50788 * C1651 -
                    (C23500 * C22731 + (C23189 + C23190) * C50899 +
                     (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                      C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                         C50915) *
                        C50788 * C50726) *
                       C50874 +
                   (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                      C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                         C50915 +
                     (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                        C50788 * C50726 -
                    (C23341 * C22731 + (C22987 + C22988) * C50899 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C50915) *
                        C50788 * C1651) *
                       C50698) *
                      C50866 +
                  ((((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                     (C23511 + C23512) * C22731) *
                        C50788 * C50726 -
                    (C22790 * C22731 + (C22784 + C22783) * C50899 +
                     (C22782 + C22781) * C50915) *
                        C50788 * C1651) *
                       C50874 +
                   (((C22988 + C22987) * C50915 + (C22986 + C22985) * C50899 +
                     (C23352 + C23353) * C22731) *
                        C50788 * C1651 -
                    ((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
                      C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                         C22731 +
                     (C23734 + C23733) * C50899 + (C23732 + C23731) * C50915) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C50920 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50921 +
                   ((C22732 * C450 + C23153 + C23153 + C22727 * C470 +
                     C22734 * C1193 + C23154 + C23154 + C50774 * C1201) *
                        C50915 +
                    (C23191 + C23192) * C50899 + (C23193 + C23194) * C22731) *
                       C50788 * C2067) *
                      C50874 +
                  (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                     C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                        C50915 +
                    (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                       C50788 * C50921 -
                   (C23341 * C22731 + (C22987 + C22988) * C50899 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50915) *
                       C50788 * C50920 -
                   ((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                     C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                        C22731 +
                    (C22734 * C3677 + C24133 + C24133 + C50774 * C3683 +
                     C22732 * C1192 + C24134 + C24134 + C22727 * C1200) *
                        C50899 +
                    (C22734 * C3678 + C24135 + C24135 + C50774 * C3684 +
                     C22732 * C1193 + C24136 + C24136 + C22727 * C1201) *
                        C50915) *
                       C50788 * C2067) *
                      C50698) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C1651 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50726) *
                      C270 +
                  (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                     C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                        C50915 +
                    (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                       C50788 * C50726 -
                   (C23341 * C22731 + (C22987 + C22988) * C50899 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50915) *
                       C50788 * C1651) *
                      C271 +
                  (((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                     C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                        C50915 +
                    (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                       C50788 * C1651 -
                   ((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
                     C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                        C22731 +
                    (C22734 * C4178 + C24625 + C24625 + C50774 * C4184 +
                     C22732 * C1539 + C24626 + C24626 + C22727 * C1547) *
                        C50899 +
                    (C22734 * C4179 + C24627 + C24627 + C50774 * C4185 +
                     C22732 * C1540 + C24628 + C24628 + C22727 * C1548) *
                        C50915) *
                       C50788 * C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C1651 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50726) *
                      C50646 * C1002 +
                  (((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                    (C23511 + C23512) * C22731) *
                       C50788 * C50726 -
                   (C22790 * C22731 + (C22784 + C22783) * C50899 +
                    (C22782 + C22781) * C50915) *
                       C50788 * C1651) *
                      C50646 * C1003 +
                  ((C22789 * C50915 + (C22786 + C22785) * C50899 +
                    (C22787 + C22788) * C22731) *
                       C50788 * C1651 -
                   ((C22734 * C871 + C23505 + C23505 + C50774 * C881 +
                     C22732 * C454 + C23506 + C23506 + C22727 * C474) *
                        C22731 +
                    (C23512 + C23511) * C50899 + C23500 * C50915) *
                       C50788 * C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                    C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                       C50915 +
                   (C22781 + C22782) * C50899 + C22789 * C22731) *
                      C50788 * C1817 -
                  (C23500 * C22731 + (C23189 + C23190) * C50899 +
                   (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                    C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                       C50915) *
                      C50788 * C1818 +
                  ((C22732 * C450 + C23153 + C23153 + C22727 * C470 +
                    C22734 * C1193 + C23154 + C23154 + C50774 * C1201) *
                       C50915 +
                   (C23191 + C23192) * C50899 + (C23193 + C23194) * C22731) *
                      C50788 * C1819 -
                  ((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
                    C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                       C22731 +
                   (C22734 * C4583 + C25021 + C25021 + C50774 * C4589 +
                    C22732 * C1823 + C25022 + C25022 + C22727 * C1831) *
                       C50899 +
                   (C22734 * C4584 + C25023 + C25023 + C50774 * C4590 +
                    C22732 * C1824 + C25024 + C25024 + C22727 * C1832) *
                       C50915) *
                      C50788 * C1820) *
                 C50646 * C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C50920 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50921 +
                   ((C22732 * C450 + C23153 + C23153 + C22727 * C470 +
                     C22734 * C1193 + C23154 + C23154 + C50774 * C1201) *
                        C50915 +
                    (C23191 + C23192) * C50899 + (C23193 + C23194) * C22731) *
                       C50788 * C2067) *
                      C50646 * C50866 +
                  (((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                    (C23511 + C23512) * C22731) *
                       C50788 * C50921 -
                   (C22790 * C22731 + (C22784 + C22783) * C50899 +
                    (C22782 + C22781) * C50915) *
                       C50788 * C50920 -
                   ((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
                     C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                        C22731 +
                    (C23194 + C23193) * C50899 + (C23192 + C23191) * C50915) *
                       C50788 * C2067) *
                      C50646 * C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C1651 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50726) *
                      C50646 * C1002 +
                  (((C23190 + C23189) * C50915 + (C23188 + C23187) * C50899 +
                    (C23511 + C23512) * C22731) *
                       C50788 * C50726 -
                   (C22790 * C22731 + (C22784 + C22783) * C50899 +
                    (C22782 + C22781) * C50915) *
                       C50788 * C1651) *
                      C50646 * C1003 +
                  ((C22789 * C50915 + (C22786 + C22785) * C50899 +
                    (C22787 + C22788) * C22731) *
                       C50788 * C1651 -
                   ((C22734 * C871 + C23505 + C23505 + C50774 * C881 +
                     C22732 * C454 + C23506 + C23506 + C22727 * C474) *
                        C22731 +
                    (C23512 + C23511) * C50899 + C23500 * C50915) *
                       C50788 * C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50915 +
                    (C22781 + C22782) * C50899 + C22789 * C22731) *
                       C50788 * C1651 -
                   (C23500 * C22731 + (C23189 + C23190) * C50899 +
                    (C22734 * C867 + C23151 + C23151 + C50774 * C877 +
                     C22732 * C449 + C23152 + C23152 + C22727 * C469) *
                        C50915) *
                       C50788 * C50726) *
                      C270 +
                  (((C22732 * C867 + C23707 + C23707 + C22727 * C877 +
                     C22734 * C1540 + C23708 + C23708 + C50774 * C1548) *
                        C50915 +
                    (C23731 + C23732) * C50899 + (C23733 + C23734) * C22731) *
                       C50788 * C50726 -
                   (C23341 * C22731 + (C22987 + C22988) * C50899 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50915) *
                       C50788 * C1651) *
                      C271 +
                  (((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                     C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                        C50915 +
                    (C22989 + C22990) * C50899 + (C22991 + C22992) * C22731) *
                       C50788 * C1651 -
                   ((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
                     C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                        C22731 +
                    (C22734 * C4178 + C24625 + C24625 + C50774 * C4184 +
                     C22732 * C1539 + C24626 + C24626 + C22727 * C1547) *
                        C50899 +
                    (C22734 * C4179 + C24627 + C24627 + C50774 * C4185 +
                     C22732 * C1540 + C24628 + C24628 + C22727 * C1548) *
                        C50915) *
                       C50788 * C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50662 * C50874 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50662 * C50698) *
                      C50916 +
                  (((C25870 + C25869 + C25868) * C25611 +
                    (C26229 + C26230 + C26231) * C50603) *
                       C50788 * C50662 * C50698 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50662 * C50874) *
                      C50917 +
                  (((C25676 + C25675 + C25674) * C25611 +
                    (C25677 + C25678 + C25679) * C50603) *
                       C50788 * C50662 * C50874 -
                   ((C25617 * C1076 + C26220 + C26220 + C25610 * C1084 +
                     C25615 * C282 + C26221 + C26221 + C50911 * C302 +
                     C25613 * C275 + C26222 + C26222 + C50922 * C295) *
                        C50603 +
                    (C26231 + C26230 + C26229) * C25611) *
                       C50788 * C50662 * C50698) *
                      C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                      C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                      C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                         C25611 +
                     (C25671 + C25672 + C25673) * C50603) *
                        C50788 * C50875 -
                    ((C26062 + C26063 + C26064) * C50603 +
                     (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                      C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                      C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                         C25611) *
                        C50788 * C50726) *
                       C50874 +
                   (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                      C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                      C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                         C25611 +
                     (C26611 + C26612 + C26613) * C50603) *
                        C50788 * C50726 -
                    ((C25868 + C25869 + C25870) * C50603 +
                     (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                      C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                      C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                         C25611) *
                        C50788 * C50875) *
                       C50698) *
                      C273 +
                  ((((C26064 + C26063 + C26062) * C25611 +
                     (C26393 + C26394 + C26395) * C50603) *
                        C50788 * C50726 -
                    ((C25674 + C25675 + C25676) * C50603 +
                     (C25673 + C25672 + C25671) * C25611) *
                        C50788 * C50875) *
                       C50874 +
                   (((C25870 + C25869 + C25868) * C25611 +
                     (C26229 + C26230 + C26231) * C50603) *
                        C50788 * C50875 -
                    ((C25617 * C4177 + C26602 + C26602 + C25610 * C4183 +
                      C25615 * C1538 + C26603 + C26603 + C50911 * C1546 +
                      C25613 * C869 + C26604 + C26604 + C50922 * C879) *
                         C50603 +
                     (C26613 + C26612 + C26611) * C25611) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50662 * C270 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50662 * C271 +
                   ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C25611 +
                    (C25871 + C25872 + C25873) * C50603) *
                       C50788 * C50662 * C272) *
                      C273 +
                  (((C25870 + C25869 + C25868) * C25611 +
                    (C25613 * C276 + C25850 + C25850 + C50922 * C296 +
                     C25615 * C281 + C25851 + C25851 + C50911 * C301 +
                     C25617 * C1077 + C25852 + C25852 + C25610 * C1085) *
                        C50603) *
                       C50788 * C50662 * C271 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50662 * C270 -
                   ((C25617 * C3515 + C25853 + C25853 + C25610 * C3521 +
                     C25615 * C1077 + C25854 + C25854 + C50911 * C1085 +
                     C25613 * C281 + C25855 + C25855 + C50922 * C301) *
                        C50603 +
                    (C25873 + C25872 + C25871) * C25611) *
                       C50788 * C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C25611 +
                   (C25671 + C25672 + C25673) * C50603) *
                      C50788 * C50662 * C50646 * C113 -
                  ((C25674 + C25675 + C25676) * C50603 +
                   (C25673 + C25672 + C25671) * C25611) *
                      C50788 * C50662 * C50646 * C114 +
                  ((C25676 + C25675 + C25674) * C25611 +
                   (C25677 + C25678 + C25679) * C50603) *
                      C50788 * C50662 * C50646 * C115 -
                  ((C25617 * C284 + C25650 + C25650 + C25610 * C304 +
                    C25615 * C283 + C25651 + C25651 + C50911 * C303 +
                    C25613 * C123 + C25652 + C25652 + C50922 * C137) *
                       C50603 +
                   (C25679 + C25678 + C25677) * C25611) *
                      C50788 * C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C443 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C444 +
                   ((C25613 * C450 + C26032 + C26032 + C50922 * C470 +
                     C25615 * C1193 + C26033 + C26033 + C50911 * C1201 +
                     C25617 * C3678 + C26034 + C26034 + C25610 * C3684) *
                        C25611 +
                    (C26065 + C26066 + C26067) * C50603) *
                       C50788 * C445) *
                      C50646 * C273 +
                  (((C26064 + C26063 + C26062) * C25611 +
                    (C25613 * C447 + C26044 + C26044 + C50922 * C467 +
                     C25615 * C869 + C26045 + C26045 + C50911 * C879 +
                     C25617 * C1538 + C26046 + C26046 + C25610 * C1546) *
                        C50603) *
                       C50788 * C444 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C443 -
                   ((C25617 * C3676 + C26047 + C26047 + C25610 * C3682 +
                     C25615 * C1191 + C26048 + C26048 + C50911 * C1199 +
                     C25613 * C452 + C26049 + C26049 + C50922 * C472) *
                        C50603 +
                    (C26067 + C26066 + C26065) * C25611) *
                       C50788 * C445) *
                      C50646 * C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50875 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50726) *
                      C50646 * C50916 +
                  (((C26064 + C26063 + C26062) * C25611 +
                    (C26393 + C26394 + C26395) * C50603) *
                       C50788 * C50726 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50875) *
                      C50646 * C50917 +
                  (((C25676 + C25675 + C25674) * C25611 +
                    (C25677 + C25678 + C25679) * C50603) *
                       C50788 * C50875 -
                   ((C25617 * C1537 + C26384 + C26384 + C25610 * C1545 +
                     C25615 * C870 + C26385 + C26385 + C50911 * C880 +
                     C25613 * C446 + C26386 + C26386 + C50922 * C466) *
                        C50603 +
                    (C26395 + C26394 + C26393) * C25611) *
                       C50788 * C50726) *
                      C50646 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C25611 +
                   (C25671 + C25672 + C25673) * C50603) *
                      C50788 * C50662 * C50646 * C113 -
                  ((C25674 + C25675 + C25676) * C50603 +
                   (C25673 + C25672 + C25671) * C25611) *
                      C50788 * C50662 * C50646 * C114 +
                  ((C25676 + C25675 + C25674) * C25611 +
                   (C25677 + C25678 + C25679) * C50603) *
                      C50788 * C50662 * C50646 * C115 -
                  ((C25617 * C284 + C25650 + C25650 + C25610 * C304 +
                    C25615 * C283 + C25651 + C25651 + C50911 * C303 +
                    C25613 * C123 + C25652 + C25652 + C50922 * C137) *
                       C50603 +
                   (C25679 + C25678 + C25677) * C25611) *
                      C50788 * C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50662 * C270 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50662 * C271 +
                   ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C25611 +
                    (C25871 + C25872 + C25873) * C50603) *
                       C50788 * C50662 * C272) *
                      C273 +
                  (((C25870 + C25869 + C25868) * C25611 +
                    (C25613 * C276 + C25850 + C25850 + C50922 * C296 +
                     C25615 * C281 + C25851 + C25851 + C50911 * C301 +
                     C25617 * C1077 + C25852 + C25852 + C25610 * C1085) *
                        C50603) *
                       C50788 * C50662 * C271 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50662 * C270 -
                   ((C25617 * C3515 + C25853 + C25853 + C25610 * C3521 +
                     C25615 * C1077 + C25854 + C25854 + C50911 * C1085 +
                     C25613 * C281 + C25855 + C25855 + C50922 * C301) *
                        C50603 +
                    (C25873 + C25872 + C25871) * C25611) *
                       C50788 * C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50662 * C50918 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50662 * C50919 +
                   ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C25611 +
                    (C25871 + C25872 + C25873) * C50603) *
                       C50788 * C50662 * C1306) *
                      C50866 +
                  (((C25870 + C25869 + C25868) * C25611 +
                    (C26229 + C26230 + C26231) * C50603) *
                       C50788 * C50662 * C50919 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50662 * C50918 -
                   ((C25617 * C3515 + C25853 + C25853 + C25610 * C3521 +
                     C25615 * C1077 + C25854 + C25854 + C50911 * C1085 +
                     C25613 * C281 + C25855 + C25855 + C50922 * C301) *
                        C50603 +
                    (C25873 + C25872 + C25871) * C25611) *
                       C50788 * C50662 * C1306) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50875 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50726) *
                      C50918 +
                  (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                        C25611 +
                    (C26611 + C26612 + C26613) * C50603) *
                       C50788 * C50726 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50875) *
                      C50919 +
                  (((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C25611 +
                    (C25871 + C25872 + C25873) * C50603) *
                       C50788 * C50875 -
                   ((C25617 * C9827 + C27502 + C27502 + C25610 * C9831 +
                     C25615 * C4178 + C27503 + C27503 + C50911 * C4184 +
                     C25613 * C1539 + C27504 + C27504 + C50922 * C1547) *
                        C50603 +
                    (C25617 * C9828 + C27505 + C27505 + C25610 * C9832 +
                     C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                     C25613 * C1540 + C27507 + C27507 + C50922 * C1548) *
                        C25611) *
                       C50788 * C50726) *
                      C1306) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C25611 +
                   (C25671 + C25672 + C25673) * C50603) *
                      C50788 * C50662 * C1071 -
                  ((C25868 + C25869 + C25870) * C50603 +
                   (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                    C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                    C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                       C25611) *
                      C50788 * C50662 * C1072 +
                  ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                    C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                    C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                       C25611 +
                   (C25871 + C25872 + C25873) * C50603) *
                      C50788 * C50662 * C1073 -
                  ((C25617 * C9171 + C26858 + C26858 + C25610 * C9175 +
                    C25615 * C3516 + C26859 + C26859 + C50911 * C3522 +
                    C25613 * C1078 + C26860 + C26860 + C50922 * C1086) *
                       C50603 +
                   (C25617 * C9172 + C26861 + C26861 + C25610 * C9176 +
                    C25615 * C3517 + C26862 + C26862 + C50911 * C3523 +
                    C25613 * C1079 + C26863 + C26863 + C50922 * C1087) *
                       C25611) *
                      C50788 * C50662 * C1074) *
                 C50627) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50662 * C1000 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50662 * C50698) *
                      C1002 +
                  (((C25870 + C25869 + C25868) * C25611 +
                    (C26229 + C26230 + C26231) * C50603) *
                       C50788 * C50662 * C50698 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50662 * C1000) *
                      C1003 +
                  (((C25676 + C25675 + C25674) * C25611 +
                    (C25677 + C25678 + C25679) * C50603) *
                       C50788 * C50662 * C1000 -
                   ((C25617 * C1076 + C26220 + C26220 + C25610 * C1084 +
                     C25615 * C282 + C26221 + C26221 + C50911 * C302 +
                     C25613 * C275 + C26222 + C26222 + C50922 * C295) *
                        C50603 +
                    (C26231 + C26230 + C26229) * C25611) *
                       C50788 * C50662 * C50698) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C443 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C444 +
                   ((C25613 * C450 + C26032 + C26032 + C50922 * C470 +
                     C25615 * C1193 + C26033 + C26033 + C50911 * C1201 +
                     C25617 * C3678 + C26034 + C26034 + C25610 * C3684) *
                        C25611 +
                    (C26065 + C26066 + C26067) * C50603) *
                       C50788 * C445) *
                      C1000 +
                  (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                        C25611 +
                    (C26611 + C26612 + C26613) * C50603) *
                       C50788 * C444 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C443 -
                   ((C25617 * C9329 + C27010 + C27010 + C25610 * C9333 +
                     C25615 * C3677 + C27011 + C27011 + C50911 * C3683 +
                     C25613 * C1192 + C27012 + C27012 + C50922 * C1200) *
                        C50603 +
                    (C25617 * C9330 + C27013 + C27013 + C25610 * C9334 +
                     C25615 * C3678 + C27014 + C27014 + C50911 * C3684 +
                     C25613 * C1193 + C27015 + C27015 + C50922 * C1201) *
                        C25611) *
                       C50788 * C445) *
                      C50698) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                      C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                      C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                         C25611 +
                     (C25671 + C25672 + C25673) * C50603) *
                        C50788 * C50875 -
                    ((C26062 + C26063 + C26064) * C50603 +
                     (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                      C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                      C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                         C25611) *
                        C50788 * C50726) *
                       C1000 +
                   (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                      C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                      C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                         C25611 +
                     (C26611 + C26612 + C26613) * C50603) *
                        C50788 * C50726 -
                    ((C25868 + C25869 + C25870) * C50603 +
                     (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                      C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                      C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                         C25611) *
                        C50788 * C50875) *
                       C50698) *
                      C50866 +
                  ((((C26064 + C26063 + C26062) * C25611 +
                     (C26393 + C26394 + C26395) * C50603) *
                        C50788 * C50726 -
                    ((C25674 + C25675 + C25676) * C50603 +
                     (C25673 + C25672 + C25671) * C25611) *
                        C50788 * C50875) *
                       C1000 +
                   (((C25870 + C25869 + C25868) * C25611 +
                     (C26229 + C26230 + C26231) * C50603) *
                        C50788 * C50875 -
                    ((C25617 * C4177 + C26602 + C26602 + C25610 * C4183 +
                      C25615 * C1538 + C26603 + C26603 + C50911 * C1546 +
                      C25613 * C869 + C26604 + C26604 + C50922 * C879) *
                         C50603 +
                     (C26613 + C26612 + C26611) * C25611) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50662 * C1000 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50662 * C50698) *
                      C1002 +
                  (((C25870 + C25869 + C25868) * C25611 +
                    (C26229 + C26230 + C26231) * C50603) *
                       C50788 * C50662 * C50698 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50662 * C1000) *
                      C1003 +
                  (((C25676 + C25675 + C25674) * C25611 +
                    (C25677 + C25678 + C25679) * C50603) *
                       C50788 * C50662 * C1000 -
                   ((C25617 * C1076 + C26220 + C26220 + C25610 * C1084 +
                     C25615 * C282 + C26221 + C26221 + C50911 * C302 +
                     C25613 * C275 + C26222 + C26222 + C50922 * C295) *
                        C50603 +
                    (C26231 + C26230 + C26229) * C25611) *
                       C50788 * C50662 * C50698) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C25611 +
                   (C25671 + C25672 + C25673) * C50603) *
                      C50788 * C50662 * C1071 -
                  ((C25868 + C25869 + C25870) * C50603 +
                   (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                    C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                    C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                       C25611) *
                      C50788 * C50662 * C1072 +
                  ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                    C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                    C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                       C25611 +
                   (C25871 + C25872 + C25873) * C50603) *
                      C50788 * C50662 * C1073 -
                  ((C25617 * C9171 + C26858 + C26858 + C25610 * C9175 +
                    C25615 * C3516 + C26859 + C26859 + C50911 * C3522 +
                    C25613 * C1078 + C26860 + C26860 + C50922 * C1086) *
                       C50603 +
                   (C25617 * C9172 + C26861 + C26861 + C25610 * C9176 +
                    C25615 * C3517 + C26862 + C26862 + C50911 * C3523 +
                    C25613 * C1079 + C26863 + C26863 + C50922 * C1087) *
                       C25611) *
                      C50788 * C50662 * C1074) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                      C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                      C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                         C25611 +
                     (C25671 + C25672 + C25673) * C50603) *
                        C50788 * C1651 -
                    ((C26062 + C26063 + C26064) * C50603 +
                     (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                      C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                      C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                         C25611) *
                        C50788 * C50726) *
                       C50874 +
                   (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                      C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                      C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                         C25611 +
                     (C26611 + C26612 + C26613) * C50603) *
                        C50788 * C50726 -
                    ((C25868 + C25869 + C25870) * C50603 +
                     (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                      C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                      C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                         C25611) *
                        C50788 * C1651) *
                       C50698) *
                      C50866 +
                  ((((C26064 + C26063 + C26062) * C25611 +
                     (C26393 + C26394 + C26395) * C50603) *
                        C50788 * C50726 -
                    ((C25674 + C25675 + C25676) * C50603 +
                     (C25673 + C25672 + C25671) * C25611) *
                        C50788 * C1651) *
                       C50874 +
                   (((C25870 + C25869 + C25868) * C25611 +
                     (C26229 + C26230 + C26231) * C50603) *
                        C50788 * C1651 -
                    ((C25617 * C4177 + C26602 + C26602 + C25610 * C4183 +
                      C25615 * C1538 + C26603 + C26603 + C50911 * C1546 +
                      C25613 * C869 + C26604 + C26604 + C50922 * C879) *
                         C50603 +
                     (C26613 + C26612 + C26611) * C25611) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50920 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50921 +
                   ((C25613 * C450 + C26032 + C26032 + C50922 * C470 +
                     C25615 * C1193 + C26033 + C26033 + C50911 * C1201 +
                     C25617 * C3678 + C26034 + C26034 + C25610 * C3684) *
                        C25611 +
                    (C26065 + C26066 + C26067) * C50603) *
                       C50788 * C2067) *
                      C50874 +
                  (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                        C25611 +
                    (C26611 + C26612 + C26613) * C50603) *
                       C50788 * C50921 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C50920 -
                   ((C25617 * C9329 + C27010 + C27010 + C25610 * C9333 +
                     C25615 * C3677 + C27011 + C27011 + C50911 * C3683 +
                     C25613 * C1192 + C27012 + C27012 + C50922 * C1200) *
                        C50603 +
                    (C25617 * C9330 + C27013 + C27013 + C25610 * C9334 +
                     C25615 * C3678 + C27014 + C27014 + C50911 * C3684 +
                     C25613 * C1193 + C27015 + C27015 + C50922 * C1201) *
                        C25611) *
                       C50788 * C2067) *
                      C50698) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C1651 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50726) *
                      C270 +
                  (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                        C25611 +
                    (C26611 + C26612 + C26613) * C50603) *
                       C50788 * C50726 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C1651) *
                      C271 +
                  (((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C25611 +
                    (C25871 + C25872 + C25873) * C50603) *
                       C50788 * C1651 -
                   ((C25617 * C9827 + C27502 + C27502 + C25610 * C9831 +
                     C25615 * C4178 + C27503 + C27503 + C50911 * C4184 +
                     C25613 * C1539 + C27504 + C27504 + C50922 * C1547) *
                        C50603 +
                    (C25617 * C9828 + C27505 + C27505 + C25610 * C9832 +
                     C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                     C25613 * C1540 + C27507 + C27507 + C50922 * C1548) *
                        C25611) *
                       C50788 * C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C1651 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50726) *
                      C50646 * C1002 +
                  (((C26064 + C26063 + C26062) * C25611 +
                    (C26393 + C26394 + C26395) * C50603) *
                       C50788 * C50726 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C1651) *
                      C50646 * C1003 +
                  (((C25676 + C25675 + C25674) * C25611 +
                    (C25677 + C25678 + C25679) * C50603) *
                       C50788 * C1651 -
                   ((C25617 * C1537 + C26384 + C26384 + C25610 * C1545 +
                     C25615 * C870 + C26385 + C26385 + C50911 * C880 +
                     C25613 * C446 + C26386 + C26386 + C50922 * C466) *
                        C50603 +
                    (C26395 + C26394 + C26393) * C25611) *
                       C50788 * C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C25611 +
                   (C25671 + C25672 + C25673) * C50603) *
                      C50788 * C1817 -
                  ((C26062 + C26063 + C26064) * C50603 +
                   (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                    C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                    C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                       C25611) *
                      C50788 * C1818 +
                  ((C25613 * C450 + C26032 + C26032 + C50922 * C470 +
                    C25615 * C1193 + C26033 + C26033 + C50911 * C1201 +
                    C25617 * C3678 + C26034 + C26034 + C25610 * C3684) *
                       C25611 +
                   (C26065 + C26066 + C26067) * C50603) *
                      C50788 * C1819 -
                  ((C25617 * C10229 + C27898 + C27898 + C25610 * C10233 +
                    C25615 * C4583 + C27899 + C27899 + C50911 * C4589 +
                    C25613 * C1823 + C27900 + C27900 + C50922 * C1831) *
                       C50603 +
                   (C25617 * C10230 + C27901 + C27901 + C25610 * C10234 +
                    C25615 * C4584 + C27902 + C27902 + C50911 * C4590 +
                    C25613 * C1824 + C27903 + C27903 + C50922 * C1832) *
                       C25611) *
                      C50788 * C1820) *
                 C50646 * C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C50920 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50921 +
                   ((C25613 * C450 + C26032 + C26032 + C50922 * C470 +
                     C25615 * C1193 + C26033 + C26033 + C50911 * C1201 +
                     C25617 * C3678 + C26034 + C26034 + C25610 * C3684) *
                        C25611 +
                    (C26065 + C26066 + C26067) * C50603) *
                       C50788 * C2067) *
                      C50646 * C50866 +
                  (((C26064 + C26063 + C26062) * C25611 +
                    (C26393 + C26394 + C26395) * C50603) *
                       C50788 * C50921 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C50920 -
                   ((C25617 * C3676 + C26047 + C26047 + C25610 * C3682 +
                     C25615 * C1191 + C26048 + C26048 + C50911 * C1199 +
                     C25613 * C452 + C26049 + C26049 + C50922 * C472) *
                        C50603 +
                    (C26067 + C26066 + C26065) * C25611) *
                       C50788 * C2067) *
                      C50646 * C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C1651 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50726) *
                      C50646 * C1002 +
                  (((C26064 + C26063 + C26062) * C25611 +
                    (C26393 + C26394 + C26395) * C50603) *
                       C50788 * C50726 -
                   ((C25674 + C25675 + C25676) * C50603 +
                    (C25673 + C25672 + C25671) * C25611) *
                       C50788 * C1651) *
                      C50646 * C1003 +
                  (((C25676 + C25675 + C25674) * C25611 +
                    (C25677 + C25678 + C25679) * C50603) *
                       C50788 * C1651 -
                   ((C25617 * C1537 + C26384 + C26384 + C25610 * C1545 +
                     C25615 * C870 + C26385 + C26385 + C50911 * C880 +
                     C25613 * C446 + C26386 + C26386 + C50922 * C466) *
                        C50603 +
                    (C26395 + C26394 + C26393) * C25611) *
                       C50788 * C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C25611 +
                    (C25671 + C25672 + C25673) * C50603) *
                       C50788 * C1651 -
                   ((C26062 + C26063 + C26064) * C50603 +
                    (C25617 * C1540 + C26029 + C26029 + C25610 * C1548 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25613 * C449 + C26031 + C26031 + C50922 * C469) *
                        C25611) *
                       C50788 * C50726) *
                      C270 +
                  (((C25613 * C867 + C26590 + C26590 + C50922 * C877 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25617 * C4179 + C26592 + C26592 + C25610 * C4185) *
                        C25611 +
                    (C26611 + C26612 + C26613) * C50603) *
                       C50788 * C50726 -
                   ((C25868 + C25869 + C25870) * C50603 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C25611) *
                       C50788 * C1651) *
                      C271 +
                  (((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C25611 +
                    (C25871 + C25872 + C25873) * C50603) *
                       C50788 * C1651 -
                   ((C25617 * C9827 + C27502 + C27502 + C25610 * C9831 +
                     C25615 * C4178 + C27503 + C27503 + C50911 * C4184 +
                     C25613 * C1539 + C27504 + C27504 + C50922 * C1547) *
                        C50603 +
                    (C25617 * C9828 + C27505 + C27505 + C25610 * C9832 +
                     C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                     C25613 * C1540 + C27507 + C27507 + C50922 * C1548) *
                        C25611) *
                       C50788 * C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C50662 * C50874 -
           (((C23732 + C23731) * C50603 +
             (C22734 * C1540 + C23708 + C23708 + C50774 * C1548 +
              C22732 * C867 + C23707 + C23707 + C22727 * C877) *
                 C25611) *
                C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C50662 * C50698) *
              C50916 +
          ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) * C50886 +
            ((C23731 + C23732) * C25611 + (C23733 + C23734) * C50603) *
                C50800) *
               C50662 * C50698 -
           ((C23500 * C50603 + C28928 * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C50662 * C50874) *
              C50917 +
          (((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
            ((C23188 + C23187) * C25611 + (C23511 + C23512) * C50603) *
                C50800) *
               C50662 * C50874 -
           (((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
              C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                 C50603 +
             (C23734 + C23733) * C25611) *
                C50800 +
            ((C23353 + C23352) * C50603 + C23341 * C25611) * C50886) *
               C50662 * C50698) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                       C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                          C25611 +
                      (C22781 + C22782) * C50603) *
                         C50886 +
                     ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                        C50875 -
                    ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                     (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                        C50726) *
                       C50874 +
                   ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
                     ((C22732 * C1193 + C24136 + C24136 + C22727 * C1201 +
                       C22734 * C3678 + C24135 + C24135 + C50774 * C3684) *
                          C25611 +
                      (C29619 + C29620) * C50603) *
                         C50800) *
                        C50726 -
                    ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
                     ((C22987 + C22988) * C50603 +
                      (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                       C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                          C25611) *
                         C50886) *
                        C50875) *
                       C50698) *
                      C273 +
                  ((((C28922 * C25611 + C29340 * C50603) * C50886 +
                     (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
                        C50726 -
                    ((C23500 * C50603 + C28928 * C25611) * C50800 +
                     ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                         C50886) *
                        C50875) *
                       C50874 +
                   ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) *
                         C50886 +
                     (C29603 * C25611 + (C23733 + C23734) * C50603) * C50800) *
                        C50875 -
                    (((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                       C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                          C50603 +
                      (C29620 + C29619) * C25611) *
                         C50800 +
                     ((C23734 + C23733) * C50603 + C29608 * C25611) * C50886) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C22732 * C449 + C23152 + C23152 + C22727 * C469 + C22734 * C867 +
              C23151 + C23151 + C50774 * C877) *
                 C25611 +
             (C23190 + C23189) * C50603) *
                C50800) *
               C50662 * C270 -
           (((C23732 + C23731) * C50603 +
             (C22734 * C1540 + C23708 + C23708 + C50774 * C1548 +
              C22732 * C867 + C23707 + C23707 + C22727 * C877) *
                 C25611) *
                C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C50662 * C271 +
           (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C25611 +
             (C22989 + C22990) * C50603) *
                C50886 +
            ((C22732 * C1540 + C24628 + C24628 + C22727 * C1548 +
              C22734 * C4179 + C24627 + C24627 + C50774 * C4185) *
                 C25611 +
             (C28722 + C28723) * C50603) *
                C50800) *
               C50662 * C272) *
              C273 +
          ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) * C50886 +
            ((C23731 + C23732) * C25611 + (C23733 + C23734) * C50603) *
                C50800) *
               C50662 * C271 -
           ((C23500 * C50603 + (C23189 + C23190) * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C50662 * C270 -
           (((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
              C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                 C50603 +
             (C28723 + C28722) * C25611) *
                C50800 +
            ((C22992 + C22991) * C50603 + (C22990 + C22989) * C25611) *
                C50886) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C25611 +
            (C22781 + C22782) * C50603) *
               C50886 +
           ((C22732 * C449 + C23152 + C23152 + C22727 * C469 + C22734 * C867 +
             C23151 + C23151 + C50774 * C877) *
                C25611 +
            (C23190 + C23189) * C50603) *
               C50800) *
              C50662 * C50646 * C113 -
          ((C23500 * C50603 + (C23189 + C23190) * C25611) * C50800 +
           ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) * C50886) *
              C50662 * C50646 * C114 +
          ((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
           ((C23188 + C23187) * C25611 + (C23511 + C23512) * C50603) * C50800) *
              C50662 * C50646 * C115 -
          (((C22734 * C871 + C23505 + C23505 + C50774 * C881 + C22732 * C454 +
             C23506 + C23506 + C22727 * C474) *
                C50603 +
            (C23512 + C23511) * C25611) *
               C50800 +
           ((C22788 + C22787) * C50603 + C22790 * C25611) * C50886) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C443 -
           ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
               C444 +
           (((C28949 + C28948) * C25611 + C28929 * C50603) * C50886 +
            ((C22732 * C1824 + C25024 + C25024 + C22727 * C1832 +
              C22734 * C4584 + C25023 + C25023 + C50774 * C4590) *
                 C25611 +
             (C28950 + C28951) * C50603) *
                C50800) *
               C445) *
              C50646 * C273 +
          (((C28922 * C25611 + (C23188 + C23187) * C50603) * C50886 +
            (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
               C444 -
           ((C23500 * C50603 + C28928 * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C443 -
           (((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
              C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                 C50603 +
             (C28951 + C28950) * C25611) *
                C50800 +
            ((C23194 + C23193) * C50603 + C28923 * C25611) * C50886) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C25611 +
                     (C22781 + C22782) * C50603) *
                        C50886 +
                    ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                       C50875 -
                   ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                       C50726) *
                      C50646 * C50916 +
                  (((C28922 * C25611 + C29340 * C50603) * C50886 +
                    (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
                       C50726 -
                   ((C23500 * C50603 + C28928 * C25611) * C50800 +
                    ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                        C50886) *
                       C50875) *
                      C50646 * C50917 +
                  (((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
                    (C29340 * C25611 + (C23511 + C23512) * C50603) * C50800) *
                       C50875 -
                   (((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
                      C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                         C50603 +
                     (C23194 + C23193) * C25611) *
                        C50800 +
                    ((C23512 + C23511) * C50603 + C23500 * C25611) * C50886) *
                       C50726) *
                      C50646 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C25611 +
            (C22781 + C22782) * C50603) *
               C50886 +
           ((C22732 * C449 + C23152 + C23152 + C22727 * C469 + C22734 * C867 +
             C23151 + C23151 + C50774 * C877) *
                C25611 +
            (C23190 + C23189) * C50603) *
               C50800) *
              C50662 * C50646 * C113 -
          ((C23500 * C50603 + (C23189 + C23190) * C25611) * C50800 +
           ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) * C50886) *
              C50662 * C50646 * C114 +
          ((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
           ((C23188 + C23187) * C25611 + (C23511 + C23512) * C50603) * C50800) *
              C50662 * C50646 * C115 -
          (((C22734 * C871 + C23505 + C23505 + C50774 * C881 + C22732 * C454 +
             C23506 + C23506 + C22727 * C474) *
                C50603 +
            (C23512 + C23511) * C25611) *
               C50800 +
           ((C22788 + C22787) * C50603 + C22790 * C25611) * C50886) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C22732 * C449 + C23152 + C23152 + C22727 * C469 + C22734 * C867 +
              C23151 + C23151 + C50774 * C877) *
                 C25611 +
             (C23190 + C23189) * C50603) *
                C50800) *
               C50662 * C270 -
           (((C23732 + C23731) * C50603 +
             (C22734 * C1540 + C23708 + C23708 + C50774 * C1548 +
              C22732 * C867 + C23707 + C23707 + C22727 * C877) *
                 C25611) *
                C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C50662 * C271 +
           (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C25611 +
             (C22989 + C22990) * C50603) *
                C50886 +
            ((C22732 * C1540 + C24628 + C24628 + C22727 * C1548 +
              C22734 * C4179 + C24627 + C24627 + C50774 * C4185) *
                 C25611 +
             (C28722 + C28723) * C50603) *
                C50800) *
               C50662 * C272) *
              C273 +
          ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) * C50886 +
            ((C23731 + C23732) * C25611 + (C23733 + C23734) * C50603) *
                C50800) *
               C50662 * C271 -
           ((C23500 * C50603 + (C23189 + C23190) * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C50662 * C270 -
           (((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
              C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                 C50603 +
             (C28723 + C28722) * C25611) *
                C50800 +
            ((C22992 + C22991) * C50603 + (C22990 + C22989) * C25611) *
                C50886) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C50662 * C50918 -
           ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C50662 * C50919 +
           (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C25611 +
             (C22989 + C22990) * C50603) *
                C50886 +
            ((C22732 * C1540 + C24628 + C24628 + C22727 * C1548 +
              C22734 * C4179 + C24627 + C24627 + C50774 * C4185) *
                 C25611 +
             (C28722 + C28723) * C50603) *
                C50800) *
               C50662 * C1306) *
              C50866 +
          ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) * C50886 +
            (C29603 * C25611 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50919 -
           ((C23500 * C50603 + C28928 * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C50662 * C50918 -
           (((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
              C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                 C50603 +
             (C28723 + C28722) * C25611) *
                C50800 +
            ((C22992 + C22991) * C50603 + (C22990 + C22989) * C25611) *
                C50886) *
               C50662 * C1306) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C25611 +
                     (C22781 + C22782) * C50603) *
                        C50886 +
                    ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                       C50875 -
                   ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                       C50726) *
                      C50918 +
                  ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
                    ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                        C50800) *
                       C50726 -
                   ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
                    ((C22987 + C22988) * C50603 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C25611) *
                        C50886) *
                       C50875) *
                      C50919 +
                  ((((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                      C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                         C25611 +
                     (C22989 + C22990) * C50603) *
                        C50886 +
                    ((C30815 + C30816) * C25611 + (C28722 + C28723) * C50603) *
                        C50800) *
                       C50875 -
                   (((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
                      C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                         C50603 +
                     (C22734 * C9330 + C30809 + C30809 + C50774 * C9334 +
                      C22732 * C3678 + C30810 + C30810 + C22727 * C3684) *
                         C25611) *
                        C50800 +
                    ((C28723 + C28722) * C50603 + (C30816 + C30815) * C25611) *
                        C50886) *
                       C50726) *
                      C1306) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C25611 +
            (C22781 + C22782) * C50603) *
               C50886 +
           ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
              C50662 * C1071 -
          ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
           ((C22987 + C22988) * C50603 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C25611) *
               C50886) *
              C50662 * C1072 +
          (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C25611 +
            (C22989 + C22990) * C50603) *
               C50886 +
           ((C22732 * C1540 + C24628 + C24628 + C22727 * C1548 +
             C22734 * C4179 + C24627 + C24627 + C50774 * C4185) *
                C25611 +
            (C28722 + C28723) * C50603) *
               C50800) *
              C50662 * C1073 -
          (((C22734 * C9827 + C29945 + C29945 + C50774 * C9831 +
             C22732 * C4178 + C29946 + C29946 + C22727 * C4184) *
                C50603 +
            (C22734 * C9828 + C29947 + C29947 + C50774 * C9832 +
             C22732 * C4179 + C29948 + C29948 + C22727 * C4185) *
                C25611) *
               C50800 +
           ((C22734 * C3516 + C23981 + C23981 + C50774 * C3522 +
             C22732 * C1078 + C23982 + C23982 + C22727 * C1086) *
                C50603 +
            (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 +
             C22732 * C1079 + C23984 + C23984 + C22727 * C1087) *
                C25611) *
               C50886) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C50662 * C1000 -
           ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C50662 * C50698) *
              C1002 +
          ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) * C50886 +
            (C29603 * C25611 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50698 -
           ((C23500 * C50603 + C28928 * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C50662 * C1000) *
              C1003 +
          (((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
            (C29340 * C25611 + (C23511 + C23512) * C50603) * C50800) *
               C50662 * C1000 -
           (((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
              C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                 C50603 +
             (C23734 + C23733) * C25611) *
                C50800 +
            ((C23353 + C23352) * C50603 + C23341 * C25611) * C50886) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C443 -
           ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
               C444 +
           (((C28949 + C28948) * C25611 + C28929 * C50603) * C50886 +
            ((C22732 * C1824 + C25024 + C25024 + C22727 * C1832 +
              C22734 * C4584 + C25023 + C25023 + C50774 * C4590) *
                 C25611 +
             (C28950 + C28951) * C50603) *
                C50800) *
               C445) *
              C1000 +
          ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
            ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                C50800) *
               C444 -
           ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C443 -
           (((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
              C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                 C50603 +
             (C22734 * C10230 + C30149 + C30149 + C50774 * C10234 +
              C22732 * C4584 + C30150 + C30150 + C22727 * C4590) *
                 C25611) *
                C50800 +
            ((C29620 + C29619) * C50603 + (C30156 + C30155) * C25611) *
                C50886) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                       C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                          C25611 +
                      (C22781 + C22782) * C50603) *
                         C50886 +
                     ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                        C50875 -
                    ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                     (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                        C50726) *
                       C1000 +
                   ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
                     ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                         C50800) *
                        C50726 -
                    ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
                     ((C22987 + C22988) * C50603 +
                      (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                       C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                          C25611) *
                         C50886) *
                        C50875) *
                       C50698) *
                      C50866 +
                  ((((C28922 * C25611 + C29340 * C50603) * C50886 +
                     (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
                        C50726 -
                    ((C23500 * C50603 + C28928 * C25611) * C50800 +
                     ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                         C50886) *
                        C50875) *
                       C1000 +
                   ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) *
                         C50886 +
                     (C29603 * C25611 + (C23733 + C23734) * C50603) * C50800) *
                        C50875 -
                    (((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                       C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                          C50603 +
                      (C29620 + C29619) * C25611) *
                         C50800 +
                     ((C23734 + C23733) * C50603 + C29608 * C25611) * C50886) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C50662 * C1000 -
           ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C50662 * C50698) *
              C1002 +
          ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) * C50886 +
            (C29603 * C25611 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50698 -
           ((C23500 * C50603 + C28928 * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C50662 * C1000) *
              C1003 +
          (((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
            (C29340 * C25611 + (C23511 + C23512) * C50603) * C50800) *
               C50662 * C1000 -
           (((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
              C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                 C50603 +
             (C23734 + C23733) * C25611) *
                C50800 +
            ((C23353 + C23352) * C50603 + C23341 * C25611) * C50886) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C25611 +
            (C22781 + C22782) * C50603) *
               C50886 +
           ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
              C50662 * C1071 -
          ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
           ((C22987 + C22988) * C50603 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C25611) *
               C50886) *
              C50662 * C1072 +
          (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C25611 +
            (C22989 + C22990) * C50603) *
               C50886 +
           ((C22732 * C1540 + C24628 + C24628 + C22727 * C1548 +
             C22734 * C4179 + C24627 + C24627 + C50774 * C4185) *
                C25611 +
            (C28722 + C28723) * C50603) *
               C50800) *
              C50662 * C1073 -
          (((C22734 * C9827 + C29945 + C29945 + C50774 * C9831 +
             C22732 * C4178 + C29946 + C29946 + C22727 * C4184) *
                C50603 +
            (C22734 * C9828 + C29947 + C29947 + C50774 * C9832 +
             C22732 * C4179 + C29948 + C29948 + C22727 * C4185) *
                C25611) *
               C50800 +
           ((C22734 * C3516 + C23981 + C23981 + C50774 * C3522 +
             C22732 * C1078 + C23982 + C23982 + C22727 * C1086) *
                C50603 +
            (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 +
             C22732 * C1079 + C23984 + C23984 + C22727 * C1087) *
                C25611) *
               C50886) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                       C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                          C25611 +
                      (C22781 + C22782) * C50603) *
                         C50886 +
                     ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                        C1651 -
                    ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                     (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                        C50726) *
                       C50874 +
                   ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
                     ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                         C50800) *
                        C50726 -
                    ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
                     ((C22987 + C22988) * C50603 +
                      (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                       C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                          C25611) *
                         C50886) *
                        C1651) *
                       C50698) *
                      C50866 +
                  ((((C28922 * C25611 + C29340 * C50603) * C50886 +
                     (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
                        C50726 -
                    ((C23500 * C50603 + C28928 * C25611) * C50800 +
                     ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                         C50886) *
                        C1651) *
                       C50874 +
                   ((((C22988 + C22987) * C25611 + (C22986 + C22985) * C50603) *
                         C50886 +
                     (C29603 * C25611 + (C23733 + C23734) * C50603) * C50800) *
                        C1651 -
                    (((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                       C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                          C50603 +
                      (C29620 + C29619) * C25611) *
                         C50800 +
                     ((C23734 + C23733) * C50603 + C29608 * C25611) * C50886) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C25611 +
                     (C22781 + C22782) * C50603) *
                        C50886 +
                    ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                       C50920 -
                   ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                       C50921 +
                   (((C28949 + C28948) * C25611 + C28929 * C50603) * C50886 +
                    ((C31347 + C31348) * C25611 + (C28950 + C28951) * C50603) *
                        C50800) *
                       C2067) *
                      C50874 +
                  ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
                    ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                        C50800) *
                       C50921 -
                   ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
                    ((C22987 + C22988) * C50603 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C25611) *
                        C50886) *
                       C50920 -
                   (((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
                      C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                         C50603 +
                     (C22734 * C10230 + C30149 + C30149 + C50774 * C10234 +
                      C22732 * C4584 + C30150 + C30150 + C22727 * C4590) *
                         C25611) *
                        C50800 +
                    ((C29620 + C29619) * C50603 + (C30156 + C30155) * C25611) *
                        C50886) *
                       C2067) *
                      C50698) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C1651 -
           ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
               C50726) *
              C270 +
          ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
            ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                C50800) *
               C50726 -
           ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C25611) *
                C50886) *
               C1651) *
              C271 +
          ((((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C25611 +
             (C22989 + C22990) * C50603) *
                C50886 +
            ((C30815 + C30816) * C25611 + (C28722 + C28723) * C50603) *
                C50800) *
               C1651 -
           (((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
              C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                 C50603 +
             (C22734 * C9330 + C30809 + C30809 + C50774 * C9334 +
              C22732 * C3678 + C30810 + C30810 + C22727 * C3684) *
                 C25611) *
                C50800 +
            ((C28723 + C28722) * C50603 + (C30816 + C30815) * C25611) *
                C50886) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C25611 +
             (C22781 + C22782) * C50603) *
                C50886 +
            ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
               C1651 -
           ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
               C50726) *
              C50646 * C1002 +
          (((C28922 * C25611 + C29340 * C50603) * C50886 +
            (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
               C50726 -
           ((C23500 * C50603 + C28928 * C25611) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                C50886) *
               C1651) *
              C50646 * C1003 +
          (((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
            (C29340 * C25611 + (C23511 + C23512) * C50603) * C50800) *
               C1651 -
           (((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
              C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                 C50603 +
             (C23194 + C23193) * C25611) *
                C50800 +
            ((C23512 + C23511) * C50603 + C23500 * C25611) * C50886) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C25611 +
            (C22781 + C22782) * C50603) *
               C50886 +
           ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
              C1817 -
          ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
           (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
              C1818 +
          (((C28949 + C28948) * C25611 + C28929 * C50603) * C50886 +
           ((C31347 + C31348) * C25611 + (C28950 + C28951) * C50603) * C50800) *
              C1819 -
          (((C22734 * C16644 + C31339 + C31339 + C50774 * C16646 +
             C22732 * C7319 + C31340 + C31340 + C22727 * C7325) *
                C50603 +
            (C22734 * C14823 + C31341 + C31341 + C50774 * C14827 +
             C22732 * C7320 + C31342 + C31342 + C22727 * C7326) *
                C25611) *
               C50800 +
           ((C28951 + C28950) * C50603 + (C31348 + C31347) * C25611) * C50886) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C25611 +
                     (C22781 + C22782) * C50603) *
                        C50886 +
                    ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                       C50920 -
                   ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                       C50921 +
                   (((C28949 + C28948) * C25611 + C28929 * C50603) * C50886 +
                    ((C31347 + C31348) * C25611 + (C28950 + C28951) * C50603) *
                        C50800) *
                       C2067) *
                      C50646 * C50866 +
                  (((C28922 * C25611 + C29340 * C50603) * C50886 +
                    (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
                       C50921 -
                   ((C23500 * C50603 + C28928 * C25611) * C50800 +
                    ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                        C50886) *
                       C50920 -
                   (((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
                      C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                         C50603 +
                     (C28951 + C28950) * C25611) *
                        C50800 +
                    ((C23194 + C23193) * C50603 + C28923 * C25611) * C50886) *
                       C2067) *
                      C50646 * C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C25611 +
                     (C22781 + C22782) * C50603) *
                        C50886 +
                    ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                       C1651 -
                   ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                       C50726) *
                      C50646 * C1002 +
                  (((C28922 * C25611 + C29340 * C50603) * C50886 +
                    (C28929 * C25611 + (C23193 + C23194) * C50603) * C50800) *
                       C50726 -
                   ((C23500 * C50603 + C28928 * C25611) * C50800 +
                    ((C22784 + C22783) * C50603 + (C22782 + C22781) * C25611) *
                        C50886) *
                       C1651) *
                      C50646 * C1003 +
                  (((C22789 * C25611 + (C22786 + C22785) * C50603) * C50886 +
                    (C29340 * C25611 + (C23511 + C23512) * C50603) * C50800) *
                       C1651 -
                   (((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
                      C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                         C50603 +
                     (C23194 + C23193) * C25611) *
                        C50800 +
                    ((C23512 + C23511) * C50603 + C23500 * C25611) * C50886) *
                       C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C25611 +
                     (C22781 + C22782) * C50603) *
                        C50886 +
                    ((C28946 + C28947) * C25611 + C28922 * C50603) * C50800) *
                       C1651 -
                   ((C28923 * C50603 + (C28948 + C28949) * C25611) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C25611) * C50886) *
                       C50726) *
                      C270 +
                  ((((C29617 + C29618) * C25611 + C29603 * C50603) * C50886 +
                    ((C30155 + C30156) * C25611 + (C29619 + C29620) * C50603) *
                        C50800) *
                       C50726 -
                   ((C29608 * C50603 + (C29618 + C29617) * C25611) * C50800 +
                    ((C22987 + C22988) * C50603 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C25611) *
                        C50886) *
                       C1651) *
                      C271 +
                  ((((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                      C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                         C25611 +
                     (C22989 + C22990) * C50603) *
                        C50886 +
                    ((C30815 + C30816) * C25611 + (C28722 + C28723) * C50603) *
                        C50800) *
                       C1651 -
                   (((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
                      C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                         C50603 +
                     (C22734 * C9330 + C30809 + C30809 + C50774 * C9334 +
                      C22732 * C3678 + C30810 + C30810 + C22727 * C3684) *
                         C25611) *
                        C50800 +
                    ((C28723 + C28722) * C50603 + (C30816 + C30815) * C25611) *
                        C50886) *
                       C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C50662 * C50874 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C50662 * C50698) *
              C50916 +
          ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) * C32092 +
            (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50698 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C50662 * C50874) *
              C50917 +
          (((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
            (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
               C50662 * C50874 -
           (((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
              C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                 C50603 +
             (C23734 + C23733) * C50857) *
                C50800 +
            ((C23353 + C23352) * C50603 + C23341 * C50857) * C32092) *
               C50662 * C50698) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                       C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                          C50857 +
                      (C22781 + C22782) * C50603) *
                         C32092 +
                     ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                        C50875 -
                    ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                     (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                        C50726) *
                       C50874 +
                   ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
                     ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                         C50800) *
                        C50726 -
                    ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
                     ((C22987 + C22988) * C50603 +
                      (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                       C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                          C50857) *
                         C32092) *
                        C50875) *
                       C50698) *
                      C273 +
                  ((((C28922 * C50857 + C29340 * C50603) * C32092 +
                     (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
                        C50726 -
                    ((C23500 * C50603 + C28928 * C50857) * C50800 +
                     ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                         C32092) *
                        C50875) *
                       C50874 +
                   ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) *
                         C32092 +
                     (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
                        C50875 -
                    (((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                       C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                          C50603 +
                      (C29620 + C29619) * C50857) *
                         C50800 +
                     ((C23734 + C23733) * C50603 + C29608 * C50857) * C32092) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C50662 * C270 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C50662 * C271 +
           (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C50857 +
             (C22989 + C22990) * C50603) *
                C32092 +
            ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) *
                C50800) *
               C50662 * C272) *
              C273 +
          ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) * C32092 +
            (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C271 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C50662 * C270 -
           (((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
              C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                 C50603 +
             (C28723 + C28722) * C50857) *
                C50800 +
            ((C22992 + C22991) * C50603 + (C22990 + C22989) * C50857) *
                C32092) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50857 +
            (C22781 + C22782) * C50603) *
               C32092 +
           ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
              C50662 * C50646 * C113 -
          ((C23500 * C50603 + C28928 * C50857) * C50800 +
           ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) * C32092) *
              C50662 * C50646 * C114 +
          ((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
           (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
              C50662 * C50646 * C115 -
          (((C22734 * C871 + C23505 + C23505 + C50774 * C881 + C22732 * C454 +
             C23506 + C23506 + C22727 * C474) *
                C50603 +
            (C23512 + C23511) * C50857) *
               C50800 +
           ((C22788 + C22787) * C50603 + C22790 * C50857) * C32092) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C443 -
           ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
               C444 +
           (((C28949 + C28948) * C50857 + C28929 * C50603) * C32092 +
            ((C31347 + C31348) * C50857 + (C28950 + C28951) * C50603) *
                C50800) *
               C445) *
              C50646 * C273 +
          (((C28922 * C50857 + C29340 * C50603) * C32092 +
            (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
               C444 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C443 -
           (((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
              C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                 C50603 +
             (C28951 + C28950) * C50857) *
                C50800 +
            ((C23194 + C23193) * C50603 + C28923 * C50857) * C32092) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50857 +
                     (C22781 + C22782) * C50603) *
                        C32092 +
                    ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                       C50875 -
                   ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                       C50726) *
                      C50646 * C50916 +
                  (((C28922 * C50857 + C29340 * C50603) * C32092 +
                    (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
                       C50726 -
                   ((C23500 * C50603 + C28928 * C50857) * C50800 +
                    ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                        C32092) *
                       C50875) *
                      C50646 * C50917 +
                  (((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
                    (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
                       C50875 -
                   (((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
                      C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                         C50603 +
                     (C23194 + C23193) * C50857) *
                        C50800 +
                    ((C23512 + C23511) * C50603 + C23500 * C50857) * C32092) *
                       C50726) *
                      C50646 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50857 +
            (C22781 + C22782) * C50603) *
               C32092 +
           ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
              C50662 * C50646 * C113 -
          ((C23500 * C50603 + C28928 * C50857) * C50800 +
           ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) * C32092) *
              C50662 * C50646 * C114 +
          ((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
           (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
              C50662 * C50646 * C115 -
          (((C22734 * C871 + C23505 + C23505 + C50774 * C881 + C22732 * C454 +
             C23506 + C23506 + C22727 * C474) *
                C50603 +
            (C23512 + C23511) * C50857) *
               C50800 +
           ((C22788 + C22787) * C50603 + C22790 * C50857) * C32092) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C50662 * C270 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C50662 * C271 +
           (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C50857 +
             (C22989 + C22990) * C50603) *
                C32092 +
            ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) *
                C50800) *
               C50662 * C272) *
              C273 +
          ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) * C32092 +
            (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C271 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C50662 * C270 -
           (((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
              C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                 C50603 +
             (C28723 + C28722) * C50857) *
                C50800 +
            ((C22992 + C22991) * C50603 + (C22990 + C22989) * C50857) *
                C32092) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C50662 * C50918 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C50662 * C50919 +
           (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C50857 +
             (C22989 + C22990) * C50603) *
                C32092 +
            ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) *
                C50800) *
               C50662 * C1306) *
              C50866 +
          ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) * C32092 +
            (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50919 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C50662 * C50918 -
           (((C22734 * C4177 + C24623 + C24623 + C50774 * C4183 +
              C22732 * C1538 + C24624 + C24624 + C22727 * C1546) *
                 C50603 +
             (C28723 + C28722) * C50857) *
                C50800 +
            ((C22992 + C22991) * C50603 + (C22990 + C22989) * C50857) *
                C32092) *
               C50662 * C1306) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50857 +
                     (C22781 + C22782) * C50603) *
                        C32092 +
                    ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                       C50875 -
                   ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                       C50726) *
                      C50918 +
                  ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
                    ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                        C50800) *
                       C50726 -
                   ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
                    ((C22987 + C22988) * C50603 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C50857) *
                        C32092) *
                       C50875) *
                      C50919 +
                  ((((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                      C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                         C50857 +
                     (C22989 + C22990) * C50603) *
                        C32092 +
                    ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) *
                        C50800) *
                       C50875 -
                   (((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
                      C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                         C50603 +
                     (C22734 * C9330 + C30809 + C30809 + C50774 * C9334 +
                      C22732 * C3678 + C30810 + C30810 + C22727 * C3684) *
                         C50857) *
                        C50800 +
                    ((C28723 + C28722) * C50603 + (C30816 + C30815) * C50857) *
                        C32092) *
                       C50726) *
                      C1306) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50857 +
            (C22781 + C22782) * C50603) *
               C32092 +
           ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
              C50662 * C1071 -
          ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
           ((C22987 + C22988) * C50603 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50857) *
               C32092) *
              C50662 * C1072 +
          (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50857 +
            (C22989 + C22990) * C50603) *
               C32092 +
           ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) * C50800) *
              C50662 * C1073 -
          (((C22734 * C9827 + C29945 + C29945 + C50774 * C9831 +
             C22732 * C4178 + C29946 + C29946 + C22727 * C4184) *
                C50603 +
            (C22734 * C9828 + C29947 + C29947 + C50774 * C9832 +
             C22732 * C4179 + C29948 + C29948 + C22727 * C4185) *
                C50857) *
               C50800 +
           ((C22734 * C3516 + C23981 + C23981 + C50774 * C3522 +
             C22732 * C1078 + C23982 + C23982 + C22727 * C1086) *
                C50603 +
            (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 +
             C22732 * C1079 + C23984 + C23984 + C22727 * C1087) *
                C50857) *
               C32092) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C50662 * C1000 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C50662 * C50698) *
              C1002 +
          ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) * C32092 +
            (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50698 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C50662 * C1000) *
              C1003 +
          (((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
            (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
               C50662 * C1000 -
           (((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
              C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                 C50603 +
             (C23734 + C23733) * C50857) *
                C50800 +
            ((C23353 + C23352) * C50603 + C23341 * C50857) * C32092) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C443 -
           ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
               C444 +
           (((C28949 + C28948) * C50857 + C28929 * C50603) * C32092 +
            ((C31347 + C31348) * C50857 + (C28950 + C28951) * C50603) *
                C50800) *
               C445) *
              C1000 +
          ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
            ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                C50800) *
               C444 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C443 -
           (((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
              C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                 C50603 +
             (C22734 * C10230 + C30149 + C30149 + C50774 * C10234 +
              C22732 * C4584 + C30150 + C30150 + C22727 * C4590) *
                 C50857) *
                C50800 +
            ((C29620 + C29619) * C50603 + (C30156 + C30155) * C50857) *
                C32092) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                       C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                          C50857 +
                      (C22781 + C22782) * C50603) *
                         C32092 +
                     ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                        C50875 -
                    ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                     (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                        C50726) *
                       C1000 +
                   ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
                     ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                         C50800) *
                        C50726 -
                    ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
                     ((C22987 + C22988) * C50603 +
                      (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                       C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                          C50857) *
                         C32092) *
                        C50875) *
                       C50698) *
                      C50866 +
                  ((((C28922 * C50857 + C29340 * C50603) * C32092 +
                     (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
                        C50726 -
                    ((C23500 * C50603 + C28928 * C50857) * C50800 +
                     ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                         C32092) *
                        C50875) *
                       C1000 +
                   ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) *
                         C32092 +
                     (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
                        C50875 -
                    (((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                       C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                          C50603 +
                      (C29620 + C29619) * C50857) *
                         C50800 +
                     ((C23734 + C23733) * C50603 + C29608 * C50857) * C32092) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C50662 * C1000 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C50662 * C50698) *
              C1002 +
          ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) * C32092 +
            (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
               C50662 * C50698 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C50662 * C1000) *
              C1003 +
          (((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
            (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
               C50662 * C1000 -
           (((C22734 * C1537 + C23721 + C23721 + C50774 * C1545 +
              C22732 * C870 + C23722 + C23722 + C22727 * C880) *
                 C50603 +
             (C23734 + C23733) * C50857) *
                C50800 +
            ((C23353 + C23352) * C50603 + C23341 * C50857) * C32092) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50857 +
            (C22781 + C22782) * C50603) *
               C32092 +
           ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
              C50662 * C1071 -
          ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
           ((C22987 + C22988) * C50603 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50857) *
               C32092) *
              C50662 * C1072 +
          (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50857 +
            (C22989 + C22990) * C50603) *
               C32092 +
           ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) * C50800) *
              C50662 * C1073 -
          (((C22734 * C9827 + C29945 + C29945 + C50774 * C9831 +
             C22732 * C4178 + C29946 + C29946 + C22727 * C4184) *
                C50603 +
            (C22734 * C9828 + C29947 + C29947 + C50774 * C9832 +
             C22732 * C4179 + C29948 + C29948 + C22727 * C4185) *
                C50857) *
               C50800 +
           ((C22734 * C3516 + C23981 + C23981 + C50774 * C3522 +
             C22732 * C1078 + C23982 + C23982 + C22727 * C1086) *
                C50603 +
            (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 +
             C22732 * C1079 + C23984 + C23984 + C22727 * C1087) *
                C50857) *
               C32092) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                       C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                          C50857 +
                      (C22781 + C22782) * C50603) *
                         C32092 +
                     ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                        C1651 -
                    ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                     (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                        C50726) *
                       C50874 +
                   ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
                     ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                         C50800) *
                        C50726 -
                    ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
                     ((C22987 + C22988) * C50603 +
                      (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                       C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                          C50857) *
                         C32092) *
                        C1651) *
                       C50698) *
                      C50866 +
                  ((((C28922 * C50857 + C29340 * C50603) * C32092 +
                     (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
                        C50726 -
                    ((C23500 * C50603 + C28928 * C50857) * C50800 +
                     ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                         C32092) *
                        C1651) *
                       C50874 +
                   ((((C22988 + C22987) * C50857 + (C22986 + C22985) * C50603) *
                         C32092 +
                     (C29603 * C50857 + (C23733 + C23734) * C50603) * C50800) *
                        C1651 -
                    (((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
                       C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                          C50603 +
                      (C29620 + C29619) * C50857) *
                         C50800 +
                     ((C23734 + C23733) * C50603 + C29608 * C50857) * C32092) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50857 +
                     (C22781 + C22782) * C50603) *
                        C32092 +
                    ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                       C50920 -
                   ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                       C50921 +
                   (((C28949 + C28948) * C50857 + C28929 * C50603) * C32092 +
                    ((C31347 + C31348) * C50857 + (C28950 + C28951) * C50603) *
                        C50800) *
                       C2067) *
                      C50874 +
                  ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
                    ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                        C50800) *
                       C50921 -
                   ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
                    ((C22987 + C22988) * C50603 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C50857) *
                        C32092) *
                       C50920 -
                   (((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
                      C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                         C50603 +
                     (C22734 * C10230 + C30149 + C30149 + C50774 * C10234 +
                      C22732 * C4584 + C30150 + C30150 + C22727 * C4590) *
                         C50857) *
                        C50800 +
                    ((C29620 + C29619) * C50603 + (C30156 + C30155) * C50857) *
                        C32092) *
                       C2067) *
                      C50698) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C1651 -
           ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
               C50726) *
              C270 +
          ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
            ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                C50800) *
               C50726 -
           ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
            ((C22987 + C22988) * C50603 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50857) *
                C32092) *
               C1651) *
              C271 +
          ((((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
              C22952 + C22952 + C50774 * C1087) *
                 C50857 +
             (C22989 + C22990) * C50603) *
                C32092 +
            ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) *
                C50800) *
               C1651 -
           (((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
              C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                 C50603 +
             (C22734 * C9330 + C30809 + C30809 + C50774 * C9334 +
              C22732 * C3678 + C30810 + C30810 + C22727 * C3684) *
                 C50857) *
                C50800 +
            ((C28723 + C28722) * C50603 + (C30816 + C30815) * C50857) *
                C32092) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50857 +
             (C22781 + C22782) * C50603) *
                C32092 +
            ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
               C1651 -
           ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
            (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
               C50726) *
              C50646 * C1002 +
          (((C28922 * C50857 + C29340 * C50603) * C32092 +
            (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
               C50726 -
           ((C23500 * C50603 + C28928 * C50857) * C50800 +
            ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                C32092) *
               C1651) *
              C50646 * C1003 +
          (((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
            (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
               C1651 -
           (((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
              C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                 C50603 +
             (C23194 + C23193) * C50857) *
                C50800 +
            ((C23512 + C23511) * C50603 + C23500 * C50857) * C32092) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50857 +
            (C22781 + C22782) * C50603) *
               C32092 +
           ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
              C1817 -
          ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
           (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
              C1818 +
          (((C28949 + C28948) * C50857 + C28929 * C50603) * C32092 +
           ((C31347 + C31348) * C50857 + (C28950 + C28951) * C50603) * C50800) *
              C1819 -
          (((C22734 * C16644 + C31339 + C31339 + C50774 * C16646 +
             C22732 * C7319 + C31340 + C31340 + C22727 * C7325) *
                C50603 +
            (C22734 * C14823 + C31341 + C31341 + C50774 * C14827 +
             C22732 * C7320 + C31342 + C31342 + C22727 * C7326) *
                C50857) *
               C50800 +
           ((C28951 + C28950) * C50603 + (C31348 + C31347) * C50857) * C32092) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50857 +
                     (C22781 + C22782) * C50603) *
                        C32092 +
                    ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                       C50920 -
                   ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                       C50921 +
                   (((C28949 + C28948) * C50857 + C28929 * C50603) * C32092 +
                    ((C31347 + C31348) * C50857 + (C28950 + C28951) * C50603) *
                        C50800) *
                       C2067) *
                      C50646 * C50866 +
                  (((C28922 * C50857 + C29340 * C50603) * C32092 +
                    (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
                       C50921 -
                   ((C23500 * C50603 + C28928 * C50857) * C50800 +
                    ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                        C32092) *
                       C50920 -
                   (((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
                      C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                         C50603 +
                     (C28951 + C28950) * C50857) *
                        C50800 +
                    ((C23194 + C23193) * C50603 + C28923 * C50857) * C32092) *
                       C2067) *
                      C50646 * C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50857 +
                     (C22781 + C22782) * C50603) *
                        C32092 +
                    ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                       C1651 -
                   ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                       C50726) *
                      C50646 * C1002 +
                  (((C28922 * C50857 + C29340 * C50603) * C32092 +
                    (C28929 * C50857 + (C23193 + C23194) * C50603) * C50800) *
                       C50726 -
                   ((C23500 * C50603 + C28928 * C50857) * C50800 +
                    ((C22784 + C22783) * C50603 + (C22782 + C22781) * C50857) *
                        C32092) *
                       C1651) *
                      C50646 * C1003 +
                  (((C22789 * C50857 + (C22786 + C22785) * C50603) * C32092 +
                    (C29340 * C50857 + (C23511 + C23512) * C50603) * C50800) *
                       C1651 -
                   (((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 +
                      C22732 * C453 + C23170 + C23170 + C22727 * C473) *
                         C50603 +
                     (C23194 + C23193) * C50857) *
                        C50800 +
                    ((C23512 + C23511) * C50603 + C23500 * C50857) * C32092) *
                       C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                      C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                         C50857 +
                     (C22781 + C22782) * C50603) *
                        C32092 +
                    ((C28946 + C28947) * C50857 + C28922 * C50603) * C50800) *
                       C1651 -
                   ((C28923 * C50603 + (C28948 + C28949) * C50857) * C50800 +
                    (C28928 * C50603 + (C28947 + C28946) * C50857) * C32092) *
                       C50726) *
                      C270 +
                  ((((C29617 + C29618) * C50857 + C29603 * C50603) * C32092 +
                    ((C30155 + C30156) * C50857 + (C29619 + C29620) * C50603) *
                        C50800) *
                       C50726 -
                   ((C29608 * C50603 + (C29618 + C29617) * C50857) * C50800 +
                    ((C22987 + C22988) * C50603 +
                     (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                      C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                         C50857) *
                        C32092) *
                       C1651) *
                      C271 +
                  ((((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                      C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                         C50857 +
                     (C22989 + C22990) * C50603) *
                        C32092 +
                    ((C30815 + C30816) * C50857 + (C28722 + C28723) * C50603) *
                        C50800) *
                       C1651 -
                   (((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
                      C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                         C50603 +
                     (C22734 * C9330 + C30809 + C30809 + C50774 * C9334 +
                      C22732 * C3678 + C30810 + C30810 + C22727 * C3684) *
                         C50857) *
                        C50800 +
                    ((C28723 + C28722) * C50603 + (C30816 + C30815) * C50857) *
                        C32092) *
                       C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50662 * C50874 -
                   ((C25617 * C4179 + C26592 + C26592 + C25610 * C4185 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25613 * C867 + C26590 + C26590 + C50922 * C877) *
                        C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50662 * C50698) *
                      C50916 +
                  (((C25870 + C25869 + C25868) * C50598 * C32092 +
                    (C26611 + C26612 + C26613) * C50598 * C50800) *
                       C50662 * C50698 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50662 * C50874) *
                      C50917 +
                  (((C25676 + C25675 + C25674) * C50598 * C32092 +
                    (C26393 + C26394 + C26395) * C50598 * C50800) *
                       C50662 * C50874 -
                   ((C25617 * C4177 + C26602 + C26602 + C25610 * C4183 +
                     C25615 * C1538 + C26603 + C26603 + C50911 * C1546 +
                     C25613 * C869 + C26604 + C26604 + C50922 * C879) *
                        C50598 * C50800 +
                    (C26231 + C26230 + C26229) * C50598 * C32092) *
                       C50662 * C50698) *
                      C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                      C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                      C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                         C50598 * C32092 +
                     (C44738 + C44739 + C44740) * C50598 * C50800) *
                        C50875 -
                    ((C44741 + C44742 + C44743) * C50598 * C50800 +
                     (C44740 + C44739 + C44738) * C50598 * C32092) *
                        C50726) *
                       C50874 +
                   (((C45242 + C45243 + C45244) * C50598 * C32092 +
                     (C25613 * C1193 + C27015 + C27015 + C50922 * C1201 +
                      C25615 * C3678 + C27014 + C27014 + C50911 * C3684 +
                      C25617 * C9330 + C27013 + C27013 + C25610 * C9334) *
                         C50598 * C50800) *
                        C50726 -
                    ((C45244 + C45243 + C45242) * C50598 * C50800 +
                     (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                      C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                      C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                         C50598 * C32092) *
                        C50875) *
                       C50698) *
                      C273 +
                  ((((C26064 + C26063 + C26062) * C50598 * C32092 +
                     (C26065 + C26066 + C26067) * C50598 * C50800) *
                        C50726 -
                    ((C26062 + C26063 + C26064) * C50598 * C50800 +
                     (C25673 + C25672 + C25671) * C50598 * C32092) *
                        C50875) *
                       C50874 +
                   (((C25870 + C25869 + C25868) * C50598 * C32092 +
                     (C26611 + C26612 + C26613) * C50598 * C50800) *
                        C50875 -
                    ((C25617 * C9329 + C27010 + C27010 + C25610 * C9333 +
                      C25615 * C3677 + C27011 + C27011 + C50911 * C3683 +
                      C25613 * C1192 + C27012 + C27012 + C50922 * C1200) *
                         C50598 * C50800 +
                     (C26613 + C26612 + C26611) * C50598 * C32092) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[62] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C25613 * C449 + C26031 + C26031 + C50922 * C469 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25617 * C1540 + C26029 + C26029 + C25610 * C1548) *
                        C50598 * C50800) *
                       C50662 * C270 -
                   ((C25617 * C4179 + C26592 + C26592 + C25610 * C4185 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25613 * C867 + C26590 + C26590 + C50922 * C877) *
                        C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50662 * C271 +
                   ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C50598 * C32092 +
                    (C25613 * C1540 + C27507 + C27507 + C50922 * C1548 +
                     C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                     C25617 * C9828 + C27505 + C27505 + C25610 * C9832) *
                        C50598 * C50800) *
                       C50662 * C272) *
                      C273 +
                  (((C25870 + C25869 + C25868) * C50598 * C32092 +
                    (C26611 + C26612 + C26613) * C50598 * C50800) *
                       C50662 * C271 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50662 * C270 -
                   ((C25617 * C9827 + C27502 + C27502 + C25610 * C9831 +
                     C25615 * C4178 + C27503 + C27503 + C50911 * C4184 +
                     C25613 * C1539 + C27504 + C27504 + C50922 * C1547) *
                        C50598 * C50800 +
                    (C25873 + C25872 + C25871) * C50598 * C32092) *
                       C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C50598 * C32092 +
                   (C25613 * C449 + C26031 + C26031 + C50922 * C469 +
                    C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                    C25617 * C1540 + C26029 + C26029 + C25610 * C1548) *
                       C50598 * C50800) *
                      C50662 * C50646 * C113 -
                  ((C26062 + C26063 + C26064) * C50598 * C50800 +
                   (C25673 + C25672 + C25671) * C50598 * C32092) *
                      C50662 * C50646 * C114 +
                  ((C25676 + C25675 + C25674) * C50598 * C32092 +
                   (C26393 + C26394 + C26395) * C50598 * C50800) *
                      C50662 * C50646 * C115 -
                  ((C25617 * C1537 + C26384 + C26384 + C25610 * C1545 +
                    C25615 * C870 + C26385 + C26385 + C50911 * C880 +
                    C25613 * C446 + C26386 + C26386 + C50922 * C466) *
                       C50598 * C50800 +
                   (C25679 + C25678 + C25677) * C50598 * C32092) *
                      C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C443 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C444 +
                   ((C44743 + C44742 + C44741) * C50598 * C32092 +
                    (C25613 * C1824 + C27903 + C27903 + C50922 * C1832 +
                     C25615 * C4584 + C27902 + C27902 + C50911 * C4590 +
                     C25617 * C10230 + C27901 + C27901 + C25610 * C10234) *
                        C50598 * C50800) *
                       C445) *
                      C50646 * C273 +
                  (((C26064 + C26063 + C26062) * C50598 * C32092 +
                    (C26065 + C26066 + C26067) * C50598 * C50800) *
                       C444 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C443 -
                   ((C25617 * C10229 + C27898 + C27898 + C25610 * C10233 +
                     C25615 * C4583 + C27899 + C27899 + C50911 * C4589 +
                     C25613 * C1823 + C27900 + C27900 + C50922 * C1831) *
                        C50598 * C50800 +
                    (C26067 + C26066 + C26065) * C50598 * C32092) *
                       C445) *
                      C50646 * C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50875 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50726) *
                      C50646 * C50916 +
                  (((C26064 + C26063 + C26062) * C50598 * C32092 +
                    (C26065 + C26066 + C26067) * C50598 * C50800) *
                       C50726 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50875) *
                      C50646 * C50917 +
                  (((C25676 + C25675 + C25674) * C50598 * C32092 +
                    (C26393 + C26394 + C26395) * C50598 * C50800) *
                       C50875 -
                   ((C25617 * C3676 + C26047 + C26047 + C25610 * C3682 +
                     C25615 * C1191 + C26048 + C26048 + C50911 * C1199 +
                     C25613 * C452 + C26049 + C26049 + C50922 * C472) *
                        C50598 * C50800 +
                    (C26395 + C26394 + C26393) * C50598 * C32092) *
                       C50726) *
                      C50646 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C50598 * C32092 +
                   (C25613 * C449 + C26031 + C26031 + C50922 * C469 +
                    C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                    C25617 * C1540 + C26029 + C26029 + C25610 * C1548) *
                       C50598 * C50800) *
                      C50662 * C50646 * C113 -
                  ((C26062 + C26063 + C26064) * C50598 * C50800 +
                   (C25673 + C25672 + C25671) * C50598 * C32092) *
                      C50662 * C50646 * C114 +
                  ((C25676 + C25675 + C25674) * C50598 * C32092 +
                   (C26393 + C26394 + C26395) * C50598 * C50800) *
                      C50662 * C50646 * C115 -
                  ((C25617 * C1537 + C26384 + C26384 + C25610 * C1545 +
                    C25615 * C870 + C26385 + C26385 + C50911 * C880 +
                    C25613 * C446 + C26386 + C26386 + C50922 * C466) *
                       C50598 * C50800 +
                   (C25679 + C25678 + C25677) * C50598 * C32092) *
                      C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C25613 * C449 + C26031 + C26031 + C50922 * C469 +
                     C25615 * C867 + C26030 + C26030 + C50911 * C877 +
                     C25617 * C1540 + C26029 + C26029 + C25610 * C1548) *
                        C50598 * C50800) *
                       C50662 * C270 -
                   ((C25617 * C4179 + C26592 + C26592 + C25610 * C4185 +
                     C25615 * C1540 + C26591 + C26591 + C50911 * C1548 +
                     C25613 * C867 + C26590 + C26590 + C50922 * C877) *
                        C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50662 * C271 +
                   ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C50598 * C32092 +
                    (C25613 * C1540 + C27507 + C27507 + C50922 * C1548 +
                     C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                     C25617 * C9828 + C27505 + C27505 + C25610 * C9832) *
                        C50598 * C50800) *
                       C50662 * C272) *
                      C273 +
                  (((C25870 + C25869 + C25868) * C50598 * C32092 +
                    (C26611 + C26612 + C26613) * C50598 * C50800) *
                       C50662 * C271 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50662 * C270 -
                   ((C25617 * C9827 + C27502 + C27502 + C25610 * C9831 +
                     C25615 * C4178 + C27503 + C27503 + C50911 * C4184 +
                     C25613 * C1539 + C27504 + C27504 + C50922 * C1547) *
                        C50598 * C50800 +
                    (C25873 + C25872 + C25871) * C50598 * C32092) *
                       C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50662 * C50918 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50662 * C50919 +
                   ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C50598 * C32092 +
                    (C25613 * C1540 + C27507 + C27507 + C50922 * C1548 +
                     C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                     C25617 * C9828 + C27505 + C27505 + C25610 * C9832) *
                        C50598 * C50800) *
                       C50662 * C1306) *
                      C50866 +
                  (((C25870 + C25869 + C25868) * C50598 * C32092 +
                    (C26611 + C26612 + C26613) * C50598 * C50800) *
                       C50662 * C50919 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50662 * C50918 -
                   ((C25617 * C9827 + C27502 + C27502 + C25610 * C9831 +
                     C25615 * C4178 + C27503 + C27503 + C50911 * C4184 +
                     C25613 * C1539 + C27504 + C27504 + C50922 * C1547) *
                        C50598 * C50800 +
                    (C25873 + C25872 + C25871) * C50598 * C32092) *
                       C50662 * C1306) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50875 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50726) *
                      C50918 +
                  (((C45242 + C45243 + C45244) * C50598 * C32092 +
                    (C45653 + C45654 + C45655) * C50598 * C50800) *
                       C50726 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50875) *
                      C50919 +
                  (((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C50598 * C32092 +
                    (C46157 + C46158 + C46159) * C50598 * C50800) *
                       C50875 -
                   ((C25617 * C11661 + C46148 + C46148 + C25610 * C11663 +
                     C25615 * C9330 + C46149 + C46149 + C50911 * C9334 +
                     C25613 * C3678 + C46150 + C46150 + C50922 * C3684) *
                        C50598 * C50800 +
                    (C46159 + C46158 + C46157) * C50598 * C32092) *
                       C50726) *
                      C1306) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C50598 * C32092 +
                   (C44738 + C44739 + C44740) * C50598 * C50800) *
                      C50662 * C1071 -
                  ((C45244 + C45243 + C45242) * C50598 * C50800 +
                   (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                    C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                    C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                       C50598 * C32092) *
                      C50662 * C1072 +
                  ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                    C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                    C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                       C50598 * C32092 +
                   (C25613 * C1540 + C27507 + C27507 + C50922 * C1548 +
                    C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                    C25617 * C9828 + C27505 + C27505 + C25610 * C9832) *
                       C50598 * C50800) *
                      C50662 * C1073 -
                  ((C25617 * C11994 + C45489 + C45489 + C25610 * C11996 +
                    C25615 * C9828 + C45490 + C45490 + C50911 * C9832 +
                    C25613 * C4179 + C45491 + C45491 + C50922 * C4185) *
                       C50598 * C50800 +
                   (C25617 * C9172 + C26861 + C26861 + C25610 * C9176 +
                    C25615 * C3517 + C26862 + C26862 + C50911 * C3523 +
                    C25613 * C1079 + C26863 + C26863 + C50922 * C1087) *
                       C50598 * C32092) *
                      C50662 * C1074) *
                 C50627) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50662 * C1000 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50662 * C50698) *
                      C1002 +
                  (((C25870 + C25869 + C25868) * C50598 * C32092 +
                    (C26611 + C26612 + C26613) * C50598 * C50800) *
                       C50662 * C50698 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50662 * C1000) *
                      C1003 +
                  (((C25676 + C25675 + C25674) * C50598 * C32092 +
                    (C26393 + C26394 + C26395) * C50598 * C50800) *
                       C50662 * C1000 -
                   ((C25617 * C4177 + C26602 + C26602 + C25610 * C4183 +
                     C25615 * C1538 + C26603 + C26603 + C50911 * C1546 +
                     C25613 * C869 + C26604 + C26604 + C50922 * C879) *
                        C50598 * C50800 +
                    (C26231 + C26230 + C26229) * C50598 * C32092) *
                       C50662 * C50698) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C443 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C444 +
                   ((C44743 + C44742 + C44741) * C50598 * C32092 +
                    (C25613 * C1824 + C27903 + C27903 + C50922 * C1832 +
                     C25615 * C4584 + C27902 + C27902 + C50911 * C4590 +
                     C25617 * C10230 + C27901 + C27901 + C25610 * C10234) *
                        C50598 * C50800) *
                       C445) *
                      C1000 +
                  (((C45242 + C45243 + C45244) * C50598 * C32092 +
                    (C45653 + C45654 + C45655) * C50598 * C50800) *
                       C444 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C443 -
                   ((C25617 * C12263 + C45644 + C45644 + C25610 * C12265 +
                     C25615 * C10230 + C45645 + C45645 + C50911 * C10234 +
                     C25613 * C4584 + C45646 + C45646 + C50922 * C4590) *
                        C50598 * C50800 +
                    (C45655 + C45654 + C45653) * C50598 * C32092) *
                       C445) *
                      C50698) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                      C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                      C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                         C50598 * C32092 +
                     (C44738 + C44739 + C44740) * C50598 * C50800) *
                        C50875 -
                    ((C44741 + C44742 + C44743) * C50598 * C50800 +
                     (C44740 + C44739 + C44738) * C50598 * C32092) *
                        C50726) *
                       C1000 +
                   (((C45242 + C45243 + C45244) * C50598 * C32092 +
                     (C45653 + C45654 + C45655) * C50598 * C50800) *
                        C50726 -
                    ((C45244 + C45243 + C45242) * C50598 * C50800 +
                     (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                      C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                      C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                         C50598 * C32092) *
                        C50875) *
                       C50698) *
                      C50866 +
                  ((((C26064 + C26063 + C26062) * C50598 * C32092 +
                     (C26065 + C26066 + C26067) * C50598 * C50800) *
                        C50726 -
                    ((C26062 + C26063 + C26064) * C50598 * C50800 +
                     (C25673 + C25672 + C25671) * C50598 * C32092) *
                        C50875) *
                       C1000 +
                   (((C25870 + C25869 + C25868) * C50598 * C32092 +
                     (C26611 + C26612 + C26613) * C50598 * C50800) *
                        C50875 -
                    ((C25617 * C9329 + C27010 + C27010 + C25610 * C9333 +
                      C25615 * C3677 + C27011 + C27011 + C50911 * C3683 +
                      C25613 * C1192 + C27012 + C27012 + C50922 * C1200) *
                         C50598 * C50800 +
                     (C26613 + C26612 + C26611) * C50598 * C32092) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50662 * C1000 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50662 * C50698) *
                      C1002 +
                  (((C25870 + C25869 + C25868) * C50598 * C32092 +
                    (C26611 + C26612 + C26613) * C50598 * C50800) *
                       C50662 * C50698 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50662 * C1000) *
                      C1003 +
                  (((C25676 + C25675 + C25674) * C50598 * C32092 +
                    (C26393 + C26394 + C26395) * C50598 * C50800) *
                       C50662 * C1000 -
                   ((C25617 * C4177 + C26602 + C26602 + C25610 * C4183 +
                     C25615 * C1538 + C26603 + C26603 + C50911 * C1546 +
                     C25613 * C869 + C26604 + C26604 + C50922 * C879) *
                        C50598 * C50800 +
                    (C26231 + C26230 + C26229) * C50598 * C32092) *
                       C50662 * C50698) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C50598 * C32092 +
                   (C44738 + C44739 + C44740) * C50598 * C50800) *
                      C50662 * C1071 -
                  ((C45244 + C45243 + C45242) * C50598 * C50800 +
                   (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                    C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                    C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                       C50598 * C32092) *
                      C50662 * C1072 +
                  ((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                    C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                    C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                       C50598 * C32092 +
                   (C25613 * C1540 + C27507 + C27507 + C50922 * C1548 +
                    C25615 * C4179 + C27506 + C27506 + C50911 * C4185 +
                    C25617 * C9828 + C27505 + C27505 + C25610 * C9832) *
                       C50598 * C50800) *
                      C50662 * C1073 -
                  ((C25617 * C11994 + C45489 + C45489 + C25610 * C11996 +
                    C25615 * C9828 + C45490 + C45490 + C50911 * C9832 +
                    C25613 * C4179 + C45491 + C45491 + C50922 * C4185) *
                       C50598 * C50800 +
                   (C25617 * C9172 + C26861 + C26861 + C25610 * C9176 +
                    C25615 * C3517 + C26862 + C26862 + C50911 * C3523 +
                    C25613 * C1079 + C26863 + C26863 + C50922 * C1087) *
                       C50598 * C32092) *
                      C50662 * C1074) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                      C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                      C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                         C50598 * C32092 +
                     (C44738 + C44739 + C44740) * C50598 * C50800) *
                        C1651 -
                    ((C44741 + C44742 + C44743) * C50598 * C50800 +
                     (C44740 + C44739 + C44738) * C50598 * C32092) *
                        C50726) *
                       C50874 +
                   (((C45242 + C45243 + C45244) * C50598 * C32092 +
                     (C45653 + C45654 + C45655) * C50598 * C50800) *
                        C50726 -
                    ((C45244 + C45243 + C45242) * C50598 * C50800 +
                     (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                      C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                      C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                         C50598 * C32092) *
                        C1651) *
                       C50698) *
                      C50866 +
                  ((((C26064 + C26063 + C26062) * C50598 * C32092 +
                     (C26065 + C26066 + C26067) * C50598 * C50800) *
                        C50726 -
                    ((C26062 + C26063 + C26064) * C50598 * C50800 +
                     (C25673 + C25672 + C25671) * C50598 * C32092) *
                        C1651) *
                       C50874 +
                   (((C25870 + C25869 + C25868) * C50598 * C32092 +
                     (C26611 + C26612 + C26613) * C50598 * C50800) *
                        C1651 -
                    ((C25617 * C9329 + C27010 + C27010 + C25610 * C9333 +
                      C25615 * C3677 + C27011 + C27011 + C50911 * C3683 +
                      C25613 * C1192 + C27012 + C27012 + C50922 * C1200) *
                         C50598 * C50800 +
                     (C26613 + C26612 + C26611) * C50598 * C32092) *
                        C50726) *
                       C50698) *
                      C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50920 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50921 +
                   ((C44743 + C44742 + C44741) * C50598 * C32092 +
                    (C46565 + C46566 + C46567) * C50598 * C50800) *
                       C2067) *
                      C50874 +
                  (((C45242 + C45243 + C45244) * C50598 * C32092 +
                    (C45653 + C45654 + C45655) * C50598 * C50800) *
                       C50921 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C50920 -
                   ((C25617 * C12263 + C45644 + C45644 + C25610 * C12265 +
                     C25615 * C10230 + C45645 + C45645 + C50911 * C10234 +
                     C25613 * C4584 + C45646 + C45646 + C50922 * C4590) *
                        C50598 * C50800 +
                    (C45655 + C45654 + C45653) * C50598 * C32092) *
                       C2067) *
                      C50698) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C1651 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50726) *
                      C270 +
                  (((C45242 + C45243 + C45244) * C50598 * C32092 +
                    (C45653 + C45654 + C45655) * C50598 * C50800) *
                       C50726 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C1651) *
                      C271 +
                  (((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C50598 * C32092 +
                    (C46157 + C46158 + C46159) * C50598 * C50800) *
                       C1651 -
                   ((C25617 * C11661 + C46148 + C46148 + C25610 * C11663 +
                     C25615 * C9330 + C46149 + C46149 + C50911 * C9334 +
                     C25613 * C3678 + C46150 + C46150 + C50922 * C3684) *
                        C50598 * C50800 +
                    (C46159 + C46158 + C46157) * C50598 * C32092) *
                       C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C1651 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50726) *
                      C50646 * C1002 +
                  (((C26064 + C26063 + C26062) * C50598 * C32092 +
                    (C26065 + C26066 + C26067) * C50598 * C50800) *
                       C50726 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C1651) *
                      C50646 * C1003 +
                  (((C25676 + C25675 + C25674) * C50598 * C32092 +
                    (C26393 + C26394 + C26395) * C50598 * C50800) *
                       C1651 -
                   ((C25617 * C3676 + C26047 + C26047 + C25610 * C3682 +
                     C25615 * C1191 + C26048 + C26048 + C50911 * C1199 +
                     C25613 * C452 + C26049 + C26049 + C50922 * C472) *
                        C50598 * C50800 +
                    (C26395 + C26394 + C26393) * C50598 * C32092) *
                       C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                    C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                    C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                       C50598 * C32092 +
                   (C44738 + C44739 + C44740) * C50598 * C50800) *
                      C1817 -
                  ((C44741 + C44742 + C44743) * C50598 * C50800 +
                   (C44740 + C44739 + C44738) * C50598 * C32092) *
                      C1818 +
                  ((C44743 + C44742 + C44741) * C50598 * C32092 +
                   (C46565 + C46566 + C46567) * C50598 * C50800) *
                      C1819 -
                  ((C25617 * C14822 + C46556 + C46556 + C25610 * C14826 +
                    C25615 * C14823 + C46557 + C46557 + C50911 * C14827 +
                    C25613 * C7320 + C46558 + C46558 + C50922 * C7326) *
                       C50598 * C50800 +
                   (C46567 + C46566 + C46565) * C50598 * C32092) *
                      C1820) *
                 C50646 * C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C50920 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50921 +
                   ((C44743 + C44742 + C44741) * C50598 * C32092 +
                    (C46565 + C46566 + C46567) * C50598 * C50800) *
                       C2067) *
                      C50646 * C50866 +
                  (((C26064 + C26063 + C26062) * C50598 * C32092 +
                    (C26065 + C26066 + C26067) * C50598 * C50800) *
                       C50921 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C50920 -
                   ((C25617 * C10229 + C27898 + C27898 + C25610 * C10233 +
                     C25615 * C4583 + C27899 + C27899 + C50911 * C4589 +
                     C25613 * C1823 + C27900 + C27900 + C50922 * C1831) *
                        C50598 * C50800 +
                    (C26067 + C26066 + C26065) * C50598 * C32092) *
                       C2067) *
                      C50646 * C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C1651 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50726) *
                      C50646 * C1002 +
                  (((C26064 + C26063 + C26062) * C50598 * C32092 +
                    (C26065 + C26066 + C26067) * C50598 * C50800) *
                       C50726 -
                   ((C26062 + C26063 + C26064) * C50598 * C50800 +
                    (C25673 + C25672 + C25671) * C50598 * C32092) *
                       C1651) *
                      C50646 * C1003 +
                  (((C25676 + C25675 + C25674) * C50598 * C32092 +
                    (C26393 + C26394 + C26395) * C50598 * C50800) *
                       C1651 -
                   ((C25617 * C3676 + C26047 + C26047 + C25610 * C3682 +
                     C25615 * C1191 + C26048 + C26048 + C50911 * C1199 +
                     C25613 * C452 + C26049 + C26049 + C50922 * C472) *
                        C50598 * C50800 +
                    (C26395 + C26394 + C26393) * C50598 * C32092) *
                       C50726) *
                      C50646 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25613 * C119 + C25620 + C25620 + C50922 * C133 +
                     C25615 * C278 + C25621 + C25621 + C50911 * C298 +
                     C25617 * C279 + C25622 + C25622 + C25610 * C299) *
                        C50598 * C32092 +
                    (C44738 + C44739 + C44740) * C50598 * C50800) *
                       C1651 -
                   ((C44741 + C44742 + C44743) * C50598 * C50800 +
                    (C44740 + C44739 + C44738) * C50598 * C32092) *
                       C50726) *
                      C270 +
                  (((C45242 + C45243 + C45244) * C50598 * C32092 +
                    (C45653 + C45654 + C45655) * C50598 * C50800) *
                       C50726 -
                   ((C45244 + C45243 + C45242) * C50598 * C50800 +
                    (C25617 * C1079 + C25835 + C25835 + C25610 * C1087 +
                     C25615 * C279 + C25836 + C25836 + C50911 * C299 +
                     C25613 * C278 + C25837 + C25837 + C50922 * C298) *
                        C50598 * C32092) *
                       C1651) *
                      C271 +
                  (((C25613 * C279 + C25838 + C25838 + C50922 * C299 +
                     C25615 * C1079 + C25839 + C25839 + C50911 * C1087 +
                     C25617 * C3517 + C25840 + C25840 + C25610 * C3523) *
                        C50598 * C32092 +
                    (C46157 + C46158 + C46159) * C50598 * C50800) *
                       C1651 -
                   ((C25617 * C11661 + C46148 + C46148 + C25610 * C11663 +
                     C25615 * C9330 + C46149 + C46149 + C50911 * C9334 +
                     C25613 * C3678 + C46150 + C46150 + C50922 * C3684) *
                        C50598 * C50800 +
                    (C46159 + C46158 + C46157) * C50598 * C32092) *
                       C50726) *
                      C272) *
                 C50627) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C50662 * C50874 -
           ((C30156 + C30155) * C50598 * C38264 +
            (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C50662 * C50698) *
              C50916 +
          (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
            (C29619 + C29620) * C50598 * C38264) *
               C50662 * C50698 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50662 * C50874) *
              C50917 +
          ((C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
            (C23193 + C23194) * C50598 * C38264) *
               C50662 * C50874 -
           ((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
             C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                C50598 * C38264 +
            (C23734 + C23733) * C50598 * C50914 + C23341 * C50598 * C50923) *
               C50662 * C50698) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50598 * C50923 +
             (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
                C50875 -
            ((C31348 + C31347) * C50598 * C38264 +
             (C28948 + C28949) * C50598 * C50914 +
             (C28947 + C28946) * C50598 * C50923) *
                C50726) *
               C50874 +
           (((C29617 + C29618) * C50598 * C50923 +
             (C30155 + C30156) * C50598 * C50914 +
             (C22732 * C4584 + C30150 + C30150 + C22727 * C4590 +
              C22734 * C10230 + C30149 + C30149 + C50774 * C10234) *
                 C50598 * C38264) *
                C50726 -
            ((C30156 + C30155) * C50598 * C38264 +
             (C29618 + C29617) * C50598 * C50914 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50598 * C50923) *
                C50875) *
               C50698) *
              C273 +
          (((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
             (C28950 + C28951) * C50598 * C38264) *
                C50726 -
            (C47445 * C38264 + C28928 * C50598 * C50914 +
             (C22782 + C22781) * C50598 * C50923) *
                C50875) *
               C50874 +
           (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
             (C29619 + C29620) * C50598 * C38264) *
                C50875 -
            ((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
              C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                 C50598 * C38264 +
             (C29620 + C29619) * C50598 * C50914 + C29608 * C50598 * C50923) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 +
            (C28949 + C28948) * C50598 * C38264) *
               C50662 * C270 -
           ((C30156 + C30155) * C50598 * C38264 +
            (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C50662 * C271 +
           ((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50598 * C50923 +
            (C30815 + C30816) * C50598 * C50914 +
            (C22732 * C3678 + C30810 + C30810 + C22727 * C3684 +
             C22734 * C9330 + C30809 + C30809 + C50774 * C9334) *
                C50598 * C38264) *
               C50662 * C272) *
              C273 +
          (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
            (C29619 + C29620) * C50598 * C38264) *
               C50662 * C271 -
           (C28923 * C50598 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50662 * C270 -
           ((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
             C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                C50598 * C38264 +
            (C28723 + C28722) * C50598 * C50914 +
            (C22990 + C22989) * C50598 * C50923) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
            C22738 + C22738 + C50774 * C298) *
               C50598 * C50923 +
           (C28946 + C28947) * C50598 * C50914 +
           (C28949 + C28948) * C50598 * C38264) *
              C50662 * C50646 * C113 -
          (C28923 * C50598 * C38264 + C28928 * C50598 * C50914 +
           (C22782 + C22781) * C50598 * C50923) *
              C50662 * C50646 * C114 +
          (C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
           (C23193 + C23194) * C50598 * C38264) *
              C50662 * C50646 * C115 -
          ((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 + C22732 * C453 +
            C23170 + C23170 + C22727 * C473) *
               C50598 * C38264 +
           (C23512 + C23511) * C50598 * C50914 + C22790 * C50598 * C50923) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C443 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C444 +
           (C47446 * C50923 + (C31347 + C31348) * C50598 * C50914 +
            (C22732 * C7320 + C31342 + C31342 + C22727 * C7326 +
             C22734 * C14823 + C31341 + C31341 + C50774 * C14827) *
                C50598 * C38264) *
               C445) *
              C50646 * C273 +
          ((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
            (C28950 + C28951) * C50598 * C38264) *
               C444 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C443 -
           ((C22734 * C16644 + C31339 + C31339 + C50774 * C16646 +
             C22732 * C7319 + C31340 + C31340 + C22727 * C7325) *
                C50598 * C38264 +
            (C28951 + C28950) * C50598 * C50914 + C47445 * C50923) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C50875 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C50726) *
              C50646 * C50916 +
          ((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
            (C28950 + C28951) * C50598 * C38264) *
               C50726 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50875) *
              C50646 * C50917 +
          ((C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
            (C23193 + C23194) * C50598 * C38264) *
               C50875 -
           ((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
             C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                C50598 * C38264 +
            (C23194 + C23193) * C50598 * C50914 + C23500 * C50598 * C50923) *
               C50726) *
              C50646 * C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
            C22738 + C22738 + C50774 * C298) *
               C50598 * C50923 +
           (C28946 + C28947) * C50598 * C50914 +
           (C28949 + C28948) * C50598 * C38264) *
              C50662 * C50646 * C113 -
          (C28923 * C50598 * C38264 + C28928 * C50598 * C50914 +
           (C22782 + C22781) * C50598 * C50923) *
              C50662 * C50646 * C114 +
          (C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
           (C23193 + C23194) * C50598 * C38264) *
              C50662 * C50646 * C115 -
          ((C22734 * C1190 + C23169 + C23169 + C50774 * C1198 + C22732 * C453 +
            C23170 + C23170 + C22727 * C473) *
               C50598 * C38264 +
           (C23512 + C23511) * C50598 * C50914 + C22790 * C50598 * C50923) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 +
            (C28949 + C28948) * C50598 * C38264) *
               C50662 * C270 -
           ((C30156 + C30155) * C50598 * C38264 +
            (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C50662 * C271 +
           ((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50598 * C50923 +
            (C30815 + C30816) * C50598 * C50914 +
            (C22732 * C3678 + C30810 + C30810 + C22727 * C3684 +
             C22734 * C9330 + C30809 + C30809 + C50774 * C9334) *
                C50598 * C38264) *
               C50662 * C272) *
              C273 +
          (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
            (C29619 + C29620) * C50598 * C38264) *
               C50662 * C271 -
           (C28923 * C50598 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50662 * C270 -
           ((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
             C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                C50598 * C38264 +
            (C28723 + C28722) * C50598 * C50914 +
            (C22990 + C22989) * C50598 * C50923) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C50662 * C50918 -
           (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C50662 * C50919 +
           ((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50598 * C50923 +
            (C30815 + C30816) * C50598 * C50914 +
            (C22732 * C3678 + C30810 + C30810 + C22727 * C3684 +
             C22734 * C9330 + C30809 + C30809 + C50774 * C9334) *
                C50598 * C38264) *
               C50662 * C1306) *
              C50866 +
          (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
            (C29619 + C29620) * C50598 * C38264) *
               C50662 * C50919 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50662 * C50918 -
           ((C22734 * C9329 + C30807 + C30807 + C50774 * C9333 +
             C22732 * C3677 + C30808 + C30808 + C22727 * C3683) *
                C50598 * C38264 +
            (C28723 + C28722) * C50598 * C50914 +
            (C22990 + C22989) * C50598 * C50923) *
               C50662 * C1306) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50598 * C50923 +
                    (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
                       C50875 -
                   ((C31348 + C31347) * C50598 * C38264 +
                    (C28948 + C28949) * C50598 * C50914 +
                    (C28947 + C28946) * C50598 * C50923) *
                       C50726) *
                      C50918 +
                  (((C29617 + C29618) * C50598 * C50923 +
                    (C30155 + C30156) * C50598 * C50914 +
                    (C48337 + C48338) * C50598 * C38264) *
                       C50726 -
                   (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50598 * C50923) *
                       C50875) *
                      C50919 +
                  (((C22732 * C279 + C22951 + C22951 + C22727 * C299 +
                     C22734 * C1079 + C22952 + C22952 + C50774 * C1087) *
                        C50598 * C50923 +
                    (C30815 + C30816) * C50598 * C50914 +
                    (C48835 + C48836) * C50598 * C38264) *
                       C50875 -
                   ((C22734 * C12263 + C48829 + C48829 + C50774 * C12265 +
                     C22732 * C10230 + C48830 + C48830 + C22727 * C10234) *
                        C50598 * C38264 +
                    (C48836 + C48835) * C50598 * C50914 +
                    (C30816 + C30815) * C50598 * C50923) *
                       C50726) *
                      C1306) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
            C22738 + C22738 + C50774 * C298) *
               C50598 * C50923 +
           (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
              C50662 * C1071 -
          ((C30156 + C30155) * C50598 * C38264 +
           (C29618 + C29617) * C50598 * C50914 +
           (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
            C22950 + C22950 + C22727 * C298) *
               C50598 * C50923) *
              C50662 * C1072 +
          ((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
            C22952 + C22952 + C50774 * C1087) *
               C50598 * C50923 +
           (C30815 + C30816) * C50598 * C50914 +
           (C22732 * C3678 + C30810 + C30810 + C22727 * C3684 + C22734 * C9330 +
            C30809 + C30809 + C50774 * C9334) *
               C50598 * C38264) *
              C50662 * C1073 -
          ((C22734 * C11661 + C48177 + C48177 + C50774 * C11663 +
            C22732 * C9330 + C48178 + C48178 + C22727 * C9334) *
               C50598 * C38264 +
           (C22734 * C9828 + C29947 + C29947 + C50774 * C9832 + C22732 * C4179 +
            C29948 + C29948 + C22727 * C4185) *
               C50598 * C50914 +
           (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 + C22732 * C1079 +
            C23984 + C23984 + C22727 * C1087) *
               C50598 * C50923) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C50662 * C1000 -
           ((C30156 + C30155) * C50598 * C38264 +
            (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C50662 * C50698) *
              C1002 +
          (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
            (C29619 + C29620) * C50598 * C38264) *
               C50662 * C50698 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50662 * C1000) *
              C1003 +
          ((C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
            (C23193 + C23194) * C50598 * C38264) *
               C50662 * C1000 -
           ((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
             C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                C50598 * C38264 +
            (C23734 + C23733) * C50598 * C50914 + C23341 * C50598 * C50923) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C443 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C444 +
           (C47446 * C50923 + (C31347 + C31348) * C50598 * C50914 +
            (C22732 * C7320 + C31342 + C31342 + C22727 * C7326 +
             C22734 * C14823 + C31341 + C31341 + C50774 * C14827) *
                C50598 * C38264) *
               C445) *
              C1000 +
          (((C29617 + C29618) * C50598 * C50923 +
            (C30155 + C30156) * C50598 * C50914 +
            (C48337 + C48338) * C50598 * C38264) *
               C444 -
           (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C443 -
           ((C22734 * C14822 + C48330 + C48330 + C50774 * C14826 +
             C22732 * C14823 + C48331 + C48331 + C22727 * C14827) *
                C50598 * C38264 +
            (C48338 + C48337) * C50598 * C50914 + C48334 * C50923) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50598 * C50923 +
             (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
                C50875 -
            ((C31348 + C31347) * C50598 * C38264 +
             (C28948 + C28949) * C50598 * C50914 +
             (C28947 + C28946) * C50598 * C50923) *
                C50726) *
               C1000 +
           (((C29617 + C29618) * C50598 * C50923 +
             (C30155 + C30156) * C50598 * C50914 +
             (C48337 + C48338) * C50598 * C38264) *
                C50726 -
            (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50598 * C50923) *
                C50875) *
               C50698) *
              C50866 +
          (((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
             (C28950 + C28951) * C50598 * C38264) *
                C50726 -
            (C47445 * C38264 + C28928 * C50598 * C50914 +
             (C22782 + C22781) * C50598 * C50923) *
                C50875) *
               C1000 +
           (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
             (C29619 + C29620) * C50598 * C38264) *
                C50875 -
            ((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
              C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                 C50598 * C38264 +
             (C29620 + C29619) * C50598 * C50914 + C29608 * C50598 * C50923) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C50662 * C1000 -
           ((C30156 + C30155) * C50598 * C38264 +
            (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C50662 * C50698) *
              C1002 +
          (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
            (C29619 + C29620) * C50598 * C38264) *
               C50662 * C50698 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C50662 * C1000) *
              C1003 +
          ((C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
            (C23193 + C23194) * C50598 * C38264) *
               C50662 * C1000 -
           ((C22734 * C3676 + C24131 + C24131 + C50774 * C3682 +
             C22732 * C1191 + C24132 + C24132 + C22727 * C1199) *
                C50598 * C38264 +
            (C23734 + C23733) * C50598 * C50914 + C23341 * C50598 * C50923) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
            C22738 + C22738 + C50774 * C298) *
               C50598 * C50923 +
           (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
              C50662 * C1071 -
          ((C30156 + C30155) * C50598 * C38264 +
           (C29618 + C29617) * C50598 * C50914 +
           (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
            C22950 + C22950 + C22727 * C298) *
               C50598 * C50923) *
              C50662 * C1072 +
          ((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
            C22952 + C22952 + C50774 * C1087) *
               C50598 * C50923 +
           (C30815 + C30816) * C50598 * C50914 +
           (C22732 * C3678 + C30810 + C30810 + C22727 * C3684 + C22734 * C9330 +
            C30809 + C30809 + C50774 * C9334) *
               C50598 * C38264) *
              C50662 * C1073 -
          ((C22734 * C11661 + C48177 + C48177 + C50774 * C11663 +
            C22732 * C9330 + C48178 + C48178 + C22727 * C9334) *
               C50598 * C38264 +
           (C22734 * C9828 + C29947 + C29947 + C50774 * C9832 + C22732 * C4179 +
            C29948 + C29948 + C22727 * C4185) *
               C50598 * C50914 +
           (C22734 * C3517 + C23983 + C23983 + C50774 * C3523 + C22732 * C1079 +
            C23984 + C23984 + C22727 * C1087) *
               C50598 * C50923) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
              C22738 + C22738 + C50774 * C298) *
                 C50598 * C50923 +
             (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
                C1651 -
            (C49234 * C38264 + (C28948 + C28949) * C50598 * C50914 +
             (C28947 + C28946) * C50598 * C50923) *
                C50726) *
               C50874 +
           (((C29617 + C29618) * C50598 * C50923 +
             (C30155 + C30156) * C50598 * C50914 +
             (C48337 + C48338) * C50598 * C38264) *
                C50726 -
            (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
             (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
              C22950 + C22950 + C22727 * C298) *
                 C50598 * C50923) *
                C1651) *
               C50698) *
              C50866 +
          (((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
             (C28950 + C28951) * C50598 * C38264) *
                C50726 -
            (C47445 * C38264 + C28928 * C50598 * C50914 +
             (C22782 + C22781) * C50598 * C50923) *
                C1651) *
               C50874 +
           (((C22988 + C22987) * C50598 * C50923 + C29603 * C50598 * C50914 +
             (C29619 + C29620) * C50598 * C38264) *
                C1651 -
            ((C22734 * C10229 + C30147 + C30147 + C50774 * C10233 +
              C22732 * C4583 + C30148 + C30148 + C22727 * C4589) *
                 C50598 * C38264 +
             (C29620 + C29619) * C50598 * C50914 + C29608 * C50598 * C50923) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50598 * C50923 +
                    (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
                       C50920 -
                   (C49234 * C38264 + (C28948 + C28949) * C50598 * C50914 +
                    (C28947 + C28946) * C50598 * C50923) *
                       C50921 +
                   (C47446 * C50923 + (C31347 + C31348) * C50598 * C50914 +
                    (C49239 + C49240) * C50598 * C38264) *
                       C2067) *
                      C50874 +
                  (((C29617 + C29618) * C50598 * C50923 +
                    (C30155 + C30156) * C50598 * C50914 +
                    (C48337 + C48338) * C50598 * C38264) *
                       C50921 -
                   (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
                    (C22734 * C279 + C22949 + C22949 + C50774 * C299 +
                     C22732 * C278 + C22950 + C22950 + C22727 * C298) *
                        C50598 * C50923) *
                       C50920 -
                   ((C22734 * C14822 + C48330 + C48330 + C50774 * C14826 +
                     C22732 * C14823 + C48331 + C48331 + C22727 * C14827) *
                        C50598 * C38264 +
                    (C48338 + C48337) * C50598 * C50914 + C48334 * C50923) *
                       C2067) *
                      C50698) *
                 C50627) /
                (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C1651 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C50726) *
              C270 +
          (((C29617 + C29618) * C50598 * C50923 +
            (C30155 + C30156) * C50598 * C50914 +
            (C48337 + C48338) * C50598 * C38264) *
               C50726 -
           (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C1651) *
              C271 +
          (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50598 * C50923 +
            (C30815 + C30816) * C50598 * C50914 +
            (C48835 + C48836) * C50598 * C38264) *
               C1651 -
           ((C22734 * C12263 + C48829 + C48829 + C50774 * C12265 +
             C22732 * C10230 + C48830 + C48830 + C22727 * C10234) *
                C50598 * C38264 +
            (C48836 + C48835) * C50598 * C50914 +
            (C30816 + C30815) * C50598 * C50923) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C1651 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C50726) *
              C50646 * C1002 +
          ((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
            (C28950 + C28951) * C50598 * C38264) *
               C50726 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C1651) *
              C50646 * C1003 +
          ((C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
            (C23193 + C23194) * C50598 * C38264) *
               C1651 -
           ((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
             C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                C50598 * C38264 +
            (C23194 + C23193) * C50598 * C50914 + C23500 * C50598 * C50923) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
            C22738 + C22738 + C50774 * C298) *
               C50598 * C50923 +
           (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
              C1817 -
          (C49234 * C38264 + (C28948 + C28949) * C50598 * C50914 +
           (C28947 + C28946) * C50598 * C50923) *
              C1818 +
          (C47446 * C50923 + (C31347 + C31348) * C50598 * C50914 +
           (C49239 + C49240) * C50598 * C38264) *
              C1819 -
          ((C22734 * C20314 + C49232 + C49232 + C50774 * C20316 +
            C22732 * C17545 + C49233 + C49233 + C22727 * C17549) *
               C50598 * C38264 +
           (C49240 + C49239) * C50598 * C50914 + C49234 * C50923) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 +
                     C22734 * C278 + C22738 + C22738 + C50774 * C298) *
                        C50598 * C50923 +
                    (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
                       C50920 -
                   (C49234 * C38264 + (C28948 + C28949) * C50598 * C50914 +
                    (C28947 + C28946) * C50598 * C50923) *
                       C50921 +
                   (C47446 * C50923 + (C31347 + C31348) * C50598 * C50914 +
                    (C49239 + C49240) * C50598 * C38264) *
                       C2067) *
                      C50646 * C50866 +
                  ((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
                    (C28950 + C28951) * C50598 * C38264) *
                       C50921 -
                   (C47445 * C38264 + C28928 * C50598 * C50914 +
                    (C22782 + C22781) * C50598 * C50923) *
                       C50920 -
                   ((C22734 * C16644 + C31339 + C31339 + C50774 * C16646 +
                     C22732 * C7319 + C31340 + C31340 + C22727 * C7325) *
                        C50598 * C38264 +
                    (C28951 + C28950) * C50598 * C50914 + C47445 * C50923) *
                       C2067) *
                      C50646 * C50633)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C1651 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C50726) *
              C50646 * C1002 +
          ((C28922 * C50598 * C50923 + C28929 * C50598 * C50914 +
            (C28950 + C28951) * C50598 * C38264) *
               C50726 -
           (C47445 * C38264 + C28928 * C50598 * C50914 +
            (C22782 + C22781) * C50598 * C50923) *
               C1651) *
              C50646 * C1003 +
          ((C22789 * C50598 * C50923 + C29340 * C50598 * C50914 +
            (C23193 + C23194) * C50598 * C38264) *
               C1651 -
           ((C22734 * C4582 + C25019 + C25019 + C50774 * C4588 +
             C22732 * C1822 + C25020 + C25020 + C22727 * C1830) *
                C50598 * C38264 +
            (C23194 + C23193) * C50598 * C50914 + C23500 * C50598 * C50923) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22732 * C119 + C22737 + C22737 + C22727 * C133 + C22734 * C278 +
             C22738 + C22738 + C50774 * C298) *
                C50598 * C50923 +
            (C28946 + C28947) * C50598 * C50914 + C47446 * C38264) *
               C1651 -
           ((C31348 + C31347) * C50598 * C38264 +
            (C28948 + C28949) * C50598 * C50914 +
            (C28947 + C28946) * C50598 * C50923) *
               C50726) *
              C270 +
          (((C29617 + C29618) * C50598 * C50923 +
            (C30155 + C30156) * C50598 * C50914 +
            (C48337 + C48338) * C50598 * C38264) *
               C50726 -
           (C48334 * C38264 + (C29618 + C29617) * C50598 * C50914 +
            (C22734 * C279 + C22949 + C22949 + C50774 * C299 + C22732 * C278 +
             C22950 + C22950 + C22727 * C298) *
                C50598 * C50923) *
               C1651) *
              C271 +
          (((C22732 * C279 + C22951 + C22951 + C22727 * C299 + C22734 * C1079 +
             C22952 + C22952 + C50774 * C1087) *
                C50598 * C50923 +
            (C30815 + C30816) * C50598 * C50914 +
            (C48835 + C48836) * C50598 * C38264) *
               C1651 -
           ((C22734 * C12263 + C48829 + C48829 + C50774 * C12265 +
             C22732 * C10230 + C48830 + C48830 + C22727 * C10234) *
                C50598 * C38264 +
            (C48836 + C48835) * C50598 * C50914 +
            (C30816 + C30815) * C50598 * C50923) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C50874 -
                   ((C8182 + C8183 + C8184) * C50603 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50857) *
                       C50788 * C50662 * C50698) *
                      C50916 +
                  (((C8184 + C8183 + C8182) * C50857 +
                    (C8543 + C8544 + C8545) * C50603) *
                       C50788 * C50662 * C50698 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50662 * C50874) *
                      C50917 +
                  (((C7990 + C7989 + C7988) * C50857 +
                    (C7991 + C7992 + C7993) * C50603) *
                       C50788 * C50662 * C50874 -
                   ((C7931 * C1076 + C8534 + C8534 + C7924 * C1084 +
                     C7929 * C282 + C8535 + C8535 + C7923 * C302 +
                     C7927 * C275 + C8536 + C8536 + C7922 * C295) *
                        C50603 +
                    (C8545 + C8544 + C8543) * C50857) *
                       C50788 * C50662 * C50698) *
                      C618)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C50874 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                       C50788 * C50662 * C50698) *
                      C50916 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50788 * C50662 * C50698 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C50662 * C50874) *
                      C50917 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50788 * C50662 * C50874 -
                   ((C117 * C619 + C625 + C625 + C50758 * C621) * C109 +
                    C628 * C108 + C340 * C107 + C341 * C106) *
                       C50788 * C50662 * C50698) *
                      C618)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                     C168 * C50603) *
                        C15430 +
                    (C15731 + C15732) * C15431 + C15745 * C15432) *
                       C50662 * C50874 -
                   ((C6025 * C50603 + C6430 * C50857) * C15432 +
                    (C900 * C50603 + C6024 * C50857) * C15431 +
                    (C342 * C50603 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                        C15430) *
                       C50662 * C50698) *
                      C50916 +
                  (((C342 * C50857 + C341 * C50603) * C15430 +
                    (C900 * C50857 + C901 * C50603) * C15431 +
                    (C6025 * C50857 + C6026 * C50603) * C15432) *
                       C50662 * C50698 -
                   (C15747 * C15432 + (C15740 + C15739) * C15431 +
                    (C169 * C50603 + C168 * C50857) * C15430) *
                       C50662 * C50874) *
                      C50917 +
                  (((C169 * C50857 + C170 * C50603) * C15430 +
                    (C512 * C50857 + C511 * C50603) * C15431 +
                    (C515 * C50857 + C516 * C50603) * C15432) *
                       C50662 * C50874 -
                   (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C50603 +
                     C6026 * C50857) *
                        C15432 +
                    (C902 * C50603 + C901 * C50857) * C15431 +
                    (C340 * C50603 + C341 * C50857) * C15430) *
                       C50662 * C50698) *
                      C618)) /
                    (p * q * std::sqrt(p + q));
    d2ee[91] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50875 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C50874 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C50726 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50875) *
                       C50698) *
                      C273 +
                  ((((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50726 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50875) *
                       C50874 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C8543 + C8544 + C8545) * C50603) *
                        C50788 * C50875 -
                    ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                      C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                      C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                         C50603 +
                     (C8927 + C8926 + C8925) * C50857) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50875 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C50874 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C50726 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50875) *
                       C50698) *
                      C273 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50726 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50875) *
                       C50874 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50788 * C50875 -
                    ((C117 * C871 + C893 + C893 + C50758 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                      C168 * C50603) *
                         C15430 +
                     (C15731 + C15732) * C15431 + C15745 * C15432) *
                        C50875 -
                    ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
                     (C15732 + C15731) * C15430) *
                        C50726) *
                       C50874 +
                   (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
                     ((C117 * C4584 + C6427 + C6427 + C50758 * C4590) * C50857 +
                      C16252 * C50603) *
                         C15432) *
                        C50726 -
                    ((C16243 + C16242) * C15432 + (C16241 + C16240) * C15431 +
                     (C342 * C50603 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                         C15430) *
                        C50875) *
                       C50698) *
                      C273 +
                  ((((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
                     (C15743 + C15744) * C15432) *
                        C50726 -
                    (C15747 * C15432 + (C15740 + C15739) * C15431 +
                     (C169 * C50603 + C168 * C50857) * C15430) *
                        C50875) *
                       C50874 +
                   (((C342 * C50857 + C341 * C50603) * C15430 +
                     (C16246 + C16247) * C15431 + (C16248 + C16249) * C15432) *
                        C50875 -
                    (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50603 +
                      C16252 * C50857) *
                         C15432 +
                     (C16249 + C16248) * C15431 + (C16247 + C16246) * C15430) *
                        C50726) *
                       C50698) *
                      C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[92] += (0.5 * std::pow(Pi, 2.5) *
                     (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                       C168 * C107 + C169 * C108 + C170 * C109) *
                          C50788 * C50662 * C50646 * C113 -
                      (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                          C50788 * C50662 * C50646 * C114 +
                      (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                          C50788 * C50662 * C50646 * C115 -
                      ((C117 * C125 + C157 + C157 + C50758 * C139) * C109 +
                       C172 * C108 + C171 * C107 + C170 * C106) *
                          C50788 * C50662 * C50646 * C116) +
                 0.5 * std::pow(Pi, 2.5) *
                     ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                        C168 * C107 + C169 * C108 + C170 * C109) *
                           C50788 * C50662 * C270 -
                       (C340 * C109 + C341 * C108 + C342 * C107 +
                        (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                           C50788 * C50662 * C271 +
                       ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                        C343 * C107 + C344 * C108 + C345 * C109) *
                           C50788 * C50662 * C272) *
                          C273 +
                      ((C342 * C106 + C341 * C107 + C340 * C108 +
                        (C117 * C283 + C326 + C326 + C50758 * C303) * C109) *
                           C50788 * C50662 * C271 -
                       (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                           C50788 * C50662 * C270 -
                       ((C117 * C284 + C327 + C327 + C50758 * C304) * C109 +
                        C345 * C108 + C344 * C107 + C343 * C106) *
                           C50788 * C50662 * C272) *
                          C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C443 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                       C50788 * C444 +
                   ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                    C514 * C107 + C515 * C108 + C516 * C109) *
                       C50788 * C445) *
                      C50646 * C273 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 +
                    (C117 * C454 + C497 + C497 + C50758 * C474) * C109) *
                       C50788 * C444 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C443 -
                   ((C117 * C455 + C498 + C498 + C50758 * C475) * C109 +
                    C516 * C108 + C515 * C107 + C514 * C106) *
                       C50788 * C445) *
                      C50646 * C50633)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
                    C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 +
                    C7936 + C7924 * C299) *
                       C50857 +
                   (C7985 + C7986 + C7987) * C50603) *
                      C50788 * C50662 * C50646 * C113 -
                  ((C7988 + C7989 + C7990) * C50603 +
                   (C7987 + C7986 + C7985) * C50857) *
                      C50788 * C50662 * C50646 * C114 +
                  ((C7990 + C7989 + C7988) * C50857 +
                   (C7991 + C7992 + C7993) * C50603) *
                      C50788 * C50662 * C50646 * C115 -
                  ((C7931 * C284 + C7964 + C7964 + C7924 * C304 + C7929 * C283 +
                    C7965 + C7965 + C7923 * C303 + C7927 * C123 + C7966 +
                    C7966 + C7922 * C137) *
                       C50603 +
                   (C7993 + C7992 + C7991) * C50857) *
                      C50788 * C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C270 -
                   ((C8182 + C8183 + C8184) * C50603 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50857) *
                       C50788 * C50662 * C271 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50857 +
                    (C8185 + C8186 + C8187) * C50603) *
                       C50788 * C50662 * C272) *
                      C273 +
                  (((C8184 + C8183 + C8182) * C50857 +
                    (C7927 * C276 + C8164 + C8164 + C7922 * C296 +
                     C7929 * C281 + C8165 + C8165 + C7923 * C301 +
                     C7931 * C1077 + C8166 + C8166 + C7924 * C1085) *
                        C50603) *
                       C50788 * C50662 * C271 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50662 * C270 -
                   ((C7931 * C3515 + C8167 + C8167 + C7924 * C3521 +
                     C7929 * C1077 + C8168 + C8168 + C7923 * C1085 +
                     C7927 * C281 + C8169 + C8169 + C7922 * C301) *
                        C50603 +
                    (C8187 + C8186 + C8185) * C50857) *
                       C50788 * C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C443 -
                   ((C8376 + C8377 + C8378) * C50603 +
                    (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                     C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                     C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                        C50857) *
                       C50788 * C444 +
                   ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                     C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                     C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                        C50857 +
                    (C8379 + C8380 + C8381) * C50603) *
                       C50788 * C445) *
                      C50646 * C273 +
                  (((C8378 + C8377 + C8376) * C50857 +
                    (C7927 * C447 + C8358 + C8358 + C7922 * C467 +
                     C7929 * C869 + C8359 + C8359 + C7923 * C879 +
                     C7931 * C1538 + C8360 + C8360 + C7924 * C1546) *
                        C50603) *
                       C50788 * C444 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C443 -
                   ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                     C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                     C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                        C50603 +
                    (C8381 + C8380 + C8379) * C50857) *
                       C50788 * C445) *
                      C50646 * C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                    C168 * C50603) *
                       C15430 +
                   (C5512 * C50857 + C513 * C50603) * C15431 +
                   (C5513 * C50857 + C514 * C50603) * C15432) *
                      C50662 * C50646 * C113 -
                  ((C515 * C50603 + C514 * C50857) * C15432 +
                   (C512 * C50603 + C513 * C50857) * C15431 +
                   (C169 * C50603 + C168 * C50857) * C15430) *
                      C50662 * C50646 * C114 +
                  ((C169 * C50857 + C170 * C50603) * C15430 +
                   (C512 * C50857 + C511 * C50603) * C15431 +
                   (C515 * C50857 + C516 * C50603) * C15432) *
                      C50662 * C50646 * C115 -
                  (((C117 * C455 + C498 + C498 + C50758 * C475) * C50603 +
                    C516 * C50857) *
                       C15432 +
                   (C737 * C50603 + C511 * C50857) * C15431 +
                   (C171 * C50603 + C170 * C50857) * C15430) *
                      C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                     C168 * C50603) *
                        C15430 +
                    (C5512 * C50857 + C513 * C50603) * C15431 +
                    (C5513 * C50857 + C514 * C50603) * C15432) *
                       C50662 * C270 -
                   ((C6025 * C50603 + C6430 * C50857) * C15432 +
                    (C900 * C50603 + C6024 * C50857) * C15431 +
                    (C342 * C50603 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                        C15430) *
                       C50662 * C271 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
                     C343 * C50603) *
                        C15430 +
                    (C6927 * C50857 + C5338 * C50603) * C15431 +
                    ((C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C50857 +
                     C15584 * C50603) *
                        C15432) *
                       C50662 * C272) *
                      C273 +
                  (((C342 * C50857 + C341 * C50603) * C15430 +
                    (C900 * C50857 + C901 * C50603) * C15431 +
                    (C6025 * C50857 + C6026 * C50603) * C15432) *
                       C50662 * C271 -
                   ((C515 * C50603 + C514 * C50857) * C15432 +
                    (C512 * C50603 + C513 * C50857) * C15431 +
                    (C169 * C50603 + C168 * C50857) * C15430) *
                       C50662 * C270 -
                   (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C50603 +
                     C15584 * C50857) *
                        C15432 +
                    (C5339 * C50603 + C5338 * C50857) * C15431 +
                    (C344 * C50603 + C343 * C50857) * C15430) *
                       C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                     C168 * C50603) *
                        C15430 +
                    (C15731 + C15732) * C15431 + C15745 * C15432) *
                       C443 -
                   ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
                    (C15732 + C15731) * C15430) *
                       C444 +
                   (C15745 * C15430 + (C15736 + C15735) * C15431 +
                    ((C117 * C7320 + C7334 + C7334 + C50758 * C7326) * C50857 +
                     C15749 * C50603) *
                        C15432) *
                       C445) *
                      C50646 * C273 +
                  (((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
                    (C15743 + C15744) * C15432) *
                       C444 -
                   (C15747 * C15432 + (C15740 + C15739) * C15431 +
                    (C169 * C50603 + C168 * C50857) * C15430) *
                       C443 -
                   (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50603 +
                     C15749 * C50857) *
                        C15432 +
                    (C15744 + C15743) * C15431 + C15747 * C15430) *
                       C445) *
                      C50646 * C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50875 -
                   ((C8376 + C8377 + C8378) * C50603 +
                    (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                     C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                     C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                        C50857) *
                       C50788 * C50726) *
                      C50646 * C50916 +
                  (((C8378 + C8377 + C8376) * C50857 +
                    (C8707 + C8708 + C8709) * C50603) *
                       C50788 * C50726 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50875) *
                      C50646 * C50917 +
                  (((C7990 + C7989 + C7988) * C50857 +
                    (C7991 + C7992 + C7993) * C50603) *
                       C50788 * C50875 -
                   ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 +
                     C7929 * C870 + C8699 + C8699 + C7923 * C880 +
                     C7927 * C446 + C8700 + C8700 + C7922 * C466) *
                        C50603 +
                    (C8709 + C8708 + C8707) * C50857) *
                       C50788 * C50726) *
                      C50646 * C618)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50875 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                       C50788 * C50726) *
                      C50646 * C50916 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50788 * C50726 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C50875) *
                      C50646 * C50917 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50788 * C50875 -
                   ((C117 * C728 + C734 + C734 + C50758 * C730) * C109 +
                    C737 * C108 + C511 * C107 + C512 * C106) *
                       C50788 * C50726) *
                      C50646 * C618)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                     C168 * C50603) *
                        C15430 +
                    (C15731 + C15732) * C15431 + C15745 * C15432) *
                       C50875 -
                   ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
                    (C15732 + C15731) * C15430) *
                       C50726) *
                      C50646 * C50916 +
                  (((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
                    (C15743 + C15744) * C15432) *
                       C50726 -
                   (C15747 * C15432 + (C15740 + C15739) * C15431 +
                    (C169 * C50603 + C168 * C50857) * C15430) *
                       C50875) *
                      C50646 * C50917 +
                  (((C169 * C50857 + C170 * C50603) * C15430 +
                    (C16042 + C16043) * C15431 + (C16044 + C16045) * C15432) *
                       C50875 -
                   (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50603 +
                     C5515 * C50857) *
                        C15432 +
                    (C16045 + C16044) * C15431 + (C16043 + C16042) * C15430) *
                       C50726) *
                      C50646 * C618)) /
                    (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C270 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                       C50788 * C50662 * C271 +
                   ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50788 * C50662 * C272) *
                      C273 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 +
                    (C117 * C283 + C326 + C326 + C50758 * C303) * C109) *
                       C50788 * C50662 * C271 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C50662 * C270 -
                   ((C117 * C284 + C327 + C327 + C50758 * C304) * C109 +
                    C345 * C108 + C344 * C107 + C343 * C106) *
                       C50788 * C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                   C168 * C107 + C169 * C108 + C170 * C109) *
                      C50788 * C50662 * C50646 * C113 -
                  (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                      C50788 * C50662 * C50646 * C114 +
                  (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                      C50788 * C50662 * C50646 * C115 -
                  ((C117 * C125 + C157 + C157 + C50758 * C139) * C109 +
                   C172 * C108 + C171 * C107 + C170 * C106) *
                      C50788 * C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
                    C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 +
                    C7936 + C7924 * C299) *
                       C50857 +
                   (C7985 + C7986 + C7987) * C50603) *
                      C50788 * C50662 * C50646 * C113 -
                  ((C7988 + C7989 + C7990) * C50603 +
                   (C7987 + C7986 + C7985) * C50857) *
                      C50788 * C50662 * C50646 * C114 +
                  ((C7990 + C7989 + C7988) * C50857 +
                   (C7991 + C7992 + C7993) * C50603) *
                      C50788 * C50662 * C50646 * C115 -
                  ((C7931 * C284 + C7964 + C7964 + C7924 * C304 + C7929 * C283 +
                    C7965 + C7965 + C7923 * C303 + C7927 * C123 + C7966 +
                    C7966 + C7922 * C137) *
                       C50603 +
                   (C7993 + C7992 + C7991) * C50857) *
                      C50788 * C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C270 -
                   ((C8182 + C8183 + C8184) * C50603 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50857) *
                       C50788 * C50662 * C271 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50857 +
                    (C8185 + C8186 + C8187) * C50603) *
                       C50788 * C50662 * C272) *
                      C273 +
                  (((C8184 + C8183 + C8182) * C50857 +
                    (C7927 * C276 + C8164 + C8164 + C7922 * C296 +
                     C7929 * C281 + C8165 + C8165 + C7923 * C301 +
                     C7931 * C1077 + C8166 + C8166 + C7924 * C1085) *
                        C50603) *
                       C50788 * C50662 * C271 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50662 * C270 -
                   ((C7931 * C3515 + C8167 + C8167 + C7924 * C3521 +
                     C7929 * C1077 + C8168 + C8168 + C7923 * C1085 +
                     C7927 * C281 + C8169 + C8169 + C7922 * C301) *
                        C50603 +
                    (C8187 + C8186 + C8185) * C50857) *
                       C50788 * C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                    C168 * C50603) *
                       C15430 +
                   (C5512 * C50857 + C513 * C50603) * C15431 +
                   (C5513 * C50857 + C514 * C50603) * C15432) *
                      C50662 * C50646 * C113 -
                  ((C515 * C50603 + C514 * C50857) * C15432 +
                   (C512 * C50603 + C513 * C50857) * C15431 +
                   (C169 * C50603 + C168 * C50857) * C15430) *
                      C50662 * C50646 * C114 +
                  ((C169 * C50857 + C170 * C50603) * C15430 +
                   (C512 * C50857 + C511 * C50603) * C15431 +
                   (C515 * C50857 + C516 * C50603) * C15432) *
                      C50662 * C50646 * C115 -
                  (((C117 * C455 + C498 + C498 + C50758 * C475) * C50603 +
                    C516 * C50857) *
                       C15432 +
                   (C737 * C50603 + C511 * C50857) * C15431 +
                   (C171 * C50603 + C170 * C50857) * C15430) *
                      C50662 * C50646 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                     C168 * C50603) *
                        C15430 +
                    (C5512 * C50857 + C513 * C50603) * C15431 +
                    (C5513 * C50857 + C514 * C50603) * C15432) *
                       C50662 * C270 -
                   ((C6025 * C50603 + C6430 * C50857) * C15432 +
                    (C900 * C50603 + C6024 * C50857) * C15431 +
                    (C342 * C50603 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                        C15430) *
                       C50662 * C271 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
                     C343 * C50603) *
                        C15430 +
                    (C6927 * C50857 + C5338 * C50603) * C15431 +
                    ((C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C50857 +
                     C15584 * C50603) *
                        C15432) *
                       C50662 * C272) *
                      C273 +
                  (((C342 * C50857 + C341 * C50603) * C15430 +
                    (C900 * C50857 + C901 * C50603) * C15431 +
                    (C6025 * C50857 + C6026 * C50603) * C15432) *
                       C50662 * C271 -
                   ((C515 * C50603 + C514 * C50857) * C15432 +
                    (C512 * C50603 + C513 * C50857) * C15431 +
                    (C169 * C50603 + C168 * C50857) * C15430) *
                       C50662 * C270 -
                   (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C50603 +
                     C15584 * C50857) *
                        C15432 +
                    (C5339 * C50603 + C5338 * C50857) * C15431 +
                    (C344 * C50603 + C343 * C50857) * C15430) *
                       C50662 * C272) *
                      C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C50918 -
                   ((C8182 + C8183 + C8184) * C50603 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50857) *
                       C50788 * C50662 * C50919 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50857 +
                    (C8185 + C8186 + C8187) * C50603) *
                       C50788 * C50662 * C1306) *
                      C50866 +
                  (((C8184 + C8183 + C8182) * C50857 +
                    (C8543 + C8544 + C8545) * C50603) *
                       C50788 * C50662 * C50919 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50662 * C50918 -
                   ((C7931 * C3515 + C8167 + C8167 + C7924 * C3521 +
                     C7929 * C1077 + C8168 + C8168 + C7923 * C1085 +
                     C7927 * C281 + C8169 + C8169 + C7922 * C301) *
                        C50603 +
                    (C8187 + C8186 + C8185) * C50857) *
                       C50788 * C50662 * C1306) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C50918 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                       C50788 * C50662 * C50919 +
                   ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50788 * C50662 * C1306) *
                      C50866 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50788 * C50662 * C50919 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C50662 * C50918 -
                   ((C117 * C284 + C327 + C327 + C50758 * C304) * C109 +
                    C345 * C108 + C344 * C107 + C343 * C106) *
                       C50788 * C50662 * C1306) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                     C168 * C50603) *
                        C15430 +
                    (C15731 + C15732) * C15431 + C15745 * C15432) *
                       C50662 * C50918 -
                   (C16651 * C15432 + (C16241 + C16240) * C15431 +
                    (C342 * C50603 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                        C15430) *
                       C50662 * C50919 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
                     C343 * C50603) *
                        C15430 +
                    (C6927 * C50857 + C5338 * C50603) * C15431 +
                    ((C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C50857 +
                     C15584 * C50603) *
                        C15432) *
                       C50662 * C1306) *
                      C50866 +
                  (((C342 * C50857 + C341 * C50603) * C15430 +
                    (C16246 + C16247) * C15431 + (C16248 + C16249) * C15432) *
                       C50662 * C50919 -
                   (C15747 * C15432 + (C15740 + C15739) * C15431 +
                    (C169 * C50603 + C168 * C50857) * C15430) *
                       C50662 * C50918 -
                   (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C50603 +
                     C15584 * C50857) *
                        C15432 +
                    (C5339 * C50603 + C5338 * C50857) * C15431 +
                    (C344 * C50603 + C343 * C50857) * C15430) *
                       C50662 * C1306) *
                      C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C50875 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C50726) *
              C50918 +
          (((C7927 * C867 + C8904 + C8904 + C7922 * C877 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7931 * C4179 + C8906 + C8906 +
             C7924 * C4185) *
                C50857 +
            (C8925 + C8926 + C8927) * C50603) *
               C50788 * C50726 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C50875) *
              C50919 +
          (((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50857 +
            (C8185 + C8186 + C8187) * C50603) *
               C50788 * C50875 -
           ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 + C7929 * C4178 +
             C9835 + C9835 + C7923 * C4184 + C7927 * C1539 + C9836 + C9836 +
             C7922 * C1547) *
                C50603 +
            (C7931 * C9828 + C9837 + C9837 + C7924 * C9832 + C7929 * C4179 +
             C9838 + C9838 + C7923 * C4185 + C7927 * C1540 + C9839 + C9839 +
             C7922 * C1548) *
                C50857) *
               C50788 * C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50788 * C50875 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
               C50788 * C50726) *
              C50918 +
          (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 + C900 * C107 +
            C901 * C108 + C902 * C109) *
               C50788 * C50726 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
               C50788 * C50875) *
              C50919 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C106 + C343 * C107 +
            C344 * C108 + C345 * C109) *
               C50788 * C50875 -
           ((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C109 +
            (C117 * C1538 + C1551 + C1551 + C50758 * C1546) * C108 +
            (C117 * C1539 + C1552 + C1552 + C50758 * C1547) * C107 +
            (C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C106) *
               C50788 * C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C50875 -
           ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C50726) *
              C50918 +
          (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
            (C16657 + C16650) * C15432) *
               C50726 -
           (C16651 * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C50875) *
              C50919 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
             C343 * C50603) *
                C15430 +
            (C17144 + C17145) * C15431 + (C17154 + C17148) * C15432) *
               C50875 -
           (((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50603 +
             (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50857) *
                C15432 +
            (C17148 + C17154) * C15431 + (C17145 + C17144) * C15430) *
               C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                C168 * C107 + C169 * C108 + C170 * C109) *
                   C50788 * C50662 * C1000 -
               (C340 * C109 + C341 * C108 + C342 * C107 +
                (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                   C50788 * C50662 * C50698) *
                  C1002 +
              ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                   C50788 * C50662 * C50698 -
               (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                   C50788 * C50662 * C1000) *
                  C1003 +
              ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                   C50788 * C50662 * C1000 -
               ((C117 * C619 + C625 + C625 + C50758 * C621) * C109 +
                C628 * C108 + C340 * C107 + C341 * C106) *
                   C50788 * C50662 * C50698) *
                  C1004) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
               C168 * C107 + C169 * C108 + C170 * C109) *
                  C50788 * C50662 * C1071 -
              (C340 * C109 + C341 * C108 + C342 * C107 +
               (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                  C50788 * C50662 * C1072 +
              ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
               C343 * C107 + C344 * C108 + C345 * C109) *
                  C50788 * C50662 * C1073 -
              ((C117 * C1076 + C1089 + C1089 + C50758 * C1084) * C109 +
               (C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C108 +
               (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C107 +
               (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C106) *
                  C50788 * C50662 * C1074) *
             C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50788 * C443 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
               C50788 * C444 +
           ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 + C514 * C107 +
            C515 * C108 + C516 * C109) *
               C50788 * C445) *
              C1000 +
          (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 + C900 * C107 +
            C901 * C108 + C902 * C109) *
               C50788 * C444 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
               C50788 * C443 -
           ((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C109 +
            (C117 * C1191 + C1204 + C1204 + C50758 * C1199) * C108 +
            (C117 * C1192 + C1205 + C1205 + C50758 * C1200) * C107 +
            (C117 * C1193 + C1206 + C1206 + C50758 * C1201) * C106) *
               C50788 * C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C50662 * C1000 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C50662 * C50698) *
              C1002 +
          (((C8184 + C8183 + C8182) * C50857 +
            (C8543 + C8544 + C8545) * C50603) *
               C50788 * C50662 * C50698 -
           ((C7988 + C7989 + C7990) * C50603 +
            (C7987 + C7986 + C7985) * C50857) *
               C50788 * C50662 * C1000) *
              C1003 +
          (((C7990 + C7989 + C7988) * C50857 +
            (C7991 + C7992 + C7993) * C50603) *
               C50788 * C50662 * C1000 -
           ((C7931 * C1076 + C8534 + C8534 + C7924 * C1084 + C7929 * C282 +
             C8535 + C8535 + C7923 * C302 + C7927 * C275 + C8536 + C8536 +
             C7922 * C295) *
                C50603 +
            (C8545 + C8544 + C8543) * C50857) *
               C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50857 +
           (C7985 + C7986 + C7987) * C50603) *
              C50788 * C50662 * C1071 -
          ((C8182 + C8183 + C8184) * C50603 +
           (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
            C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
            C7922 * C298) *
               C50857) *
              C50788 * C50662 * C1072 +
          ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
            C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
            C7924 * C3523) *
               C50857 +
           (C8185 + C8186 + C8187) * C50603) *
              C50788 * C50662 * C1073 -
          ((C7931 * C9171 + C9178 + C9178 + C7924 * C9175 + C7929 * C3516 +
            C9179 + C9179 + C7923 * C3522 + C7927 * C1078 + C9180 + C9180 +
            C7922 * C1086) *
               C50603 +
           (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 + C7929 * C3517 +
            C9182 + C9182 + C7923 * C3523 + C7927 * C1079 + C9183 + C9183 +
            C7922 * C1087) *
               C50857) *
              C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C443 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C444 +
           ((C7927 * C450 + C8346 + C8346 + C7922 * C470 + C7929 * C1193 +
             C8347 + C8347 + C7923 * C1201 + C7931 * C3678 + C8348 + C8348 +
             C7924 * C3684) *
                C50857 +
            (C8379 + C8380 + C8381) * C50603) *
               C50788 * C445) *
              C1000 +
          (((C7927 * C867 + C8904 + C8904 + C7922 * C877 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7931 * C4179 + C8906 + C8906 +
             C7924 * C4185) *
                C50857 +
            (C8925 + C8926 + C8927) * C50603) *
               C50788 * C444 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C443 -
           ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 + C7929 * C3677 +
             C9337 + C9337 + C7923 * C3683 + C7927 * C1192 + C9338 + C9338 +
             C7922 * C1200) *
                C50603 +
            (C7931 * C9330 + C9339 + C9339 + C7924 * C9334 + C7929 * C3678 +
             C9340 + C9340 + C7923 * C3684 + C7927 * C1193 + C9341 + C9341 +
             C7922 * C1201) *
                C50857) *
               C50788 * C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C50662 * C1000 -
           ((C16243 + C16242) * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C50857 + C341 * C50603) * C15430 +
            (C16246 + C16247) * C15431 + (C16248 + C16249) * C15432) *
               C50662 * C50698 -
           (C15747 * C15432 + (C15740 + C15739) * C15431 +
            (C169 * C50603 + C168 * C50857) * C15430) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C50857 + C170 * C50603) * C15430 +
            (C16042 + C16043) * C15431 + (C16044 + C16045) * C15432) *
               C50662 * C1000 -
           (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C50603 +
             C6026 * C50857) *
                C15432 +
            (C902 * C50603 + C901 * C50857) * C15431 +
            (C340 * C50603 + C341 * C50857) * C15430) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
            C168 * C50603) *
               C15430 +
           (C15731 + C15732) * C15431 + C15745 * C15432) *
              C50662 * C1071 -
          ((C16243 + C16242) * C15432 + (C16241 + C16240) * C15431 +
           (C342 * C50603 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
               C15430) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
            C343 * C50603) *
               C15430 +
           (C6927 * C50857 + C5338 * C50603) * C15431 +
           ((C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C50857 +
            C15584 * C50603) *
               C15432) *
              C50662 * C1073 -
          (((C117 * C9329 + C16497 + C16497 + C50758 * C9333) * C50603 +
            (C117 * C9330 + C16498 + C16498 + C50758 * C9334) * C50857) *
               C15432 +
           ((C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C50603 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C50857) *
               C15431 +
           ((C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C50603 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C50857) *
               C15430) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C443 -
           ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C444 +
           (C15745 * C15430 + (C15736 + C15735) * C15431 +
            ((C117 * C7320 + C7334 + C7334 + C50758 * C7326) * C50857 +
             C15749 * C50603) *
                C15432) *
               C445) *
              C1000 +
          (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
            (C16657 + C16650) * C15432) *
               C444 -
           (C16651 * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C443 -
           (((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50603 +
             (C117 * C14823 + C16653 + C16653 + C50758 * C14827) * C50857) *
                C15432 +
            (C16650 + C16657) * C15431 + C16651 * C15430) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[98] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50875 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C1000 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C50726 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50875) *
                       C50698) *
                      C50866 +
                  ((((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50726 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50875) *
                       C1000 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C8543 + C8544 + C8545) * C50603) *
                        C50788 * C50875 -
                    ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                      C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                      C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                         C50603 +
                     (C8927 + C8926 + C8925) * C50857) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50875 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C1000 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C50726 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50875) *
                       C50698) *
                      C50866 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50726 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50875) *
                       C1000 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50788 * C50875 -
                    ((C117 * C871 + C893 + C893 + C50758 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50788 * C50726) *
                       C50698) *
                      C50633)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                      C168 * C50603) *
                         C15430 +
                     (C15731 + C15732) * C15431 + C15745 * C15432) *
                        C50875 -
                    ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
                     (C15732 + C15731) * C15430) *
                        C50726) *
                       C1000 +
                   (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
                     (C16657 + C16650) * C15432) *
                        C50726 -
                    (C16651 * C15432 + (C16241 + C16240) * C15431 +
                     (C342 * C50603 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                         C15430) *
                        C50875) *
                       C50698) *
                      C50866 +
                  ((((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
                     (C15743 + C15744) * C15432) *
                        C50726 -
                    (C15747 * C15432 + (C15740 + C15739) * C15431 +
                     (C169 * C50603 + C168 * C50857) * C15430) *
                        C50875) *
                       C1000 +
                   (((C342 * C50857 + C341 * C50603) * C15430 +
                     (C16246 + C16247) * C15431 + (C16248 + C16249) * C15432) *
                        C50875 -
                    (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50603 +
                      C16252 * C50857) *
                         C15432 +
                     (C16249 + C16248) * C15431 + (C16247 + C16246) * C15430) *
                        C50726) *
                       C50698) *
                      C50633)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
           C169 * C108 + C170 * C109) *
              C50788 * C50662 * C1071 -
          (C340 * C109 + C341 * C108 + C342 * C107 +
           (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
              C50788 * C50662 * C1072 +
          ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 + C343 * C107 +
           C344 * C108 + C345 * C109) *
              C50788 * C50662 * C1073 -
          ((C117 * C1076 + C1089 + C1089 + C50758 * C1084) * C109 +
           (C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C108 +
           (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C107 +
           (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C106) *
              C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50788 * C50662 * C1000 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
               C50788 * C50662 * C50698) *
              C1002 +
          ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) * C50788 *
               C50662 * C50698 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50788 *
               C50662 * C1000) *
              C1003 +
          ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) * C50788 *
               C50662 * C1000 -
           ((C117 * C619 + C625 + C625 + C50758 * C621) * C109 + C628 * C108 +
            C340 * C107 + C341 * C106) *
               C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C50662 * C1000 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C50662 * C50698) *
              C1002 +
          (((C8184 + C8183 + C8182) * C50857 +
            (C8543 + C8544 + C8545) * C50603) *
               C50788 * C50662 * C50698 -
           ((C7988 + C7989 + C7990) * C50603 +
            (C7987 + C7986 + C7985) * C50857) *
               C50788 * C50662 * C1000) *
              C1003 +
          (((C7990 + C7989 + C7988) * C50857 +
            (C7991 + C7992 + C7993) * C50603) *
               C50788 * C50662 * C1000 -
           ((C7931 * C1076 + C8534 + C8534 + C7924 * C1084 + C7929 * C282 +
             C8535 + C8535 + C7923 * C302 + C7927 * C275 + C8536 + C8536 +
             C7922 * C295) *
                C50603 +
            (C8545 + C8544 + C8543) * C50857) *
               C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50857 +
           (C7985 + C7986 + C7987) * C50603) *
              C50788 * C50662 * C1071 -
          ((C8182 + C8183 + C8184) * C50603 +
           (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
            C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
            C7922 * C298) *
               C50857) *
              C50788 * C50662 * C1072 +
          ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
            C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
            C7924 * C3523) *
               C50857 +
           (C8185 + C8186 + C8187) * C50603) *
              C50788 * C50662 * C1073 -
          ((C7931 * C9171 + C9178 + C9178 + C7924 * C9175 + C7929 * C3516 +
            C9179 + C9179 + C7923 * C3522 + C7927 * C1078 + C9180 + C9180 +
            C7922 * C1086) *
               C50603 +
           (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 + C7929 * C3517 +
            C9182 + C9182 + C7923 * C3523 + C7927 * C1079 + C9183 + C9183 +
            C7922 * C1087) *
               C50857) *
              C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C50662 * C1000 -
           ((C16243 + C16242) * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C50857 + C341 * C50603) * C15430 +
            (C16246 + C16247) * C15431 + (C16248 + C16249) * C15432) *
               C50662 * C50698 -
           (C15747 * C15432 + (C15740 + C15739) * C15431 +
            (C169 * C50603 + C168 * C50857) * C15430) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C50857 + C170 * C50603) * C15430 +
            (C16042 + C16043) * C15431 + (C16044 + C16045) * C15432) *
               C50662 * C1000 -
           (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C50603 +
             C6026 * C50857) *
                C15432 +
            (C902 * C50603 + C901 * C50857) * C15431 +
            (C340 * C50603 + C341 * C50857) * C15430) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
            C168 * C50603) *
               C15430 +
           (C15731 + C15732) * C15431 + C15745 * C15432) *
              C50662 * C1071 -
          ((C16243 + C16242) * C15432 + (C16241 + C16240) * C15431 +
           (C342 * C50603 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
               C15430) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
            C343 * C50603) *
               C15430 +
           (C6927 * C50857 + C5338 * C50603) * C15431 +
           ((C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C50857 +
            C15584 * C50603) *
               C15432) *
              C50662 * C1073 -
          (((C117 * C9329 + C16497 + C16497 + C50758 * C9333) * C50603 +
            (C117 * C9330 + C16498 + C16498 + C50758 * C9334) * C50857) *
               C15432 +
           ((C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C50603 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C50857) *
               C15431 +
           ((C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C50603 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C50857) *
               C15430) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
              C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
              C7924 * C299) *
                 C50857 +
             (C7985 + C7986 + C7987) * C50603) *
                C50788 * C1651 -
            ((C8376 + C8377 + C8378) * C50603 +
             (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
              C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
              C7922 * C469) *
                 C50857) *
                C50788 * C50726) *
               C50874 +
           (((C7927 * C867 + C8904 + C8904 + C7922 * C877 + C7929 * C1540 +
              C8905 + C8905 + C7923 * C1548 + C7931 * C4179 + C8906 + C8906 +
              C7924 * C4185) *
                 C50857 +
             (C8925 + C8926 + C8927) * C50603) *
                C50788 * C50726 -
            ((C8182 + C8183 + C8184) * C50603 +
             (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
              C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
              C7922 * C298) *
                 C50857) *
                C50788 * C1651) *
               C50698) *
              C50866 +
          ((((C8378 + C8377 + C8376) * C50857 +
             (C8707 + C8708 + C8709) * C50603) *
                C50788 * C50726 -
            ((C7988 + C7989 + C7990) * C50603 +
             (C7987 + C7986 + C7985) * C50857) *
                C50788 * C1651) *
               C50874 +
           (((C8184 + C8183 + C8182) * C50857 +
             (C8543 + C8544 + C8545) * C50603) *
                C50788 * C1651 -
            ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 + C7929 * C1538 +
              C8917 + C8917 + C7923 * C1546 + C7927 * C869 + C8918 + C8918 +
              C7922 * C879) *
                 C50603 +
             (C8927 + C8926 + C8925) * C50857) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
             C169 * C108 + C170 * C109) *
                C50788 * C1651 -
            (C511 * C109 + C512 * C108 + C513 * C107 +
             (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                C50788 * C50726) *
               C50874 +
           (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 + C900 * C107 +
             C901 * C108 + C902 * C109) *
                C50788 * C50726 -
            (C340 * C109 + C341 * C108 + C342 * C107 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                C50788 * C1651) *
               C50698) *
              C50866 +
          (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) * C50788 *
                C50726 -
            (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50788 *
                C1651) *
               C50874 +
           ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) * C50788 *
                C1651 -
            ((C117 * C871 + C893 + C893 + C50758 * C881) * C109 + C902 * C108 +
             C901 * C107 + C900 * C106) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
              C168 * C50603) *
                 C15430 +
             (C15731 + C15732) * C15431 + C15745 * C15432) *
                C1651 -
            (C17551 * C15432 + (C15734 + C15733) * C15431 +
             (C15732 + C15731) * C15430) *
                C50726) *
               C50874 +
           (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
             (C16657 + C16650) * C15432) *
                C50726 -
            (C16651 * C15432 + (C16241 + C16240) * C15431 +
             (C342 * C50603 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                 C15430) *
                C1651) *
               C50698) *
              C50866 +
          ((((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
             (C15743 + C15744) * C15432) *
                C50726 -
            (C15747 * C15432 + (C15740 + C15739) * C15431 +
             (C169 * C50603 + C168 * C50857) * C15430) *
                C1651) *
               C50874 +
           (((C342 * C50857 + C341 * C50603) * C15430 +
             (C16246 + C16247) * C15431 + (C16248 + C16249) * C15432) *
                C1651 -
            (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50603 +
              C16252 * C50857) *
                 C15432 +
             (C16249 + C16248) * C15431 + (C16247 + C16246) * C15430) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C50920 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C50921 +
           ((C7927 * C450 + C8346 + C8346 + C7922 * C470 + C7929 * C1193 +
             C8347 + C8347 + C7923 * C1201 + C7931 * C3678 + C8348 + C8348 +
             C7924 * C3684) *
                C50857 +
            (C8379 + C8380 + C8381) * C50603) *
               C50788 * C2067) *
              C50874 +
          (((C7927 * C867 + C8904 + C8904 + C7922 * C877 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7931 * C4179 + C8906 + C8906 +
             C7924 * C4185) *
                C50857 +
            (C8925 + C8926 + C8927) * C50603) *
               C50788 * C50921 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C50920 -
           ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 + C7929 * C3677 +
             C9337 + C9337 + C7923 * C3683 + C7927 * C1192 + C9338 + C9338 +
             C7922 * C1200) *
                C50603 +
            (C7931 * C9330 + C9339 + C9339 + C7924 * C9334 + C7929 * C3678 +
             C9340 + C9340 + C7923 * C3684 + C7927 * C1193 + C9341 + C9341 +
             C7922 * C1201) *
                C50857) *
               C50788 * C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50788 * C50920 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
               C50788 * C50921 +
           ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 + C514 * C107 +
            C515 * C108 + C516 * C109) *
               C50788 * C2067) *
              C50874 +
          (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 + C900 * C107 +
            C901 * C108 + C902 * C109) *
               C50788 * C50921 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
               C50788 * C50920 -
           ((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C109 +
            (C117 * C1191 + C1204 + C1204 + C50758 * C1199) * C108 +
            (C117 * C1192 + C1205 + C1205 + C50758 * C1200) * C107 +
            (C117 * C1193 + C1206 + C1206 + C50758 * C1201) * C106) *
               C50788 * C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C50920 -
           (C17551 * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C50921 +
           (C15745 * C15430 + (C15736 + C15735) * C15431 +
            (C17560 + C17554) * C15432) *
               C2067) *
              C50874 +
          (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
            (C16657 + C16650) * C15432) *
               C50921 -
           (C16651 * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C50920 -
           (((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50603 +
             (C117 * C14823 + C16653 + C16653 + C50758 * C14827) * C50857) *
                C15432 +
            (C16650 + C16657) * C15431 + C16651 * C15430) *
               C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                C168 * C107 + C169 * C108 + C170 * C109) *
                   C50788 * C1651 -
               (C511 * C109 + C512 * C108 + C513 * C107 +
                (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                   C50788 * C50726) *
                  C50646 * C1002 +
              ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                   C50788 * C50726 -
               (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                   C50788 * C1651) *
                  C50646 * C1003 +
              ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                   C50788 * C1651 -
               ((C117 * C728 + C734 + C734 + C50758 * C730) * C109 +
                C737 * C108 + C511 * C107 + C512 * C106) *
                   C50788 * C50726) *
                  C50646 * C1004) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                C168 * C107 + C169 * C108 + C170 * C109) *
                   C50788 * C1651 -
               (C511 * C109 + C512 * C108 + C513 * C107 +
                (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                   C50788 * C50726) *
                  C270 +
              (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                C900 * C107 + C901 * C108 + C902 * C109) *
                   C50788 * C50726 -
               (C340 * C109 + C341 * C108 + C342 * C107 +
                (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                   C50788 * C1651) *
                  C271 +
              (((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                C343 * C107 + C344 * C108 + C345 * C109) *
                   C50788 * C1651 -
               ((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C109 +
                (C117 * C1538 + C1551 + C1551 + C50758 * C1546) * C108 +
                (C117 * C1539 + C1552 + C1552 + C50758 * C1547) * C107 +
                (C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C106) *
                   C50788 * C50726) *
                  C272) *
             C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
           C169 * C108 + C170 * C109) *
              C50788 * C1817 -
          (C511 * C109 + C512 * C108 + C513 * C107 +
           (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
              C50788 * C1818 +
          ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 + C514 * C107 +
           C515 * C108 + C516 * C109) *
              C50788 * C1819 -
          ((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C109 +
           (C117 * C1822 + C1835 + C1835 + C50758 * C1830) * C108 +
           (C117 * C1823 + C1836 + C1836 + C50758 * C1831) * C107 +
           (C117 * C1824 + C1837 + C1837 + C50758 * C1832) * C106) *
              C50788 * C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C1651 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C50726) *
              C50646 * C1002 +
          (((C8378 + C8377 + C8376) * C50857 +
            (C8707 + C8708 + C8709) * C50603) *
               C50788 * C50726 -
           ((C7988 + C7989 + C7990) * C50603 +
            (C7987 + C7986 + C7985) * C50857) *
               C50788 * C1651) *
              C50646 * C1003 +
          (((C7990 + C7989 + C7988) * C50857 +
            (C7991 + C7992 + C7993) * C50603) *
               C50788 * C1651 -
           ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 + C7929 * C870 +
             C8699 + C8699 + C7923 * C880 + C7927 * C446 + C8700 + C8700 +
             C7922 * C466) *
                C50603 +
            (C8709 + C8708 + C8707) * C50857) *
               C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C1651 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C50726) *
              C270 +
          (((C7927 * C867 + C8904 + C8904 + C7922 * C877 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7931 * C4179 + C8906 + C8906 +
             C7924 * C4185) *
                C50857 +
            (C8925 + C8926 + C8927) * C50603) *
               C50788 * C50726 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C1651) *
              C271 +
          (((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50857 +
            (C8185 + C8186 + C8187) * C50603) *
               C50788 * C1651 -
           ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 + C7929 * C4178 +
             C9835 + C9835 + C7923 * C4184 + C7927 * C1539 + C9836 + C9836 +
             C7922 * C1547) *
                C50603 +
            (C7931 * C9828 + C9837 + C9837 + C7924 * C9832 + C7929 * C4179 +
             C9838 + C9838 + C7923 * C4185 + C7927 * C1540 + C9839 + C9839 +
             C7922 * C1548) *
                C50857) *
               C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50857 +
           (C7985 + C7986 + C7987) * C50603) *
              C50788 * C1817 -
          ((C8376 + C8377 + C8378) * C50603 +
           (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
            C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
            C7922 * C469) *
               C50857) *
              C50788 * C1818 +
          ((C7927 * C450 + C8346 + C8346 + C7922 * C470 + C7929 * C1193 +
            C8347 + C8347 + C7923 * C1201 + C7931 * C3678 + C8348 + C8348 +
            C7924 * C3684) *
               C50857 +
           (C8379 + C8380 + C8381) * C50603) *
              C50788 * C1819 -
          ((C7931 * C10229 + C10236 + C10236 + C7924 * C10233 + C7929 * C4583 +
            C10237 + C10237 + C7923 * C4589 + C7927 * C1823 + C10238 + C10238 +
            C7922 * C1831) *
               C50603 +
           (C7931 * C10230 + C10239 + C10239 + C7924 * C10234 + C7929 * C4584 +
            C10240 + C10240 + C7923 * C4590 + C7927 * C1824 + C10241 + C10241 +
            C7922 * C1832) *
               C50857) *
              C50788 * C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C1651 -
           ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C50726) *
              C50646 * C1002 +
          (((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
            (C15743 + C15744) * C15432) *
               C50726 -
           (C15747 * C15432 + (C15740 + C15739) * C15431 +
            (C169 * C50603 + C168 * C50857) * C15430) *
               C1651) *
              C50646 * C1003 +
          (((C169 * C50857 + C170 * C50603) * C15430 +
            (C16042 + C16043) * C15431 + (C16044 + C16045) * C15432) *
               C1651 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50603 +
             C5515 * C50857) *
                C15432 +
            (C16045 + C16044) * C15431 + (C16043 + C16042) * C15430) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C1651 -
           ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C50726) *
              C270 +
          (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
            (C16657 + C16650) * C15432) *
               C50726 -
           (C16651 * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
             C343 * C50603) *
                C15430 +
            (C17144 + C17145) * C15431 + (C17154 + C17148) * C15432) *
               C1651 -
           (((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50603 +
             (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50857) *
                C15432 +
            (C17148 + C17154) * C15431 + (C17145 + C17144) * C15430) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
            C168 * C50603) *
               C15430 +
           (C15731 + C15732) * C15431 + C15745 * C15432) *
              C1817 -
          (C17551 * C15432 + (C15734 + C15733) * C15431 +
           (C15732 + C15731) * C15430) *
              C1818 +
          (C15745 * C15430 + (C15736 + C15735) * C15431 +
           (C17560 + C17554) * C15432) *
              C1819 -
          (((C117 * C17544 + C17555 + C17555 + C50758 * C17548) * C50603 +
            (C117 * C17545 + C17556 + C17556 + C50758 * C17549) * C50857) *
               C15432 +
           (C17554 + C17560) * C15431 + C17551 * C15430) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[103] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50920 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50921 +
                    ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                      C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                      C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                         C50857 +
                     (C8379 + C8380 + C8381) * C50603) *
                        C50788 * C2067) *
                       C50646 * C50866 +
                   (((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50921 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50920 -
                    ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                      C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                      C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                         C50603 +
                     (C8381 + C8380 + C8379) * C50857) *
                        C50788 * C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50920 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50921 +
                    ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                     C514 * C107 + C515 * C108 + C516 * C109) *
                        C50788 * C2067) *
                       C50646 * C50866 +
                   ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50921 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50920 -
                    ((C117 * C455 + C498 + C498 + C50758 * C475) * C109 +
                     C516 * C108 + C515 * C107 + C514 * C106) *
                        C50788 * C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
                      C168 * C50603) *
                         C15430 +
                     (C15731 + C15732) * C15431 + C15745 * C15432) *
                        C50920 -
                    (C17551 * C15432 + (C15734 + C15733) * C15431 +
                     (C15732 + C15731) * C15430) *
                        C50921 +
                    (C15745 * C15430 + (C15736 + C15735) * C15431 +
                     (C17560 + C17554) * C15432) *
                        C2067) *
                       C50646 * C50866 +
                   (((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
                     (C15743 + C15744) * C15432) *
                        C50921 -
                    (C15747 * C15432 + (C15740 + C15739) * C15431 +
                     (C169 * C50603 + C168 * C50857) * C15430) *
                        C50920 -
                    (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50603 +
                      C15749 * C50857) *
                         C15432 +
                     (C15744 + C15743) * C15431 + C15747 * C15430) *
                        C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50788 * C1651 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
               C50788 * C50726) *
              C270 +
          (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 + C900 * C107 +
            C901 * C108 + C902 * C109) *
               C50788 * C50726 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
               C50788 * C1651) *
              C271 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C106 + C343 * C107 +
            C344 * C108 + C345 * C109) *
               C50788 * C1651 -
           ((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C109 +
            (C117 * C1538 + C1551 + C1551 + C50758 * C1546) * C108 +
            (C117 * C1539 + C1552 + C1552 + C50758 * C1547) * C107 +
            (C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C106) *
               C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50788 * C1651 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
               C50788 * C50726) *
              C50646 * C1002 +
          ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) * C50788 *
               C50726 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50788 *
               C1651) *
              C50646 * C1003 +
          ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) * C50788 *
               C1651 -
           ((C117 * C728 + C734 + C734 + C50758 * C730) * C109 + C737 * C108 +
            C511 * C107 + C512 * C106) *
               C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C1651 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C50726) *
              C50646 * C1002 +
          (((C8378 + C8377 + C8376) * C50857 +
            (C8707 + C8708 + C8709) * C50603) *
               C50788 * C50726 -
           ((C7988 + C7989 + C7990) * C50603 +
            (C7987 + C7986 + C7985) * C50857) *
               C50788 * C1651) *
              C50646 * C1003 +
          (((C7990 + C7989 + C7988) * C50857 +
            (C7991 + C7992 + C7993) * C50603) *
               C50788 * C1651 -
           ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 + C7929 * C870 +
             C8699 + C8699 + C7923 * C880 + C7927 * C446 + C8700 + C8700 +
             C7922 * C466) *
                C50603 +
            (C8709 + C8708 + C8707) * C50857) *
               C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50857 +
            (C7985 + C7986 + C7987) * C50603) *
               C50788 * C1651 -
           ((C8376 + C8377 + C8378) * C50603 +
            (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7927 * C449 + C8345 + C8345 +
             C7922 * C469) *
                C50857) *
               C50788 * C50726) *
              C270 +
          (((C7927 * C867 + C8904 + C8904 + C7922 * C877 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7931 * C4179 + C8906 + C8906 +
             C7924 * C4185) *
                C50857 +
            (C8925 + C8926 + C8927) * C50603) *
               C50788 * C50726 -
           ((C8182 + C8183 + C8184) * C50603 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50857) *
               C50788 * C1651) *
              C271 +
          (((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50857 +
            (C8185 + C8186 + C8187) * C50603) *
               C50788 * C1651 -
           ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 + C7929 * C4178 +
             C9835 + C9835 + C7923 * C4184 + C7927 * C1539 + C9836 + C9836 +
             C7922 * C1547) *
                C50603 +
            (C7931 * C9828 + C9837 + C9837 + C7924 * C9832 + C7929 * C4179 +
             C9838 + C9838 + C7923 * C4185 + C7927 * C1540 + C9839 + C9839 +
             C7922 * C1548) *
                C50857) *
               C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C1651 -
           ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C50726) *
              C50646 * C1002 +
          (((C15739 + C15740) * C15430 + (C15741 + C15742) * C15431 +
            (C15743 + C15744) * C15432) *
               C50726 -
           (C15747 * C15432 + (C15740 + C15739) * C15431 +
            (C169 * C50603 + C168 * C50857) * C15430) *
               C1651) *
              C50646 * C1003 +
          (((C169 * C50857 + C170 * C50603) * C15430 +
            (C16042 + C16043) * C15431 + (C16044 + C16045) * C15432) *
               C1651 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50603 +
             C5515 * C50857) *
                C15432 +
            (C16045 + C16044) * C15431 + (C16043 + C16042) * C15430) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50857 +
             C168 * C50603) *
                C15430 +
            (C15731 + C15732) * C15431 + C15745 * C15432) *
               C1651 -
           ((C15735 + C15736) * C15432 + (C15734 + C15733) * C15431 +
            (C15732 + C15731) * C15430) *
               C50726) *
              C270 +
          (((C16240 + C16241) * C15430 + (C16242 + C16243) * C15431 +
            (C16657 + C16650) * C15432) *
               C50726 -
           (C16651 * C15432 + (C16241 + C16240) * C15431 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50857) *
                C15430) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C50857 +
             C343 * C50603) *
                C15430 +
            (C17144 + C17145) * C15431 + (C17154 + C17148) * C15432) *
               C1651 -
           (((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50603 +
             (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50857) *
                C15432 +
            (C17148 + C17154) * C15431 + (C17145 + C17144) * C15430) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C50874 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50698) *
              C50916 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50698 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C50874) *
              C50917 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50662 * C50874 -
           (C10804 * C3515 + C11149 + C11149 + C10796 * C3521 + C10802 * C1077 +
            C11150 + C11150 + C10795 * C1085 + C10800 * C281 + C11151 + C11151 +
            C10794 * C301 + C10798 * C276 + C11152 + C11152 + C10793 * C296) *
               C50598 * C50788 * C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C50874 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50698) *
              C50916 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50698 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C50874) *
              C50917 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50662 * C50874 -
           ((C2271 * C284 + C2883 + C2883 + C50774 * C304 + C2269 * C283 +
             C2884 + C2884 + C50884 * C303) *
                C2268 +
            (C2890 + C2889) * C2267 + C2878 * C2266) *
               C50788 * C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50662 * C50874 -
           ((C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C50598 * C15432 +
            (C2271 * C1540 + C3245 + C3245 + C50774 * C1548 + C2269 * C867 +
             C3244 + C3244 + C50884 * C877) *
                C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50662 * C50698) *
              C50916 +
          (((C2525 + C2524) * C50598 * C15430 +
            (C3268 + C3269) * C50598 * C15431 +
            (C2269 * C1192 + C3689 + C3689 + C50884 * C1200 + C2271 * C3677 +
             C3688 + C3688 + C50774 * C3683) *
                C50598 * C15432) *
               C50662 * C50698 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50662 * C50874) *
              C50917 +
          ((C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
            (C2730 + C2731) * C50598 * C15432) *
               C50662 * C50874 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C50598 * C15432 +
            (C3271 + C3270) * C50598 * C15431 + C2878 * C50598 * C15430) *
               C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
             C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
             C10795 * C299 + C10804 * C1079 + C10810 + C10810 +
             C10796 * C1087) *
                C50598 * C50788 * C50875 -
            (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 +
             C10802 * C1540 + C11036 + C11036 + C10795 * C1548 + C10800 * C867 +
             C11037 + C11037 + C10794 * C877 + C10798 * C449 + C11038 + C11038 +
             C10793 * C469) *
                C50598 * C50788 * C50726) *
               C50874 +
           ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
             C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
             C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
             C10796 * C9832) *
                C50598 * C50788 * C50726 -
            (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 +
             C10802 * C1079 + C10922 + C10922 + C10795 * C1087 + C10800 * C279 +
             C10923 + C10923 + C10794 * C299 + C10798 * C278 + C10924 + C10924 +
             C10793 * C298) *
                C50598 * C50788 * C50875) *
               C50698) *
              C273 +
          (((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
             C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 +
             C11045 + C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
             C10796 * C4184) *
                C50598 * C50788 * C50726 -
            (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
             C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
             C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
                C50598 * C50788 * C50875) *
               C50874 +
           ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
             C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 +
             C10931 + C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
             C10796 * C3522) *
                C50598 * C50788 * C50875 -
            (C10804 * C9827 + C11389 + C11389 + C10796 * C9831 +
             C10802 * C4178 + C11390 + C11390 + C10795 * C4184 +
             C10800 * C1539 + C11391 + C11391 + C10794 * C1547 + C10798 * C868 +
             C11392 + C11392 + C10793 * C878) *
                C50598 * C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C2266 +
             (C2318 + C2319) * C2267 + C2326 * C2268) *
                C50788 * C50875 -
            (C3037 * C2268 + (C2726 + C2727) * C2267 +
             (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
              C2689 + C2689 + C50884 * C469) *
                 C2266) *
                C50788 * C50726) *
               C50874 +
           (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
              C3245 + C3245 + C50774 * C1548) *
                 C2266 +
             (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                C50788 * C50726 -
            (C2878 * C2268 + (C2524 + C2525) * C2267 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C2266) *
                C50788 * C50875) *
               C50698) *
              C273 +
          ((((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
             (C3048 + C3049) * C2268) *
                C50788 * C50726 -
            (C2327 * C2268 + (C2321 + C2320) * C2267 +
             (C2319 + C2318) * C2266) *
                C50788 * C50875) *
               C50874 +
           (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
             (C2889 + C2890) * C2268) *
                C50788 * C50875 -
            ((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C2268 +
             (C3271 + C3270) * C2267 + (C3269 + C3268) * C2266) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C50598 * C15430 +
             (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
                C50875 -
            ((C18483 + C18484) * C50598 * C15432 +
             (C18482 + C18481) * C50598 * C15431 +
             (C18480 + C18479) * C50598 * C15430) *
                C50726) *
               C50874 +
           (((C19003 + C19004) * C50598 * C15430 +
             (C19005 + C19006) * C50598 * C15431 +
             (C2269 * C4584 + C18983 + C18983 + C50884 * C4590 +
              C2271 * C10230 + C18984 + C18984 + C50774 * C10234) *
                 C50598 * C15432) *
                C50726 -
            ((C19006 + C19005) * C50598 * C15432 +
             (C19004 + C19003) * C50598 * C15431 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C50598 * C15430) *
                C50875) *
               C50698) *
              C273 +
          ((((C2727 + C2726) * C50598 * C15430 +
             (C2728 + C2729) * C50598 * C15431 +
             (C18485 + C18486) * C50598 * C15432) *
                C50726 -
            (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
             (C2319 + C2318) * C50598 * C15430) *
                C50875) *
               C50874 +
           (((C2525 + C2524) * C50598 * C15430 +
             (C3268 + C3269) * C50598 * C15431 +
             (C19007 + C19008) * C50598 * C15432) *
                C50875 -
            ((C2271 * C10229 + C18989 + C18989 + C50774 * C10233 +
              C2269 * C4583 + C18990 + C18990 + C50884 * C4589) *
                 C50598 * C15432 +
             (C19008 + C19007) * C50598 * C15431 +
             (C3269 + C3268) * C50598 * C15430) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
                C2275 + C2275 + C50774 * C298) *
                   C2266 +
               (C2318 + C2319) * C2267 + C2326 * C2268) *
                  C50788 * C50662 * C50646 * C113 -
              (C2327 * C2268 + (C2321 + C2320) * C2267 +
               (C2319 + C2318) * C2266) *
                  C50788 * C50662 * C50646 * C114 +
              (C2326 * C2266 + (C2323 + C2322) * C2267 +
               (C2324 + C2325) * C2268) *
                  C50788 * C50662 * C50646 * C115 -
              ((C2271 * C619 + C2300 + C2300 + C50774 * C621 + C2269 * C124 +
                C2301 + C2301 + C50884 * C138) *
                   C2268 +
               (C2325 + C2324) * C2267 + C2327 * C2266) *
                  C50788 * C50662 * C50646 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
                 C2275 + C2275 + C50774 * C298) *
                    C2266 +
                (C2318 + C2319) * C2267 + C2326 * C2268) *
                   C50788 * C50662 * C270 -
               ((C2522 + C2523) * C2268 + (C2524 + C2525) * C2267 +
                (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
                 C2487 + C2487 + C50884 * C298) *
                    C2266) *
                   C50788 * C50662 * C271 +
               ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
                 C2489 + C2489 + C50774 * C1087) *
                    C2266 +
                (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
                   C50788 * C50662 * C272) *
                  C273 +
              (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
                (C2269 * C275 + C2502 + C2502 + C50884 * C295 + C2271 * C282 +
                 C2503 + C2503 + C50774 * C302) *
                    C2268) *
                   C50788 * C50662 * C271 -
               (C2327 * C2268 + (C2321 + C2320) * C2267 +
                (C2319 + C2318) * C2266) *
                   C50788 * C50662 * C270 -
               ((C2271 * C1076 + C2504 + C2504 + C50774 * C1084 + C2269 * C282 +
                 C2505 + C2505 + C50884 * C302) *
                    C2268 +
                (C2529 + C2528) * C2267 + (C2527 + C2526) * C2266) *
                   C50788 * C50662 * C272) *
                  C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C443 -
           ((C2724 + C2725) * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C444 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C445) *
              C50646 * C273 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C2269 * C446 + C2704 + C2704 + C50884 * C466 + C2271 * C870 +
             C2705 + C2705 + C50774 * C880) *
                C2268) *
               C50788 * C444 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C443 -
           ((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
             C2707 + C2707 + C50884 * C473) *
                C2268 +
            (C2731 + C2730) * C2267 + (C2729 + C2728) * C2266) *
               C50788 * C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C50646 * C113 -
          (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
           C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
           C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
              C50598 * C50788 * C50662 * C50646 * C114 +
          (C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
           C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
           C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
              C50598 * C50788 * C50662 * C50646 * C115 -
          (C10804 * C1076 + C10819 + C10819 + C10796 * C1084 + C10802 * C282 +
           C10820 + C10820 + C10795 * C302 + C10800 * C275 + C10821 + C10821 +
           C10794 * C295 + C10798 * C122 + C10822 + C10822 + C10793 * C136) *
              C50598 * C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C271 +
           (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50662 * C272) *
              C273 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C271 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C9171 + C10933 + C10933 + C10796 * C9175 + C10802 * C3516 +
            C10934 + C10934 + C10795 * C3522 + C10800 * C1078 + C10935 +
            C10935 + C10794 * C1086 + C10798 * C280 + C10936 + C10936 +
            C10793 * C300) *
               C50598 * C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C443 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C444 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C445) *
              C50646 * C273 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C444 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C443 -
           (C10804 * C9329 + C11047 + C11047 + C10796 * C9333 + C10802 * C3677 +
            C11048 + C11048 + C10795 * C3683 + C10800 * C1192 + C11049 +
            C11049 + C10794 * C1200 + C10798 * C451 + C11050 + C11050 +
            C10793 * C471) *
               C50598 * C50788 * C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C50598 * C15430 +
           (C2269 * C449 + C2689 + C2689 + C50884 * C469 + C2271 * C867 +
            C2688 + C2688 + C50774 * C877) *
               C50598 * C15431 +
           (C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
            C2691 + C2691 + C50774 * C1201) *
               C50598 * C15432) *
              C50662 * C50646 * C113 -
          ((C2729 + C2728) * C50598 * C15432 +
           (C2726 + C2727) * C50598 * C15431 +
           (C2319 + C2318) * C50598 * C15430) *
              C50662 * C50646 * C114 +
          (C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
           (C2730 + C2731) * C50598 * C15432) *
              C50662 * C50646 * C115 -
          ((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
            C2707 + C2707 + C50884 * C473) *
               C50598 * C15432 +
           (C3049 + C3048) * C50598 * C15431 + C2327 * C50598 * C15430) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C2269 * C449 + C2689 + C2689 + C50884 * C469 + C2271 * C867 +
             C2688 + C2688 + C50774 * C877) *
                C50598 * C15431 +
            (C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C50598 * C15432) *
               C50662 * C270 -
           ((C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C50598 * C15432 +
            (C2271 * C1540 + C3245 + C3245 + C50774 * C1548 + C2269 * C867 +
             C3244 + C3244 + C50884 * C877) *
                C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50662 * C271 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C50598 * C15430 +
            (C2269 * C1540 + C4192 + C4192 + C50884 * C1548 + C2271 * C4179 +
             C4191 + C4191 + C50774 * C4185) *
                C50598 * C15431 +
            (C2269 * C3678 + C18291 + C18291 + C50884 * C3684 + C2271 * C9330 +
             C18292 + C18292 + C50774 * C9334) *
                C50598 * C15432) *
               C50662 * C272) *
              C273 +
          (((C2525 + C2524) * C50598 * C15430 +
            (C3268 + C3269) * C50598 * C15431 +
            (C2269 * C1192 + C3689 + C3689 + C50884 * C1200 + C2271 * C3677 +
             C3688 + C3688 + C50774 * C3683) *
                C50598 * C15432) *
               C50662 * C271 -
           ((C2729 + C2728) * C50598 * C15432 +
            (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50662 * C270 -
           ((C2271 * C9329 + C18293 + C18293 + C50774 * C9333 + C2269 * C3677 +
             C18294 + C18294 + C50884 * C3683) *
                C50598 * C15432 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C50598 * C15431 +
            (C2527 + C2526) * C50598 * C15430) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C443 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C444 +
           (C18488 * C15430 + (C18484 + C18483) * C50598 * C15431 +
            (C2269 * C7320 + C18453 + C18453 + C50884 * C7326 + C2271 * C14823 +
             C18454 + C18454 + C50774 * C14827) *
                C50598 * C15432) *
               C445) *
              C50646 * C273 +
          (((C2727 + C2726) * C50598 * C15430 +
            (C2728 + C2729) * C50598 * C15431 +
            (C18485 + C18486) * C50598 * C15432) *
               C444 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C443 -
           ((C2271 * C16644 + C18460 + C18460 + C50774 * C16646 +
             C2269 * C7319 + C18461 + C18461 + C50884 * C7325) *
                C50598 * C15432 +
            (C18486 + C18485) * C50598 * C15431 + C18470 * C15430) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50875 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50646 * C50916 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50726 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50875) *
              C50646 * C50917 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50875 -
           (C10804 * C4177 + C11251 + C11251 + C10796 * C4183 + C10802 * C1538 +
            C11252 + C11252 + C10795 * C1546 + C10800 * C869 + C11253 + C11253 +
            C10794 * C879 + C10798 * C447 + C11254 + C11254 + C10793 * C467) *
               C50598 * C50788 * C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50875 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50646 * C50916 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50726 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50875) *
              C50646 * C50917 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50875 -
           ((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C2268 +
            (C3049 + C3048) * C2267 + C3037 * C2266) *
               C50788 * C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50875 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50726) *
              C50646 * C50916 +
          (((C2727 + C2726) * C50598 * C15430 +
            (C2728 + C2729) * C50598 * C15431 +
            (C18485 + C18486) * C50598 * C15432) *
               C50726 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50875) *
              C50646 * C50917 +
          ((C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
            (C2730 + C2731) * C50598 * C15432) *
               C50875 -
           ((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
             C4593 + C4593 + C50884 * C1830) *
                C50598 * C15432 +
            (C2731 + C2730) * C50598 * C15431 + C3037 * C50598 * C15430) *
               C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C270 -
           ((C2522 + C2523) * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C271 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50662 * C272) *
              C273 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2269 * C275 + C2502 + C2502 + C50884 * C295 + C2271 * C282 +
             C2503 + C2503 + C50774 * C302) *
                C2268) *
               C50788 * C50662 * C271 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C270 -
           ((C2271 * C1076 + C2504 + C2504 + C50774 * C1084 + C2269 * C282 +
             C2505 + C2505 + C50884 * C302) *
                C2268 +
            (C2529 + C2528) * C2267 + (C2527 + C2526) * C2266) *
               C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C50662 * C50646 * C113 -
          (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
              C50788 * C50662 * C50646 * C114 +
          (C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
              C50788 * C50662 * C50646 * C115 -
          ((C2271 * C619 + C2300 + C2300 + C50774 * C621 + C2269 * C124 +
            C2301 + C2301 + C50884 * C138) *
               C2268 +
           (C2325 + C2324) * C2267 + C2327 * C2266) *
              C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C50646 * C113 -
          (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
           C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
           C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
              C50598 * C50788 * C50662 * C50646 * C114 +
          (C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
           C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
           C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
              C50598 * C50788 * C50662 * C50646 * C115 -
          (C10804 * C1076 + C10819 + C10819 + C10796 * C1084 + C10802 * C282 +
           C10820 + C10820 + C10795 * C302 + C10800 * C275 + C10821 + C10821 +
           C10794 * C295 + C10798 * C122 + C10822 + C10822 + C10793 * C136) *
              C50598 * C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C271 +
           (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50662 * C272) *
              C273 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C271 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C9171 + C10933 + C10933 + C10796 * C9175 + C10802 * C3516 +
            C10934 + C10934 + C10795 * C3522 + C10800 * C1078 + C10935 +
            C10935 + C10794 * C1086 + C10798 * C280 + C10936 + C10936 +
            C10793 * C300) *
               C50598 * C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C50598 * C15430 +
           (C2269 * C449 + C2689 + C2689 + C50884 * C469 + C2271 * C867 +
            C2688 + C2688 + C50774 * C877) *
               C50598 * C15431 +
           (C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
            C2691 + C2691 + C50774 * C1201) *
               C50598 * C15432) *
              C50662 * C50646 * C113 -
          ((C2729 + C2728) * C50598 * C15432 +
           (C2726 + C2727) * C50598 * C15431 +
           (C2319 + C2318) * C50598 * C15430) *
              C50662 * C50646 * C114 +
          (C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
           (C2730 + C2731) * C50598 * C15432) *
              C50662 * C50646 * C115 -
          ((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
            C2707 + C2707 + C50884 * C473) *
               C50598 * C15432 +
           (C3049 + C3048) * C50598 * C15431 + C2327 * C50598 * C15430) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C2269 * C449 + C2689 + C2689 + C50884 * C469 + C2271 * C867 +
             C2688 + C2688 + C50774 * C877) *
                C50598 * C15431 +
            (C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C50598 * C15432) *
               C50662 * C270 -
           ((C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C50598 * C15432 +
            (C2271 * C1540 + C3245 + C3245 + C50774 * C1548 + C2269 * C867 +
             C3244 + C3244 + C50884 * C877) *
                C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50662 * C271 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C50598 * C15430 +
            (C2269 * C1540 + C4192 + C4192 + C50884 * C1548 + C2271 * C4179 +
             C4191 + C4191 + C50774 * C4185) *
                C50598 * C15431 +
            (C2269 * C3678 + C18291 + C18291 + C50884 * C3684 + C2271 * C9330 +
             C18292 + C18292 + C50774 * C9334) *
                C50598 * C15432) *
               C50662 * C272) *
              C273 +
          (((C2525 + C2524) * C50598 * C15430 +
            (C3268 + C3269) * C50598 * C15431 +
            (C2269 * C1192 + C3689 + C3689 + C50884 * C1200 + C2271 * C3677 +
             C3688 + C3688 + C50774 * C3683) *
                C50598 * C15432) *
               C50662 * C271 -
           ((C2729 + C2728) * C50598 * C15432 +
            (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50662 * C270 -
           ((C2271 * C9329 + C18293 + C18293 + C50774 * C9333 + C2269 * C3677 +
             C18294 + C18294 + C50884 * C3683) *
                C50598 * C15432 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C50598 * C15431 +
            (C2527 + C2526) * C50598 * C15430) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C50918 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50919 +
           (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50662 * C1306) *
              C50866 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50919 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C50918 -
           (C10804 * C9171 + C10933 + C10933 + C10796 * C9175 + C10802 * C3516 +
            C10934 + C10934 + C10795 * C3522 + C10800 * C1078 + C10935 +
            C10935 + C10794 * C1086 + C10798 * C280 + C10936 + C10936 +
            C10793 * C300) *
               C50598 * C50788 * C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C50918 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50919 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50662 * C1306) *
              C50866 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50919 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C50918 -
           ((C2271 * C1076 + C2504 + C2504 + C50774 * C1084 + C2269 * C282 +
             C2505 + C2505 + C50884 * C302) *
                C2268 +
            (C2529 + C2528) * C2267 + (C2527 + C2526) * C2266) *
               C50788 * C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50662 * C50918 -
           (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50662 * C50919 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C50598 * C15430 +
            (C2269 * C1540 + C4192 + C4192 + C50884 * C1548 + C2271 * C4179 +
             C4191 + C4191 + C50774 * C4185) *
                C50598 * C15431 +
            (C2269 * C3678 + C18291 + C18291 + C50884 * C3684 + C2271 * C9330 +
             C18292 + C18292 + C50774 * C9334) *
                C50598 * C15432) *
               C50662 * C1306) *
              C50866 +
          (((C2525 + C2524) * C50598 * C15430 +
            (C3268 + C3269) * C50598 * C15431 +
            (C19007 + C19008) * C50598 * C15432) *
               C50662 * C50919 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50662 * C50918 -
           ((C2271 * C9329 + C18293 + C18293 + C50774 * C9333 + C2269 * C3677 +
             C18294 + C18294 + C50884 * C3683) *
                C50598 * C15432 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C50598 * C15431 +
            (C2527 + C2526) * C50598 * C15430) *
               C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50875 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50918 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50726 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50875) *
              C50919 +
          ((C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50875 -
           (C10804 * C11994 + C11998 + C11998 + C10796 * C11996 +
            C10802 * C9828 + C11999 + C11999 + C10795 * C9832 + C10800 * C4179 +
            C12000 + C12000 + C10794 * C4185 + C10798 * C1540 + C12001 +
            C12001 + C10793 * C1548) *
               C50598 * C50788 * C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50875 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50918 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50726 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50875) *
              C50919 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50875 -
           ((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
             C4188 + C4188 + C50884 * C1546) *
                C2268 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C2267 +
            (C2271 * C4179 + C4191 + C4191 + C50774 * C4185 + C2269 * C1540 +
             C4192 + C4192 + C50884 * C1548) *
                C2266) *
               C50788 * C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50875 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50726) *
              C50918 +
          (((C19003 + C19004) * C50598 * C15430 +
            (C19005 + C19006) * C50598 * C15431 +
            (C19415 + C19416) * C50598 * C15432) *
               C50726 -
           (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50875) *
              C50919 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C50598 * C15430 +
            (C19921 + C19922) * C50598 * C15431 +
            (C19923 + C19924) * C50598 * C15432) *
               C50875 -
           ((C2271 * C12263 + C19911 + C19911 + C50774 * C12265 +
             C2269 * C10230 + C19912 + C19912 + C50884 * C10234) *
                C50598 * C15432 +
            (C19924 + C19923) * C50598 * C15431 +
            (C19922 + C19921) * C50598 * C15430) *
               C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
                 C2275 + C2275 + C50774 * C298) *
                    C2266 +
                (C2318 + C2319) * C2267 + C2326 * C2268) *
                   C50788 * C50662 * C1000 -
               (C2878 * C2268 + (C2524 + C2525) * C2267 +
                (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
                 C2487 + C2487 + C50884 * C298) *
                    C2266) *
                   C50788 * C50662 * C50698) *
                  C1002 +
              (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
                (C2889 + C2890) * C2268) *
                   C50788 * C50662 * C50698 -
               (C2327 * C2268 + (C2321 + C2320) * C2267 +
                (C2319 + C2318) * C2266) *
                   C50788 * C50662 * C1000) *
                  C1003 +
              ((C2326 * C2266 + (C2323 + C2322) * C2267 +
                (C2324 + C2325) * C2268) *
                   C50788 * C50662 * C1000 -
               ((C2271 * C284 + C2883 + C2883 + C50774 * C304 + C2269 * C283 +
                 C2884 + C2884 + C50884 * C303) *
                    C2268 +
                (C2890 + C2889) * C2267 + C2878 * C2266) *
                   C50788 * C50662 * C50698) *
                  C1004) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
                C2275 + C2275 + C50774 * C298) *
                   C2266 +
               (C2318 + C2319) * C2267 + C2326 * C2268) *
                  C50788 * C50662 * C1071 -
              (C2878 * C2268 + (C2524 + C2525) * C2267 +
               (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
                C2487 + C2487 + C50884 * C298) *
                   C2266) *
                  C50788 * C50662 * C1072 +
              ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
                C2489 + C2489 + C50774 * C1087) *
                   C2266 +
               (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
                  C50788 * C50662 * C1073 -
              ((C2271 * C3515 + C3525 + C3525 + C50774 * C3521 + C2269 * C1077 +
                C3526 + C3526 + C50884 * C1085) *
                   C2268 +
               (C2271 * C3516 + C3527 + C3527 + C50774 * C3522 + C2269 * C1078 +
                C3528 + C3528 + C50884 * C1086) *
                   C2267 +
               (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
                C3530 + C3530 + C50884 * C1087) *
                   C2266) *
                  C50788 * C50662 * C1074) *
             C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C443 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C444 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C445) *
              C1000 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C444 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C443 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C2268 +
            (C2271 * C3677 + C3688 + C3688 + C50774 * C3683 + C2269 * C1192 +
             C3689 + C3689 + C50884 * C1200) *
                C2267 +
            (C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C2266) *
               C50788 * C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50698) *
              C1002 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50698 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C1000) *
              C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3515 + C11149 + C11149 + C10796 * C3521 + C10802 * C1077 +
            C11150 + C11150 + C10795 * C1085 + C10800 * C281 + C11151 + C11151 +
            C10794 * C301 + C10798 * C276 + C11152 + C11152 + C10793 * C296) *
               C50598 * C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C1071 -
          (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
           C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
           C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
              C50598 * C50788 * C50662 * C1072 +
          (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
           C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 + C10927 +
           C10795 * C3523 + C10804 * C9172 + C10928 + C10928 + C10796 * C9176) *
              C50598 * C50788 * C50662 * C1073 -
          (C10804 * C11556 + C11560 + C11560 + C10796 * C11558 +
           C10802 * C9172 + C11561 + C11561 + C10795 * C9176 + C10800 * C3517 +
           C11562 + C11562 + C10794 * C3523 + C10798 * C1079 + C11563 + C11563 +
           C10793 * C1087) *
              C50598 * C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C443 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C444 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C445) *
              C1000 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C444 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C443 -
           (C10804 * C11661 + C11665 + C11665 + C10796 * C11663 +
            C10802 * C9330 + C11666 + C11666 + C10795 * C9334 + C10800 * C3678 +
            C11667 + C11667 + C10794 * C3684 + C10798 * C1193 + C11668 +
            C11668 + C10793 * C1201) *
               C50598 * C50788 * C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50662 * C1000 -
           ((C19006 + C19005) * C50598 * C15432 +
            (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50662 * C50698) *
              C1002 +
          (((C2525 + C2524) * C50598 * C15430 +
            (C3268 + C3269) * C50598 * C15431 +
            (C19007 + C19008) * C50598 * C15432) *
               C50662 * C50698 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50662 * C1000) *
              C1003 +
          ((C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
            (C2730 + C2731) * C50598 * C15432) *
               C50662 * C1000 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C50598 * C15432 +
            (C3271 + C3270) * C50598 * C15431 + C2878 * C50598 * C15430) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C50598 * C15430 +
           (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
              C50662 * C1071 -
          ((C19006 + C19005) * C50598 * C15432 +
           (C19004 + C19003) * C50598 * C15431 +
           (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
            C2487 + C2487 + C50884 * C298) *
               C50598 * C15430) *
              C50662 * C1072 +
          ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
            C2489 + C2489 + C50774 * C1087) *
               C50598 * C15430 +
           (C2269 * C1540 + C4192 + C4192 + C50884 * C1548 + C2271 * C4179 +
            C4191 + C4191 + C50774 * C4185) *
               C50598 * C15431 +
           (C2269 * C3678 + C18291 + C18291 + C50884 * C3684 + C2271 * C9330 +
            C18292 + C18292 + C50774 * C9334) *
               C50598 * C15432) *
              C50662 * C1073 -
          ((C2271 * C11661 + C19253 + C19253 + C50774 * C11663 + C2269 * C9330 +
            C19254 + C19254 + C50884 * C9334) *
               C50598 * C15432 +
           (C2271 * C9828 + C19255 + C19255 + C50774 * C9832 + C2269 * C4179 +
            C19256 + C19256 + C50884 * C4185) *
               C50598 * C15431 +
           (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
            C3530 + C3530 + C50884 * C1087) *
               C50598 * C15430) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C443 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C444 +
           (C18488 * C15430 + (C18484 + C18483) * C50598 * C15431 +
            (C2269 * C7320 + C18453 + C18453 + C50884 * C7326 + C2271 * C14823 +
             C18454 + C18454 + C50774 * C14827) *
                C50598 * C15432) *
               C445) *
              C1000 +
          (((C19003 + C19004) * C50598 * C15430 +
            (C19005 + C19006) * C50598 * C15431 +
            (C19415 + C19416) * C50598 * C15432) *
               C444 -
           (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C443 -
           ((C2271 * C14822 + C19408 + C19408 + C50774 * C14826 +
             C2269 * C14823 + C19409 + C19409 + C50884 * C14827) *
                C50598 * C15432 +
            (C19416 + C19415) * C50598 * C15431 + C19412 * C15430) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
             C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
             C10795 * C299 + C10804 * C1079 + C10810 + C10810 +
             C10796 * C1087) *
                C50598 * C50788 * C50875 -
            (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 +
             C10802 * C1540 + C11036 + C11036 + C10795 * C1548 + C10800 * C867 +
             C11037 + C11037 + C10794 * C877 + C10798 * C449 + C11038 + C11038 +
             C10793 * C469) *
                C50598 * C50788 * C50726) *
               C1000 +
           ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
             C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
             C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
             C10796 * C9832) *
                C50598 * C50788 * C50726 -
            (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 +
             C10802 * C1079 + C10922 + C10922 + C10795 * C1087 + C10800 * C279 +
             C10923 + C10923 + C10794 * C299 + C10798 * C278 + C10924 + C10924 +
             C10793 * C298) *
                C50598 * C50788 * C50875) *
               C50698) *
              C50866 +
          (((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
             C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 +
             C11045 + C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
             C10796 * C4184) *
                C50598 * C50788 * C50726 -
            (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
             C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
             C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
                C50598 * C50788 * C50875) *
               C1000 +
           ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
             C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 +
             C10931 + C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
             C10796 * C3522) *
                C50598 * C50788 * C50875 -
            (C10804 * C9827 + C11389 + C11389 + C10796 * C9831 +
             C10802 * C4178 + C11390 + C11390 + C10795 * C4184 +
             C10800 * C1539 + C11391 + C11391 + C10794 * C1547 + C10798 * C868 +
             C11392 + C11392 + C10793 * C878) *
                C50598 * C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C2266 +
             (C2318 + C2319) * C2267 + C2326 * C2268) *
                C50788 * C50875 -
            (C3037 * C2268 + (C2726 + C2727) * C2267 +
             (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
              C2689 + C2689 + C50884 * C469) *
                 C2266) *
                C50788 * C50726) *
               C1000 +
           (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
              C3245 + C3245 + C50774 * C1548) *
                 C2266 +
             (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                C50788 * C50726 -
            (C2878 * C2268 + (C2524 + C2525) * C2267 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C2266) *
                C50788 * C50875) *
               C50698) *
              C50866 +
          ((((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
             (C3048 + C3049) * C2268) *
                C50788 * C50726 -
            (C2327 * C2268 + (C2321 + C2320) * C2267 +
             (C2319 + C2318) * C2266) *
                C50788 * C50875) *
               C1000 +
           (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
             (C2889 + C2890) * C2268) *
                C50788 * C50875 -
            ((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C2268 +
             (C3271 + C3270) * C2267 + (C3269 + C3268) * C2266) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C50598 * C15430 +
             (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
                C50875 -
            ((C18483 + C18484) * C50598 * C15432 +
             (C18482 + C18481) * C50598 * C15431 +
             (C18480 + C18479) * C50598 * C15430) *
                C50726) *
               C1000 +
           (((C19003 + C19004) * C50598 * C15430 +
             (C19005 + C19006) * C50598 * C15431 +
             (C19415 + C19416) * C50598 * C15432) *
                C50726 -
            (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C50598 * C15430) *
                C50875) *
               C50698) *
              C50866 +
          ((((C2727 + C2726) * C50598 * C15430 +
             (C2728 + C2729) * C50598 * C15431 +
             (C18485 + C18486) * C50598 * C15432) *
                C50726 -
            (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
             (C2319 + C2318) * C50598 * C15430) *
                C50875) *
               C1000 +
           (((C2525 + C2524) * C50598 * C15430 +
             (C3268 + C3269) * C50598 * C15431 +
             (C19007 + C19008) * C50598 * C15432) *
                C50875 -
            ((C2271 * C10229 + C18989 + C18989 + C50774 * C10233 +
              C2269 * C4583 + C18990 + C18990 + C50884 * C4589) *
                 C50598 * C15432 +
             (C19008 + C19007) * C50598 * C15431 +
             (C3269 + C3268) * C50598 * C15430) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C50662 * C1071 -
          (C2878 * C2268 + (C2524 + C2525) * C2267 +
           (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
            C2487 + C2487 + C50884 * C298) *
               C2266) *
              C50788 * C50662 * C1072 +
          ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
            C2489 + C2489 + C50774 * C1087) *
               C2266 +
           (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
              C50788 * C50662 * C1073 -
          ((C2271 * C3515 + C3525 + C3525 + C50774 * C3521 + C2269 * C1077 +
            C3526 + C3526 + C50884 * C1085) *
               C2268 +
           (C2271 * C3516 + C3527 + C3527 + C50774 * C3522 + C2269 * C1078 +
            C3528 + C3528 + C50884 * C1086) *
               C2267 +
           (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
            C3530 + C3530 + C50884 * C1087) *
               C2266) *
              C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C1000 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50698) *
              C1002 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50698 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C1000) *
              C1003 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50662 * C1000 -
           ((C2271 * C284 + C2883 + C2883 + C50774 * C304 + C2269 * C283 +
             C2884 + C2884 + C50884 * C303) *
                C2268 +
            (C2890 + C2889) * C2267 + C2878 * C2266) *
               C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50698) *
              C1002 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50698 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C1000) *
              C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3515 + C11149 + C11149 + C10796 * C3521 + C10802 * C1077 +
            C11150 + C11150 + C10795 * C1085 + C10800 * C281 + C11151 + C11151 +
            C10794 * C301 + C10798 * C276 + C11152 + C11152 + C10793 * C296) *
               C50598 * C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C1071 -
          (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
           C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
           C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
              C50598 * C50788 * C50662 * C1072 +
          (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
           C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 + C10927 +
           C10795 * C3523 + C10804 * C9172 + C10928 + C10928 + C10796 * C9176) *
              C50598 * C50788 * C50662 * C1073 -
          (C10804 * C11556 + C11560 + C11560 + C10796 * C11558 +
           C10802 * C9172 + C11561 + C11561 + C10795 * C9176 + C10800 * C3517 +
           C11562 + C11562 + C10794 * C3523 + C10798 * C1079 + C11563 + C11563 +
           C10793 * C1087) *
              C50598 * C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50662 * C1000 -
           ((C19006 + C19005) * C50598 * C15432 +
            (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50662 * C50698) *
              C1002 +
          (((C2525 + C2524) * C50598 * C15430 +
            (C3268 + C3269) * C50598 * C15431 +
            (C19007 + C19008) * C50598 * C15432) *
               C50662 * C50698 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50662 * C1000) *
              C1003 +
          ((C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
            (C2730 + C2731) * C50598 * C15432) *
               C50662 * C1000 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C50598 * C15432 +
            (C3271 + C3270) * C50598 * C15431 + C2878 * C50598 * C15430) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C50598 * C15430 +
           (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
              C50662 * C1071 -
          ((C19006 + C19005) * C50598 * C15432 +
           (C19004 + C19003) * C50598 * C15431 +
           (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
            C2487 + C2487 + C50884 * C298) *
               C50598 * C15430) *
              C50662 * C1072 +
          ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
            C2489 + C2489 + C50774 * C1087) *
               C50598 * C15430 +
           (C2269 * C1540 + C4192 + C4192 + C50884 * C1548 + C2271 * C4179 +
            C4191 + C4191 + C50774 * C4185) *
               C50598 * C15431 +
           (C2269 * C3678 + C18291 + C18291 + C50884 * C3684 + C2271 * C9330 +
            C18292 + C18292 + C50774 * C9334) *
               C50598 * C15432) *
              C50662 * C1073 -
          ((C2271 * C11661 + C19253 + C19253 + C50774 * C11663 + C2269 * C9330 +
            C19254 + C19254 + C50884 * C9334) *
               C50598 * C15432 +
           (C2271 * C9828 + C19255 + C19255 + C50774 * C9832 + C2269 * C4179 +
            C19256 + C19256 + C50884 * C4185) *
               C50598 * C15431 +
           (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
            C3530 + C3530 + C50884 * C1087) *
               C50598 * C15430) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
             C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
             C10795 * C299 + C10804 * C1079 + C10810 + C10810 +
             C10796 * C1087) *
                C50598 * C50788 * C1651 -
            (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 +
             C10802 * C1540 + C11036 + C11036 + C10795 * C1548 + C10800 * C867 +
             C11037 + C11037 + C10794 * C877 + C10798 * C449 + C11038 + C11038 +
             C10793 * C469) *
                C50598 * C50788 * C50726) *
               C50874 +
           ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
             C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
             C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
             C10796 * C9832) *
                C50598 * C50788 * C50726 -
            (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 +
             C10802 * C1079 + C10922 + C10922 + C10795 * C1087 + C10800 * C279 +
             C10923 + C10923 + C10794 * C299 + C10798 * C278 + C10924 + C10924 +
             C10793 * C298) *
                C50598 * C50788 * C1651) *
               C50698) *
              C50866 +
          (((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
             C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 +
             C11045 + C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
             C10796 * C4184) *
                C50598 * C50788 * C50726 -
            (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
             C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
             C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
                C50598 * C50788 * C1651) *
               C50874 +
           ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
             C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 +
             C10931 + C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
             C10796 * C3522) *
                C50598 * C50788 * C1651 -
            (C10804 * C9827 + C11389 + C11389 + C10796 * C9831 +
             C10802 * C4178 + C11390 + C11390 + C10795 * C4184 +
             C10800 * C1539 + C11391 + C11391 + C10794 * C1547 + C10798 * C868 +
             C11392 + C11392 + C10793 * C878) *
                C50598 * C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C2266 +
             (C2318 + C2319) * C2267 + C2326 * C2268) *
                C50788 * C1651 -
            (C3037 * C2268 + (C2726 + C2727) * C2267 +
             (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
              C2689 + C2689 + C50884 * C469) *
                 C2266) *
                C50788 * C50726) *
               C50874 +
           (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
              C3245 + C3245 + C50774 * C1548) *
                 C2266 +
             (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                C50788 * C50726 -
            (C2878 * C2268 + (C2524 + C2525) * C2267 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C2266) *
                C50788 * C1651) *
               C50698) *
              C50866 +
          ((((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
             (C3048 + C3049) * C2268) *
                C50788 * C50726 -
            (C2327 * C2268 + (C2321 + C2320) * C2267 +
             (C2319 + C2318) * C2266) *
                C50788 * C1651) *
               C50874 +
           (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
             (C2889 + C2890) * C2268) *
                C50788 * C1651 -
            ((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C2268 +
             (C3271 + C3270) * C2267 + (C3269 + C3268) * C2266) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C50598 * C15430 +
             (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
                C1651 -
            (C20325 * C15432 + (C18482 + C18481) * C50598 * C15431 +
             (C18480 + C18479) * C50598 * C15430) *
                C50726) *
               C50874 +
           (((C19003 + C19004) * C50598 * C15430 +
             (C19005 + C19006) * C50598 * C15431 +
             (C19415 + C19416) * C50598 * C15432) *
                C50726 -
            (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C50598 * C15430) *
                C1651) *
               C50698) *
              C50866 +
          ((((C2727 + C2726) * C50598 * C15430 +
             (C2728 + C2729) * C50598 * C15431 +
             (C18485 + C18486) * C50598 * C15432) *
                C50726 -
            (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
             (C2319 + C2318) * C50598 * C15430) *
                C1651) *
               C50874 +
           (((C2525 + C2524) * C50598 * C15430 +
             (C3268 + C3269) * C50598 * C15431 +
             (C19007 + C19008) * C50598 * C15432) *
                C1651 -
            ((C2271 * C10229 + C18989 + C18989 + C50774 * C10233 +
              C2269 * C4583 + C18990 + C18990 + C50884 * C4589) *
                 C50598 * C15432 +
             (C19008 + C19007) * C50598 * C15431 +
             (C3269 + C3268) * C50598 * C15430) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50920 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50921 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C2067) *
              C50874 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50921 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50920 -
           (C10804 * C11661 + C11665 + C11665 + C10796 * C11663 +
            C10802 * C9330 + C11666 + C11666 + C10795 * C9334 + C10800 * C3678 +
            C11667 + C11667 + C10794 * C3684 + C10798 * C1193 + C11668 +
            C11668 + C10793 * C1201) *
               C50598 * C50788 * C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50920 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50921 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C2067) *
              C50874 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50921 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50920 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C2268 +
            (C2271 * C3677 + C3688 + C3688 + C50774 * C3683 + C2269 * C1192 +
             C3689 + C3689 + C50884 * C1200) *
                C2267 +
            (C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C2266) *
               C50788 * C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50920 -
           (C20325 * C15432 + (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50921 +
           (C18488 * C15430 + (C18484 + C18483) * C50598 * C15431 +
            (C20330 + C20331) * C50598 * C15432) *
               C2067) *
              C50874 +
          (((C19003 + C19004) * C50598 * C15430 +
            (C19005 + C19006) * C50598 * C15431 +
            (C19415 + C19416) * C50598 * C15432) *
               C50921 -
           (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C50920 -
           ((C2271 * C14822 + C19408 + C19408 + C50774 * C14826 +
             C2269 * C14823 + C19409 + C19409 + C50884 * C14827) *
                C50598 * C15432 +
            (C19416 + C19415) * C50598 * C15431 + C19412 * C15430) *
               C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
                 C2275 + C2275 + C50774 * C298) *
                    C2266 +
                (C2318 + C2319) * C2267 + C2326 * C2268) *
                   C50788 * C1651 -
               (C3037 * C2268 + (C2726 + C2727) * C2267 +
                (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
                 C2689 + C2689 + C50884 * C469) *
                    C2266) *
                   C50788 * C50726) *
                  C50646 * C1002 +
              (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
                (C3048 + C3049) * C2268) *
                   C50788 * C50726 -
               (C2327 * C2268 + (C2321 + C2320) * C2267 +
                (C2319 + C2318) * C2266) *
                   C50788 * C1651) *
                  C50646 * C1003 +
              ((C2326 * C2266 + (C2323 + C2322) * C2267 +
                (C2324 + C2325) * C2268) *
                   C50788 * C1651 -
               ((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
                 C3043 + C3043 + C50884 * C474) *
                    C2268 +
                (C3049 + C3048) * C2267 + C3037 * C2266) *
                   C50788 * C50726) *
                  C50646 * C1004) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
                 C2275 + C2275 + C50774 * C298) *
                    C2266 +
                (C2318 + C2319) * C2267 + C2326 * C2268) *
                   C50788 * C1651 -
               (C3037 * C2268 + (C2726 + C2727) * C2267 +
                (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
                 C2689 + C2689 + C50884 * C469) *
                    C2266) *
                   C50788 * C50726) *
                  C270 +
              (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
                 C3245 + C3245 + C50774 * C1548) *
                    C2266 +
                (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                   C50788 * C50726 -
               (C2878 * C2268 + (C2524 + C2525) * C2267 +
                (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
                 C2487 + C2487 + C50884 * C298) *
                    C2266) *
                   C50788 * C1651) *
                  C271 +
              (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
                 C2489 + C2489 + C50774 * C1087) *
                    C2266 +
                (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
                   C50788 * C1651 -
               ((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 +
                 C2269 * C1538 + C4188 + C4188 + C50884 * C1546) *
                    C2268 +
                (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 +
                 C2269 * C1539 + C4190 + C4190 + C50884 * C1547) *
                    C2267 +
                (C2271 * C4179 + C4191 + C4191 + C50774 * C4185 +
                 C2269 * C1540 + C4192 + C4192 + C50884 * C1548) *
                    C2266) *
                   C50788 * C50726) *
                  C272) *
             C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C1817 -
          (C3037 * C2268 + (C2726 + C2727) * C2267 +
           (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
            C2689 + C2689 + C50884 * C469) *
               C2266) *
              C50788 * C1818 +
          ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
            C2691 + C2691 + C50774 * C1201) *
               C2266 +
           (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
              C50788 * C1819 -
          ((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
            C4593 + C4593 + C50884 * C1830) *
               C2268 +
           (C2271 * C4583 + C4594 + C4594 + C50774 * C4589 + C2269 * C1823 +
            C4595 + C4595 + C50884 * C1831) *
               C2267 +
           (C2271 * C4584 + C4596 + C4596 + C50774 * C4590 + C2269 * C1824 +
            C4597 + C4597 + C50884 * C1832) *
               C2266) *
              C50788 * C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50646 * C1002 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50726 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C1651) *
              C50646 * C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C1651 -
           (C10804 * C4177 + C11251 + C11251 + C10796 * C4183 + C10802 * C1538 +
            C11252 + C11252 + C10795 * C1546 + C10800 * C869 + C11253 + C11253 +
            C10794 * C879 + C10798 * C447 + C11254 + C11254 + C10793 * C467) *
               C50598 * C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C270 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50726 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C1651) *
              C271 +
          ((C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C1651 -
           (C10804 * C11994 + C11998 + C11998 + C10796 * C11996 +
            C10802 * C9828 + C11999 + C11999 + C10795 * C9832 + C10800 * C4179 +
            C12000 + C12000 + C10794 * C4185 + C10798 * C1540 + C12001 +
            C12001 + C10793 * C1548) *
               C50598 * C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C1817 -
          (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
           C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
           C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
              C50598 * C50788 * C1818 +
          (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
           C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 + C11041 +
           C10795 * C3684 + C10804 * C9330 + C11042 + C11042 + C10796 * C9334) *
              C50598 * C50788 * C1819 -
          (C10804 * C12263 + C12267 + C12267 + C10796 * C12265 +
           C10802 * C10230 + C12268 + C12268 + C10795 * C10234 +
           C10800 * C4584 + C12269 + C12269 + C10794 * C4590 + C10798 * C1824 +
           C12270 + C12270 + C10793 * C1832) *
              C50598 * C50788 * C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C1651 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50726) *
              C50646 * C1002 +
          (((C2727 + C2726) * C50598 * C15430 +
            (C2728 + C2729) * C50598 * C15431 +
            (C18485 + C18486) * C50598 * C15432) *
               C50726 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C1651) *
              C50646 * C1003 +
          ((C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
            (C2730 + C2731) * C50598 * C15432) *
               C1651 -
           ((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
             C4593 + C4593 + C50884 * C1830) *
                C50598 * C15432 +
            (C2731 + C2730) * C50598 * C15431 + C3037 * C50598 * C15430) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C1651 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50726) *
              C270 +
          (((C19003 + C19004) * C50598 * C15430 +
            (C19005 + C19006) * C50598 * C15431 +
            (C19415 + C19416) * C50598 * C15432) *
               C50726 -
           (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C1651) *
              C271 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C50598 * C15430 +
            (C19921 + C19922) * C50598 * C15431 +
            (C19923 + C19924) * C50598 * C15432) *
               C1651 -
           ((C2271 * C12263 + C19911 + C19911 + C50774 * C12265 +
             C2269 * C10230 + C19912 + C19912 + C50884 * C10234) *
                C50598 * C15432 +
            (C19924 + C19923) * C50598 * C15431 +
            (C19922 + C19921) * C50598 * C15430) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C50598 * C15430 +
           (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
              C1817 -
          (C20325 * C15432 + (C18482 + C18481) * C50598 * C15431 +
           (C18480 + C18479) * C50598 * C15430) *
              C1818 +
          (C18488 * C15430 + (C18484 + C18483) * C50598 * C15431 +
           (C20330 + C20331) * C50598 * C15432) *
              C1819 -
          ((C2271 * C20314 + C20323 + C20323 + C50774 * C20316 +
            C2269 * C17545 + C20324 + C20324 + C50884 * C17549) *
               C50598 * C15432 +
           (C20331 + C20330) * C50598 * C15431 + C20325 * C15430) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50920 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50921 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C2067) *
              C50646 * C50866 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50921 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50920 -
           (C10804 * C9329 + C11047 + C11047 + C10796 * C9333 + C10802 * C3677 +
            C11048 + C11048 + C10795 * C3683 + C10800 * C1192 + C11049 +
            C11049 + C10794 * C1200 + C10798 * C451 + C11050 + C11050 +
            C10793 * C471) *
               C50598 * C50788 * C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50920 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50921 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C2067) *
              C50646 * C50866 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50921 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50920 -
           ((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
             C2707 + C2707 + C50884 * C473) *
                C2268 +
            (C2731 + C2730) * C2267 + (C2729 + C2728) * C2266) *
               C50788 * C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C50920 -
           (C20325 * C15432 + (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50921 +
           (C18488 * C15430 + (C18484 + C18483) * C50598 * C15431 +
            (C20330 + C20331) * C50598 * C15432) *
               C2067) *
              C50646 * C50866 +
          (((C2727 + C2726) * C50598 * C15430 +
            (C2728 + C2729) * C50598 * C15431 +
            (C18485 + C18486) * C50598 * C15432) *
               C50921 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C50920 -
           ((C2271 * C16644 + C18460 + C18460 + C50774 * C16646 +
             C2269 * C7319 + C18461 + C18461 + C50884 * C7325) *
                C50598 * C15432 +
            (C18486 + C18485) * C50598 * C15431 + C18470 * C15430) *
               C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C1651 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C270 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50726 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C1651) *
              C271 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C1651 -
           ((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
             C4188 + C4188 + C50884 * C1546) *
                C2268 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C2267 +
            (C2271 * C4179 + C4191 + C4191 + C50774 * C4185 + C2269 * C1540 +
             C4192 + C4192 + C50884 * C1548) *
                C2266) *
               C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C1651 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50646 * C1002 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50726 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C1651) *
              C50646 * C1003 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C1651 -
           ((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C2268 +
            (C3049 + C3048) * C2267 + C3037 * C2266) *
               C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50646 * C1002 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50726 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C1651) *
              C50646 * C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C1651 -
           (C10804 * C4177 + C11251 + C11251 + C10796 * C4183 + C10802 * C1538 +
            C11252 + C11252 + C10795 * C1546 + C10800 * C869 + C11253 + C11253 +
            C10794 * C879 + C10798 * C447 + C11254 + C11254 + C10793 * C467) *
               C50598 * C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C270 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50726 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C1651) *
              C271 +
          ((C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C1651 -
           (C10804 * C11994 + C11998 + C11998 + C10796 * C11996 +
            C10802 * C9828 + C11999 + C11999 + C10795 * C9832 + C10800 * C4179 +
            C12000 + C12000 + C10794 * C4185 + C10798 * C1540 + C12001 +
            C12001 + C10793 * C1548) *
               C50598 * C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C1651 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50726) *
              C50646 * C1002 +
          (((C2727 + C2726) * C50598 * C15430 +
            (C2728 + C2729) * C50598 * C15431 +
            (C18485 + C18486) * C50598 * C15432) *
               C50726 -
           (C18470 * C15432 + (C2726 + C2727) * C50598 * C15431 +
            (C2319 + C2318) * C50598 * C15430) *
               C1651) *
              C50646 * C1003 +
          ((C2326 * C50598 * C15430 + (C2725 + C2724) * C50598 * C15431 +
            (C2730 + C2731) * C50598 * C15432) *
               C1651 -
           ((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
             C4593 + C4593 + C50884 * C1830) *
                C50598 * C15432 +
            (C2731 + C2730) * C50598 * C15431 + C3037 * C50598 * C15430) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C50598 * C15430 +
            (C18479 + C18480) * C50598 * C15431 + C18488 * C15432) *
               C1651 -
           ((C18483 + C18484) * C50598 * C15432 +
            (C18482 + C18481) * C50598 * C15431 +
            (C18480 + C18479) * C50598 * C15430) *
               C50726) *
              C270 +
          (((C19003 + C19004) * C50598 * C15430 +
            (C19005 + C19006) * C50598 * C15431 +
            (C19415 + C19416) * C50598 * C15432) *
               C50726 -
           (C19412 * C15432 + (C19004 + C19003) * C50598 * C15431 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C50598 * C15430) *
               C1651) *
              C271 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C50598 * C15430 +
            (C19921 + C19922) * C50598 * C15431 +
            (C19923 + C19924) * C50598 * C15432) *
               C1651 -
           ((C2271 * C12263 + C19911 + C19911 + C50774 * C12265 +
             C2269 * C10230 + C19912 + C19912 + C50884 * C10234) *
                C50598 * C15432 +
            (C19924 + C19923) * C50598 * C15431 +
            (C19922 + C19921) * C50598 * C15430) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50662 * C50874 -
           ((C7931 * C4179 + C8906 + C8906 + C7924 * C4185 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7927 * C867 + C8904 + C8904 +
             C7922 * C877) *
                C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50662 * C50698) *
              C50916 +
          (((C8184 + C8183 + C8182) * C50598 * C50886 +
            (C8925 + C8926 + C8927) * C50598 * C50800) *
               C50662 * C50698 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50662 * C50874) *
              C50917 +
          (((C7990 + C7989 + C7988) * C50598 * C50886 +
            (C8707 + C8708 + C8709) * C50598 * C50800) *
               C50662 * C50874 -
           ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 + C7929 * C1538 +
             C8917 + C8917 + C7923 * C1546 + C7927 * C869 + C8918 + C8918 +
             C7922 * C879) *
                C50598 * C50800 +
            (C8545 + C8544 + C8543) * C50598 * C50886) *
               C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50662 * C50874 -
           ((C901 * C2268 + C900 * C2267 +
             (C117 * C867 + C883 + C883 + C50758 * C877) * C2266) *
                C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C50662 * C50698) *
              C50916 +
          (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
            (C900 * C2266 + C901 * C2267 + C902 * C2268) * C50800) *
               C50662 * C50698 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C50662 * C50874) *
              C50917 +
          (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
            (C512 * C2266 + C511 * C2267 + C737 * C2268) * C50800) *
               C50662 * C50874 -
           (((C117 * C871 + C893 + C893 + C50758 * C881) * C2268 +
             C902 * C2267 + C901 * C2266) *
                C50800 +
            (C628 * C2268 + C340 * C2267 + C341 * C2266) * C50886) *
               C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50662 * C50874 -
           (C16656 * C50598 * C20886 + C6430 * C50598 * C20885 +
            C6024 * C50598 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50662 * C50698) *
              C50916 +
          ((C342 * C50598 * C20883 + C900 * C50598 * C20884 +
            C6025 * C50598 * C20885 + C16252 * C50598 * C20886) *
               C50662 * C50698 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C50662 * C50874) *
              C50917 +
          ((C169 * C50598 * C20883 + C512 * C50598 * C20884 +
            C515 * C50598 * C20885 + C5515 * C50598 * C20886) *
               C50662 * C50874 -
           ((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50598 * C20886 +
            C6026 * C50598 * C20885 + C901 * C50598 * C20884 +
            C341 * C50598 * C20883) *
               C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
              C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
              C7924 * C299) *
                 C50598 * C50886 +
             (C13011 + C13012 + C13013) * C50598 * C50800) *
                C50875 -
            ((C13014 + C13015 + C13016) * C50598 * C50800 +
             (C13013 + C13012 + C13011) * C50598 * C50886) *
                C50726) *
               C50874 +
           (((C13515 + C13516 + C13517) * C50598 * C50886 +
             (C7927 * C1193 + C9341 + C9341 + C7922 * C1201 + C7929 * C3678 +
              C9340 + C9340 + C7923 * C3684 + C7931 * C9330 + C9339 + C9339 +
              C7924 * C9334) *
                 C50598 * C50800) *
                C50726 -
            ((C13517 + C13516 + C13515) * C50598 * C50800 +
             (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
              C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
              C7922 * C298) *
                 C50598 * C50886) *
                C50875) *
               C50698) *
              C273 +
          ((((C8378 + C8377 + C8376) * C50598 * C50886 +
             (C8379 + C8380 + C8381) * C50598 * C50800) *
                C50726 -
            ((C8376 + C8377 + C8378) * C50598 * C50800 +
             (C7987 + C7986 + C7985) * C50598 * C50886) *
                C50875) *
               C50874 +
           (((C8184 + C8183 + C8182) * C50598 * C50886 +
             (C8925 + C8926 + C8927) * C50598 * C50800) *
                C50875 -
            ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 + C7929 * C3677 +
              C9337 + C9337 + C7923 * C3683 + C7927 * C1192 + C9338 + C9338 +
              C7922 * C1200) *
                 C50598 * C50800 +
             (C8927 + C8926 + C8925) * C50598 * C50886) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
              C168 * C2267 + C169 * C2268) *
                 C50886 +
             (C5516 + C5488 + C5489) * C50800) *
                C50875 -
            ((C5490 + C5491 + C5517) * C50800 +
             (C5489 + C5488 + C5516) * C50886) *
                C50726) *
               C50874 +
           (((C6027 + C6009 + C6010) * C50886 +
             ((C117 * C1193 + C1206 + C1206 + C50758 * C1201) * C2266 +
              C6025 * C2267 + C6026 * C2268) *
                 C50800) *
                C50726 -
            ((C6010 + C6009 + C6027) * C50800 +
             (C341 * C2268 + C342 * C2267 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                 C50886) *
                C50875) *
               C50698) *
              C273 +
          ((((C5498 + C5499 + C5500) * C50886 +
             (C5501 + C5502 + C5503) * C50800) *
                C50726 -
            ((C5500 + C5499 + C5498) * C50800 +
             (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                C50875) *
               C50874 +
           (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
             (C6015 + C6016 + C6017) * C50800) *
                C50875 -
            (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C2268 +
              C6026 * C2267 + C6025 * C2266) *
                 C50800 +
             (C6017 + C6016 + C6015) * C50886) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
             C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
                C50875 -
            (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
             C21084 * C20883) *
                C50726) *
               C50874 +
           ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
             (C117 * C14823 + C16653 + C16653 + C50758 * C14827) * C50598 *
                 C20886) *
                C50726 -
            (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
                C50875) *
               C50698) *
              C273 +
          (((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
             C21091 * C20886) *
                C50726 -
            (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
             C168 * C50598 * C20883) *
                C50875) *
               C50874 +
           ((C342 * C50598 * C20883 + C21424 * C20884 + C21425 * C20885 +
             C21426 * C20886) *
                C50875 -
            ((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50598 *
                 C20886 +
             C21426 * C20885 + C21425 * C20884 + C21424 * C20883) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                C168 * C2267 + C169 * C2268) *
                   C50886 +
               ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
                C513 * C2267 + C512 * C2268) *
                   C50800) *
                  C50662 * C50646 * C113 -
              ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
               (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                  C50662 * C50646 * C114 +
              ((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
               (C512 * C2266 + C511 * C2267 + C737 * C2268) * C50800) *
                  C50662 * C50646 * C115 -
              (((C117 * C728 + C734 + C734 + C50758 * C730) * C2268 +
                C737 * C2267 + C511 * C2266) *
                   C50800 +
               (C172 * C2268 + C171 * C2267 + C170 * C2266) * C50886) *
                  C50662 * C50646 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                 C168 * C2267 + C169 * C2268) *
                    C50886 +
                ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
                 C513 * C2267 + C512 * C2268) *
                    C50800) *
                   C50662 * C270 -
               ((C901 * C2268 + C900 * C2267 +
                 (C117 * C867 + C883 + C883 + C50758 * C877) * C2266) *
                    C50800 +
                (C341 * C2268 + C342 * C2267 +
                 (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                    C50886) *
                   C50662 * C271 +
               (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                 C343 * C2267 + C344 * C2268) *
                    C50886 +
                ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                 C5338 * C2267 + C5339 * C2268) *
                    C50800) *
                   C50662 * C272) *
                  C273 +
              (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                (C900 * C2266 + C901 * C2267 + C902 * C2268) * C50800) *
                   C50662 * C271 -
               ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
                (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                   C50662 * C270 -
               (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C2268 +
                 C5339 * C2267 + C5338 * C2266) *
                    C50800 +
                (C345 * C2268 + C344 * C2267 + C343 * C2266) * C50886) *
                   C50662 * C272) *
                  C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C443 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C444 +
           ((C5517 + C5491 + C5490) * C50886 +
            ((C117 * C1824 + C1837 + C1837 + C50758 * C1832) * C2266 +
             C5514 * C2267 + C5515 * C2268) *
                C50800) *
               C445) *
              C50646 * C273 +
          (((C5498 + C5499 + C5500) * C50886 +
            (C5501 + C5502 + C5503) * C50800) *
               C444 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C443 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C2268 +
             C5515 * C2267 + C5514 * C2266) *
                C50800 +
            (C5503 + C5502 + C5501) * C50886) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50598 * C50886 +
           (C7927 * C449 + C8345 + C8345 + C7922 * C469 + C7929 * C867 + C8344 +
            C8344 + C7923 * C877 + C7931 * C1540 + C8343 + C8343 +
            C7924 * C1548) *
               C50598 * C50800) *
              C50662 * C50646 * C113 -
          ((C8376 + C8377 + C8378) * C50598 * C50800 +
           (C7987 + C7986 + C7985) * C50598 * C50886) *
              C50662 * C50646 * C114 +
          ((C7990 + C7989 + C7988) * C50598 * C50886 +
           (C8707 + C8708 + C8709) * C50598 * C50800) *
              C50662 * C50646 * C115 -
          ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 + C7929 * C870 +
            C8699 + C8699 + C7923 * C880 + C7927 * C446 + C8700 + C8700 +
            C7922 * C466) *
               C50598 * C50800 +
           (C7993 + C7992 + C7991) * C50598 * C50886) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C7927 * C449 + C8345 + C8345 + C7922 * C469 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7931 * C1540 + C8343 + C8343 +
             C7924 * C1548) *
                C50598 * C50800) *
               C50662 * C270 -
           ((C7931 * C4179 + C8906 + C8906 + C7924 * C4185 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7927 * C867 + C8904 + C8904 +
             C7922 * C877) *
                C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50662 * C271 +
           ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50598 * C50886 +
            (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 + C7929 * C4179 +
             C9838 + C9838 + C7923 * C4185 + C7931 * C9828 + C9837 + C9837 +
             C7924 * C9832) *
                C50598 * C50800) *
               C50662 * C272) *
              C273 +
          (((C8184 + C8183 + C8182) * C50598 * C50886 +
            (C8925 + C8926 + C8927) * C50598 * C50800) *
               C50662 * C271 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50662 * C270 -
           ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 + C7929 * C4178 +
             C9835 + C9835 + C7923 * C4184 + C7927 * C1539 + C9836 + C9836 +
             C7922 * C1547) *
                C50598 * C50800 +
            (C8187 + C8186 + C8185) * C50598 * C50886) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C443 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C444 +
           ((C13016 + C13015 + C13014) * C50598 * C50886 +
            (C7927 * C1824 + C10241 + C10241 + C7922 * C1832 + C7929 * C4584 +
             C10240 + C10240 + C7923 * C4590 + C7931 * C10230 + C10239 +
             C10239 + C7924 * C10234) *
                C50598 * C50800) *
               C445) *
              C50646 * C273 +
          (((C8378 + C8377 + C8376) * C50598 * C50886 +
            (C8379 + C8380 + C8381) * C50598 * C50800) *
               C444 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C443 -
           ((C7931 * C10229 + C10236 + C10236 + C7924 * C10233 + C7929 * C4583 +
             C10237 + C10237 + C7923 * C4589 + C7927 * C1823 + C10238 + C10238 +
             C7922 * C1831) *
                C50598 * C50800 +
            (C8381 + C8380 + C8379) * C50598 * C50886) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
           C5512 * C50598 * C20884 + C5513 * C50598 * C20885 +
           C7337 * C50598 * C20886) *
              C50662 * C50646 * C113 -
          (C5514 * C50598 * C20886 + C514 * C50598 * C20885 +
           C513 * C50598 * C20884 + C168 * C50598 * C20883) *
              C50662 * C50646 * C114 +
          (C169 * C50598 * C20883 + C512 * C50598 * C20884 +
           C515 * C50598 * C20885 + C5515 * C50598 * C20886) *
              C50662 * C50646 * C115 -
          ((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50598 * C20886 +
           C516 * C50598 * C20885 + C511 * C50598 * C20884 +
           C170 * C50598 * C20883) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C5512 * C50598 * C20884 + C5513 * C50598 * C20885 +
            C7337 * C50598 * C20886) *
               C50662 * C270 -
           (C16656 * C50598 * C20886 + C6430 * C50598 * C20885 +
            C6024 * C50598 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50662 * C271 +
           ((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
            C6927 * C50598 * C20884 + C17153 * C50598 * C20885 +
            (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50598 *
                C20886) *
               C50662 * C272) *
              C273 +
          ((C342 * C50598 * C20883 + C900 * C50598 * C20884 +
            C6025 * C50598 * C20885 + C16252 * C50598 * C20886) *
               C50662 * C271 -
           (C5514 * C50598 * C20886 + C514 * C50598 * C20885 +
            C513 * C50598 * C20884 + C168 * C50598 * C20883) *
               C50662 * C270 -
           ((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50598 *
                C20886 +
            C15584 * C50598 * C20885 + C5338 * C50598 * C20884 +
            C343 * C50598 * C20883) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C443 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C444 +
           (C21085 * C20883 + C21086 * C20884 + C21087 * C20885 +
            (C117 * C17545 + C17556 + C17556 + C50758 * C17549) * C50598 *
                C20886) *
               C445) *
              C50646 * C273 +
          ((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
            C21091 * C20886) *
               C444 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C443 -
           ((C117 * C17544 + C17555 + C17555 + C50758 * C17548) * C50598 *
                C20886 +
            C21091 * C20885 + C21090 * C20884 + C21089 * C20883) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50875 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50726) *
              C50646 * C50916 +
          (((C8378 + C8377 + C8376) * C50598 * C50886 +
            (C8379 + C8380 + C8381) * C50598 * C50800) *
               C50726 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50875) *
              C50646 * C50917 +
          (((C7990 + C7989 + C7988) * C50598 * C50886 +
            (C8707 + C8708 + C8709) * C50598 * C50800) *
               C50875 -
           ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 + C7929 * C1191 +
             C8362 + C8362 + C7923 * C1199 + C7927 * C452 + C8363 + C8363 +
             C7922 * C472) *
                C50598 * C50800 +
            (C8709 + C8708 + C8707) * C50598 * C50886) *
               C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50875 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C50726) *
              C50646 * C50916 +
          (((C5498 + C5499 + C5500) * C50886 +
            (C5501 + C5502 + C5503) * C50800) *
               C50726 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C50875) *
              C50646 * C50917 +
          (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
            (C5810 + C5811 + C5812) * C50800) *
               C50875 -
           (((C117 * C455 + C498 + C498 + C50758 * C475) * C2268 +
             C516 * C2267 + C515 * C2266) *
                C50800 +
            (C5812 + C5811 + C5810) * C50886) *
               C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50875 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50726) *
              C50646 * C50916 +
          ((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
            C21091 * C20886) *
               C50726 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C50875) *
              C50646 * C50917 +
          ((C169 * C50598 * C20883 + C21288 * C20884 + C21289 * C20885 +
            C21290 * C20886) *
               C50875 -
           ((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50598 * C20886 +
            C21290 * C20885 + C21289 * C20884 + C21288 * C20883) *
               C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
             C513 * C2267 + C512 * C2268) *
                C50800) *
               C50662 * C270 -
           ((C901 * C2268 + C900 * C2267 +
             (C117 * C867 + C883 + C883 + C50758 * C877) * C2266) *
                C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C50662 * C271 +
           (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
             C343 * C2267 + C344 * C2268) *
                C50886 +
            ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
             C5338 * C2267 + C5339 * C2268) *
                C50800) *
               C50662 * C272) *
              C273 +
          (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
            (C900 * C2266 + C901 * C2267 + C902 * C2268) * C50800) *
               C50662 * C271 -
           ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C50662 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C2268 +
             C5339 * C2267 + C5338 * C2266) *
                C50800 +
            (C345 * C2268 + C344 * C2267 + C343 * C2266) * C50886) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 + C168 * C2267 +
            C169 * C2268) *
               C50886 +
           ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 + C513 * C2267 +
            C512 * C2268) *
               C50800) *
              C50662 * C50646 * C113 -
          ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
           (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
              C50662 * C50646 * C114 +
          ((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
           (C512 * C2266 + C511 * C2267 + C737 * C2268) * C50800) *
              C50662 * C50646 * C115 -
          (((C117 * C728 + C734 + C734 + C50758 * C730) * C2268 + C737 * C2267 +
            C511 * C2266) *
               C50800 +
           (C172 * C2268 + C171 * C2267 + C170 * C2266) * C50886) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50598 * C50886 +
           (C7927 * C449 + C8345 + C8345 + C7922 * C469 + C7929 * C867 + C8344 +
            C8344 + C7923 * C877 + C7931 * C1540 + C8343 + C8343 +
            C7924 * C1548) *
               C50598 * C50800) *
              C50662 * C50646 * C113 -
          ((C8376 + C8377 + C8378) * C50598 * C50800 +
           (C7987 + C7986 + C7985) * C50598 * C50886) *
              C50662 * C50646 * C114 +
          ((C7990 + C7989 + C7988) * C50598 * C50886 +
           (C8707 + C8708 + C8709) * C50598 * C50800) *
              C50662 * C50646 * C115 -
          ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 + C7929 * C870 +
            C8699 + C8699 + C7923 * C880 + C7927 * C446 + C8700 + C8700 +
            C7922 * C466) *
               C50598 * C50800 +
           (C7993 + C7992 + C7991) * C50598 * C50886) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C7927 * C449 + C8345 + C8345 + C7922 * C469 + C7929 * C867 +
             C8344 + C8344 + C7923 * C877 + C7931 * C1540 + C8343 + C8343 +
             C7924 * C1548) *
                C50598 * C50800) *
               C50662 * C270 -
           ((C7931 * C4179 + C8906 + C8906 + C7924 * C4185 + C7929 * C1540 +
             C8905 + C8905 + C7923 * C1548 + C7927 * C867 + C8904 + C8904 +
             C7922 * C877) *
                C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50662 * C271 +
           ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50598 * C50886 +
            (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 + C7929 * C4179 +
             C9838 + C9838 + C7923 * C4185 + C7931 * C9828 + C9837 + C9837 +
             C7924 * C9832) *
                C50598 * C50800) *
               C50662 * C272) *
              C273 +
          (((C8184 + C8183 + C8182) * C50598 * C50886 +
            (C8925 + C8926 + C8927) * C50598 * C50800) *
               C50662 * C271 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50662 * C270 -
           ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 + C7929 * C4178 +
             C9835 + C9835 + C7923 * C4184 + C7927 * C1539 + C9836 + C9836 +
             C7922 * C1547) *
                C50598 * C50800 +
            (C8187 + C8186 + C8185) * C50598 * C50886) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
           C5512 * C50598 * C20884 + C5513 * C50598 * C20885 +
           C7337 * C50598 * C20886) *
              C50662 * C50646 * C113 -
          (C5514 * C50598 * C20886 + C514 * C50598 * C20885 +
           C513 * C50598 * C20884 + C168 * C50598 * C20883) *
              C50662 * C50646 * C114 +
          (C169 * C50598 * C20883 + C512 * C50598 * C20884 +
           C515 * C50598 * C20885 + C5515 * C50598 * C20886) *
              C50662 * C50646 * C115 -
          ((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50598 * C20886 +
           C516 * C50598 * C20885 + C511 * C50598 * C20884 +
           C170 * C50598 * C20883) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C5512 * C50598 * C20884 + C5513 * C50598 * C20885 +
            C7337 * C50598 * C20886) *
               C50662 * C270 -
           (C16656 * C50598 * C20886 + C6430 * C50598 * C20885 +
            C6024 * C50598 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50662 * C271 +
           ((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
            C6927 * C50598 * C20884 + C17153 * C50598 * C20885 +
            (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50598 *
                C20886) *
               C50662 * C272) *
              C273 +
          ((C342 * C50598 * C20883 + C900 * C50598 * C20884 +
            C6025 * C50598 * C20885 + C16252 * C50598 * C20886) *
               C50662 * C271 -
           (C5514 * C50598 * C20886 + C514 * C50598 * C20885 +
            C513 * C50598 * C20884 + C168 * C50598 * C20883) *
               C50662 * C270 -
           ((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50598 *
                C20886 +
            C15584 * C50598 * C20885 + C5338 * C50598 * C20884 +
            C343 * C50598 * C20883) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50662 * C50918 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50662 * C50919 +
           ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50598 * C50886 +
            (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 + C7929 * C4179 +
             C9838 + C9838 + C7923 * C4185 + C7931 * C9828 + C9837 + C9837 +
             C7924 * C9832) *
                C50598 * C50800) *
               C50662 * C1306) *
              C50866 +
          (((C8184 + C8183 + C8182) * C50598 * C50886 +
            (C8925 + C8926 + C8927) * C50598 * C50800) *
               C50662 * C50919 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50662 * C50918 -
           ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 + C7929 * C4178 +
             C9835 + C9835 + C7923 * C4184 + C7927 * C1539 + C9836 + C9836 +
             C7922 * C1547) *
                C50598 * C50800 +
            (C8187 + C8186 + C8185) * C50598 * C50886) *
               C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50662 * C50918 -
           ((C6010 + C6009 + C6027) * C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C50662 * C50919 +
           (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
             C343 * C2267 + C344 * C2268) *
                C50886 +
            ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
             C5338 * C2267 + C5339 * C2268) *
                C50800) *
               C50662 * C1306) *
              C50866 +
          (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
            (C6015 + C6016 + C6017) * C50800) *
               C50662 * C50919 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C50662 * C50918 -
           (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C2268 +
             C5339 * C2267 + C5338 * C2266) *
                C50800 +
            (C345 * C2268 + C344 * C2267 + C343 * C2266) * C50886) *
               C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50662 * C50918 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50662 * C50919 +
           ((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
            C6927 * C50598 * C20884 + C17153 * C50598 * C20885 +
            (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50598 *
                C20886) *
               C50662 * C1306) *
              C50866 +
          ((C342 * C50598 * C20883 + C21424 * C20884 + C21425 * C20885 +
            C21426 * C20886) *
               C50662 * C50919 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C50662 * C50918 -
           ((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50598 *
                C20886 +
            C15584 * C50598 * C20885 + C5338 * C50598 * C20884 +
            C343 * C50598 * C20883) *
               C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50875 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50726) *
              C50918 +
          (((C13515 + C13516 + C13517) * C50598 * C50886 +
            (C13926 + C13927 + C13928) * C50598 * C50800) *
               C50726 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50875) *
              C50919 +
          (((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50598 * C50886 +
            (C14430 + C14431 + C14432) * C50598 * C50800) *
               C50875 -
           ((C7931 * C11661 + C14421 + C14421 + C7924 * C11663 + C7929 * C9330 +
             C14422 + C14422 + C7923 * C9334 + C7927 * C3678 + C14423 + C14423 +
             C7922 * C3684) *
                C50598 * C50800 +
            (C14432 + C14431 + C14430) * C50598 * C50886) *
               C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50875 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C50726) *
              C50918 +
          (((C6027 + C6009 + C6010) * C50886 +
            (C6431 + C6423 + C6424) * C50800) *
               C50726 -
           ((C6010 + C6009 + C6027) * C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C50875) *
              C50919 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
             C343 * C2267 + C344 * C2268) *
                C50886 +
            (C6928 + C6920 + C6921) * C50800) *
               C50875 -
           (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C2268 +
             (C117 * C3677 + C6923 + C6923 + C50758 * C3683) * C2267 +
             (C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C2266) *
                C50800 +
            (C6921 + C6920 + C6928) * C50886) *
               C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50875 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50726) *
              C50918 +
          ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
            C21696 * C20886) *
               C50726 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50875) *
              C50919 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
            C22023 * C20884 + C22024 * C20885 + C22031 * C20886) *
               C50875 -
           ((C117 * C14822 + C22027 + C22027 + C50758 * C14826) * C50598 *
                C20886 +
            C22031 * C20885 + C22024 * C20884 + C22023 * C20883) *
               C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                 C168 * C2267 + C169 * C2268) *
                    C50886 +
                (C5516 + C5488 + C5489) * C50800) *
                   C50662 * C1000 -
               ((C6010 + C6009 + C6027) * C50800 +
                (C341 * C2268 + C342 * C2267 +
                 (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                    C50886) *
                   C50662 * C50698) *
                  C1002 +
              (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                (C6015 + C6016 + C6017) * C50800) *
                   C50662 * C50698 -
               ((C5500 + C5499 + C5498) * C50800 +
                (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                   C50662 * C1000) *
                  C1003 +
              (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                (C5810 + C5811 + C5812) * C50800) *
                   C50662 * C1000 -
               (((C117 * C871 + C893 + C893 + C50758 * C881) * C2268 +
                 C902 * C2267 + C901 * C2266) *
                    C50800 +
                (C628 * C2268 + C340 * C2267 + C341 * C2266) * C50886) *
                   C50662 * C50698) *
                  C1004) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                C168 * C2267 + C169 * C2268) *
                   C50886 +
               (C5516 + C5488 + C5489) * C50800) *
                  C50662 * C1071 -
              ((C6010 + C6009 + C6027) * C50800 +
               (C341 * C2268 + C342 * C2267 +
                (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                   C50886) *
                  C50662 * C1072 +
              (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                C343 * C2267 + C344 * C2268) *
                   C50886 +
               ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                C5338 * C2267 + C5339 * C2268) *
                   C50800) *
                  C50662 * C1073 -
              (((C117 * C4177 + C6272 + C6272 + C50758 * C4183) * C2268 +
                (C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C2267 +
                (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C2266) *
                   C50800 +
               ((C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C2268 +
                (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C2267 +
                (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C2266) *
                   C50886) *
                  C50662 * C1074) *
             C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C443 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C444 +
           ((C5517 + C5491 + C5490) * C50886 +
            ((C117 * C1824 + C1837 + C1837 + C50758 * C1832) * C2266 +
             C5514 * C2267 + C5515 * C2268) *
                C50800) *
               C445) *
              C1000 +
          (((C6027 + C6009 + C6010) * C50886 +
            (C6431 + C6423 + C6424) * C50800) *
               C444 -
           ((C6010 + C6009 + C6027) * C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C443 -
           (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C2268 +
             (C117 * C4583 + C6426 + C6426 + C50758 * C4589) * C2267 +
             (C117 * C4584 + C6427 + C6427 + C50758 * C4590) * C2266) *
                C50800 +
            (C6424 + C6423 + C6431) * C50886) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50662 * C1000 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50662 * C50698) *
              C1002 +
          (((C8184 + C8183 + C8182) * C50598 * C50886 +
            (C8925 + C8926 + C8927) * C50598 * C50800) *
               C50662 * C50698 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50662 * C1000) *
              C1003 +
          (((C7990 + C7989 + C7988) * C50598 * C50886 +
            (C8707 + C8708 + C8709) * C50598 * C50800) *
               C50662 * C1000 -
           ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 + C7929 * C1538 +
             C8917 + C8917 + C7923 * C1546 + C7927 * C869 + C8918 + C8918 +
             C7922 * C879) *
                C50598 * C50800 +
            (C8545 + C8544 + C8543) * C50598 * C50886) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50598 * C50886 +
           (C13011 + C13012 + C13013) * C50598 * C50800) *
              C50662 * C1071 -
          ((C13517 + C13516 + C13515) * C50598 * C50800 +
           (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
            C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
            C7922 * C298) *
               C50598 * C50886) *
              C50662 * C1072 +
          ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
            C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
            C7924 * C3523) *
               C50598 * C50886 +
           (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 + C7929 * C4179 +
            C9838 + C9838 + C7923 * C4185 + C7931 * C9828 + C9837 + C9837 +
            C7924 * C9832) *
               C50598 * C50800) *
              C50662 * C1073 -
          ((C7931 * C11994 + C13762 + C13762 + C7924 * C11996 + C7929 * C9828 +
            C13763 + C13763 + C7923 * C9832 + C7927 * C4179 + C13764 + C13764 +
            C7922 * C4185) *
               C50598 * C50800 +
           (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 + C7929 * C3517 +
            C9182 + C9182 + C7923 * C3523 + C7927 * C1079 + C9183 + C9183 +
            C7922 * C1087) *
               C50598 * C50886) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C443 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C444 +
           ((C13016 + C13015 + C13014) * C50598 * C50886 +
            (C7927 * C1824 + C10241 + C10241 + C7922 * C1832 + C7929 * C4584 +
             C10240 + C10240 + C7923 * C4590 + C7931 * C10230 + C10239 +
             C10239 + C7924 * C10234) *
                C50598 * C50800) *
               C445) *
              C1000 +
          (((C13515 + C13516 + C13517) * C50598 * C50886 +
            (C13926 + C13927 + C13928) * C50598 * C50800) *
               C444 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C443 -
           ((C7931 * C12263 + C13917 + C13917 + C7924 * C12265 +
             C7929 * C10230 + C13918 + C13918 + C7923 * C10234 + C7927 * C4584 +
             C13919 + C13919 + C7922 * C4590) *
                C50598 * C50800 +
            (C13928 + C13927 + C13926) * C50598 * C50886) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50662 * C1000 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50662 * C50698) *
              C1002 +
          ((C342 * C50598 * C20883 + C21424 * C20884 + C21425 * C20885 +
            C21426 * C20886) *
               C50662 * C50698 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C50662 * C1000) *
              C1003 +
          ((C169 * C50598 * C20883 + C21288 * C20884 + C21289 * C20885 +
            C21290 * C20886) *
               C50662 * C1000 -
           ((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50598 * C20886 +
            C6026 * C50598 * C20885 + C901 * C50598 * C20884 +
            C341 * C50598 * C20883) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
           C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
              C50662 * C1071 -
          (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
           (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
              C50662 * C1072 +
          ((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
           C6927 * C50598 * C20884 + C17153 * C50598 * C20885 +
           (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50598 *
               C20886) *
              C50662 * C1073 -
          ((C117 * C12263 + C21591 + C21591 + C50758 * C12265) * C50598 *
               C20886 +
           (C117 * C9330 + C16498 + C16498 + C50758 * C9334) * C50598 * C20885 +
           (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C50598 * C20884 +
           (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C50598 * C20883) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C443 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C444 +
           (C21085 * C20883 + C21086 * C20884 + C21087 * C20885 +
            (C117 * C17545 + C17556 + C17556 + C50758 * C17549) * C50598 *
                C20886) *
               C445) *
              C1000 +
          ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
            C21696 * C20886) *
               C444 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C443 -
           ((C117 * C20314 + C21692 + C21692 + C50758 * C20316) * C50598 *
                C20886 +
            C21696 * C20885 + C21423 * C20884 + C21422 * C20883) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
              C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
              C7924 * C299) *
                 C50598 * C50886 +
             (C13011 + C13012 + C13013) * C50598 * C50800) *
                C50875 -
            ((C13014 + C13015 + C13016) * C50598 * C50800 +
             (C13013 + C13012 + C13011) * C50598 * C50886) *
                C50726) *
               C1000 +
           (((C13515 + C13516 + C13517) * C50598 * C50886 +
             (C13926 + C13927 + C13928) * C50598 * C50800) *
                C50726 -
            ((C13517 + C13516 + C13515) * C50598 * C50800 +
             (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
              C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
              C7922 * C298) *
                 C50598 * C50886) *
                C50875) *
               C50698) *
              C50866 +
          ((((C8378 + C8377 + C8376) * C50598 * C50886 +
             (C8379 + C8380 + C8381) * C50598 * C50800) *
                C50726 -
            ((C8376 + C8377 + C8378) * C50598 * C50800 +
             (C7987 + C7986 + C7985) * C50598 * C50886) *
                C50875) *
               C1000 +
           (((C8184 + C8183 + C8182) * C50598 * C50886 +
             (C8925 + C8926 + C8927) * C50598 * C50800) *
                C50875 -
            ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 + C7929 * C3677 +
              C9337 + C9337 + C7923 * C3683 + C7927 * C1192 + C9338 + C9338 +
              C7922 * C1200) *
                 C50598 * C50800 +
             (C8927 + C8926 + C8925) * C50598 * C50886) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
              C168 * C2267 + C169 * C2268) *
                 C50886 +
             (C5516 + C5488 + C5489) * C50800) *
                C50875 -
            ((C5490 + C5491 + C5517) * C50800 +
             (C5489 + C5488 + C5516) * C50886) *
                C50726) *
               C1000 +
           (((C6027 + C6009 + C6010) * C50886 +
             (C6431 + C6423 + C6424) * C50800) *
                C50726 -
            ((C6010 + C6009 + C6027) * C50800 +
             (C341 * C2268 + C342 * C2267 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                 C50886) *
                C50875) *
               C50698) *
              C50866 +
          ((((C5498 + C5499 + C5500) * C50886 +
             (C5501 + C5502 + C5503) * C50800) *
                C50726 -
            ((C5500 + C5499 + C5498) * C50800 +
             (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                C50875) *
               C1000 +
           (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
             (C6015 + C6016 + C6017) * C50800) *
                C50875 -
            (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C2268 +
              C6026 * C2267 + C6025 * C2266) *
                 C50800 +
             (C6017 + C6016 + C6015) * C50886) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
             C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
                C50875 -
            (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
             C21084 * C20883) *
                C50726) *
               C1000 +
           ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
             C21696 * C20886) *
                C50726 -
            (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
                C50875) *
               C50698) *
              C50866 +
          (((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
             C21091 * C20886) *
                C50726 -
            (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
             C168 * C50598 * C20883) *
                C50875) *
               C1000 +
           ((C342 * C50598 * C20883 + C21424 * C20884 + C21425 * C20885 +
             C21426 * C20886) *
                C50875 -
            ((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50598 *
                 C20886 +
             C21426 * C20885 + C21425 * C20884 + C21424 * C20883) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 + C168 * C2267 +
            C169 * C2268) *
               C50886 +
           (C5516 + C5488 + C5489) * C50800) *
              C50662 * C1071 -
          ((C6010 + C6009 + C6027) * C50800 +
           (C341 * C2268 + C342 * C2267 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
               C50886) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 + C343 * C2267 +
            C344 * C2268) *
               C50886 +
           ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
            C5338 * C2267 + C5339 * C2268) *
               C50800) *
              C50662 * C1073 -
          (((C117 * C4177 + C6272 + C6272 + C50758 * C4183) * C2268 +
            (C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C2267 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C2266) *
               C50800 +
           ((C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C2268 +
            (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C2267 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C2266) *
               C50886) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50662 * C1000 -
           ((C6010 + C6009 + C6027) * C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
            (C6015 + C6016 + C6017) * C50800) *
               C50662 * C50698 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
            (C5810 + C5811 + C5812) * C50800) *
               C50662 * C1000 -
           (((C117 * C871 + C893 + C893 + C50758 * C881) * C2268 +
             C902 * C2267 + C901 * C2266) *
                C50800 +
            (C628 * C2268 + C340 * C2267 + C341 * C2266) * C50886) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50662 * C1000 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50662 * C50698) *
              C1002 +
          (((C8184 + C8183 + C8182) * C50598 * C50886 +
            (C8925 + C8926 + C8927) * C50598 * C50800) *
               C50662 * C50698 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50662 * C1000) *
              C1003 +
          (((C7990 + C7989 + C7988) * C50598 * C50886 +
            (C8707 + C8708 + C8709) * C50598 * C50800) *
               C50662 * C1000 -
           ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 + C7929 * C1538 +
             C8917 + C8917 + C7923 * C1546 + C7927 * C869 + C8918 + C8918 +
             C7922 * C879) *
                C50598 * C50800 +
            (C8545 + C8544 + C8543) * C50598 * C50886) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50598 * C50886 +
           (C13011 + C13012 + C13013) * C50598 * C50800) *
              C50662 * C1071 -
          ((C13517 + C13516 + C13515) * C50598 * C50800 +
           (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
            C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
            C7922 * C298) *
               C50598 * C50886) *
              C50662 * C1072 +
          ((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
            C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
            C7924 * C3523) *
               C50598 * C50886 +
           (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 + C7929 * C4179 +
            C9838 + C9838 + C7923 * C4185 + C7931 * C9828 + C9837 + C9837 +
            C7924 * C9832) *
               C50598 * C50800) *
              C50662 * C1073 -
          ((C7931 * C11994 + C13762 + C13762 + C7924 * C11996 + C7929 * C9828 +
            C13763 + C13763 + C7923 * C9832 + C7927 * C4179 + C13764 + C13764 +
            C7922 * C4185) *
               C50598 * C50800 +
           (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 + C7929 * C3517 +
            C9182 + C9182 + C7923 * C3523 + C7927 * C1079 + C9183 + C9183 +
            C7922 * C1087) *
               C50598 * C50886) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50662 * C1000 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50662 * C50698) *
              C1002 +
          ((C342 * C50598 * C20883 + C21424 * C20884 + C21425 * C20885 +
            C21426 * C20886) *
               C50662 * C50698 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C50662 * C1000) *
              C1003 +
          ((C169 * C50598 * C20883 + C21288 * C20884 + C21289 * C20885 +
            C21290 * C20886) *
               C50662 * C1000 -
           ((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50598 * C20886 +
            C6026 * C50598 * C20885 + C901 * C50598 * C20884 +
            C341 * C50598 * C20883) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
           C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
              C50662 * C1071 -
          (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
           (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
              C50662 * C1072 +
          ((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
           C6927 * C50598 * C20884 + C17153 * C50598 * C20885 +
           (C117 * C10230 + C17150 + C17150 + C50758 * C10234) * C50598 *
               C20886) *
              C50662 * C1073 -
          ((C117 * C12263 + C21591 + C21591 + C50758 * C12265) * C50598 *
               C20886 +
           (C117 * C9330 + C16498 + C16498 + C50758 * C9334) * C50598 * C20885 +
           (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C50598 * C20884 +
           (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C50598 * C20883) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
              C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
              C7924 * C299) *
                 C50598 * C50886 +
             (C13011 + C13012 + C13013) * C50598 * C50800) *
                C1651 -
            ((C13014 + C13015 + C13016) * C50598 * C50800 +
             (C13013 + C13012 + C13011) * C50598 * C50886) *
                C50726) *
               C50874 +
           (((C13515 + C13516 + C13517) * C50598 * C50886 +
             (C13926 + C13927 + C13928) * C50598 * C50800) *
                C50726 -
            ((C13517 + C13516 + C13515) * C50598 * C50800 +
             (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
              C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
              C7922 * C298) *
                 C50598 * C50886) *
                C1651) *
               C50698) *
              C50866 +
          ((((C8378 + C8377 + C8376) * C50598 * C50886 +
             (C8379 + C8380 + C8381) * C50598 * C50800) *
                C50726 -
            ((C8376 + C8377 + C8378) * C50598 * C50800 +
             (C7987 + C7986 + C7985) * C50598 * C50886) *
                C1651) *
               C50874 +
           (((C8184 + C8183 + C8182) * C50598 * C50886 +
             (C8925 + C8926 + C8927) * C50598 * C50800) *
                C1651 -
            ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 + C7929 * C3677 +
              C9337 + C9337 + C7923 * C3683 + C7927 * C1192 + C9338 + C9338 +
              C7922 * C1200) *
                 C50598 * C50800 +
             (C8927 + C8926 + C8925) * C50598 * C50886) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
              C168 * C2267 + C169 * C2268) *
                 C50886 +
             (C5516 + C5488 + C5489) * C50800) *
                C1651 -
            ((C5490 + C5491 + C5517) * C50800 +
             (C5489 + C5488 + C5516) * C50886) *
                C50726) *
               C50874 +
           (((C6027 + C6009 + C6010) * C50886 +
             (C6431 + C6423 + C6424) * C50800) *
                C50726 -
            ((C6010 + C6009 + C6027) * C50800 +
             (C341 * C2268 + C342 * C2267 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                 C50886) *
                C1651) *
               C50698) *
              C50866 +
          ((((C5498 + C5499 + C5500) * C50886 +
             (C5501 + C5502 + C5503) * C50800) *
                C50726 -
            ((C5500 + C5499 + C5498) * C50800 +
             (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                C1651) *
               C50874 +
           (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
             (C6015 + C6016 + C6017) * C50800) *
                C1651 -
            (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C2268 +
              C6026 * C2267 + C6025 * C2266) *
                 C50800 +
             (C6017 + C6016 + C6015) * C50886) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
             C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
                C1651 -
            (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
             C21084 * C20883) *
                C50726) *
               C50874 +
           ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
             C21696 * C20886) *
                C50726 -
            (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
                C1651) *
               C50698) *
              C50866 +
          (((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
             C21091 * C20886) *
                C50726 -
            (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
             C168 * C50598 * C20883) *
                C1651) *
               C50874 +
           ((C342 * C50598 * C20883 + C21424 * C20884 + C21425 * C20885 +
             C21426 * C20886) *
                C1651 -
            ((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50598 *
                 C20886 +
             C21426 * C20885 + C21425 * C20884 + C21424 * C20883) *
                C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50920 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50921 +
           ((C13016 + C13015 + C13014) * C50598 * C50886 +
            (C14844 + C14845 + C14846) * C50598 * C50800) *
               C2067) *
              C50874 +
          (((C13515 + C13516 + C13517) * C50598 * C50886 +
            (C13926 + C13927 + C13928) * C50598 * C50800) *
               C50921 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C50920 -
           ((C7931 * C12263 + C13917 + C13917 + C7924 * C12265 +
             C7929 * C10230 + C13918 + C13918 + C7923 * C10234 + C7927 * C4584 +
             C13919 + C13919 + C7922 * C4590) *
                C50598 * C50800 +
            (C13928 + C13927 + C13926) * C50598 * C50886) *
               C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50920 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C50921 +
           ((C5517 + C5491 + C5490) * C50886 +
            (C7338 + C7330 + C7331) * C50800) *
               C2067) *
              C50874 +
          (((C6027 + C6009 + C6010) * C50886 +
            (C6431 + C6423 + C6424) * C50800) *
               C50921 -
           ((C6010 + C6009 + C6027) * C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C50920 -
           (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C2268 +
             (C117 * C4583 + C6426 + C6426 + C50758 * C4589) * C2267 +
             (C117 * C4584 + C6427 + C6427 + C50758 * C4590) * C2266) *
                C50800 +
            (C6424 + C6423 + C6431) * C50886) *
               C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50920 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50921 +
           (C21085 * C20883 + C21086 * C20884 + C21087 * C20885 +
            C22303 * C20886) *
               C2067) *
              C50874 +
          ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
            C21696 * C20886) *
               C50921 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C50920 -
           ((C117 * C20314 + C21692 + C21692 + C50758 * C20316) * C50598 *
                C20886 +
            C21696 * C20885 + C21423 * C20884 + C21422 * C20883) *
               C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                 C168 * C2267 + C169 * C2268) *
                    C50886 +
                (C5516 + C5488 + C5489) * C50800) *
                   C1651 -
               ((C5490 + C5491 + C5517) * C50800 +
                (C5489 + C5488 + C5516) * C50886) *
                   C50726) *
                  C50646 * C1002 +
              (((C5498 + C5499 + C5500) * C50886 +
                (C5501 + C5502 + C5503) * C50800) *
                   C50726 -
               ((C5500 + C5499 + C5498) * C50800 +
                (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                   C1651) *
                  C50646 * C1003 +
              (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                (C5810 + C5811 + C5812) * C50800) *
                   C1651 -
               (((C117 * C455 + C498 + C498 + C50758 * C475) * C2268 +
                 C516 * C2267 + C515 * C2266) *
                    C50800 +
                (C5812 + C5811 + C5810) * C50886) *
                   C50726) *
                  C50646 * C1004) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                 C168 * C2267 + C169 * C2268) *
                    C50886 +
                (C5516 + C5488 + C5489) * C50800) *
                   C1651 -
               ((C5490 + C5491 + C5517) * C50800 +
                (C5489 + C5488 + C5516) * C50886) *
                   C50726) *
                  C270 +
              (((C6027 + C6009 + C6010) * C50886 +
                (C6431 + C6423 + C6424) * C50800) *
                   C50726 -
               ((C6010 + C6009 + C6027) * C50800 +
                (C341 * C2268 + C342 * C2267 +
                 (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                    C50886) *
                   C1651) *
                  C271 +
              ((((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                 C343 * C2267 + C344 * C2268) *
                    C50886 +
                (C6928 + C6920 + C6921) * C50800) *
                   C1651 -
               (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C2268 +
                 (C117 * C3677 + C6923 + C6923 + C50758 * C3683) * C2267 +
                 (C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C2266) *
                    C50800 +
                (C6921 + C6920 + C6928) * C50886) *
                   C50726) *
                  C272) *
             C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 + C168 * C2267 +
            C169 * C2268) *
               C50886 +
           (C5516 + C5488 + C5489) * C50800) *
              C1817 -
          ((C5490 + C5491 + C5517) * C50800 +
           (C5489 + C5488 + C5516) * C50886) *
              C1818 +
          ((C5517 + C5491 + C5490) * C50886 +
           (C7338 + C7330 + C7331) * C50800) *
              C1819 -
          (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C2268 +
            (C117 * C7319 + C7333 + C7333 + C50758 * C7325) * C2267 +
            (C117 * C7320 + C7334 + C7334 + C50758 * C7326) * C2266) *
               C50800 +
           (C7331 + C7330 + C7338) * C50886) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C1651 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50726) *
              C50646 * C1002 +
          (((C8378 + C8377 + C8376) * C50598 * C50886 +
            (C8379 + C8380 + C8381) * C50598 * C50800) *
               C50726 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C1651) *
              C50646 * C1003 +
          (((C7990 + C7989 + C7988) * C50598 * C50886 +
            (C8707 + C8708 + C8709) * C50598 * C50800) *
               C1651 -
           ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 + C7929 * C1191 +
             C8362 + C8362 + C7923 * C1199 + C7927 * C452 + C8363 + C8363 +
             C7922 * C472) *
                C50598 * C50800 +
            (C8709 + C8708 + C8707) * C50598 * C50886) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C1651 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50726) *
              C270 +
          (((C13515 + C13516 + C13517) * C50598 * C50886 +
            (C13926 + C13927 + C13928) * C50598 * C50800) *
               C50726 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C1651) *
              C271 +
          (((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50598 * C50886 +
            (C14430 + C14431 + C14432) * C50598 * C50800) *
               C1651 -
           ((C7931 * C11661 + C14421 + C14421 + C7924 * C11663 + C7929 * C9330 +
             C14422 + C14422 + C7923 * C9334 + C7927 * C3678 + C14423 + C14423 +
             C7922 * C3684) *
                C50598 * C50800 +
            (C14432 + C14431 + C14430) * C50598 * C50886) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 + C7935 +
            C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
            C7924 * C299) *
               C50598 * C50886 +
           (C13011 + C13012 + C13013) * C50598 * C50800) *
              C1817 -
          ((C13014 + C13015 + C13016) * C50598 * C50800 +
           (C13013 + C13012 + C13011) * C50598 * C50886) *
              C1818 +
          ((C13016 + C13015 + C13014) * C50598 * C50886 +
           (C14844 + C14845 + C14846) * C50598 * C50800) *
              C1819 -
          ((C7931 * C14822 + C14835 + C14835 + C7924 * C14826 + C7929 * C14823 +
            C14836 + C14836 + C7923 * C14827 + C7927 * C7320 + C14837 + C14837 +
            C7922 * C7326) *
               C50598 * C50800 +
           (C14846 + C14845 + C14844) * C50598 * C50886) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C1651 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50726) *
              C50646 * C1002 +
          ((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
            C21091 * C20886) *
               C50726 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C1651) *
              C50646 * C1003 +
          ((C169 * C50598 * C20883 + C21288 * C20884 + C21289 * C20885 +
            C21290 * C20886) *
               C1651 -
           ((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50598 * C20886 +
            C21290 * C20885 + C21289 * C20884 + C21288 * C20883) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C1651 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50726) *
              C270 +
          ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
            C21696 * C20886) *
               C50726 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C1651) *
              C271 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
            C22023 * C20884 + C22024 * C20885 + C22031 * C20886) *
               C1651 -
           ((C117 * C14822 + C22027 + C22027 + C50758 * C14826) * C50598 *
                C20886 +
            C22031 * C20885 + C22024 * C20884 + C22023 * C20883) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
           C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
              C1817 -
          (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
           C21084 * C20883) *
              C1818 +
          (C21085 * C20883 + C21086 * C20884 + C21087 * C20885 +
           C22303 * C20886) *
              C1819 -
          ((C117 * C22293 + C22299 + C22299 + C50758 * C22295) * C50598 *
               C20886 +
           C22303 * C20885 + C21087 * C20884 + C21086 * C20883) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C50920 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50921 +
           ((C13016 + C13015 + C13014) * C50598 * C50886 +
            (C14844 + C14845 + C14846) * C50598 * C50800) *
               C2067) *
              C50646 * C50866 +
          (((C8378 + C8377 + C8376) * C50598 * C50886 +
            (C8379 + C8380 + C8381) * C50598 * C50800) *
               C50921 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C50920 -
           ((C7931 * C10229 + C10236 + C10236 + C7924 * C10233 + C7929 * C4583 +
             C10237 + C10237 + C7923 * C4589 + C7927 * C1823 + C10238 + C10238 +
             C7922 * C1831) *
                C50598 * C50800 +
            (C8381 + C8380 + C8379) * C50598 * C50886) *
               C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C50920 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C50921 +
           ((C5517 + C5491 + C5490) * C50886 +
            (C7338 + C7330 + C7331) * C50800) *
               C2067) *
              C50646 * C50866 +
          (((C5498 + C5499 + C5500) * C50886 +
            (C5501 + C5502 + C5503) * C50800) *
               C50921 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C50920 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C2268 +
             C5515 * C2267 + C5514 * C2266) *
                C50800 +
            (C5503 + C5502 + C5501) * C50886) *
               C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C50920 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50921 +
           (C21085 * C20883 + C21086 * C20884 + C21087 * C20885 +
            C22303 * C20886) *
               C2067) *
              C50646 * C50866 +
          ((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
            C21091 * C20886) *
               C50921 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C50920 -
           ((C117 * C17544 + C17555 + C17555 + C50758 * C17548) * C50598 *
                C20886 +
            C21091 * C20885 + C21090 * C20884 + C21089 * C20883) *
               C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C1651 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C50726) *
              C270 +
          (((C6027 + C6009 + C6010) * C50886 +
            (C6431 + C6423 + C6424) * C50800) *
               C50726 -
           ((C6010 + C6009 + C6027) * C50800 +
            (C341 * C2268 + C342 * C2267 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                C50886) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
             C343 * C2267 + C344 * C2268) *
                C50886 +
            (C6928 + C6920 + C6921) * C50800) *
               C1651 -
           (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C2268 +
             (C117 * C3677 + C6923 + C6923 + C50758 * C3683) * C2267 +
             (C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C2266) *
                C50800 +
            (C6921 + C6920 + C6928) * C50886) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
             C168 * C2267 + C169 * C2268) *
                C50886 +
            (C5516 + C5488 + C5489) * C50800) *
               C1651 -
           ((C5490 + C5491 + C5517) * C50800 +
            (C5489 + C5488 + C5516) * C50886) *
               C50726) *
              C50646 * C1002 +
          (((C5498 + C5499 + C5500) * C50886 +
            (C5501 + C5502 + C5503) * C50800) *
               C50726 -
           ((C5500 + C5499 + C5498) * C50800 +
            (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
               C1651) *
              C50646 * C1003 +
          (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
            (C5810 + C5811 + C5812) * C50800) *
               C1651 -
           (((C117 * C455 + C498 + C498 + C50758 * C475) * C2268 +
             C516 * C2267 + C515 * C2266) *
                C50800 +
            (C5812 + C5811 + C5810) * C50886) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C1651 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50726) *
              C50646 * C1002 +
          (((C8378 + C8377 + C8376) * C50598 * C50886 +
            (C8379 + C8380 + C8381) * C50598 * C50800) *
               C50726 -
           ((C8376 + C8377 + C8378) * C50598 * C50800 +
            (C7987 + C7986 + C7985) * C50598 * C50886) *
               C1651) *
              C50646 * C1003 +
          (((C7990 + C7989 + C7988) * C50598 * C50886 +
            (C8707 + C8708 + C8709) * C50598 * C50800) *
               C1651 -
           ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 + C7929 * C1191 +
             C8362 + C8362 + C7923 * C1199 + C7927 * C452 + C8363 + C8363 +
             C7922 * C472) *
                C50598 * C50800 +
            (C8709 + C8708 + C8707) * C50598 * C50886) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 + C7929 * C278 +
             C7935 + C7935 + C7923 * C298 + C7931 * C279 + C7936 + C7936 +
             C7924 * C299) *
                C50598 * C50886 +
            (C13011 + C13012 + C13013) * C50598 * C50800) *
               C1651 -
           ((C13014 + C13015 + C13016) * C50598 * C50800 +
            (C13013 + C13012 + C13011) * C50598 * C50886) *
               C50726) *
              C270 +
          (((C13515 + C13516 + C13517) * C50598 * C50886 +
            (C13926 + C13927 + C13928) * C50598 * C50800) *
               C50726 -
           ((C13517 + C13516 + C13515) * C50598 * C50800 +
            (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 + C7929 * C279 +
             C8150 + C8150 + C7923 * C299 + C7927 * C278 + C8151 + C8151 +
             C7922 * C298) *
                C50598 * C50886) *
               C1651) *
              C271 +
          (((C7927 * C279 + C8152 + C8152 + C7922 * C299 + C7929 * C1079 +
             C8153 + C8153 + C7923 * C1087 + C7931 * C3517 + C8154 + C8154 +
             C7924 * C3523) *
                C50598 * C50886 +
            (C14430 + C14431 + C14432) * C50598 * C50800) *
               C1651 -
           ((C7931 * C11661 + C14421 + C14421 + C7924 * C11663 + C7929 * C9330 +
             C14422 + C14422 + C7923 * C9334 + C7927 * C3678 + C14423 + C14423 +
             C7922 * C3684) *
                C50598 * C50800 +
            (C14432 + C14431 + C14430) * C50598 * C50886) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C1651 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50726) *
              C50646 * C1002 +
          ((C21088 * C20883 + C21089 * C20884 + C21090 * C20885 +
            C21091 * C20886) *
               C50726 -
           (C21090 * C20886 + C21089 * C20885 + C21088 * C20884 +
            C168 * C50598 * C20883) *
               C1651) *
              C50646 * C1003 +
          ((C169 * C50598 * C20883 + C21288 * C20884 + C21289 * C20885 +
            C21290 * C20886) *
               C1651 -
           ((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50598 * C20886 +
            C21290 * C20885 + C21289 * C20884 + C21288 * C20883) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50598 * C20883 +
            C21084 * C20884 + C21085 * C20885 + C21086 * C20886) *
               C1651 -
           (C21087 * C20886 + C21086 * C20885 + C21085 * C20884 +
            C21084 * C20883) *
               C50726) *
              C270 +
          ((C21421 * C20883 + C21422 * C20884 + C21423 * C20885 +
            C21696 * C20886) *
               C50726 -
           (C21423 * C20886 + C21422 * C20885 + C21421 * C20884 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50598 * C20883) *
               C1651) *
              C271 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50598 * C20883 +
            C22023 * C20884 + C22024 * C20885 + C22031 * C20886) *
               C1651 -
           ((C117 * C14822 + C22027 + C22027 + C50758 * C14826) * C50598 *
                C20886 +
            C22031 * C20885 + C22024 * C20884 + C22023 * C20883) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C50662 * C50874 -
                    ((C901 * C22731 + C900 * C50899 + C6024 * C50915) * C50800 +
                     (C341 * C22731 + C342 * C50899 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                         C32092) *
                        C50662 * C50698) *
                       C50916 +
                   (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
                     (C900 * C50915 + C901 * C50899 + C902 * C22731) * C50800) *
                        C50662 * C50698 -
                    ((C32395 + C32394 + C32393) * C50800 +
                     (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                        C50662 * C50874) *
                       C50917 +
                   (((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
                     (C512 * C50915 + C511 * C50899 + C737 * C22731) * C50800) *
                        C50662 * C50874 -
                    (((C117 * C871 + C893 + C893 + C50758 * C881) * C22731 +
                      C902 * C50899 + C901 * C50915) *
                         C50800 +
                     (C628 * C22731 + C340 * C50899 + C341 * C50915) * C32092) *
                        C50662 * C50698) *
                       C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
              C168 * C50899 + C169 * C22731) *
                 C32092 +
             (C32387 + C32388 + C32389) * C50800) *
                C50875 -
            ((C32390 + C32391 + C32392) * C50800 +
             (C32389 + C32388 + C32387) * C32092) *
                C50726) *
               C50874 +
           (((C32888 + C32889 + C32890) * C32092 +
             (C6430 * C50915 + C6025 * C50899 + C6026 * C22731) * C50800) *
                C50726 -
            ((C32890 + C32889 + C32888) * C50800 +
             (C341 * C22731 + C342 * C50899 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                 C32092) *
                C50875) *
               C50698) *
              C273 +
          ((((C32393 + C32394 + C32395) * C32092 +
             (C32396 + C32397 + C32398) * C50800) *
                C50726 -
            ((C32395 + C32394 + C32393) * C50800 +
             (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                C50875) *
               C50874 +
           (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
             (C32891 + C32892 + C32893) * C50800) *
                C50875 -
            (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C22731 +
              C6026 * C50899 + C6025 * C50915) *
                 C50800 +
             (C32893 + C32892 + C32891) * C32092) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C5512 * C50915 + C513 * C50899 + C512 * C22731) * C50800) *
               C50662 * C270 -
           ((C901 * C22731 + C900 * C50899 + C6024 * C50915) * C50800 +
            (C341 * C22731 + C342 * C50899 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                C32092) *
               C50662 * C271 +
           (((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
             C343 * C50899 + C344 * C22731) *
                C32092 +
            (C6927 * C50915 + C5338 * C50899 + C5339 * C22731) * C50800) *
               C50662 * C272) *
              C273 +
          (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
            (C900 * C50915 + C901 * C50899 + C902 * C22731) * C50800) *
               C50662 * C271 -
           ((C511 * C22731 + C512 * C50899 + C513 * C50915) * C50800 +
            (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
               C50662 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C22731 +
             C5339 * C50899 + C5338 * C50915) *
                C50800 +
            (C345 * C22731 + C344 * C50899 + C343 * C50915) * C32092) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
            C168 * C50899 + C169 * C22731) *
               C32092 +
           (C5512 * C50915 + C513 * C50899 + C512 * C22731) * C50800) *
              C50662 * C50646 * C113 -
          ((C511 * C22731 + C512 * C50899 + C513 * C50915) * C50800 +
           (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
              C50662 * C50646 * C114 +
          ((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
           (C512 * C50915 + C511 * C50899 + C737 * C22731) * C50800) *
              C50662 * C50646 * C115 -
          (((C117 * C728 + C734 + C734 + C50758 * C730) * C22731 +
            C737 * C50899 + C511 * C50915) *
               C50800 +
           (C172 * C22731 + C171 * C50899 + C170 * C50915) * C32092) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C32387 + C32388 + C32389) * C50800) *
               C443 -
           ((C32390 + C32391 + C32392) * C50800 +
            (C32389 + C32388 + C32387) * C32092) *
               C444 +
           ((C32392 + C32391 + C32390) * C32092 +
            (C7337 * C50915 + C5514 * C50899 + C5515 * C22731) * C50800) *
               C445) *
              C50646 * C273 +
          (((C32393 + C32394 + C32395) * C32092 +
            (C32396 + C32397 + C32398) * C50800) *
               C444 -
           ((C32395 + C32394 + C32393) * C50800 +
            (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
               C443 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C22731 +
             C5515 * C50899 + C5514 * C50915) *
                C50800 +
            (C32398 + C32397 + C32396) * C32092) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C50875 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50726) *
                       C50646 * C50916 +
                   (((C32393 + C32394 + C32395) * C32092 +
                     (C32396 + C32397 + C32398) * C50800) *
                        C50726 -
                    ((C32395 + C32394 + C32393) * C50800 +
                     (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                        C50875) *
                       C50646 * C50917 +
                   (((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
                     (C32691 + C32692 + C32693) * C50800) *
                        C50875 -
                    (((C117 * C455 + C498 + C498 + C50758 * C475) * C22731 +
                      C516 * C50899 + C515 * C50915) *
                         C50800 +
                     (C32693 + C32692 + C32691) * C32092) *
                        C50726) *
                       C50646 * C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
            C168 * C50899 + C169 * C22731) *
               C32092 +
           (C5512 * C50915 + C513 * C50899 + C512 * C22731) * C50800) *
              C50662 * C50646 * C113 -
          ((C511 * C22731 + C512 * C50899 + C513 * C50915) * C50800 +
           (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
              C50662 * C50646 * C114 +
          ((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
           (C512 * C50915 + C511 * C50899 + C737 * C22731) * C50800) *
              C50662 * C50646 * C115 -
          (((C117 * C728 + C734 + C734 + C50758 * C730) * C22731 +
            C737 * C50899 + C511 * C50915) *
               C50800 +
           (C172 * C22731 + C171 * C50899 + C170 * C50915) * C32092) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C5512 * C50915 + C513 * C50899 + C512 * C22731) * C50800) *
               C50662 * C270 -
           ((C901 * C22731 + C900 * C50899 + C6024 * C50915) * C50800 +
            (C341 * C22731 + C342 * C50899 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                C32092) *
               C50662 * C271 +
           (((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
             C343 * C50899 + C344 * C22731) *
                C32092 +
            (C6927 * C50915 + C5338 * C50899 + C5339 * C22731) * C50800) *
               C50662 * C272) *
              C273 +
          (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
            (C900 * C50915 + C901 * C50899 + C902 * C22731) * C50800) *
               C50662 * C271 -
           ((C511 * C22731 + C512 * C50899 + C513 * C50915) * C50800 +
            (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
               C50662 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C22731 +
             C5339 * C50899 + C5338 * C50915) *
                C50800 +
            (C345 * C22731 + C344 * C50899 + C343 * C50915) * C32092) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C32387 + C32388 + C32389) * C50800) *
               C50662 * C50918 -
           ((C32890 + C32889 + C32888) * C50800 +
            (C341 * C22731 + C342 * C50899 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                C32092) *
               C50662 * C50919 +
           (((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
             C343 * C50899 + C344 * C22731) *
                C32092 +
            (C6927 * C50915 + C5338 * C50899 + C5339 * C22731) * C50800) *
               C50662 * C1306) *
              C50866 +
          (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
            (C32891 + C32892 + C32893) * C50800) *
               C50662 * C50919 -
           ((C32395 + C32394 + C32393) * C50800 +
            (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
               C50662 * C50918 -
           (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C22731 +
             C5339 * C50899 + C5338 * C50915) *
                C50800 +
            (C345 * C22731 + C344 * C50899 + C343 * C50915) * C32092) *
               C50662 * C1306) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C50875 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50726) *
                       C50918 +
                   (((C32888 + C32889 + C32890) * C32092 +
                     (C33284 + C33285 + C33286) * C50800) *
                        C50726 -
                    ((C32890 + C32889 + C32888) * C50800 +
                     (C341 * C22731 + C342 * C50899 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                         C32092) *
                        C50875) *
                       C50919 +
                   ((((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
                      C343 * C50899 + C344 * C22731) *
                         C32092 +
                     (C33773 + C33774 + C33775) * C50800) *
                        C50875 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C22731 +
                      C15584 * C50899 + C17153 * C50915) *
                         C50800 +
                     (C33775 + C33774 + C33773) * C32092) *
                        C50726) *
                       C1306) *
                  C50627) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
            C168 * C50899 + C169 * C22731) *
               C32092 +
           (C32387 + C32388 + C32389) * C50800) *
              C50662 * C1071 -
          ((C32890 + C32889 + C32888) * C50800 +
           (C341 * C22731 + C342 * C50899 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
               C32092) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
            C343 * C50899 + C344 * C22731) *
               C32092 +
           (C6927 * C50915 + C5338 * C50899 + C5339 * C22731) * C50800) *
              C50662 * C1073 -
          (((C117 * C4177 + C6272 + C6272 + C50758 * C4183) * C22731 +
            (C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C50899 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C50915) *
               C50800 +
           ((C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C22731 +
            (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C50899 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C50915) *
               C32092) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C32387 + C32388 + C32389) * C50800) *
               C50662 * C1000 -
           ((C32890 + C32889 + C32888) * C50800 +
            (C341 * C22731 + C342 * C50899 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                C32092) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
            (C32891 + C32892 + C32893) * C50800) *
               C50662 * C50698 -
           ((C32395 + C32394 + C32393) * C50800 +
            (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
            (C32691 + C32692 + C32693) * C50800) *
               C50662 * C1000 -
           (((C117 * C871 + C893 + C893 + C50758 * C881) * C22731 +
             C902 * C50899 + C901 * C50915) *
                C50800 +
            (C628 * C22731 + C340 * C50899 + C341 * C50915) * C32092) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C32387 + C32388 + C32389) * C50800) *
               C443 -
           ((C32390 + C32391 + C32392) * C50800 +
            (C32389 + C32388 + C32387) * C32092) *
               C444 +
           ((C32392 + C32391 + C32390) * C32092 +
            (C7337 * C50915 + C5514 * C50899 + C5515 * C22731) * C50800) *
               C445) *
              C1000 +
          (((C32888 + C32889 + C32890) * C32092 +
            (C33284 + C33285 + C33286) * C50800) *
               C444 -
           ((C32890 + C32889 + C32888) * C50800 +
            (C341 * C22731 + C342 * C50899 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                C32092) *
               C443 -
           (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C22731 +
             C16252 * C50899 + C16656 * C50915) *
                C50800 +
            (C33286 + C33285 + C33284) * C32092) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
              C168 * C50899 + C169 * C22731) *
                 C32092 +
             (C32387 + C32388 + C32389) * C50800) *
                C50875 -
            ((C32390 + C32391 + C32392) * C50800 +
             (C32389 + C32388 + C32387) * C32092) *
                C50726) *
               C1000 +
           (((C32888 + C32889 + C32890) * C32092 +
             (C33284 + C33285 + C33286) * C50800) *
                C50726 -
            ((C32890 + C32889 + C32888) * C50800 +
             (C341 * C22731 + C342 * C50899 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                 C32092) *
                C50875) *
               C50698) *
              C50866 +
          ((((C32393 + C32394 + C32395) * C32092 +
             (C32396 + C32397 + C32398) * C50800) *
                C50726 -
            ((C32395 + C32394 + C32393) * C50800 +
             (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                C50875) *
               C1000 +
           (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
             (C32891 + C32892 + C32893) * C50800) *
                C50875 -
            (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C22731 +
              C6026 * C50899 + C6025 * C50915) *
                 C50800 +
             (C32893 + C32892 + C32891) * C32092) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
             C168 * C50899 + C169 * C22731) *
                C32092 +
            (C32387 + C32388 + C32389) * C50800) *
               C50662 * C1000 -
           ((C32890 + C32889 + C32888) * C50800 +
            (C341 * C22731 + C342 * C50899 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                C32092) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
            (C32891 + C32892 + C32893) * C50800) *
               C50662 * C50698 -
           ((C32395 + C32394 + C32393) * C50800 +
            (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
            (C32691 + C32692 + C32693) * C50800) *
               C50662 * C1000 -
           (((C117 * C871 + C893 + C893 + C50758 * C881) * C22731 +
             C902 * C50899 + C901 * C50915) *
                C50800 +
            (C628 * C22731 + C340 * C50899 + C341 * C50915) * C32092) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
            C168 * C50899 + C169 * C22731) *
               C32092 +
           (C32387 + C32388 + C32389) * C50800) *
              C50662 * C1071 -
          ((C32890 + C32889 + C32888) * C50800 +
           (C341 * C22731 + C342 * C50899 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
               C32092) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
            C343 * C50899 + C344 * C22731) *
               C32092 +
           (C6927 * C50915 + C5338 * C50899 + C5339 * C22731) * C50800) *
              C50662 * C1073 -
          (((C117 * C4177 + C6272 + C6272 + C50758 * C4183) * C22731 +
            (C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C50899 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C50915) *
               C50800 +
           ((C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C22731 +
            (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C50899 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C50915) *
               C32092) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
              C168 * C50899 + C169 * C22731) *
                 C32092 +
             (C32387 + C32388 + C32389) * C50800) *
                C1651 -
            ((C32390 + C32391 + C32392) * C50800 +
             (C32389 + C32388 + C32387) * C32092) *
                C50726) *
               C50874 +
           (((C32888 + C32889 + C32890) * C32092 +
             (C33284 + C33285 + C33286) * C50800) *
                C50726 -
            ((C32890 + C32889 + C32888) * C50800 +
             (C341 * C22731 + C342 * C50899 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                 C32092) *
                C1651) *
               C50698) *
              C50866 +
          ((((C32393 + C32394 + C32395) * C32092 +
             (C32396 + C32397 + C32398) * C50800) *
                C50726 -
            ((C32395 + C32394 + C32393) * C50800 +
             (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                C1651) *
               C50874 +
           (((C342 * C50915 + C341 * C50899 + C340 * C22731) * C32092 +
             (C32891 + C32892 + C32893) * C50800) *
                C1651 -
            (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C22731 +
              C6026 * C50899 + C6025 * C50915) *
                 C50800 +
             (C32893 + C32892 + C32891) * C32092) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C50920 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50921 +
                    ((C32392 + C32391 + C32390) * C32092 +
                     (C34166 + C34167 + C34168) * C50800) *
                        C2067) *
                       C50874 +
                   (((C32888 + C32889 + C32890) * C32092 +
                     (C33284 + C33285 + C33286) * C50800) *
                        C50921 -
                    ((C32890 + C32889 + C32888) * C50800 +
                     (C341 * C22731 + C342 * C50899 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                         C32092) *
                        C50920 -
                    (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C22731 +
                      C16252 * C50899 + C16656 * C50915) *
                         C50800 +
                     (C33286 + C33285 + C33284) * C32092) *
                        C2067) *
                       C50698) *
                  C50627) /
                 (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C1651 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50726) *
                       C270 +
                   (((C32888 + C32889 + C32890) * C32092 +
                     (C33284 + C33285 + C33286) * C50800) *
                        C50726 -
                    ((C32890 + C32889 + C32888) * C50800 +
                     (C341 * C22731 + C342 * C50899 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                         C32092) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
                      C343 * C50899 + C344 * C22731) *
                         C32092 +
                     (C33773 + C33774 + C33775) * C50800) *
                        C1651 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C22731 +
                      C15584 * C50899 + C17153 * C50915) *
                         C50800 +
                     (C33775 + C33774 + C33773) * C32092) *
                        C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C1651 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50726) *
                       C50646 * C1002 +
                   (((C32393 + C32394 + C32395) * C32092 +
                     (C32396 + C32397 + C32398) * C50800) *
                        C50726 -
                    ((C32395 + C32394 + C32393) * C50800 +
                     (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                        C1651) *
                       C50646 * C1003 +
                   (((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
                     (C32691 + C32692 + C32693) * C50800) *
                        C1651 -
                    (((C117 * C455 + C498 + C498 + C50758 * C475) * C22731 +
                      C516 * C50899 + C515 * C50915) *
                         C50800 +
                     (C32693 + C32692 + C32691) * C32092) *
                        C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                     C168 * C50899 + C169 * C22731) *
                        C32092 +
                    (C32387 + C32388 + C32389) * C50800) *
                       C1817 -
                   ((C32390 + C32391 + C32392) * C50800 +
                    (C32389 + C32388 + C32387) * C32092) *
                       C1818 +
                   ((C32392 + C32391 + C32390) * C32092 +
                    (C34166 + C34167 + C34168) * C50800) *
                       C1819 -
                   (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C22731 +
                     C15749 * C50899 + C17559 * C50915) *
                        C50800 +
                    (C34168 + C34167 + C34166) * C32092) *
                       C1820) *
                  C50646 * C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C50920 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50921 +
                    ((C32392 + C32391 + C32390) * C32092 +
                     (C34166 + C34167 + C34168) * C50800) *
                        C2067) *
                       C50646 * C50866 +
                   (((C32393 + C32394 + C32395) * C32092 +
                     (C32396 + C32397 + C32398) * C50800) *
                        C50921 -
                    ((C32395 + C32394 + C32393) * C50800 +
                     (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                        C50920 -
                    (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C22731 +
                      C5515 * C50899 + C5514 * C50915) *
                         C50800 +
                     (C32398 + C32397 + C32396) * C32092) *
                        C2067) *
                       C50646 * C50633)) /
                 (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C1651 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50726) *
                       C50646 * C1002 +
                   (((C32393 + C32394 + C32395) * C32092 +
                     (C32396 + C32397 + C32398) * C50800) *
                        C50726 -
                    ((C32395 + C32394 + C32393) * C50800 +
                     (C170 * C22731 + C169 * C50899 + C168 * C50915) * C32092) *
                        C1651) *
                       C50646 * C1003 +
                   (((C169 * C50915 + C170 * C50899 + C171 * C22731) * C32092 +
                     (C32691 + C32692 + C32693) * C50800) *
                        C1651 -
                    (((C117 * C455 + C498 + C498 + C50758 * C475) * C22731 +
                      C516 * C50899 + C515 * C50915) *
                         C50800 +
                     (C32693 + C32692 + C32691) * C32092) *
                        C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C50915 +
                      C168 * C50899 + C169 * C22731) *
                         C32092 +
                     (C32387 + C32388 + C32389) * C50800) *
                        C1651 -
                    ((C32390 + C32391 + C32392) * C50800 +
                     (C32389 + C32388 + C32387) * C32092) *
                        C50726) *
                       C270 +
                   (((C32888 + C32889 + C32890) * C32092 +
                     (C33284 + C33285 + C33286) * C50800) *
                        C50726 -
                    ((C32890 + C32889 + C32888) * C50800 +
                     (C341 * C22731 + C342 * C50899 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C50915) *
                         C32092) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50758 * C299) * C50915 +
                      C343 * C50899 + C344 * C22731) *
                         C32092 +
                     (C33773 + C33774 + C33775) * C50800) *
                        C1651 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C22731 +
                      C15584 * C50899 + C17153 * C50915) *
                         C50800 +
                     (C33775 + C33774 + C33773) * C32092) *
                        C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C50662 * C50874 -
           (((C3269 + C3268) * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C50662 * C50698) *
              C50916 +
          ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
            ((C3268 + C3269) * C25611 + (C3270 + C3271) * C50603) * C50800) *
               C50662 * C50698 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50662 * C50874) *
              C50917 +
          (((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
            ((C2725 + C2724) * C25611 + (C3048 + C3049) * C50603) * C50800) *
               C50662 * C50874 -
           (((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C50603 +
             (C3271 + C3270) * C25611) *
                C50800 +
            ((C2890 + C2889) * C50603 + C2878 * C25611) * C32092) *
               C50662 * C50698) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
               C2275 + C2275 + C50774 * C298) *
                  C25611 +
              (C2318 + C2319) * C50603) *
                 C32092 +
             ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
                C50875 -
            ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
             (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
                C50726) *
               C50874 +
           ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
             ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                 C50800) *
                C50726 -
            ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
             ((C2524 + C2525) * C50603 +
              (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
               C2487 + C2487 + C50884 * C298) *
                  C25611) *
                 C32092) *
                C50875) *
               C50698) *
              C273 +
          ((((C35183 * C25611 + C35574 * C50603) * C32092 +
             (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
                C50726 -
            ((C3037 * C50603 + C35184 * C25611) * C50800 +
             ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
                C50875) *
               C50874 +
           ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
             (C35833 * C25611 + (C3270 + C3271) * C50603) * C50800) *
                C50875 -
            (((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
               C3687 + C3687 + C50884 * C1199) *
                  C50603 +
              (C19008 + C19007) * C25611) *
                 C50800 +
             ((C3271 + C3270) * C50603 + C35834 * C25611) * C32092) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + (C2727 + C2726) * C50603) * C50800) *
               C50662 * C270 -
           (((C3269 + C3268) * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C50662 * C271 +
           (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
              C2489 + C2489 + C50774 * C1087) *
                 C25611 +
             (C2526 + C2527) * C50603) *
                C32092 +
            ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) *
                C50800) *
               C50662 * C272) *
              C273 +
          ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
            ((C3268 + C3269) * C25611 + (C3270 + C3271) * C50603) * C50800) *
               C50662 * C271 -
           ((C3037 * C50603 + (C2726 + C2727) * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50662 * C270 -
           (((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
              C4188 + C4188 + C50884 * C1546) *
                 C50603 +
             (C34988 + C34987) * C25611) *
                C50800 +
            ((C2529 + C2528) * C50603 + (C2527 + C2526) * C25611) * C32092) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C25611 +
            (C2318 + C2319) * C50603) *
               C32092 +
           ((C18479 + C18480) * C25611 + (C2727 + C2726) * C50603) * C50800) *
              C50662 * C50646 * C113 -
          ((C3037 * C50603 + (C2726 + C2727) * C25611) * C50800 +
           ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
              C50662 * C50646 * C114 +
          ((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
           ((C2725 + C2724) * C25611 + (C3048 + C3049) * C50603) * C50800) *
              C50662 * C50646 * C115 -
          (((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C50603 +
            (C3049 + C3048) * C25611) *
               C50800 +
           ((C2325 + C2324) * C50603 + C2327 * C25611) * C32092) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C443 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C444 +
           ((C18487 * C25611 + C35185 * C50603) * C32092 +
            ((C18484 + C18483) * C25611 + (C18485 + C18486) * C50603) *
                C50800) *
               C445) *
              C50646 * C273 +
          (((C35183 * C25611 + (C2725 + C2724) * C50603) * C32092 +
            (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
               C444 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C443 -
           (((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
              C4593 + C4593 + C50884 * C1830) *
                 C50603 +
             (C18486 + C18485) * C25611) *
                C50800 +
            ((C2731 + C2730) * C50603 + C18459 * C25611) * C32092) *
               C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C50875 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C50726) *
              C50646 * C50916 +
          (((C35183 * C25611 + C35574 * C50603) * C32092 +
            (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
               C50726 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50875) *
              C50646 * C50917 +
          (((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
            (C35574 * C25611 + (C3048 + C3049) * C50603) * C50800) *
               C50875 -
           (((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
              C2707 + C2707 + C50884 * C473) *
                 C50603 +
             (C2731 + C2730) * C25611) *
                C50800 +
            ((C3049 + C3048) * C50603 + C3037 * C25611) * C32092) *
               C50726) *
              C50646 * C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C25611 +
            (C2318 + C2319) * C50603) *
               C32092 +
           ((C18479 + C18480) * C25611 + (C2727 + C2726) * C50603) * C50800) *
              C50662 * C50646 * C113 -
          ((C3037 * C50603 + (C2726 + C2727) * C25611) * C50800 +
           ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
              C50662 * C50646 * C114 +
          ((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
           ((C2725 + C2724) * C25611 + (C3048 + C3049) * C50603) * C50800) *
              C50662 * C50646 * C115 -
          (((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C50603 +
            (C3049 + C3048) * C25611) *
               C50800 +
           ((C2325 + C2324) * C50603 + C2327 * C25611) * C32092) *
              C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + (C2727 + C2726) * C50603) * C50800) *
               C50662 * C270 -
           (((C3269 + C3268) * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C50662 * C271 +
           (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
              C2489 + C2489 + C50774 * C1087) *
                 C25611 +
             (C2526 + C2527) * C50603) *
                C32092 +
            ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) *
                C50800) *
               C50662 * C272) *
              C273 +
          ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
            ((C3268 + C3269) * C25611 + (C3270 + C3271) * C50603) * C50800) *
               C50662 * C271 -
           ((C3037 * C50603 + (C2726 + C2727) * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50662 * C270 -
           (((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
              C4188 + C4188 + C50884 * C1546) *
                 C50603 +
             (C34988 + C34987) * C25611) *
                C50800 +
            ((C2529 + C2528) * C50603 + (C2527 + C2526) * C25611) * C32092) *
               C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C50662 * C50918 -
           ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C50662 * C50919 +
           (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
              C2489 + C2489 + C50774 * C1087) *
                 C25611 +
             (C2526 + C2527) * C50603) *
                C32092 +
            ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) *
                C50800) *
               C50662 * C1306) *
              C50866 +
          ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
            (C35833 * C25611 + (C3270 + C3271) * C50603) * C50800) *
               C50662 * C50919 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50662 * C50918 -
           (((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
              C4188 + C4188 + C50884 * C1546) *
                 C50603 +
             (C34988 + C34987) * C25611) *
                C50800 +
            ((C2529 + C2528) * C50603 + (C2527 + C2526) * C25611) * C32092) *
               C50662 * C1306) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 +
                       C2271 * C278 + C2275 + C2275 + C50774 * C298) *
                          C25611 +
                      (C2318 + C2319) * C50603) *
                         C32092 +
                     ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
                        C50875 -
                    ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
                     (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
                        C50726) *
                       C50918 +
                   ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
                     ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                         C50800) *
                        C50726 -
                    ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
                     ((C2524 + C2525) * C50603 +
                      (C2271 * C279 + C2486 + C2486 + C50774 * C299 +
                       C2269 * C278 + C2487 + C2487 + C50884 * C298) *
                          C25611) *
                         C32092) *
                        C50875) *
                       C50919 +
                   ((((C2269 * C279 + C2488 + C2488 + C50884 * C299 +
                       C2271 * C1079 + C2489 + C2489 + C50774 * C1087) *
                          C25611 +
                      (C2526 + C2527) * C50603) *
                         C32092 +
                     ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) *
                         C50800) *
                        C50875 -
                    (((C2271 * C9329 + C18293 + C18293 + C50774 * C9333 +
                       C2269 * C3677 + C18294 + C18294 + C50884 * C3683) *
                          C50603 +
                      (C19924 + C19923) * C25611) *
                         C50800 +
                     ((C34988 + C34987) * C50603 + (C19922 + C19921) * C25611) *
                         C32092) *
                        C50726) *
                       C1306) *
                  C50627) /
                 (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C25611 +
            (C2318 + C2319) * C50603) *
               C32092 +
           ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
              C50662 * C1071 -
          ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
           ((C2524 + C2525) * C50603 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C25611) *
               C32092) *
              C50662 * C1072 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C25611 +
            (C2526 + C2527) * C50603) *
               C32092 +
           ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) * C50800) *
              C50662 * C1073 -
          (((C2271 * C9827 + C36159 + C36159 + C50774 * C9831 + C2269 * C4178 +
             C36160 + C36160 + C50884 * C4184) *
                C50603 +
            (C2271 * C9828 + C19255 + C19255 + C50774 * C9832 + C2269 * C4179 +
             C19256 + C19256 + C50884 * C4185) *
                C25611) *
               C50800 +
           ((C2271 * C3516 + C3527 + C3527 + C50774 * C3522 + C2269 * C1078 +
             C3528 + C3528 + C50884 * C1086) *
                C50603 +
            (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
             C3530 + C3530 + C50884 * C1087) *
                C25611) *
               C32092) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C50662 * C1000 -
           ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C50662 * C50698) *
              C1002 +
          ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
            (C35833 * C25611 + (C3270 + C3271) * C50603) * C50800) *
               C50662 * C50698 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50662 * C1000) *
              C1003 +
          (((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
            (C35574 * C25611 + (C3048 + C3049) * C50603) * C50800) *
               C50662 * C1000 -
           (((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C50603 +
             (C3271 + C3270) * C25611) *
                C50800 +
            ((C2890 + C2889) * C50603 + C2878 * C25611) * C32092) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C443 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C444 +
           ((C18487 * C25611 + C35185 * C50603) * C32092 +
            ((C18484 + C18483) * C25611 + (C18485 + C18486) * C50603) *
                C50800) *
               C445) *
              C1000 +
          ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
            ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                C50800) *
               C444 -
           ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C443 -
           (((C2271 * C10229 + C18989 + C18989 + C50774 * C10233 +
              C2269 * C4583 + C18990 + C18990 + C50884 * C4589) *
                 C50603 +
             (C19416 + C19415) * C25611) *
                C50800 +
            ((C19008 + C19007) * C50603 + C19407 * C25611) * C32092) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
               C2275 + C2275 + C50774 * C298) *
                  C25611 +
              (C2318 + C2319) * C50603) *
                 C32092 +
             ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
                C50875 -
            ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
             (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
                C50726) *
               C1000 +
           ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
             ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                 C50800) *
                C50726 -
            ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
             ((C2524 + C2525) * C50603 +
              (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
               C2487 + C2487 + C50884 * C298) *
                  C25611) *
                 C32092) *
                C50875) *
               C50698) *
              C50866 +
          ((((C35183 * C25611 + C35574 * C50603) * C32092 +
             (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
                C50726 -
            ((C3037 * C50603 + C35184 * C25611) * C50800 +
             ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
                C50875) *
               C1000 +
           ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
             (C35833 * C25611 + (C3270 + C3271) * C50603) * C50800) *
                C50875 -
            (((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
               C3687 + C3687 + C50884 * C1199) *
                  C50603 +
              (C19008 + C19007) * C25611) *
                 C50800 +
             ((C3271 + C3270) * C50603 + C35834 * C25611) * C32092) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C50662 * C1000 -
           ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C50662 * C50698) *
              C1002 +
          ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
            (C35833 * C25611 + (C3270 + C3271) * C50603) * C50800) *
               C50662 * C50698 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50662 * C1000) *
              C1003 +
          (((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
            (C35574 * C25611 + (C3048 + C3049) * C50603) * C50800) *
               C50662 * C1000 -
           (((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C50603 +
             (C3271 + C3270) * C25611) *
                C50800 +
            ((C2890 + C2889) * C50603 + C2878 * C25611) * C32092) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C25611 +
            (C2318 + C2319) * C50603) *
               C32092 +
           ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
              C50662 * C1071 -
          ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
           ((C2524 + C2525) * C50603 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C25611) *
               C32092) *
              C50662 * C1072 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C25611 +
            (C2526 + C2527) * C50603) *
               C32092 +
           ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) * C50800) *
              C50662 * C1073 -
          (((C2271 * C9827 + C36159 + C36159 + C50774 * C9831 + C2269 * C4178 +
             C36160 + C36160 + C50884 * C4184) *
                C50603 +
            (C2271 * C9828 + C19255 + C19255 + C50774 * C9832 + C2269 * C4179 +
             C19256 + C19256 + C50884 * C4185) *
                C25611) *
               C50800 +
           ((C2271 * C3516 + C3527 + C3527 + C50774 * C3522 + C2269 * C1078 +
             C3528 + C3528 + C50884 * C1086) *
                C50603 +
            (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
             C3530 + C3530 + C50884 * C1087) *
                C25611) *
               C32092) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
               C2275 + C2275 + C50774 * C298) *
                  C25611 +
              (C2318 + C2319) * C50603) *
                 C32092 +
             ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
                C1651 -
            ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
             (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
                C50726) *
               C50874 +
           ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
             ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                 C50800) *
                C50726 -
            ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
             ((C2524 + C2525) * C50603 +
              (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
               C2487 + C2487 + C50884 * C298) *
                  C25611) *
                 C32092) *
                C1651) *
               C50698) *
              C50866 +
          ((((C35183 * C25611 + C35574 * C50603) * C32092 +
             (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
                C50726 -
            ((C3037 * C50603 + C35184 * C25611) * C50800 +
             ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
                C1651) *
               C50874 +
           ((((C2525 + C2524) * C25611 + (C2523 + C2522) * C50603) * C32092 +
             (C35833 * C25611 + (C3270 + C3271) * C50603) * C50800) *
                C1651 -
            (((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
               C3687 + C3687 + C50884 * C1199) *
                  C50603 +
              (C19008 + C19007) * C25611) *
                 C50800 +
             ((C3271 + C3270) * C50603 + C35834 * C25611) * C32092) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 +
                       C2271 * C278 + C2275 + C2275 + C50774 * C298) *
                          C25611 +
                      (C2318 + C2319) * C50603) *
                         C32092 +
                     ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
                        C50920 -
                    ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
                     (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
                        C50921 +
                    ((C18487 * C25611 + C35185 * C50603) * C32092 +
                     ((C18484 + C18483) * C25611 + (C18485 + C18486) * C50603) *
                         C50800) *
                        C2067) *
                       C50874 +
                   ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
                     ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                         C50800) *
                        C50921 -
                    ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
                     ((C2524 + C2525) * C50603 +
                      (C2271 * C279 + C2486 + C2486 + C50774 * C299 +
                       C2269 * C278 + C2487 + C2487 + C50884 * C298) *
                          C25611) *
                         C32092) *
                        C50920 -
                    (((C2271 * C10229 + C18989 + C18989 + C50774 * C10233 +
                       C2269 * C4583 + C18990 + C18990 + C50884 * C4589) *
                          C50603 +
                      (C19416 + C19415) * C25611) *
                         C50800 +
                     ((C19008 + C19007) * C50603 + C19407 * C25611) * C32092) *
                        C2067) *
                       C50698) *
                  C50627) /
                 (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C1651 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C50726) *
              C270 +
          ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
            ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                C50800) *
               C50726 -
           ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C1651) *
              C271 +
          ((((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
              C2489 + C2489 + C50774 * C1087) *
                 C25611 +
             (C2526 + C2527) * C50603) *
                C32092 +
            ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) *
                C50800) *
               C1651 -
           (((C2271 * C9329 + C18293 + C18293 + C50774 * C9333 + C2269 * C3677 +
              C18294 + C18294 + C50884 * C3683) *
                 C50603 +
             (C19924 + C19923) * C25611) *
                C50800 +
            ((C34988 + C34987) * C50603 + (C19922 + C19921) * C25611) *
                C32092) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C1651 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C50726) *
              C50646 * C1002 +
          (((C35183 * C25611 + C35574 * C50603) * C32092 +
            (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
               C50726 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C1651) *
              C50646 * C1003 +
          (((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
            (C35574 * C25611 + (C3048 + C3049) * C50603) * C50800) *
               C1651 -
           (((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
              C2707 + C2707 + C50884 * C473) *
                 C50603 +
             (C2731 + C2730) * C25611) *
                C50800 +
            ((C3049 + C3048) * C50603 + C3037 * C25611) * C32092) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C25611 +
            (C2318 + C2319) * C50603) *
               C32092 +
           ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
              C1817 -
          ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
           (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
              C1818 +
          ((C18487 * C25611 + C35185 * C50603) * C32092 +
           ((C18484 + C18483) * C25611 + (C18485 + C18486) * C50603) * C50800) *
              C1819 -
          (((C2271 * C16644 + C18460 + C18460 + C50774 * C16646 +
             C2269 * C7319 + C18461 + C18461 + C50884 * C7325) *
                C50603 +
            (C20331 + C20330) * C25611) *
               C50800 +
           ((C18486 + C18485) * C50603 + C20318 * C25611) * C32092) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C50920 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C50921 +
           ((C18487 * C25611 + C35185 * C50603) * C32092 +
            ((C18484 + C18483) * C25611 + (C18485 + C18486) * C50603) *
                C50800) *
               C2067) *
              C50646 * C50866 +
          (((C35183 * C25611 + C35574 * C50603) * C32092 +
            (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
               C50921 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C50920 -
           (((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
              C4593 + C4593 + C50884 * C1830) *
                 C50603 +
             (C18486 + C18485) * C25611) *
                C50800 +
            ((C2731 + C2730) * C50603 + C18459 * C25611) * C32092) *
               C2067) *
              C50646 * C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C1651 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C50726) *
              C50646 * C1002 +
          (((C35183 * C25611 + C35574 * C50603) * C32092 +
            (C35185 * C25611 + (C2730 + C2731) * C50603) * C50800) *
               C50726 -
           ((C3037 * C50603 + C35184 * C25611) * C50800 +
            ((C2321 + C2320) * C50603 + (C2319 + C2318) * C25611) * C32092) *
               C1651) *
              C50646 * C1003 +
          (((C2326 * C25611 + (C2323 + C2322) * C50603) * C32092 +
            (C35574 * C25611 + (C3048 + C3049) * C50603) * C50800) *
               C1651 -
           (((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
              C2707 + C2707 + C50884 * C473) *
                 C50603 +
             (C2731 + C2730) * C25611) *
                C50800 +
            ((C3049 + C3048) * C50603 + C3037 * C25611) * C32092) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C25611 +
             (C2318 + C2319) * C50603) *
                C32092 +
            ((C18479 + C18480) * C25611 + C35183 * C50603) * C50800) *
               C1651 -
           ((C18459 * C50603 + (C18482 + C18481) * C25611) * C50800 +
            (C35184 * C50603 + (C18480 + C18479) * C25611) * C32092) *
               C50726) *
              C270 +
          ((((C19003 + C19004) * C25611 + C35833 * C50603) * C32092 +
            ((C19005 + C19006) * C25611 + (C19007 + C19008) * C50603) *
                C50800) *
               C50726 -
           ((C35834 * C50603 + (C19004 + C19003) * C25611) * C50800 +
            ((C2524 + C2525) * C50603 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C25611) *
                C32092) *
               C1651) *
              C271 +
          ((((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
              C2489 + C2489 + C50774 * C1087) *
                 C25611 +
             (C2526 + C2527) * C50603) *
                C32092 +
            ((C19921 + C19922) * C25611 + (C34987 + C34988) * C50603) *
                C50800) *
               C1651 -
           (((C2271 * C9329 + C18293 + C18293 + C50774 * C9333 + C2269 * C3677 +
              C18294 + C18294 + C50884 * C3683) *
                 C50603 +
             (C19924 + C19923) * C25611) *
                C50800 +
            ((C34988 + C34987) * C50603 + (C19922 + C19921) * C25611) *
                C32092) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C38558 + C38559) * C50914 + C38570 * C38264) *
                        C50662 * C50874 -
                    ((C6025 * C50603 + C6430 * C25611) * C38264 +
                     (C900 * C50603 + C6024 * C25611) * C50914 +
                     (C342 * C50603 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                         C50923) *
                        C50662 * C50698) *
                       C50916 +
                   (((C342 * C25611 + C341 * C50603) * C50923 +
                     (C900 * C25611 + C901 * C50603) * C50914 +
                     (C6025 * C25611 + C6026 * C50603) * C38264) *
                        C50662 * C50698 -
                    (C38571 * C38264 + (C38565 + C38564) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C50662 * C50874) *
                       C50917 +
                   (((C169 * C25611 + C170 * C50603) * C50923 +
                     (C512 * C25611 + C511 * C50603) * C50914 +
                     (C515 * C25611 + C516 * C50603) * C38264) *
                        C50662 * C50874 -
                    (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C50603 +
                      C6026 * C25611) *
                         C38264 +
                     (C902 * C50603 + C901 * C25611) * C50914 +
                     (C340 * C50603 + C341 * C25611) * C50923) *
                        C50662 * C50698) *
                       C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
              C168 * C50603) *
                 C50923 +
             (C38558 + C38559) * C50914 + C38570 * C38264) *
                C50875 -
            ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
             (C38559 + C38558) * C50923) *
                C50726) *
               C50874 +
           (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
             (C16656 * C25611 + C16252 * C50603) * C38264) *
                C50726 -
            ((C39065 + C39064) * C38264 + (C39063 + C39062) * C50914 +
             (C342 * C50603 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                 C50923) *
                C50875) *
               C50698) *
              C273 +
          ((((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
             (C38568 + C38569) * C38264) *
                C50726 -
            (C38571 * C38264 + (C38565 + C38564) * C50914 +
             (C169 * C50603 + C168 * C25611) * C50923) *
                C50875) *
               C50874 +
           (((C342 * C25611 + C341 * C50603) * C50923 +
             (C39066 + C39067) * C50914 + (C39068 + C39069) * C38264) *
                C50875 -
            (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50603 +
              C16252 * C25611) *
                 C38264 +
             (C39069 + C39068) * C50914 + (C39067 + C39066) * C50923) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C5512 * C25611 + C513 * C50603) * C50914 +
                     (C5513 * C25611 + C514 * C50603) * C38264) *
                        C50662 * C270 -
                    ((C6025 * C50603 + C6430 * C25611) * C38264 +
                     (C900 * C50603 + C6024 * C25611) * C50914 +
                     (C342 * C50603 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                         C50923) *
                        C50662 * C271 +
                    (((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
                      C343 * C50603) *
                         C50923 +
                     (C6927 * C25611 + C5338 * C50603) * C50914 +
                     (C17153 * C25611 + C15584 * C50603) * C38264) *
                        C50662 * C272) *
                       C273 +
                   (((C342 * C25611 + C341 * C50603) * C50923 +
                     (C900 * C25611 + C901 * C50603) * C50914 +
                     (C6025 * C25611 + C6026 * C50603) * C38264) *
                        C50662 * C271 -
                    ((C515 * C50603 + C514 * C25611) * C38264 +
                     (C512 * C50603 + C513 * C25611) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C50662 * C270 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C50603 +
                      C15584 * C25611) *
                         C38264 +
                     (C5339 * C50603 + C5338 * C25611) * C50914 +
                     (C344 * C50603 + C343 * C25611) * C50923) *
                        C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                     C168 * C50603) *
                        C50923 +
                    (C5512 * C25611 + C513 * C50603) * C50914 +
                    (C5513 * C25611 + C514 * C50603) * C38264) *
                       C50662 * C50646 * C113 -
                   ((C515 * C50603 + C514 * C25611) * C38264 +
                    (C512 * C50603 + C513 * C25611) * C50914 +
                    (C169 * C50603 + C168 * C25611) * C50923) *
                       C50662 * C50646 * C114 +
                   ((C169 * C25611 + C170 * C50603) * C50923 +
                    (C512 * C25611 + C511 * C50603) * C50914 +
                    (C515 * C25611 + C516 * C50603) * C38264) *
                       C50662 * C50646 * C115 -
                   (((C117 * C455 + C498 + C498 + C50758 * C475) * C50603 +
                     C516 * C25611) *
                        C38264 +
                    (C737 * C50603 + C511 * C25611) * C50914 +
                    (C171 * C50603 + C170 * C25611) * C50923) *
                       C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C38558 + C38559) * C50914 + C38570 * C38264) *
                        C443 -
                    ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
                     (C38559 + C38558) * C50923) *
                        C444 +
                    (C38570 * C50923 + (C38563 + C38562) * C50914 +
                     (C17559 * C25611 + C15749 * C50603) * C38264) *
                        C445) *
                       C50646 * C273 +
                   (((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
                     (C38568 + C38569) * C38264) *
                        C444 -
                    (C38571 * C38264 + (C38565 + C38564) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C443 -
                    (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50603 +
                      C15749 * C25611) *
                         C38264 +
                     (C38569 + C38568) * C50914 + C38571 * C50923) *
                        C445) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C38558 + C38559) * C50914 + C38570 * C38264) *
                        C50875 -
                    ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
                     (C38559 + C38558) * C50923) *
                        C50726) *
                       C50646 * C50916 +
                   (((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
                     (C38568 + C38569) * C38264) *
                        C50726 -
                    (C38571 * C38264 + (C38565 + C38564) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C50875) *
                       C50646 * C50917 +
                   (((C169 * C25611 + C170 * C50603) * C50923 +
                     (C38864 + C38865) * C50914 + (C38866 + C38867) * C38264) *
                        C50875 -
                    (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50603 +
                      C5515 * C25611) *
                         C38264 +
                     (C38867 + C38866) * C50914 + (C38865 + C38864) * C50923) *
                        C50726) *
                       C50646 * C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                     C168 * C50603) *
                        C50923 +
                    (C5512 * C25611 + C513 * C50603) * C50914 +
                    (C5513 * C25611 + C514 * C50603) * C38264) *
                       C50662 * C50646 * C113 -
                   ((C515 * C50603 + C514 * C25611) * C38264 +
                    (C512 * C50603 + C513 * C25611) * C50914 +
                    (C169 * C50603 + C168 * C25611) * C50923) *
                       C50662 * C50646 * C114 +
                   ((C169 * C25611 + C170 * C50603) * C50923 +
                    (C512 * C25611 + C511 * C50603) * C50914 +
                    (C515 * C25611 + C516 * C50603) * C38264) *
                       C50662 * C50646 * C115 -
                   (((C117 * C455 + C498 + C498 + C50758 * C475) * C50603 +
                     C516 * C25611) *
                        C38264 +
                    (C737 * C50603 + C511 * C25611) * C50914 +
                    (C171 * C50603 + C170 * C25611) * C50923) *
                       C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C5512 * C25611 + C513 * C50603) * C50914 +
                     (C5513 * C25611 + C514 * C50603) * C38264) *
                        C50662 * C270 -
                    ((C6025 * C50603 + C6430 * C25611) * C38264 +
                     (C900 * C50603 + C6024 * C25611) * C50914 +
                     (C342 * C50603 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                         C50923) *
                        C50662 * C271 +
                    (((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
                      C343 * C50603) *
                         C50923 +
                     (C6927 * C25611 + C5338 * C50603) * C50914 +
                     (C17153 * C25611 + C15584 * C50603) * C38264) *
                        C50662 * C272) *
                       C273 +
                   (((C342 * C25611 + C341 * C50603) * C50923 +
                     (C900 * C25611 + C901 * C50603) * C50914 +
                     (C6025 * C25611 + C6026 * C50603) * C38264) *
                        C50662 * C271 -
                    ((C515 * C50603 + C514 * C25611) * C38264 +
                     (C512 * C50603 + C513 * C25611) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C50662 * C270 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C50603 +
                      C15584 * C25611) *
                         C38264 +
                     (C5339 * C50603 + C5338 * C25611) * C50914 +
                     (C344 * C50603 + C343 * C25611) * C50923) *
                        C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C38558 + C38559) * C50914 + C38570 * C38264) *
                        C50662 * C50918 -
                    (C39462 * C38264 + (C39063 + C39062) * C50914 +
                     (C342 * C50603 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                         C50923) *
                        C50662 * C50919 +
                    (((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
                      C343 * C50603) *
                         C50923 +
                     (C6927 * C25611 + C5338 * C50603) * C50914 +
                     (C17153 * C25611 + C15584 * C50603) * C38264) *
                        C50662 * C1306) *
                       C50866 +
                   (((C342 * C25611 + C341 * C50603) * C50923 +
                     (C39066 + C39067) * C50914 + (C39068 + C39069) * C38264) *
                        C50662 * C50919 -
                    (C38571 * C38264 + (C38565 + C38564) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C50662 * C50918 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C50603 +
                      C15584 * C25611) *
                         C38264 +
                     (C5339 * C50603 + C5338 * C25611) * C50914 +
                     (C344 * C50603 + C343 * C25611) * C50923) *
                        C50662 * C1306) *
                       C50633)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C50875 -
           ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C50726) *
              C50918 +
          (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
            (C39460 + C39461) * C38264) *
               C50726 -
           (C39462 * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C50875) *
              C50919 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
             C343 * C50603) *
                C50923 +
            (C39949 + C39950) * C50914 + (C39951 + C39952) * C38264) *
               C50875 -
           (((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50603 +
             C22030 * C25611) *
                C38264 +
            (C39952 + C39951) * C50914 + (C39950 + C39949) * C50923) *
               C50726) *
              C1306) *
         C50627) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
            C168 * C50603) *
               C50923 +
           (C38558 + C38559) * C50914 + C38570 * C38264) *
              C50662 * C1071 -
          ((C39065 + C39064) * C38264 + (C39063 + C39062) * C50914 +
           (C342 * C50603 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
               C50923) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
            C343 * C50603) *
               C50923 +
           (C6927 * C25611 + C5338 * C50603) * C50914 +
           (C17153 * C25611 + C15584 * C50603) * C38264) *
              C50662 * C1073 -
          (((C117 * C9329 + C16497 + C16497 + C50758 * C9333) * C50603 +
            (C117 * C9330 + C16498 + C16498 + C50758 * C9334) * C25611) *
               C38264 +
           ((C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C50603 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C25611) *
               C50914 +
           ((C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C50603 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C25611) *
               C50923) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C50662 * C1000 -
           ((C39065 + C39064) * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C25611 + C341 * C50603) * C50923 +
            (C39066 + C39067) * C50914 + (C39068 + C39069) * C38264) *
               C50662 * C50698 -
           (C38571 * C38264 + (C38565 + C38564) * C50914 +
            (C169 * C50603 + C168 * C25611) * C50923) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C25611 + C170 * C50603) * C50923 +
            (C38864 + C38865) * C50914 + (C38866 + C38867) * C38264) *
               C50662 * C1000 -
           (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C50603 +
             C6026 * C25611) *
                C38264 +
            (C902 * C50603 + C901 * C25611) * C50914 +
            (C340 * C50603 + C341 * C25611) * C50923) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C443 -
           ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C444 +
           (C38570 * C50923 + (C38563 + C38562) * C50914 +
            (C17559 * C25611 + C15749 * C50603) * C38264) *
               C445) *
              C1000 +
          (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
            (C39460 + C39461) * C38264) *
               C444 -
           (C39462 * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C443 -
           (((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50603 +
             C21695 * C25611) *
                C38264 +
            (C39461 + C39460) * C50914 + C39462 * C50923) *
               C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
              C168 * C50603) *
                 C50923 +
             (C38558 + C38559) * C50914 + C38570 * C38264) *
                C50875 -
            ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
             (C38559 + C38558) * C50923) *
                C50726) *
               C1000 +
           (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
             (C39460 + C39461) * C38264) *
                C50726 -
            (C39462 * C38264 + (C39063 + C39062) * C50914 +
             (C342 * C50603 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                 C50923) *
                C50875) *
               C50698) *
              C50866 +
          ((((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
             (C38568 + C38569) * C38264) *
                C50726 -
            (C38571 * C38264 + (C38565 + C38564) * C50914 +
             (C169 * C50603 + C168 * C25611) * C50923) *
                C50875) *
               C1000 +
           (((C342 * C25611 + C341 * C50603) * C50923 +
             (C39066 + C39067) * C50914 + (C39068 + C39069) * C38264) *
                C50875 -
            (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50603 +
              C16252 * C25611) *
                 C38264 +
             (C39069 + C39068) * C50914 + (C39067 + C39066) * C50923) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C50662 * C1000 -
           ((C39065 + C39064) * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C50662 * C50698) *
              C1002 +
          (((C342 * C25611 + C341 * C50603) * C50923 +
            (C39066 + C39067) * C50914 + (C39068 + C39069) * C38264) *
               C50662 * C50698 -
           (C38571 * C38264 + (C38565 + C38564) * C50914 +
            (C169 * C50603 + C168 * C25611) * C50923) *
               C50662 * C1000) *
              C1003 +
          (((C169 * C25611 + C170 * C50603) * C50923 +
            (C38864 + C38865) * C50914 + (C38866 + C38867) * C38264) *
               C50662 * C1000 -
           (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C50603 +
             C6026 * C25611) *
                C38264 +
            (C902 * C50603 + C901 * C25611) * C50914 +
            (C340 * C50603 + C341 * C25611) * C50923) *
               C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
            C168 * C50603) *
               C50923 +
           (C38558 + C38559) * C50914 + C38570 * C38264) *
              C50662 * C1071 -
          ((C39065 + C39064) * C38264 + (C39063 + C39062) * C50914 +
           (C342 * C50603 +
            (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
               C50923) *
              C50662 * C1072 +
          (((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
            C343 * C50603) *
               C50923 +
           (C6927 * C25611 + C5338 * C50603) * C50914 +
           (C17153 * C25611 + C15584 * C50603) * C38264) *
              C50662 * C1073 -
          (((C117 * C9329 + C16497 + C16497 + C50758 * C9333) * C50603 +
            (C117 * C9330 + C16498 + C16498 + C50758 * C9334) * C25611) *
               C38264 +
           ((C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C50603 +
            (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C25611) *
               C50914 +
           ((C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C50603 +
            (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C25611) *
               C50923) *
              C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
              C168 * C50603) *
                 C50923 +
             (C38558 + C38559) * C50914 + C38570 * C38264) *
                C1651 -
            (C40343 * C38264 + (C38561 + C38560) * C50914 +
             (C38559 + C38558) * C50923) *
                C50726) *
               C50874 +
           (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
             (C39460 + C39461) * C38264) *
                C50726 -
            (C39462 * C38264 + (C39063 + C39062) * C50914 +
             (C342 * C50603 +
              (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                 C50923) *
                C1651) *
               C50698) *
              C50866 +
          ((((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
             (C38568 + C38569) * C38264) *
                C50726 -
            (C38571 * C38264 + (C38565 + C38564) * C50914 +
             (C169 * C50603 + C168 * C25611) * C50923) *
                C1651) *
               C50874 +
           (((C342 * C25611 + C341 * C50603) * C50923 +
             (C39066 + C39067) * C50914 + (C39068 + C39069) * C38264) *
                C1651 -
            (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C50603 +
              C16252 * C25611) *
                 C38264 +
             (C39069 + C39068) * C50914 + (C39067 + C39066) * C50923) *
                C50726) *
               C50698) *
              C50633)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C50920 -
           (C40343 * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C50921 +
           (C38570 * C50923 + (C38563 + C38562) * C50914 +
            (C40344 + C40345) * C38264) *
               C2067) *
              C50874 +
          (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
            (C39460 + C39461) * C38264) *
               C50921 -
           (C39462 * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C50920 -
           (((C117 * C16644 + C16652 + C16652 + C50758 * C16646) * C50603 +
             C21695 * C25611) *
                C38264 +
            (C39461 + C39460) * C50914 + C39462 * C50923) *
               C2067) *
              C50698) *
         C50627) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C1651 -
           ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C50726) *
              C270 +
          (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
            (C39460 + C39461) * C38264) *
               C50726 -
           (C39462 * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
             C343 * C50603) *
                C50923 +
            (C39949 + C39950) * C50914 + (C39951 + C39952) * C38264) *
               C1651 -
           (((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50603 +
             C22030 * C25611) *
                C38264 +
            (C39952 + C39951) * C50914 + (C39950 + C39949) * C50923) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C1651 -
           ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C50726) *
              C50646 * C1002 +
          (((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
            (C38568 + C38569) * C38264) *
               C50726 -
           (C38571 * C38264 + (C38565 + C38564) * C50914 +
            (C169 * C50603 + C168 * C25611) * C50923) *
               C1651) *
              C50646 * C1003 +
          (((C169 * C25611 + C170 * C50603) * C50923 +
            (C38864 + C38865) * C50914 + (C38866 + C38867) * C38264) *
               C1651 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50603 +
             C5515 * C25611) *
                C38264 +
            (C38867 + C38866) * C50914 + (C38865 + C38864) * C50923) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
            C168 * C50603) *
               C50923 +
           (C38558 + C38559) * C50914 + C38570 * C38264) *
              C1817 -
          (C40343 * C38264 + (C38561 + C38560) * C50914 +
           (C38559 + C38558) * C50923) *
              C1818 +
          (C38570 * C50923 + (C38563 + C38562) * C50914 +
           (C40344 + C40345) * C38264) *
              C1819 -
          (((C117 * C17544 + C17555 + C17555 + C50758 * C17548) * C50603 +
            C22302 * C25611) *
               C38264 +
           (C40345 + C40344) * C50914 + C40343 * C50923) *
              C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
                      C168 * C50603) *
                         C50923 +
                     (C38558 + C38559) * C50914 + C38570 * C38264) *
                        C50920 -
                    (C40343 * C38264 + (C38561 + C38560) * C50914 +
                     (C38559 + C38558) * C50923) *
                        C50921 +
                    (C38570 * C50923 + (C38563 + C38562) * C50914 +
                     (C40344 + C40345) * C38264) *
                        C2067) *
                       C50646 * C50866 +
                   (((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
                     (C38568 + C38569) * C38264) *
                        C50921 -
                    (C38571 * C38264 + (C38565 + C38564) * C50914 +
                     (C169 * C50603 + C168 * C25611) * C50923) *
                        C50920 -
                    (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C50603 +
                      C15749 * C25611) *
                         C38264 +
                     (C38569 + C38568) * C50914 + C38571 * C50923) *
                        C2067) *
                       C50646 * C50633)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C1651 -
           ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C50726) *
              C50646 * C1002 +
          (((C38564 + C38565) * C50923 + (C38566 + C38567) * C50914 +
            (C38568 + C38569) * C38264) *
               C50726 -
           (C38571 * C38264 + (C38565 + C38564) * C50914 +
            (C169 * C50603 + C168 * C25611) * C50923) *
               C1651) *
              C50646 * C1003 +
          (((C169 * C25611 + C170 * C50603) * C50923 +
            (C38864 + C38865) * C50914 + (C38866 + C38867) * C38264) *
               C1651 -
           (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C50603 +
             C5515 * C25611) *
                C38264 +
            (C38867 + C38866) * C50914 + (C38865 + C38864) * C50923) *
               C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50758 * C133) * C25611 +
             C168 * C50603) *
                C50923 +
            (C38558 + C38559) * C50914 + C38570 * C38264) *
               C1651 -
           ((C38562 + C38563) * C38264 + (C38561 + C38560) * C50914 +
            (C38559 + C38558) * C50923) *
               C50726) *
              C270 +
          (((C39062 + C39063) * C50923 + (C39064 + C39065) * C50914 +
            (C39460 + C39461) * C38264) *
               C50726 -
           (C39462 * C38264 + (C39063 + C39062) * C50914 +
            (C342 * C50603 +
             (C117 * C278 + C315 + C315 + C50758 * C298) * C25611) *
                C50923) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50758 * C299) * C25611 +
             C343 * C50603) *
                C50923 +
            (C39949 + C39950) * C50914 + (C39951 + C39952) * C38264) *
               C1651 -
           (((C117 * C10229 + C17149 + C17149 + C50758 * C10233) * C50603 +
             C22030 * C25611) *
                C38264 +
            (C39952 + C39951) * C50914 + (C39950 + C39949) * C50923) *
               C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[180] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50662 * C50874 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50662 * C50698) *
                       C50916 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50788 * C50662 * C50698 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50662 * C50874) *
                       C50917 +
                   ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                        C50788 * C50662 * C50874 -
                    ((C117 * C619 + C625 + C625 + C50758 * C621) * C109 +
                     C628 * C108 + C340 * C107 + C341 * C106) *
                        C50788 * C50662 * C50698) *
                       C618)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50662 * C50874 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50662 * C50698) *
                       C50916 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C8543 + C8544 + C8545) * C50603) *
                        C50788 * C50662 * C50698 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50662 * C50874) *
                       C50917 +
                   (((C7990 + C7989 + C7988) * C50857 +
                     (C7991 + C7992 + C7993) * C50603) *
                        C50788 * C50662 * C50874 -
                    ((C7931 * C1076 + C8534 + C8534 + C7924 * C1084 +
                      C7929 * C282 + C8535 + C8535 + C7923 * C302 +
                      C7927 * C275 + C8536 + C8536 + C7922 * C295) *
                         C50603 +
                     (C8545 + C8544 + C8543) * C50857) *
                        C50788 * C50662 * C50698) *
                       C618)) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                      C168 * C107 + C169 * C108 + C170 * C109) *
                         C50788 * C50875 -
                     (C511 * C109 + C512 * C108 + C513 * C107 +
                      (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                         C50788 * C50726) *
                        C50874 +
                    (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                      C900 * C107 + C901 * C108 + C902 * C109) *
                         C50788 * C50726 -
                     (C340 * C109 + C341 * C108 + C342 * C107 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                         C50788 * C50875) *
                        C50698) *
                       C273 +
                   (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                         C50788 * C50726 -
                     (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                         C50788 * C50875) *
                        C50874 +
                    ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                         C50788 * C50875 -
                     ((C117 * C871 + C893 + C893 + C50758 * C881) * C109 +
                      C902 * C108 + C901 * C107 + C900 * C106) *
                         C50788 * C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                       C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                       C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                          C50857 +
                      (C7985 + C7986 + C7987) * C50603) *
                         C50788 * C50875 -
                     ((C8376 + C8377 + C8378) * C50603 +
                      (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                       C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                       C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                          C50857) *
                         C50788 * C50726) *
                        C50874 +
                    (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                       C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                       C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                          C50857 +
                      (C8925 + C8926 + C8927) * C50603) *
                         C50788 * C50726 -
                     ((C8182 + C8183 + C8184) * C50603 +
                      (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                       C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                       C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                          C50857) *
                         C50788 * C50875) *
                        C50698) *
                       C273 +
                   ((((C8378 + C8377 + C8376) * C50857 +
                      (C8707 + C8708 + C8709) * C50603) *
                         C50788 * C50726 -
                     ((C7988 + C7989 + C7990) * C50603 +
                      (C7987 + C7986 + C7985) * C50857) *
                         C50788 * C50875) *
                        C50874 +
                    (((C8184 + C8183 + C8182) * C50857 +
                      (C8543 + C8544 + C8545) * C50603) *
                         C50788 * C50875 -
                     ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                       C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                       C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                          C50603 +
                      (C8927 + C8926 + C8925) * C50857) *
                         C50788 * C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[182] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50662 * C270 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50662 * C271 +
                    ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                     C343 * C107 + C344 * C108 + C345 * C109) *
                        C50788 * C50662 * C272) *
                       C273 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 +
                     (C117 * C283 + C326 + C326 + C50758 * C303) * C109) *
                        C50788 * C50662 * C271 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50662 * C270 -
                    ((C117 * C284 + C327 + C327 + C50758 * C304) * C109 +
                     C345 * C108 + C344 * C107 + C343 * C106) *
                        C50788 * C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C50646 * C113 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C50662 * C50646 * C114 +
                   (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50788 * C50662 * C50646 * C115 -
                   ((C117 * C125 + C157 + C157 + C50758 * C139) * C109 +
                    C172 * C108 + C171 * C107 + C170 * C106) *
                       C50788 * C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C443 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C444 +
                    ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                     C514 * C107 + C515 * C108 + C516 * C109) *
                        C50788 * C445) *
                       C50646 * C273 +
                   ((C513 * C106 + C512 * C107 + C511 * C108 +
                     (C117 * C454 + C497 + C497 + C50758 * C474) * C109) *
                        C50788 * C444 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C443 -
                    ((C117 * C455 + C498 + C498 + C50758 * C475) * C109 +
                     C516 * C108 + C515 * C107 + C514 * C106) *
                        C50788 * C445) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C50646 * C113 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50662 * C50646 * C114 +
                   ((C7990 + C7989 + C7988) * C50857 +
                    (C7991 + C7992 + C7993) * C50603) *
                       C50788 * C50662 * C50646 * C115 -
                   ((C7931 * C284 + C7964 + C7964 + C7924 * C304 +
                     C7929 * C283 + C7965 + C7965 + C7923 * C303 +
                     C7927 * C123 + C7966 + C7966 + C7922 * C137) *
                        C50603 +
                    (C7993 + C7992 + C7991) * C50857) *
                       C50788 * C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50662 * C270 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50662 * C271 +
                    ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50857 +
                     (C8185 + C8186 + C8187) * C50603) *
                        C50788 * C50662 * C272) *
                       C273 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C7927 * C276 + C8164 + C8164 + C7922 * C296 +
                      C7929 * C281 + C8165 + C8165 + C7923 * C301 +
                      C7931 * C1077 + C8166 + C8166 + C7924 * C1085) *
                         C50603) *
                        C50788 * C50662 * C271 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50662 * C270 -
                    ((C7931 * C3515 + C8167 + C8167 + C7924 * C3521 +
                      C7929 * C1077 + C8168 + C8168 + C7923 * C1085 +
                      C7927 * C281 + C8169 + C8169 + C7922 * C301) *
                         C50603 +
                     (C8187 + C8186 + C8185) * C50857) *
                        C50788 * C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C443 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C444 +
                    ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                      C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                      C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                         C50857 +
                     (C8379 + C8380 + C8381) * C50603) *
                        C50788 * C445) *
                       C50646 * C273 +
                   (((C8378 + C8377 + C8376) * C50857 +
                     (C7927 * C447 + C8358 + C8358 + C7922 * C467 +
                      C7929 * C869 + C8359 + C8359 + C7923 * C879 +
                      C7931 * C1538 + C8360 + C8360 + C7924 * C1546) *
                         C50603) *
                        C50788 * C444 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C443 -
                    ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                      C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                      C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                         C50603 +
                     (C8381 + C8380 + C8379) * C50857) *
                        C50788 * C445) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[183] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50875 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C50646 * C50916 +
                   ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50726 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50875) *
                       C50646 * C50917 +
                   ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                        C50788 * C50875 -
                    ((C117 * C728 + C734 + C734 + C50758 * C730) * C109 +
                     C737 * C108 + C511 * C107 + C512 * C106) *
                        C50788 * C50726) *
                       C50646 * C618)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50875 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C50646 * C50916 +
                   (((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50726 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50875) *
                       C50646 * C50917 +
                   (((C7990 + C7989 + C7988) * C50857 +
                     (C7991 + C7992 + C7993) * C50603) *
                        C50788 * C50875 -
                    ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 +
                      C7929 * C870 + C8699 + C8699 + C7923 * C880 +
                      C7927 * C446 + C8700 + C8700 + C7922 * C466) *
                         C50603 +
                     (C8709 + C8708 + C8707) * C50857) *
                        C50788 * C50726) *
                       C50646 * C618)) /
                     (p * q * std::sqrt(p + q));
    d2ee[184] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C50646 * C113 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50788 * C50662 * C50646 * C114 +
                   (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50788 * C50662 * C50646 * C115 -
                   ((C117 * C125 + C157 + C157 + C50758 * C139) * C109 +
                    C172 * C108 + C171 * C107 + C170 * C106) *
                       C50788 * C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50662 * C270 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50662 * C271 +
                    ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                     C343 * C107 + C344 * C108 + C345 * C109) *
                        C50788 * C50662 * C272) *
                       C273 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 +
                     (C117 * C283 + C326 + C326 + C50758 * C303) * C109) *
                        C50788 * C50662 * C271 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50662 * C270 -
                    ((C117 * C284 + C327 + C327 + C50758 * C304) * C109 +
                     C345 * C108 + C344 * C107 + C343 * C106) *
                        C50788 * C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C50646 * C113 -
                   ((C7988 + C7989 + C7990) * C50603 +
                    (C7987 + C7986 + C7985) * C50857) *
                       C50788 * C50662 * C50646 * C114 +
                   ((C7990 + C7989 + C7988) * C50857 +
                    (C7991 + C7992 + C7993) * C50603) *
                       C50788 * C50662 * C50646 * C115 -
                   ((C7931 * C284 + C7964 + C7964 + C7924 * C304 +
                     C7929 * C283 + C7965 + C7965 + C7923 * C303 +
                     C7927 * C123 + C7966 + C7966 + C7922 * C137) *
                        C50603 +
                    (C7993 + C7992 + C7991) * C50857) *
                       C50788 * C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50662 * C270 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50662 * C271 +
                    ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50857 +
                     (C8185 + C8186 + C8187) * C50603) *
                        C50788 * C50662 * C272) *
                       C273 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C7927 * C276 + C8164 + C8164 + C7922 * C296 +
                      C7929 * C281 + C8165 + C8165 + C7923 * C301 +
                      C7931 * C1077 + C8166 + C8166 + C7924 * C1085) *
                         C50603) *
                        C50788 * C50662 * C271 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50662 * C270 -
                    ((C7931 * C3515 + C8167 + C8167 + C7924 * C3521 +
                      C7929 * C1077 + C8168 + C8168 + C7923 * C1085 +
                      C7927 * C281 + C8169 + C8169 + C7922 * C301) *
                         C50603 +
                     (C8187 + C8186 + C8185) * C50857) *
                        C50788 * C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[185] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50662 * C50918 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50662 * C50919 +
                    ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                     C343 * C107 + C344 * C108 + C345 * C109) *
                        C50788 * C50662 * C1306) *
                       C50866 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50788 * C50662 * C50919 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50662 * C50918 -
                    ((C117 * C284 + C327 + C327 + C50758 * C304) * C109 +
                     C345 * C108 + C344 * C107 + C343 * C106) *
                        C50788 * C50662 * C1306) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50662 * C50918 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50662 * C50919 +
                    ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50857 +
                     (C8185 + C8186 + C8187) * C50603) *
                        C50788 * C50662 * C1306) *
                       C50866 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C8543 + C8544 + C8545) * C50603) *
                        C50788 * C50662 * C50919 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50662 * C50918 -
                    ((C7931 * C3515 + C8167 + C8167 + C7924 * C3521 +
                      C7929 * C1077 + C8168 + C8168 + C7923 * C1085 +
                      C7927 * C281 + C8169 + C8169 + C7922 * C301) *
                         C50603 +
                     (C8187 + C8186 + C8185) * C50857) *
                        C50788 * C50662 * C1306) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[186] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50875 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C50918 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C50726 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50875) *
                       C50919 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                     C343 * C107 + C344 * C108 + C345 * C109) *
                        C50788 * C50875 -
                    ((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C109 +
                     (C117 * C1538 + C1551 + C1551 + C50758 * C1546) * C108 +
                     (C117 * C1539 + C1552 + C1552 + C50758 * C1547) * C107 +
                     (C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C106) *
                        C50788 * C50726) *
                       C1306) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50875 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C50918 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C50726 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50875) *
                       C50919 +
                   (((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50857 +
                     (C8185 + C8186 + C8187) * C50603) *
                        C50788 * C50875 -
                    ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 +
                      C7929 * C4178 + C9835 + C9835 + C7923 * C4184 +
                      C7927 * C1539 + C9836 + C9836 + C7922 * C1547) *
                         C50603 +
                     (C7931 * C9828 + C9837 + C9837 + C7924 * C9832 +
                      C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                      C7927 * C1540 + C9839 + C9839 + C7922 * C1548) *
                         C50857) *
                        C50788 * C50726) *
                       C1306) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[187] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C1071 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                       C50788 * C50662 * C1072 +
                   ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50788 * C50662 * C1073 -
                   ((C117 * C1076 + C1089 + C1089 + C50758 * C1084) * C109 +
                    (C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C108 +
                    (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C107 +
                    (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C106) *
                       C50788 * C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50662 * C1000 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50662 * C50698) *
                       C1002 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50788 * C50662 * C50698 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50662 * C1000) *
                       C1003 +
                   ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                        C50788 * C50662 * C1000 -
                    ((C117 * C619 + C625 + C625 + C50758 * C621) * C109 +
                     C628 * C108 + C340 * C107 + C341 * C106) *
                        C50788 * C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C443 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C444 +
                    ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                     C514 * C107 + C515 * C108 + C516 * C109) *
                        C50788 * C445) *
                       C1000 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C444 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C443 -
                    ((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C109 +
                     (C117 * C1191 + C1204 + C1204 + C50758 * C1199) * C108 +
                     (C117 * C1192 + C1205 + C1205 + C50758 * C1200) * C107 +
                     (C117 * C1193 + C1206 + C1206 + C50758 * C1201) * C106) *
                        C50788 * C445) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50662 * C1000 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50662 * C50698) *
                       C1002 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C8543 + C8544 + C8545) * C50603) *
                        C50788 * C50662 * C50698 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50662 * C1000) *
                       C1003 +
                   (((C7990 + C7989 + C7988) * C50857 +
                     (C7991 + C7992 + C7993) * C50603) *
                        C50788 * C50662 * C1000 -
                    ((C7931 * C1076 + C8534 + C8534 + C7924 * C1084 +
                      C7929 * C282 + C8535 + C8535 + C7923 * C302 +
                      C7927 * C275 + C8536 + C8536 + C7922 * C295) *
                         C50603 +
                     (C8545 + C8544 + C8543) * C50857) *
                        C50788 * C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C1071 -
                   ((C8182 + C8183 + C8184) * C50603 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50857) *
                       C50788 * C50662 * C1072 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50857 +
                    (C8185 + C8186 + C8187) * C50603) *
                       C50788 * C50662 * C1073 -
                   ((C7931 * C9171 + C9178 + C9178 + C7924 * C9175 +
                     C7929 * C3516 + C9179 + C9179 + C7923 * C3522 +
                     C7927 * C1078 + C9180 + C9180 + C7922 * C1086) *
                        C50603 +
                    (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 +
                     C7929 * C3517 + C9182 + C9182 + C7923 * C3523 +
                     C7927 * C1079 + C9183 + C9183 + C7922 * C1087) *
                        C50857) *
                       C50788 * C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C443 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C444 +
                    ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                      C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                      C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                         C50857 +
                     (C8379 + C8380 + C8381) * C50603) *
                        C50788 * C445) *
                       C1000 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C444 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C443 -
                    ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 +
                      C7929 * C3677 + C9337 + C9337 + C7923 * C3683 +
                      C7927 * C1192 + C9338 + C9338 + C7922 * C1200) *
                         C50603 +
                     (C7931 * C9330 + C9339 + C9339 + C7924 * C9334 +
                      C7929 * C3678 + C9340 + C9340 + C7923 * C3684 +
                      C7927 * C1193 + C9341 + C9341 + C7922 * C1201) *
                         C50857) *
                        C50788 * C445) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[188] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                      C168 * C107 + C169 * C108 + C170 * C109) *
                         C50788 * C50875 -
                     (C511 * C109 + C512 * C108 + C513 * C107 +
                      (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                         C50788 * C50726) *
                        C1000 +
                    (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                      C900 * C107 + C901 * C108 + C902 * C109) *
                         C50788 * C50726 -
                     (C340 * C109 + C341 * C108 + C342 * C107 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                         C50788 * C50875) *
                        C50698) *
                       C50866 +
                   (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                         C50788 * C50726 -
                     (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                         C50788 * C50875) *
                        C1000 +
                    ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                         C50788 * C50875 -
                     ((C117 * C871 + C893 + C893 + C50758 * C881) * C109 +
                      C902 * C108 + C901 * C107 + C900 * C106) *
                         C50788 * C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                       C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                       C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                          C50857 +
                      (C7985 + C7986 + C7987) * C50603) *
                         C50788 * C50875 -
                     ((C8376 + C8377 + C8378) * C50603 +
                      (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                       C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                       C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                          C50857) *
                         C50788 * C50726) *
                        C1000 +
                    (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                       C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                       C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                          C50857 +
                      (C8925 + C8926 + C8927) * C50603) *
                         C50788 * C50726 -
                     ((C8182 + C8183 + C8184) * C50603 +
                      (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                       C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                       C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                          C50857) *
                         C50788 * C50875) *
                        C50698) *
                       C50866 +
                   ((((C8378 + C8377 + C8376) * C50857 +
                      (C8707 + C8708 + C8709) * C50603) *
                         C50788 * C50726 -
                     ((C7988 + C7989 + C7990) * C50603 +
                      (C7987 + C7986 + C7985) * C50857) *
                         C50788 * C50875) *
                        C1000 +
                    (((C8184 + C8183 + C8182) * C50857 +
                      (C8543 + C8544 + C8545) * C50603) *
                         C50788 * C50875 -
                     ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                       C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                       C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                          C50603 +
                      (C8927 + C8926 + C8925) * C50857) *
                         C50788 * C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[189] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50662 * C1000 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50662 * C50698) *
                       C1002 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50788 * C50662 * C50698 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50662 * C1000) *
                       C1003 +
                   ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                        C50788 * C50662 * C1000 -
                    ((C117 * C619 + C625 + C625 + C50758 * C621) * C109 +
                     C628 * C108 + C340 * C107 + C341 * C106) *
                        C50788 * C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C50662 * C1071 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                       C50788 * C50662 * C1072 +
                   ((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50788 * C50662 * C1073 -
                   ((C117 * C1076 + C1089 + C1089 + C50758 * C1084) * C109 +
                    (C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C108 +
                    (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C107 +
                    (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C106) *
                       C50788 * C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50662 * C1000 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50662 * C50698) *
                       C1002 +
                   (((C8184 + C8183 + C8182) * C50857 +
                     (C8543 + C8544 + C8545) * C50603) *
                        C50788 * C50662 * C50698 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50662 * C1000) *
                       C1003 +
                   (((C7990 + C7989 + C7988) * C50857 +
                     (C7991 + C7992 + C7993) * C50603) *
                        C50788 * C50662 * C1000 -
                    ((C7931 * C1076 + C8534 + C8534 + C7924 * C1084 +
                      C7929 * C282 + C8535 + C8535 + C7923 * C302 +
                      C7927 * C275 + C8536 + C8536 + C7922 * C295) *
                         C50603 +
                     (C8545 + C8544 + C8543) * C50857) *
                        C50788 * C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C50662 * C1071 -
                   ((C8182 + C8183 + C8184) * C50603 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50857) *
                       C50788 * C50662 * C1072 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50857 +
                    (C8185 + C8186 + C8187) * C50603) *
                       C50788 * C50662 * C1073 -
                   ((C7931 * C9171 + C9178 + C9178 + C7924 * C9175 +
                     C7929 * C3516 + C9179 + C9179 + C7923 * C3522 +
                     C7927 * C1078 + C9180 + C9180 + C7922 * C1086) *
                        C50603 +
                    (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 +
                     C7929 * C3517 + C9182 + C9182 + C7923 * C3523 +
                     C7927 * C1079 + C9183 + C9183 + C7922 * C1087) *
                        C50857) *
                       C50788 * C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[190] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                      C168 * C107 + C169 * C108 + C170 * C109) *
                         C50788 * C1651 -
                     (C511 * C109 + C512 * C108 + C513 * C107 +
                      (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                         C50788 * C50726) *
                        C50874 +
                    (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                      C900 * C107 + C901 * C108 + C902 * C109) *
                         C50788 * C50726 -
                     (C340 * C109 + C341 * C108 + C342 * C107 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                         C50788 * C1651) *
                        C50698) *
                       C50866 +
                   (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                         C50788 * C50726 -
                     (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                         C50788 * C1651) *
                        C50874 +
                    ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                         C50788 * C1651 -
                     ((C117 * C871 + C893 + C893 + C50758 * C881) * C109 +
                      C902 * C108 + C901 * C107 + C900 * C106) *
                         C50788 * C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                       C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                       C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                          C50857 +
                      (C7985 + C7986 + C7987) * C50603) *
                         C50788 * C1651 -
                     ((C8376 + C8377 + C8378) * C50603 +
                      (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                       C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                       C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                          C50857) *
                         C50788 * C50726) *
                        C50874 +
                    (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                       C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                       C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                          C50857 +
                      (C8925 + C8926 + C8927) * C50603) *
                         C50788 * C50726 -
                     ((C8182 + C8183 + C8184) * C50603 +
                      (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                       C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                       C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                          C50857) *
                         C50788 * C1651) *
                        C50698) *
                       C50866 +
                   ((((C8378 + C8377 + C8376) * C50857 +
                      (C8707 + C8708 + C8709) * C50603) *
                         C50788 * C50726 -
                     ((C7988 + C7989 + C7990) * C50603 +
                      (C7987 + C7986 + C7985) * C50857) *
                         C50788 * C1651) *
                        C50874 +
                    (((C8184 + C8183 + C8182) * C50857 +
                      (C8543 + C8544 + C8545) * C50603) *
                         C50788 * C1651 -
                     ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                       C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                       C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                          C50603 +
                      (C8927 + C8926 + C8925) * C50857) *
                         C50788 * C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[191] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50920 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50921 +
                    ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                     C514 * C107 + C515 * C108 + C516 * C109) *
                        C50788 * C2067) *
                       C50874 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C50921 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C50920 -
                    ((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C109 +
                     (C117 * C1191 + C1204 + C1204 + C50758 * C1199) * C108 +
                     (C117 * C1192 + C1205 + C1205 + C50758 * C1200) * C107 +
                     (C117 * C1193 + C1206 + C1206 + C50758 * C1201) * C106) *
                        C50788 * C2067) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50920 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50921 +
                    ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                      C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                      C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                         C50857 +
                     (C8379 + C8380 + C8381) * C50603) *
                        C50788 * C2067) *
                       C50874 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C50921 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C50920 -
                    ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 +
                      C7929 * C3677 + C9337 + C9337 + C7923 * C3683 +
                      C7927 * C1192 + C9338 + C9338 + C7922 * C1200) *
                         C50603 +
                     (C7931 * C9330 + C9339 + C9339 + C7924 * C9334 +
                      C7929 * C3678 + C9340 + C9340 + C7923 * C3684 +
                      C7927 * C1193 + C9341 + C9341 + C7922 * C1201) *
                         C50857) *
                        C50788 * C2067) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[192] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C1651 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C270 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C50726 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C1651) *
                       C271 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                     C343 * C107 + C344 * C108 + C345 * C109) *
                        C50788 * C1651 -
                    ((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C109 +
                     (C117 * C1538 + C1551 + C1551 + C50758 * C1546) * C108 +
                     (C117 * C1539 + C1552 + C1552 + C50758 * C1547) * C107 +
                     (C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C106) *
                        C50788 * C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C1651 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C50646 * C1002 +
                   ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50726 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C1651) *
                       C50646 * C1003 +
                   ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                        C50788 * C1651 -
                    ((C117 * C728 + C734 + C734 + C50758 * C730) * C109 +
                     C737 * C108 + C511 * C107 + C512 * C106) *
                        C50788 * C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50788 * C1817 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                       C50788 * C1818 +
                   ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                    C514 * C107 + C515 * C108 + C516 * C109) *
                       C50788 * C1819 -
                   ((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C109 +
                    (C117 * C1822 + C1835 + C1835 + C50758 * C1830) * C108 +
                    (C117 * C1823 + C1836 + C1836 + C50758 * C1831) * C107 +
                    (C117 * C1824 + C1837 + C1837 + C50758 * C1832) * C106) *
                       C50788 * C1820) *
                  C50646 * C50627) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C1651 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C50646 * C1002 +
                   (((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50726 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C1651) *
                       C50646 * C1003 +
                   (((C7990 + C7989 + C7988) * C50857 +
                     (C7991 + C7992 + C7993) * C50603) *
                        C50788 * C1651 -
                    ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 +
                      C7929 * C870 + C8699 + C8699 + C7923 * C880 +
                      C7927 * C446 + C8700 + C8700 + C7922 * C466) *
                         C50603 +
                     (C8709 + C8708 + C8707) * C50857) *
                        C50788 * C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C1651 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C270 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C50726 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C1651) *
                       C271 +
                   (((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50857 +
                     (C8185 + C8186 + C8187) * C50603) *
                        C50788 * C1651 -
                    ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 +
                      C7929 * C4178 + C9835 + C9835 + C7923 * C4184 +
                      C7927 * C1539 + C9836 + C9836 + C7922 * C1547) *
                         C50603 +
                     (C7931 * C9828 + C9837 + C9837 + C7924 * C9832 +
                      C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                      C7927 * C1540 + C9839 + C9839 + C7922 * C1548) *
                         C50857) *
                        C50788 * C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50857 +
                    (C7985 + C7986 + C7987) * C50603) *
                       C50788 * C1817 -
                   ((C8376 + C8377 + C8378) * C50603 +
                    (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                     C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                     C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                        C50857) *
                       C50788 * C1818 +
                   ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                     C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                     C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                        C50857 +
                    (C8379 + C8380 + C8381) * C50603) *
                       C50788 * C1819 -
                   ((C7931 * C10229 + C10236 + C10236 + C7924 * C10233 +
                     C7929 * C4583 + C10237 + C10237 + C7923 * C4589 +
                     C7927 * C1823 + C10238 + C10238 + C7922 * C1831) *
                        C50603 +
                    (C7931 * C10230 + C10239 + C10239 + C7924 * C10234 +
                     C7929 * C4584 + C10240 + C10240 + C7923 * C4590 +
                     C7927 * C1824 + C10241 + C10241 + C7922 * C1832) *
                        C50857) *
                       C50788 * C1820) *
                  C50646 * C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[193] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C50920 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50921 +
                    ((C117 * C450 + C487 + C487 + C50758 * C470) * C106 +
                     C514 * C107 + C515 * C108 + C516 * C109) *
                        C50788 * C2067) *
                       C50646 * C50866 +
                   ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50921 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C50920 -
                    ((C117 * C455 + C498 + C498 + C50758 * C475) * C109 +
                     C516 * C108 + C515 * C107 + C514 * C106) *
                        C50788 * C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C50920 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50921 +
                    ((C7927 * C450 + C8346 + C8346 + C7922 * C470 +
                      C7929 * C1193 + C8347 + C8347 + C7923 * C1201 +
                      C7931 * C3678 + C8348 + C8348 + C7924 * C3684) *
                         C50857 +
                     (C8379 + C8380 + C8381) * C50603) *
                        C50788 * C2067) *
                       C50646 * C50866 +
                   (((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50921 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C50920 -
                    ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                      C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                      C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                         C50603 +
                     (C8381 + C8380 + C8379) * C50857) *
                        C50788 * C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[194] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C1651 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C50646 * C1002 +
                   ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50788 * C50726 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50788 * C1651) *
                       C50646 * C1003 +
                   ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                        C50788 * C1651 -
                    ((C117 * C728 + C734 + C734 + C50758 * C730) * C109 +
                     C737 * C108 + C511 * C107 + C512 * C106) *
                        C50788 * C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50788 * C1651 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50758 * C469) * C106) *
                        C50788 * C50726) *
                       C270 +
                   (((C117 * C867 + C883 + C883 + C50758 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50788 * C50726 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C106) *
                        C50788 * C1651) *
                       C271 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C106 +
                     C343 * C107 + C344 * C108 + C345 * C109) *
                        C50788 * C1651 -
                    ((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C109 +
                     (C117 * C1538 + C1551 + C1551 + C50758 * C1546) * C108 +
                     (C117 * C1539 + C1552 + C1552 + C50758 * C1547) * C107 +
                     (C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C106) *
                        C50788 * C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C1651 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C50646 * C1002 +
                   (((C8378 + C8377 + C8376) * C50857 +
                     (C8707 + C8708 + C8709) * C50603) *
                        C50788 * C50726 -
                    ((C7988 + C7989 + C7990) * C50603 +
                     (C7987 + C7986 + C7985) * C50857) *
                        C50788 * C1651) *
                       C50646 * C1003 +
                   (((C7990 + C7989 + C7988) * C50857 +
                     (C7991 + C7992 + C7993) * C50603) *
                        C50788 * C1651 -
                    ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 +
                      C7929 * C870 + C8699 + C8699 + C7923 * C880 +
                      C7927 * C446 + C8700 + C8700 + C7922 * C466) *
                         C50603 +
                     (C8709 + C8708 + C8707) * C50857) *
                        C50788 * C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50857 +
                     (C7985 + C7986 + C7987) * C50603) *
                        C50788 * C1651 -
                    ((C8376 + C8377 + C8378) * C50603 +
                     (C7931 * C1540 + C8343 + C8343 + C7924 * C1548 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7927 * C449 + C8345 + C8345 + C7922 * C469) *
                         C50857) *
                        C50788 * C50726) *
                       C270 +
                   (((C7927 * C867 + C8904 + C8904 + C7922 * C877 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7931 * C4179 + C8906 + C8906 + C7924 * C4185) *
                         C50857 +
                     (C8925 + C8926 + C8927) * C50603) *
                        C50788 * C50726 -
                    ((C8182 + C8183 + C8184) * C50603 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50857) *
                        C50788 * C1651) *
                       C271 +
                   (((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50857 +
                     (C8185 + C8186 + C8187) * C50603) *
                        C50788 * C1651 -
                    ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 +
                      C7929 * C4178 + C9835 + C9835 + C7923 * C4184 +
                      C7927 * C1539 + C9836 + C9836 + C7922 * C1547) *
                         C50603 +
                     (C7931 * C9828 + C9837 + C9837 + C7924 * C9832 +
                      C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                      C7927 * C1540 + C9839 + C9839 + C7922 * C1548) *
                         C50857) *
                        C50788 * C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C50874 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50698) *
              C50916 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50698 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C50874) *
              C50917 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50662 * C50874 -
           ((C2271 * C284 + C2883 + C2883 + C50774 * C304 + C2269 * C283 +
             C2884 + C2884 + C50884 * C303) *
                C2268 +
            (C2890 + C2889) * C2267 + C2878 * C2266) *
               C50788 * C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C50874 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50698) *
              C50916 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50698 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C50874) *
              C50917 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50662 * C50874 -
           (C10804 * C3515 + C11149 + C11149 + C10796 * C3521 + C10802 * C1077 +
            C11150 + C11150 + C10795 * C1085 + C10800 * C281 + C11151 + C11151 +
            C10794 * C301 + C10798 * C276 + C11152 + C11152 + C10793 * C296) *
               C50598 * C50788 * C50662 * C50698) *
              C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C2266 +
             (C2318 + C2319) * C2267 + C2326 * C2268) *
                C50788 * C50875 -
            (C3037 * C2268 + (C2726 + C2727) * C2267 +
             (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
              C2689 + C2689 + C50884 * C469) *
                 C2266) *
                C50788 * C50726) *
               C50874 +
           (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
              C3245 + C3245 + C50774 * C1548) *
                 C2266 +
             (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                C50788 * C50726 -
            (C2878 * C2268 + (C2524 + C2525) * C2267 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C2266) *
                C50788 * C50875) *
               C50698) *
              C273 +
          ((((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
             (C3048 + C3049) * C2268) *
                C50788 * C50726 -
            (C2327 * C2268 + (C2321 + C2320) * C2267 +
             (C2319 + C2318) * C2266) *
                C50788 * C50875) *
               C50874 +
           (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
             (C2889 + C2890) * C2268) *
                C50788 * C50875 -
            ((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C2268 +
             (C3271 + C3270) * C2267 + (C3269 + C3268) * C2266) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
             C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
             C10795 * C299 + C10804 * C1079 + C10810 + C10810 +
             C10796 * C1087) *
                C50598 * C50788 * C50875 -
            (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 +
             C10802 * C1540 + C11036 + C11036 + C10795 * C1548 + C10800 * C867 +
             C11037 + C11037 + C10794 * C877 + C10798 * C449 + C11038 + C11038 +
             C10793 * C469) *
                C50598 * C50788 * C50726) *
               C50874 +
           ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
             C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
             C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
             C10796 * C9832) *
                C50598 * C50788 * C50726 -
            (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 +
             C10802 * C1079 + C10922 + C10922 + C10795 * C1087 + C10800 * C279 +
             C10923 + C10923 + C10794 * C299 + C10798 * C278 + C10924 + C10924 +
             C10793 * C298) *
                C50598 * C50788 * C50875) *
               C50698) *
              C273 +
          (((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
             C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 +
             C11045 + C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
             C10796 * C4184) *
                C50598 * C50788 * C50726 -
            (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
             C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
             C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
                C50598 * C50788 * C50875) *
               C50874 +
           ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
             C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 +
             C10931 + C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
             C10796 * C3522) *
                C50598 * C50788 * C50875 -
            (C10804 * C9827 + C11389 + C11389 + C10796 * C9831 +
             C10802 * C4178 + C11390 + C11390 + C10795 * C4184 +
             C10800 * C1539 + C11391 + C11391 + C10794 * C1547 + C10798 * C868 +
             C11392 + C11392 + C10793 * C878) *
                C50598 * C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C270 -
           ((C2522 + C2523) * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C271 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50662 * C272) *
              C273 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2269 * C275 + C2502 + C2502 + C50884 * C295 + C2271 * C282 +
             C2503 + C2503 + C50774 * C302) *
                C2268) *
               C50788 * C50662 * C271 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C270 -
           ((C2271 * C1076 + C2504 + C2504 + C50774 * C1084 + C2269 * C282 +
             C2505 + C2505 + C50884 * C302) *
                C2268 +
            (C2529 + C2528) * C2267 + (C2527 + C2526) * C2266) *
               C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C50662 * C50646 * C113 -
          (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
              C50788 * C50662 * C50646 * C114 +
          (C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
              C50788 * C50662 * C50646 * C115 -
          ((C2271 * C619 + C2300 + C2300 + C50774 * C621 + C2269 * C124 +
            C2301 + C2301 + C50884 * C138) *
               C2268 +
           (C2325 + C2324) * C2267 + C2327 * C2266) *
              C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C443 -
           ((C2724 + C2725) * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C444 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C445) *
              C50646 * C273 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C2269 * C446 + C2704 + C2704 + C50884 * C466 + C2271 * C870 +
             C2705 + C2705 + C50774 * C880) *
                C2268) *
               C50788 * C444 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C443 -
           ((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
             C2707 + C2707 + C50884 * C473) *
                C2268 +
            (C2731 + C2730) * C2267 + (C2729 + C2728) * C2266) *
               C50788 * C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C50646 * C113 -
          (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
           C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
           C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
              C50598 * C50788 * C50662 * C50646 * C114 +
          (C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
           C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
           C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
              C50598 * C50788 * C50662 * C50646 * C115 -
          (C10804 * C1076 + C10819 + C10819 + C10796 * C1084 + C10802 * C282 +
           C10820 + C10820 + C10795 * C302 + C10800 * C275 + C10821 + C10821 +
           C10794 * C295 + C10798 * C122 + C10822 + C10822 + C10793 * C136) *
              C50598 * C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C271 +
           (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50662 * C272) *
              C273 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C271 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C9171 + C10933 + C10933 + C10796 * C9175 + C10802 * C3516 +
            C10934 + C10934 + C10795 * C3522 + C10800 * C1078 + C10935 +
            C10935 + C10794 * C1086 + C10798 * C280 + C10936 + C10936 +
            C10793 * C300) *
               C50598 * C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C443 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C444 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C445) *
              C50646 * C273 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C444 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C443 -
           (C10804 * C9329 + C11047 + C11047 + C10796 * C9333 + C10802 * C3677 +
            C11048 + C11048 + C10795 * C3683 + C10800 * C1192 + C11049 +
            C11049 + C10794 * C1200 + C10798 * C451 + C11050 + C11050 +
            C10793 * C471) *
               C50598 * C50788 * C445) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50875 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50646 * C50916 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50726 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50875) *
              C50646 * C50917 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50875 -
           ((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C2268 +
            (C3049 + C3048) * C2267 + C3037 * C2266) *
               C50788 * C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50875 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50646 * C50916 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50726 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50875) *
              C50646 * C50917 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50875 -
           (C10804 * C4177 + C11251 + C11251 + C10796 * C4183 + C10802 * C1538 +
            C11252 + C11252 + C10795 * C1546 + C10800 * C869 + C11253 + C11253 +
            C10794 * C879 + C10798 * C447 + C11254 + C11254 + C10793 * C467) *
               C50598 * C50788 * C50726) *
              C50646 * C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C50662 * C50646 * C113 -
          (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
              C50788 * C50662 * C50646 * C114 +
          (C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
              C50788 * C50662 * C50646 * C115 -
          ((C2271 * C619 + C2300 + C2300 + C50774 * C621 + C2269 * C124 +
            C2301 + C2301 + C50884 * C138) *
               C2268 +
           (C2325 + C2324) * C2267 + C2327 * C2266) *
              C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C270 -
           ((C2522 + C2523) * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C271 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50662 * C272) *
              C273 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2269 * C275 + C2502 + C2502 + C50884 * C295 + C2271 * C282 +
             C2503 + C2503 + C50774 * C302) *
                C2268) *
               C50788 * C50662 * C271 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C270 -
           ((C2271 * C1076 + C2504 + C2504 + C50774 * C1084 + C2269 * C282 +
             C2505 + C2505 + C50884 * C302) *
                C2268 +
            (C2529 + C2528) * C2267 + (C2527 + C2526) * C2266) *
               C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C50646 * C113 -
          (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
           C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
           C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
              C50598 * C50788 * C50662 * C50646 * C114 +
          (C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
           C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
           C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
              C50598 * C50788 * C50662 * C50646 * C115 -
          (C10804 * C1076 + C10819 + C10819 + C10796 * C1084 + C10802 * C282 +
           C10820 + C10820 + C10795 * C302 + C10800 * C275 + C10821 + C10821 +
           C10794 * C295 + C10798 * C122 + C10822 + C10822 + C10793 * C136) *
              C50598 * C50788 * C50662 * C50646 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C271 +
           (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50662 * C272) *
              C273 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C271 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C270 -
           (C10804 * C9171 + C10933 + C10933 + C10796 * C9175 + C10802 * C3516 +
            C10934 + C10934 + C10795 * C3522 + C10800 * C1078 + C10935 +
            C10935 + C10794 * C1086 + C10798 * C280 + C10936 + C10936 +
            C10793 * C300) *
               C50598 * C50788 * C50662 * C272) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C50918 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50919 +
           ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50662 * C1306) *
              C50866 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50919 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C50918 -
           ((C2271 * C1076 + C2504 + C2504 + C50774 * C1084 + C2269 * C282 +
             C2505 + C2505 + C50884 * C302) *
                C2268 +
            (C2529 + C2528) * C2267 + (C2527 + C2526) * C2266) *
               C50788 * C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C50918 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50919 +
           (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50662 * C1306) *
              C50866 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50919 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C50918 -
           (C10804 * C9171 + C10933 + C10933 + C10796 * C9175 + C10802 * C3516 +
            C10934 + C10934 + C10795 * C3522 + C10800 * C1078 + C10935 +
            C10935 + C10794 * C1086 + C10798 * C280 + C10936 + C10936 +
            C10793 * C300) *
               C50598 * C50788 * C50662 * C1306) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50875 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50918 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50726 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50875) *
              C50919 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C50875 -
           ((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
             C4188 + C4188 + C50884 * C1546) *
                C2268 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C2267 +
            (C2271 * C4179 + C4191 + C4191 + C50774 * C4185 + C2269 * C1540 +
             C4192 + C4192 + C50884 * C1548) *
                C2266) *
               C50788 * C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50875 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50918 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50726 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50875) *
              C50919 +
          ((C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C50875 -
           (C10804 * C11994 + C11998 + C11998 + C10796 * C11996 +
            C10802 * C9828 + C11999 + C11999 + C10795 * C9832 + C10800 * C4179 +
            C12000 + C12000 + C10794 * C4185 + C10798 * C1540 + C12001 +
            C12001 + C10793 * C1548) *
               C50598 * C50788 * C50726) *
              C1306) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C50662 * C1071 -
          (C2878 * C2268 + (C2524 + C2525) * C2267 +
           (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
            C2487 + C2487 + C50884 * C298) *
               C2266) *
              C50788 * C50662 * C1072 +
          ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
            C2489 + C2489 + C50774 * C1087) *
               C2266 +
           (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
              C50788 * C50662 * C1073 -
          ((C2271 * C3515 + C3525 + C3525 + C50774 * C3521 + C2269 * C1077 +
            C3526 + C3526 + C50884 * C1085) *
               C2268 +
           (C2271 * C3516 + C3527 + C3527 + C50774 * C3522 + C2269 * C1078 +
            C3528 + C3528 + C50884 * C1086) *
               C2267 +
           (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
            C3530 + C3530 + C50884 * C1087) *
               C2266) *
              C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C1000 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50698) *
              C1002 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50698 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C1000) *
              C1003 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50662 * C1000 -
           ((C2271 * C284 + C2883 + C2883 + C50774 * C304 + C2269 * C283 +
             C2884 + C2884 + C50884 * C303) *
                C2268 +
            (C2890 + C2889) * C2267 + C2878 * C2266) *
               C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C443 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C444 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C445) *
              C1000 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C444 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C443 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C2268 +
            (C2271 * C3677 + C3688 + C3688 + C50774 * C3683 + C2269 * C1192 +
             C3689 + C3689 + C50884 * C1200) *
                C2267 +
            (C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C2266) *
               C50788 * C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50698) *
              C1002 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50698 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C1000) *
              C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3515 + C11149 + C11149 + C10796 * C3521 + C10802 * C1077 +
            C11150 + C11150 + C10795 * C1085 + C10800 * C281 + C11151 + C11151 +
            C10794 * C301 + C10798 * C276 + C11152 + C11152 + C10793 * C296) *
               C50598 * C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C1071 -
          (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
           C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
           C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
              C50598 * C50788 * C50662 * C1072 +
          (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
           C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 + C10927 +
           C10795 * C3523 + C10804 * C9172 + C10928 + C10928 + C10796 * C9176) *
              C50598 * C50788 * C50662 * C1073 -
          (C10804 * C11556 + C11560 + C11560 + C10796 * C11558 +
           C10802 * C9172 + C11561 + C11561 + C10795 * C9176 + C10800 * C3517 +
           C11562 + C11562 + C10794 * C3523 + C10798 * C1079 + C11563 + C11563 +
           C10793 * C1087) *
              C50598 * C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C443 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C444 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C445) *
              C1000 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C444 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C443 -
           (C10804 * C11661 + C11665 + C11665 + C10796 * C11663 +
            C10802 * C9330 + C11666 + C11666 + C10795 * C9334 + C10800 * C3678 +
            C11667 + C11667 + C10794 * C3684 + C10798 * C1193 + C11668 +
            C11668 + C10793 * C1201) *
               C50598 * C50788 * C445) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C2266 +
             (C2318 + C2319) * C2267 + C2326 * C2268) *
                C50788 * C50875 -
            (C3037 * C2268 + (C2726 + C2727) * C2267 +
             (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
              C2689 + C2689 + C50884 * C469) *
                 C2266) *
                C50788 * C50726) *
               C1000 +
           (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
              C3245 + C3245 + C50774 * C1548) *
                 C2266 +
             (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                C50788 * C50726 -
            (C2878 * C2268 + (C2524 + C2525) * C2267 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C2266) *
                C50788 * C50875) *
               C50698) *
              C50866 +
          ((((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
             (C3048 + C3049) * C2268) *
                C50788 * C50726 -
            (C2327 * C2268 + (C2321 + C2320) * C2267 +
             (C2319 + C2318) * C2266) *
                C50788 * C50875) *
               C1000 +
           (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
             (C2889 + C2890) * C2268) *
                C50788 * C50875 -
            ((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C2268 +
             (C3271 + C3270) * C2267 + (C3269 + C3268) * C2266) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
             C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
             C10795 * C299 + C10804 * C1079 + C10810 + C10810 +
             C10796 * C1087) *
                C50598 * C50788 * C50875 -
            (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 +
             C10802 * C1540 + C11036 + C11036 + C10795 * C1548 + C10800 * C867 +
             C11037 + C11037 + C10794 * C877 + C10798 * C449 + C11038 + C11038 +
             C10793 * C469) *
                C50598 * C50788 * C50726) *
               C1000 +
           ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
             C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
             C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
             C10796 * C9832) *
                C50598 * C50788 * C50726 -
            (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 +
             C10802 * C1079 + C10922 + C10922 + C10795 * C1087 + C10800 * C279 +
             C10923 + C10923 + C10794 * C299 + C10798 * C278 + C10924 + C10924 +
             C10793 * C298) *
                C50598 * C50788 * C50875) *
               C50698) *
              C50866 +
          (((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
             C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 +
             C11045 + C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
             C10796 * C4184) *
                C50598 * C50788 * C50726 -
            (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
             C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
             C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
                C50598 * C50788 * C50875) *
               C1000 +
           ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
             C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 +
             C10931 + C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
             C10796 * C3522) *
                C50598 * C50788 * C50875 -
            (C10804 * C9827 + C11389 + C11389 + C10796 * C9831 +
             C10802 * C4178 + C11390 + C11390 + C10795 * C4184 +
             C10800 * C1539 + C11391 + C11391 + C10794 * C1547 + C10798 * C868 +
             C11392 + C11392 + C10793 * C878) *
                C50598 * C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50662 * C1000 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50662 * C50698) *
              C1002 +
          (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
            (C2889 + C2890) * C2268) *
               C50788 * C50662 * C50698 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50662 * C1000) *
              C1003 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C50662 * C1000 -
           ((C2271 * C284 + C2883 + C2883 + C50774 * C304 + C2269 * C283 +
             C2884 + C2884 + C50884 * C303) *
                C2268 +
            (C2890 + C2889) * C2267 + C2878 * C2266) *
               C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C50662 * C1071 -
          (C2878 * C2268 + (C2524 + C2525) * C2267 +
           (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
            C2487 + C2487 + C50884 * C298) *
               C2266) *
              C50788 * C50662 * C1072 +
          ((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
            C2489 + C2489 + C50774 * C1087) *
               C2266 +
           (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
              C50788 * C50662 * C1073 -
          ((C2271 * C3515 + C3525 + C3525 + C50774 * C3521 + C2269 * C1077 +
            C3526 + C3526 + C50884 * C1085) *
               C2268 +
           (C2271 * C3516 + C3527 + C3527 + C50774 * C3522 + C2269 * C1078 +
            C3528 + C3528 + C50884 * C1086) *
               C2267 +
           (C2271 * C3517 + C3529 + C3529 + C50774 * C3523 + C2269 * C1079 +
            C3530 + C3530 + C50884 * C1087) *
               C2266) *
              C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50662 * C50698) *
              C1002 +
          ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
            C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 + C10931 +
            C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
            C10796 * C3522) *
               C50598 * C50788 * C50662 * C50698 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50662 * C1000) *
              C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C50662 * C1000 -
           (C10804 * C3515 + C11149 + C11149 + C10796 * C3521 + C10802 * C1077 +
            C11150 + C11150 + C10795 * C1085 + C10800 * C281 + C11151 + C11151 +
            C10794 * C301 + C10798 * C276 + C11152 + C11152 + C10793 * C296) *
               C50598 * C50788 * C50662 * C50698) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C50662 * C1071 -
          (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
           C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
           C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
              C50598 * C50788 * C50662 * C1072 +
          (C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
           C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 + C10927 +
           C10795 * C3523 + C10804 * C9172 + C10928 + C10928 + C10796 * C9176) *
              C50598 * C50788 * C50662 * C1073 -
          (C10804 * C11556 + C11560 + C11560 + C10796 * C11558 +
           C10802 * C9172 + C11561 + C11561 + C10795 * C9176 + C10800 * C3517 +
           C11562 + C11562 + C10794 * C3523 + C10798 * C1079 + C11563 + C11563 +
           C10793 * C1087) *
              C50598 * C50788 * C50662 * C1074) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
              C2275 + C2275 + C50774 * C298) *
                 C2266 +
             (C2318 + C2319) * C2267 + C2326 * C2268) *
                C50788 * C1651 -
            (C3037 * C2268 + (C2726 + C2727) * C2267 +
             (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
              C2689 + C2689 + C50884 * C469) *
                 C2266) *
                C50788 * C50726) *
               C50874 +
           (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
              C3245 + C3245 + C50774 * C1548) *
                 C2266 +
             (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
                C50788 * C50726 -
            (C2878 * C2268 + (C2524 + C2525) * C2267 +
             (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
              C2487 + C2487 + C50884 * C298) *
                 C2266) *
                C50788 * C1651) *
               C50698) *
              C50866 +
          ((((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
             (C3048 + C3049) * C2268) *
                C50788 * C50726 -
            (C2327 * C2268 + (C2321 + C2320) * C2267 +
             (C2319 + C2318) * C2266) *
                C50788 * C1651) *
               C50874 +
           (((C2525 + C2524) * C2266 + (C2523 + C2522) * C2267 +
             (C2889 + C2890) * C2268) *
                C50788 * C1651 -
            ((C2271 * C1537 + C3258 + C3258 + C50774 * C1545 + C2269 * C870 +
              C3259 + C3259 + C50884 * C880) *
                 C2268 +
             (C3271 + C3270) * C2267 + (C3269 + C3268) * C2266) *
                C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
             C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
             C10795 * C299 + C10804 * C1079 + C10810 + C10810 +
             C10796 * C1087) *
                C50598 * C50788 * C1651 -
            (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 +
             C10802 * C1540 + C11036 + C11036 + C10795 * C1548 + C10800 * C867 +
             C11037 + C11037 + C10794 * C877 + C10798 * C449 + C11038 + C11038 +
             C10793 * C469) *
                C50598 * C50788 * C50726) *
               C50874 +
           ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
             C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
             C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
             C10796 * C9832) *
                C50598 * C50788 * C50726 -
            (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 +
             C10802 * C1079 + C10922 + C10922 + C10795 * C1087 + C10800 * C279 +
             C10923 + C10923 + C10794 * C299 + C10798 * C278 + C10924 + C10924 +
             C10793 * C298) *
                C50598 * C50788 * C1651) *
               C50698) *
              C50866 +
          (((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
             C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 +
             C11045 + C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
             C10796 * C4184) *
                C50598 * C50788 * C50726 -
            (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
             C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
             C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
                C50598 * C50788 * C1651) *
               C50874 +
           ((C10798 * C277 + C10929 + C10929 + C10793 * C297 + C10800 * C280 +
             C10930 + C10930 + C10794 * C300 + C10802 * C1078 + C10931 +
             C10931 + C10795 * C1086 + C10804 * C3516 + C10932 + C10932 +
             C10796 * C3522) *
                C50598 * C50788 * C1651 -
            (C10804 * C9827 + C11389 + C11389 + C10796 * C9831 +
             C10802 * C4178 + C11390 + C11390 + C10795 * C4184 +
             C10800 * C1539 + C11391 + C11391 + C10794 * C1547 + C10798 * C868 +
             C11392 + C11392 + C10793 * C878) *
                C50598 * C50788 * C50726) *
               C50698) *
              C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50920 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50921 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C2067) *
              C50874 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50921 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C50920 -
           ((C2271 * C3676 + C3686 + C3686 + C50774 * C3682 + C2269 * C1191 +
             C3687 + C3687 + C50884 * C1199) *
                C2268 +
            (C2271 * C3677 + C3688 + C3688 + C50774 * C3683 + C2269 * C1192 +
             C3689 + C3689 + C50884 * C1200) *
                C2267 +
            (C2271 * C3678 + C3690 + C3690 + C50774 * C3684 + C2269 * C1193 +
             C3691 + C3691 + C50884 * C1201) *
                C2266) *
               C50788 * C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50920 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50921 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C2067) *
              C50874 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50921 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C50920 -
           (C10804 * C11661 + C11665 + C11665 + C10796 * C11663 +
            C10802 * C9330 + C11666 + C11666 + C10795 * C9334 + C10800 * C3678 +
            C11667 + C11667 + C10794 * C3684 + C10798 * C1193 + C11668 +
            C11668 + C10793 * C1201) *
               C50598 * C50788 * C2067) *
              C50698) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C1651 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C270 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50726 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C1651) *
              C271 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C1651 -
           ((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
             C4188 + C4188 + C50884 * C1546) *
                C2268 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C2267 +
            (C2271 * C4179 + C4191 + C4191 + C50774 * C4185 + C2269 * C1540 +
             C4192 + C4192 + C50884 * C1548) *
                C2266) *
               C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C1651 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50646 * C1002 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50726 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C1651) *
              C50646 * C1003 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C1651 -
           ((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C2268 +
            (C3049 + C3048) * C2267 + C3037 * C2266) *
               C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
            C2275 + C2275 + C50774 * C298) *
               C2266 +
           (C2318 + C2319) * C2267 + C2326 * C2268) *
              C50788 * C1817 -
          (C3037 * C2268 + (C2726 + C2727) * C2267 +
           (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
            C2689 + C2689 + C50884 * C469) *
               C2266) *
              C50788 * C1818 +
          ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
            C2691 + C2691 + C50774 * C1201) *
               C2266 +
           (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
              C50788 * C1819 -
          ((C2271 * C4582 + C4592 + C4592 + C50774 * C4588 + C2269 * C1822 +
            C4593 + C4593 + C50884 * C1830) *
               C2268 +
           (C2271 * C4583 + C4594 + C4594 + C50774 * C4589 + C2269 * C1823 +
            C4595 + C4595 + C50884 * C1831) *
               C2267 +
           (C2271 * C4584 + C4596 + C4596 + C50774 * C4590 + C2269 * C1824 +
            C4597 + C4597 + C50884 * C1832) *
               C2266) *
              C50788 * C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50646 * C1002 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50726 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C1651) *
              C50646 * C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C1651 -
           (C10804 * C4177 + C11251 + C11251 + C10796 * C4183 + C10802 * C1538 +
            C11252 + C11252 + C10795 * C1546 + C10800 * C869 + C11253 + C11253 +
            C10794 * C879 + C10798 * C447 + C11254 + C11254 + C10793 * C467) *
               C50598 * C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C270 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50726 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C1651) *
              C271 +
          ((C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C1651 -
           (C10804 * C11994 + C11998 + C11998 + C10796 * C11996 +
            C10802 * C9828 + C11999 + C11999 + C10795 * C9832 + C10800 * C4179 +
            C12000 + C12000 + C10794 * C4185 + C10798 * C1540 + C12001 +
            C12001 + C10793 * C1548) *
               C50598 * C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
           C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
           C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
              C50598 * C50788 * C1817 -
          (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
           C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
           C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
              C50598 * C50788 * C1818 +
          (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
           C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 + C11041 +
           C10795 * C3684 + C10804 * C9330 + C11042 + C11042 + C10796 * C9334) *
              C50598 * C50788 * C1819 -
          (C10804 * C12263 + C12267 + C12267 + C10796 * C12265 +
           C10802 * C10230 + C12268 + C12268 + C10795 * C10234 +
           C10800 * C4584 + C12269 + C12269 + C10794 * C4590 + C10798 * C1824 +
           C12270 + C12270 + C10793 * C1832) *
              C50598 * C50788 * C1820) *
         C50646 * C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C50920 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50921 +
           ((C2269 * C450 + C2690 + C2690 + C50884 * C470 + C2271 * C1193 +
             C2691 + C2691 + C50774 * C1201) *
                C2266 +
            (C2728 + C2729) * C2267 + (C2730 + C2731) * C2268) *
               C50788 * C2067) *
              C50646 * C50866 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50921 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C50920 -
           ((C2271 * C1190 + C2706 + C2706 + C50774 * C1198 + C2269 * C453 +
             C2707 + C2707 + C50884 * C473) *
                C2268 +
            (C2731 + C2730) * C2267 + (C2729 + C2728) * C2266) *
               C50788 * C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C50920 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50921 +
           (C10798 * C450 + C11039 + C11039 + C10793 * C470 + C10800 * C1193 +
            C11040 + C11040 + C10794 * C1201 + C10802 * C3678 + C11041 +
            C11041 + C10795 * C3684 + C10804 * C9330 + C11042 + C11042 +
            C10796 * C9334) *
               C50598 * C50788 * C2067) *
              C50646 * C50866 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50921 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C50920 -
           (C10804 * C9329 + C11047 + C11047 + C10796 * C9333 + C10802 * C3677 +
            C11048 + C11048 + C10795 * C3683 + C10800 * C1192 + C11049 +
            C11049 + C10794 * C1200 + C10798 * C451 + C11050 + C11050 +
            C10793 * C471) *
               C50598 * C50788 * C2067) *
              C50646 * C50633)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C1651 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C50646 * C1002 +
          (((C2727 + C2726) * C2266 + (C2725 + C2724) * C2267 +
            (C3048 + C3049) * C2268) *
               C50788 * C50726 -
           (C2327 * C2268 + (C2321 + C2320) * C2267 + (C2319 + C2318) * C2266) *
               C50788 * C1651) *
              C50646 * C1003 +
          ((C2326 * C2266 + (C2323 + C2322) * C2267 + (C2324 + C2325) * C2268) *
               C50788 * C1651 -
           ((C2271 * C871 + C3042 + C3042 + C50774 * C881 + C2269 * C454 +
             C3043 + C3043 + C50884 * C474) *
                C2268 +
            (C3049 + C3048) * C2267 + C3037 * C2266) *
               C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2274 + C2274 + C50884 * C133 + C2271 * C278 +
             C2275 + C2275 + C50774 * C298) *
                C2266 +
            (C2318 + C2319) * C2267 + C2326 * C2268) *
               C50788 * C1651 -
           (C3037 * C2268 + (C2726 + C2727) * C2267 +
            (C2271 * C867 + C2688 + C2688 + C50774 * C877 + C2269 * C449 +
             C2689 + C2689 + C50884 * C469) *
                C2266) *
               C50788 * C50726) *
              C270 +
          (((C2269 * C867 + C3244 + C3244 + C50884 * C877 + C2271 * C1540 +
             C3245 + C3245 + C50774 * C1548) *
                C2266 +
            (C3268 + C3269) * C2267 + (C3270 + C3271) * C2268) *
               C50788 * C50726 -
           (C2878 * C2268 + (C2524 + C2525) * C2267 +
            (C2271 * C279 + C2486 + C2486 + C50774 * C299 + C2269 * C278 +
             C2487 + C2487 + C50884 * C298) *
                C2266) *
               C50788 * C1651) *
              C271 +
          (((C2269 * C279 + C2488 + C2488 + C50884 * C299 + C2271 * C1079 +
             C2489 + C2489 + C50774 * C1087) *
                C2266 +
            (C2526 + C2527) * C2267 + (C2528 + C2529) * C2268) *
               C50788 * C1651 -
           ((C2271 * C4177 + C4187 + C4187 + C50774 * C4183 + C2269 * C1538 +
             C4188 + C4188 + C50884 * C1546) *
                C2268 +
            (C2271 * C4178 + C4189 + C4189 + C50774 * C4184 + C2269 * C1539 +
             C4190 + C4190 + C50884 * C1547) *
                C2267 +
            (C2271 * C4179 + C4191 + C4191 + C50774 * C4185 + C2269 * C1540 +
             C4192 + C4192 + C50884 * C1548) *
                C2266) *
               C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C50646 * C1002 +
          ((C10798 * C448 + C11043 + C11043 + C10793 * C468 + C10800 * C868 +
            C11044 + C11044 + C10794 * C878 + C10802 * C1539 + C11045 + C11045 +
            C10795 * C1547 + C10804 * C4178 + C11046 + C11046 +
            C10796 * C4184) *
               C50598 * C50788 * C50726 -
           (C10804 * C1078 + C10811 + C10811 + C10796 * C1086 + C10802 * C280 +
            C10812 + C10812 + C10795 * C300 + C10800 * C277 + C10813 + C10813 +
            C10794 * C297 + C10798 * C120 + C10814 + C10814 + C10793 * C134) *
               C50598 * C50788 * C1651) *
              C50646 * C1003 +
          ((C10798 * C121 + C10815 + C10815 + C10793 * C135 + C10800 * C276 +
            C10816 + C10816 + C10794 * C296 + C10802 * C281 + C10817 + C10817 +
            C10795 * C301 + C10804 * C1077 + C10818 + C10818 + C10796 * C1085) *
               C50598 * C50788 * C1651 -
           (C10804 * C4177 + C11251 + C11251 + C10796 * C4183 + C10802 * C1538 +
            C11252 + C11252 + C10795 * C1546 + C10800 * C869 + C11253 + C11253 +
            C10794 * C879 + C10798 * C447 + C11254 + C11254 + C10793 * C467) *
               C50598 * C50788 * C50726) *
              C50646 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10798 * C119 + C10807 + C10807 + C10793 * C133 + C10800 * C278 +
            C10808 + C10808 + C10794 * C298 + C10802 * C279 + C10809 + C10809 +
            C10795 * C299 + C10804 * C1079 + C10810 + C10810 + C10796 * C1087) *
               C50598 * C50788 * C1651 -
           (C10804 * C4179 + C11035 + C11035 + C10796 * C4185 + C10802 * C1540 +
            C11036 + C11036 + C10795 * C1548 + C10800 * C867 + C11037 + C11037 +
            C10794 * C877 + C10798 * C449 + C11038 + C11038 + C10793 * C469) *
               C50598 * C50788 * C50726) *
              C270 +
          ((C10798 * C867 + C11385 + C11385 + C10793 * C877 + C10800 * C1540 +
            C11386 + C11386 + C10794 * C1548 + C10802 * C4179 + C11387 +
            C11387 + C10795 * C4185 + C10804 * C9828 + C11388 + C11388 +
            C10796 * C9832) *
               C50598 * C50788 * C50726 -
           (C10804 * C3517 + C10921 + C10921 + C10796 * C3523 + C10802 * C1079 +
            C10922 + C10922 + C10795 * C1087 + C10800 * C279 + C10923 + C10923 +
            C10794 * C299 + C10798 * C278 + C10924 + C10924 + C10793 * C298) *
               C50598 * C50788 * C1651) *
              C271 +
          ((C10798 * C279 + C10925 + C10925 + C10793 * C299 + C10800 * C1079 +
            C10926 + C10926 + C10794 * C1087 + C10802 * C3517 + C10927 +
            C10927 + C10795 * C3523 + C10804 * C9172 + C10928 + C10928 +
            C10796 * C9176) *
               C50598 * C50788 * C1651 -
           (C10804 * C11994 + C11998 + C11998 + C10796 * C11996 +
            C10802 * C9828 + C11999 + C11999 + C10795 * C9832 + C10800 * C4179 +
            C12000 + C12000 + C10794 * C4185 + C10798 * C1540 + C12001 +
            C12001 + C10793 * C1548) *
               C50598 * C50788 * C50726) *
              C272) *
         C50627) /
            (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50662 * C50874 -
                    ((C901 * C2268 + C900 * C2267 +
                      (C117 * C867 + C883 + C883 + C50758 * C877) * C2266) *
                         C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50662 * C50698) *
                       C50916 +
                   (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                     (C900 * C2266 + C901 * C2267 + C902 * C2268) * C50800) *
                        C50662 * C50698 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50662 * C50874) *
                       C50917 +
                   (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                     (C512 * C2266 + C511 * C2267 + C737 * C2268) * C50800) *
                        C50662 * C50874 -
                    (((C117 * C871 + C893 + C893 + C50758 * C881) * C2268 +
                      C902 * C2267 + C901 * C2266) *
                         C50800 +
                     (C628 * C2268 + C340 * C2267 + C341 * C2266) * C50886) *
                        C50662 * C50698) *
                       C618)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50662 * C50874 -
                    ((C7931 * C4179 + C8906 + C8906 + C7924 * C4185 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7927 * C867 + C8904 + C8904 + C7922 * C877) *
                         C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50662 * C50698) *
                       C50916 +
                   (((C8184 + C8183 + C8182) * C50598 * C50886 +
                     (C8925 + C8926 + C8927) * C50598 * C50800) *
                        C50662 * C50698 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50662 * C50874) *
                       C50917 +
                   (((C7990 + C7989 + C7988) * C50598 * C50886 +
                     (C8707 + C8708 + C8709) * C50598 * C50800) *
                        C50662 * C50874 -
                    ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                      C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                      C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                         C50598 * C50800 +
                     (C8545 + C8544 + C8543) * C50598 * C50886) *
                        C50662 * C50698) *
                       C618)) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                       C168 * C2267 + C169 * C2268) *
                          C50886 +
                      (C5516 + C5488 + C5489) * C50800) *
                         C50875 -
                     ((C5490 + C5491 + C5517) * C50800 +
                      (C5489 + C5488 + C5516) * C50886) *
                         C50726) *
                        C50874 +
                    (((C6027 + C6009 + C6010) * C50886 +
                      ((C117 * C1193 + C1206 + C1206 + C50758 * C1201) * C2266 +
                       C6025 * C2267 + C6026 * C2268) *
                          C50800) *
                         C50726 -
                     ((C6010 + C6009 + C6027) * C50800 +
                      (C341 * C2268 + C342 * C2267 +
                       (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                          C50886) *
                         C50875) *
                        C50698) *
                       C273 +
                   ((((C5498 + C5499 + C5500) * C50886 +
                      (C5501 + C5502 + C5503) * C50800) *
                         C50726 -
                     ((C5500 + C5499 + C5498) * C50800 +
                      (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                         C50875) *
                        C50874 +
                    (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                      (C6015 + C6016 + C6017) * C50800) *
                         C50875 -
                     (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C2268 +
                       C6026 * C2267 + C6025 * C2266) *
                          C50800 +
                      (C6017 + C6016 + C6015) * C50886) *
                         C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                       C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                       C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                          C50598 * C50886 +
                      (C13011 + C13012 + C13013) * C50598 * C50800) *
                         C50875 -
                     ((C13014 + C13015 + C13016) * C50598 * C50800 +
                      (C13013 + C13012 + C13011) * C50598 * C50886) *
                         C50726) *
                        C50874 +
                    (((C13515 + C13516 + C13517) * C50598 * C50886 +
                      (C7927 * C1193 + C9341 + C9341 + C7922 * C1201 +
                       C7929 * C3678 + C9340 + C9340 + C7923 * C3684 +
                       C7931 * C9330 + C9339 + C9339 + C7924 * C9334) *
                          C50598 * C50800) *
                         C50726 -
                     ((C13517 + C13516 + C13515) * C50598 * C50800 +
                      (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                       C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                       C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                          C50598 * C50886) *
                         C50875) *
                        C50698) *
                       C273 +
                   ((((C8378 + C8377 + C8376) * C50598 * C50886 +
                      (C8379 + C8380 + C8381) * C50598 * C50800) *
                         C50726 -
                     ((C8376 + C8377 + C8378) * C50598 * C50800 +
                      (C7987 + C7986 + C7985) * C50598 * C50886) *
                         C50875) *
                        C50874 +
                    (((C8184 + C8183 + C8182) * C50598 * C50886 +
                      (C8925 + C8926 + C8927) * C50598 * C50800) *
                         C50875 -
                     ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 +
                       C7929 * C3677 + C9337 + C9337 + C7923 * C3683 +
                       C7927 * C1192 + C9338 + C9338 + C7922 * C1200) *
                          C50598 * C50800 +
                      (C8927 + C8926 + C8925) * C50598 * C50886) *
                         C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[212] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
                      C513 * C2267 + C512 * C2268) *
                         C50800) *
                        C50662 * C270 -
                    ((C901 * C2268 + C900 * C2267 +
                      (C117 * C867 + C883 + C883 + C50758 * C877) * C2266) *
                         C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50662 * C271 +
                    (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                      C343 * C2267 + C344 * C2268) *
                         C50886 +
                     ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                      C5338 * C2267 + C5339 * C2268) *
                         C50800) *
                        C50662 * C272) *
                       C273 +
                   (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                     (C900 * C2266 + C901 * C2267 + C902 * C2268) * C50800) *
                        C50662 * C271 -
                    ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50662 * C270 -
                    (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C2268 +
                      C5339 * C2267 + C5338 * C2266) *
                         C50800 +
                     (C345 * C2268 + C344 * C2267 + C343 * C2266) * C50886) *
                        C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                     C168 * C2267 + C169 * C2268) *
                        C50886 +
                    ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
                     C513 * C2267 + C512 * C2268) *
                        C50800) *
                       C50662 * C50646 * C113 -
                   ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
                    (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                       C50662 * C50646 * C114 +
                   ((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                    (C512 * C2266 + C511 * C2267 + C737 * C2268) * C50800) *
                       C50662 * C50646 * C115 -
                   (((C117 * C728 + C734 + C734 + C50758 * C730) * C2268 +
                     C737 * C2267 + C511 * C2266) *
                        C50800 +
                    (C172 * C2268 + C171 * C2267 + C170 * C2266) * C50886) *
                       C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C443 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C444 +
                    ((C5517 + C5491 + C5490) * C50886 +
                     ((C117 * C1824 + C1837 + C1837 + C50758 * C1832) * C2266 +
                      C5514 * C2267 + C5515 * C2268) *
                         C50800) *
                        C445) *
                       C50646 * C273 +
                   (((C5498 + C5499 + C5500) * C50886 +
                     (C5501 + C5502 + C5503) * C50800) *
                        C444 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C443 -
                    (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C2268 +
                      C5515 * C2267 + C5514 * C2266) *
                         C50800 +
                     (C5503 + C5502 + C5501) * C50886) *
                        C445) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50598 * C50886 +
                    (C7927 * C449 + C8345 + C8345 + C7922 * C469 +
                     C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                     C7931 * C1540 + C8343 + C8343 + C7924 * C1548) *
                        C50598 * C50800) *
                       C50662 * C50646 * C113 -
                   ((C8376 + C8377 + C8378) * C50598 * C50800 +
                    (C7987 + C7986 + C7985) * C50598 * C50886) *
                       C50662 * C50646 * C114 +
                   ((C7990 + C7989 + C7988) * C50598 * C50886 +
                    (C8707 + C8708 + C8709) * C50598 * C50800) *
                       C50662 * C50646 * C115 -
                   ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 +
                     C7929 * C870 + C8699 + C8699 + C7923 * C880 +
                     C7927 * C446 + C8700 + C8700 + C7922 * C466) *
                        C50598 * C50800 +
                    (C7993 + C7992 + C7991) * C50598 * C50886) *
                       C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C7927 * C449 + C8345 + C8345 + C7922 * C469 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7931 * C1540 + C8343 + C8343 + C7924 * C1548) *
                         C50598 * C50800) *
                        C50662 * C270 -
                    ((C7931 * C4179 + C8906 + C8906 + C7924 * C4185 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7927 * C867 + C8904 + C8904 + C7922 * C877) *
                         C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50662 * C271 +
                    ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50598 * C50886 +
                     (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 +
                      C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                      C7931 * C9828 + C9837 + C9837 + C7924 * C9832) *
                         C50598 * C50800) *
                        C50662 * C272) *
                       C273 +
                   (((C8184 + C8183 + C8182) * C50598 * C50886 +
                     (C8925 + C8926 + C8927) * C50598 * C50800) *
                        C50662 * C271 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50662 * C270 -
                    ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 +
                      C7929 * C4178 + C9835 + C9835 + C7923 * C4184 +
                      C7927 * C1539 + C9836 + C9836 + C7922 * C1547) *
                         C50598 * C50800 +
                     (C8187 + C8186 + C8185) * C50598 * C50886) *
                        C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C443 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C444 +
                    ((C13016 + C13015 + C13014) * C50598 * C50886 +
                     (C7927 * C1824 + C10241 + C10241 + C7922 * C1832 +
                      C7929 * C4584 + C10240 + C10240 + C7923 * C4590 +
                      C7931 * C10230 + C10239 + C10239 + C7924 * C10234) *
                         C50598 * C50800) *
                        C445) *
                       C50646 * C273 +
                   (((C8378 + C8377 + C8376) * C50598 * C50886 +
                     (C8379 + C8380 + C8381) * C50598 * C50800) *
                        C444 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C443 -
                    ((C7931 * C10229 + C10236 + C10236 + C7924 * C10233 +
                      C7929 * C4583 + C10237 + C10237 + C7923 * C4589 +
                      C7927 * C1823 + C10238 + C10238 + C7922 * C1831) *
                         C50598 * C50800 +
                     (C8381 + C8380 + C8379) * C50598 * C50886) *
                        C445) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[213] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50875 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50726) *
                       C50646 * C50916 +
                   (((C5498 + C5499 + C5500) * C50886 +
                     (C5501 + C5502 + C5503) * C50800) *
                        C50726 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50875) *
                       C50646 * C50917 +
                   (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                     (C5810 + C5811 + C5812) * C50800) *
                        C50875 -
                    (((C117 * C455 + C498 + C498 + C50758 * C475) * C2268 +
                      C516 * C2267 + C515 * C2266) *
                         C50800 +
                     (C5812 + C5811 + C5810) * C50886) *
                        C50726) *
                       C50646 * C618)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50875 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50726) *
                       C50646 * C50916 +
                   (((C8378 + C8377 + C8376) * C50598 * C50886 +
                     (C8379 + C8380 + C8381) * C50598 * C50800) *
                        C50726 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50875) *
                       C50646 * C50917 +
                   (((C7990 + C7989 + C7988) * C50598 * C50886 +
                     (C8707 + C8708 + C8709) * C50598 * C50800) *
                        C50875 -
                    ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                      C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                      C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                         C50598 * C50800 +
                     (C8709 + C8708 + C8707) * C50598 * C50886) *
                        C50726) *
                       C50646 * C618)) /
                     (p * q * std::sqrt(p + q));
    d2ee[214] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                     C168 * C2267 + C169 * C2268) *
                        C50886 +
                    ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
                     C513 * C2267 + C512 * C2268) *
                        C50800) *
                       C50662 * C50646 * C113 -
                   ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
                    (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                       C50662 * C50646 * C114 +
                   ((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                    (C512 * C2266 + C511 * C2267 + C737 * C2268) * C50800) *
                       C50662 * C50646 * C115 -
                   (((C117 * C728 + C734 + C734 + C50758 * C730) * C2268 +
                     C737 * C2267 + C511 * C2266) *
                        C50800 +
                    (C172 * C2268 + C171 * C2267 + C170 * C2266) * C50886) *
                       C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     ((C117 * C449 + C486 + C486 + C50758 * C469) * C2266 +
                      C513 * C2267 + C512 * C2268) *
                         C50800) *
                        C50662 * C270 -
                    ((C901 * C2268 + C900 * C2267 +
                      (C117 * C867 + C883 + C883 + C50758 * C877) * C2266) *
                         C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50662 * C271 +
                    (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                      C343 * C2267 + C344 * C2268) *
                         C50886 +
                     ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                      C5338 * C2267 + C5339 * C2268) *
                         C50800) *
                        C50662 * C272) *
                       C273 +
                   (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                     (C900 * C2266 + C901 * C2267 + C902 * C2268) * C50800) *
                        C50662 * C271 -
                    ((C511 * C2268 + C512 * C2267 + C513 * C2266) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50662 * C270 -
                    (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C2268 +
                      C5339 * C2267 + C5338 * C2266) *
                         C50800 +
                     (C345 * C2268 + C344 * C2267 + C343 * C2266) * C50886) *
                        C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50598 * C50886 +
                    (C7927 * C449 + C8345 + C8345 + C7922 * C469 +
                     C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                     C7931 * C1540 + C8343 + C8343 + C7924 * C1548) *
                        C50598 * C50800) *
                       C50662 * C50646 * C113 -
                   ((C8376 + C8377 + C8378) * C50598 * C50800 +
                    (C7987 + C7986 + C7985) * C50598 * C50886) *
                       C50662 * C50646 * C114 +
                   ((C7990 + C7989 + C7988) * C50598 * C50886 +
                    (C8707 + C8708 + C8709) * C50598 * C50800) *
                       C50662 * C50646 * C115 -
                   ((C7931 * C1537 + C8698 + C8698 + C7924 * C1545 +
                     C7929 * C870 + C8699 + C8699 + C7923 * C880 +
                     C7927 * C446 + C8700 + C8700 + C7922 * C466) *
                        C50598 * C50800 +
                    (C7993 + C7992 + C7991) * C50598 * C50886) *
                       C50662 * C50646 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C7927 * C449 + C8345 + C8345 + C7922 * C469 +
                      C7929 * C867 + C8344 + C8344 + C7923 * C877 +
                      C7931 * C1540 + C8343 + C8343 + C7924 * C1548) *
                         C50598 * C50800) *
                        C50662 * C270 -
                    ((C7931 * C4179 + C8906 + C8906 + C7924 * C4185 +
                      C7929 * C1540 + C8905 + C8905 + C7923 * C1548 +
                      C7927 * C867 + C8904 + C8904 + C7922 * C877) *
                         C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50662 * C271 +
                    ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50598 * C50886 +
                     (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 +
                      C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                      C7931 * C9828 + C9837 + C9837 + C7924 * C9832) *
                         C50598 * C50800) *
                        C50662 * C272) *
                       C273 +
                   (((C8184 + C8183 + C8182) * C50598 * C50886 +
                     (C8925 + C8926 + C8927) * C50598 * C50800) *
                        C50662 * C271 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50662 * C270 -
                    ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 +
                      C7929 * C4178 + C9835 + C9835 + C7923 * C4184 +
                      C7927 * C1539 + C9836 + C9836 + C7922 * C1547) *
                         C50598 * C50800 +
                     (C8187 + C8186 + C8185) * C50598 * C50886) *
                        C50662 * C272) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[215] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50662 * C50918 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50662 * C50919 +
                    (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                      C343 * C2267 + C344 * C2268) *
                         C50886 +
                     ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                      C5338 * C2267 + C5339 * C2268) *
                         C50800) *
                        C50662 * C1306) *
                       C50866 +
                   (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                     (C6015 + C6016 + C6017) * C50800) *
                        C50662 * C50919 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50662 * C50918 -
                    (((C117 * C1537 + C1550 + C1550 + C50758 * C1545) * C2268 +
                      C5339 * C2267 + C5338 * C2266) *
                         C50800 +
                     (C345 * C2268 + C344 * C2267 + C343 * C2266) * C50886) *
                        C50662 * C1306) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50662 * C50918 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50662 * C50919 +
                    ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50598 * C50886 +
                     (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 +
                      C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                      C7931 * C9828 + C9837 + C9837 + C7924 * C9832) *
                         C50598 * C50800) *
                        C50662 * C1306) *
                       C50866 +
                   (((C8184 + C8183 + C8182) * C50598 * C50886 +
                     (C8925 + C8926 + C8927) * C50598 * C50800) *
                        C50662 * C50919 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50662 * C50918 -
                    ((C7931 * C9827 + C9834 + C9834 + C7924 * C9831 +
                      C7929 * C4178 + C9835 + C9835 + C7923 * C4184 +
                      C7927 * C1539 + C9836 + C9836 + C7922 * C1547) *
                         C50598 * C50800 +
                     (C8187 + C8186 + C8185) * C50598 * C50886) *
                        C50662 * C1306) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[216] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50875 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50726) *
                       C50918 +
                   (((C6027 + C6009 + C6010) * C50886 +
                     (C6431 + C6423 + C6424) * C50800) *
                        C50726 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50875) *
                       C50919 +
                   ((((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                      C343 * C2267 + C344 * C2268) *
                         C50886 +
                     (C6928 + C6920 + C6921) * C50800) *
                        C50875 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C2268 +
                      (C117 * C3677 + C6923 + C6923 + C50758 * C3683) * C2267 +
                      (C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C2266) *
                         C50800 +
                     (C6921 + C6920 + C6928) * C50886) *
                        C50726) *
                       C1306) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50875 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50726) *
                       C50918 +
                   (((C13515 + C13516 + C13517) * C50598 * C50886 +
                     (C13926 + C13927 + C13928) * C50598 * C50800) *
                        C50726 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50875) *
                       C50919 +
                   (((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50598 * C50886 +
                     (C14430 + C14431 + C14432) * C50598 * C50800) *
                        C50875 -
                    ((C7931 * C11661 + C14421 + C14421 + C7924 * C11663 +
                      C7929 * C9330 + C14422 + C14422 + C7923 * C9334 +
                      C7927 * C3678 + C14423 + C14423 + C7922 * C3684) *
                         C50598 * C50800 +
                     (C14432 + C14431 + C14430) * C50598 * C50886) *
                        C50726) *
                       C1306) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[217] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                     C168 * C2267 + C169 * C2268) *
                        C50886 +
                    (C5516 + C5488 + C5489) * C50800) *
                       C50662 * C1071 -
                   ((C6010 + C6009 + C6027) * C50800 +
                    (C341 * C2268 + C342 * C2267 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                        C50886) *
                       C50662 * C1072 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                     C343 * C2267 + C344 * C2268) *
                        C50886 +
                    ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                     C5338 * C2267 + C5339 * C2268) *
                        C50800) *
                       C50662 * C1073 -
                   (((C117 * C4177 + C6272 + C6272 + C50758 * C4183) * C2268 +
                     (C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C2267 +
                     (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C2266) *
                        C50800 +
                    ((C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C2268 +
                     (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C2267 +
                     (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C2266) *
                        C50886) *
                       C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50662 * C1000 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50662 * C50698) *
                       C1002 +
                   (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                     (C6015 + C6016 + C6017) * C50800) *
                        C50662 * C50698 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50662 * C1000) *
                       C1003 +
                   (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                     (C5810 + C5811 + C5812) * C50800) *
                        C50662 * C1000 -
                    (((C117 * C871 + C893 + C893 + C50758 * C881) * C2268 +
                      C902 * C2267 + C901 * C2266) *
                         C50800 +
                     (C628 * C2268 + C340 * C2267 + C341 * C2266) * C50886) *
                        C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C443 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C444 +
                    ((C5517 + C5491 + C5490) * C50886 +
                     ((C117 * C1824 + C1837 + C1837 + C50758 * C1832) * C2266 +
                      C5514 * C2267 + C5515 * C2268) *
                         C50800) *
                        C445) *
                       C1000 +
                   (((C6027 + C6009 + C6010) * C50886 +
                     (C6431 + C6423 + C6424) * C50800) *
                        C444 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C443 -
                    (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C2268 +
                      (C117 * C4583 + C6426 + C6426 + C50758 * C4589) * C2267 +
                      (C117 * C4584 + C6427 + C6427 + C50758 * C4590) * C2266) *
                         C50800 +
                     (C6424 + C6423 + C6431) * C50886) *
                        C445) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50662 * C1000 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50662 * C50698) *
                       C1002 +
                   (((C8184 + C8183 + C8182) * C50598 * C50886 +
                     (C8925 + C8926 + C8927) * C50598 * C50800) *
                        C50662 * C50698 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50662 * C1000) *
                       C1003 +
                   (((C7990 + C7989 + C7988) * C50598 * C50886 +
                     (C8707 + C8708 + C8709) * C50598 * C50800) *
                        C50662 * C1000 -
                    ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                      C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                      C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                         C50598 * C50800 +
                     (C8545 + C8544 + C8543) * C50598 * C50886) *
                        C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50598 * C50886 +
                    (C13011 + C13012 + C13013) * C50598 * C50800) *
                       C50662 * C1071 -
                   ((C13517 + C13516 + C13515) * C50598 * C50800 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50598 * C50886) *
                       C50662 * C1072 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50598 * C50886 +
                    (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 +
                     C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                     C7931 * C9828 + C9837 + C9837 + C7924 * C9832) *
                        C50598 * C50800) *
                       C50662 * C1073 -
                   ((C7931 * C11994 + C13762 + C13762 + C7924 * C11996 +
                     C7929 * C9828 + C13763 + C13763 + C7923 * C9832 +
                     C7927 * C4179 + C13764 + C13764 + C7922 * C4185) *
                        C50598 * C50800 +
                    (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 +
                     C7929 * C3517 + C9182 + C9182 + C7923 * C3523 +
                     C7927 * C1079 + C9183 + C9183 + C7922 * C1087) *
                        C50598 * C50886) *
                       C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C443 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C444 +
                    ((C13016 + C13015 + C13014) * C50598 * C50886 +
                     (C7927 * C1824 + C10241 + C10241 + C7922 * C1832 +
                      C7929 * C4584 + C10240 + C10240 + C7923 * C4590 +
                      C7931 * C10230 + C10239 + C10239 + C7924 * C10234) *
                         C50598 * C50800) *
                        C445) *
                       C1000 +
                   (((C13515 + C13516 + C13517) * C50598 * C50886 +
                     (C13926 + C13927 + C13928) * C50598 * C50800) *
                        C444 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C443 -
                    ((C7931 * C12263 + C13917 + C13917 + C7924 * C12265 +
                      C7929 * C10230 + C13918 + C13918 + C7923 * C10234 +
                      C7927 * C4584 + C13919 + C13919 + C7922 * C4590) *
                         C50598 * C50800 +
                     (C13928 + C13927 + C13926) * C50598 * C50886) *
                        C445) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[218] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                       C168 * C2267 + C169 * C2268) *
                          C50886 +
                      (C5516 + C5488 + C5489) * C50800) *
                         C50875 -
                     ((C5490 + C5491 + C5517) * C50800 +
                      (C5489 + C5488 + C5516) * C50886) *
                         C50726) *
                        C1000 +
                    (((C6027 + C6009 + C6010) * C50886 +
                      (C6431 + C6423 + C6424) * C50800) *
                         C50726 -
                     ((C6010 + C6009 + C6027) * C50800 +
                      (C341 * C2268 + C342 * C2267 +
                       (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                          C50886) *
                         C50875) *
                        C50698) *
                       C50866 +
                   ((((C5498 + C5499 + C5500) * C50886 +
                      (C5501 + C5502 + C5503) * C50800) *
                         C50726 -
                     ((C5500 + C5499 + C5498) * C50800 +
                      (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                         C50875) *
                        C1000 +
                    (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                      (C6015 + C6016 + C6017) * C50800) *
                         C50875 -
                     (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C2268 +
                       C6026 * C2267 + C6025 * C2266) *
                          C50800 +
                      (C6017 + C6016 + C6015) * C50886) *
                         C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                       C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                       C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                          C50598 * C50886 +
                      (C13011 + C13012 + C13013) * C50598 * C50800) *
                         C50875 -
                     ((C13014 + C13015 + C13016) * C50598 * C50800 +
                      (C13013 + C13012 + C13011) * C50598 * C50886) *
                         C50726) *
                        C1000 +
                    (((C13515 + C13516 + C13517) * C50598 * C50886 +
                      (C13926 + C13927 + C13928) * C50598 * C50800) *
                         C50726 -
                     ((C13517 + C13516 + C13515) * C50598 * C50800 +
                      (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                       C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                       C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                          C50598 * C50886) *
                         C50875) *
                        C50698) *
                       C50866 +
                   ((((C8378 + C8377 + C8376) * C50598 * C50886 +
                      (C8379 + C8380 + C8381) * C50598 * C50800) *
                         C50726 -
                     ((C8376 + C8377 + C8378) * C50598 * C50800 +
                      (C7987 + C7986 + C7985) * C50598 * C50886) *
                         C50875) *
                        C1000 +
                    (((C8184 + C8183 + C8182) * C50598 * C50886 +
                      (C8925 + C8926 + C8927) * C50598 * C50800) *
                         C50875 -
                     ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 +
                       C7929 * C3677 + C9337 + C9337 + C7923 * C3683 +
                       C7927 * C1192 + C9338 + C9338 + C7922 * C1200) *
                          C50598 * C50800 +
                      (C8927 + C8926 + C8925) * C50598 * C50886) *
                         C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[219] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50662 * C1000 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50662 * C50698) *
                       C1002 +
                   (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                     (C6015 + C6016 + C6017) * C50800) *
                        C50662 * C50698 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50662 * C1000) *
                       C1003 +
                   (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                     (C5810 + C5811 + C5812) * C50800) *
                        C50662 * C1000 -
                    (((C117 * C871 + C893 + C893 + C50758 * C881) * C2268 +
                      C902 * C2267 + C901 * C2266) *
                         C50800 +
                     (C628 * C2268 + C340 * C2267 + C341 * C2266) * C50886) *
                        C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                     C168 * C2267 + C169 * C2268) *
                        C50886 +
                    (C5516 + C5488 + C5489) * C50800) *
                       C50662 * C1071 -
                   ((C6010 + C6009 + C6027) * C50800 +
                    (C341 * C2268 + C342 * C2267 +
                     (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                        C50886) *
                       C50662 * C1072 +
                   (((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                     C343 * C2267 + C344 * C2268) *
                        C50886 +
                    ((C117 * C1540 + C1553 + C1553 + C50758 * C1548) * C2266 +
                     C5338 * C2267 + C5339 * C2268) *
                        C50800) *
                       C50662 * C1073 -
                   (((C117 * C4177 + C6272 + C6272 + C50758 * C4183) * C2268 +
                     (C117 * C4178 + C6273 + C6273 + C50758 * C4184) * C2267 +
                     (C117 * C4179 + C6274 + C6274 + C50758 * C4185) * C2266) *
                        C50800 +
                    ((C117 * C1077 + C1090 + C1090 + C50758 * C1085) * C2268 +
                     (C117 * C1078 + C1091 + C1091 + C50758 * C1086) * C2267 +
                     (C117 * C1079 + C1092 + C1092 + C50758 * C1087) * C2266) *
                        C50886) *
                       C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50662 * C1000 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50662 * C50698) *
                       C1002 +
                   (((C8184 + C8183 + C8182) * C50598 * C50886 +
                     (C8925 + C8926 + C8927) * C50598 * C50800) *
                        C50662 * C50698 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50662 * C1000) *
                       C1003 +
                   (((C7990 + C7989 + C7988) * C50598 * C50886 +
                     (C8707 + C8708 + C8709) * C50598 * C50800) *
                        C50662 * C1000 -
                    ((C7931 * C4177 + C8916 + C8916 + C7924 * C4183 +
                      C7929 * C1538 + C8917 + C8917 + C7923 * C1546 +
                      C7927 * C869 + C8918 + C8918 + C7922 * C879) *
                         C50598 * C50800 +
                     (C8545 + C8544 + C8543) * C50598 * C50886) *
                        C50662 * C50698) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50598 * C50886 +
                    (C13011 + C13012 + C13013) * C50598 * C50800) *
                       C50662 * C1071 -
                   ((C13517 + C13516 + C13515) * C50598 * C50800 +
                    (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                     C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                     C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                        C50598 * C50886) *
                       C50662 * C1072 +
                   ((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                     C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                     C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                        C50598 * C50886 +
                    (C7927 * C1540 + C9839 + C9839 + C7922 * C1548 +
                     C7929 * C4179 + C9838 + C9838 + C7923 * C4185 +
                     C7931 * C9828 + C9837 + C9837 + C7924 * C9832) *
                        C50598 * C50800) *
                       C50662 * C1073 -
                   ((C7931 * C11994 + C13762 + C13762 + C7924 * C11996 +
                     C7929 * C9828 + C13763 + C13763 + C7923 * C9832 +
                     C7927 * C4179 + C13764 + C13764 + C7922 * C4185) *
                        C50598 * C50800 +
                    (C7931 * C9172 + C9181 + C9181 + C7924 * C9176 +
                     C7929 * C3517 + C9182 + C9182 + C7923 * C3523 +
                     C7927 * C1079 + C9183 + C9183 + C7922 * C1087) *
                        C50598 * C50886) *
                       C50662 * C1074) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[220] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                       C168 * C2267 + C169 * C2268) *
                          C50886 +
                      (C5516 + C5488 + C5489) * C50800) *
                         C1651 -
                     ((C5490 + C5491 + C5517) * C50800 +
                      (C5489 + C5488 + C5516) * C50886) *
                         C50726) *
                        C50874 +
                    (((C6027 + C6009 + C6010) * C50886 +
                      (C6431 + C6423 + C6424) * C50800) *
                         C50726 -
                     ((C6010 + C6009 + C6027) * C50800 +
                      (C341 * C2268 + C342 * C2267 +
                       (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                          C50886) *
                         C1651) *
                        C50698) *
                       C50866 +
                   ((((C5498 + C5499 + C5500) * C50886 +
                      (C5501 + C5502 + C5503) * C50800) *
                         C50726 -
                     ((C5500 + C5499 + C5498) * C50800 +
                      (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                         C1651) *
                        C50874 +
                    (((C342 * C2266 + C341 * C2267 + C340 * C2268) * C50886 +
                      (C6015 + C6016 + C6017) * C50800) *
                         C1651 -
                     (((C117 * C1190 + C1203 + C1203 + C50758 * C1198) * C2268 +
                       C6026 * C2267 + C6025 * C2266) *
                          C50800 +
                      (C6017 + C6016 + C6015) * C50886) *
                         C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                       C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                       C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                          C50598 * C50886 +
                      (C13011 + C13012 + C13013) * C50598 * C50800) *
                         C1651 -
                     ((C13014 + C13015 + C13016) * C50598 * C50800 +
                      (C13013 + C13012 + C13011) * C50598 * C50886) *
                         C50726) *
                        C50874 +
                    (((C13515 + C13516 + C13517) * C50598 * C50886 +
                      (C13926 + C13927 + C13928) * C50598 * C50800) *
                         C50726 -
                     ((C13517 + C13516 + C13515) * C50598 * C50800 +
                      (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                       C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                       C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                          C50598 * C50886) *
                         C1651) *
                        C50698) *
                       C50866 +
                   ((((C8378 + C8377 + C8376) * C50598 * C50886 +
                      (C8379 + C8380 + C8381) * C50598 * C50800) *
                         C50726 -
                     ((C8376 + C8377 + C8378) * C50598 * C50800 +
                      (C7987 + C7986 + C7985) * C50598 * C50886) *
                         C1651) *
                        C50874 +
                    (((C8184 + C8183 + C8182) * C50598 * C50886 +
                      (C8925 + C8926 + C8927) * C50598 * C50800) *
                         C1651 -
                     ((C7931 * C9329 + C9336 + C9336 + C7924 * C9333 +
                       C7929 * C3677 + C9337 + C9337 + C7923 * C3683 +
                       C7927 * C1192 + C9338 + C9338 + C7922 * C1200) *
                          C50598 * C50800 +
                      (C8927 + C8926 + C8925) * C50598 * C50886) *
                         C50726) *
                        C50698) *
                       C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[221] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50920 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50921 +
                    ((C5517 + C5491 + C5490) * C50886 +
                     (C7338 + C7330 + C7331) * C50800) *
                        C2067) *
                       C50874 +
                   (((C6027 + C6009 + C6010) * C50886 +
                     (C6431 + C6423 + C6424) * C50800) *
                        C50921 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C50920 -
                    (((C117 * C4582 + C6425 + C6425 + C50758 * C4588) * C2268 +
                      (C117 * C4583 + C6426 + C6426 + C50758 * C4589) * C2267 +
                      (C117 * C4584 + C6427 + C6427 + C50758 * C4590) * C2266) *
                         C50800 +
                     (C6424 + C6423 + C6431) * C50886) *
                        C2067) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50920 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50921 +
                    ((C13016 + C13015 + C13014) * C50598 * C50886 +
                     (C14844 + C14845 + C14846) * C50598 * C50800) *
                        C2067) *
                       C50874 +
                   (((C13515 + C13516 + C13517) * C50598 * C50886 +
                     (C13926 + C13927 + C13928) * C50598 * C50800) *
                        C50921 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C50920 -
                    ((C7931 * C12263 + C13917 + C13917 + C7924 * C12265 +
                      C7929 * C10230 + C13918 + C13918 + C7923 * C10234 +
                      C7927 * C4584 + C13919 + C13919 + C7922 * C4590) *
                         C50598 * C50800 +
                     (C13928 + C13927 + C13926) * C50598 * C50886) *
                        C2067) *
                       C50698) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[222] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C1651 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50726) *
                       C270 +
                   (((C6027 + C6009 + C6010) * C50886 +
                     (C6431 + C6423 + C6424) * C50800) *
                        C50726 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                      C343 * C2267 + C344 * C2268) *
                         C50886 +
                     (C6928 + C6920 + C6921) * C50800) *
                        C1651 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C2268 +
                      (C117 * C3677 + C6923 + C6923 + C50758 * C3683) * C2267 +
                      (C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C2266) *
                         C50800 +
                     (C6921 + C6920 + C6928) * C50886) *
                        C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C1651 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50726) *
                       C50646 * C1002 +
                   (((C5498 + C5499 + C5500) * C50886 +
                     (C5501 + C5502 + C5503) * C50800) *
                        C50726 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C1651) *
                       C50646 * C1003 +
                   (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                     (C5810 + C5811 + C5812) * C50800) *
                        C1651 -
                    (((C117 * C455 + C498 + C498 + C50758 * C475) * C2268 +
                      C516 * C2267 + C515 * C2266) *
                         C50800 +
                     (C5812 + C5811 + C5810) * C50886) *
                        C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                     C168 * C2267 + C169 * C2268) *
                        C50886 +
                    (C5516 + C5488 + C5489) * C50800) *
                       C1817 -
                   ((C5490 + C5491 + C5517) * C50800 +
                    (C5489 + C5488 + C5516) * C50886) *
                       C1818 +
                   ((C5517 + C5491 + C5490) * C50886 +
                    (C7338 + C7330 + C7331) * C50800) *
                       C1819 -
                   (((C117 * C7318 + C7332 + C7332 + C50758 * C7324) * C2268 +
                     (C117 * C7319 + C7333 + C7333 + C50758 * C7325) * C2267 +
                     (C117 * C7320 + C7334 + C7334 + C50758 * C7326) * C2266) *
                        C50800 +
                    (C7331 + C7330 + C7338) * C50886) *
                       C1820) *
                  C50646 * C50627) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C1651 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50726) *
                       C50646 * C1002 +
                   (((C8378 + C8377 + C8376) * C50598 * C50886 +
                     (C8379 + C8380 + C8381) * C50598 * C50800) *
                        C50726 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C1651) *
                       C50646 * C1003 +
                   (((C7990 + C7989 + C7988) * C50598 * C50886 +
                     (C8707 + C8708 + C8709) * C50598 * C50800) *
                        C1651 -
                    ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                      C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                      C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                         C50598 * C50800 +
                     (C8709 + C8708 + C8707) * C50598 * C50886) *
                        C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C1651 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50726) *
                       C270 +
                   (((C13515 + C13516 + C13517) * C50598 * C50886 +
                     (C13926 + C13927 + C13928) * C50598 * C50800) *
                        C50726 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C1651) *
                       C271 +
                   (((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50598 * C50886 +
                     (C14430 + C14431 + C14432) * C50598 * C50800) *
                        C1651 -
                    ((C7931 * C11661 + C14421 + C14421 + C7924 * C11663 +
                      C7929 * C9330 + C14422 + C14422 + C7923 * C9334 +
                      C7927 * C3678 + C14423 + C14423 + C7922 * C3684) *
                         C50598 * C50800 +
                     (C14432 + C14431 + C14430) * C50598 * C50886) *
                        C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                     C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                     C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                        C50598 * C50886 +
                    (C13011 + C13012 + C13013) * C50598 * C50800) *
                       C1817 -
                   ((C13014 + C13015 + C13016) * C50598 * C50800 +
                    (C13013 + C13012 + C13011) * C50598 * C50886) *
                       C1818 +
                   ((C13016 + C13015 + C13014) * C50598 * C50886 +
                    (C14844 + C14845 + C14846) * C50598 * C50800) *
                       C1819 -
                   ((C7931 * C14822 + C14835 + C14835 + C7924 * C14826 +
                     C7929 * C14823 + C14836 + C14836 + C7923 * C14827 +
                     C7927 * C7320 + C14837 + C14837 + C7922 * C7326) *
                        C50598 * C50800 +
                    (C14846 + C14845 + C14844) * C50598 * C50886) *
                       C1820) *
                  C50646 * C50627) /
                     (p * q * std::sqrt(p + q));
    d2ee[223] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C50920 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50921 +
                    ((C5517 + C5491 + C5490) * C50886 +
                     (C7338 + C7330 + C7331) * C50800) *
                        C2067) *
                       C50646 * C50866 +
                   (((C5498 + C5499 + C5500) * C50886 +
                     (C5501 + C5502 + C5503) * C50800) *
                        C50921 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C50920 -
                    (((C117 * C1821 + C1834 + C1834 + C50758 * C1829) * C2268 +
                      C5515 * C2267 + C5514 * C2266) *
                         C50800 +
                     (C5503 + C5502 + C5501) * C50886) *
                        C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C50920 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50921 +
                    ((C13016 + C13015 + C13014) * C50598 * C50886 +
                     (C14844 + C14845 + C14846) * C50598 * C50800) *
                        C2067) *
                       C50646 * C50866 +
                   (((C8378 + C8377 + C8376) * C50598 * C50886 +
                     (C8379 + C8380 + C8381) * C50598 * C50800) *
                        C50921 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C50920 -
                    ((C7931 * C10229 + C10236 + C10236 + C7924 * C10233 +
                      C7929 * C4583 + C10237 + C10237 + C7923 * C4589 +
                      C7927 * C1823 + C10238 + C10238 + C7922 * C1831) *
                         C50598 * C50800 +
                     (C8381 + C8380 + C8379) * C50598 * C50886) *
                        C2067) *
                       C50646 * C50633)) /
                     (p * q * std::sqrt(p + q));
    d2ee[224] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C1651 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50726) *
                       C50646 * C1002 +
                   (((C5498 + C5499 + C5500) * C50886 +
                     (C5501 + C5502 + C5503) * C50800) *
                        C50726 -
                    ((C5500 + C5499 + C5498) * C50800 +
                     (C170 * C2268 + C169 * C2267 + C168 * C2266) * C50886) *
                        C1651) *
                       C50646 * C1003 +
                   (((C169 * C2266 + C170 * C2267 + C171 * C2268) * C50886 +
                     (C5810 + C5811 + C5812) * C50800) *
                        C1651 -
                    (((C117 * C455 + C498 + C498 + C50758 * C475) * C2268 +
                      C516 * C2267 + C515 * C2266) *
                         C50800 +
                     (C5812 + C5811 + C5810) * C50886) *
                        C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50758 * C133) * C2266 +
                      C168 * C2267 + C169 * C2268) *
                         C50886 +
                     (C5516 + C5488 + C5489) * C50800) *
                        C1651 -
                    ((C5490 + C5491 + C5517) * C50800 +
                     (C5489 + C5488 + C5516) * C50886) *
                        C50726) *
                       C270 +
                   (((C6027 + C6009 + C6010) * C50886 +
                     (C6431 + C6423 + C6424) * C50800) *
                        C50726 -
                    ((C6010 + C6009 + C6027) * C50800 +
                     (C341 * C2268 + C342 * C2267 +
                      (C117 * C278 + C315 + C315 + C50758 * C298) * C2266) *
                         C50886) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50758 * C299) * C2266 +
                      C343 * C2267 + C344 * C2268) *
                         C50886 +
                     (C6928 + C6920 + C6921) * C50800) *
                        C1651 -
                    (((C117 * C3676 + C6922 + C6922 + C50758 * C3682) * C2268 +
                      (C117 * C3677 + C6923 + C6923 + C50758 * C3683) * C2267 +
                      (C117 * C3678 + C6924 + C6924 + C50758 * C3684) * C2266) *
                         C50800 +
                     (C6921 + C6920 + C6928) * C50886) *
                        C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C1651 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50726) *
                       C50646 * C1002 +
                   (((C8378 + C8377 + C8376) * C50598 * C50886 +
                     (C8379 + C8380 + C8381) * C50598 * C50800) *
                        C50726 -
                    ((C8376 + C8377 + C8378) * C50598 * C50800 +
                     (C7987 + C7986 + C7985) * C50598 * C50886) *
                        C1651) *
                       C50646 * C1003 +
                   (((C7990 + C7989 + C7988) * C50598 * C50886 +
                     (C8707 + C8708 + C8709) * C50598 * C50800) *
                        C1651 -
                    ((C7931 * C3676 + C8361 + C8361 + C7924 * C3682 +
                      C7929 * C1191 + C8362 + C8362 + C7923 * C1199 +
                      C7927 * C452 + C8363 + C8363 + C7922 * C472) *
                         C50598 * C50800 +
                     (C8709 + C8708 + C8707) * C50598 * C50886) *
                        C50726) *
                       C50646 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C7927 * C119 + C7934 + C7934 + C7922 * C133 +
                      C7929 * C278 + C7935 + C7935 + C7923 * C298 +
                      C7931 * C279 + C7936 + C7936 + C7924 * C299) *
                         C50598 * C50886 +
                     (C13011 + C13012 + C13013) * C50598 * C50800) *
                        C1651 -
                    ((C13014 + C13015 + C13016) * C50598 * C50800 +
                     (C13013 + C13012 + C13011) * C50598 * C50886) *
                        C50726) *
                       C270 +
                   (((C13515 + C13516 + C13517) * C50598 * C50886 +
                     (C13926 + C13927 + C13928) * C50598 * C50800) *
                        C50726 -
                    ((C13517 + C13516 + C13515) * C50598 * C50800 +
                     (C7931 * C1079 + C8149 + C8149 + C7924 * C1087 +
                      C7929 * C279 + C8150 + C8150 + C7923 * C299 +
                      C7927 * C278 + C8151 + C8151 + C7922 * C298) *
                         C50598 * C50886) *
                        C1651) *
                       C271 +
                   (((C7927 * C279 + C8152 + C8152 + C7922 * C299 +
                      C7929 * C1079 + C8153 + C8153 + C7923 * C1087 +
                      C7931 * C3517 + C8154 + C8154 + C7924 * C3523) *
                         C50598 * C50886 +
                     (C14430 + C14431 + C14432) * C50598 * C50800) *
                        C1651 -
                    ((C7931 * C11661 + C14421 + C14421 + C7924 * C11663 +
                      C7929 * C9330 + C14422 + C14422 + C7923 * C9334 +
                      C7927 * C3678 + C14423 + C14423 + C7922 * C3684) *
                         C50598 * C50800 +
                     (C14432 + C14431 + C14430) * C50598 * C50886) *
                        C50726) *
                       C272) *
                  C50627) /
                     (p * q * std::sqrt(p + q));
}
