/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49718 = ae + be;
    const double C49717 = yA - yB;
    const double C49725 = zA - zB;
    const double C49735 = ae * be;
    const double C49734 = 0 * be;
    const double C49753 = 0 * ae;
    const double C49749 = 0 * be;
    const double C49782 = 0 * be;
    const double C49800 = 0 * ae;
    const double C49796 = 0 * be;
    const double C49850 = std::pow(ae, 2);
    const double C49849 = zP - zQ;
    const double C49848 = yP - yQ;
    const double C49847 = p + q;
    const double C49846 = p * q;
    const double C49858 = bs[4];
    const double C49856 = xP - xQ;
    const double C49863 = bs[5];
    const double C49870 = bs[6];
    const double C49878 = bs[7];
    const double C49895 = bs[3];
    const double C50260 = bs[2];
    const double C119 = bs[0];
    const double C50616 = xA - xB;
    const double C50642 = ce + de;
    const double C50641 = ce * de;
    const double C50640 = xC - xD;
    const double C50664 = yC - yD;
    const double C50680 = zC - zD;
    const double C49733 = 2 * C49718;
    const double C49750 = std::pow(C49718, 2);
    const double C50776 = std::pow(C49717, 2);
    const double C50792 = C49717 * be;
    const double C50791 = C49717 * ae;
    const double C50806 = std::pow(C49725, 2);
    const double C50818 = C49725 * be;
    const double C50817 = C49725 * ae;
    const double C49736 = C49735 * C49717;
    const double C49783 = C49735 * C49725;
    const double C49751 = C49717 * C49734;
    const double C49757 = C49753 / C49718;
    const double C49797 = C49725 * C49782;
    const double C49805 = C49800 / C49718;
    const double C49887 = C49849 * ae;
    const double C50044 = std::pow(C49849, 2);
    const double C49852 = C49848 * C49849;
    const double C49928 = C49848 * ae;
    const double C50007 = std::pow(C49848, 2);
    const double C49851 = 2 * C49846;
    const double C49864 = std::pow(C49856, 2);
    const double C50619 = C50616 * be;
    const double C50618 = C50616 * ae;
    const double C50617 = std::pow(C50616, 2);
    const double C50644 = 2 * C50642;
    const double C50654 = std::pow(C50642, 2);
    const double C50646 = C50640 * de;
    const double C50645 = C50640 * ce;
    const double C50643 = std::pow(C50640, 2);
    const double C50665 = std::pow(C50664, 2);
    const double C50717 = C50664 * de;
    const double C50716 = C50664 * ce;
    const double C50681 = std::pow(C50680, 2);
    const double C50745 = C50680 * de;
    const double C50744 = C50680 * ce;
    const double C50627 = std::pow(C49733, -1);
    const double C50927 = std::pow(C49733, -2);
    const double C49754 = 2 * C49750;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C49750;
    const double C141 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (yP - yQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C49750;
    const double C50905 = 4 * C49750;
    const double C50777 = C50776 * C49735;
    const double C50807 = C50806 * C49735;
    const double C49755 = C49751 / C49718;
    const double C49802 = C49797 / C49718;
    const double C49888 = C49858 * C49887;
    const double C49896 = C49895 * C49887;
    const double C49901 = C49863 * C49887;
    const double C49907 = C49870 * C49887;
    const double C49918 = C49878 * C49887;
    const double C49854 = C49852 * C49850;
    const double C49929 = C49858 * C49928;
    const double C49935 = C49895 * C49928;
    const double C49940 = C49863 * C49928;
    const double C49946 = C49870 * C49928;
    const double C49957 = C49878 * C49928;
    const double C49853 = C49851 / C49847;
    const double C126 = (-(bs[1] * C49887 * C49851) / C49847) / C49718;
    const double C127 = (-(bs[1] * C49928 * C49851) / C49847) / C49718;
    const double C120 = -(C49856 * bs[1] * C49851) / C49847;
    const double C297 = -(C49848 * bs[1] * C49851) / C49847;
    const double C486 = -(C49849 * bs[1] * C49851) / C49847;
    const double C50620 = C50617 * C49735;
    const double C50655 = std::pow(C50644, -1);
    const double C50914 = std::pow(C50644, -2);
    const double C50659 = 2 * C50654;
    const double C50912 = 4 * C50654;
    const double C50647 = C50643 * C50641;
    const double C50666 = C50665 * C50641;
    const double C50682 = C50681 * C50641;
    const double C49762 = C49734 / C49754;
    const double C49760 = C49749 / C49754;
    const double C49799 = C49782 / C49754;
    const double C49803 = C49796 / C49754;
    const double C50778 = C50777 / C49718;
    const double C50808 = C50807 / C49718;
    const double C49759 = 0 - C49755;
    const double C49806 = 0 - C49802;
    const double C49859 = C49858 * C49854;
    const double C49866 = C49863 * C49854;
    const double C49871 = C49870 * C49854;
    const double C49880 = C49878 * C49854;
    const double C49857 = std::pow(C49853, 4);
    const double C49862 = -C49853;
    const double C49869 = std::pow(C49853, 6);
    const double C142 =
        (std::pow(-C49853, 3) * bs[3] * C49854 +
         std::pow(C49853, 4) * bs[4] * C49854 * std::pow(xP - xQ, 2)) /
        C49750;
    const double C50259 = std::pow(C49853, 2);
    const double C128 =
        (C49856 * std::pow(C49853, 2) * bs[2] * C49887) / C49718;
    const double C129 =
        (C49856 * std::pow(C49853, 2) * bs[2] * C49928) / C49718;
    const double C310 =
        (C49848 * std::pow(C49853, 2) * bs[2] * C49928) / C49718 -
        (ae * bs[1] * C49851) / (C49847 * C49718);
    const double C311 =
        (C49848 * std::pow(C49853, 2) * bs[2] * C49887) / C49718;
    const double C50621 = C50620 / C49718;
    const double C50648 = C50647 / C50642;
    const double C50667 = C50666 / C50642;
    const double C50683 = C50682 / C50642;
    const double C50779 = -C50778;
    const double C50809 = -C50808;
    const double C49764 = C49759 * ae;
    const double C49809 = C49806 * ae;
    const double C49860 = C49857 * C49859;
    const double C49889 = C49857 * C49888;
    const double C49930 = C49857 * C49929;
    const double C49972 = C49858 * C49857;
    const double C49865 = std::pow(C49862, 5);
    const double C49877 = std::pow(C49862, 7);
    const double C49894 = std::pow(C49862, 3);
    const double C327 = (ae * std::pow(C49853, 2) * bs[2] * C49887 +
                         C49848 * std::pow(C49862, 3) * bs[3] * C49854) /
                        C49750;
    const double C49872 = C49869 * C49871;
    const double C49909 = C49869 * C49907;
    const double C49948 = C49869 * C49946;
    const double C49982 = C49870 * C49869;
    const double C50261 = C50260 * C50259;
    const double C499 = (C49849 * C50259 * C50260 * C49928) / C49718;
    const double C500 = (C49849 * C50259 * C50260 * C49887) / C49718 -
                        (ae * bs[1] * C49851) / (C49847 * C49718);
    const double C50622 = -C50621;
    const double C50649 = -C50648;
    const double C50668 = -C50667;
    const double C50684 = -C50683;
    const double C50780 = std::exp(C50779);
    const double C50810 = std::exp(C50809);
    const double C49766 = C49764 / C49718;
    const double C49811 = C49809 / C49718;
    const double C143 = (2 * C49856 * C49860 +
                         C49856 * (C49860 + std::pow(-C49853, 5) * bs[5] *
                                                C49854 * std::pow(C49856, 2))) /
                        C49750;
    const double C326 = (ae * C49856 * std::pow(C49862, 3) * bs[3] * C49887 +
                         C49848 * C49856 * C49860) /
                        C49750;
    const double C49899 = C49856 * C49889;
    const double C50020 = ae * C49889;
    const double C50019 = C49848 * C49889;
    const double C50406 = C49849 * C49889;
    const double C49938 = C49856 * C49930;
    const double C50040 = ae * C49930;
    const double C50056 = C49849 * C49930;
    const double C50366 = C49848 * C49930;
    const double C49992 = C49856 * C49972;
    const double C50030 = C49848 * C49972;
    const double C50124 = C49972 * ae;
    const double C50207 = C49849 * C49972;
    const double C50267 = C49972 * C49864;
    const double C50368 = C49972 * C50007;
    const double C50408 = C49972 * C50044;
    const double C49867 = C49865 * C49866;
    const double C49902 = C49865 * C49901;
    const double C49941 = C49865 * C49940;
    const double C49974 = C49863 * C49865;
    const double C49881 = C49877 * C49880;
    const double C49920 = C49877 * C49918;
    const double C49959 = C49877 * C49957;
    const double C49897 = C49894 * C49896;
    const double C49936 = C49894 * C49935;
    const double C49994 = C49895 * C49894;
    const double C515 =
        (ae * C49856 * C49894 * C49895 * C49928 + C49849 * C49856 * C49860) /
        C49750;
    const double C516 = (ae * std::pow(C49853, 2) * bs[2] * C49928 +
                         C49849 * C49894 * C49895 * C49854) /
                        C49750;
    const double C49873 = C49872 * C49864;
    const double C49876 = C49856 * C49872;
    const double C50078 = C49848 * C49872;
    const double C50106 = C49849 * C49872;
    const double C49910 = C49909 * C49864;
    const double C49917 = C49856 * C49909;
    const double C50079 = C49909 * C50007;
    const double C50135 = ae * C49909;
    const double C50134 = C49848 * C49909;
    const double C50154 = C49849 * C49909;
    const double C49949 = C49948 * C49864;
    const double C49956 = C49856 * C49948;
    const double C50158 = ae * C49948;
    const double C50157 = C49849 * C49948;
    const double C50192 = C49948 * C50044;
    const double C50447 = C49848 * C49948;
    const double C49984 = C49982 * C49864;
    const double C50093 = C49856 * C49982;
    const double C50162 = C49848 * C49982;
    const double C50161 = C49982 * C50007;
    const double C50201 = C49982 * C50044;
    const double C121 = C50261 * C49864 - (bs[1] * C49851) / C49847;
    const double C296 = C49848 * C49856 * C50261;
    const double C298 = C50261 * C50007 - (bs[1] * C49851) / C49847;
    const double C485 = C49849 * C49856 * C50261;
    const double C487 = C50261 * C50044 - (bs[1] * C49851) / C49847;
    const double C932 = C49849 * C49848 * C50261;
    const double C50623 = std::exp(C50622);
    const double C50650 = std::exp(C50649);
    const double C50669 = std::exp(C50668);
    const double C50685 = std::exp(C50684);
    const double C49737 = C49736 * C50780;
    const double C118 = -(2 * ae * be * (yA - yB) * C50780) / (ae + be);
    const double C2343 =
        ((C50780 - (C49717 * 2 * ae * be * C49717 * C50780) / C49718) * ae) /
            C49718 -
        (0 * be) / (2 * std::pow(C49718, 2));
    const double C2344 =
        (0 * ae) / C49718 - (ae * be * C49717 * C50780) / std::pow(C49718, 2);
    const double C50793 = C50780 * C50791;
    const double C50796 = C50627 * C50780;
    const double C50930 = C50780 * C50792;
    const double C50929 = C50780 / C49733;
    const double C8027 = C50927 * C50780;
    const double C155 = C50810 * C142;
    const double C151 = C50810 * C141;
    const double C149 = C50810 * C128;
    const double C2517 = C50810 * C327;
    const double C2515 = C50810 * C311;
    const double C49784 = C49783 * C50810;
    const double C117 = -(2 * ae * be * (zA - zB) * C50810) / (ae + be);
    const double C5171 =
        ((C50810 - (C49725 * 2 * ae * be * C49725 * C50810) / C49718) * ae) /
            C49718 -
        (0 * be) / (2 * std::pow(C49718, 2));
    const double C5172 =
        (0 * ae) / C49718 - (ae * be * C49725 * C50810) / std::pow(C49718, 2);
    const double C50819 = C50810 * C50817;
    const double C50822 = C50627 * C50810;
    const double C50935 = C50810 * C50818;
    const double C50934 = C50810 / C49733;
    const double C15374 = C50927 * C50810;
    const double C49768 = C49766 - C49760;
    const double C49813 = C49811 - C49803;
    const double C159 = C50810 * C143;
    const double C344 = C50810 * C326;
    const double C50271 = 2 * C49992;
    const double C50331 = C49848 * C49992;
    const double C50360 = C49992 * ae;
    const double C50400 = C49849 * C49992;
    const double C50425 = 2 * C50030;
    const double C50424 = C50030 * ae;
    const double C50476 = C49849 * C50030;
    const double C50500 = 2 * C50207;
    const double C50499 = C50207 * ae;
    const double C49978 = C49856 * C49867;
    const double C50021 = C49848 * C49867;
    const double C50041 = C49849 * C49867;
    const double C144 =
        (3 * (C49860 + C49867 * C49864) +
         C49856 * (2 * C49856 * C49867 +
                   C49856 * (C49867 +
                             std::pow(C49853, 6) * bs[6] * C49854 * C49864))) /
        C49750;
    const double C325 =
        (ae * (std::pow(C49862, 3) * bs[3] * C49887 + C49889 * C49864) +
         C49848 * (C49860 + C49867 * C49864)) /
        C49750;
    const double C329 = (C49856 * C49860 + ae * C49848 * C49899 +
                         C49848 * (ae * C49899 + C49848 * C49856 * C49867)) /
                        C49750;
    const double C514 = (ae * (C49894 * C49895 * C49928 + C49930 * C49864) +
                         C49849 * (C49860 + C49867 * C49864)) /
                        C49750;
    const double C518 = (C49856 * C49860 + ae * C49849 * C49938 +
                         C49849 * (ae * C49938 + C49849 * C49856 * C49867)) /
                        C49750;
    const double C948 =
        (ae * (C49849 * C49899 + C49856 * C49895 * C49894 * ae) +
         C49848 * (ae * C49938 + C49849 * C49856 * C49867)) /
        C49750;
    const double C49903 = C49902 * C49864;
    const double C49906 = C49856 * C49902;
    const double C50022 = C49902 * C50007;
    const double C50077 = ae * C49902;
    const double C50076 = C49848 * C49902;
    const double C50123 = C49849 * C49902;
    const double C49942 = C49941 * C49864;
    const double C49945 = C49856 * C49941;
    const double C50057 = C49941 * C50044;
    const double C50105 = ae * C49941;
    const double C50104 = C49849 * C49941;
    const double C3672 =
        (C49860 + ae * C49849 * C49930 +
         C49849 * (ae * C49930 + C49849 * C49867) +
         ae * (C50019 + C49849 * (C49849 * C49848 * C49902 + C50030 * ae) +
               C49849 * C50030 * ae) +
         C49848 * (ae * (C49889 + C49849 * (C49849 * C49902 + C49972 * ae) +
                         C49849 * C49972 * ae) +
                   C49848 * (C49867 + ae * C49849 * C49941 +
                             C49849 * (ae * C49941 + C49849 * C49872)))) /
        C49750;
    const double C50423 = C49848 * C49941;
    const double C49981 = C49856 * C49974;
    const double C49989 = C49974 * C49864;
    const double C50108 = C49848 * C49974;
    const double C50107 = C49974 * C50007;
    const double C50156 = C49849 * C49974;
    const double C50155 = C49974 * ae;
    const double C50208 = C49974 * C50044;
    const double C49882 = C49881 * C49864;
    const double C50062 = C49856 * C49881;
    const double C50136 = C49848 * C49881;
    const double C50159 = C49849 * C49881;
    const double C49921 = C49920 * C49864;
    const double C50063 = C49856 * C49920;
    const double C50138 = C49920 * C50007;
    const double C49960 = C49959 * C49864;
    const double C50094 = C49856 * C49959;
    const double C50202 = C49959 * C50044;
    const double C328 = (C49894 * C49895 * C49854 + ae * C49848 * C49897 +
                         C49848 * (ae * C49897 + C49848 * C49860)) /
                        C49750;
    const double C1165 = (2 * (ae * C49897 + C49848 * C49860) +
                          ae * (C49897 + C49889 * std::pow(C49848, 2)) +
                          C49848 * (C49860 + ae * C49848 * C49889 +
                                    C49848 * (ae * C49889 + C49848 * C49867))) /
                         C49750;
    const double C130 =
        (std::pow(C49853, 2) * bs[2] * C49887 + C49897 * C49864) / C49718;
    const double C132 =
        (2 * C49856 * C49897 + C49856 * (C49897 + C49889 * C49864)) / C49718;
    const double C307 = (C49848 * (C49897 + C49889 * C49864)) / C49718;
    const double C309 = (C49848 * C49856 * C49897) / C49718;
    const double C312 =
        (std::pow(C49853, 2) * bs[2] * C49887 + C49897 * C50007) / C49718;
    const double C314 = (C49856 * C49897 + C49899 * C50007) / C49718;
    const double C498 =
        (C49849 * C49856 * C49897 + C49856 * C50261 * ae) / C49718;
    const double C501 =
        (C50259 * C50260 * C49887 + C49849 * (C49849 * C49897 + C50261 * ae) +
         C49849 * C50261 * ae) /
        C49718;
    const double C937 =
        (C49849 * C49848 * C49897 + C49848 * C50261 * ae) / C49718;
    const double C1161 =
        (2 * C49848 * C49897 + C49848 * (C49897 + C49889 * C50007)) / C49718;
    const double C517 = (C49894 * C49895 * C49854 + ae * C49849 * C49936 +
                         C49849 * (ae * C49936 + C49849 * C49860)) /
                        C49750;
    const double C947 =
        (ae * (C49849 * C49897 + bs[2] * std::pow(C49853, 2) * ae) +
         C49848 * (ae * C49936 + C49849 * C49860)) /
        C49750;
    const double C1910 = (2 * (ae * C49936 + C49849 * C49860) +
                          ae * (C49936 + C49930 * std::pow(C49849, 2)) +
                          C49849 * (C49860 + ae * C49849 * C49930 +
                                    C49849 * (ae * C49930 + C49849 * C49867))) /
                         C49750;
    const double C131 =
        (std::pow(C49853, 2) * bs[2] * C49928 + C49936 * C49864) / C49718;
    const double C133 =
        (2 * C49856 * C49936 + C49856 * (C49936 + C49930 * C49864)) / C49718;
    const double C308 =
        (C49848 * C49856 * C49936 + C49856 * bs[2] * std::pow(C49853, 2) * ae) /
        C49718;
    const double C313 =
        (C50259 * C50260 * C49928 + C49848 * (C49848 * C49936 + C50261 * ae) +
         C49848 * C50261 * ae) /
        C49718;
    const double C495 = (C49849 * (C49936 + C49930 * C49864)) / C49718;
    const double C497 = (C49849 * C49856 * C49936) / C49718;
    const double C502 = (C50259 * C50260 * C49928 + C49936 * C50044) / C49718;
    const double C504 = (C49856 * C49936 + C49938 * C50044) / C49718;
    const double C938 = (C49849 * (C49848 * C49936 + C50261 * ae)) / C49718;
    const double C1905 =
        (2 * C49849 * C49936 + C49849 * (C49936 + C49930 * C50044)) / C49718;
    const double C1279 =
        (ae * (C49897 + C49849 * (C49849 * C49889 + C49994 * ae) +
               C49849 * C49994 * ae) +
         C49848 * (C49860 + ae * C49849 * C49930 +
                   C49849 * (ae * C49930 + C49849 * C49867))) /
        C49750;
    const double C1626 =
        (ae * C49936 + C49849 * C49860 +
         ae * (C49849 * C49848 * C49889 + C49848 * C49994 * ae) +
         C49848 * (ae * (C49849 * C49889 + C49994 * ae) +
                   C49848 * (ae * C49930 + C49849 * C49867))) /
        C49750;
    const double C50264 = C49856 * C49994;
    const double C50268 = C49994 + C50267;
    const double C50334 = C49848 * C49994;
    const double C50367 = C49994 * ae;
    const double C50370 = C49994 + C50368;
    const double C50407 = C49849 * C49994;
    const double C50410 = C49994 + C50408;
    const double C306 = (C49848 * (C49936 + C49930 * C49864) +
                         (bs[2] * std::pow(C49853, 2) + C49994 * C49864) * ae) /
                        C49718;
    const double C496 = (C49849 * (C49897 + C49889 * C49864) +
                         (C50261 + C49994 * C49864) * ae) /
                        C49718;
    const double C1160 =
        (2 * (C49848 * C49936 + C50261 * ae) +
         C49848 * (C49936 + C49848 * (C49848 * C49930 + C49994 * ae) +
                   C49848 * C49994 * ae) +
         (C50261 + C49994 * C50007) * ae) /
        C49718;
    const double C1274 = (C49848 * C49936 + C50261 * ae +
                          (C49848 * C49930 + C49994 * ae) * C50044) /
                         C49718;
    const double C1622 = (C49849 * (C49897 + C49889 * C50007) +
                          (C50261 + C49994 * C50007) * ae) /
                         C49718;
    const double C1906 =
        (2 * (C49849 * C49897 + C50261 * ae) +
         C49849 * (C49897 + C49849 * (C49849 * C49889 + C49994 * ae) +
                   C49849 * C49994 * ae) +
         (C50261 + C49994 * C50044) * ae) /
        C49718;
    const double C122 =
        2 * C49856 * C50261 + C49856 * (C50261 + C49994 * C49864);
    const double C295 = C49848 * (C50261 + C49994 * C49864);
    const double C484 = C49849 * (C50261 + C49994 * C49864);
    const double C1153 =
        2 * C49848 * C50261 + C49848 * (C50261 + C49994 * C50007);
    const double C1614 = C49849 * (C50261 + C49994 * C50007);
    const double C1898 =
        2 * C49849 * C50261 + C49849 * (C50261 + C49994 * C50044);
    const double C533 = C50810 * C515;
    const double C49874 = C49867 + C49873;
    const double C49879 = 2 * C49876;
    const double C50014 = C49848 * C49876;
    const double C50037 = C49849 * C49876;
    const double C49911 = C49902 + C49910;
    const double C49919 = 2 * C49917;
    const double C50015 = C49917 * C50007;
    const double C50061 = ae * C49917;
    const double C50060 = C49848 * C49917;
    const double C50116 = C49849 * C49917;
    const double C50083 = C49902 + C50079;
    const double C50142 = 2 * C50134;
    const double C50140 = ae * C50134;
    const double C50180 = C49849 * C50134;
    const double C49950 = C49941 + C49949;
    const double C49958 = 2 * C49956;
    const double C50053 = C49956 * C50044;
    const double C50091 = ae * C49956;
    const double C50090 = C49849 * C49956;
    const double C50412 = C49848 * C49956;
    const double C50165 = ae * C50157;
    const double C50227 = 2 * C50157;
    const double C50194 = C49941 + C50192;
    const double C49985 = C49974 + C49984;
    const double C50098 = C49848 * C50093;
    const double C50097 = C50093 * C50007;
    const double C50212 = C50093 * C50044;
    const double C50200 = C50162 * C50044;
    const double C50167 = C49974 + C50161;
    const double C50204 = C49974 + C50201;
    const double C50624 = C50623 * C50618;
    const double C50628 = C50627 * C50623;
    const double C50901 = C50623 / C49733;
    const double C50900 = C50623 * C50619;
    const double C2342 = C50927 * C50623;
    const double C50651 = C50650 * C50645;
    const double C50656 = C50655 * C50650;
    const double C50909 = C50650 * C50646;
    const double C50906 = C50650 / C50644;
    const double C1078 = C50914 * C50650;
    const double C50718 = C50669 * C50716;
    const double C50721 = C50655 * C50669;
    const double C50918 = C50669 * C50717;
    const double C50913 = C50669 / C50644;
    const double C291 = C50914 * C50669;
    const double C50746 = C50685 * C50744;
    const double C50749 = C50655 * C50685;
    const double C50922 = C50685 * C50745;
    const double C50915 = C50685 / C50644;
    const double C482 = C50914 * C50685;
    const double C49738 = 2 * C49737;
    const double C49758 = C49737 / C49750;
    const double C50932 = C50793 / C49754;
    const double C50931 = C50793 * C50792;
    const double C50926 = C50793 / C49718;
    const double C50799 = C50796 * C50792;
    const double C10760 = C50796 / C50905;
    const double C25427 = C50796 / C49733;
    const double C50951 = C50930 / C49718;
    const double C8026 = (-2 * C50627 * C50930) / C49718;
    const double C8025 = (C50780 * std::pow(C50792, 2)) / C49750 + C50929;
    const double C49785 = 2 * C49784;
    const double C49801 = C49784 / C49750;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C345 = C117 * C296;
    const double C534 = C117 * C485;
    const double C2528 = C117 * C298;
    const double C2516 = C117 * C310;
    const double C2514 = C117 * C297;
    const double C3230 = C117 * C932;
    const double C5182 = C5171 * C121;
    const double C5178 = C5171 * C129;
    const double C5174 = C5171 * C120;
    const double C5392 = C5171 * C296;
    const double C5586 = C5171 * C485;
    const double C12751 = C5171 * C298;
    const double C12747 = C5171 * C310;
    const double C12743 = C5171 * C297;
    const double C13441 = C5171 * C932;
    const double C5176 = C5172 * C485;
    const double C12745 = C5172 * C932;
    const double C50937 = C50819 / C49754;
    const double C50936 = C50819 * C50818;
    const double C50928 = C50819 / C49718;
    const double C5181 = C50822 * C515;
    const double C31649 = C50822 * C515;
    const double C50825 = C50822 * C50818;
    const double C20909 = C50822 / C50905;
    const double C38097 = C50822 / C49733;
    const double C50954 = C50935 / C49718;
    const double C15373 = (-2 * C50627 * C50935) / C49718;
    const double C15372 = (C50810 * std::pow(C50818, 2)) / C49750 + C50934;
    const double C50023 = C50020 + C50021;
    const double C50042 = C50040 + C50041;
    const double C161 = C50810 * C144;
    const double C340 = C50810 * C325;
    const double C350 = C50810 * C329;
    const double C529 = C50810 * C514;
    const double C5189 = C50822 * C514;
    const double C31657 = C50822 * C514;
    const double C539 = C50810 * C518;
    const double C5581 = C50822 * C518;
    const double C15390 = C15374 * C518;
    const double C32049 = C50822 * C518;
    const double C956 = C50810 * C948;
    const double C5387 = C50822 * C948;
    const double C31855 = C50822 * C948;
    const double C49904 = C49889 + C49903;
    const double C49908 = 2 * C49906;
    const double C50013 = ae * C49906;
    const double C50012 = C49848 * C49906;
    const double C1164 = (2 * (ae * C49899 + C49848 * C49978) +
                          ae * (C49899 + C49906 * std::pow(C49848, 2)) +
                          C49848 * (C49978 + ae * C49848 * C49906 +
                                    C49848 * (ae * C49906 + C49848 * C49876))) /
                         C49750;
    const double C50399 = C49849 * C49906;
    const double C1159 =
        (2 * C49848 * C49899 + C49848 * (C49899 + C49906 * C50007)) / C49718;
    const double C50024 = C49889 + C50022;
    const double C50081 = C50077 + C50078;
    const double C50082 = 2 * C50076;
    const double C50080 = ae * C50076;
    const double C50475 = C49849 * C50076;
    const double C50126 = C50123 + C50124;
    const double C49943 = C49930 + C49942;
    const double C49947 = 2 * C49945;
    const double C50036 = ae * C49945;
    const double C50052 = C49849 * C49945;
    const double C1278 =
        (ae * (C49899 + C49849 * (C49849 * C49906 + C49992 * ae) +
               C49849 * C49992 * ae) +
         C49848 * (C49978 + ae * C49849 * C49945 +
                   C49849 * (ae * C49945 + C49849 * C49876))) /
        C49750;
    const double C1625 =
        (ae * C49938 + C49849 * C49978 +
         ae * (C49849 * C49848 * C49906 + C49848 * C49992 * ae) +
         C49848 * (ae * (C49849 * C49906 + C49992 * ae) +
                   C49848 * (ae * C49945 + C49849 * C49876))) /
        C49750;
    const double C1909 = (2 * (ae * C49938 + C49849 * C49978) +
                          ae * (C49938 + C49945 * std::pow(C49849, 2)) +
                          C49849 * (C49978 + ae * C49849 * C49945 +
                                    C49849 * (ae * C49945 + C49849 * C49876))) /
                         C49750;
    const double C50359 = C49848 * C49945;
    const double C1619 =
        (C49849 *
         (C49938 + C49848 * (C49848 * C49945 + C49992 * ae) + C50331 * ae)) /
        C49718;
    const double C1903 =
        (2 * C49849 * C49938 + C49849 * (C49938 + C49945 * C50044)) / C49718;
    const double C50058 = C49930 + C50057;
    const double C50110 = C50105 + C50106;
    const double C50109 = ae * C50104;
    const double C50221 = 2 * C50104;
    const double C9305 = C50810 * C3672;
    const double C13428 = C50822 * C3672;
    const double C18358 = C15374 * C3672;
    const double C36829 = C50822 * C3672;
    const double C50427 = C50423 + C50124;
    const double C49983 = 2 * C49981;
    const double C50028 = C49848 * C49981;
    const double C50117 = C49981 * ae;
    const double C50211 = C49849 * C49981;
    const double C50361 = C49981 * C50007;
    const double C50401 = C49981 * C50044;
    const double C49990 = C49972 + C49989;
    const double C50160 = 2 * C50108;
    const double C50181 = C50108 * ae;
    const double C50199 = C49849 * C50108;
    const double C50477 = C50108 * C50044;
    const double C50111 = C49972 + C50107;
    const double C50164 = C50156 * ae;
    const double C50225 = 2 * C50156;
    const double C50163 = C50154 + C50155;
    const double C50451 = C50447 + C50155;
    const double C50209 = C49972 + C50208;
    const double C49883 = C49872 + C49882;
    const double C50065 = C49848 * C50062;
    const double C50092 = C49849 * C50062;
    const double C50141 = C50135 + C50136;
    const double C50166 = C50158 + C50159;
    const double C49922 = C49909 + C49921;
    const double C50067 = C50063 * C50007;
    const double C50143 = C49909 + C50138;
    const double C49961 = C49948 + C49960;
    const double C50213 = C50094 * C50044;
    const double C50205 = C49948 + C50202;
    const double C2527 = C50810 * C328;
    const double C3513 = C50810 * C1165;
    const double C153 = C50810 * C130;
    const double C157 = C50810 * C132;
    const double C342 = C50810 * C307;
    const double C346 = C50810 * C309;
    const double C2529 = C50810 * C312;
    const double C348 = C50810 * C314;
    const double C535 = C50810 * C498;
    const double C5177 = C50822 * C498;
    const double C31645 = C50822 * C498;
    const double C3231 = C50810 * C937;
    const double C12746 = C50822 * C937;
    const double C34711 = C50822 * C937;
    const double C3511 = C50810 * C1161;
    const double C3229 = C50810 * C947;
    const double C12750 = C50822 * C947;
    const double C34715 = C50822 * C947;
    const double C154 = C117 * C131;
    const double C5186 = C5171 * C131;
    const double C158 = C117 * C133;
    const double C5192 = C5171 * C133;
    const double C343 = C117 * C308;
    const double C5388 = C5171 * C308;
    const double C2526 = C117 * C313;
    const double C12755 = C5171 * C313;
    const double C528 = C117 * C495;
    const double C5188 = C5172 * C495;
    const double C5574 = C5171 * C495;
    const double C532 = C117 * C497;
    const double C5180 = C5172 * C497;
    const double C5582 = C5171 * C497;
    const double C538 = C117 * C504;
    const double C5592 = C5171 * C504;
    const double C5580 = C5172 * C504;
    const double C3228 = C117 * C938;
    const double C12749 = C5172 * C938;
    const double C13437 = C5171 * C938;
    const double C3677 = C50810 * C1279;
    const double C13436 = C50822 * C1279;
    const double C18356 = C15374 * C1279;
    const double C35609 = C50822 * C1279;
    const double C4181 = C50810 * C1626;
    const double C12758 = C50822 * C1626;
    const double C34723 = C50822 * C1626;
    const double C315 =
        (C49856 * C49936 + C49848 * (C49848 * C49938 + C50264 * ae) +
         C49848 * C50264 * ae) /
        C49718;
    const double C503 =
        (C49856 * C49897 + C49849 * (C49849 * C49899 + C50264 * ae) +
         C49849 * C50264 * ae) /
        C49718;
    const double C939 =
        (C49849 * C49848 * C49899 + C49848 * C50264 * ae) / C49718;
    const double C940 = (C49849 * (C49848 * C49938 + C50264 * ae)) / C49718;
    const double C1158 =
        (2 * (C49848 * C49938 + C50264 * ae) +
         C49848 * (C49938 + C49848 * (C49848 * C49945 + C49992 * ae) +
                   C49848 * C49992 * ae) +
         (C50264 + C49992 * C50007) * ae) /
        C49718;
    const double C1272 = (C49848 * C49938 + C50264 * ae +
                          (C49848 * C49945 + C49992 * ae) * C50044) /
                         C49718;
    const double C1620 = (C49849 * (C49899 + C49906 * C50007) +
                          (C50264 + C49992 * C50007) * ae) /
                         C49718;
    const double C1904 =
        (2 * (C49849 * C49899 + C50264 * ae) +
         C49849 * (C49899 + C49849 * (C49849 * C49906 + C49992 * ae) +
                   C49849 * C49992 * ae) +
         (C50264 + C49992 * C50044) * ae) /
        C49718;
    const double C299 = C49856 * C50261 + C50264 * C50007;
    const double C488 = C49856 * C50261 + C50264 * C50044;
    const double C933 = C49849 * C49848 * C50264;
    const double C1152 =
        2 * C49848 * C50264 + C49848 * (C50264 + C49992 * C50007);
    const double C1266 = C49848 * C50264 + C50331 * C50044;
    const double C1613 = C49849 * (C50264 + C49992 * C50007);
    const double C1897 =
        2 * C49849 * C50264 + C49849 * (C50264 + C49992 * C50044);
    const double C123 = 3 * (C50261 + C49994 * C49864) +
                        C49856 * (2 * C50264 + C49856 * C50268);
    const double C294 = C49848 * (2 * C50264 + C49856 * C50268);
    const double C300 = C50261 + C49994 * C49864 + C50268 * C50007;
    const double C483 = C49849 * (2 * C50264 + C49856 * C50268);
    const double C489 = C50261 + C49994 * C49864 + C50268 * C50044;
    const double C934 = C49849 * C49848 * C50268;
    const double C1275 =
        (C49848 * C49897 + C49849 * (C49849 * C50019 + C50334 * ae) +
         C49849 * C50334 * ae) /
        C49718;
    const double C1621 =
        (C49849 *
         (C49936 + C49848 * (C49848 * C49930 + C49994 * ae) + C50334 * ae)) /
        C49718;
    const double C4581 =
        (2 * (C49849 * C50019 + C50334 * ae) +
         C49849 * (C50019 + C49849 * (C49849 * C50076 + C50030 * ae) +
                   C49849 * C50030 * ae) +
         (C50334 + C50030 * C50044) * ae) /
        C49718;
    const double C1267 = C49848 * C50261 + C50334 * C50044;
    const double C4575 =
        2 * C49849 * C50334 + C49849 * (C50334 + C50030 * C50044);
    const double C50369 = C50366 + C50367;
    const double C50409 = C50406 + C50367;
    const double C3499 = 3 * (C50261 + C49994 * C50007) +
                         C49848 * (2 * C50334 + C49848 * C50370);
    const double C3663 = C50261 + C49994 * C50007 + C50370 * C50044;
    const double C4167 = C49849 * (2 * C50334 + C49848 * C50370);
    const double C7431 = 3 * (C50261 + C49994 * C50044) +
                         C49849 * (2 * C50407 + C49849 * C50410);
    const double C339 = C117 * C306;
    const double C5380 = C5171 * C306;
    const double C531 = C50810 * C496;
    const double C5185 = C50822 * C496;
    const double C31653 = C50822 * C496;
    const double C3512 = C117 * C1160;
    const double C12761 = C5171 * C1160;
    const double C3676 = C117 * C1274;
    const double C13435 = C5172 * C1274;
    const double C13871 = C5171 * C1274;
    const double C4179 = C50810 * C1622;
    const double C12754 = C50822 * C1622;
    const double C34727 = C50822 * C1622;
    const double C156 = C117 * C122;
    const double C5196 = C5171 * C122;
    const double C341 = C117 * C295;
    const double C5384 = C5171 * C295;
    const double C530 = C117 * C484;
    const double C5184 = C5172 * C484;
    const double C5578 = C5171 * C484;
    const double C3510 = C117 * C1153;
    const double C12765 = C5171 * C1153;
    const double C4178 = C117 * C1614;
    const double C12753 = C5172 * C1614;
    const double C13433 = C5171 * C1614;
    const double C145 =
        (4 * (2 * C49856 * C49867 + C49856 * C49874) +
         C49856 * (3 * C49874 +
                   C49856 * (2 * C49856 * C49872 +
                             C49856 * (C49872 + std::pow(C49862, 7) * bs[7] *
                                                    C49854 * C49864)))) /
        C49750;
    const double C324 =
        (ae * (2 * C49856 * C49889 +
               C49856 * (C49889 + C49865 * C49863 * C49887 * C49864)) +
         C49848 * (2 * C49856 * C49867 + C49856 * C49874)) /
        C49750;
    const double C513 =
        (ae * (2 * C49856 * C49930 +
               C49856 * (C49930 + C49865 * C49863 * C49928 * C49864)) +
         C49849 * (2 * C49856 * C49867 + C49856 * C49874)) /
        C49750;
    const double C49912 = C49856 * C49911;
    const double C49916 = 3 * C49911;
    const double C50005 = ae * C49911;
    const double C50004 = C49848 * C49911;
    const double C50392 = C49849 * C49911;
    const double C50017 = C49906 + C50015;
    const double C50066 = 2 * C50060;
    const double C50064 = ae * C50060;
    const double C50482 = C49849 * C50060;
    const double C50086 = C49848 * C50083;
    const double C50137 = 3 * C50083;
    const double C50133 = ae * C50083;
    const double C50468 = C49849 * C50083;
    const double C50144 = C49872 + C50140;
    const double C49951 = C49856 * C49950;
    const double C49955 = 3 * C49950;
    const double C50032 = ae * C49950;
    const double C50048 = C49849 * C49950;
    const double C50352 = C49848 * C49950;
    const double C50054 = C49945 + C50053;
    const double C50095 = ae * C50090;
    const double C50217 = 2 * C50090;
    const double C50169 = C49872 + C50165;
    const double C50195 = ae * C50194;
    const double C50222 = C49849 * C50194;
    const double C50232 = 3 * C50194;
    const double C49986 = C49856 * C49985;
    const double C50026 = C49848 * C49985;
    const double C50354 = C49985 * C50007;
    const double C50394 = C49985 * C50044;
    const double C50484 = C50098 * C50044;
    const double C50101 = C49981 + C50097;
    const double C50214 = C49981 + C50212;
    const double C50203 = C50108 + C50200;
    const double C50171 = C49848 * C50167;
    const double C50470 = C50167 * C50044;
    const double C50226 = C49849 * C50204;
    const double C50903 = C50624 / C49754;
    const double C50902 = C50624 * C50619;
    const double C50899 = C50624 / C49718;
    const double C50631 = C50628 * C50619;
    const double C110 = C50628 / C50905;
    const double C22718 = C50628 / C49733;
    const double C2340 = (C50623 * std::pow(C50619, 2)) / C49750 + C50901;
    const double C50939 = C50900 / C49718;
    const double C2341 = (-2 * C50627 * C50900) / C49718;
    const double C50910 = C50651 / C50659;
    const double C50908 = C50651 / C50642;
    const double C50907 = C50651 * C50646;
    const double C1077 = (2 * C50655 * C50651) / C50642;
    const double C50911 = C50656 * C50646;
    const double C116 = C50656 / C50912;
    const double C673 = C50656 / C50644;
    const double C50943 = C50909 / C50642;
    const double C1076 = (C50650 * std::pow(C50645, 2)) / C50654 + C50906;
    const double C50920 = C50718 / C50659;
    const double C50919 = C50718 * C50717;
    const double C50916 = C50718 / C50642;
    const double C290 = (2 * C50655 * C50718) / C50642;
    const double C50921 = C50721 * C50717;
    const double C1148 = C50721 / C50912;
    const double C1380 = C50721 / C50644;
    const double C50945 = C50918 / C50642;
    const double C289 = (C50669 * std::pow(C50716, 2)) / C50654 + C50913;
    const double C50924 = C50746 / C50659;
    const double C50923 = C50746 * C50745;
    const double C50917 = C50746 / C50642;
    const double C481 = (2 * C50655 * C50746) / C50642;
    const double C50925 = C50749 * C50745;
    const double C1894 = C50749 / C50912;
    const double C2141 = C50749 / C50644;
    const double C50948 = C50922 / C50642;
    const double C480 = (C50685 * std::pow(C50744, 2)) / C50654 + C50915;
    const double C49752 = C49717 * C49738;
    const double C8031 =
        ((-C49734 / C49718) / C49733 -
         ((C50780 - (C49717 * C49738) / C49718) * be) / C49718) /
            C49733 -
        ((C49717 * ((-C49738 / C49718) / C49733 - (0 * be) / C49718) + C50796) *
         be) /
            C49718;
    const double C8032 =
        ((-C49738 / C49718) / C49733 - (0 * be) / C49718) / C49733 -
        (0 * be) / C49718;
    const double C22720 = (-C49738 / C49718) / C49733 - (0 * be) / C49718;
    const double C49763 = C49757 - C49758;
    const double C50952 = C50931 / C49750;
    const double C50933 = C50799 / C49718;
    const double C22714 = -C50951;
    const double C49798 = C49725 * C49785;
    const double C15376 =
        ((-C49782 / C49718) / C49733 -
         ((C50810 - (C49725 * C49785) / C49718) * be) / C49718) /
            C49733 -
        ((C49725 * ((-C49785 / C49718) / C49733 - (0 * be) / C49718) + C50822) *
         be) /
            C49718;
    const double C15377 =
        ((-C49785 / C49718) / C49733 - (0 * be) / C49718) / C49733 -
        (0 * be) / C49718;
    const double C31640 = (-C49785 / C49718) / C49733 - (0 * be) / C49718;
    const double C49808 = C49805 - C49801;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C2543 = C2516 + C2517;
    const double C2542 = C2514 + C2515;
    const double C50955 = C50936 / C49750;
    const double C5203 = C50928 * C144;
    const double C5197 = C50928 * C132;
    const double C5193 = C50928 * C143;
    const double C5187 = C50928 * C142;
    const double C5183 = C50928 * C130;
    const double C5179 = C50928 * C141;
    const double C5175 = C50928 * C128;
    const double C5399 = C50928 * C329;
    const double C5395 = C50928 * C314;
    const double C5393 = C50928 * C309;
    const double C5389 = C50928 * C326;
    const double C5385 = C50928 * C307;
    const double C5381 = C50928 * C325;
    const double C5593 = C50928 * C518;
    const double C5587 = C50928 * C498;
    const double C5583 = C50928 * C515;
    const double C5579 = C50928 * C496;
    const double C5575 = C50928 * C514;
    const double C6145 = C50928 * C948;
    const double C12766 = C50928 * C1161;
    const double C12762 = C50928 * C1165;
    const double C12756 = C50928 * C328;
    const double C12752 = C50928 * C312;
    const double C12748 = C50928 * C327;
    const double C12744 = C50928 * C311;
    const double C13442 = C50928 * C937;
    const double C13438 = C50928 * C947;
    const double C13434 = C50928 * C1622;
    const double C13430 = C50928 * C1626;
    const double C13880 = C50928 * C3672;
    const double C13872 = C50928 * C1279;
    const double C50938 = C50825 / C49718;
    const double C38113 = C38097 * C518;
    const double C47231 = C38097 * C3672;
    const double C47229 = C38097 * C1279;
    const double C31637 = -C50954;
    const double C15400 = C15373 * C496;
    const double C15394 = C15373 * C514;
    const double C15388 = C15373 * C515;
    const double C15382 = C15373 * C498;
    const double C15582 = C15373 * C948;
    const double C15764 = C15373 * C518;
    const double C18366 = C15373 * C1622;
    const double C18360 = C15373 * C1626;
    const double C18354 = C15373 * C947;
    const double C18348 = C15373 * C937;
    const double C19016 = C15373 * C1279;
    const double C19952 = C15373 * C3672;
    const double C15410 = C15372 * C143;
    const double C15404 = C15372 * C132;
    const double C15402 = C15372 * C130;
    const double C15396 = C15372 * C142;
    const double C15386 = C15372 * C141;
    const double C15380 = C15372 * C128;
    const double C15598 = C15372 * C329;
    const double C15592 = C15372 * C314;
    const double C15590 = C15372 * C309;
    const double C15584 = C15372 * C326;
    const double C15780 = C15372 * C518;
    const double C15772 = C15372 * C498;
    const double C15766 = C15372 * C515;
    const double C15950 = C15372 * C325;
    const double C15944 = C15372 * C307;
    const double C16114 = C15372 * C514;
    const double C16108 = C15372 * C496;
    const double C16326 = C15372 * C948;
    const double C18368 = C15372 * C312;
    const double C18362 = C15372 * C328;
    const double C18352 = C15372 * C327;
    const double C18346 = C15372 * C311;
    const double C19024 = C15372 * C937;
    const double C19018 = C15372 * C947;
    const double C19282 = C15372 * C1165;
    const double C19276 = C15372 * C1161;
    const double C19446 = C15372 * C1279;
    const double C19950 = C15372 * C1626;
    const double C19944 = C15372 * C1622;
    const double C4584 =
        (ae * (2 * (C49849 * C49889 + C49994 * ae) +
               C49849 * (C49889 + C49849 * (C49849 * C49902 + C49972 * ae) +
                         C49849 * C49972 * ae) +
               (C49994 + C49972 * C50044) * ae) +
         C49848 * (2 * C50042 + ae * (C49930 + C49941 * C50044) +
                   C49849 * (C49867 + ae * C49849 * C49941 +
                             C49849 * (ae * C49941 + C49849 * C49872)))) /
        C49750;
    const double C330 = (C49860 + C49867 * C49864 + ae * C49848 * C49904 +
                         C49848 * (ae * C49904 + C49848 * C49874)) /
                        C49750;
    const double C135 = (3 * (C49897 + C49889 * C49864) +
                         C49856 * (2 * C49899 + C49856 * C49904)) /
                        C49718;
    const double C305 = (C49848 * (2 * C49899 + C49856 * C49904)) / C49718;
    const double C316 = (C49897 + C49889 * C49864 + C49904 * C50007) / C49718;
    const double C494 = (C49849 * (2 * C49899 + C49856 * C49904) +
                         (2 * C50264 + C49856 * C50268) * ae) /
                        C49718;
    const double C505 =
        (C49897 + C49889 * C49864 + C49849 * (C49849 * C49904 + C50268 * ae) +
         C49849 * C50268 * ae) /
        C49718;
    const double C941 =
        (C49849 * C49848 * C49904 + C49848 * C50268 * ae) / C49718;
    const double C1157 =
        (2 * C49848 * C49904 + C49848 * (C49904 + C49911 * C50007)) / C49718;
    const double C50016 = C50013 + C50014;
    const double C1273 =
        (C49848 * C49899 + C49849 * (C49849 * C50012 + C50331 * ae) +
         C49849 * C50331 * ae) /
        C49718;
    const double C2535 = C50810 * C1164;
    const double C12772 = C50928 * C1164;
    const double C50402 = C50399 + C50360;
    const double C2533 = C50810 * C1159;
    const double C12768 = C50928 * C1159;
    const double C3508 =
        (3 * (C49860 + ae * C50019 + C49848 * C50023) +
         ae * (2 * C50019 + C49848 * C50024) +
         C49848 * (2 * C50023 + ae * C50024 +
                   C49848 * (C49867 + ae * C49848 * C49902 +
                             C49848 * (ae * C49902 + C49848 * C49872)))) /
        C49750;
    const double C4176 =
        (2 * (ae * (C49849 * C49889 + C49994 * ae) + C49848 * C50042) +
         ae * (C49849 * C50024 + (C49994 + C49972 * C50007) * ae) +
         C49848 * (C50042 + ae * (C49849 * C49848 * C49902 + C50030 * ae) +
                   C49848 * (ae * (C49849 * C49902 + C49972 * ae) +
                             C49848 * (ae * C49941 + C49849 * C49872)))) /
        C49750;
    const double C3505 = (3 * (C49897 + C49889 * C50007) +
                          C49848 * (2 * C50019 + C49848 * C50024)) /
                         C49718;
    const double C3669 =
        (C49897 + C49889 * C50007 + C49849 * (C49849 * C50024 + C50370 * ae) +
         C49849 * C50370 * ae) /
        C49718;
    const double C4173 = (C49849 * (2 * C50019 + C49848 * C50024) +
                          (2 * C50334 + C49848 * C50370) * ae) /
                         C49718;
    const double C50085 = C49848 * C50081;
    const double C50132 = 2 * C50081;
    const double C50084 = C49867 + C50080;
    const double C50478 = C50475 + C50424;
    const double C50127 = ae * C50126;
    const double C50498 = C49849 * C50126;
    const double C50518 = 2 * C50126;
    const double C519 = (C49860 + C49867 * C49864 + ae * C49849 * C49943 +
                         C49849 * (ae * C49943 + C49849 * C49874)) /
                        C49750;
    const double C949 =
        (ae * (C49849 * C49904 +
               (C49895 * C49894 + C49858 * C49857 * C49864) * ae) +
         C49848 * (ae * C49943 + C49849 * C49874)) /
        C49750;
    const double C134 = (3 * (C49936 + C49930 * C49864) +
                         C49856 * (2 * C49938 + C49856 * C49943)) /
                        C49718;
    const double C304 =
        (C49848 * (2 * C49938 + C49856 * C49943) +
         (2 * C49856 * C49994 + C49856 * (C49994 + C49972 * C49864)) * ae) /
        C49718;
    const double C317 =
        (C49936 + C49930 * C49864 + C49848 * (C49848 * C49943 + C50268 * ae) +
         C49848 * C50268 * ae) /
        C49718;
    const double C493 = (C49849 * (2 * C49938 + C49856 * C49943)) / C49718;
    const double C506 = (C49936 + C49930 * C49864 + C49943 * C50044) / C49718;
    const double C942 = (C49849 * (C49848 * C49943 + C50268 * ae)) / C49718;
    const double C1901 =
        (2 * C49849 * C49943 + C49849 * (C49943 + C49950 * C50044)) / C49718;
    const double C50038 = C50036 + C50037;
    const double C2713 = C50810 * C1278;
    const double C6147 = C50822 * C1278;
    const double C15580 = C15374 * C1278;
    const double C16328 = C15373 * C1278;
    const double C28553 = C50928 * C1278;
    const double C32615 = C50822 * C1278;
    const double C38303 = C38097 * C1278;
    const double C3237 = C50810 * C1625;
    const double C5401 = C50822 * C1625;
    const double C13448 = C50928 * C1625;
    const double C15600 = C15373 * C1625;
    const double C31869 = C50822 * C1625;
    const double C5595 = C50822 * C1909;
    const double C15782 = C15373 * C1909;
    const double C15762 = C15374 * C1909;
    const double C32063 = C50822 * C1909;
    const double C38485 = C38097 * C1909;
    const double C50362 = C50359 + C50360;
    const double C3236 = C117 * C1619;
    const double C5400 = C5172 * C1619;
    const double C13447 = C5171 * C1619;
    const double C5594 = C5172 * C1903;
    const double C7440 =
        (3 * (C49860 + ae * C50056 + C49849 * C50042) +
         ae * (2 * C50056 + C49849 * C50058) +
         C49849 * (2 * C50042 + ae * C50058 +
                   C49849 * (C49867 + ae * C49849 * C49941 +
                             C49849 * (ae * C49941 + C49849 * C49872)))) /
        C49750;
    const double C7436 = (3 * (C49936 + C49930 * C50044) +
                          C49849 * (2 * C50056 + C49849 * C50058)) /
                         C49718;
    const double C50113 = C49849 * C50110;
    const double C50125 = C49848 * C50110;
    const double C50191 = 2 * C50110;
    const double C50112 = C49867 + C50109;
    const double C50429 = C49848 * C50427;
    const double C50446 = 2 * C50427;
    const double C3671 =
        (C49978 + ae * C49849 * C49945 +
         C49849 * (ae * C49945 + C49849 * C49876) +
         ae * (C50012 + C49849 * (C49849 * C49848 * C49917 + C50028 * ae) +
               C49849 * C50028 * ae) +
         C49848 *
             (ae * (C49906 + C49849 * (C49849 * C49917 + C49981 * ae) +
                    C49849 * C49981 * ae) +
              C49848 * (C49876 + ae * C49849 * C49956 +
                        C49849 * (ae * C49956 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C50414 = 2 * C50028;
    const double C50413 = C50028 * ae;
    const double C50483 = C49849 * C50028;
    const double C4579 =
        (2 * (C49849 * C50012 + C50331 * ae) +
         C49849 * (C50012 + C49849 * (C49849 * C50060 + C50028 * ae) +
                   C49849 * C50028 * ae) +
         (C50331 + C50028 * C50044) * ae) /
        C49718;
    const double C4574 =
        2 * C49849 * C50331 + C49849 * (C50331 + C50028 * C50044);
    const double C50119 = C50116 + C50117;
    const double C50416 = C50412 + C50117;
    const double C50491 = 2 * C50211;
    const double C50490 = C50211 * ae;
    const double C50363 = C49992 + C50361;
    const double C50403 = C49992 + C50401;
    const double C50272 = C49856 * C49990;
    const double C50277 = 3 * C49990;
    const double C50328 = C49848 * C49990;
    const double C50353 = C49990 * ae;
    const double C50393 = C49849 * C49990;
    const double C1156 =
        (2 * (C49848 * C49943 + C50268 * ae) +
         C49848 * (C49943 + C49848 * (C49848 * C49950 + C49990 * ae) +
                   C49848 * C49990 * ae) +
         (C50268 + C49990 * C50007) * ae) /
        C49718;
    const double C1270 = (C49848 * C49943 + C50268 * ae +
                          (C49848 * C49950 + C49990 * ae) * C50044) /
                         C49718;
    const double C1618 = (C49849 * (C49904 + C49911 * C50007) +
                          (C50268 + C49990 * C50007) * ae) /
                         C49718;
    const double C1902 =
        (2 * (C49849 * C49904 + C50268 * ae) +
         C49849 * (C49904 + C49849 * (C49849 * C49911 + C49990 * ae) +
                   C49849 * C49990 * ae) +
         (C50268 + C49990 * C50044) * ae) /
        C49718;
    const double C1151 =
        2 * C49848 * C50268 + C49848 * (C50268 + C49990 * C50007);
    const double C1612 = C49849 * (C50268 + C49990 * C50007);
    const double C1896 =
        2 * C49849 * C50268 + C49849 * (C50268 + C49990 * C50044);
    const double C50184 = C50180 + C50181;
    const double C50511 = 2 * C50199;
    const double C50510 = C50199 * ae;
    const double C50479 = C50030 + C50477;
    const double C50426 = C49848 * C50111;
    const double C50449 = 3 * C50111;
    const double C50448 = C50111 * ae;
    const double C50469 = C49849 * C50111;
    const double C10202 =
        (2 * (C49849 * C50024 + C50370 * ae) +
         C49849 * (C50024 + C49849 * (C49849 * C50083 + C50111 * ae) +
                   C49849 * C50111 * ae) +
         (C50370 + C50111 * C50044) * ae) /
        C49718;
    const double C10198 =
        2 * C49849 * C50370 + C49849 * (C50370 + C50111 * C50044);
    const double C50168 = C49849 * C50163;
    const double C50182 = ae * C50163;
    const double C50453 = C49848 * C50451;
    const double C50506 = C50451 * C50044;
    const double C50501 = C49849 * C50209;
    const double C50521 = 3 * C50209;
    const double C50520 = C50209 * ae;
    const double C49884 = C49856 * C49883;
    const double C50006 = C49848 * C49883;
    const double C50033 = C49849 * C49883;
    const double C1163 = (2 * (ae * C49904 + C49848 * C49874) +
                          ae * (C49904 + C49911 * std::pow(C49848, 2)) +
                          C49848 * (C49874 + ae * C49848 * C49911 +
                                    C49848 * (ae * C49911 + C49848 * C49883))) /
                         C49750;
    const double C1277 =
        (ae * (C49904 + C49849 * (C49849 * C49911 + C49990 * ae) +
               C49849 * C49990 * ae) +
         C49848 * (C49874 + ae * C49849 * C49950 +
                   C49849 * (ae * C49950 + C49849 * C49883))) /
        C49750;
    const double C1624 =
        (ae * C49943 + C49849 * C49874 +
         ae * (C49849 * C49848 * C49911 + C49848 * C49990 * ae) +
         C49848 * (ae * (C49849 * C49911 + C49990 * ae) +
                   C49848 * (ae * C49950 + C49849 * C49883))) /
        C49750;
    const double C1908 = (2 * (ae * C49943 + C49849 * C49874) +
                          ae * (C49943 + C49950 * std::pow(C49849, 2)) +
                          C49849 * (C49874 + ae * C49849 * C49950 +
                                    C49849 * (ae * C49950 + C49849 * C49883))) /
                         C49750;
    const double C50069 = C50061 + C50065;
    const double C50096 = C50091 + C50092;
    const double C50145 = C49848 * C50141;
    const double C50170 = C49849 * C50166;
    const double C50183 = C49848 * C50166;
    const double C49923 = C49856 * C49922;
    const double C50009 = C49922 * C50007;
    const double C50070 = C49917 + C50067;
    const double C50146 = C49848 * C50143;
    const double C49962 = C49856 * C49961;
    const double C50049 = C49961 * C50044;
    const double C50215 = C49956 + C50213;
    const double C50228 = C49849 * C50205;
    const double C170 = C152 + C153;
    const double C364 = C345 + C346;
    const double C2545 = C2528 + C2529;
    const double C553 = C534 + C535;
    const double C5207 = C5176 + C5177;
    const double C3245 = C3230 + C3231;
    const double C12778 = C12745 + C12746;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C363 = C343 + C344;
    const double C2544 = C2526 + C2527;
    const double C550 = C528 + C529;
    const double C5213 = C5188 + C5189;
    const double C552 = C532 + C533;
    const double C5209 = C5180 + C5181;
    const double C555 = C538 + C539;
    const double C5608 = C5580 + C5581;
    const double C3244 = C3228 + C3229;
    const double C12780 = C12749 + C12750;
    const double C349 = C117 * C315;
    const double C5398 = C5171 * C315;
    const double C537 = C50810 * C503;
    const double C5589 = C50928 * C503;
    const double C5585 = C50822 * C503;
    const double C15384 = C15374 * C503;
    const double C15774 = C15372 * C503;
    const double C15770 = C15373 * C503;
    const double C32053 = C50822 * C503;
    const double C38107 = C38097 * C503;
    const double C954 = C50810 * C939;
    const double C5391 = C50822 * C939;
    const double C6141 = C50928 * C939;
    const double C15588 = C15373 * C939;
    const double C16320 = C15372 * C939;
    const double C31859 = C50822 * C939;
    const double C955 = C117 * C940;
    const double C5386 = C5172 * C940;
    const double C6144 = C5171 * C940;
    const double C2534 = C117 * C1158;
    const double C12771 = C5171 * C1158;
    const double C2712 = C117 * C1272;
    const double C6146 = C5172 * C1272;
    const double C28552 = C5171 * C1272;
    const double C3235 = C50810 * C1620;
    const double C5397 = C50822 * C1620;
    const double C13444 = C50928 * C1620;
    const double C15594 = C15373 * C1620;
    const double C31865 = C50822 * C1620;
    const double C5591 = C50822 * C1904;
    const double C15776 = C15373 * C1904;
    const double C15768 = C15374 * C1904;
    const double C32059 = C50822 * C1904;
    const double C38491 = C38097 * C1904;
    const double C347 = C117 * C299;
    const double C5394 = C5171 * C299;
    const double C536 = C117 * C488;
    const double C5588 = C5171 * C488;
    const double C5584 = C5172 * C488;
    const double C953 = C117 * C933;
    const double C5390 = C5172 * C933;
    const double C6140 = C5171 * C933;
    const double C2532 = C117 * C1152;
    const double C12767 = C5171 * C1152;
    const double C2710 = C117 * C1266;
    const double C6142 = C5172 * C1266;
    const double C28548 = C5171 * C1266;
    const double C3234 = C117 * C1613;
    const double C5396 = C5172 * C1613;
    const double C13443 = C5171 * C1613;
    const double C5590 = C5172 * C1897;
    const double C162 = C117 * C123;
    const double C5198 = C5171 * C123;
    const double C337 = C117 * C294;
    const double C5768 = C5171 * C294;
    const double C351 = C117 * C300;
    const double C5402 = C5171 * C300;
    const double C526 = C117 * C483;
    const double C5194 = C5172 * C483;
    const double C5931 = C5171 * C483;
    const double C540 = C117 * C489;
    const double C5596 = C5171 * C489;
    const double C5576 = C5172 * C489;
    const double C957 = C117 * C934;
    const double C5382 = C5172 * C934;
    const double C6148 = C5171 * C934;
    const double C3675 = C50810 * C1275;
    const double C13440 = C50822 * C1275;
    const double C13868 = C50928 * C1275;
    const double C18350 = C15374 * C1275;
    const double C19022 = C15373 * C1275;
    const double C19440 = C15372 * C1275;
    const double C35613 = C50822 * C1275;
    const double C47223 = C38097 * C1275;
    const double C4180 = C117 * C1621;
    const double C12757 = C5172 * C1621;
    const double C13429 = C5171 * C1621;
    const double C13870 = C50822 * C4581;
    const double C19020 = C15374 * C4581;
    const double C19442 = C15373 * C4581;
    const double C36167 = C50822 * C4581;
    const double C47893 = C38097 * C4581;
    const double C3674 = C117 * C1267;
    const double C13439 = C5172 * C1267;
    const double C13867 = C5171 * C1267;
    const double C13869 = C5172 * C4575;
    const double C3504 =
        (3 * (C49936 + C49848 * C50369 + C50334 * ae) +
         C49848 * (2 * C50369 +
                   C49848 * (C49930 + C49848 * (C49848 * C49941 + C50124) +
                             C50030 * ae) +
                   C50370 * ae) +
         (2 * C50334 + C49848 * C50370) * ae) /
        C49718;
    const double C3668 =
        (C49936 + C49848 * C50369 + C50334 * ae +
         (C49930 + C49848 * (C49848 * C49941 + C50124) + C50030 * ae) *
             C50044) /
        C49718;
    const double C4172 =
        (C49849 * (2 * C50369 +
                   C49848 * (C49930 + C49848 * (C49848 * C49941 + C50124) +
                             C50030 * ae) +
                   C50370 * ae)) /
        C49718;
    const double C4580 =
        (2 * C49849 * C50369 +
         C49849 * (C50369 + (C49848 * C49941 + C50124) * C50044)) /
        C49718;
    const double C14784 =
        (3 * (C50369 + C50427 * C50044) +
         C49849 * (2 * C49849 * C50427 + C49849 * (C50427 + C50451 * C50044))) /
        C49718;
    const double C7437 =
        (3 * (C49897 + C49849 * C50409 + C50407 * ae) +
         C49849 *
             (2 * C50409 + C49849 * (C49889 + C49849 * C50126 + C50207 * ae) +
              C50410 * ae) +
         (2 * C50407 + C49849 * C50410) * ae) /
        C49718;
    const double C9142 = C117 * C3499;
    const double C13709 = C5171 * C3499;
    const double C9302 = C117 * C3663;
    const double C13431 = C5172 * C3663;
    const double C13875 = C5171 * C3663;
    const double C9802 = C117 * C4167;
    const double C12763 = C5172 * C4167;
    const double C14379 = C5171 * C4167;
    const double C361 = C339 + C340;
    const double C3515 = C3512 + C3513;
    const double C3679 = C3676 + C3677;
    const double C13455 = C13435 + C13436;
    const double C172 = C156 + C157;
    const double C362 = C341 + C342;
    const double C551 = C530 + C531;
    const double C5211 = C5184 + C5185;
    const double C3514 = C3510 + C3511;
    const double C4182 = C4178 + C4179;
    const double C12782 = C12753 + C12754;
    const double C167 = C50810 * C145;
    const double C336 = C50810 * C324;
    const double C5773 = C50928 * C324;
    const double C525 = C50810 * C513;
    const double C5191 = C50822 * C513;
    const double C5936 = C50928 * C513;
    const double C15412 = C15373 * C513;
    const double C31659 = C50822 * C513;
    const double C49913 = C49908 + C49912;
    const double C3503 = (3 * (C49899 + C49906 * C50007) +
                          C49848 * (2 * C50012 + C49848 * C50017)) /
                         C49718;
    const double C50068 = C49876 + C50064;
    const double C50088 = C50082 + C50086;
    const double C49952 = C49947 + C49951;
    const double C7434 = (3 * (C49938 + C49945 * C50044) +
                          C49849 * (2 * C50052 + C49849 * C50054)) /
                         C49718;
    const double C50099 = C49876 + C50095;
    const double C50223 = C50221 + C50222;
    const double C49987 = C49983 + C49986;
    const double C3670 =
        (C49874 + ae * C49849 * C49950 +
         C49849 * (ae * C49950 + C49849 * C49883) +
         ae * (C50004 + C49849 * (C49849 * C49848 * C49922 + C50026 * ae) +
               C49849 * C50026 * ae) +
         C49848 * (ae * (C49911 + C49849 * (C49849 * C49922 + C49985 * ae) +
                         C49849 * C49985 * ae) +
                   C49848 * (C49883 + ae * C49849 * C49961 +
                             C49849 * (ae * C49961 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C50356 = C49990 + C50354;
    const double C50396 = C49990 + C50394;
    const double C50486 = C50028 + C50484;
    const double C50415 = C49848 * C50101;
    const double C50492 = C49849 * C50214;
    const double C50512 = C49849 * C50203;
    const double C50174 = C50160 + C50171;
    const double C50472 = C50111 + C50470;
    const double C50229 = C50225 + C50226;
    const double C50940 = C50902 / C49750;
    const double C50904 = C50631 / C49718;
    const double C25428 = -C50939;
    const double C50942 = C50907 / C50654;
    const double C50944 = C50911 / C50642;
    const double C292 = -C50943;
    const double C50946 = C50919 / C50654;
    const double C50947 = C50921 / C50642;
    const double C1074 = -C50945;
    const double C50949 = C50923 / C50654;
    const double C50950 = C50925 / C50642;
    const double C1725 = -C50948;
    const double C49756 = C49752 / C49718;
    const double C10765 =
        (C49763 / C49733 - (0 * be) / C49718) / C49733 - (0 * be) / C49718;
    const double C25432 = C49763 / C49733 - (0 * be) / C49718;
    const double C50964 = C50929 - C50952;
    const double C50953 = C50932 - C50933;
    const double C8030 =
        ((-(0 * be) / C49718) / C49733 -
         ((0 - (C49717 * C49734) / C49718) * be) / C49718) /
            C49733 -
        ((C49717 * ((-C49734 / C49718) / C49733 -
                    ((C50780 - (C49717 * C49738) / C49718) * be) / C49718) +
          C22714) *
         be) /
            C49718 +
        (-C49738 / C49718) / C49733 - (0 * be) / C49718;
    const double C49804 = C49798 / C49718;
    const double C15405 = C15376 * C483;
    const double C15399 = C15376 * C484;
    const double C15393 = C15376 * C495;
    const double C15387 = C15376 * C497;
    const double C15381 = C15376 * C485;
    const double C15599 = C15376 * C1619;
    const double C15593 = C15376 * C1613;
    const double C15587 = C15376 * C933;
    const double C15581 = C15376 * C940;
    const double C15781 = C15376 * C1903;
    const double C15775 = C15376 * C1897;
    const double C15769 = C15376 * C488;
    const double C15763 = C15376 * C504;
    const double C15945 = C15376 * C934;
    const double C16109 = C15376 * C489;
    const double C16327 = C15376 * C1272;
    const double C16321 = C15376 * C1266;
    const double C18365 = C15376 * C1614;
    const double C18359 = C15376 * C1621;
    const double C18353 = C15376 * C938;
    const double C18347 = C15376 * C932;
    const double C19021 = C15376 * C1267;
    const double C19015 = C15376 * C1274;
    const double C19277 = C15376 * C4167;
    const double C19441 = C15376 * C4575;
    const double C19945 = C15376 * C3663;
    const double C15397 = C15377 * C489;
    const double C15389 = C15377 * C504;
    const double C15383 = C15377 * C488;
    const double C15585 = C15377 * C1266;
    const double C15579 = C15377 * C1272;
    const double C15767 = C15377 * C1897;
    const double C15761 = C15377 * C1903;
    const double C18363 = C15377 * C3663;
    const double C18355 = C15377 * C1274;
    const double C18349 = C15377 * C1267;
    const double C19019 = C15377 * C4575;
    const double C31662 = C31640 * C483;
    const double C31656 = C31640 * C495;
    const double C31652 = C31640 * C484;
    const double C31648 = C31640 * C497;
    const double C31644 = C31640 * C485;
    const double C31868 = C31640 * C1619;
    const double C31864 = C31640 * C1613;
    const double C31858 = C31640 * C933;
    const double C31854 = C31640 * C940;
    const double C31850 = C31640 * C934;
    const double C32062 = C31640 * C1903;
    const double C32058 = C31640 * C1897;
    const double C32052 = C31640 * C488;
    const double C32048 = C31640 * C504;
    const double C32044 = C31640 * C489;
    const double C32614 = C31640 * C1272;
    const double C32610 = C31640 * C1266;
    const double C34726 = C31640 * C1614;
    const double C34722 = C31640 * C1621;
    const double C34714 = C31640 * C938;
    const double C34710 = C31640 * C932;
    const double C35612 = C31640 * C1267;
    const double C35608 = C31640 * C1274;
    const double C35960 = C31640 * C4167;
    const double C36166 = C31640 * C4575;
    const double C36824 = C31640 * C3663;
    const double C20913 =
        (C49808 / C49733 - (0 * be) / C49718) / C49733 - (0 * be) / C49718;
    const double C38100 = C49808 / C49733 - (0 * be) / C49718;
    const double C179 = C169 * C50780;
    const double C2347 = C169 * C50926;
    const double C8035 = C169 * C8025;
    const double C22723 = C169 * C22714;
    const double C178 = C168 * C118;
    const double C2346 = C168 * C2343;
    const double C50965 = C50934 - C50955;
    const double C5217 = C5196 + C5197;
    const double C5215 = C5192 + C5193;
    const double C5212 = C5186 + C5187;
    const double C5210 = C5182 + C5183;
    const double C5208 = C5178 + C5179;
    const double C5206 = C5174 + C5175;
    const double C5417 = C5392 + C5393;
    const double C5415 = C5388 + C5389;
    const double C5413 = C5384 + C5385;
    const double C5411 = C5380 + C5381;
    const double C5614 = C5592 + C5593;
    const double C5611 = C5586 + C5587;
    const double C5609 = C5582 + C5583;
    const double C5607 = C5578 + C5579;
    const double C5605 = C5574 + C5575;
    const double C12788 = C12765 + C12766;
    const double C12786 = C12761 + C12762;
    const double C12783 = C12755 + C12756;
    const double C12781 = C12751 + C12752;
    const double C12779 = C12747 + C12748;
    const double C12777 = C12743 + C12744;
    const double C13458 = C13441 + C13442;
    const double C13456 = C13437 + C13438;
    const double C13454 = C13433 + C13434;
    const double C13885 = C13871 + C13872;
    const double C50956 = C50937 - C50938;
    const double C31671 = C31637 * C144;
    const double C31665 = C31637 * C132;
    const double C31661 = C31637 * C143;
    const double C31655 = C31637 * C142;
    const double C31651 = C31637 * C130;
    const double C31647 = C31637 * C141;
    const double C31643 = C31637 * C128;
    const double C31867 = C31637 * C329;
    const double C31863 = C31637 * C314;
    const double C31861 = C31637 * C309;
    const double C31857 = C31637 * C326;
    const double C31853 = C31637 * C307;
    const double C31849 = C31637 * C325;
    const double C32061 = C31637 * C518;
    const double C32057 = C31637 * C503;
    const double C32055 = C31637 * C498;
    const double C32051 = C31637 * C515;
    const double C32047 = C31637 * C496;
    const double C32043 = C31637 * C514;
    const double C32241 = C31637 * C324;
    const double C32404 = C31637 * C513;
    const double C32613 = C31637 * C948;
    const double C32609 = C31637 * C939;
    const double C34737 = C31637 * C1164;
    const double C34733 = C31637 * C1159;
    const double C34729 = C31637 * C312;
    const double C34725 = C31637 * C328;
    const double C34713 = C31637 * C327;
    const double C34709 = C31637 * C311;
    const double C34951 = C31637 * C1278;
    const double C35623 = C31637 * C1625;
    const double C35619 = C31637 * C1620;
    const double C35615 = C31637 * C937;
    const double C35611 = C31637 * C947;
    const double C35963 = C31637 * C1165;
    const double C35959 = C31637 * C1161;
    const double C36169 = C31637 * C1279;
    const double C36165 = C31637 * C1275;
    const double C36827 = C31637 * C1626;
    const double C36823 = C31637 * C1622;
    const double C45591 = C31637 * C3672;
    const double C15375 =
        ((-(0 * be) / C49718) / C49733 -
         ((0 - (C49725 * C49782) / C49718) * be) / C49718) /
            C49733 -
        ((C49725 * ((-C49782 / C49718) / C49733 -
                    ((C50810 - (C49725 * C49785) / C49718) * be) / C49718) +
          C31637) *
         be) /
            C49718 +
        (-C49785 / C49718) / C49733 - (0 * be) / C49718;
    const double C13874 = C50822 * C4584;
    const double C19014 = C15374 * C4584;
    const double C19448 = C15373 * C4584;
    const double C36171 = C50822 * C4584;
    const double C47887 = C38097 * C4584;
    const double C354 = C50810 * C330;
    const double C5407 = C50928 * C330;
    const double C31875 = C31637 * C330;
    const double C163 = C50810 * C135;
    const double C5199 = C50928 * C135;
    const double C31667 = C31637 * C135;
    const double C338 = C50810 * C305;
    const double C5769 = C50928 * C305;
    const double C32237 = C31637 * C305;
    const double C352 = C50810 * C316;
    const double C5403 = C50928 * C316;
    const double C31871 = C31637 * C316;
    const double C527 = C50810 * C494;
    const double C5195 = C50822 * C494;
    const double C5932 = C50928 * C494;
    const double C15406 = C15373 * C494;
    const double C31663 = C50822 * C494;
    const double C32400 = C31637 * C494;
    const double C541 = C50810 * C505;
    const double C5597 = C50928 * C505;
    const double C5577 = C50822 * C505;
    const double C15398 = C15374 * C505;
    const double C16110 = C15373 * C505;
    const double C32065 = C31637 * C505;
    const double C32045 = C50822 * C505;
    const double C38121 = C38097 * C505;
    const double C958 = C50810 * C941;
    const double C5383 = C50822 * C941;
    const double C6149 = C50928 * C941;
    const double C15946 = C15373 * C941;
    const double C31851 = C50822 * C941;
    const double C32617 = C31637 * C941;
    const double C2539 = C50810 * C1157;
    const double C3507 =
        (3 * (C49978 + ae * C50012 + C49848 * C50016) +
         ae * (2 * C50012 + C49848 * C50017) +
         C49848 *
             (2 * C50016 + ae * C50017 +
              C49848 * (C49876 + ae * C49848 * C49917 +
                        C49848 * (ae * C49917 + C49848 * C49856 * C49881)))) /
        C49750;
    const double C2711 = C50810 * C1273;
    const double C6143 = C50822 * C1273;
    const double C15586 = C15374 * C1273;
    const double C16322 = C15373 * C1273;
    const double C28549 = C50928 * C1273;
    const double C32611 = C50822 * C1273;
    const double C34947 = C31637 * C1273;
    const double C38309 = C38097 * C1273;
    const double C9145 = C50810 * C3508;
    const double C13714 = C50928 * C3508;
    const double C45433 = C31637 * C3508;
    const double C9805 = C50810 * C4176;
    const double C12760 = C50822 * C4176;
    const double C14384 = C50928 * C4176;
    const double C19284 = C15373 * C4176;
    const double C35965 = C50822 * C4176;
    const double C46091 = C31637 * C4176;
    const double C9143 = C50810 * C3505;
    const double C13710 = C50928 * C3505;
    const double C45429 = C31637 * C3505;
    const double C9303 = C50810 * C3669;
    const double C13432 = C50822 * C3669;
    const double C13876 = C50928 * C3669;
    const double C18364 = C15374 * C3669;
    const double C19946 = C15373 * C3669;
    const double C36825 = C50822 * C3669;
    const double C45587 = C31637 * C3669;
    const double C47237 = C38097 * C3669;
    const double C9803 = C50810 * C4173;
    const double C12764 = C50822 * C4173;
    const double C14380 = C50928 * C4173;
    const double C19278 = C15373 * C4173;
    const double C35961 = C50822 * C4173;
    const double C46087 = C31637 * C4173;
    const double C50139 = C50132 + C50133;
    const double C50087 = C50084 + C50085;
    const double C50502 = C49889 + C50498;
    const double C543 = C50810 * C519;
    const double C5601 = C50928 * C519;
    const double C5573 = C50822 * C519;
    const double C15392 = C15374 * C519;
    const double C16116 = C15373 * C519;
    const double C32069 = C31637 * C519;
    const double C32041 = C50822 * C519;
    const double C38115 = C38097 * C519;
    const double C960 = C50810 * C949;
    const double C5379 = C50822 * C949;
    const double C6153 = C50928 * C949;
    const double C15952 = C15373 * C949;
    const double C31847 = C50822 * C949;
    const double C32621 = C31637 * C949;
    const double C160 = C117 * C134;
    const double C5202 = C5171 * C134;
    const double C335 = C117 * C304;
    const double C5772 = C5171 * C304;
    const double C353 = C117 * C317;
    const double C5406 = C5171 * C317;
    const double C524 = C117 * C493;
    const double C5190 = C5172 * C493;
    const double C5935 = C5171 * C493;
    const double C15411 = C15376 * C493;
    const double C31658 = C31640 * C493;
    const double C542 = C117 * C506;
    const double C5600 = C5171 * C506;
    const double C5572 = C5172 * C506;
    const double C15391 = C15377 * C506;
    const double C16115 = C15376 * C506;
    const double C32040 = C31640 * C506;
    const double C959 = C117 * C942;
    const double C5378 = C5172 * C942;
    const double C6152 = C5171 * C942;
    const double C15951 = C15376 * C942;
    const double C31846 = C31640 * C942;
    const double C5602 = C5172 * C1901;
    const double C16117 = C15377 * C1901;
    const double C32070 = C31640 * C1901;
    const double C4175 =
        (2 * (ae * (C49849 * C49906 + C49992 * ae) + C49848 * C50038) +
         ae * (C49849 * C50017 + (C49992 + C49981 * C50007) * ae) +
         C49848 *
             (C50038 + ae * (C49849 * C49848 * C49917 + C50028 * ae) +
              C49848 * (ae * (C49849 * C49917 + C49981 * ae) +
                        C49848 * (ae * C49956 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C4583 =
        (ae * (2 * (C49849 * C49906 + C49992 * ae) +
               C49849 * (C49906 + C49849 * (C49849 * C49917 + C49981 * ae) +
                         C49849 * C49981 * ae) +
               (C49992 + C49981 * C50044) * ae) +
         C49848 *
             (2 * C50038 + ae * (C49945 + C49956 * C50044) +
              C49849 * (C49876 + ae * C49849 * C49956 +
                        C49849 * (ae * C49956 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C7439 =
        (3 * (C49978 + ae * C50052 + C49849 * C50038) +
         ae * (2 * C50052 + C49849 * C50054) +
         C49849 *
             (2 * C50038 + ae * C50054 +
              C49849 * (C49876 + ae * C49849 * C49956 +
                        C49849 * (ae * C49956 + C49849 * C49856 * C49881)))) /
        C49750;
    const double C3666 =
        (C49938 + C49848 * C50362 + C50331 * ae +
         (C49945 + C49848 * (C49848 * C49956 + C50117) + C50028 * ae) *
             C50044) /
        C49718;
    const double C4578 =
        (2 * C49849 * C50362 +
         C49849 * (C50362 + (C49848 * C49956 + C50117) * C50044)) /
        C49718;
    const double C3247 = C3236 + C3237;
    const double C5421 = C5400 + C5401;
    const double C13461 = C13447 + C13448;
    const double C5615 = C5594 + C5595;
    const double C50128 = C50127 + C50125;
    const double C50196 = C50191 + C50195;
    const double C50114 = C50112 + C50113;
    const double C50430 = C49930 + C50429;
    const double C8375 = C50810 * C3671;
    const double C13450 = C50822 * C3671;
    const double C15602 = C15374 * C3671;
    const double C35625 = C50822 * C3671;
    const double C38325 = C38097 * C3671;
    const double C50485 = C50482 + C50413;
    const double C16324 = C15374 * C4579;
    const double C28551 = C50822 * C4579;
    const double C34949 = C50822 * C4579;
    const double C39047 = C38097 * C4579;
    const double C16323 = C15377 * C4574;
    const double C28550 = C5172 * C4574;
    const double C34948 = C31640 * C4574;
    const double C50120 = ae * C50119;
    const double C50489 = C49849 * C50119;
    const double C50418 = C49848 * C50416;
    const double C16727 =
        (3 * (C50362 + C50416 * C50044) +
         C49849 *
             (2 * C49849 * C50416 +
              C49849 * (C50416 + (C49848 * C50094 + C50093 * ae) * C50044))) /
        C49718;
    const double C3502 =
        (3 * (C49938 + C49848 * C50362 + C50331 * ae) +
         C49848 * (2 * C50362 +
                   C49848 * (C49945 + C49848 * (C49848 * C49956 + C50117) +
                             C50028 * ae) +
                   C50363 * ae) +
         (2 * C50331 + C49848 * C50363) * ae) /
        C49718;
    const double C3667 =
        (C49899 + C49906 * C50007 + C49849 * (C49849 * C50017 + C50363 * ae) +
         C49849 * C50363 * ae) /
        C49718;
    const double C4170 =
        (C49849 * (2 * C50362 +
                   C49848 * (C49945 + C49848 * (C49848 * C49956 + C50117) +
                             C50028 * ae) +
                   C50363 * ae)) /
        C49718;
    const double C4171 = (C49849 * (2 * C50012 + C49848 * C50017) +
                          (2 * C50331 + C49848 * C50363) * ae) /
                         C49718;
    const double C3498 = 3 * (C50264 + C49992 * C50007) +
                         C49848 * (2 * C50331 + C49848 * C50363);
    const double C3662 = C50264 + C49992 * C50007 + C50363 * C50044;
    const double C4166 = C49849 * (2 * C50331 + C49848 * C50363);
    const double C10197 =
        2 * C49849 * C50363 + C49849 * (C50363 + C50101 * C50044);
    const double C7435 =
        (3 * (C49899 + C49849 * C50402 + C50400 * ae) +
         C49849 *
             (2 * C50402 + C49849 * (C49906 + C49849 * C50119 + C50211 * ae) +
              C50403 * ae) +
         (2 * C50400 + C49849 * C50403) * ae) /
        C49718;
    const double C7430 = 3 * (C50264 + C49992 * C50044) +
                         C49849 * (2 * C50400 + C49849 * C50403);
    const double C50273 = C50271 + C50272;
    const double C1271 =
        (C49848 * C49904 + C49849 * (C49849 * C50004 + C50328 * ae) +
         C49849 * C50328 * ae) /
        C49718;
    const double C1617 =
        (C49849 *
         (C49943 + C49848 * (C49848 * C49950 + C49990 * ae) + C50328 * ae)) /
        C49718;
    const double C4577 =
        (2 * (C49849 * C50004 + C50328 * ae) +
         C49849 * (C50004 + C49849 * (C49849 * C49848 * C49922 + C50026 * ae) +
                   C49849 * C50026 * ae) +
         (C50328 + C50026 * C50044) * ae) /
        C49718;
    const double C1265 = C49848 * C50268 + C50328 * C50044;
    const double C4573 =
        2 * C49849 * C50328 + C49849 * (C50328 + C50026 * C50044);
    const double C50355 = C50352 + C50353;
    const double C50395 = C50392 + C50353;
    const double C2540 = C117 * C1156;
    const double C2718 = C117 * C1270;
    const double C6154 = C5172 * C1270;
    const double C15953 = C15377 * C1270;
    const double C32622 = C31640 * C1270;
    const double C3241 = C50810 * C1618;
    const double C5405 = C50822 * C1618;
    const double C31873 = C50822 * C1618;
    const double C5599 = C50822 * C1902;
    const double C16112 = C15374 * C1902;
    const double C32067 = C50822 * C1902;
    const double C38835 = C38097 * C1902;
    const double C2538 = C117 * C1151;
    const double C3240 = C117 * C1612;
    const double C5404 = C5172 * C1612;
    const double C31872 = C31640 * C1612;
    const double C5598 = C5172 * C1896;
    const double C16111 = C15377 * C1896;
    const double C32066 = C31640 * C1896;
    const double C50186 = ae * C50184;
    const double C50509 = C49849 * C50184;
    const double C14785 =
        (3 * (C50019 + C49849 * C50478 + C50476 * ae) +
         C49849 *
             (2 * C50478 + C49849 * (C50076 + C49849 * C50184 + C50199 * ae) +
              C50479 * ae) +
         (2 * C50476 + C49849 * C50479) * ae) /
        C49718;
    const double C14781 = 3 * (C50334 + C50030 * C50044) +
                          C49849 * (2 * C50476 + C49849 * C50479);
    const double C50428 = C50425 + C50426;
    const double C50471 = C50468 + C50448;
    const double C13878 = C50822 * C10202;
    const double C19948 = C15374 * C10202;
    const double C45589 = C50822 * C10202;
    const double C48821 = C38097 * C10202;
    const double C13877 = C5172 * C10198;
    const double C19947 = C15377 * C10198;
    const double C45588 = C31640 * C10198;
    const double C50172 = C49902 + C50168;
    const double C50454 = C49941 + C50453;
    const double C50507 = C50427 + C50506;
    const double C50503 = C50500 + C50501;
    const double C49885 = C49879 + C49884;
    const double C50008 = C50005 + C50006;
    const double C50034 = C50032 + C50033;
    const double C2541 = C50810 * C1163;
    const double C2719 = C50810 * C1277;
    const double C6155 = C50822 * C1277;
    const double C15954 = C15374 * C1277;
    const double C32623 = C50822 * C1277;
    const double C38677 = C38097 * C1277;
    const double C3243 = C50810 * C1624;
    const double C5409 = C50822 * C1624;
    const double C31877 = C50822 * C1624;
    const double C5603 = C50822 * C1908;
    const double C16118 = C15374 * C1908;
    const double C32071 = C50822 * C1908;
    const double C38841 = C38097 * C1908;
    const double C50071 = C49848 * C50069;
    const double C50100 = C49849 * C50096;
    const double C50118 = C49848 * C50096;
    const double C50147 = C50144 + C50145;
    const double C50173 = C50169 + C50170;
    const double C50185 = C50182 + C50183;
    const double C49924 = C49919 + C49923;
    const double C50010 = C49911 + C50009;
    const double C50072 = C49848 * C50070;
    const double C10200 =
        (2 * (C49849 * C50017 + C50363 * ae) +
         C49849 * (C50017 + C49849 * (C49849 * C50070 + C50101 * ae) +
                   C49849 * C50101 * ae) +
         (C50363 + C50101 * C50044) * ae) /
        C49718;
    const double C50148 = C50142 + C50146;
    const double C49963 = C49958 + C49962;
    const double C50050 = C49950 + C50049;
    const double C50218 = C49849 * C50215;
    const double C50230 = C50227 + C50228;
    const double C180 = C170 * C118;
    const double C2350 = C170 * C2343;
    const double C376 = C364 * C118;
    const double C2348 = C364 * C2344;
    const double C2525 = C364 * C2343;
    const double C8036 = C364 * C8031;
    const double C22724 = C364 * C22720;
    const double C565 = C553 * C118;
    const double C2707 = C553 * C2343;
    const double C181 = C171 * C50780;
    const double C2351 = C171 * C50926;
    const double C8044 = C171 * C8025;
    const double C22727 = C171 * C22714;
    const double C183 = C173 * C50780;
    const double C2356 = C173 * C50926;
    const double C8047 = C173 * C8025;
    const double C22732 = C173 * C22714;
    const double C375 = C363 * C50780;
    const double C2349 = C363 * C50796;
    const double C2524 = C363 * C50926;
    const double C8037 = C363 * C8026;
    const double C8202 = C363 * C8025;
    const double C22725 = C363 * C50796;
    const double C22896 = C363 * C22714;
    const double C562 = C550 * C50780;
    const double C2702 = C550 * C50926;
    const double C8679 = C550 * C8025;
    const double C23054 = C550 * C22714;
    const double C564 = C552 * C50780;
    const double C2706 = C552 * C50926;
    const double C8366 = C552 * C8025;
    const double C23058 = C552 * C22714;
    const double C567 = C555 * C50780;
    const double C2709 = C555 * C50926;
    const double C8369 = C555 * C8025;
    const double C23061 = C555 * C22714;
    const double C366 = C349 + C350;
    const double C5420 = C5398 + C5399;
    const double C966 = C955 + C956;
    const double C5414 = C5386 + C5387;
    const double C6158 = C6144 + C6145;
    const double C2547 = C2534 + C2535;
    const double C12791 = C12771 + C12772;
    const double C2721 = C2712 + C2713;
    const double C6159 = C6146 + C6147;
    const double C28558 = C28552 + C28553;
    const double C365 = C347 + C348;
    const double C5418 = C5394 + C5395;
    const double C554 = C536 + C537;
    const double C5612 = C5588 + C5589;
    const double C5610 = C5584 + C5585;
    const double C965 = C953 + C954;
    const double C5416 = C5390 + C5391;
    const double C6156 = C6140 + C6141;
    const double C2546 = C2532 + C2533;
    const double C12789 = C12767 + C12768;
    const double C3246 = C3234 + C3235;
    const double C5419 = C5396 + C5397;
    const double C13459 = C13443 + C13444;
    const double C5613 = C5590 + C5591;
    const double C4183 = C4180 + C4181;
    const double C12784 = C12757 + C12758;
    const double C13452 = C13429 + C13430;
    const double C3678 = C3674 + C3675;
    const double C13457 = C13439 + C13440;
    const double C13883 = C13867 + C13868;
    const double C13884 = C13869 + C13870;
    const double C9144 = C117 * C3504;
    const double C13713 = C5171 * C3504;
    const double C9304 = C117 * C3668;
    const double C13427 = C5172 * C3668;
    const double C13879 = C5171 * C3668;
    const double C18357 = C15377 * C3668;
    const double C19951 = C15376 * C3668;
    const double C36828 = C31640 * C3668;
    const double C9804 = C117 * C4172;
    const double C12759 = C5172 * C4172;
    const double C14383 = C5171 * C4172;
    const double C19283 = C15376 * C4172;
    const double C35964 = C31640 * C4172;
    const double C13873 = C5172 * C4580;
    const double C19013 = C15377 * C4580;
    const double C19447 = C15376 * C4580;
    const double C36170 = C31640 * C4580;
    const double C19449 = C15377 * C14784;
    const double C373 = C361 * C50780;
    const double C2353 = C361 * C50796;
    const double C2520 = C361 * C50926;
    const double C8042 = C361 * C8026;
    const double C8527 = C361 * C8025;
    const double C22729 = C361 * C50796;
    const double C22892 = C361 * C22714;
    const double C182 = C172 * C118;
    const double C2357 = C172 * C2343;
    const double C374 = C362 * C118;
    const double C2352 = C362 * C2344;
    const double C2521 = C362 * C2343;
    const double C8043 = C362 * C8031;
    const double C22728 = C362 * C22720;
    const double C563 = C551 * C118;
    const double C2703 = C551 * C2343;
    const double C136 = (4 * (2 * C49899 + C49856 * C49904) +
                         C49856 * (3 * C49904 + C49856 * C49913)) /
                        C49718;
    const double C318 =
        (2 * C49899 + C49856 * C49904 + C49913 * C50007) / C49718;
    const double C320 = (C49848 * (3 * C49904 + C49856 * C49913)) / C49718;
    const double C8209 = C50810 * C3503;
    const double C9138 = (4 * (2 * C50019 + C49848 * C50024) +
                          C49848 * (3 * C50024 + C49848 * C50088)) /
                         C49718;
    const double C137 = (4 * (2 * C49938 + C49856 * C49943) +
                         C49856 * (3 * C49943 + C49856 * C49952)) /
                        C49718;
    const double C508 =
        (2 * C49938 + C49856 * C49943 + C49952 * C50044) / C49718;
    const double C510 = (C49849 * (3 * C49943 + C49856 * C49952)) / C49718;
    const double C15783 = C15377 * C7434;
    const double C17610 = (4 * (2 * C50056 + C49849 * C50058) +
                           C49849 * (3 * C50058 + C49849 * C50223)) /
                          C49718;
    const double C50278 = C49856 * C49987;
    const double C50325 = C49848 * C49987;
    const double C3497 = 3 * (C50268 + C49990 * C50007) +
                         C49848 * (2 * C50328 + C49848 * C50356);
    const double C3661 = C50268 + C49990 * C50007 + C50356 * C50044;
    const double C4165 = C49849 * (2 * C50328 + C49848 * C50356);
    const double C7429 = 3 * (C50268 + C49990 * C50044) +
                         C49849 * (2 * C50393 + C49849 * C50396);
    const double C16726 = 3 * (C50331 + C50028 * C50044) +
                          C49849 * (2 * C50483 + C49849 * C50486);
    const double C50417 = C50414 + C50415;
    const double C50494 = C50491 + C50492;
    const double C50514 = C50511 + C50512;
    const double C50450 = C49848 * C50174;
    const double C14780 = 3 * (C50370 + C50111 * C50044) +
                          C49849 * (2 * C50469 + C49849 * C50472);
    const double C50522 = C49849 * C50229;
    const double C50957 = C50901 - C50940;
    const double C50941 = C50903 - C50904;
    const double C50958 = C50906 - C50942;
    const double C50959 = C50910 - C50944;
    const double C50960 = C50913 - C50946;
    const double C50961 = C50920 - C50947;
    const double C50962 = C50915 - C50949;
    const double C50963 = C50924 - C50950;
    const double C49761 = C50780 - C49756;
    const double C25447 = C173 * C50964;
    const double C25444 = C171 * C50964;
    const double C25435 = C169 * C50964;
    const double C25602 = C363 * C50964;
    const double C25763 = C555 * C50964;
    const double C25760 = C552 * C50964;
    const double C25915 = C361 * C50964;
    const double C26067 = C550 * C50964;
    const double C10757 =
        (C50926 - C50951) / C49733 - (C50964 * C50792) / C49718;
    const double C25442 = C361 * C50953;
    const double C25437 = C363 * C50953;
    const double C10758 =
        (2 * C50796 + C50964) / C49733 - (C50953 * C50792) / C49718;
    const double C10759 = C50953 / C49733 - C50799 / C49754;
    const double C8046 = C172 * C8030;
    const double C8045 = C170 * C8030;
    const double C8034 = C168 * C8030;
    const double C8203 = C364 * C8030;
    const double C8367 = C553 * C8030;
    const double C8526 = C362 * C8030;
    const double C8678 = C551 * C8030;
    const double C49807 = C50810 - C49804;
    const double C15425 = C15399 + C15400;
    const double C15422 = C15393 + C15394;
    const double C15419 = C15387 + C15388;
    const double C15416 = C15381 + C15382;
    const double C15613 = C15599 + C15600;
    const double C15610 = C15593 + C15594;
    const double C15607 = C15587 + C15588;
    const double C15604 = C15581 + C15582;
    const double C15795 = C15781 + C15782;
    const double C15792 = C15775 + C15776;
    const double C15789 = C15769 + C15770;
    const double C15786 = C15763 + C15764;
    const double C16335 = C16327 + C16328;
    const double C18379 = C18365 + C18366;
    const double C18376 = C18359 + C18360;
    const double C18373 = C18353 + C18354;
    const double C18370 = C18347 + C18348;
    const double C19029 = C19021 + C19022;
    const double C19026 = C19015 + C19016;
    const double C19452 = C19441 + C19442;
    const double C15420 = C15389 + C15390;
    const double C15417 = C15383 + C15384;
    const double C15603 = C15579 + C15580;
    const double C15788 = C15767 + C15768;
    const double C15785 = C15761 + C15762;
    const double C18374 = C18355 + C18356;
    const double C18371 = C18349 + C18350;
    const double C19028 = C19019 + C19020;
    const double C31681 = C31656 + C31657;
    const double C31679 = C31652 + C31653;
    const double C31677 = C31648 + C31649;
    const double C31675 = C31644 + C31645;
    const double C31889 = C31868 + C31869;
    const double C31887 = C31864 + C31865;
    const double C31884 = C31858 + C31859;
    const double C31882 = C31854 + C31855;
    const double C32083 = C32062 + C32063;
    const double C32081 = C32058 + C32059;
    const double C32078 = C32052 + C32053;
    const double C32076 = C32048 + C32049;
    const double C32627 = C32614 + C32615;
    const double C34746 = C34726 + C34727;
    const double C34744 = C34722 + C34723;
    const double C34743 = C34714 + C34715;
    const double C34741 = C34710 + C34711;
    const double C35628 = C35612 + C35613;
    const double C35626 = C35608 + C35609;
    const double C36173 = C36166 + C36167;
    const double C38120 = C38100 * C489;
    const double C38114 = C38100 * C506;
    const double C38112 = C38100 * C504;
    const double C38106 = C38100 * C488;
    const double C38308 = C38100 * C1266;
    const double C38302 = C38100 * C1272;
    const double C38506 = C38100 * C7434;
    const double C38490 = C38100 * C1897;
    const double C38484 = C38100 * C1903;
    const double C38676 = C38100 * C1270;
    const double C38840 = C38100 * C1901;
    const double C38834 = C38100 * C1896;
    const double C39046 = C38100 * C4574;
    const double C47236 = C38100 * C3663;
    const double C47230 = C38100 * C3668;
    const double C47228 = C38100 * C1274;
    const double C47222 = C38100 * C1267;
    const double C47892 = C38100 * C4575;
    const double C47886 = C38100 * C4580;
    const double C48322 = C38100 * C14784;
    const double C48820 = C38100 * C10198;
    const double C38133 = C50965 * C143;
    const double C38127 = C50965 * C132;
    const double C38125 = C50965 * C130;
    const double C38119 = C50965 * C142;
    const double C38109 = C50965 * C141;
    const double C38103 = C50965 * C128;
    const double C38321 = C50965 * C329;
    const double C38315 = C50965 * C314;
    const double C38313 = C50965 * C309;
    const double C38307 = C50965 * C326;
    const double C38503 = C50965 * C518;
    const double C38497 = C50965 * C503;
    const double C38495 = C50965 * C498;
    const double C38489 = C50965 * C515;
    const double C38673 = C50965 * C325;
    const double C38667 = C50965 * C307;
    const double C38837 = C50965 * C514;
    const double C38831 = C50965 * C496;
    const double C39049 = C50965 * C948;
    const double C39043 = C50965 * C939;
    const double C47241 = C50965 * C312;
    const double C47235 = C50965 * C328;
    const double C47225 = C50965 * C327;
    const double C47219 = C50965 * C311;
    const double C47897 = C50965 * C937;
    const double C47891 = C50965 * C947;
    const double C48155 = C50965 * C1165;
    const double C48149 = C50965 * C1161;
    const double C48319 = C50965 * C1279;
    const double C48313 = C50965 * C1275;
    const double C48823 = C50965 * C1626;
    const double C48817 = C50965 * C1622;
    const double C20906 =
        (C50928 - C50954) / C49733 - (C50965 * C50818) / C49718;
    const double C5223 = C5212 + C5213;
    const double C5222 = C5210 + C5211;
    const double C12793 = C12781 + C12782;
    const double C38135 = C50956 * C513;
    const double C38129 = C50956 * C494;
    const double C38123 = C50956 * C496;
    const double C38117 = C50956 * C514;
    const double C38111 = C50956 * C515;
    const double C38105 = C50956 * C498;
    const double C38323 = C50956 * C1625;
    const double C38317 = C50956 * C1620;
    const double C38311 = C50956 * C939;
    const double C38305 = C50956 * C948;
    const double C38505 = C50956 * C1909;
    const double C38499 = C50956 * C1904;
    const double C38493 = C50956 * C503;
    const double C38487 = C50956 * C518;
    const double C38675 = C50956 * C949;
    const double C38669 = C50956 * C941;
    const double C38839 = C50956 * C519;
    const double C38833 = C50956 * C505;
    const double C39051 = C50956 * C1278;
    const double C39045 = C50956 * C1273;
    const double C47239 = C50956 * C1622;
    const double C47233 = C50956 * C1626;
    const double C47227 = C50956 * C947;
    const double C47221 = C50956 * C937;
    const double C47895 = C50956 * C1275;
    const double C47889 = C50956 * C1279;
    const double C48157 = C50956 * C4176;
    const double C48151 = C50956 * C4173;
    const double C48321 = C50956 * C4584;
    const double C48315 = C50956 * C4581;
    const double C48825 = C50956 * C3672;
    const double C48819 = C50956 * C3669;
    const double C20907 =
        (2 * C50822 + C50965) / C49733 - (C50956 * C50818) / C49718;
    const double C20908 = C50956 / C49733 - C50825 / C49754;
    const double C15409 = C15375 * C133;
    const double C15403 = C15375 * C122;
    const double C15401 = C15375 * C121;
    const double C15395 = C15375 * C131;
    const double C15385 = C15375 * C129;
    const double C15379 = C15375 * C120;
    const double C15597 = C15375 * C315;
    const double C15591 = C15375 * C299;
    const double C15589 = C15375 * C296;
    const double C15583 = C15375 * C308;
    const double C15779 = C15375 * C504;
    const double C15773 = C15375 * C488;
    const double C15771 = C15375 * C485;
    const double C15765 = C15375 * C497;
    const double C15949 = C15375 * C306;
    const double C15943 = C15375 * C295;
    const double C16113 = C15375 * C495;
    const double C16107 = C15375 * C484;
    const double C16325 = C15375 * C940;
    const double C16319 = C15375 * C933;
    const double C18367 = C15375 * C298;
    const double C18361 = C15375 * C313;
    const double C18351 = C15375 * C310;
    const double C18345 = C15375 * C297;
    const double C19023 = C15375 * C932;
    const double C19017 = C15375 * C938;
    const double C19281 = C15375 * C1160;
    const double C19275 = C15375 * C1153;
    const double C19445 = C15375 * C1274;
    const double C19439 = C15375 * C1267;
    const double C19949 = C15375 * C1621;
    const double C19943 = C15375 * C1614;
    const double C175 = C162 + C163;
    const double C5218 = C5198 + C5199;
    const double C360 = C337 + C338;
    const double C5778 = C5768 + C5769;
    const double C367 = C351 + C352;
    const double C5422 = C5402 + C5403;
    const double C549 = C526 + C527;
    const double C5216 = C5194 + C5195;
    const double C5941 = C5931 + C5932;
    const double C15428 = C15405 + C15406;
    const double C31684 = C31662 + C31663;
    const double C556 = C540 + C541;
    const double C5616 = C5596 + C5597;
    const double C5606 = C5576 + C5577;
    const double C15424 = C15397 + C15398;
    const double C16120 = C16109 + C16110;
    const double C32074 = C32044 + C32045;
    const double C967 = C957 + C958;
    const double C5412 = C5382 + C5383;
    const double C6160 = C6148 + C6149;
    const double C15956 = C15945 + C15946;
    const double C31880 = C31850 + C31851;
    const double C8211 = C50810 * C3507;
    const double C2720 = C2710 + C2711;
    const double C6157 = C6142 + C6143;
    const double C15606 = C15585 + C15586;
    const double C16332 = C16321 + C16322;
    const double C28556 = C28548 + C28549;
    const double C32625 = C32610 + C32611;
    const double C9146 = C9142 + C9143;
    const double C13717 = C13709 + C13710;
    const double C9306 = C9302 + C9303;
    const double C13453 = C13431 + C13432;
    const double C13887 = C13875 + C13876;
    const double C18378 = C18363 + C18364;
    const double C19956 = C19945 + C19946;
    const double C36831 = C36824 + C36825;
    const double C9806 = C9802 + C9803;
    const double C12787 = C12763 + C12764;
    const double C14387 = C14379 + C14380;
    const double C19288 = C19277 + C19278;
    const double C35967 = C35960 + C35961;
    const double C9140 =
        (4 * (2 * C50023 + ae * C50024 + C49848 * C50087) +
         ae * (3 * C50024 + C49848 * C50088) +
         C49848 *
             (3 * C50087 + ae * C50088 +
              C49848 * (2 * C50081 + ae * C50083 +
                        C49848 * (C49872 + ae * C49848 * C49909 +
                                  C49848 * (ae * C49909 + C49848 * C49881))))) /
        C49750;
    const double C50504 = C50502 + C50499;
    const double C174 = C160 + C161;
    const double C5220 = C5202 + C5203;
    const double C359 = C335 + C336;
    const double C5780 = C5772 + C5773;
    const double C368 = C353 + C354;
    const double C5424 = C5406 + C5407;
    const double C548 = C524 + C525;
    const double C5214 = C5190 + C5191;
    const double C5943 = C5935 + C5936;
    const double C15431 = C15411 + C15412;
    const double C31682 = C31658 + C31659;
    const double C557 = C542 + C543;
    const double C5618 = C5600 + C5601;
    const double C5604 = C5572 + C5573;
    const double C15421 = C15391 + C15392;
    const double C16123 = C16115 + C16116;
    const double C32072 = C32040 + C32041;
    const double C968 = C959 + C960;
    const double C5410 = C5378 + C5379;
    const double C6162 = C6152 + C6153;
    const double C15959 = C15951 + C15952;
    const double C31878 = C31846 + C31847;
    const double C8885 = C50810 * C4175;
    const double C12774 = C50822 * C4175;
    const double C34739 = C50822 * C4175;
    const double C16330 = C15374 * C4583;
    const double C28555 = C50822 * C4583;
    const double C34953 = C50822 * C4583;
    const double C39053 = C38097 * C4583;
    const double C15784 = C15374 * C7439;
    const double C38507 = C38097 * C7439;
    const double C8374 = C117 * C3666;
    const double C13449 = C5172 * C3666;
    const double C15601 = C15377 * C3666;
    const double C35624 = C31640 * C3666;
    const double C38324 = C38100 * C3666;
    const double C16329 = C15377 * C4578;
    const double C28554 = C5172 * C4578;
    const double C34952 = C31640 * C4578;
    const double C39052 = C38100 * C4578;
    const double C3251 = C3247 * C50796;
    const double C8362 = C3247 * C8027;
    const double C8881 = C3247 * C8026;
    const double C23571 = C3247 * C50796;
    const double C25756 = C3247 * C25427;
    const double C26269 = C3247 * C50953;
    const double C9800 =
        (3 * (C50042 + ae * (C49849 * C50076 + C50030 * ae) + C49848 * C50128) +
         ae * (C49849 * C50088 + (2 * C50030 + C49848 * C50111) * ae) +
         C49848 *
             (2 * C50128 + ae * (C49849 * C50083 + C50111 * ae) +
              C49848 * (C50110 + ae * (C49849 * C49848 * C49909 + C50108 * ae) +
                        C49848 * (ae * (C49849 * C49909 + C49974 * ae) +
                                  C49848 * (ae * C49948 + C49849 * C49881))))) /
        C49750;
    const double C9300 =
        (2 * (ae * (C49889 + C49849 * (C49849 * C49902 + C49972 * ae) +
                    C49849 * C49972 * ae) +
              C49848 * C50114) +
         ae * (C50024 + C49849 * (C49849 * C50083 + C50111 * ae) +
               C49849 * C50111 * ae) +
         C49848 *
             (C50114 +
              ae * (C50076 + C49849 * (C49849 * C49848 * C49909 + C50108 * ae) +
                    C49849 * C50108 * ae) +
              C49848 *
                  (ae * (C49902 + C49849 * (C49849 * C49909 + C49974 * ae) +
                         C49849 * C49974 * ae) +
                   C49848 * (C49872 + ae * C49849 * C49948 +
                             C49849 * (ae * C49948 + C49849 * C49881))))) /
        C49750;
    const double C10204 =
        (2 * C50042 + ae * C50058 + C49849 * C50114 +
         ae * (2 * (C49849 * C50076 + C50030 * ae) +
               C49849 *
                   (C50076 + C49849 * (C49849 * C49848 * C49909 + C50108 * ae) +
                    C49849 * C50108 * ae) +
               (C50030 + C50108 * C50044) * ae) +
         C49848 *
             (ae *
                  (2 * C50126 +
                   C49849 * (C49902 + C49849 * (C49849 * C49909 + C49974 * ae) +
                             C49849 * C49974 * ae) +
                   (C49972 + C49974 * C50044) * ae) +
              C49848 * (2 * C50110 + ae * (C49941 + C49948 * C50044) +
                        C49849 * (C49872 + ae * C49849 * C49948 +
                                  C49849 * (ae * C49948 + C49849 * C49881))))) /
        C49750;
    const double C50431 = C50430 + C50424;
    const double C16728 =
        (3 * (C50012 + C49849 * C50485 + C50483 * ae) +
         C49849 * (2 * C50485 +
                   C49849 * (C50060 +
                             C49849 * (C49849 * C49848 * C50063 + C50098 * ae) +
                             C49849 * C50098 * ae) +
                   C50486 * ae) +
         (2 * C50483 + C49849 * C50486) * ae) /
        C49718;
    const double C16333 = C16323 + C16324;
    const double C28557 = C28550 + C28551;
    const double C34955 = C34948 + C34949;
    const double C50493 = C49906 + C50489;
    const double C50419 = C49945 + C50418;
    const double C8210 = C117 * C3502;
    const double C8373 = C50810 * C3667;
    const double C13446 = C50822 * C3667;
    const double C15596 = C15374 * C3667;
    const double C35621 = C50822 * C3667;
    const double C38319 = C38097 * C3667;
    const double C8884 = C117 * C4170;
    const double C12773 = C5172 * C4170;
    const double C34738 = C31640 * C4170;
    const double C8883 = C50810 * C4171;
    const double C12770 = C50822 * C4171;
    const double C34735 = C50822 * C4171;
    const double C8208 = C117 * C3498;
    const double C8372 = C117 * C3662;
    const double C13445 = C5172 * C3662;
    const double C15595 = C15377 * C3662;
    const double C35620 = C31640 * C3662;
    const double C38318 = C38100 * C3662;
    const double C8882 = C117 * C4166;
    const double C12769 = C5172 * C4166;
    const double C34734 = C31640 * C4166;
    const double C15778 = C15374 * C7435;
    const double C38501 = C38097 * C7435;
    const double C15777 = C15377 * C7430;
    const double C38500 = C38100 * C7430;
    const double C319 =
        (2 * C49938 + C49856 * C49943 +
         C49848 * (C49848 * C49952 + C50273 * ae) + C49848 * C50273 * ae) /
        C49718;
    const double C321 = (C49848 * (3 * C49943 + C49856 * C49952) +
                         (3 * C50268 + C49856 * C50273) * ae) /
                        C49718;
    const double C507 =
        (2 * C49899 + C49856 * C49904 +
         C49849 * (C49849 * C49913 + C50273 * ae) + C49849 * C50273 * ae) /
        C49718;
    const double C509 = (C49849 * (3 * C49904 + C49856 * C49913) +
                         (3 * C50268 + C49856 * C50273) * ae) /
                        C49718;
    const double C943 =
        (C49849 * C49848 * C49913 + C49848 * C50273 * ae) / C49718;
    const double C944 = (C49849 * (C49848 * C49952 + C50273 * ae)) / C49718;
    const double C124 = 4 * (2 * C50264 + C49856 * C50268) +
                        C49856 * (3 * C50268 + C49856 * C50273);
    const double C301 = 2 * C50264 + C49856 * C50268 + C50273 * C50007;
    const double C302 = C49848 * (3 * C50268 + C49856 * C50273);
    const double C490 = 2 * C50264 + C49856 * C50268 + C50273 * C50044;
    const double C491 = C49849 * (3 * C50268 + C49856 * C50273);
    const double C935 = C49849 * C49848 * C50273;
    const double C1150 =
        2 * C49848 * C50273 + C49848 * (C50273 + C49987 * C50007);
    const double C1611 = C49849 * (C50273 + C49987 * C50007);
    const double C1895 =
        2 * C49849 * C50273 + C49849 * (C50273 + C49987 * C50044);
    const double C2717 = C50810 * C1271;
    const double C6151 = C50822 * C1271;
    const double C15948 = C15374 * C1271;
    const double C32619 = C50822 * C1271;
    const double C38671 = C38097 * C1271;
    const double C3242 = C117 * C1617;
    const double C5408 = C5172 * C1617;
    const double C31876 = C31640 * C1617;
    const double C2716 = C117 * C1265;
    const double C6150 = C5172 * C1265;
    const double C15947 = C15377 * C1265;
    const double C32618 = C31640 * C1265;
    const double C38670 = C38100 * C1265;
    const double C3500 =
        (3 * (C49943 + C49848 * C50355 + C50328 * ae) +
         C49848 * (2 * C50355 +
                   C49848 * (C49950 + C49848 * (C49848 * C49961 + C49985 * ae) +
                             C50026 * ae) +
                   C50356 * ae) +
         (2 * C50328 + C49848 * C50356) * ae) /
        C49718;
    const double C3664 =
        (C49943 + C49848 * C50355 + C50328 * ae +
         (C49950 + C49848 * (C49848 * C49961 + C49985 * ae) + C50026 * ae) *
             C50044) /
        C49718;
    const double C4168 =
        (C49849 * (2 * C50355 +
                   C49848 * (C49950 + C49848 * (C49848 * C49961 + C49985 * ae) +
                             C50026 * ae) +
                   C50356 * ae)) /
        C49718;
    const double C4576 =
        (2 * C49849 * C50355 +
         C49849 * (C50355 + (C49848 * C49961 + C49985 * ae) * C50044)) /
        C49718;
    const double C7433 =
        (3 * (C49904 + C49849 * C50395 + C50393 * ae) +
         C49849 * (2 * C50395 +
                   C49849 * (C49911 + C49849 * (C49849 * C49922 + C49985 * ae) +
                             C49849 * C49985 * ae) +
                   C50396 * ae) +
         (2 * C50393 + C49849 * C50396) * ae) /
        C49718;
    const double C2548 = C2538 + C2539;
    const double C3248 = C3240 + C3241;
    const double C5423 = C5404 + C5405;
    const double C31891 = C31872 + C31873;
    const double C5617 = C5598 + C5599;
    const double C16121 = C16111 + C16112;
    const double C32085 = C32066 + C32067;
    const double C50188 = C50110 + C50186;
    const double C50513 = C50076 + C50509;
    const double C19444 = C15374 * C14785;
    const double C48317 = C38097 * C14785;
    const double C19443 = C15377 * C14781;
    const double C48316 = C38100 * C14781;
    const double C9298 =
        (2 * C50019 + C49848 * C50024 +
         C49849 * (C49849 * C50088 + C50428 * ae) + C49849 * C50428 * ae) /
        C49718;
    const double C9798 = (C49849 * (3 * C50024 + C49848 * C50088) +
                          (3 * C50370 + C49848 * C50428) * ae) /
                         C49718;
    const double C9134 = 4 * (2 * C50334 + C49848 * C50370) +
                         C49848 * (3 * C50370 + C49848 * C50428);
    const double C9294 = 2 * C50334 + C49848 * C50370 + C50428 * C50044;
    const double C9794 = C49849 * (3 * C50370 + C49848 * C50428);
    const double C12168 =
        2 * C49849 * C50428 + C49849 * (C50428 + C50174 * C50044);
    const double C14783 =
        (3 * (C50024 + C49849 * C50471 + C50469 * ae) +
         C49849 * (2 * C50471 +
                   C49849 * (C50083 + C49849 * (C49849 * C50143 + C50167 * ae) +
                             C49849 * C50167 * ae) +
                   C50472 * ae) +
         (2 * C50469 + C49849 * C50472) * ae) /
        C49718;
    const double C13888 = C13877 + C13878;
    const double C19957 = C19947 + C19948;
    const double C45595 = C45588 + C45589;
    const double C50175 = C50172 + C50164;
    const double C50455 = C50454 + C50181;
    const double C20351 =
        (4 * (2 * C49849 * C50427 + C49849 * C50507) +
         C49849 * (3 * C50507 + C49849 * (2 * C49849 * C50451 +
                                          C49849 * (C50451 + (C49848 * C49959 +
                                                              C49982 * ae) *
                                                                 C50044)))) /
        C49718;
    const double C17607 = 4 * (2 * C50407 + C49849 * C50410) +
                          C49849 * (3 * C50410 + C49849 * C50503);
    const double C146 =
        (5 * (3 * C49874 + C49856 * C49885) +
         C49856 * (4 * C49885 +
                   C49856 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C331 =
        (2 * C49856 * C49867 + C49856 * C49874 + ae * C49848 * C49913 +
         C49848 * (ae * C49913 + C49848 * C49885)) /
        C49750;
    const double C332 = (ae * (3 * C49904 + C49856 * C49913) +
                         C49848 * (3 * C49874 + C49856 * C49885)) /
                        C49750;
    const double C520 =
        (2 * C49856 * C49867 + C49856 * C49874 + ae * C49849 * C49952 +
         C49849 * (ae * C49952 + C49849 * C49885)) /
        C49750;
    const double C521 = (ae * (3 * C49943 + C49856 * C49952) +
                         C49849 * (3 * C49874 + C49856 * C49885)) /
                        C49750;
    const double C950 = (ae * (C49849 * C49913 +
                               (2 * C49856 * C49972 +
                                C49856 * (C49972 + C49863 * C49865 * C49864)) *
                                   ae) +
                         C49848 * (ae * C49952 + C49849 * C49885)) /
                        C49750;
    const double C4582 =
        (ae * (2 * (C49849 * C49911 + C49990 * ae) +
               C49849 * (C49911 + C49849 * (C49849 * C49922 + C49985 * ae) +
                         C49849 * C49985 * ae) +
               (C49990 + C49985 * C50044) * ae) +
         C49848 * (2 * C50034 + ae * (C49950 + C49961 * C50044) +
                   C49849 * (C49883 + ae * C49849 * C49961 +
                             C49849 * (ae * C49961 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C2549 = C2540 + C2541;
    const double C2723 = C2718 + C2719;
    const double C6163 = C6154 + C6155;
    const double C15960 = C15953 + C15954;
    const double C32631 = C32622 + C32623;
    const double C5619 = C5602 + C5603;
    const double C16124 = C16117 + C16118;
    const double C32087 = C32070 + C32071;
    const double C50073 = C50068 + C50071;
    const double C50102 = C50099 + C50100;
    const double C50121 = C50120 + C50118;
    const double C50149 = C49848 * C50147;
    const double C50176 = C49848 * C50173;
    const double C50193 = C49849 * C50173;
    const double C50187 = C49848 * C50185;
    const double C49925 = C49856 * C49924;
    const double C1162 =
        (2 * (ae * C49913 + C49848 * C49885) +
         ae * (C49913 + C49924 * std::pow(C49848, 2)) +
         C49848 * (C49885 + ae * C49848 * C49924 +
                   C49848 * (ae * C49924 +
                             C49848 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1155 =
        (2 * C49848 * C49913 + C49848 * (C49913 + C49924 * C50007)) / C49718;
    const double C1616 = (C49849 * (C49913 + C49924 * C50007) +
                          (C50273 + C49987 * C50007) * ae) /
                         C49718;
    const double C1900 =
        (2 * (C49849 * C49913 + C50273 * ae) +
         C49849 * (C49913 + C49849 * (C49849 * C49924 + C49987 * ae) +
                   C49849 * C49987 * ae) +
         (C50273 + C49987 * C50044) * ae) /
        C49718;
    const double C3506 =
        (3 * (C49874 + ae * C50004 + C49848 * C50008) +
         ae * (2 * C50004 + C49848 * C50010) +
         C49848 * (2 * C50008 + ae * C50010 +
                   C49848 * (C49883 + ae * C49848 * C49922 +
                             C49848 * (ae * C49922 +
                                       C49848 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C4174 =
        (2 * (ae * (C49849 * C49911 + C49990 * ae) + C49848 * C50034) +
         ae * (C49849 * C50010 + (C49990 + C49985 * C50007) * ae) +
         C49848 * (C50034 + ae * (C49849 * C49848 * C49922 + C50026 * ae) +
                   C49848 * (ae * (C49849 * C49922 + C49985 * ae) +
                             C49848 * (ae * C49961 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C3501 = (3 * (C49904 + C49911 * C50007) +
                          C49848 * (2 * C50004 + C49848 * C50010)) /
                         C49718;
    const double C3665 =
        (C49904 + C49911 * C50007 + C49849 * (C49849 * C50010 + C50356 * ae) +
         C49849 * C50356 * ae) /
        C49718;
    const double C4169 = (C49849 * (2 * C50004 + C49848 * C50010) +
                          (2 * C50328 + C49848 * C50356) * ae) /
                         C49718;
    const double C50074 = C50066 + C50072;
    const double C50150 = C49848 * C50148;
    const double C12170 =
        (2 * (C49849 * C50088 + C50428 * ae) +
         C49849 * (C50088 + C49849 * (C49849 * C50148 + C50174 * ae) +
                   C49849 * C50174 * ae) +
         (C50428 + C50174 * C50044) * ae) /
        C49718;
    const double C49964 = C49856 * C49963;
    const double C1276 =
        (ae * (C49913 + C49849 * (C49849 * C49924 + C49987 * ae) +
               C49849 * C49987 * ae) +
         C49848 * (C49885 + ae * C49849 * C49963 +
                   C49849 * (ae * C49963 +
                             C49849 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1623 =
        (ae * C49952 + C49849 * C49885 +
         ae * (C49849 * C49848 * C49924 + C49848 * C49987 * ae) +
         C49848 * (ae * (C49849 * C49924 + C49987 * ae) +
                   C49848 * (ae * C49963 +
                             C49849 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1907 =
        (2 * (ae * C49952 + C49849 * C49885) +
         ae * (C49952 + C49963 * std::pow(C49849, 2)) +
         C49849 * (C49885 + ae * C49849 * C49963 +
                   C49849 * (ae * C49963 +
                             C49849 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C1154 =
        (2 * (C49848 * C49952 + C50273 * ae) +
         C49848 * (C49952 + C49848 * (C49848 * C49963 + C49987 * ae) +
                   C49848 * C49987 * ae) +
         (C50273 + C49987 * C50007) * ae) /
        C49718;
    const double C1268 = (C49848 * C49952 + C50273 * ae +
                          (C49848 * C49963 + C49987 * ae) * C50044) /
                         C49718;
    const double C1899 =
        (2 * C49849 * C49952 + C49849 * (C49952 + C49963 * C50044)) / C49718;
    const double C7438 =
        (3 * (C49874 + ae * C50048 + C49849 * C50034) +
         ae * (2 * C50048 + C49849 * C50050) +
         C49849 * (2 * C50034 + ae * C50050 +
                   C49849 * (C49883 + ae * C49849 * C49961 +
                             C49849 * (ae * C49961 +
                                       C49849 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C7432 = (3 * (C49943 + C49950 * C50044) +
                          C49849 * (2 * C50048 + C49849 * C50050)) /
                         C49718;
    const double C50219 = C50217 + C50218;
    const double C50233 = C49849 * C50230;
    const double C188 = C180 + C181;
    const double C2362 = C2350 + C2351;
    const double C378 = C366 * C50780;
    const double C2531 = C366 * C50926;
    const double C2522 = C366 * C50796;
    const double C8039 = C366 * C8027;
    const double C8205 = C366 * C8025;
    const double C8200 = C366 * C8026;
    const double C22899 = C366 * C22714;
    const double C22894 = C366 * C50796;
    const double C25439 = C366 * C25427;
    const double C25605 = C366 * C50964;
    const double C25600 = C366 * C50953;
    const double C12775 = C5421 + C5420;
    const double C28353 = C5420 + C5421;
    const double C972 = C966 * C50780;
    const double C2704 = C966 * C50796;
    const double C3233 = C966 * C50926;
    const double C8364 = C966 * C8026;
    const double C8879 = C966 * C8025;
    const double C23056 = C966 * C50796;
    const double C23569 = C966 * C22714;
    const double C25758 = C966 * C50953;
    const double C26267 = C966 * C50964;
    const double C28350 = C5414 + C5415;
    const double C28349 = C5415 + C5414;
    const double C2551 = C2547 * C50796;
    const double C8207 = C2547 * C8026;
    const double C8198 = C2547 * C8027;
    const double C22901 = C2547 * C50796;
    const double C25607 = C2547 * C50953;
    const double C25598 = C2547 * C25427;
    const double C2725 = C2721 * C50796;
    const double C8371 = C2721 * C8026;
    const double C23063 = C2721 * C50796;
    const double C25765 = C2721 * C50953;
    const double C29211 = C6158 + C6159;
    const double C29208 = C6159 + C6158;
    const double C377 = C365 * C118;
    const double C2530 = C365 * C2343;
    const double C2523 = C365 * C2344;
    const double C8038 = C365 * C8032;
    const double C8204 = C365 * C8030;
    const double C8201 = C365 * C8031;
    const double C22895 = C365 * C22720;
    const double C25438 = C365 * C25432;
    const double C566 = C554 * C118;
    const double C2708 = C554 * C2343;
    const double C8368 = C554 * C8030;
    const double C971 = C965 * C118;
    const double C2705 = C965 * C2344;
    const double C3232 = C965 * C2343;
    const double C8365 = C965 * C8031;
    const double C8878 = C965 * C8030;
    const double C23057 = C965 * C22720;
    const double C28351 = C5416 + C5417;
    const double C28348 = C5417 + C5416;
    const double C2550 = C2546 * C2344;
    const double C8206 = C2546 * C8031;
    const double C8199 = C2546 * C8032;
    const double C22900 = C2546 * C22720;
    const double C25599 = C2546 * C25432;
    const double C3250 = C3246 * C2344;
    const double C8363 = C3246 * C8032;
    const double C8880 = C3246 * C8031;
    const double C23570 = C3246 * C22720;
    const double C25757 = C3246 * C25432;
    const double C12776 = C5419 + C5418;
    const double C28352 = C5418 + C5419;
    const double C12794 = C12783 + C12784;
    const double C9147 = C9144 + C9145;
    const double C13719 = C13713 + C13714;
    const double C9307 = C9304 + C9305;
    const double C13451 = C13427 + C13428;
    const double C13889 = C13879 + C13880;
    const double C18375 = C18357 + C18358;
    const double C19959 = C19951 + C19952;
    const double C36833 = C36828 + C36829;
    const double C9807 = C9804 + C9805;
    const double C12785 = C12759 + C12760;
    const double C14389 = C14383 + C14384;
    const double C19291 = C19283 + C19284;
    const double C35969 = C35964 + C35965;
    const double C13886 = C13873 + C13874;
    const double C19025 = C19013 + C19014;
    const double C19455 = C19447 + C19448;
    const double C36175 = C36170 + C36171;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C2363 = C2356 + C2357;
    const double C680 = C373 + C374;
    const double C2874 = C2520 + C2521;
    const double C794 = C562 + C563;
    const double C3027 = C2702 + C2703;
    const double C165 = C50810 * C136;
    const double C356 = C50810 * C318;
    const double C682 = C50810 * C320;
    const double C11458 = C50810 * C9138;
    const double C166 = C117 * C137;
    const double C546 = C117 * C508;
    const double C5937 = C5172 * C508;
    const double C15413 = C15377 * C508;
    const double C32405 = C31640 * C508;
    const double C38136 = C38100 * C508;
    const double C797 = C117 * C510;
    const double C5204 = C5172 * C510;
    const double C31672 = C31640 * C510;
    const double C50279 = C50277 + C50278;
    const double C1269 =
        (C49848 * C49913 + C49849 * (C49849 * C49848 * C49924 + C50325 * ae) +
         C49849 * C50325 * ae) /
        C49718;
    const double C1615 =
        (C49849 *
         (C49952 + C49848 * (C49848 * C49963 + C49987 * ae) + C50325 * ae)) /
        C49718;
    const double C1264 = C49848 * C50273 + C50325 * C50044;
    const double C9133 = 4 * (2 * C50331 + C49848 * C50363) +
                         C49848 * (3 * C50363 + C49848 * C50417);
    const double C9293 = 2 * C50331 + C49848 * C50363 + C50417 * C50044;
    const double C9793 = C49849 * (3 * C50363 + C49848 * C50417);
    const double C17606 = 4 * (2 * C50400 + C49849 * C50403) +
                          C49849 * (3 * C50403 + C49849 * C50494);
    const double C20350 = 4 * (2 * C50476 + C49849 * C50479) +
                          C49849 * (3 * C50479 + C49849 * C50514);
    const double C50452 = C50449 + C50450;
    const double C50524 = C50521 + C50522;
    const double C107 = (C50899 - C50939) / C49733 - (C50957 * C50619) / C49718;
    const double C108 =
        (2 * C50628 + C50957) / C49733 - (C50941 * C50619) / C49718;
    const double C109 = C50941 / C49733 - C50631 / C49754;
    const double C113 = (C50958 * C50645) / C50642 + (C50908 - C50943) / C50644;
    const double C114 =
        (C50959 * C50645) / C50642 + (2 * C50656 + C50958) / C50644;
    const double C115 = (C50645 * C50656) / C50659 + C50959 / C50644;
    const double C1145 =
        (C50960 * C50716) / C50642 + (C50916 - C50945) / C50644;
    const double C1146 =
        (C50961 * C50716) / C50642 + (2 * C50721 + C50960) / C50644;
    const double C1147 = (C50716 * C50721) / C50659 + C50961 / C50644;
    const double C1891 =
        (C50962 * C50744) / C50642 + (C50917 - C50948) / C50644;
    const double C1892 =
        (C50963 * C50744) / C50642 + (2 * C50749 + C50962) / C50644;
    const double C1893 = (C50744 * C50749) / C50659 + C50963 / C50644;
    const double C49765 = C49761 * ae;
    const double C22719 = (-C49734 / C49718) / C49733 - (C49761 * be) / C49718;
    const double C49810 = C49807 * ae;
    const double C31639 = (-C49782 / C49718) / C49733 - (C49807 * be) / C49718;
    const double C38147 = C38120 + C38121;
    const double C38144 = C38114 + C38115;
    const double C38143 = C38112 + C38113;
    const double C38140 = C38106 + C38107;
    const double C38329 = C38308 + C38309;
    const double C38326 = C38302 + C38303;
    const double C38511 = C38490 + C38491;
    const double C38508 = C38484 + C38485;
    const double C38683 = C38676 + C38677;
    const double C38847 = C38840 + C38841;
    const double C38844 = C38834 + C38835;
    const double C39056 = C39046 + C39047;
    const double C47251 = C47236 + C47237;
    const double C47248 = C47230 + C47231;
    const double C47247 = C47228 + C47229;
    const double C47244 = C47222 + C47223;
    const double C47901 = C47892 + C47893;
    const double C47898 = C47886 + C47887;
    const double C48830 = C48820 + C48821;
    const double C5227 = C5223 * C50780;
    const double C5226 = C5222 * C118;
    const double C15430 = C15409 + C15410;
    const double C15427 = C15403 + C15404;
    const double C15426 = C15401 + C15402;
    const double C15423 = C15395 + C15396;
    const double C15418 = C15385 + C15386;
    const double C15415 = C15379 + C15380;
    const double C15612 = C15597 + C15598;
    const double C15609 = C15591 + C15592;
    const double C15608 = C15589 + C15590;
    const double C15605 = C15583 + C15584;
    const double C15794 = C15779 + C15780;
    const double C15791 = C15773 + C15774;
    const double C15790 = C15771 + C15772;
    const double C15787 = C15765 + C15766;
    const double C15958 = C15949 + C15950;
    const double C15955 = C15943 + C15944;
    const double C16122 = C16113 + C16114;
    const double C16119 = C16107 + C16108;
    const double C16334 = C16325 + C16326;
    const double C16331 = C16319 + C16320;
    const double C18380 = C18367 + C18368;
    const double C18377 = C18361 + C18362;
    const double C18372 = C18351 + C18352;
    const double C18369 = C18345 + C18346;
    const double C19030 = C19023 + C19024;
    const double C19027 = C19017 + C19018;
    const double C19290 = C19281 + C19282;
    const double C19287 = C19275 + C19276;
    const double C19454 = C19445 + C19446;
    const double C19451 = C19439 + C19440;
    const double C19958 = C19949 + C19950;
    const double C19955 = C19943 + C19944;
    const double C185 = C175 * C118;
    const double C2358 = C175 * C2343;
    const double C372 = C360 * C118;
    const double C2355 = C360 * C2344;
    const double C2875 = C360 * C2343;
    const double C8048 = C360 * C8031;
    const double C22731 = C360 * C22720;
    const double C379 = C367 * C118;
    const double C2536 = C367 * C2343;
    const double C2519 = C367 * C2344;
    const double C8041 = C367 * C8032;
    const double C8528 = C367 * C8031;
    const double C22891 = C367 * C22720;
    const double C25441 = C367 * C25432;
    const double C561 = C549 * C118;
    const double C3028 = C549 * C2343;
    const double C5225 = C5216 + C5217;
    const double C568 = C556 * C118;
    const double C2714 = C556 * C2343;
    const double C5930 = C5606 + C5607;
    const double C973 = C967 * C118;
    const double C2701 = C967 * C2344;
    const double C3238 = C967 * C2343;
    const double C8680 = C967 * C8031;
    const double C23053 = C967 * C22720;
    const double C5767 = C5412 + C5413;
    const double C28754 = C5413 + C5412;
    const double C2724 = C2720 * C2344;
    const double C8370 = C2720 * C8031;
    const double C23062 = C2720 * C22720;
    const double C29210 = C6156 + C6157;
    const double C29209 = C6157 + C6156;
    const double C14378 = C13453 + C13454;
    const double C13708 = C12787 + C12788;
    const double C11460 = C50810 * C9140;
    const double C184 = C174 * C50780;
    const double C2359 = C174 * C50926;
    const double C22735 = C174 * C22714;
    const double C371 = C359 * C50780;
    const double C2354 = C359 * C50796;
    const double C2876 = C359 * C50926;
    const double C8049 = C359 * C8026;
    const double C22730 = C359 * C50796;
    const double C23216 = C359 * C22714;
    const double C25449 = C359 * C50953;
    const double C380 = C368 * C50780;
    const double C2537 = C368 * C50926;
    const double C2518 = C368 * C50796;
    const double C8040 = C368 * C8027;
    const double C8529 = C368 * C8026;
    const double C22903 = C368 * C22714;
    const double C22890 = C368 * C50796;
    const double C25440 = C368 * C25427;
    const double C25917 = C368 * C50953;
    const double C560 = C548 * C50780;
    const double C3029 = C548 * C50926;
    const double C23369 = C548 * C22714;
    const double C5224 = C5214 + C5215;
    const double C569 = C557 * C50780;
    const double C2715 = C557 * C50926;
    const double C23065 = C557 * C22714;
    const double C5929 = C5604 + C5605;
    const double C974 = C968 * C50780;
    const double C2700 = C968 * C50796;
    const double C3239 = C968 * C50926;
    const double C8681 = C968 * C8026;
    const double C23052 = C968 * C50796;
    const double C23573 = C968 * C22714;
    const double C26069 = C968 * C50953;
    const double C5766 = C5410 + C5411;
    const double C28755 = C5411 + C5410;
    const double C15796 = C15783 + C15784;
    const double C38519 = C38506 + C38507;
    const double C8377 = C8374 + C8375;
    const double C13462 = C13449 + C13450;
    const double C15614 = C15601 + C15602;
    const double C35633 = C35624 + C35625;
    const double C38337 = C38324 + C38325;
    const double C16336 = C16329 + C16330;
    const double C28559 = C28554 + C28555;
    const double C34957 = C34952 + C34953;
    const double C39059 = C39052 + C39053;
    const double C11904 = C50810 * C9800;
    const double C13716 = C50822 * C9800;
    const double C45435 = C50822 * C9800;
    const double C11568 = C50810 * C9300;
    const double C14386 = C50822 * C9300;
    const double C19286 = C15374 * C9300;
    const double C46093 = C50822 * C9300;
    const double C48159 = C38097 * C9300;
    const double C13882 = C50822 * C10204;
    const double C19954 = C15374 * C10204;
    const double C45593 = C50822 * C10204;
    const double C48827 = C38097 * C10204;
    const double C9137 =
        (4 * (2 * C50369 + C49848 * C50431 + C50370 * ae) +
         C49848 *
             (3 * C50431 +
              C49848 * (2 * C50427 +
                        C49848 * (C49941 + C49848 * (C49848 * C49948 + C50155) +
                                  C50181) +
                        C50111 * ae) +
              C50428 * ae) +
         (3 * C50370 + C49848 * C50428) * ae) /
        C49718;
    const double C9297 =
        (2 * C50369 + C49848 * C50431 + C50370 * ae +
         (2 * C50427 +
          C49848 * (C49941 + C49848 * (C49848 * C49948 + C50155) + C50181) +
          C50111 * ae) *
             C50044) /
        C49718;
    const double C9797 =
        (C49849 *
         (3 * C50431 +
          C49848 * (2 * C50427 +
                    C49848 * (C49941 + C49848 * (C49848 * C49948 + C50155) +
                              C50181) +
                    C50111 * ae) +
          C50428 * ae)) /
        C49718;
    const double C10201 =
        (2 * C49849 * C50431 +
         C49849 *
             (C50431 + (C49941 + C49848 * (C49848 * C49948 + C50155) + C50181) *
                           C50044)) /
        C49718;
    const double C50495 = C50493 + C50490;
    const double C50420 = C50419 + C50413;
    const double C8213 = C8210 + C8211;
    const double C8887 = C8884 + C8885;
    const double C12792 = C12773 + C12774;
    const double C34751 = C34738 + C34739;
    const double C8212 = C8208 + C8209;
    const double C8376 = C8372 + C8373;
    const double C13460 = C13445 + C13446;
    const double C15611 = C15595 + C15596;
    const double C35631 = C35620 + C35621;
    const double C38334 = C38318 + C38319;
    const double C8886 = C8882 + C8883;
    const double C12790 = C12769 + C12770;
    const double C34749 = C34734 + C34735;
    const double C15793 = C15777 + C15778;
    const double C38516 = C38500 + C38501;
    const double C357 = C117 * C319;
    const double C683 = C117 * C321;
    const double C545 = C50810 * C507;
    const double C5934 = C50822 * C507;
    const double C15408 = C15374 * C507;
    const double C32402 = C50822 * C507;
    const double C38131 = C38097 * C507;
    const double C796 = C50810 * C509;
    const double C5201 = C50822 * C509;
    const double C31669 = C50822 * C509;
    const double C962 = C50810 * C943;
    const double C5771 = C50822 * C943;
    const double C32239 = C50822 * C943;
    const double C963 = C117 * C944;
    const double C5774 = C5172 * C944;
    const double C32242 = C31640 * C944;
    const double C164 = C117 * C124;
    const double C355 = C117 * C301;
    const double C681 = C117 * C302;
    const double C544 = C117 * C490;
    const double C5933 = C5172 * C490;
    const double C15407 = C15377 * C490;
    const double C32401 = C31640 * C490;
    const double C38130 = C38100 * C490;
    const double C795 = C117 * C491;
    const double C5200 = C5172 * C491;
    const double C31668 = C31640 * C491;
    const double C961 = C117 * C935;
    const double C5770 = C5172 * C935;
    const double C32238 = C31640 * C935;
    const double C3249 = C3242 + C3243;
    const double C5425 = C5408 + C5409;
    const double C31893 = C31876 + C31877;
    const double C2722 = C2716 + C2717;
    const double C6161 = C6150 + C6151;
    const double C15957 = C15947 + C15948;
    const double C32629 = C32618 + C32619;
    const double C38680 = C38670 + C38671;
    const double C2552 = C2548 * C2344;
    const double C8530 = C2548 * C8032;
    const double C22904 = C2548 * C22720;
    const double C25918 = C2548 * C25432;
    const double C3252 = C3248 * C2344;
    const double C8682 = C3248 * C8032;
    const double C23574 = C3248 * C22720;
    const double C26070 = C3248 * C25432;
    const double C50515 = C50513 + C50510;
    const double C19453 = C19443 + C19444;
    const double C48326 = C48316 + C48317;
    const double C11566 = C50810 * C9298;
    const double C14382 = C50822 * C9298;
    const double C19280 = C15374 * C9298;
    const double C46089 = C50822 * C9298;
    const double C48153 = C38097 * C9298;
    const double C11902 = C50810 * C9798;
    const double C13712 = C50822 * C9798;
    const double C45431 = C50822 * C9798;
    const double C11457 = C117 * C9134;
    const double C11565 = C117 * C9294;
    const double C14381 = C5172 * C9294;
    const double C19279 = C15377 * C9294;
    const double C46088 = C31640 * C9294;
    const double C48152 = C38100 * C9294;
    const double C11901 = C117 * C9794;
    const double C13711 = C5172 * C9794;
    const double C45430 = C31640 * C9794;
    const double C50177 = ae * C50175;
    const double C50519 = C49849 * C50175;
    const double C17611 =
        (4 * (2 * C50409 + C49849 * C50504 + C50410 * ae) +
         C49849 * (3 * C50504 +
                   C49849 * (2 * C50126 + C49849 * C50175 + C50209 * ae) +
                   C50503 * ae) +
         (3 * C50410 + C49849 * C50503) * ae) /
        C49718;
    const double C50456 = C49848 * C50455;
    const double C14782 =
        (3 * (C50431 + C50455 * C50044) +
         C49849 *
             (2 * C49849 * C50455 +
              C49849 *
                  (C50455 + (C49948 + C49848 * (C49848 * C49959 + C49982 * ae) +
                             C50162 * ae) *
                                C50044))) /
        C49718;
    const double C358 = C50810 * C331;
    const double C684 = C50810 * C332;
    const double C547 = C50810 * C520;
    const double C5938 = C50822 * C520;
    const double C15414 = C15374 * C520;
    const double C32406 = C50822 * C520;
    const double C38137 = C38097 * C520;
    const double C798 = C50810 * C521;
    const double C5205 = C50822 * C521;
    const double C31673 = C50822 * C521;
    const double C964 = C50810 * C950;
    const double C5775 = C50822 * C950;
    const double C32243 = C50822 * C950;
    const double C2553 = C2549 * C50796;
    const double C8531 = C2549 * C8027;
    const double C22905 = C2549 * C50796;
    const double C25919 = C2549 * C25427;
    const double C2727 = C2723 * C50796;
    const double C23067 = C2723 * C50796;
    const double C9299 =
        (2 * (ae * (C49906 + C49849 * (C49849 * C49917 + C49981 * ae) +
                    C49849 * C49981 * ae) +
              C49848 * C50102) +
         ae * (C50017 + C49849 * (C49849 * C50070 + C50101 * ae) +
               C49849 * C50101 * ae) +
         C49848 *
             (C50102 +
              ae * (C50060 + C49849 * (C49849 * C49848 * C50063 + C50098 * ae) +
                    C49849 * C50098 * ae) +
              C49848 *
                  (ae * (C49917 + C49849 * (C49849 * C50063 + C50093 * ae) +
                         C49849 * C50093 * ae) +
                   C49848 * (C50062 + ae * C49849 * C50094 +
                             C49849 * (ae * C50094 + C49849 * C49856 *
                                                         std::pow(C49853, 8) *
                                                         bs[8] * C49854))))) /
        C49750;
    const double C10203 =
        (2 * C50038 + ae * C50054 + C49849 * C50102 +
         ae * (2 * (C49849 * C50060 + C50028 * ae) +
               C49849 *
                   (C50060 + C49849 * (C49849 * C49848 * C50063 + C50098 * ae) +
                    C49849 * C50098 * ae) +
               (C50028 + C50098 * C50044) * ae) +
         C49848 *
             (ae *
                  (2 * C50119 +
                   C49849 * (C49917 + C49849 * (C49849 * C50063 + C50093 * ae) +
                             C49849 * C50093 * ae) +
                   (C49981 + C50093 * C50044) * ae) +
              C49848 *
                  (2 * C50096 + ae * (C49956 + C50094 * C50044) +
                   C49849 * (C50062 + ae * C49849 * C50094 +
                             C49849 * (ae * C50094 + C49849 * C49856 *
                                                         std::pow(C49853, 8) *
                                                         bs[8] * C49854))))) /
        C49750;
    const double C16729 =
        (ae * (3 * (C49906 + C49849 * C50119 + C50211 * ae) +
               C49849 * (2 * C50119 +
                         C49849 * (C49917 +
                                   C49849 * (C49849 * C50063 + C50093 * ae) +
                                   C49849 * C50093 * ae) +
                         C50214 * ae) +
               (2 * C50211 + C49849 * C50214) * ae) +
         C49848 * (3 * C50102 + ae * (2 * C50090 + C49849 * C50215) +
                   C49849 * (2 * C50096 + ae * C50215 +
                             C49849 * (C50062 + ae * C49849 * C50094 +
                                       C49849 * (ae * C50094 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C50151 = C50139 + C50149;
    const double C50197 = C50196 + C50193;
    const double C50189 = C50188 + C50187;
    const double C49926 = C49916 + C49925;
    const double C9139 =
        (4 * (2 * C50016 + ae * C50017 + C49848 * C50073) +
         ae * (3 * C50017 + C49848 * C50074) +
         C49848 * (3 * C50073 + ae * C50074 +
                   C49848 * (2 * C50069 + ae * C50070 +
                             C49848 * (C50062 + ae * C49848 * C50063 +
                                       C49848 * (ae * C50063 +
                                                 C49848 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C9799 =
        (3 * (C50038 + ae * (C49849 * C50060 + C50028 * ae) + C49848 * C50121) +
         ae * (C49849 * C50074 + (2 * C50028 + C49848 * C50101) * ae) +
         C49848 *
             (2 * C50121 + ae * (C49849 * C50070 + C50101 * ae) +
              C49848 *
                  (C50096 + ae * (C49849 * C49848 * C50063 + C50098 * ae) +
                   C49848 * (ae * (C49849 * C50063 + C50093 * ae) +
                             C49848 * (ae * C50094 + C49849 * C49856 *
                                                         std::pow(C49853, 8) *
                                                         bs[8] * C49854))))) /
        C49750;
    const double C9136 = (4 * (2 * C50012 + C49848 * C50017) +
                          C49848 * (3 * C50017 + C49848 * C50074)) /
                         C49718;
    const double C9296 =
        (2 * C50012 + C49848 * C50017 +
         C49849 * (C49849 * C50074 + C50417 * ae) + C49849 * C50417 * ae) /
        C49718;
    const double C9796 = (C49849 * (3 * C50017 + C49848 * C50074) +
                          (3 * C50363 + C49848 * C50417) * ae) /
                         C49718;
    const double C50152 = C50137 + C50150;
    const double C49965 = C49955 + C49964;
    const double C17612 =
        (4 * (2 * C50038 + ae * C50054 + C49849 * C50102) +
         ae * (3 * C50054 + C49849 * C50219) +
         C49849 * (3 * C50102 + ae * C50219 +
                   C49849 * (2 * C50096 + ae * C50215 +
                             C49849 * (C50062 + ae * C49849 * C50094 +
                                       C49849 * (ae * C50094 +
                                                 C49849 * C49856 *
                                                     std::pow(C49853, 8) *
                                                     bs[8] * C49854))))) /
        C49750;
    const double C17608 = (4 * (2 * C50052 + C49849 * C50054) +
                           C49849 * (3 * C50054 + C49849 * C50219)) /
                          C49718;
    const double C50234 = C50232 + C50233;
    const double C2364 = C2362 + C2352;
    const double C14377 = C13451 + C13452;
    const double C13707 = C12785 + C12786;
    const double C177 = C166 + C167;
    const double C125 = 5 * (3 * C50268 + C49856 * C50273) +
                        C49856 * (4 * C50273 + C49856 * C50279);
    const double C303 = 3 * C50268 + C49856 * C50273 + C50279 * C50007;
    const double C492 = 3 * C50268 + C49856 * C50273 + C50279 * C50044;
    const double C674 = C49848 * (4 * C50273 + C49856 * C50279);
    const double C788 = C49849 * (4 * C50273 + C49856 * C50279);
    const double C936 = C49849 * C49848 * C50279;
    const double C11452 = 5 * (3 * C50370 + C49848 * C50428) +
                          C49848 * (4 * C50428 + C49848 * C50452);
    const double C11560 = 3 * C50370 + C49848 * C50428 + C50452 * C50044;
    const double C11896 = C49849 * (4 * C50428 + C49848 * C50452);
    const double C22286 = 5 * (3 * C50410 + C49849 * C50503) +
                          C49849 * (4 * C50503 + C49849 * C50524);
    const double C49767 = C49765 / C49718;
    const double C22734 = C175 * C22719;
    const double C22733 = C172 * C22719;
    const double C22726 = C170 * C22719;
    const double C22722 = C168 * C22719;
    const double C22902 = C367 * C22719;
    const double C22898 = C365 * C22719;
    const double C22897 = C364 * C22719;
    const double C22893 = C362 * C22719;
    const double C23064 = C556 * C22719;
    const double C23060 = C554 * C22719;
    const double C23059 = C553 * C22719;
    const double C23055 = C551 * C22719;
    const double C23215 = C360 * C22719;
    const double C23368 = C549 * C22719;
    const double C23572 = C967 * C22719;
    const double C23568 = C965 * C22719;
    const double C49812 = C49810 / C49718;
    const double C31670 = C31639 * C134;
    const double C31666 = C31639 * C123;
    const double C31664 = C31639 * C122;
    const double C31660 = C31639 * C133;
    const double C31654 = C31639 * C131;
    const double C31650 = C31639 * C121;
    const double C31646 = C31639 * C129;
    const double C31642 = C31639 * C120;
    const double C31874 = C31639 * C317;
    const double C31870 = C31639 * C300;
    const double C31866 = C31639 * C315;
    const double C31862 = C31639 * C299;
    const double C31860 = C31639 * C296;
    const double C31856 = C31639 * C308;
    const double C31852 = C31639 * C295;
    const double C31848 = C31639 * C306;
    const double C32068 = C31639 * C506;
    const double C32064 = C31639 * C489;
    const double C32060 = C31639 * C504;
    const double C32056 = C31639 * C488;
    const double C32054 = C31639 * C485;
    const double C32050 = C31639 * C497;
    const double C32046 = C31639 * C484;
    const double C32042 = C31639 * C495;
    const double C32240 = C31639 * C304;
    const double C32236 = C31639 * C294;
    const double C32403 = C31639 * C493;
    const double C32399 = C31639 * C483;
    const double C32620 = C31639 * C942;
    const double C32616 = C31639 * C934;
    const double C32612 = C31639 * C940;
    const double C32608 = C31639 * C933;
    const double C34736 = C31639 * C1158;
    const double C34732 = C31639 * C1152;
    const double C34728 = C31639 * C298;
    const double C34724 = C31639 * C313;
    const double C34712 = C31639 * C310;
    const double C34708 = C31639 * C297;
    const double C34950 = C31639 * C1272;
    const double C34946 = C31639 * C1266;
    const double C35622 = C31639 * C1619;
    const double C35618 = C31639 * C1613;
    const double C35614 = C31639 * C932;
    const double C35610 = C31639 * C938;
    const double C35962 = C31639 * C1160;
    const double C35958 = C31639 * C1153;
    const double C36168 = C31639 * C1274;
    const double C36164 = C31639 * C1267;
    const double C36826 = C31639 * C1621;
    const double C36822 = C31639 * C1614;
    const double C45432 = C31639 * C3504;
    const double C45428 = C31639 * C3499;
    const double C45590 = C31639 * C3668;
    const double C45586 = C31639 * C3663;
    const double C46090 = C31639 * C4172;
    const double C46086 = C31639 * C4167;
    const double C5230 = C5226 + C5227;
    const double C2365 = C2355 + C2363;
    const double C2879 = C2519 + C2874;
    const double C5229 = C5225 * C118;
    const double C5940 = C5930 * C118;
    const double C3032 = C2701 + C3027;
    const double C5777 = C5767 * C118;
    const double C190 = C184 + C185;
    const double C679 = C371 + C372;
    const double C793 = C560 + C561;
    const double C5228 = C5224 * C50780;
    const double C5939 = C5929 * C50780;
    const double C5776 = C5766 * C50780;
    const double C8379 = C8377 * C8027;
    const double C25767 = C8377 * C25427;
    const double C11459 = C117 * C9137;
    const double C11567 = C117 * C9297;
    const double C14385 = C5172 * C9297;
    const double C19285 = C15377 * C9297;
    const double C46092 = C31640 * C9297;
    const double C48158 = C38100 * C9297;
    const double C11903 = C117 * C9797;
    const double C13715 = C5172 * C9797;
    const double C45434 = C31640 * C9797;
    const double C13881 = C5172 * C10201;
    const double C19953 = C15377 * C10201;
    const double C45592 = C31640 * C10201;
    const double C48826 = C38100 * C10201;
    const double C17609 =
        (4 * (2 * C50402 + C49849 * C50495 + C50403 * ae) +
         C49849 *
             (3 * C50495 +
              C49849 *
                  (2 * C50119 +
                   C49849 * (C49917 + C49849 * (C49849 * C50063 + C50093 * ae) +
                             C49849 * C50093 * ae) +
                   C50214 * ae) +
              C50494 * ae) +
         (3 * C50403 + C49849 * C50494) * ae) /
        C49718;
    const double C9135 =
        (4 * (2 * C50362 + C49848 * C50420 + C50363 * ae) +
         C49848 *
             (3 * C50420 +
              C49848 *
                  (2 * C50416 +
                   C49848 * (C49956 + C49848 * (C49848 * C50094 + C50093 * ae) +
                             C50098 * ae) +
                   C50101 * ae) +
              C50417 * ae) +
         (3 * C50363 + C49848 * C50417) * ae) /
        C49718;
    const double C9295 =
        (2 * C50362 + C49848 * C50420 + C50363 * ae +
         (2 * C50416 +
          C49848 * (C49956 + C49848 * (C49848 * C50094 + C50093 * ae) +
                    C50098 * ae) +
          C50101 * ae) *
             C50044) /
        C49718;
    const double C9795 =
        (C49849 *
         (3 * C50420 +
          C49848 *
              (2 * C50416 +
               C49848 * (C49956 + C49848 * (C49848 * C50094 + C50093 * ae) +
                         C50098 * ae) +
               C50101 * ae) +
          C50417 * ae)) /
        C49718;
    const double C10199 =
        (2 * C49849 * C50420 +
         C49849 * (C50420 + (C49956 + C49848 * (C49848 * C50094 + C50093 * ae) +
                             C50098 * ae) *
                                C50044)) /
        C49718;
    const double C8215 = C8213 * C8027;
    const double C25609 = C8213 * C25427;
    const double C8889 = C8887 * C8027;
    const double C26271 = C8887 * C25427;
    const double C8214 = C8212 * C8032;
    const double C25608 = C8212 * C25432;
    const double C8378 = C8376 * C8032;
    const double C25766 = C8376 * C25432;
    const double C8888 = C8886 * C8032;
    const double C26270 = C8886 * C25432;
    const double C176 = C164 + C165;
    const double C369 = C355 + C356;
    const double C685 = C681 + C682;
    const double C558 = C544 + C545;
    const double C5942 = C5933 + C5934;
    const double C15429 = C15407 + C15408;
    const double C32410 = C32401 + C32402;
    const double C38152 = C38130 + C38131;
    const double C799 = C795 + C796;
    const double C5219 = C5200 + C5201;
    const double C31687 = C31668 + C31669;
    const double C969 = C961 + C962;
    const double C5779 = C5770 + C5771;
    const double C32247 = C32238 + C32239;
    const double C3253 = C3249 * C50796;
    const double C8683 = C3249 * C8027;
    const double C23575 = C3249 * C50796;
    const double C26071 = C3249 * C25427;
    const double C2726 = C2722 * C2344;
    const double C23066 = C2722 * C22720;
    const double C20352 =
        (4 * (2 * C50478 + C49849 * C50515 + C50479 * ae) +
         C49849 * (3 * C50515 +
                   C49849 * (2 * C50184 +
                             C49849 * (C50134 +
                                       C49849 * (C49849 * C49848 * C49920 +
                                                 C50162 * ae) +
                                       C49849 * C50162 * ae) +
                             C50203 * ae) +
                   C50514 * ae) +
         (3 * C50479 + C49849 * C50514) * ae) /
        C49718;
    const double C11461 = C11457 + C11458;
    const double C11569 = C11565 + C11566;
    const double C14388 = C14381 + C14382;
    const double C19289 = C19279 + C19280;
    const double C46095 = C46088 + C46089;
    const double C48162 = C48152 + C48153;
    const double C11905 = C11901 + C11902;
    const double C13718 = C13711 + C13712;
    const double C45437 = C45430 + C45431;
    const double C50178 = C50177 + C50176;
    const double C50523 = C50518 + C50519;
    const double C50457 = C50446 + C50456;
    const double C370 = C357 + C358;
    const double C686 = C683 + C684;
    const double C559 = C546 + C547;
    const double C5944 = C5937 + C5938;
    const double C15432 = C15413 + C15414;
    const double C32412 = C32405 + C32406;
    const double C38155 = C38136 + C38137;
    const double C800 = C797 + C798;
    const double C5221 = C5204 + C5205;
    const double C31689 = C31672 + C31673;
    const double C970 = C963 + C964;
    const double C5781 = C5774 + C5775;
    const double C32249 = C32242 + C32243;
    const double C12171 =
        (2 * (ae * (2 * C50126 + C49849 * C50175 +
                    (C49972 + C49974 * C50044) * ae) +
              C49848 * C50197) +
         ae * (2 * (C49849 * C50083 + C50111 * ae) +
               C49849 * (C50083 + C49849 * (C49849 * C50143 + C50167 * ae) +
                         C49849 * C50167 * ae) +
               (C50111 + C50167 * C50044) * ae) +
         C49848 *
             (C50197 +
              ae *
                  (2 * C50184 +
                   C49849 * (C50134 +
                             C49849 * (C49849 * C49848 * C49920 + C50162 * ae) +
                             C49849 * C50162 * ae) +
                   (C50108 + C50162 * C50044) * ae) +
              C49848 *
                  (ae * (2 * C50163 +
                         C49849 * (C49909 +
                                   C49849 * (C49849 * C49920 + C49982 * ae) +
                                   C49849 * C49982 * ae) +
                         (C49974 + C49982 * C50044) * ae) +
                   C49848 * (2 * C50166 + ae * (C49948 + C49959 * C50044) +
                             C49849 * (C49881 + ae * C49849 * C49959 +
                                       C49849 * (ae * C49959 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C14786 =
        (3 * C50114 + ae * (2 * C50104 + C49849 * C50194) + C49849 * C50197 +
         ae * (3 * (C50076 + C49849 * C50184 + C50199 * ae) +
               C49849 * (2 * C50184 +
                         C49849 * (C50134 +
                                   C49849 * (C49849 * C49848 * C49920 +
                                             C50162 * ae) +
                                   C49849 * C50162 * ae) +
                         C50203 * ae) +
               (2 * C50199 + C49849 * C50203) * ae) +
         C49848 *
             (ae * (3 * C50175 +
                    C49849 *
                        (2 * C50163 +
                         C49849 * (C49909 +
                                   C49849 * (C49849 * C49920 + C49982 * ae) +
                                   C49849 * C49982 * ae) +
                         C50204 * ae) +
                    (2 * C50156 + C49849 * C50204) * ae) +
              C49848 *
                  (3 * C50173 + ae * (2 * C50157 + C49849 * C50205) +
                   C49849 * (2 * C50166 + ae * C50205 +
                             C49849 * (C49881 + ae * C49849 * C49959 +
                                       C49849 * (ae * C49959 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C14787 =
        (ae * (3 * (C49889 + C49849 * C50126 + C50207 * ae) +
               C49849 * (2 * C50126 + C49849 * C50175 + C50209 * ae) +
               (2 * C50207 + C49849 * C50209) * ae) +
         C49848 * (3 * C50114 + ae * (2 * C50104 + C49849 * C50194) +
                   C49849 * C50197)) /
        C49750;
    const double C17613 =
        (4 * (2 * C50042 + ae * C50058 + C49849 * C50114) +
         ae * (3 * C50058 + C49849 * C50223) +
         C49849 * (3 * C50114 + ae * C50223 + C49849 * C50197)) /
        C49750;
    const double C20353 =
        (ae * (4 * (2 * C50126 + C49849 * C50175 + C50209 * ae) +
               C49849 * (3 * C50175 +
                         C49849 * (2 * C50163 +
                                   C49849 * (C49909 +
                                             C49849 * (C49849 * C49920 +
                                                       C49982 * ae) +
                                             C49849 * C49982 * ae) +
                                   C50204 * ae) +
                         C50229 * ae) +
               (3 * C50209 + C49849 * C50229) * ae) +
         C49848 *
             (4 * C50197 + ae * (3 * C50194 + C49849 * C50230) +
              C49849 *
                  (3 * C50173 + ae * C50230 +
                   C49849 * (2 * C50166 + ae * C50205 +
                             C49849 * (C49881 + ae * C49849 * C49959 +
                                       C49849 * (ae * C49959 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C333 =
        (3 * C49874 + C49856 * C49885 + ae * C49848 * C49926 +
         C49848 * (ae * C49926 +
                   C49848 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C677 =
        (ae * (4 * C49913 + C49856 * C49926) +
         C49848 * (4 * C49885 +
                   C49856 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C139 = (5 * (3 * C49904 + C49856 * C49913) +
                         C49856 * (4 * C49913 + C49856 * C49926)) /
                        C49718;
    const double C323 =
        (3 * C49904 + C49856 * C49913 + C49926 * C50007) / C49718;
    const double C512 =
        (3 * C49904 + C49856 * C49913 +
         C49849 * (C49849 * C49926 + C50279 * ae) + C49849 * C50279 * ae) /
        C49718;
    const double C676 = (C49848 * (4 * C49913 + C49856 * C49926)) / C49718;
    const double C790 = (C49849 * (4 * C49913 + C49856 * C49926) +
                         (4 * C50273 + C49856 * C50279) * ae) /
                        C49718;
    const double C946 =
        (C49849 * C49848 * C49926 + C49848 * C50279 * ae) / C49718;
    const double C11455 =
        (5 * (3 * C50087 + ae * C50088 + C49848 * C50151) +
         ae * (4 * C50088 + C49848 * C50152) +
         C49848 *
             (4 * C50151 + ae * C50152 +
              C49848 *
                  (3 * C50147 + ae * C50148 +
                   C49848 * (2 * C50141 + ae * C50143 +
                             C49848 * (C49881 + ae * C49848 * C49920 +
                                       C49848 * (ae * C49920 +
                                                 C49848 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C11899 =
        (4 * (2 * C50128 + ae * (C49849 * C50083 + C50111 * ae) +
              C49848 * C50189) +
         ae * (C49849 * C50152 + (3 * C50111 + C49848 * C50174) * ae) +
         C49848 *
             (3 * C50189 + ae * (C49849 * C50148 + C50174 * ae) +
              C49848 *
                  (2 * C50185 + ae * (C49849 * C50143 + C50167 * ae) +
                   C49848 *
                       (C50166 + ae * (C49849 * C49848 * C49920 + C50162 * ae) +
                        C49848 * (ae * (C49849 * C49920 + C49982 * ae) +
                                  C49848 * (ae * C49959 +
                                            C49849 * std::pow(C49853, 8) *
                                                bs[8] * C49854)))))) /
        C49750;
    const double C11454 = (5 * (3 * C50024 + C49848 * C50088) +
                           C49848 * (4 * C50088 + C49848 * C50152)) /
                          C49718;
    const double C11562 =
        (3 * C50024 + C49848 * C50088 +
         C49849 * (C49849 * C50152 + C50452 * ae) + C49849 * C50452 * ae) /
        C49718;
    const double C11898 = (C49849 * (4 * C50088 + C49848 * C50152) +
                           (4 * C50428 + C49848 * C50452) * ae) /
                          C49718;
    const double C522 =
        (3 * C49874 + C49856 * C49885 + ae * C49849 * C49965 +
         C49849 * (ae * C49965 +
                   C49849 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C791 =
        (ae * (4 * C49952 + C49856 * C49965) +
         C49849 * (4 * C49885 +
                   C49856 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C951 =
        (ae * (C49849 * C49926 +
               (3 * (C49972 + C49974 * C49864) +
                C49856 * (2 * C49856 * C49974 +
                          C49856 * (C49974 + C49870 * C49869 * C49864))) *
                   ae) +
         C49848 * (ae * C49965 +
                   C49849 * (3 * C49883 +
                             C49856 * (2 * C49856 * C49881 +
                                       C49856 * (C49881 + std::pow(C49853, 8) *
                                                              bs[8] * C49854 *
                                                              C49864))))) /
        C49750;
    const double C138 = (5 * (3 * C49943 + C49856 * C49952) +
                         C49856 * (4 * C49952 + C49856 * C49965)) /
                        C49718;
    const double C322 =
        (3 * C49943 + C49856 * C49952 +
         C49848 * (C49848 * C49965 + C50279 * ae) + C49848 * C50279 * ae) /
        C49718;
    const double C511 =
        (3 * C49943 + C49856 * C49952 + C49965 * C50044) / C49718;
    const double C675 = (C49848 * (4 * C49952 + C49856 * C49965) +
                         (4 * C50273 + C49856 * C50279) * ae) /
                        C49718;
    const double C789 = (C49849 * (4 * C49952 + C49856 * C49965)) / C49718;
    const double C945 = (C49849 * (C49848 * C49965 + C50279 * ae)) / C49718;
    const double C22289 =
        (5 * (3 * C50114 + ae * C50223 + C49849 * C50197) +
         ae * (4 * C50223 + C49849 * C50234) +
         C49849 *
             (4 * C50197 + ae * C50234 +
              C49849 *
                  (3 * C50173 + ae * C50230 +
                   C49849 * (2 * C50166 + ae * C50205 +
                             C49849 * (C49881 + ae * C49849 * C49959 +
                                       C49849 * (ae * C49959 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C22287 = (5 * (3 * C50058 + C49849 * C50223) +
                           C49849 * (4 * C50223 + C49849 * C50234)) /
                          C49718;
    const double C2366 = C2364 + C2353;
    const double C187 = C177 * C50780;
    const double C49769 = C49767 - C49762;
    const double C22739 = C22732 + C22733;
    const double C22738 = C22726 + C22727;
    const double C23214 = C22892 + C22893;
    const double C23367 = C23054 + C23055;
    const double C49814 = C49812 - C49799;
    const double C31688 = C31670 + C31671;
    const double C31686 = C31666 + C31667;
    const double C31685 = C31664 + C31665;
    const double C31683 = C31660 + C31661;
    const double C31680 = C31654 + C31655;
    const double C31678 = C31650 + C31651;
    const double C31676 = C31646 + C31647;
    const double C31674 = C31642 + C31643;
    const double C31892 = C31874 + C31875;
    const double C31890 = C31870 + C31871;
    const double C31888 = C31866 + C31867;
    const double C31886 = C31862 + C31863;
    const double C31885 = C31860 + C31861;
    const double C31883 = C31856 + C31857;
    const double C31881 = C31852 + C31853;
    const double C31879 = C31848 + C31849;
    const double C32086 = C32068 + C32069;
    const double C32084 = C32064 + C32065;
    const double C32082 = C32060 + C32061;
    const double C32080 = C32056 + C32057;
    const double C32079 = C32054 + C32055;
    const double C32077 = C32050 + C32051;
    const double C32075 = C32046 + C32047;
    const double C32073 = C32042 + C32043;
    const double C32248 = C32240 + C32241;
    const double C32246 = C32236 + C32237;
    const double C32411 = C32403 + C32404;
    const double C32409 = C32399 + C32400;
    const double C32630 = C32620 + C32621;
    const double C32628 = C32616 + C32617;
    const double C32626 = C32612 + C32613;
    const double C32624 = C32608 + C32609;
    const double C34750 = C34736 + C34737;
    const double C34748 = C34732 + C34733;
    const double C34747 = C34728 + C34729;
    const double C34745 = C34724 + C34725;
    const double C34742 = C34712 + C34713;
    const double C34740 = C34708 + C34709;
    const double C34956 = C34950 + C34951;
    const double C34954 = C34946 + C34947;
    const double C35632 = C35622 + C35623;
    const double C35630 = C35618 + C35619;
    const double C35629 = C35614 + C35615;
    const double C35627 = C35610 + C35611;
    const double C35968 = C35962 + C35963;
    const double C35966 = C35958 + C35959;
    const double C36174 = C36168 + C36169;
    const double C36172 = C36164 + C36165;
    const double C36832 = C36826 + C36827;
    const double C36830 = C36822 + C36823;
    const double C45438 = C45432 + C45433;
    const double C45436 = C45428 + C45429;
    const double C45596 = C45590 + C45591;
    const double C45594 = C45586 + C45587;
    const double C46096 = C46090 + C46091;
    const double C46094 = C46086 + C46087;
    const double C2367 = C2354 + C2365;
    const double C2880 = C2518 + C2879;
    const double C3033 = C2700 + C3032;
    const double C5231 = C5228 + C5229;
    const double C5945 = C5939 + C5940;
    const double C5782 = C5776 + C5777;
    const double C11462 = C11459 + C11460;
    const double C11570 = C11567 + C11568;
    const double C14390 = C14385 + C14386;
    const double C19292 = C19285 + C19286;
    const double C46097 = C46092 + C46093;
    const double C48165 = C48158 + C48159;
    const double C11906 = C11903 + C11904;
    const double C13720 = C13715 + C13716;
    const double C45439 = C45434 + C45435;
    const double C13890 = C13881 + C13882;
    const double C19960 = C19953 + C19954;
    const double C45597 = C45592 + C45593;
    const double C48833 = C48826 + C48827;
    const double C186 = C176 * C118;
    const double C381 = C369 * C118;
    const double C2877 = C369 * C2344;
    const double C8050 = C369 * C8032;
    const double C23217 = C369 * C22720;
    const double C25450 = C369 * C25432;
    const double C687 = C685 * C118;
    const double C2360 = C685 * C2344;
    const double C22736 = C685 * C22720;
    const double C570 = C558 * C118;
    const double C801 = C799 * C118;
    const double C975 = C969 * C118;
    const double C3030 = C969 * C2344;
    const double C23370 = C969 * C22720;
    const double C11563 =
        (3 * (C50114 +
              ae * (C50076 + C49849 * (C49849 * C50134 + C50108 * ae) +
                    C49849 * C50108 * ae) +
              C49848 * C50178) +
         ae * (C50088 + C49849 * (C49849 * C50148 + C50174 * ae) +
               C49849 * C50174 * ae) +
         C49848 *
             (2 * C50178 +
              ae * (C50083 + C49849 * (C49849 * C50143 + C50167 * ae) +
                    C49849 * C50167 * ae) +
              C49848 *
                  (C50173 +
                   ae * (C50134 +
                         C49849 * (C49849 * C49848 * C49920 + C50162 * ae) +
                         C49849 * C50162 * ae) +
                   C49848 * (ae * (C49909 +
                                   C49849 * (C49849 * C49920 + C49982 * ae) +
                                   C49849 * C49982 * ae) +
                             C49848 * (C49881 + ae * C49849 * C49959 +
                                       C49849 * (ae * C49959 +
                                                 C49849 * std::pow(C49853, 8) *
                                                     bs[8] * C49854)))))) /
        C49750;
    const double C50525 = C50523 + C50520;
    const double C50458 = C50457 + C50448;
    const double C382 = C370 * C50780;
    const double C2878 = C370 * C50796;
    const double C8051 = C370 * C8027;
    const double C23218 = C370 * C50796;
    const double C25451 = C370 * C25427;
    const double C688 = C686 * C50780;
    const double C2361 = C686 * C50796;
    const double C22737 = C686 * C50796;
    const double C571 = C559 * C50780;
    const double C802 = C800 * C50780;
    const double C976 = C970 * C50780;
    const double C3031 = C970 * C50796;
    const double C23371 = C970 * C50796;
    const double C19450 = C15374 * C14787;
    const double C48323 = C38097 * C14787;
    const double C10762 =
        ((((0 - (C49717 * C49749) / C49718) * ae) / C49718 - (0 * be) / C49754 +
          C49734 / C49718) /
             C49733 -
         ((C49717 * C49768 + 0) * be) / C49718) /
            C49733 -
        ((C49717 * (C49768 / C49733 -
                    ((C49717 * C49769 + C50926) * be) / C49718 + C49763) +
          C50964) *
         be) /
            C49718 +
        C49769 / C49733 - ((C49717 * C49763 + C50796) * be) / C49718;
    const double C10763 =
        (C49768 / C49733 - ((C49717 * C49769 + C50926) * be) / C49718 +
         C49763) /
            C49733 -
        ((C49717 *
              (C49769 / C49733 - ((C49717 * C49763 + C50796) * be) / C49718) +
          C50953) *
         be) /
            C49718 +
        2 * (C49763 / C49733 - (0 * be) / C49718);
    const double C10764 =
        (C49769 / C49733 - ((C49717 * C49763 + C50796) * be) / C49718) /
            C49733 -
        ((C49717 * (C49763 / C49733 - (0 * be) / C49718) + C25427) * be) /
            C49718;
    const double C25430 =
        C49768 / C49733 - ((C49717 * C49769 + C50926) * be) / C49718 + C49763;
    const double C25431 =
        C49769 / C49733 - ((C49717 * C49763 + C50796) * be) / C49718;
    const double C22741 = C22731 + C22739;
    const double C22740 = C22738 + C22728;
    const double C23219 = C22891 + C23214;
    const double C23372 = C23053 + C23367;
    const double C20910 =
        ((((0 - (C49725 * C49796) / C49718) * ae) / C49718 - (0 * be) / C49754 +
          C49782 / C49718) /
             C49733 -
         ((C49725 * C49813 + 0) * be) / C49718) /
            C49733 -
        ((C49725 * (C49813 / C49733 -
                    ((C49725 * C49814 + C50928) * be) / C49718 + C49808) +
          C50965) *
         be) /
            C49718 +
        C49814 / C49733 - ((C49725 * C49808 + C50822) * be) / C49718;
    const double C20911 =
        (C49813 / C49733 - ((C49725 * C49814 + C50928) * be) / C49718 +
         C49808) /
            C49733 -
        ((C49725 *
              (C49814 / C49733 - ((C49725 * C49808 + C50822) * be) / C49718) +
          C50956) *
         be) /
            C49718 +
        2 * (C49808 / C49733 - (0 * be) / C49718);
    const double C20912 =
        (C49814 / C49733 - ((C49725 * C49808 + C50822) * be) / C49718) /
            C49733 -
        ((C49725 * (C49808 / C49733 - (0 * be) / C49718) + C38097) * be) /
            C49718;
    const double C38098 =
        C49813 / C49733 - ((C49725 * C49814 + C50928) * be) / C49718 + C49808;
    const double C38099 =
        C49814 / C49733 - ((C49725 * C49808 + C50822) * be) / C49718;
    const double C31693 = C31684 + C31685;
    const double C31692 = C31682 + C31683;
    const double C31691 = C31680 + C31681;
    const double C31690 = C31678 + C31679;
    const double C34731 = C31888 + C31889;
    const double C34718 = C31889 + C31888;
    const double C34730 = C31886 + C31887;
    const double C34719 = C31887 + C31886;
    const double C34721 = C31884 + C31885;
    const double C34716 = C31885 + C31884;
    const double C34720 = C31882 + C31883;
    const double C34717 = C31883 + C31882;
    const double C32235 = C31880 + C31881;
    const double C35152 = C31881 + C31880;
    const double C32234 = C31878 + C31879;
    const double C35153 = C31879 + C31878;
    const double C32398 = C32074 + C32075;
    const double C32397 = C32072 + C32073;
    const double C35617 = C32626 + C32627;
    const double C35606 = C32627 + C32626;
    const double C35616 = C32624 + C32625;
    const double C35607 = C32625 + C32624;
    const double C44548 = C34747 + C34746;
    const double C44549 = C34745 + C34744;
    const double C45426 = C35969 + C35968;
    const double C45427 = C35967 + C35966;
    const double C46084 = C36833 + C36832;
    const double C46085 = C36831 + C36830;
    const double C22288 =
        (5 * (3 * C50504 + C49849 * C50525 + C50503 * ae) +
         C49849 * (4 * C50525 +
                   C49849 * (3 * C50175 +
                             C49849 * (2 * C50163 +
                                       C49849 * (C49909 +
                                                 C49849 * (C49849 * C49920 +
                                                           C49982 * ae) +
                                                 C49849 * C49982 * ae) +
                                       C50204 * ae) +
                             C50229 * ae) +
                   C50524 * ae) +
         (4 * C50503 + C49849 * C50524) * ae) /
        C49718;
    const double C11453 =
        (5 * (3 * C50431 + C49848 * C50458 + C50428 * ae) +
         C49848 * (4 * C50458 +
                   C49848 * (3 * C50455 +
                             C49848 * (2 * C50451 +
                                       C49848 * (C49948 +
                                                 C49848 * (C49848 * C49959 +
                                                           C49982 * ae) +
                                                 C50162 * ae) +
                                       C50167 * ae) +
                             C50174 * ae) +
                   C50452 * ae) +
         (4 * C50428 + C49848 * C50452) * ae) /
        C49718;
    const double C11561 =
        (3 * C50431 + C49848 * C50458 + C50428 * ae +
         (3 * C50455 +
          C49848 *
              (2 * C50451 +
               C49848 * (C49948 + C49848 * (C49848 * C49959 + C49982 * ae) +
                         C50162 * ae) +
               C50167 * ae) +
          C50174 * ae) *
             C50044) /
        C49718;
    const double C11897 =
        (C49849 *
         (4 * C50458 +
          C49848 *
              (3 * C50455 +
               C49848 * (2 * C50451 +
                         C49848 * (C49948 +
                                   C49848 * (C49848 * C49959 + C49982 * ae) +
                                   C50162 * ae) +
                         C50167 * ae) +
               C50174 * ae) +
          C50452 * ae)) /
        C49718;
    const double C12169 =
        (2 * C49849 * C50458 +
         C49849 *
             (C50458 +
              (2 * C50451 +
               C49848 * (C49948 + C49848 * (C49848 * C49959 + C49982 * ae) +
                         C50162 * ae) +
               C50167 * ae) *
                  C50044)) /
        C49718;
    const double C19456 = C19449 + C19450;
    const double C48329 = C48322 + C48323;
    const double C25446 = C172 * C25430;
    const double C25445 = C170 * C25430;
    const double C25434 = C168 * C25430;
    const double C25604 = C365 * C25430;
    const double C25603 = C364 * C25430;
    const double C25762 = C554 * C25430;
    const double C25761 = C553 * C25430;
    const double C25914 = C362 * C25430;
    const double C26066 = C551 * C25430;
    const double C26266 = C965 * C25430;
    const double C25448 = C360 * C25431;
    const double C25443 = C362 * C25431;
    const double C25436 = C364 * C25431;
    const double C25606 = C2546 * C25431;
    const double C25601 = C365 * C25431;
    const double C25764 = C2720 * C25431;
    const double C25759 = C965 * C25431;
    const double C25916 = C367 * C25431;
    const double C26068 = C967 * C25431;
    const double C26268 = C3246 * C25431;
    const double C22743 = C22730 + C22741;
    const double C22742 = C22740 + C22729;
    const double C23220 = C22890 + C23219;
    const double C23373 = C23052 + C23372;
    const double C38132 = C38098 * C133;
    const double C38126 = C38098 * C122;
    const double C38124 = C38098 * C121;
    const double C38118 = C38098 * C131;
    const double C38108 = C38098 * C129;
    const double C38102 = C38098 * C120;
    const double C38320 = C38098 * C315;
    const double C38314 = C38098 * C299;
    const double C38312 = C38098 * C296;
    const double C38306 = C38098 * C308;
    const double C38502 = C38098 * C504;
    const double C38496 = C38098 * C488;
    const double C38494 = C38098 * C485;
    const double C38488 = C38098 * C497;
    const double C38672 = C38098 * C306;
    const double C38666 = C38098 * C295;
    const double C38836 = C38098 * C495;
    const double C38830 = C38098 * C484;
    const double C39048 = C38098 * C940;
    const double C39042 = C38098 * C933;
    const double C47240 = C38098 * C298;
    const double C47234 = C38098 * C313;
    const double C47224 = C38098 * C310;
    const double C47218 = C38098 * C297;
    const double C47896 = C38098 * C932;
    const double C47890 = C38098 * C938;
    const double C48154 = C38098 * C1160;
    const double C48148 = C38098 * C1153;
    const double C48318 = C38098 * C1274;
    const double C48312 = C38098 * C1267;
    const double C48822 = C38098 * C1621;
    const double C48816 = C38098 * C1614;
    const double C38134 = C38099 * C493;
    const double C38128 = C38099 * C483;
    const double C38122 = C38099 * C484;
    const double C38116 = C38099 * C495;
    const double C38110 = C38099 * C497;
    const double C38104 = C38099 * C485;
    const double C38322 = C38099 * C1619;
    const double C38316 = C38099 * C1613;
    const double C38310 = C38099 * C933;
    const double C38304 = C38099 * C940;
    const double C38504 = C38099 * C1903;
    const double C38498 = C38099 * C1897;
    const double C38492 = C38099 * C488;
    const double C38486 = C38099 * C504;
    const double C38674 = C38099 * C942;
    const double C38668 = C38099 * C934;
    const double C38838 = C38099 * C506;
    const double C38832 = C38099 * C489;
    const double C39050 = C38099 * C1272;
    const double C39044 = C38099 * C1266;
    const double C47238 = C38099 * C1614;
    const double C47232 = C38099 * C1621;
    const double C47226 = C38099 * C938;
    const double C47220 = C38099 * C932;
    const double C47894 = C38099 * C1267;
    const double C47888 = C38099 * C1274;
    const double C48156 = C38099 * C4172;
    const double C48150 = C38099 * C4167;
    const double C48320 = C38099 * C4580;
    const double C48314 = C38099 * C4575;
    const double C48824 = C38099 * C3668;
    const double C48818 = C38099 * C3663;
    const double C31697 = C31693 * C118;
    const double C31696 = C31692 * C50780;
    const double C31695 = C31691 * C50780;
    const double C31694 = C31690 * C118;
    const double C32245 = C32235 * C118;
    const double C32244 = C32234 * C50780;
    const double C32408 = C32398 * C118;
    const double C32407 = C32397 * C50780;
    const double C38153 = C38132 + C38133;
    const double C38150 = C38126 + C38127;
    const double C38149 = C38124 + C38125;
    const double C38146 = C38118 + C38119;
    const double C38141 = C38108 + C38109;
    const double C38138 = C38102 + C38103;
    const double C38335 = C38320 + C38321;
    const double C38332 = C38314 + C38315;
    const double C38331 = C38312 + C38313;
    const double C38328 = C38306 + C38307;
    const double C38517 = C38502 + C38503;
    const double C38514 = C38496 + C38497;
    const double C38513 = C38494 + C38495;
    const double C38510 = C38488 + C38489;
    const double C38681 = C38672 + C38673;
    const double C38678 = C38666 + C38667;
    const double C38845 = C38836 + C38837;
    const double C38842 = C38830 + C38831;
    const double C39057 = C39048 + C39049;
    const double C39054 = C39042 + C39043;
    const double C47253 = C47240 + C47241;
    const double C47250 = C47234 + C47235;
    const double C47245 = C47224 + C47225;
    const double C47242 = C47218 + C47219;
    const double C47903 = C47896 + C47897;
    const double C47900 = C47890 + C47891;
    const double C48163 = C48154 + C48155;
    const double C48160 = C48148 + C48149;
    const double C48327 = C48318 + C48319;
    const double C48324 = C48312 + C48313;
    const double C48831 = C48822 + C48823;
    const double C48828 = C48816 + C48817;
    const double C38154 = C38134 + C38135;
    const double C38151 = C38128 + C38129;
    const double C38148 = C38122 + C38123;
    const double C38145 = C38116 + C38117;
    const double C38142 = C38110 + C38111;
    const double C38139 = C38104 + C38105;
    const double C38336 = C38322 + C38323;
    const double C38333 = C38316 + C38317;
    const double C38330 = C38310 + C38311;
    const double C38327 = C38304 + C38305;
    const double C38518 = C38504 + C38505;
    const double C38515 = C38498 + C38499;
    const double C38512 = C38492 + C38493;
    const double C38509 = C38486 + C38487;
    const double C38682 = C38674 + C38675;
    const double C38679 = C38668 + C38669;
    const double C38846 = C38838 + C38839;
    const double C38843 = C38832 + C38833;
    const double C39058 = C39050 + C39051;
    const double C39055 = C39044 + C39045;
    const double C47252 = C47238 + C47239;
    const double C47249 = C47232 + C47233;
    const double C47246 = C47226 + C47227;
    const double C47243 = C47220 + C47221;
    const double C47902 = C47894 + C47895;
    const double C47899 = C47888 + C47889;
    const double C48164 = C48156 + C48157;
    const double C48161 = C48150 + C48151;
    const double C48328 = C48320 + C48321;
    const double C48325 = C48314 + C48315;
    const double C48832 = C48824 + C48825;
    const double C48829 = C48818 + C48819;
    const double C31699 = C31696 + C31697;
    const double C31698 = C31694 + C31695;
    const double C32250 = C32244 + C32245;
    const double C32413 = C32407 + C32408;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50685 * C50916 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50685 * C50721) *
              C50958 +
          (((C22897 + C22896 + C22895 + C22894) * C50957 +
            (C22893 + C22892 + C22891 + C22890) * C50941 +
            (C23215 + C23216 + C23217 + C23218) * C22718) *
               C50685 * C50721 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50685 * C50916) *
              C50959 +
          ((C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
            (C22734 + C22735 + C22736 + C22737) * C22718) *
               C50685 * C50916 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C22720 + C686 * C22714 +
             C685 * C22719) *
                C22718 +
            (C23218 + C23217 + C23216 + C23215) * C50941 + C23220 * C50957) *
               C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C22719 +
              (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
              C2543 * C50796) *
                 C50957 +
             (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
                C50917 -
            (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
             (C3244 * C50796 + C3245 * C22720 +
              (C117 * C499 + C50810 * C516) * C22714 +
              (C117 * C486 + C50810 * C500) * C22719) *
                 C50957) *
                C50749) *
               C50916 +
           (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
              C4183 * C50796) *
                 C50957 +
             (C23568 + C23569 + C23570 + C23571) * C50941 +
             (C23572 + C23573 + C23574 + C23575) * C22718) *
                C50749 -
            (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
             (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
              C2542 * C22719) *
                 C50957) *
                C50917) *
               C50721) *
              C292 +
          ((((C23059 + C23058 + C23057 + C23056) * C50957 +
             (C23055 + C23054 + C23053 + C23052) * C50941 +
             (C23368 + C23369 + C23370 + C23371) * C22718) *
                C50749 -
            (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
             (C22725 + C22724 + C22723 + C22722) * C50957) *
                C50917) *
               C50916 +
           (((C22897 + C22896 + C22895 + C22894) * C50957 +
             (C22893 + C22892 + C22891 + C22890) * C50941 +
             (C23215 + C23216 + C23217 + C23218) * C22718) *
                C50917 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C22720 + C970 * C22714 +
              C969 * C22719) *
                 C22718 +
             (C23575 + C23574 + C23573 + C23572) * C50941 +
             (C23571 + C23570 + C23569 + C23568) * C50957) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50685 * C289 -
           ((C22890 + C22891 + C22892 + C22893) * C22718 +
            (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50685 * C290 +
           ((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 +
             C3515 * C50796) *
                C50957 +
            (C22898 + C22899 + C22900 + C22901) * C50941 +
            (C22902 + C22903 + C22904 + C22905) * C22718) *
               C50685 * C291) *
              C292 +
          (((C22897 + C22896 + C22895 + C22894) * C50957 +
            (C22893 + C22892 + C22891 + C22890) * C50941 +
            (C360 * C22719 + C359 * C22714 + C369 * C22720 + C370 * C50796) *
                C22718) *
               C50685 * C290 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50685 * C289 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C22720 + C370 * C22714 +
             C369 * C22719) *
                C22718 +
            (C22905 + C22904 + C22903 + C22902) * C50941 +
            (C22901 + C22900 + C22899 + C22898) * C50957) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C22719 +
            (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
            C2543 * C50796) *
               C50957 +
           (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
              C50685 * C50669 * C113 -
          (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
           (C22725 + C22724 + C22723 + C22722) * C50957) *
              C50685 * C50669 * C114 +
          (C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
           (C22734 + C22735 + C22736 + C22737) * C22718) *
              C50685 * C50669 * C115 -
          (((C117 * C675 + C50810 * C677) * C50796 +
            (C117 * C674 + C50810 * C676) * C22720 + C177 * C22714 +
            C176 * C22719) *
               C22718 +
           (C22737 + C22736 + C22735 + C22734) * C50941 + C22743 * C50957) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C480 -
           ((C23052 + C23053 + C23054 + C23055) * C22718 +
            (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C22719 +
             (C117 * C502 + C50810 * C517) * C22714 + C3678 * C22720 +
             C3679 * C50796) *
                C50957 +
            (C23060 + C23061 + C23062 + C23063) * C50941 +
            (C23064 + C23065 + C23066 + C23067) * C22718) *
               C482) *
              C50669 * C292 +
          (((C23059 + C23058 + C23057 + C23056) * C50957 +
            (C23055 + C23054 + C23053 + C23052) * C50941 +
            (C549 * C22719 + C548 * C22714 + C969 * C22720 + C970 * C50796) *
                C22718) *
               C481 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C480 -
           (((C117 * C1268 + C50810 * C1276) * C50796 +
             (C117 * C1264 + C50810 * C1269) * C22720 + C559 * C22714 +
             C558 * C22719) *
                C22718 +
            (C23067 + C23066 + C23065 + C23064) * C50941 +
            (C23063 + C23062 + C23061 + C23060) * C50957) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50917 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50749) *
              C50669 * C50958 +
          (((C23059 + C23058 + C23057 + C23056) * C50957 +
            (C23055 + C23054 + C23053 + C23052) * C50941 +
            (C23368 + C23369 + C23370 + C23371) * C22718) *
               C50749 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50917) *
              C50669 * C50959 +
          ((C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
            (C22734 + C22735 + C22736 + C22737) * C22718) *
               C50917 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C22720 + C800 * C22714 +
             C799 * C22719) *
                C22718 +
            (C23371 + C23370 + C23369 + C23368) * C50941 + C23373 * C50957) *
               C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C22719 +
            (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
            C2543 * C50796) *
               C50957 +
           (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
              C50685 * C50669 * C113 -
          (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
           (C22725 + C22724 + C22723 + C22722) * C50957) *
              C50685 * C50669 * C114 +
          (C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
           (C22734 + C22735 + C22736 + C22737) * C22718) *
              C50685 * C50669 * C115 -
          (((C117 * C675 + C50810 * C677) * C50796 +
            (C117 * C674 + C50810 * C676) * C22720 + C177 * C22714 +
            C176 * C22719) *
               C22718 +
           (C22737 + C22736 + C22735 + C22734) * C50941 + C22743 * C50957) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50685 * C289 -
           ((C22890 + C22891 + C22892 + C22893) * C22718 +
            (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50685 * C290 +
           ((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 +
             C3515 * C50796) *
                C50957 +
            (C22898 + C22899 + C22900 + C22901) * C50941 +
            (C22902 + C22903 + C22904 + C22905) * C22718) *
               C50685 * C291) *
              C292 +
          (((C22897 + C22896 + C22895 + C22894) * C50957 +
            (C22893 + C22892 + C22891 + C22890) * C50941 +
            (C360 * C22719 + C359 * C22714 + C369 * C22720 + C370 * C50796) *
                C22718) *
               C50685 * C290 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50685 * C289 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C22720 + C370 * C22714 +
             C369 * C22719) *
                C22718 +
            (C22905 + C22904 + C22903 + C22902) * C50941 +
            (C22901 + C22900 + C22899 + C22898) * C50957) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50685 * C50960 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50685 * C50961 +
           ((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 +
             C3515 * C50796) *
                C50957 +
            (C22898 + C22899 + C22900 + C22901) * C50941 +
            (C22902 + C22903 + C22904 + C22905) * C22718) *
               C50685 * C1380) *
              C50908 +
          (((C22897 + C22896 + C22895 + C22894) * C50957 +
            (C22893 + C22892 + C22891 + C22890) * C50941 +
            (C23215 + C23216 + C23217 + C23218) * C22718) *
               C50685 * C50961 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50685 * C50960 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C22720 + C370 * C22714 +
             C369 * C22719) *
                C22718 +
            (C22905 + C22904 + C22903 + C22902) * C50941 +
            (C22901 + C22900 + C22899 + C22898) * C50957) *
               C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50917 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50749) *
              C50960 +
          (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
             C4183 * C50796) *
                C50957 +
            (C23568 + C23569 + C23570 + C23571) * C50941 +
            (C23572 + C23573 + C23574 + C23575) * C22718) *
               C50749 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50917) *
              C50961 +
          (((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 +
             C3515 * C50796) *
                C50957 +
            (C22898 + C22899 + C22900 + C22901) * C50941 +
            (C22902 + C22903 + C22904 + C22905) * C22718) *
               C50917 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C22720 + C3249 * C22714 +
             C3248 * C22719) *
                C22718 +
            (C8887 * C50796 + C8886 * C22720 + C3247 * C22714 +
             C3246 * C22719) *
                C50941 +
            (C9807 * C50796 + C9806 * C22720 + C4183 * C22714 +
             C4182 * C22719) *
                C50957) *
               C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C22719 +
            (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
            C2543 * C50796) *
               C50957 +
           (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
              C50685 * C1145 -
          (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
           (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 + C2542 * C22719) *
               C50957) *
              C50685 * C1146 +
          ((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 + C3515 * C50796) *
               C50957 +
           (C22898 + C22899 + C22900 + C22901) * C50941 +
           (C22902 + C22903 + C22904 + C22905) * C22718) *
              C50685 * C1147 -
          (((C117 * C3500 + C50810 * C3506) * C50796 +
            (C117 * C3497 + C50810 * C3501) * C22720 + C2549 * C22714 +
            C2548 * C22719) *
               C22718 +
           (C8213 * C50796 + C8212 * C22720 + C2547 * C22714 + C2546 * C22719) *
               C50941 +
           (C9147 * C50796 + C9146 * C22720 + C3515 * C22714 + C3514 * C22719) *
               C50957) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50685 * C1074 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50685 * C50721) *
              C1076 +
          (((C22897 + C22896 + C22895 + C22894) * C50957 +
            (C22893 + C22892 + C22891 + C22890) * C50941 +
            (C23215 + C23216 + C23217 + C23218) * C22718) *
               C50685 * C50721 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50685 * C1074) *
              C1077 +
          ((C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
            (C22734 + C22735 + C22736 + C22737) * C22718) *
               C50685 * C1074 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C22720 + C686 * C22714 +
             C685 * C22719) *
                C22718 +
            (C23218 + C23217 + C23216 + C23215) * C50941 + C23220 * C50957) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C480 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C22719 +
             (C117 * C502 + C50810 * C517) * C22714 + C3678 * C22720 +
             C3679 * C50796) *
                C50957 +
            (C23060 + C23061 + C23062 + C23063) * C50941 +
            (C23064 + C23065 + C23066 + C23067) * C22718) *
               C482) *
              C1074 +
          (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
             C4183 * C50796) *
                C50957 +
            (C23568 + C23569 + C23570 + C23571) * C50941 +
            (C23572 + C23573 + C23574 + C23575) * C22718) *
               C481 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C480 -
           (((C117 * C3664 + C50810 * C3670) * C50796 +
             (C117 * C3661 + C50810 * C3665) * C22720 + C2723 * C22714 +
             C2722 * C22719) *
                C22718 +
            (C8377 * C50796 + C8376 * C22720 + C2721 * C22714 +
             C2720 * C22719) *
                C50941 +
            (C9307 * C50796 + C9306 * C22720 + C3679 * C22714 +
             C3678 * C22719) *
                C50957) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C22719 +
              (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
              C2543 * C50796) *
                 C50957 +
             (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
                C50917 -
            (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
             (C3244 * C50796 + C3245 * C22720 +
              (C117 * C499 + C50810 * C516) * C22714 +
              (C117 * C486 + C50810 * C500) * C22719) *
                 C50957) *
                C50749) *
               C1074 +
           (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
              C4183 * C50796) *
                 C50957 +
             (C23568 + C23569 + C23570 + C23571) * C50941 +
             (C23572 + C23573 + C23574 + C23575) * C22718) *
                C50749 -
            (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
             (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
              C2542 * C22719) *
                 C50957) *
                C50917) *
               C50721) *
              C50908 +
          ((((C23059 + C23058 + C23057 + C23056) * C50957 +
             (C23055 + C23054 + C23053 + C23052) * C50941 +
             (C23368 + C23369 + C23370 + C23371) * C22718) *
                C50749 -
            (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
             (C22725 + C22724 + C22723 + C22722) * C50957) *
                C50917) *
               C1074 +
           (((C22897 + C22896 + C22895 + C22894) * C50957 +
             (C22893 + C22892 + C22891 + C22890) * C50941 +
             (C23215 + C23216 + C23217 + C23218) * C22718) *
                C50917 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C22720 + C970 * C22714 +
              C969 * C22719) *
                 C22718 +
             (C23575 + C23574 + C23573 + C23572) * C50941 +
             (C23571 + C23570 + C23569 + C23568) * C50957) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50685 * C1074 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50685 * C50721) *
              C1076 +
          (((C22897 + C22896 + C22895 + C22894) * C50957 +
            (C22893 + C22892 + C22891 + C22890) * C50941 +
            (C23215 + C23216 + C23217 + C23218) * C22718) *
               C50685 * C50721 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50685 * C1074) *
              C1077 +
          ((C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
            (C22734 + C22735 + C22736 + C22737) * C22718) *
               C50685 * C1074 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C22720 + C686 * C22714 +
             C685 * C22719) *
                C22718 +
            (C23218 + C23217 + C23216 + C23215) * C50941 + C23220 * C50957) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C22719 +
            (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
            C2543 * C50796) *
               C50957 +
           (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
              C50685 * C1145 -
          (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
           (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 + C2542 * C22719) *
               C50957) *
              C50685 * C1146 +
          ((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 + C3515 * C50796) *
               C50957 +
           (C22898 + C22899 + C22900 + C22901) * C50941 +
           (C22902 + C22903 + C22904 + C22905) * C22718) *
              C50685 * C1147 -
          (((C117 * C3500 + C50810 * C3506) * C50796 +
            (C117 * C3497 + C50810 * C3501) * C22720 + C2549 * C22714 +
            C2548 * C22719) *
               C22718 +
           (C8213 * C50796 + C8212 * C22720 + C2547 * C22714 + C2546 * C22719) *
               C50941 +
           (C9147 * C50796 + C9146 * C22720 + C3515 * C22714 + C3514 * C22719) *
               C50957) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C22719 +
              (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
              C2543 * C50796) *
                 C50957 +
             (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
                C1725 -
            (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
             (C3244 * C50796 + C3245 * C22720 +
              (C117 * C499 + C50810 * C516) * C22714 +
              (C117 * C486 + C50810 * C500) * C22719) *
                 C50957) *
                C50749) *
               C50916 +
           (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
              C4183 * C50796) *
                 C50957 +
             (C23568 + C23569 + C23570 + C23571) * C50941 +
             (C23572 + C23573 + C23574 + C23575) * C22718) *
                C50749 -
            (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
             (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
              C2542 * C22719) *
                 C50957) *
                C1725) *
               C50721) *
              C50908 +
          ((((C23059 + C23058 + C23057 + C23056) * C50957 +
             (C23055 + C23054 + C23053 + C23052) * C50941 +
             (C23368 + C23369 + C23370 + C23371) * C22718) *
                C50749 -
            (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
             (C22725 + C22724 + C22723 + C22722) * C50957) *
                C1725) *
               C50916 +
           (((C22897 + C22896 + C22895 + C22894) * C50957 +
             (C22893 + C22892 + C22891 + C22890) * C50941 +
             (C23215 + C23216 + C23217 + C23218) * C22718) *
                C1725 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C22720 + C970 * C22714 +
              C969 * C22719) *
                 C22718 +
             (C23575 + C23574 + C23573 + C23572) * C50941 +
             (C23571 + C23570 + C23569 + C23568) * C50957) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50962 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C22719 +
             (C117 * C502 + C50810 * C517) * C22714 + C3678 * C22720 +
             C3679 * C50796) *
                C50957 +
            (C23060 + C23061 + C23062 + C23063) * C50941 +
            (C23064 + C23065 + C23066 + C23067) * C22718) *
               C2141) *
              C50916 +
          (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
             C4183 * C50796) *
                C50957 +
            (C23568 + C23569 + C23570 + C23571) * C50941 +
            (C23572 + C23573 + C23574 + C23575) * C22718) *
               C50963 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C50962 -
           (((C117 * C3664 + C50810 * C3670) * C50796 +
             (C117 * C3661 + C50810 * C3665) * C22720 + C2723 * C22714 +
             C2722 * C22719) *
                C22718 +
            (C8377 * C50796 + C8376 * C22720 + C2721 * C22714 +
             C2720 * C22719) *
                C50941 +
            (C9307 * C50796 + C9306 * C22720 + C3679 * C22714 +
             C3678 * C22719) *
                C50957) *
               C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C1725 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50749) *
              C289 +
          (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
             C4183 * C50796) *
                C50957 +
            (C23568 + C23569 + C23570 + C23571) * C50941 +
            (C23572 + C23573 + C23574 + C23575) * C22718) *
               C50749 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C1725) *
              C290 +
          (((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 +
             C3515 * C50796) *
                C50957 +
            (C22898 + C22899 + C22900 + C22901) * C50941 +
            (C22902 + C22903 + C22904 + C22905) * C22718) *
               C1725 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C22720 + C3249 * C22714 +
             C3248 * C22719) *
                C22718 +
            (C8887 * C50796 + C8886 * C22720 + C3247 * C22714 +
             C3246 * C22719) *
                C50941 +
            (C9807 * C50796 + C9806 * C22720 + C4183 * C22714 +
             C4182 * C22719) *
                C50957) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C1725 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50749) *
              C50669 * C1076 +
          (((C23059 + C23058 + C23057 + C23056) * C50957 +
            (C23055 + C23054 + C23053 + C23052) * C50941 +
            (C23368 + C23369 + C23370 + C23371) * C22718) *
               C50749 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C1725) *
              C50669 * C1077 +
          ((C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
            (C22734 + C22735 + C22736 + C22737) * C22718) *
               C1725 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C22720 + C800 * C22714 +
             C799 * C22719) *
                C22718 +
            (C23371 + C23370 + C23369 + C23368) * C50941 + C23373 * C50957) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C22719 +
            (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
            C2543 * C50796) *
               C50957 +
           (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
              C1891 -
          (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
           (C3244 * C50796 + C3245 * C22720 +
            (C117 * C499 + C50810 * C516) * C22714 +
            (C117 * C486 + C50810 * C500) * C22719) *
               C50957) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C22719 +
            (C117 * C502 + C50810 * C517) * C22714 + C3678 * C22720 +
            C3679 * C50796) *
               C50957 +
           (C23060 + C23061 + C23062 + C23063) * C50941 +
           (C23064 + C23065 + C23066 + C23067) * C22718) *
              C1893 -
          (((C117 * C4576 + C50810 * C4582) * C50796 +
            (C117 * C4573 + C50810 * C4577) * C22720 +
            (C117 * C1901 + C50810 * C1908) * C22714 +
            (C117 * C1896 + C50810 * C1902) * C22719) *
               C22718 +
           ((C117 * C4578 + C50810 * C4583) * C50796 +
            (C117 * C4574 + C50810 * C4579) * C22720 +
            (C117 * C1903 + C50810 * C1909) * C22714 +
            (C117 * C1897 + C50810 * C1904) * C22719) *
               C50941 +
           ((C117 * C4580 + C50810 * C4584) * C50796 +
            (C117 * C4575 + C50810 * C4581) * C22720 +
            (C117 * C1905 + C50810 * C1910) * C22714 +
            (C117 * C1898 + C50810 * C1906) * C22719) *
               C50957) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C50962 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C22719 +
             (C117 * C502 + C50810 * C517) * C22714 + C3678 * C22720 +
             C3679 * C50796) *
                C50957 +
            (C23060 + C23061 + C23062 + C23063) * C50941 +
            (C23064 + C23065 + C23066 + C23067) * C22718) *
               C2141) *
              C50669 * C50908 +
          (((C23059 + C23058 + C23057 + C23056) * C50957 +
            (C23055 + C23054 + C23053 + C23052) * C50941 +
            (C23368 + C23369 + C23370 + C23371) * C22718) *
               C50963 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C50962 -
           (((C117 * C1268 + C50810 * C1276) * C50796 +
             (C117 * C1264 + C50810 * C1269) * C22720 + C559 * C22714 +
             C558 * C22719) *
                C22718 +
            (C23067 + C23066 + C23065 + C23064) * C50941 +
            (C23063 + C23062 + C23061 + C23060) * C50957) *
               C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C1725 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50749) *
              C50669 * C1076 +
          (((C23059 + C23058 + C23057 + C23056) * C50957 +
            (C23055 + C23054 + C23053 + C23052) * C50941 +
            (C23368 + C23369 + C23370 + C23371) * C22718) *
               C50749 -
           (C22743 * C22718 + (C22729 + C22728 + C22727 + C22726) * C50941 +
            (C22725 + C22724 + C22723 + C22722) * C50957) *
               C1725) *
              C50669 * C1077 +
          ((C22742 * C50957 + (C22733 + C22732 + C22731 + C22730) * C50941 +
            (C22734 + C22735 + C22736 + C22737) * C22718) *
               C1725 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C22720 + C800 * C22714 +
             C799 * C22719) *
                C22718 +
            (C23371 + C23370 + C23369 + C23368) * C50941 + C23373 * C50957) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C22719 +
             (C117 * C127 + C50810 * C140) * C22714 + C2542 * C22720 +
             C2543 * C50796) *
                C50957 +
            (C22722 + C22723 + C22724 + C22725) * C50941 + C22742 * C22718) *
               C1725 -
           (C23373 * C22718 + (C23056 + C23057 + C23058 + C23059) * C50941 +
            (C3244 * C50796 + C3245 * C22720 +
             (C117 * C499 + C50810 * C516) * C22714 +
             (C117 * C486 + C50810 * C500) * C22719) *
                C50957) *
               C50749) *
              C289 +
          (((C3245 * C22719 + C3244 * C22714 + C4182 * C22720 +
             C4183 * C50796) *
                C50957 +
            (C23568 + C23569 + C23570 + C23571) * C50941 +
            (C23572 + C23573 + C23574 + C23575) * C22718) *
               C50749 -
           (C23220 * C22718 + (C22894 + C22895 + C22896 + C22897) * C50941 +
            (C2544 * C50796 + C2545 * C22720 + C2543 * C22714 +
             C2542 * C22719) *
                C50957) *
               C1725) *
              C290 +
          (((C2545 * C22719 + C2544 * C22714 + C3514 * C22720 +
             C3515 * C50796) *
                C50957 +
            (C22898 + C22899 + C22900 + C22901) * C50941 +
            (C22902 + C22903 + C22904 + C22905) * C22718) *
               C1725 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C22720 + C3249 * C22714 +
             C3248 * C22719) *
                C22718 +
            (C8887 * C50796 + C8886 * C22720 + C3247 * C22714 +
             C3246 * C22719) *
                C50941 +
            (C9807 * C50796 + C9806 * C22720 + C4183 * C22714 +
             C4182 * C22719) *
                C50957) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50685 * C50916 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50685 * C50721) *
              C50958 +
          (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
            (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
               C50685 * C50721 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50685 * C50916) *
              C50959 +
          (((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
            (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
               C50685 * C50916 -
           (((C117 * C1154 + C50810 * C1162) * C25427 +
             (C117 * C1150 + C50810 * C1155) * C25432 + C370 * C50953 +
             C369 * C25431 + C359 * C50964 + C360 * C25430) *
                C50628 +
            (C25919 + C25918 + C25917 + C25916 + C25915 + C25914) * C25428) *
               C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C25430 +
              (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
              C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                 C25428 +
             (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
                C50917 -
            ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
             (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 +
              C3245 * C25431 + (C117 * C499 + C50810 * C516) * C50964 +
              (C117 * C486 + C50810 * C500) * C25430) *
                 C25428) *
                C50749) *
               C50916 +
           (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 +
              C4183 * C50953 + C9806 * C25432 + C9807 * C25427) *
                 C25428 +
             (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
                C50749 -
            ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
             (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 +
              C2545 * C25431 + C2543 * C50964 + C2542 * C25430) *
                 C25428) *
                C50917) *
               C50721) *
              C292 +
          ((((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
             (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
                C50749 -
            ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
             (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
                C50917) *
               C50916 +
           (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
             (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
                C50917 -
            (((C117 * C4168 + C50810 * C4174) * C25427 +
              (C117 * C4165 + C50810 * C4169) * C25432 + C3249 * C50953 +
              C3248 * C25431 + C968 * C50964 + C967 * C25430) *
                 C50628 +
             (C26271 + C26270 + C26269 + C26268 + C26267 + C26266) * C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50685 * C289 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50685 * C290 +
           ((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
             C9146 * C25432 + C9147 * C25427) *
                C25428 +
            (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
               C50685 * C291) *
              C292 +
          (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
            (C362 * C25430 + C361 * C50964 + C367 * C25431 + C368 * C50953 +
             C2548 * C25432 + C2549 * C25427) *
                C50628) *
               C50685 * C290 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50685 * C289 -
           (((C117 * C3500 + C50810 * C3506) * C25427 +
             (C117 * C3497 + C50810 * C3501) * C25432 + C2549 * C50953 +
             C2548 * C25431 + C368 * C50964 + C367 * C25430) *
                C50628 +
            (C25609 + C25608 + C25607 + C25606 + C25605 + C25604) * C25428) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C25430 +
            (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
            C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
               C25428 +
           (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
              C50685 * C50669 * C113 -
          ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
           (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
              C50685 * C50669 * C114 +
          ((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
           (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
              C50685 * C50669 * C115 -
          (((C117 * C322 + C50810 * C333) * C25427 +
            (C117 * C303 + C50810 * C323) * C25432 + C686 * C50953 +
            C685 * C25431 + C174 * C50964 + C175 * C25430) *
               C50628 +
           (C25451 + C25450 + C25449 + C25448 + C25447 + C25446) * C25428) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C480 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C25430 +
             (C117 * C502 + C50810 * C517) * C50964 + C3678 * C25431 +
             C3679 * C50953 + C9306 * C25432 + C9307 * C25427) *
                C25428 +
            (C25762 + C25763 + C25764 + C25765 + C25766 + C25767) * C50628) *
               C482) *
              C50669 * C292 +
          (((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
            (C551 * C25430 + C550 * C50964 + C967 * C25431 + C968 * C50953 +
             C3248 * C25432 + C3249 * C25427) *
                C50628) *
               C481 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C480 -
           (((C117 * C3664 + C50810 * C3670) * C25427 +
             (C117 * C3661 + C50810 * C3665) * C25432 + C2723 * C50953 +
             C2722 * C25431 + C557 * C50964 + C556 * C25430) *
                C50628 +
            (C25767 + C25766 + C25765 + C25764 + C25763 + C25762) * C25428) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50917 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50749) *
              C50669 * C50958 +
          (((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
            (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
               C50749 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50917) *
              C50669 * C50959 +
          (((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
            (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
               C50917 -
           (((C117 * C1615 + C50810 * C1623) * C25427 +
             (C117 * C1611 + C50810 * C1616) * C25432 + C970 * C50953 +
             C969 * C25431 + C548 * C50964 + C549 * C25430) *
                C50628 +
            (C26071 + C26070 + C26069 + C26068 + C26067 + C26066) * C25428) *
               C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C25430 +
            (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
            C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
               C25428 +
           (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
              C50685 * C50669 * C113 -
          ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
           (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
              C50685 * C50669 * C114 +
          ((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
           (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
              C50685 * C50669 * C115 -
          (((C117 * C322 + C50810 * C333) * C25427 +
            (C117 * C303 + C50810 * C323) * C25432 + C686 * C50953 +
            C685 * C25431 + C174 * C50964 + C175 * C25430) *
               C50628 +
           (C25451 + C25450 + C25449 + C25448 + C25447 + C25446) * C25428) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50685 * C289 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50685 * C290 +
           ((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
             C9146 * C25432 + C9147 * C25427) *
                C25428 +
            (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
               C50685 * C291) *
              C292 +
          (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
            (C362 * C25430 + C361 * C50964 + C367 * C25431 + C368 * C50953 +
             C2548 * C25432 + C2549 * C25427) *
                C50628) *
               C50685 * C290 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50685 * C289 -
           (((C117 * C3500 + C50810 * C3506) * C25427 +
             (C117 * C3497 + C50810 * C3501) * C25432 + C2549 * C50953 +
             C2548 * C25431 + C368 * C50964 + C367 * C25430) *
                C50628 +
            (C25609 + C25608 + C25607 + C25606 + C25605 + C25604) * C25428) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50685 * C50960 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50685 * C50961 +
           ((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
             C9146 * C25432 + C9147 * C25427) *
                C25428 +
            (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
               C50685 * C1380) *
              C50908 +
          (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
            (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
               C50685 * C50961 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50685 * C50960 -
           (((C117 * C3500 + C50810 * C3506) * C25427 +
             (C117 * C3497 + C50810 * C3501) * C25432 + C2549 * C50953 +
             C2548 * C25431 + C368 * C50964 + C367 * C25430) *
                C50628 +
            (C25609 + C25608 + C25607 + C25606 + C25605 + C25604) * C25428) *
               C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50917 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50749) *
              C50960 +
          (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 + C4183 * C50953 +
             C9806 * C25432 + C9807 * C25427) *
                C25428 +
            (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
               C50749 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50917) *
              C50961 +
          (((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
             C9146 * C25432 + C9147 * C25427) *
                C25428 +
            (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
               C50917 -
           (((C117 * C9795 + C50810 * C9799) * C25427 +
             (C117 * C9793 + C50810 * C9796) * C25432 + C8887 * C50953 +
             C8886 * C25431 + C3247 * C50964 + C3246 * C25430) *
                C50628 +
            (C11906 * C25427 + C11905 * C25432 + C9807 * C50953 +
             C9806 * C25431 + C4183 * C50964 + C4182 * C25430) *
                C25428) *
               C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C25430 +
            (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
            C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
               C25428 +
           (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
              C50685 * C1145 -
          ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
           (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
            C2543 * C50964 + C2542 * C25430) *
               C25428) *
              C50685 * C1146 +
          ((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
            C9146 * C25432 + C9147 * C25427) *
               C25428 +
           (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
              C50685 * C1147 -
          (((C117 * C9135 + C50810 * C9139) * C25427 +
            (C117 * C9133 + C50810 * C9136) * C25432 + C8213 * C50953 +
            C8212 * C25431 + C2547 * C50964 + C2546 * C25430) *
               C50628 +
           (C11462 * C25427 + C11461 * C25432 + C9147 * C50953 +
            C9146 * C25431 + C3515 * C50964 + C3514 * C25430) *
               C25428) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50685 * C1074 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50685 * C50721) *
              C1076 +
          (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
            (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
               C50685 * C50721 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50685 * C1074) *
              C1077 +
          (((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
            (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
               C50685 * C1074 -
           (((C117 * C1154 + C50810 * C1162) * C25427 +
             (C117 * C1150 + C50810 * C1155) * C25432 + C370 * C50953 +
             C369 * C25431 + C359 * C50964 + C360 * C25430) *
                C50628 +
            (C25919 + C25918 + C25917 + C25916 + C25915 + C25914) * C25428) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C480 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C25430 +
             (C117 * C502 + C50810 * C517) * C50964 + C3678 * C25431 +
             C3679 * C50953 + C9306 * C25432 + C9307 * C25427) *
                C25428 +
            (C25762 + C25763 + C25764 + C25765 + C25766 + C25767) * C50628) *
               C482) *
              C1074 +
          (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 + C4183 * C50953 +
             C9806 * C25432 + C9807 * C25427) *
                C25428 +
            (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
               C481 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C480 -
           (((C117 * C9295 + C50810 * C9299) * C25427 +
             (C117 * C9293 + C50810 * C9296) * C25432 + C8377 * C50953 +
             C8376 * C25431 + C2721 * C50964 + C2720 * C25430) *
                C50628 +
            (C11570 * C25427 + C11569 * C25432 + C9307 * C50953 +
             C9306 * C25431 + C3679 * C50964 + C3678 * C25430) *
                C25428) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C25430 +
              (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
              C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                 C25428 +
             (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
                C50917 -
            ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
             (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 +
              C3245 * C25431 + (C117 * C499 + C50810 * C516) * C50964 +
              (C117 * C486 + C50810 * C500) * C25430) *
                 C25428) *
                C50749) *
               C1074 +
           (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 +
              C4183 * C50953 + C9806 * C25432 + C9807 * C25427) *
                 C25428 +
             (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
                C50749 -
            ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
             (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 +
              C2545 * C25431 + C2543 * C50964 + C2542 * C25430) *
                 C25428) *
                C50917) *
               C50721) *
              C50908 +
          ((((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
             (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
                C50749 -
            ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
             (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
                C50917) *
               C1074 +
           (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
             (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
                C50917 -
            (((C117 * C4168 + C50810 * C4174) * C25427 +
              (C117 * C4165 + C50810 * C4169) * C25432 + C3249 * C50953 +
              C3248 * C25431 + C968 * C50964 + C967 * C25430) *
                 C50628 +
             (C26271 + C26270 + C26269 + C26268 + C26267 + C26266) * C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50685 * C1074 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50685 * C50721) *
              C1076 +
          (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
            (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
               C50685 * C50721 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50685 * C1074) *
              C1077 +
          (((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
            (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
               C50685 * C1074 -
           (((C117 * C1154 + C50810 * C1162) * C25427 +
             (C117 * C1150 + C50810 * C1155) * C25432 + C370 * C50953 +
             C369 * C25431 + C359 * C50964 + C360 * C25430) *
                C50628 +
            (C25919 + C25918 + C25917 + C25916 + C25915 + C25914) * C25428) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C25430 +
            (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
            C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
               C25428 +
           (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
              C50685 * C1145 -
          ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
           (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
            C2543 * C50964 + C2542 * C25430) *
               C25428) *
              C50685 * C1146 +
          ((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
            C9146 * C25432 + C9147 * C25427) *
               C25428 +
           (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
              C50685 * C1147 -
          (((C117 * C9135 + C50810 * C9139) * C25427 +
            (C117 * C9133 + C50810 * C9136) * C25432 + C8213 * C50953 +
            C8212 * C25431 + C2547 * C50964 + C2546 * C25430) *
               C50628 +
           (C11462 * C25427 + C11461 * C25432 + C9147 * C50953 +
            C9146 * C25431 + C3515 * C50964 + C3514 * C25430) *
               C25428) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C25430 +
              (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
              C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                 C25428 +
             (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
                C1725 -
            ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
             (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 +
              C3245 * C25431 + (C117 * C499 + C50810 * C516) * C50964 +
              (C117 * C486 + C50810 * C500) * C25430) *
                 C25428) *
                C50749) *
               C50916 +
           (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 +
              C4183 * C50953 + C9806 * C25432 + C9807 * C25427) *
                 C25428 +
             (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
                C50749 -
            ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
             (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 +
              C2545 * C25431 + C2543 * C50964 + C2542 * C25430) *
                 C25428) *
                C1725) *
               C50721) *
              C50908 +
          ((((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
             (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
                C50749 -
            ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
             (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
                C1725) *
               C50916 +
           (((C25603 + C25602 + C25601 + C25600 + C25599 + C25598) * C25428 +
             (C25914 + C25915 + C25916 + C25917 + C25918 + C25919) * C50628) *
                C1725 -
            (((C117 * C4168 + C50810 * C4174) * C25427 +
              (C117 * C4165 + C50810 * C4169) * C25432 + C3249 * C50953 +
              C3248 * C25431 + C968 * C50964 + C967 * C25430) *
                 C50628 +
             (C26271 + C26270 + C26269 + C26268 + C26267 + C26266) * C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50962 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C25430 +
             (C117 * C502 + C50810 * C517) * C50964 + C3678 * C25431 +
             C3679 * C50953 + C9306 * C25432 + C9307 * C25427) *
                C25428 +
            (C25762 + C25763 + C25764 + C25765 + C25766 + C25767) * C50628) *
               C2141) *
              C50916 +
          (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 + C4183 * C50953 +
             C9806 * C25432 + C9807 * C25427) *
                C25428 +
            (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
               C50963 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C50962 -
           (((C117 * C9295 + C50810 * C9299) * C25427 +
             (C117 * C9293 + C50810 * C9296) * C25432 + C8377 * C50953 +
             C8376 * C25431 + C2721 * C50964 + C2720 * C25430) *
                C50628 +
            (C11570 * C25427 + C11569 * C25432 + C9307 * C50953 +
             C9306 * C25431 + C3679 * C50964 + C3678 * C25430) *
                C25428) *
               C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C1725 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50749) *
              C289 +
          (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 + C4183 * C50953 +
             C9806 * C25432 + C9807 * C25427) *
                C25428 +
            (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
               C50749 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C1725) *
              C290 +
          (((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
             C9146 * C25432 + C9147 * C25427) *
                C25428 +
            (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
               C1725 -
           (((C117 * C9795 + C50810 * C9799) * C25427 +
             (C117 * C9793 + C50810 * C9796) * C25432 + C8887 * C50953 +
             C8886 * C25431 + C3247 * C50964 + C3246 * C25430) *
                C50628 +
            (C11906 * C25427 + C11905 * C25432 + C9807 * C50953 +
             C9806 * C25431 + C4183 * C50964 + C4182 * C25430) *
                C25428) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C1725 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50749) *
              C50669 * C1076 +
          (((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
            (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
               C50749 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C1725) *
              C50669 * C1077 +
          (((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
            (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
               C1725 -
           (((C117 * C1615 + C50810 * C1623) * C25427 +
             (C117 * C1611 + C50810 * C1616) * C25432 + C970 * C50953 +
             C969 * C25431 + C548 * C50964 + C549 * C25430) *
                C50628 +
            (C26071 + C26070 + C26069 + C26068 + C26067 + C26066) * C25428) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C25430 +
            (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
            C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
               C25428 +
           (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
              C1891 -
          ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
           (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
            (C117 * C499 + C50810 * C516) * C50964 +
            (C117 * C486 + C50810 * C500) * C25430) *
               C25428) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C25430 +
            (C117 * C502 + C50810 * C517) * C50964 + C3678 * C25431 +
            C3679 * C50953 + C9306 * C25432 + C9307 * C25427) *
               C25428 +
           (C25762 + C25763 + C25764 + C25765 + C25766 + C25767) * C50628) *
              C1893 -
          (((C117 * C10199 + C50810 * C10203) * C25427 +
            (C117 * C10197 + C50810 * C10200) * C25432 +
            (C117 * C4578 + C50810 * C4583) * C50953 +
            (C117 * C4574 + C50810 * C4579) * C25431 +
            (C117 * C1903 + C50810 * C1909) * C50964 +
            (C117 * C1897 + C50810 * C1904) * C25430) *
               C50628 +
           ((C117 * C10201 + C50810 * C10204) * C25427 +
            (C117 * C10198 + C50810 * C10202) * C25432 +
            (C117 * C4580 + C50810 * C4584) * C50953 +
            (C117 * C4575 + C50810 * C4581) * C25431 +
            (C117 * C1905 + C50810 * C1910) * C50964 +
            (C117 * C1898 + C50810 * C1906) * C25430) *
               C25428) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C50962 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C25430 +
             (C117 * C502 + C50810 * C517) * C50964 + C3678 * C25431 +
             C3679 * C50953 + C9306 * C25432 + C9307 * C25427) *
                C25428 +
            (C25762 + C25763 + C25764 + C25765 + C25766 + C25767) * C50628) *
               C2141) *
              C50669 * C50908 +
          (((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
            (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
               C50963 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C50962 -
           (((C117 * C3664 + C50810 * C3670) * C25427 +
             (C117 * C3661 + C50810 * C3665) * C25432 + C2723 * C50953 +
             C2722 * C25431 + C557 * C50964 + C556 * C25430) *
                C50628 +
            (C25767 + C25766 + C25765 + C25764 + C25763 + C25762) * C25428) *
               C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C1725 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50749) *
              C50669 * C1076 +
          (((C25761 + C25760 + C25759 + C25758 + C25757 + C25756) * C25428 +
            (C26066 + C26067 + C26068 + C26069 + C26070 + C26071) * C50628) *
               C50749 -
           ((C25440 + C25441 + C25442 + C25443 + C25444 + C25445) * C50628 +
            (C25439 + C25438 + C25437 + C25436 + C25435 + C25434) * C25428) *
               C1725) *
              C50669 * C1077 +
          (((C25445 + C25444 + C25443 + C25442 + C25441 + C25440) * C25428 +
            (C25446 + C25447 + C25448 + C25449 + C25450 + C25451) * C50628) *
               C1725 -
           (((C117 * C1615 + C50810 * C1623) * C25427 +
             (C117 * C1611 + C50810 * C1616) * C25432 + C970 * C50953 +
             C969 * C25431 + C548 * C50964 + C549 * C25430) *
                C50628 +
            (C26071 + C26070 + C26069 + C26068 + C26067 + C26066) * C25428) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C25430 +
             (C117 * C127 + C50810 * C140) * C50964 + C2542 * C25431 +
             C2543 * C50953 + C2545 * C25432 + C2544 * C25427) *
                C25428 +
            (C25434 + C25435 + C25436 + C25437 + C25438 + C25439) * C50628) *
               C1725 -
           ((C25756 + C25757 + C25758 + C25759 + C25760 + C25761) * C50628 +
            (C4183 * C25427 + C4182 * C25432 + C3244 * C50953 + C3245 * C25431 +
             (C117 * C499 + C50810 * C516) * C50964 +
             (C117 * C486 + C50810 * C500) * C25430) *
                C25428) *
               C50749) *
              C289 +
          (((C3245 * C25430 + C3244 * C50964 + C4182 * C25431 + C4183 * C50953 +
             C9806 * C25432 + C9807 * C25427) *
                C25428 +
            (C26266 + C26267 + C26268 + C26269 + C26270 + C26271) * C50628) *
               C50749 -
           ((C25598 + C25599 + C25600 + C25601 + C25602 + C25603) * C50628 +
            (C3515 * C25427 + C3514 * C25432 + C2544 * C50953 + C2545 * C25431 +
             C2543 * C50964 + C2542 * C25430) *
                C25428) *
               C1725) *
              C290 +
          (((C2545 * C25430 + C2544 * C50964 + C3514 * C25431 + C3515 * C50953 +
             C9146 * C25432 + C9147 * C25427) *
                C25428 +
            (C25604 + C25605 + C25606 + C25607 + C25608 + C25609) * C50628) *
               C1725 -
           (((C117 * C9795 + C50810 * C9799) * C25427 +
             (C117 * C9793 + C50810 * C9796) * C25432 + C8887 * C50953 +
             C8886 * C25431 + C3247 * C50964 + C3246 * C25430) *
                C50628 +
            (C11906 * C25427 + C11905 * C25432 + C9807 * C50953 +
             C9806 * C25431 + C4183 * C50964 + C4182 * C25430) *
                C25428) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50685 * C50916 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50685 * C50721) *
              C50958 +
          (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
             C28353 * C50796) *
                C25428 +
            (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
             (C5424 + C5425) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50685 * C50916) *
              C50959 +
          (((C5222 * C22719 + C5223 * C22714 + C28754 * C22720 +
             C28755 * C50796) *
                C25428 +
            ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
             (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
                C50628) *
               C50685 * C50916 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50796 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C22720 +
             (C5781 + C5780) * C22714 + (C5779 + C5778) * C22719) *
                C50628 +
            ((C5425 + C5424) * C50796 + (C5423 + C5422) * C22720 +
             C5766 * C22714 + C5767 * C22719) *
                C25428) *
               C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C22719 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C22714 +
              (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                 C25428 +
             ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
              C28348 * C22720 + C28349 * C50796) *
                 C50628) *
                C50917 -
            ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
              (C5610 + C5611) * C22719) *
                 C50628 +
             ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
              (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C22714 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C22719) *
                 C25428) *
                C50749) *
               C50916 +
           ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
              (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                 C25428 +
             (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
              (C13461 + C13462) * C50796) *
                 C50628) *
                C50749 -
            ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
              C28351 * C22719) *
                 C50628 +
             ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
              (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                 C25428) *
                C50917) *
               C50721) *
              C292 +
          (((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
              C29210 * C22720 + C29211 * C50796) *
                 C25428 +
             ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
              (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                 C50628) *
                C50749 -
            ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
              (C5211 + C5210) * C22719) *
                 C50628 +
             (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
              (C5207 + C5206) * C22719) *
                 C25428) *
                C50917) *
               C50916 +
           (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
              C28353 * C50796) *
                 C25428 +
             (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
              (C5424 + C5425) * C50796) *
                 C50628) *
                C50917 -
            (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 +
               C50928 * C1624) *
                  C50796 +
              (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 +
               C50928 * C1618) *
                  C22720 +
              (C6163 + C6162) * C22714 + (C6161 + C6160) * C22719) *
                 C50628 +
             ((C13462 + C13461) * C50796 + (C13460 + C13459) * C22720 +
              C29208 * C22714 + C29209 * C22719) *
                 C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50685 * C289 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50685 * C290 +
           ((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
             (C12786 + C12785) * C50796) *
                C25428 +
            (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
             (C12791 + C12792) * C50796) *
                C50628) *
               C50685 * C291) *
              C292 +
          (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
             C28353 * C50796) *
                C25428 +
            ((C5413 + C5412) * C22719 + (C5411 + C5410) * C22714 +
             (C5422 + C5423) * C22720 + (C5424 + C5425) * C50796) *
                C50628) *
               C50685 * C290 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50685 * C289 -
           (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                 C50796 +
             (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                 C22720 +
             (C5425 + C5424) * C22714 + (C5423 + C5422) * C22719) *
                C50628 +
            ((C12792 + C12791) * C50796 + (C12790 + C12789) * C22720 +
             C12775 * C22714 + C12776 * C22719) *
                C25428) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C22719 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C22714 +
            (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
               C25428 +
           ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
            (C5417 + C5416) * C22720 + (C5415 + C5414) * C50796) *
               C50628) *
              C50685 * C50669 * C113 -
          ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
            (C5211 + C5210) * C22719) *
               C50628 +
           ((C5414 + C5415) * C50796 + (C5416 + C5417) * C22720 +
            (C5209 + C5208) * C22714 + (C5207 + C5206) * C22719) *
               C25428) *
              C50685 * C50669 * C114 +
          ((C5222 * C22719 + C5223 * C22714 + (C5413 + C5412) * C22720 +
            (C5411 + C5410) * C50796) *
               C25428 +
           ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
            (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                C50796 +
            (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                C22720 +
            (C5221 + C5220) * C22714 + (C5219 + C5218) * C22719) *
               C50628 +
           ((C5781 + C5780) * C50796 + (C5779 + C5778) * C22720 +
            C5224 * C22714 + C5225 * C22719) *
               C25428) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C480 -
           (((C6159 + C6158) * C50796 + (C6157 + C6156) * C22720 +
             (C5608 + C5609) * C22714 + (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C481 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C22719 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C22714 +
             (C13883 + C13884) * C22720 + (C13885 + C13886) * C50796) *
                C25428 +
            ((C5612 + C5613) * C22719 + (C5614 + C5615) * C22714 +
             (C28556 + C28557) * C22720 + (C28558 + C28559) * C50796) *
                C50628) *
               C482) *
              C50669 * C292 +
          ((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
             (C6156 + C6157) * C22720 + (C6158 + C6159) * C50796) *
                C25428 +
            ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
             (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                C50628) *
               C481 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C480 -
           (((C5172 * C4576 + C50822 * C4582 + C5171 * C1270 + C50928 * C1277) *
                 C50796 +
             (C5172 * C4573 + C50822 * C4577 + C5171 * C1265 + C50928 * C1271) *
                 C22720 +
             (C5619 + C5618) * C22714 + (C5617 + C5616) * C22719) *
                C50628 +
            ((C28559 + C28558) * C50796 + (C28557 + C28556) * C22720 +
             (C5615 + C5614) * C22714 + (C5613 + C5612) * C22719) *
                C25428) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50917 -
           (((C6159 + C6158) * C50796 + (C6157 + C6156) * C22720 +
             (C5608 + C5609) * C22714 + (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50749) *
              C50669 * C50958 +
          ((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
             (C6156 + C6157) * C22720 + (C6158 + C6159) * C50796) *
                C25428 +
            ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
             (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                C50628) *
               C50749 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50917) *
              C50669 * C50959 +
          (((C5222 * C22719 + C5223 * C22714 + C28754 * C22720 +
             C28755 * C50796) *
                C25428 +
            ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
             (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
                C50628) *
               C50917 -
           (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                 C50796 +
             (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                 C22720 +
             (C5944 + C5943) * C22714 + (C5942 + C5941) * C22719) *
                C50628 +
            ((C6163 + C6162) * C50796 + (C6161 + C6160) * C22720 +
             C5929 * C22714 + C5930 * C22719) *
                C25428) *
               C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C22719 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C22714 +
            (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
               C25428 +
           ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
            (C5417 + C5416) * C22720 + (C5415 + C5414) * C50796) *
               C50628) *
              C50685 * C50669 * C113 -
          ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
            (C5211 + C5210) * C22719) *
               C50628 +
           ((C5414 + C5415) * C50796 + (C5416 + C5417) * C22720 +
            (C5209 + C5208) * C22714 + (C5207 + C5206) * C22719) *
               C25428) *
              C50685 * C50669 * C114 +
          ((C5222 * C22719 + C5223 * C22714 + (C5413 + C5412) * C22720 +
            (C5411 + C5410) * C50796) *
               C25428 +
           ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
            (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                C50796 +
            (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                C22720 +
            (C5221 + C5220) * C22714 + (C5219 + C5218) * C22719) *
               C50628 +
           ((C5781 + C5780) * C50796 + (C5779 + C5778) * C22720 +
            C5224 * C22714 + C5225 * C22719) *
               C25428) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50685 * C289 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50685 * C290 +
           ((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
             (C12786 + C12785) * C50796) *
                C25428 +
            (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
             (C12791 + C12792) * C50796) *
                C50628) *
               C50685 * C291) *
              C292 +
          (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
             C28353 * C50796) *
                C25428 +
            ((C5413 + C5412) * C22719 + (C5411 + C5410) * C22714 +
             (C5422 + C5423) * C22720 + (C5424 + C5425) * C50796) *
                C50628) *
               C50685 * C290 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50685 * C289 -
           (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                 C50796 +
             (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                 C22720 +
             (C5425 + C5424) * C22714 + (C5423 + C5422) * C22719) *
                C50628 +
            ((C12792 + C12791) * C50796 + (C12790 + C12789) * C22720 +
             C12775 * C22714 + C12776 * C22719) *
                C25428) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50685 * C50960 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50685 * C50961 +
           ((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
             (C12786 + C12785) * C50796) *
                C25428 +
            (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
             (C12791 + C12792) * C50796) *
                C50628) *
               C50685 * C1380) *
              C50908 +
          (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
             C28353 * C50796) *
                C25428 +
            (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
             (C5424 + C5425) * C50796) *
                C50628) *
               C50685 * C50961 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50685 * C50960 -
           (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                 C50796 +
             (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                 C22720 +
             (C5425 + C5424) * C22714 + (C5423 + C5422) * C22719) *
                C50628 +
            ((C12792 + C12791) * C50796 + (C12790 + C12789) * C22720 +
             C12775 * C22714 + C12776 * C22719) *
                C25428) *
               C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50917 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50749) *
              C50960 +
          ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
             (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                C25428 +
            (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
             (C13461 + C13462) * C50796) *
                C50628) *
               C50749 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50917) *
              C50961 +
          (((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
             (C12786 + C12785) * C50796) *
                C25428 +
            (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
             (C12791 + C12792) * C50796) *
                C50628) *
               C50917 -
           (((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C50796 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C22720 +
             (C13462 + C13461) * C22714 + (C13460 + C13459) * C22719) *
                C50628 +
            ((C14390 + C14389) * C50796 + (C14388 + C14387) * C22720 +
             C14377 * C22714 + C14378 * C22719) *
                C25428) *
               C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C22719 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C22714 +
            (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
               C25428 +
           ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
            C28348 * C22720 + C28349 * C50796) *
               C50628) *
              C50685 * C1145 -
          ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
            C28351 * C22719) *
               C50628 +
           ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
            (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
               C25428) *
              C50685 * C1146 +
          ((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
            (C12786 + C12785) * C50796) *
               C25428 +
           (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
            (C12791 + C12792) * C50796) *
               C50628) *
              C50685 * C1147 -
          (((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C50796 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C22720 +
            (C12792 + C12791) * C22714 + (C12790 + C12789) * C22719) *
               C50628 +
           ((C13720 + C13719) * C50796 + (C13718 + C13717) * C22720 +
            C13707 * C22714 + C13708 * C22719) *
               C25428) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50685 * C1074 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50685 * C50721) *
              C1076 +
          (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
             C28353 * C50796) *
                C25428 +
            (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
             (C5424 + C5425) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50685 * C1074) *
              C1077 +
          (((C5222 * C22719 + C5223 * C22714 + C28754 * C22720 +
             C28755 * C50796) *
                C25428 +
            ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
             (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
                C50628) *
               C50685 * C1074 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50796 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C22720 +
             (C5781 + C5780) * C22714 + (C5779 + C5778) * C22719) *
                C50628 +
            ((C5425 + C5424) * C50796 + (C5423 + C5422) * C22720 +
             C5766 * C22714 + C5767 * C22719) *
                C25428) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C480 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C481 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C22719 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C22714 +
             (C13883 + C13884) * C22720 + (C13885 + C13886) * C50796) *
                C25428 +
            ((C5612 + C5613) * C22719 + (C5614 + C5615) * C22714 +
             (C28556 + C28557) * C22720 + (C28558 + C28559) * C50796) *
                C50628) *
               C482) *
              C1074 +
          ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
             (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                C25428 +
            (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
             (C13461 + C13462) * C50796) *
                C50628) *
               C481 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C480 -
           (((C5172 * C10199 + C50822 * C10203 + C5171 * C3666 +
              C50928 * C3671) *
                 C50796 +
             (C5172 * C10197 + C50822 * C10200 + C5171 * C3662 +
              C50928 * C3667) *
                 C22720 +
             (C28559 + C28558) * C22714 + (C28557 + C28556) * C22719) *
                C50628 +
            ((C13890 + C13889) * C50796 + (C13888 + C13887) * C22720 +
             (C13886 + C13885) * C22714 + (C13884 + C13883) * C22719) *
                C25428) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C22719 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C22714 +
              (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                 C25428 +
             ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
              C28348 * C22720 + C28349 * C50796) *
                 C50628) *
                C50917 -
            ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
              (C5610 + C5611) * C22719) *
                 C50628 +
             ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
              (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C22714 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C22719) *
                 C25428) *
                C50749) *
               C1074 +
           ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
              (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                 C25428 +
             (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
              (C13461 + C13462) * C50796) *
                 C50628) *
                C50749 -
            ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
              C28351 * C22719) *
                 C50628 +
             ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
              (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                 C25428) *
                C50917) *
               C50721) *
              C50908 +
          (((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
              C29210 * C22720 + C29211 * C50796) *
                 C25428 +
             ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
              (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                 C50628) *
                C50749 -
            ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
              (C5211 + C5210) * C22719) *
                 C50628 +
             (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
              (C5207 + C5206) * C22719) *
                 C25428) *
                C50917) *
               C1074 +
           (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
              C28353 * C50796) *
                 C25428 +
             (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
              (C5424 + C5425) * C50796) *
                 C50628) *
                C50917 -
            (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 +
               C50928 * C1624) *
                  C50796 +
              (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 +
               C50928 * C1618) *
                  C22720 +
              (C6163 + C6162) * C22714 + (C6161 + C6160) * C22719) *
                 C50628 +
             ((C13462 + C13461) * C50796 + (C13460 + C13459) * C22720 +
              C29208 * C22714 + C29209 * C22719) *
                 C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50685 * C1074 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50685 * C50721) *
              C1076 +
          (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
             C28353 * C50796) *
                C25428 +
            (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
             (C5424 + C5425) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50685 * C1074) *
              C1077 +
          (((C5222 * C22719 + C5223 * C22714 + C28754 * C22720 +
             C28755 * C50796) *
                C25428 +
            ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
             (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
                C50628) *
               C50685 * C1074 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50796 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C22720 +
             (C5781 + C5780) * C22714 + (C5779 + C5778) * C22719) *
                C50628 +
            ((C5425 + C5424) * C50796 + (C5423 + C5422) * C22720 +
             C5766 * C22714 + C5767 * C22719) *
                C25428) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C22719 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C22714 +
            (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
               C25428 +
           ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
            C28348 * C22720 + C28349 * C50796) *
               C50628) *
              C50685 * C1145 -
          ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
            C28351 * C22719) *
               C50628 +
           ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
            (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
               C25428) *
              C50685 * C1146 +
          ((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
            (C12786 + C12785) * C50796) *
               C25428 +
           (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
            (C12791 + C12792) * C50796) *
               C50628) *
              C50685 * C1147 -
          (((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C50796 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C22720 +
            (C12792 + C12791) * C22714 + (C12790 + C12789) * C22719) *
               C50628 +
           ((C13720 + C13719) * C50796 + (C13718 + C13717) * C22720 +
            C13707 * C22714 + C13708 * C22719) *
               C25428) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C22719 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C22714 +
              (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                 C25428 +
             ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
              C28348 * C22720 + C28349 * C50796) *
                 C50628) *
                C1725 -
            ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
              (C5610 + C5611) * C22719) *
                 C50628 +
             ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
              (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C22714 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C22719) *
                 C25428) *
                C50749) *
               C50916 +
           ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
              (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                 C25428 +
             (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
              (C13461 + C13462) * C50796) *
                 C50628) *
                C50749 -
            ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
              C28351 * C22719) *
                 C50628 +
             ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
              (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                 C25428) *
                C1725) *
               C50721) *
              C50908 +
          (((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
              C29210 * C22720 + C29211 * C50796) *
                 C25428 +
             ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
              (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                 C50628) *
                C50749 -
            ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
              (C5211 + C5210) * C22719) *
                 C50628 +
             (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
              (C5207 + C5206) * C22719) *
                 C25428) *
                C1725) *
               C50916 +
           (((C28348 * C22719 + C28349 * C22714 + C28352 * C22720 +
              C28353 * C50796) *
                 C25428 +
             (C28754 * C22719 + C28755 * C22714 + (C5422 + C5423) * C22720 +
              (C5424 + C5425) * C50796) *
                 C50628) *
                C1725 -
            (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 +
               C50928 * C1624) *
                  C50796 +
              (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 +
               C50928 * C1618) *
                  C22720 +
              (C6163 + C6162) * C22714 + (C6161 + C6160) * C22719) *
                 C50628 +
             ((C13462 + C13461) * C50796 + (C13460 + C13459) * C22720 +
              C29208 * C22714 + C29209 * C22719) *
                 C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50962 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50963 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C22719 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C22714 +
             (C13883 + C13884) * C22720 + (C13885 + C13886) * C50796) *
                C25428 +
            ((C5612 + C5613) * C22719 + (C5614 + C5615) * C22714 +
             (C28556 + C28557) * C22720 + (C28558 + C28559) * C50796) *
                C50628) *
               C2141) *
              C50916 +
          ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
             (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                C25428 +
            (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
             (C13461 + C13462) * C50796) *
                C50628) *
               C50963 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C50962 -
           (((C5172 * C10199 + C50822 * C10203 + C5171 * C3666 +
              C50928 * C3671) *
                 C50796 +
             (C5172 * C10197 + C50822 * C10200 + C5171 * C3662 +
              C50928 * C3667) *
                 C22720 +
             (C28559 + C28558) * C22714 + (C28557 + C28556) * C22719) *
                C50628 +
            ((C13890 + C13889) * C50796 + (C13888 + C13887) * C22720 +
             (C13886 + C13885) * C22714 + (C13884 + C13883) * C22719) *
                C25428) *
               C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C1725 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50749) *
              C289 +
          ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
             (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                C25428 +
            (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
             (C13461 + C13462) * C50796) *
                C50628) *
               C50749 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C1725) *
              C290 +
          (((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
             (C12786 + C12785) * C50796) *
                C25428 +
            (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
             (C12791 + C12792) * C50796) *
                C50628) *
               C1725 -
           (((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C50796 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C22720 +
             (C13462 + C13461) * C22714 + (C13460 + C13459) * C22719) *
                C50628 +
            ((C14390 + C14389) * C50796 + (C14388 + C14387) * C22720 +
             C14377 * C22714 + C14378 * C22719) *
                C25428) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C1725 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50749) *
              C50669 * C1076 +
          ((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
             C29210 * C22720 + C29211 * C50796) *
                C25428 +
            ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
             (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                C50628) *
               C50749 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C1725) *
              C50669 * C1077 +
          (((C5222 * C22719 + C5223 * C22714 + C28754 * C22720 +
             C28755 * C50796) *
                C25428 +
            ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
             (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
                C50628) *
               C1725 -
           (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                 C50796 +
             (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                 C22720 +
             (C5944 + C5943) * C22714 + (C5942 + C5941) * C22719) *
                C50628 +
            ((C6163 + C6162) * C50796 + (C6161 + C6160) * C22720 +
             C5929 * C22714 + C5930 * C22719) *
                C25428) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C22719 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C22714 +
            (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
               C25428 +
           ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
            C28348 * C22720 + C28349 * C50796) *
               C50628) *
              C1891 -
          ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
            (C5610 + C5611) * C22719) *
               C50628 +
           ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C22714 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C22719) *
               C25428) *
              C1892 +
          (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C22719 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C22714 +
            (C13883 + C13884) * C22720 + (C13885 + C13886) * C50796) *
               C25428 +
           ((C5612 + C5613) * C22719 + (C5614 + C5615) * C22714 +
            (C28556 + C28557) * C22720 + (C28558 + C28559) * C50796) *
               C50628) *
              C1893 -
          (((C5172 * C16727 + C50822 * C16729 + C5171 * C4578 +
             C50928 * C4583) *
                C50796 +
            (C5172 * C16726 + C50822 * C16728 + C5171 * C4574 +
             C50928 * C4579) *
                C22720 +
            (C5172 * C7434 + C50822 * C7439 + C5171 * C1903 + C50928 * C1909) *
                C22714 +
            (C5172 * C7430 + C50822 * C7435 + C5171 * C1897 + C50928 * C1904) *
                C22719) *
               C50628 +
           ((C5172 * C14784 + C50822 * C14787 + C5171 * C4580 +
             C50928 * C4584) *
                C50796 +
            (C5172 * C14781 + C50822 * C14785 + C5171 * C4575 +
             C50928 * C4581) *
                C22720 +
            (C5172 * C7436 + C50822 * C7440 + C5171 * C1905 + C50928 * C1910) *
                C22714 +
            (C5172 * C7431 + C50822 * C7437 + C5171 * C1898 + C50928 * C1906) *
                C22719) *
               C25428) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C50962 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50963 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C22719 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C22714 +
             (C13883 + C13884) * C22720 + (C13885 + C13886) * C50796) *
                C25428 +
            ((C5612 + C5613) * C22719 + (C5614 + C5615) * C22714 +
             (C28556 + C28557) * C22720 + (C28558 + C28559) * C50796) *
                C50628) *
               C2141) *
              C50669 * C50908 +
          ((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
             C29210 * C22720 + C29211 * C50796) *
                C25428 +
            ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
             (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                C50628) *
               C50963 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C50962 -
           (((C5172 * C4576 + C50822 * C4582 + C5171 * C1270 + C50928 * C1277) *
                 C50796 +
             (C5172 * C4573 + C50822 * C4577 + C5171 * C1265 + C50928 * C1271) *
                 C22720 +
             (C5619 + C5618) * C22714 + (C5617 + C5616) * C22719) *
                C50628 +
            ((C28559 + C28558) * C50796 + (C28557 + C28556) * C22720 +
             (C5615 + C5614) * C22714 + (C5613 + C5612) * C22719) *
                C25428) *
               C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C1725 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50749) *
              C50669 * C1076 +
          ((((C5611 + C5610) * C22719 + (C5609 + C5608) * C22714 +
             C29210 * C22720 + C29211 * C50796) *
                C25428 +
            ((C5607 + C5606) * C22719 + (C5605 + C5604) * C22714 +
             (C6160 + C6161) * C22720 + (C6162 + C6163) * C50796) *
                C50628) *
               C50749 -
           ((C5766 * C50796 + C5767 * C22720 + (C5213 + C5212) * C22714 +
             (C5211 + C5210) * C22719) *
                C50628 +
            (C28350 * C50796 + C28351 * C22720 + (C5209 + C5208) * C22714 +
             (C5207 + C5206) * C22719) *
                C25428) *
               C1725) *
              C50669 * C1077 +
          (((C5222 * C22719 + C5223 * C22714 + C28754 * C22720 +
             C28755 * C50796) *
                C25428 +
            ((C5217 + C5216) * C22719 + (C5215 + C5214) * C22714 +
             (C5778 + C5779) * C22720 + (C5780 + C5781) * C50796) *
                C50628) *
               C1725 -
           (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                 C50796 +
             (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                 C22720 +
             (C5944 + C5943) * C22714 + (C5942 + C5941) * C22719) *
                C50628 +
            ((C6163 + C6162) * C50796 + (C6161 + C6160) * C22720 +
             C5929 * C22714 + C5930 * C22719) *
                C25428) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C22719 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C22714 +
             (C12777 + C12778) * C22720 + (C12779 + C12780) * C50796) *
                C25428 +
            ((C5206 + C5207) * C22719 + (C5208 + C5209) * C22714 +
             C28348 * C22720 + C28349 * C50796) *
                C50628) *
               C1725 -
           ((C29208 * C50796 + C29209 * C22720 + (C5608 + C5609) * C22714 +
             (C5610 + C5611) * C22719) *
                C50628 +
            ((C13455 + C13456) * C50796 + (C13457 + C13458) * C22720 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C22714 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C22719) *
                C25428) *
               C50749) *
              C289 +
          ((((C13458 + C13457) * C22719 + (C13456 + C13455) * C22714 +
             (C13454 + C13453) * C22720 + (C13452 + C13451) * C50796) *
                C25428 +
            (C29210 * C22719 + C29211 * C22714 + (C13459 + C13460) * C22720 +
             (C13461 + C13462) * C50796) *
                C50628) *
               C50749 -
           ((C12775 * C50796 + C12776 * C22720 + C28350 * C22714 +
             C28351 * C22719) *
                C50628 +
            ((C12784 + C12783) * C50796 + (C12782 + C12781) * C22720 +
             (C12780 + C12779) * C22714 + (C12778 + C12777) * C22719) *
                C25428) *
               C1725) *
              C290 +
          (((C12793 * C22719 + C12794 * C22714 + (C12788 + C12787) * C22720 +
             (C12786 + C12785) * C50796) *
                C25428 +
            (C28352 * C22719 + C28353 * C22714 + (C12789 + C12790) * C22720 +
             (C12791 + C12792) * C50796) *
                C50628) *
               C1725 -
           (((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C50796 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C22720 +
             (C13462 + C13461) * C22714 + (C13460 + C13459) * C22719) *
                C50628 +
            ((C14390 + C14389) * C50796 + (C14388 + C14387) * C22720 +
             C14377 * C22714 + C14378 * C22719) *
                C25428) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50685 * C50916 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50685 * C50721) *
              C50958 +
          (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
             C34731 * C50796) *
                C50899 +
            (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50685 * C50916) *
              C50959 +
          (((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
             C35153 * C50796) *
                C50899 +
            ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
             (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
                C50628) *
               C50685 * C50916 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50796 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C22720 +
             (C32249 + C32248) * C22714 + (C32247 + C32246) * C22719) *
                C50628 +
            ((C31893 + C31892) * C50796 + (C31891 + C31890) * C22720 +
             C32234 * C22714 + C32235 * C22719) *
                C50899) *
               C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C22719 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C22714 +
              (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                 C50899 +
             ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
              C34716 * C22720 + C34717 * C50796) *
                 C50628) *
                C50917 -
            ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
              (C32078 + C32079) * C22719) *
                 C50628 +
             ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
              (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C22714 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C22719) *
                 C50899) *
                C50749) *
               C50916 +
           ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
              (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                 C50899 +
             (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
              (C35632 + C35633) * C50796) *
                 C50628) *
                C50749 -
            ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
              C34721 * C22719) *
                 C50628 +
             ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
              (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                 C50899) *
                C50917) *
               C50721) *
              C292 +
          (((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
              C35616 * C22720 + C35617 * C50796) *
                 C50899 +
             ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
              (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                 C50628) *
                C50749 -
            ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
              (C31679 + C31678) * C22719) *
                 C50628 +
             (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
              (C31675 + C31674) * C22719) *
                 C50899) *
                C50917) *
               C50916 +
           (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
              C34731 * C50796) *
                 C50899 +
             (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
              (C31892 + C31893) * C50796) *
                 C50628) *
                C50917 -
            (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
               C31637 * C1624) *
                  C50796 +
              (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
               C31637 * C1618) *
                  C22720 +
              (C32631 + C32630) * C22714 + (C32629 + C32628) * C22719) *
                 C50628 +
             ((C35633 + C35632) * C50796 + (C35631 + C35630) * C22720 +
              C35606 * C22714 + C35607 * C22719) *
                 C50899) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50685 * C289 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50685 * C290 +
           (((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
             (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
                C50899 +
            (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50685 * C291) *
              C292 +
          (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
             C34731 * C50796) *
                C50899 +
            (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C290 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50685 * C289 -
           (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
              C31637 * C1163) *
                 C50796 +
             (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
              C31637 * C1157) *
                 C22720 +
             (C31893 + C31892) * C22714 + (C31891 + C31890) * C22719) *
                C50628 +
            ((C34751 + C34750) * C50796 + (C34749 + C34748) * C22720 +
             C34718 * C22714 + C34719 * C22719) *
                C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C22719 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C22714 +
            (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
               C50899 +
           ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
            C34716 * C22720 + C34717 * C50796) *
               C50628) *
              C50685 * C50669 * C113 -
          ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
            (C31679 + C31678) * C22719) *
               C50628 +
           (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
            (C31675 + C31674) * C22719) *
               C50899) *
              C50685 * C50669 * C114 +
          ((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
            C35153 * C50796) *
               C50899 +
           ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
            (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                C50796 +
            (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                C22720 +
            (C31689 + C31688) * C22714 + (C31687 + C31686) * C22719) *
               C50628 +
           ((C32249 + C32248) * C50796 + (C32247 + C32246) * C22720 +
            C31692 * C22714 + C31693 * C22719) *
               C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C480 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C481 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C22719 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C22714 +
             (C36172 + C36173) * C22720 + (C36174 + C36175) * C50796) *
                C50899 +
            ((C32080 + C32081) * C22719 + (C32082 + C32083) * C22714 +
             (C34954 + C34955) * C22720 + (C34956 + C34957) * C50796) *
                C50628) *
               C482) *
              C50669 * C292 +
          ((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
             C35616 * C22720 + C35617 * C50796) *
                C50899 +
            ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
             (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                C50628) *
               C481 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C480 -
           (((C31640 * C4576 + C50822 * C4582 + C31639 * C1270 +
              C31637 * C1277) *
                 C50796 +
             (C31640 * C4573 + C50822 * C4577 + C31639 * C1265 +
              C31637 * C1271) *
                 C22720 +
             (C32087 + C32086) * C22714 + (C32085 + C32084) * C22719) *
                C50628 +
            ((C34957 + C34956) * C50796 + (C34955 + C34954) * C22720 +
             (C32083 + C32082) * C22714 + (C32081 + C32080) * C22719) *
                C50899) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50917 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50749) *
              C50669 * C50958 +
          ((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
             C35616 * C22720 + C35617 * C50796) *
                C50899 +
            ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
             (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                C50628) *
               C50749 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50917) *
              C50669 * C50959 +
          (((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
             C35153 * C50796) *
                C50899 +
            ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
             (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
                C50628) *
               C50917 -
           (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 + C31637 * C950) *
                 C50796 +
             (C31640 * C1264 + C50822 * C1269 + C31639 * C935 + C31637 * C943) *
                 C22720 +
             (C32412 + C32411) * C22714 + (C32410 + C32409) * C22719) *
                C50628 +
            ((C32631 + C32630) * C50796 + (C32629 + C32628) * C22720 +
             C32397 * C22714 + C32398 * C22719) *
                C50899) *
               C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C22719 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C22714 +
            (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
               C50899 +
           ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
            C34716 * C22720 + C34717 * C50796) *
               C50628) *
              C50685 * C50669 * C113 -
          ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
            (C31679 + C31678) * C22719) *
               C50628 +
           (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
            (C31675 + C31674) * C22719) *
               C50899) *
              C50685 * C50669 * C114 +
          ((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
            C35153 * C50796) *
               C50899 +
           ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
            (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                C50796 +
            (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                C22720 +
            (C31689 + C31688) * C22714 + (C31687 + C31686) * C22719) *
               C50628 +
           ((C32249 + C32248) * C50796 + (C32247 + C32246) * C22720 +
            C31692 * C22714 + C31693 * C22719) *
               C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50685 * C289 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50685 * C290 +
           (((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
             (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
                C50899 +
            (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50685 * C291) *
              C292 +
          (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
             C34731 * C50796) *
                C50899 +
            (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C290 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50685 * C289 -
           (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
              C31637 * C1163) *
                 C50796 +
             (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
              C31637 * C1157) *
                 C22720 +
             (C31893 + C31892) * C22714 + (C31891 + C31890) * C22719) *
                C50628 +
            ((C34751 + C34750) * C50796 + (C34749 + C34748) * C22720 +
             C34718 * C22714 + C34719 * C22719) *
                C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50685 * C50960 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50685 * C50961 +
           (((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
             (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
                C50899 +
            (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50685 * C1380) *
              C50908 +
          (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
             C34731 * C50796) *
                C50899 +
            (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50961 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50685 * C50960 -
           (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
              C31637 * C1163) *
                 C50796 +
             (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
              C31637 * C1157) *
                 C22720 +
             (C31893 + C31892) * C22714 + (C31891 + C31890) * C22719) *
                C50628 +
            ((C34751 + C34750) * C50796 + (C34749 + C34748) * C22720 +
             C34718 * C22714 + C34719 * C22719) *
                C50899) *
               C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50917 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50749) *
              C50960 +
          ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
             (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                C50899 +
            (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50749 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50917) *
              C50961 +
          ((((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
             (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
                C50899 +
            (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50917 -
           (((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C50796 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C22720 +
             (C35633 + C35632) * C22714 + (C35631 + C35630) * C22719) *
                C50628 +
            ((C31640 * C9297 + C50822 * C9300 + C31639 * C4172 +
              C31637 * C4176) *
                 C50796 +
             (C31640 * C9294 + C50822 * C9298 + C31639 * C4167 +
              C31637 * C4173) *
                 C22720 +
             (C36833 + C36832) * C22714 + (C36831 + C36830) * C22719) *
                C50899) *
               C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C22719 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C22714 +
            (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
               C50899 +
           ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
            C34716 * C22720 + C34717 * C50796) *
               C50628) *
              C50685 * C1145 -
          ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
            C34721 * C22719) *
               C50628 +
           ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
            (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
               C50899) *
              C50685 * C1146 +
          (((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
            (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
               C50899 +
           (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
            (C34750 + C34751) * C50796) *
               C50628) *
              C50685 * C1147 -
          (((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C50796 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C22720 +
            (C34751 + C34750) * C22714 + (C34749 + C34748) * C22719) *
               C50628 +
           ((C31640 * C9797 + C50822 * C9800 + C31639 * C3504 +
             C31637 * C3508) *
                C50796 +
            (C31640 * C9794 + C50822 * C9798 + C31639 * C3499 +
             C31637 * C3505) *
                C22720 +
            (C35969 + C35968) * C22714 + (C35967 + C35966) * C22719) *
               C50899) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50685 * C1074 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50685 * C50721) *
              C1076 +
          (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
             C34731 * C50796) *
                C50899 +
            (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50685 * C1074) *
              C1077 +
          (((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
             C35153 * C50796) *
                C50899 +
            ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
             (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
                C50628) *
               C50685 * C1074 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50796 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C22720 +
             (C32249 + C32248) * C22714 + (C32247 + C32246) * C22719) *
                C50628 +
            ((C31893 + C31892) * C50796 + (C31891 + C31890) * C22720 +
             C32234 * C22714 + C32235 * C22719) *
                C50899) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C480 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C481 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C22719 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C22714 +
             (C36172 + C36173) * C22720 + (C36174 + C36175) * C50796) *
                C50899 +
            ((C32080 + C32081) * C22719 + (C32082 + C32083) * C22714 +
             (C34954 + C34955) * C22720 + (C34956 + C34957) * C50796) *
                C50628) *
               C482) *
              C1074 +
          ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
             (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                C50899 +
            (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C481 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C480 -
           (((C31640 * C10199 + C50822 * C10203 + C31639 * C3666 +
              C31637 * C3671) *
                 C50796 +
             (C31640 * C10197 + C50822 * C10200 + C31639 * C3662 +
              C31637 * C3667) *
                 C22720 +
             (C34957 + C34956) * C22714 + (C34955 + C34954) * C22719) *
                C50628 +
            ((C31640 * C10201 + C50822 * C10204 + C31639 * C3668 +
              C31637 * C3672) *
                 C50796 +
             (C31640 * C10198 + C50822 * C10202 + C31639 * C3663 +
              C31637 * C3669) *
                 C22720 +
             (C36175 + C36174) * C22714 + (C36173 + C36172) * C22719) *
                C50899) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C22719 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C22714 +
              (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                 C50899 +
             ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
              C34716 * C22720 + C34717 * C50796) *
                 C50628) *
                C50917 -
            ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
              (C32078 + C32079) * C22719) *
                 C50628 +
             ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
              (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C22714 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C22719) *
                 C50899) *
                C50749) *
               C1074 +
           ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
              (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                 C50899 +
             (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
              (C35632 + C35633) * C50796) *
                 C50628) *
                C50749 -
            ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
              C34721 * C22719) *
                 C50628 +
             ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
              (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                 C50899) *
                C50917) *
               C50721) *
              C50908 +
          (((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
              C35616 * C22720 + C35617 * C50796) *
                 C50899 +
             ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
              (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                 C50628) *
                C50749 -
            ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
              (C31679 + C31678) * C22719) *
                 C50628 +
             (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
              (C31675 + C31674) * C22719) *
                 C50899) *
                C50917) *
               C1074 +
           (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
              C34731 * C50796) *
                 C50899 +
             (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
              (C31892 + C31893) * C50796) *
                 C50628) *
                C50917 -
            (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
               C31637 * C1624) *
                  C50796 +
              (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
               C31637 * C1618) *
                  C22720 +
              (C32631 + C32630) * C22714 + (C32629 + C32628) * C22719) *
                 C50628 +
             ((C35633 + C35632) * C50796 + (C35631 + C35630) * C22720 +
              C35606 * C22714 + C35607 * C22719) *
                 C50899) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50685 * C1074 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50685 * C50721) *
              C1076 +
          (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
             C34731 * C50796) *
                C50899 +
            (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50685 * C1074) *
              C1077 +
          (((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
             C35153 * C50796) *
                C50899 +
            ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
             (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
                C50628) *
               C50685 * C1074 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50796 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C22720 +
             (C32249 + C32248) * C22714 + (C32247 + C32246) * C22719) *
                C50628 +
            ((C31893 + C31892) * C50796 + (C31891 + C31890) * C22720 +
             C32234 * C22714 + C32235 * C22719) *
                C50899) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C22719 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C22714 +
            (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
               C50899 +
           ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
            C34716 * C22720 + C34717 * C50796) *
               C50628) *
              C50685 * C1145 -
          ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
            C34721 * C22719) *
               C50628 +
           ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
            (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
               C50899) *
              C50685 * C1146 +
          (((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
            (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
               C50899 +
           (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
            (C34750 + C34751) * C50796) *
               C50628) *
              C50685 * C1147 -
          (((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C50796 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C22720 +
            (C34751 + C34750) * C22714 + (C34749 + C34748) * C22719) *
               C50628 +
           ((C31640 * C9797 + C50822 * C9800 + C31639 * C3504 +
             C31637 * C3508) *
                C50796 +
            (C31640 * C9794 + C50822 * C9798 + C31639 * C3499 +
             C31637 * C3505) *
                C22720 +
            (C35969 + C35968) * C22714 + (C35967 + C35966) * C22719) *
               C50899) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C22719 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C22714 +
              (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                 C50899 +
             ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
              C34716 * C22720 + C34717 * C50796) *
                 C50628) *
                C1725 -
            ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
              (C32078 + C32079) * C22719) *
                 C50628 +
             ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
              (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C22714 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C22719) *
                 C50899) *
                C50749) *
               C50916 +
           ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
              (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                 C50899 +
             (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
              (C35632 + C35633) * C50796) *
                 C50628) *
                C50749 -
            ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
              C34721 * C22719) *
                 C50628 +
             ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
              (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                 C50899) *
                C1725) *
               C50721) *
              C50908 +
          (((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
              C35616 * C22720 + C35617 * C50796) *
                 C50899 +
             ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
              (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                 C50628) *
                C50749 -
            ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
              (C31679 + C31678) * C22719) *
                 C50628 +
             (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
              (C31675 + C31674) * C22719) *
                 C50899) *
                C1725) *
               C50916 +
           (((C34716 * C22719 + C34717 * C22714 + C34730 * C22720 +
              C34731 * C50796) *
                 C50899 +
             (C35152 * C22719 + C35153 * C22714 + (C31890 + C31891) * C22720 +
              (C31892 + C31893) * C50796) *
                 C50628) *
                C1725 -
            (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
               C31637 * C1624) *
                  C50796 +
              (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
               C31637 * C1618) *
                  C22720 +
              (C32631 + C32630) * C22714 + (C32629 + C32628) * C22719) *
                 C50628 +
             ((C35633 + C35632) * C50796 + (C35631 + C35630) * C22720 +
              C35606 * C22714 + C35607 * C22719) *
                 C50899) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50962 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50963 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C22719 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C22714 +
             (C36172 + C36173) * C22720 + (C36174 + C36175) * C50796) *
                C50899 +
            ((C32080 + C32081) * C22719 + (C32082 + C32083) * C22714 +
             (C34954 + C34955) * C22720 + (C34956 + C34957) * C50796) *
                C50628) *
               C2141) *
              C50916 +
          ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
             (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                C50899 +
            (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50963 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C50962 -
           (((C31640 * C10199 + C50822 * C10203 + C31639 * C3666 +
              C31637 * C3671) *
                 C50796 +
             (C31640 * C10197 + C50822 * C10200 + C31639 * C3662 +
              C31637 * C3667) *
                 C22720 +
             (C34957 + C34956) * C22714 + (C34955 + C34954) * C22719) *
                C50628 +
            ((C31640 * C10201 + C50822 * C10204 + C31639 * C3668 +
              C31637 * C3672) *
                 C50796 +
             (C31640 * C10198 + C50822 * C10202 + C31639 * C3663 +
              C31637 * C3669) *
                 C22720 +
             (C36175 + C36174) * C22714 + (C36173 + C36172) * C22719) *
                C50899) *
               C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50749) *
              C289 +
          ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
             (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                C50899 +
            (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50749 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C1725) *
              C290 +
          ((((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
             (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
                C50899 +
            (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C50796 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C22720 +
             (C35633 + C35632) * C22714 + (C35631 + C35630) * C22719) *
                C50628 +
            ((C31640 * C9297 + C50822 * C9300 + C31639 * C4172 +
              C31637 * C4176) *
                 C50796 +
             (C31640 * C9294 + C50822 * C9298 + C31639 * C4167 +
              C31637 * C4173) *
                 C22720 +
             (C36833 + C36832) * C22714 + (C36831 + C36830) * C22719) *
                C50899) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50749) *
              C50669 * C1076 +
          ((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
             C35616 * C22720 + C35617 * C50796) *
                C50899 +
            ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
             (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                C50628) *
               C50749 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C1725) *
              C50669 * C1077 +
          (((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
             C35153 * C50796) *
                C50899 +
            ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
             (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 + C31637 * C950) *
                 C50796 +
             (C31640 * C1264 + C50822 * C1269 + C31639 * C935 + C31637 * C943) *
                 C22720 +
             (C32412 + C32411) * C22714 + (C32410 + C32409) * C22719) *
                C50628 +
            ((C32631 + C32630) * C50796 + (C32629 + C32628) * C22720 +
             C32397 * C22714 + C32398 * C22719) *
                C50899) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C22719 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C22714 +
            (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
               C50899 +
           ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
            C34716 * C22720 + C34717 * C50796) *
               C50628) *
              C1891 -
          ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
            (C32078 + C32079) * C22719) *
               C50628 +
           ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C22714 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C22719) *
               C50899) *
              C1892 +
          (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C22719 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C22714 +
            (C36172 + C36173) * C22720 + (C36174 + C36175) * C50796) *
               C50899 +
           ((C32080 + C32081) * C22719 + (C32082 + C32083) * C22714 +
            (C34954 + C34955) * C22720 + (C34956 + C34957) * C50796) *
               C50628) *
              C1893 -
          (((C31640 * C16727 + C50822 * C16729 + C31639 * C4578 +
             C31637 * C4583) *
                C50796 +
            (C31640 * C16726 + C50822 * C16728 + C31639 * C4574 +
             C31637 * C4579) *
                C22720 +
            (C31640 * C7434 + C50822 * C7439 + C31639 * C1903 +
             C31637 * C1909) *
                C22714 +
            (C31640 * C7430 + C50822 * C7435 + C31639 * C1897 +
             C31637 * C1904) *
                C22719) *
               C50628 +
           ((C31640 * C14784 + C50822 * C14787 + C31639 * C4580 +
             C31637 * C4584) *
                C50796 +
            (C31640 * C14781 + C50822 * C14785 + C31639 * C4575 +
             C31637 * C4581) *
                C22720 +
            (C31640 * C7436 + C50822 * C7440 + C31639 * C1905 +
             C31637 * C1910) *
                C22714 +
            (C31640 * C7431 + C50822 * C7437 + C31639 * C1898 +
             C31637 * C1906) *
                C22719) *
               C50899) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C50962 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50963 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C22719 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C22714 +
             (C36172 + C36173) * C22720 + (C36174 + C36175) * C50796) *
                C50899 +
            ((C32080 + C32081) * C22719 + (C32082 + C32083) * C22714 +
             (C34954 + C34955) * C22720 + (C34956 + C34957) * C50796) *
                C50628) *
               C2141) *
              C50669 * C50908 +
          ((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
             C35616 * C22720 + C35617 * C50796) *
                C50899 +
            ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
             (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                C50628) *
               C50963 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C50962 -
           (((C31640 * C4576 + C50822 * C4582 + C31639 * C1270 +
              C31637 * C1277) *
                 C50796 +
             (C31640 * C4573 + C50822 * C4577 + C31639 * C1265 +
              C31637 * C1271) *
                 C22720 +
             (C32087 + C32086) * C22714 + (C32085 + C32084) * C22719) *
                C50628 +
            ((C34957 + C34956) * C50796 + (C34955 + C34954) * C22720 +
             (C32083 + C32082) * C22714 + (C32081 + C32080) * C22719) *
                C50899) *
               C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50749) *
              C50669 * C1076 +
          ((((C32079 + C32078) * C22719 + (C32077 + C32076) * C22714 +
             C35616 * C22720 + C35617 * C50796) *
                C50899 +
            ((C32075 + C32074) * C22719 + (C32073 + C32072) * C22714 +
             (C32628 + C32629) * C22720 + (C32630 + C32631) * C50796) *
                C50628) *
               C50749 -
           ((C32234 * C50796 + C32235 * C22720 + (C31681 + C31680) * C22714 +
             (C31679 + C31678) * C22719) *
                C50628 +
            (C34720 * C50796 + C34721 * C22720 + (C31677 + C31676) * C22714 +
             (C31675 + C31674) * C22719) *
                C50899) *
               C1725) *
              C50669 * C1077 +
          (((C31690 * C22719 + C31691 * C22714 + C35152 * C22720 +
             C35153 * C50796) *
                C50899 +
            ((C31685 + C31684) * C22719 + (C31683 + C31682) * C22714 +
             (C32246 + C32247) * C22720 + (C32248 + C32249) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 + C31637 * C950) *
                 C50796 +
             (C31640 * C1264 + C50822 * C1269 + C31639 * C935 + C31637 * C943) *
                 C22720 +
             (C32412 + C32411) * C22714 + (C32410 + C32409) * C22719) *
                C50628 +
            ((C32631 + C32630) * C50796 + (C32629 + C32628) * C22720 +
             C32397 * C22714 + C32398 * C22719) *
                C50899) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C22719 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C22714 +
             (C34740 + C34741) * C22720 + (C34742 + C34743) * C50796) *
                C50899 +
            ((C31674 + C31675) * C22719 + (C31676 + C31677) * C22714 +
             C34716 * C22720 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C22720 + (C32076 + C32077) * C22714 +
             (C32078 + C32079) * C22719) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C22720 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C22714 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C22719) *
                C50899) *
               C50749) *
              C289 +
          ((((C35629 + C35628) * C22719 + (C35627 + C35626) * C22714 +
             (C36830 + C36831) * C22720 + (C36832 + C36833) * C50796) *
                C50899 +
            (C35616 * C22719 + C35617 * C22714 + (C35630 + C35631) * C22720 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50749 -
           ((C34718 * C50796 + C34719 * C22720 + C34720 * C22714 +
             C34721 * C22719) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C22720 +
             (C34743 + C34742) * C22714 + (C34741 + C34740) * C22719) *
                C50899) *
               C1725) *
              C290 +
          ((((C34747 + C34746) * C22719 + (C34745 + C34744) * C22714 +
             (C35966 + C35967) * C22720 + (C35968 + C35969) * C50796) *
                C50899 +
            (C34730 * C22719 + C34731 * C22714 + (C34748 + C34749) * C22720 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C50796 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C22720 +
             (C35633 + C35632) * C22714 + (C35631 + C35630) * C22719) *
                C50628 +
            ((C31640 * C9297 + C50822 * C9300 + C31639 * C4172 +
              C31637 * C4176) *
                 C50796 +
             (C31640 * C9294 + C50822 * C9298 + C31639 * C4167 +
              C31637 * C4173) *
                 C22720 +
             (C36833 + C36832) * C22714 + (C36831 + C36830) * C22719) *
                C50899) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50685 * C50916 -
           ((C35969 + C35968) * C25427 + (C35967 + C35966) * C25432 +
            (C34744 + C34745) * C50953 + (C34746 + C34747) * C25431 +
            (C34743 + C34742) * C50964 + (C34741 + C34740) * C25430) *
               C50623 * C50685 * C50721) *
              C50958 +
          ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
            C34731 * C50953 + (C34748 + C34749) * C25432 +
            (C34750 + C34751) * C25427) *
               C50623 * C50685 * C50721 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50685 * C50916) *
              C50959 +
          ((C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
            C35153 * C50953 + (C31890 + C31891) * C25432 +
            (C31892 + C31893) * C25427) *
               C50623 * C50685 * C50916 -
           ((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
             C31637 * C1163) *
                C25427 +
            (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
             C31637 * C1157) *
                C25432 +
            (C31893 + C31892) * C50953 + (C31891 + C31890) * C25431 +
            C32234 * C50964 + C32235 * C25430) *
               C50623 * C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C25430 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50964 +
             (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
             C44548 * C25432 + C44549 * C25427) *
                C50623 * C50917 -
            ((C36833 + C36832) * C25427 + (C36831 + C36830) * C25432 +
             (C35626 + C35627) * C50953 + (C35628 + C35629) * C25431 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50964 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C25430) *
                C50623 * C50749) *
               C50916 +
           (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
             (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
             (C31639 * C4167 + C31637 * C4173 + C31640 * C9294 +
              C50822 * C9298) *
                 C25432 +
             (C31639 * C4172 + C31637 * C4176 + C31640 * C9297 +
              C50822 * C9300) *
                 C25427) *
                C50623 * C50749 -
            ((C35969 + C35968) * C25427 + (C35967 + C35966) * C25432 +
             (C34744 + C34745) * C50953 + (C34746 + C34747) * C25431 +
             (C34743 + C34742) * C50964 + (C34741 + C34740) * C25430) *
                C50623 * C50917) *
               C50721) *
              C292 +
          ((((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
             C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
             (C35632 + C35633) * C25427) *
                C50623 * C50749 -
            (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
             C34721 * C25431 + (C31677 + C31676) * C50964 +
             (C31675 + C31674) * C25430) *
                C50623 * C50917) *
               C50916 +
           ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
             C34731 * C50953 + (C34748 + C34749) * C25432 +
             (C34750 + C34751) * C25427) *
                C50623 * C50917 -
            ((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C25427 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C25432 +
             (C35633 + C35632) * C50953 + (C35631 + C35630) * C25431 +
             C35606 * C50964 + C35607 * C25430) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50685 * C289 -
           ((C35969 + C35968) * C25427 + (C35967 + C35966) * C25432 +
            (C34744 + C34745) * C50953 + (C34746 + C34747) * C25431 +
            (C34743 + C34742) * C50964 + (C34741 + C34740) * C25430) *
               C50623 * C50685 * C290 +
           (C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
            (C35968 + C35969) * C50953 +
            (C31639 * C3499 + C31637 * C3505 + C31640 * C9794 +
             C50822 * C9798) *
                C25432 +
            (C31639 * C3504 + C31637 * C3508 + C31640 * C9797 +
             C50822 * C9800) *
                C25427) *
               C50623 * C50685 * C291) *
              C292 +
          ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
            C34731 * C50953 + (C34748 + C34749) * C25432 +
            (C34750 + C34751) * C25427) *
               C50623 * C50685 * C290 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50685 * C289 -
           ((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C25427 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C25432 +
            (C34751 + C34750) * C50953 + (C34749 + C34748) * C25431 +
            C34718 * C50964 + C34719 * C25430) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
               C25430 +
           (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
               C50964 +
           (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
           (C34747 + C34746) * C25432 + (C34745 + C34744) * C25427) *
              C50623 * C50685 * C50669 * C113 -
          (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
           C34721 * C25431 + (C31677 + C31676) * C50964 +
           (C31675 + C31674) * C25430) *
              C50623 * C50685 * C50669 * C114 +
          (C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
           C35153 * C50953 + (C31890 + C31891) * C25432 +
           (C31892 + C31893) * C25427) *
              C50623 * C50685 * C50669 * C115 -
          ((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
               C25427 +
           (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
               C25432 +
           (C32249 + C32248) * C50953 + (C32247 + C32246) * C25431 +
           C31692 * C50964 + C31693 * C25430) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C480 -
           ((C36833 + C36832) * C25427 + (C36831 + C36830) * C25432 +
            (C35626 + C35627) * C50953 + (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C481 +
           ((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C25430 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C50964 +
            (C36172 + C36173) * C25431 + (C36174 + C36175) * C50953 +
            (C31639 * C3663 + C31637 * C3669 + C31640 * C10198 +
             C50822 * C10202) *
                C25432 +
            (C31639 * C3668 + C31637 * C3672 + C31640 * C10201 +
             C50822 * C10204) *
                C25427) *
               C50623 * C482) *
              C50669 * C292 +
          (((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
            C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
            (C35632 + C35633) * C25427) *
               C50623 * C481 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C480 -
           ((C31640 * C10199 + C50822 * C10203 + C31639 * C3666 +
             C31637 * C3671) *
                C25427 +
            (C31640 * C10197 + C50822 * C10200 + C31639 * C3662 +
             C31637 * C3667) *
                C25432 +
            (C34957 + C34956) * C50953 + (C34955 + C34954) * C25431 +
            (C32083 + C32082) * C50964 + (C32081 + C32080) * C25430) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50917 -
           ((C36833 + C36832) * C25427 + (C36831 + C36830) * C25432 +
            (C35626 + C35627) * C50953 + (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50749) *
              C50669 * C50958 +
          (((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
            C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
            (C35632 + C35633) * C25427) *
               C50623 * C50749 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50917) *
              C50669 * C50959 +
          ((C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
            C35153 * C50953 + (C31890 + C31891) * C25432 +
            (C31892 + C31893) * C25427) *
               C50623 * C50917 -
           ((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
             C31637 * C1624) *
                C25427 +
            (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
             C31637 * C1618) *
                C25432 +
            (C32631 + C32630) * C50953 + (C32629 + C32628) * C25431 +
            C32397 * C50964 + C32398 * C25430) *
               C50623 * C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
               C25430 +
           (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
               C50964 +
           (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
           (C34747 + C34746) * C25432 + (C34745 + C34744) * C25427) *
              C50623 * C50685 * C50669 * C113 -
          (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
           C34721 * C25431 + (C31677 + C31676) * C50964 +
           (C31675 + C31674) * C25430) *
              C50623 * C50685 * C50669 * C114 +
          (C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
           C35153 * C50953 + (C31890 + C31891) * C25432 +
           (C31892 + C31893) * C25427) *
              C50623 * C50685 * C50669 * C115 -
          ((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
               C25427 +
           (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
               C25432 +
           (C32249 + C32248) * C50953 + (C32247 + C32246) * C25431 +
           C31692 * C50964 + C31693 * C25430) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50685 * C289 -
           ((C35969 + C35968) * C25427 + (C35967 + C35966) * C25432 +
            (C34744 + C34745) * C50953 + (C34746 + C34747) * C25431 +
            (C34743 + C34742) * C50964 + (C34741 + C34740) * C25430) *
               C50623 * C50685 * C290 +
           (C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
            (C35968 + C35969) * C50953 +
            (C31639 * C3499 + C31637 * C3505 + C31640 * C9794 +
             C50822 * C9798) *
                C25432 +
            (C31639 * C3504 + C31637 * C3508 + C31640 * C9797 +
             C50822 * C9800) *
                C25427) *
               C50623 * C50685 * C291) *
              C292 +
          ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
            C34731 * C50953 + (C34748 + C34749) * C25432 +
            (C34750 + C34751) * C25427) *
               C50623 * C50685 * C290 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50685 * C289 -
           ((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C25427 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C25432 +
            (C34751 + C34750) * C50953 + (C34749 + C34748) * C25431 +
            C34718 * C50964 + C34719 * C25430) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50685 * C50960 -
           (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
            (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
            (C34741 + C34740) * C25430) *
               C50623 * C50685 * C50961 +
           (C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
            (C35968 + C35969) * C50953 + (C45436 + C45437) * C25432 +
            (C45438 + C45439) * C25427) *
               C50623 * C50685 * C1380) *
              C50908 +
          ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
            C34731 * C50953 + (C34748 + C34749) * C25432 +
            (C34750 + C34751) * C25427) *
               C50623 * C50685 * C50961 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50685 * C50960 -
           ((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C25427 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C25432 +
            (C34751 + C34750) * C50953 + (C34749 + C34748) * C25431 +
            C34718 * C50964 + C34719 * C25430) *
               C50623 * C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50917 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50749) *
              C50960 +
          (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
            (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
            (C46094 + C46095) * C25432 + (C46096 + C46097) * C25427) *
               C50623 * C50749 -
           (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
            (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
            (C34741 + C34740) * C25430) *
               C50623 * C50917) *
              C50961 +
          ((C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
            (C35968 + C35969) * C50953 + (C45436 + C45437) * C25432 +
            (C45438 + C45439) * C25427) *
               C50623 * C50917 -
           ((C31640 * C11561 + C50822 * C11563 + C31639 * C9797 +
             C31637 * C9800) *
                C25427 +
            (C31640 * C11560 + C50822 * C11562 + C31639 * C9794 +
             C31637 * C9798) *
                C25432 +
            (C46097 + C46096) * C50953 + (C46095 + C46094) * C25431 +
            C46084 * C50964 + C46085 * C25430) *
               C50623 * C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
               C25430 +
           (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
               C50964 +
           (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
           C44548 * C25432 + C44549 * C25427) *
              C50623 * C50685 * C1145 -
          (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
           (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
           (C34741 + C34740) * C25430) *
              C50623 * C50685 * C1146 +
          (C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
           (C35968 + C35969) * C50953 + (C45436 + C45437) * C25432 +
           (C45438 + C45439) * C25427) *
              C50623 * C50685 * C1147 -
          ((C31640 * C11897 + C50822 * C11899 + C31639 * C9137 +
            C31637 * C9140) *
               C25427 +
           (C31640 * C11896 + C50822 * C11898 + C31639 * C9134 +
            C31637 * C9138) *
               C25432 +
           (C45439 + C45438) * C50953 + (C45437 + C45436) * C25431 +
           C45426 * C50964 + C45427 * C25430) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50685 * C1074 -
           ((C35969 + C35968) * C25427 + (C35967 + C35966) * C25432 +
            (C34744 + C34745) * C50953 + (C34746 + C34747) * C25431 +
            (C34743 + C34742) * C50964 + (C34741 + C34740) * C25430) *
               C50623 * C50685 * C50721) *
              C1076 +
          ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
            C34731 * C50953 + (C34748 + C34749) * C25432 +
            (C34750 + C34751) * C25427) *
               C50623 * C50685 * C50721 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
            C35153 * C50953 + (C31890 + C31891) * C25432 +
            (C31892 + C31893) * C25427) *
               C50623 * C50685 * C1074 -
           ((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
             C31637 * C1163) *
                C25427 +
            (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
             C31637 * C1157) *
                C25432 +
            (C31893 + C31892) * C50953 + (C31891 + C31890) * C25431 +
            C32234 * C50964 + C32235 * C25430) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C480 -
           ((C36833 + C36832) * C25427 + (C36831 + C36830) * C25432 +
            (C35626 + C35627) * C50953 + (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C481 +
           ((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C25430 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C50964 +
            (C36172 + C36173) * C25431 + (C36174 + C36175) * C50953 +
            (C45594 + C45595) * C25432 + (C45596 + C45597) * C25427) *
               C50623 * C482) *
              C1074 +
          (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
            (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
            (C31639 * C4167 + C31637 * C4173 + C31640 * C9294 +
             C50822 * C9298) *
                C25432 +
            (C31639 * C4172 + C31637 * C4176 + C31640 * C9297 +
             C50822 * C9300) *
                C25427) *
               C50623 * C481 -
           (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
            (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
            (C34741 + C34740) * C25430) *
               C50623 * C480 -
           ((C31640 * C12169 + C50822 * C12171 + C31639 * C9297 +
             C31637 * C9300) *
                C25427 +
            (C31640 * C12168 + C50822 * C12170 + C31639 * C9294 +
             C31637 * C9298) *
                C25432 +
            (C45597 + C45596) * C50953 + (C45595 + C45594) * C25431 +
            (C36175 + C36174) * C50964 + (C36173 + C36172) * C25430) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C25430 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50964 +
             (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
             C44548 * C25432 + C44549 * C25427) *
                C50623 * C50917 -
            ((C36833 + C36832) * C25427 + (C36831 + C36830) * C25432 +
             (C35626 + C35627) * C50953 + (C35628 + C35629) * C25431 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50964 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C25430) *
                C50623 * C50749) *
               C1074 +
           (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
             (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
             (C31639 * C4167 + C31637 * C4173 + C31640 * C9294 +
              C50822 * C9298) *
                 C25432 +
             (C31639 * C4172 + C31637 * C4176 + C31640 * C9297 +
              C50822 * C9300) *
                 C25427) *
                C50623 * C50749 -
            (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
             (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
             (C34741 + C34740) * C25430) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          ((((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
             C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
             (C35632 + C35633) * C25427) *
                C50623 * C50749 -
            (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
             C34721 * C25431 + (C31677 + C31676) * C50964 +
             (C31675 + C31674) * C25430) *
                C50623 * C50917) *
               C1074 +
           ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
             C34731 * C50953 + (C34748 + C34749) * C25432 +
             (C34750 + C34751) * C25427) *
                C50623 * C50917 -
            ((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C25427 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C25432 +
             (C35633 + C35632) * C50953 + (C35631 + C35630) * C25431 +
             C35606 * C50964 + C35607 * C25430) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50685 * C1074 -
           ((C35969 + C35968) * C25427 + (C35967 + C35966) * C25432 +
            (C34744 + C34745) * C50953 + (C34746 + C34747) * C25431 +
            (C34743 + C34742) * C50964 + (C34741 + C34740) * C25430) *
               C50623 * C50685 * C50721) *
              C1076 +
          ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
            C34731 * C50953 + (C34748 + C34749) * C25432 +
            (C34750 + C34751) * C25427) *
               C50623 * C50685 * C50721 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
            C35153 * C50953 + (C31890 + C31891) * C25432 +
            (C31892 + C31893) * C25427) *
               C50623 * C50685 * C1074 -
           ((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
             C31637 * C1163) *
                C25427 +
            (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
             C31637 * C1157) *
                C25432 +
            (C31893 + C31892) * C50953 + (C31891 + C31890) * C25431 +
            C32234 * C50964 + C32235 * C25430) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
               C25430 +
           (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
               C50964 +
           (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
           C44548 * C25432 + C44549 * C25427) *
              C50623 * C50685 * C1145 -
          (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
           (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
           (C34741 + C34740) * C25430) *
              C50623 * C50685 * C1146 +
          (C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
           (C35968 + C35969) * C50953 + (C45436 + C45437) * C25432 +
           (C45438 + C45439) * C25427) *
              C50623 * C50685 * C1147 -
          ((C31640 * C11897 + C50822 * C11899 + C31639 * C9137 +
            C31637 * C9140) *
               C25427 +
           (C31640 * C11896 + C50822 * C11898 + C31639 * C9134 +
            C31637 * C9138) *
               C25432 +
           (C45439 + C45438) * C50953 + (C45437 + C45436) * C25431 +
           C45426 * C50964 + C45427 * C25430) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C25430 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50964 +
             (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
             C44548 * C25432 + C44549 * C25427) *
                C50623 * C1725 -
            (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
             (C35628 + C35629) * C25431 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50964 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C25430) *
                C50623 * C50749) *
               C50916 +
           (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
             (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
             (C46094 + C46095) * C25432 + (C46096 + C46097) * C25427) *
                C50623 * C50749 -
            (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
             (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
             (C34741 + C34740) * C25430) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          ((((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
             C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
             (C35632 + C35633) * C25427) *
                C50623 * C50749 -
            (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
             C34721 * C25431 + (C31677 + C31676) * C50964 +
             (C31675 + C31674) * C25430) *
                C50623 * C1725) *
               C50916 +
           ((C34716 * C25430 + C34717 * C50964 + C34730 * C25431 +
             C34731 * C50953 + (C34748 + C34749) * C25432 +
             (C34750 + C34751) * C25427) *
                C50623 * C1725 -
            ((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C25427 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C25432 +
             (C35633 + C35632) * C50953 + (C35631 + C35630) * C25431 +
             C35606 * C50964 + C35607 * C25430) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50962 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50963 +
           ((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C25430 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C50964 +
            (C36172 + C36173) * C25431 + (C36174 + C36175) * C50953 +
            (C45594 + C45595) * C25432 + (C45596 + C45597) * C25427) *
               C50623 * C2141) *
              C50916 +
          (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
            (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
            (C46094 + C46095) * C25432 + (C46096 + C46097) * C25427) *
               C50623 * C50963 -
           (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
            (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
            (C34741 + C34740) * C25430) *
               C50623 * C50962 -
           ((C31640 * C12169 + C50822 * C12171 + C31639 * C9297 +
             C31637 * C9300) *
                C25427 +
            (C31640 * C12168 + C50822 * C12170 + C31639 * C9294 +
             C31637 * C9298) *
                C25432 +
            (C45597 + C45596) * C50953 + (C45595 + C45594) * C25431 +
            (C36175 + C36174) * C50964 + (C36173 + C36172) * C25430) *
               C50623 * C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C1725 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50749) *
              C289 +
          (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
            (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
            (C46094 + C46095) * C25432 + (C46096 + C46097) * C25427) *
               C50623 * C50749 -
           (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
            (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
            (C34741 + C34740) * C25430) *
               C50623 * C1725) *
              C290 +
          ((C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
            (C35968 + C35969) * C50953 + (C45436 + C45437) * C25432 +
            (C45438 + C45439) * C25427) *
               C50623 * C1725 -
           ((C31640 * C11561 + C50822 * C11563 + C31639 * C9797 +
             C31637 * C9800) *
                C25427 +
            (C31640 * C11560 + C50822 * C11562 + C31639 * C9794 +
             C31637 * C9798) *
                C25432 +
            (C46097 + C46096) * C50953 + (C46095 + C46094) * C25431 +
            C46084 * C50964 + C46085 * C25430) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C1725 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
            C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
            (C35632 + C35633) * C25427) *
               C50623 * C50749 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
            C35153 * C50953 + (C31890 + C31891) * C25432 +
            (C31892 + C31893) * C25427) *
               C50623 * C1725 -
           ((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
             C31637 * C1624) *
                C25427 +
            (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
             C31637 * C1618) *
                C25432 +
            (C32631 + C32630) * C50953 + (C32629 + C32628) * C25431 +
            C32397 * C50964 + C32398 * C25430) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
               C25430 +
           (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
               C50964 +
           (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
           C44548 * C25432 + C44549 * C25427) *
              C50623 * C1891 -
          (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
           (C35628 + C35629) * C25431 +
           (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
               C50964 +
           (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
               C25430) *
              C50623 * C1892 +
          ((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
               C25430 +
           (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
               C50964 +
           (C36172 + C36173) * C25431 + (C36174 + C36175) * C50953 +
           (C45594 + C45595) * C25432 + (C45596 + C45597) * C25427) *
              C50623 * C1893 -
          ((C31640 * C14782 + C50822 * C14786 + C31639 * C10201 +
            C31637 * C10204) *
               C25427 +
           (C31640 * C14780 + C50822 * C14783 + C31639 * C10198 +
            C31637 * C10202) *
               C25432 +
           (C31640 * C14784 + C50822 * C14787 + C31639 * C4580 +
            C31637 * C4584) *
               C50953 +
           (C31640 * C14781 + C50822 * C14785 + C31639 * C4575 +
            C31637 * C4581) *
               C25431 +
           (C31640 * C7436 + C50822 * C7440 + C31639 * C1905 + C31637 * C1910) *
               C50964 +
           (C31640 * C7431 + C50822 * C7437 + C31639 * C1898 + C31637 * C1906) *
               C25430) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C50962 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50963 +
           ((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C25430 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C50964 +
            (C36172 + C36173) * C25431 + (C36174 + C36175) * C50953 +
            (C45594 + C45595) * C25432 + (C45596 + C45597) * C25427) *
               C50623 * C2141) *
              C50669 * C50908 +
          (((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
            C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
            (C35632 + C35633) * C25427) *
               C50623 * C50963 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C50962 -
           ((C31640 * C10199 + C50822 * C10203 + C31639 * C3666 +
             C31637 * C3671) *
                C25427 +
            (C31640 * C10197 + C50822 * C10200 + C31639 * C3662 +
             C31637 * C3667) *
                C25432 +
            (C34957 + C34956) * C50953 + (C34955 + C34954) * C25431 +
            (C32083 + C32082) * C50964 + (C32081 + C32080) * C25430) *
               C50623 * C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C1725 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C32079 + C32078) * C25430 + (C32077 + C32076) * C50964 +
            C35616 * C25431 + C35617 * C50953 + (C35630 + C35631) * C25432 +
            (C35632 + C35633) * C25427) *
               C50623 * C50749 -
           (C34718 * C25427 + C34719 * C25432 + C34720 * C50953 +
            C34721 * C25431 + (C31677 + C31676) * C50964 +
            (C31675 + C31674) * C25430) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C31690 * C25430 + C31691 * C50964 + C35152 * C25431 +
            C35153 * C50953 + (C31890 + C31891) * C25432 +
            (C31892 + C31893) * C25427) *
               C50623 * C1725 -
           ((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
             C31637 * C1624) *
                C25427 +
            (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
             C31637 * C1618) *
                C25432 +
            (C32631 + C32630) * C50953 + (C32629 + C32628) * C25431 +
            C32397 * C50964 + C32398 * C25430) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C25430 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50964 +
            (C34740 + C34741) * C25431 + (C34742 + C34743) * C50953 +
            C44548 * C25432 + C44549 * C25427) *
               C50623 * C1725 -
           (C46084 * C25427 + C46085 * C25432 + (C35626 + C35627) * C50953 +
            (C35628 + C35629) * C25431 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50964 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C25430) *
               C50623 * C50749) *
              C289 +
          (((C35629 + C35628) * C25430 + (C35627 + C35626) * C50964 +
            (C36830 + C36831) * C25431 + (C36832 + C36833) * C50953 +
            (C46094 + C46095) * C25432 + (C46096 + C46097) * C25427) *
               C50623 * C50749 -
           (C45426 * C25427 + C45427 * C25432 + (C34744 + C34745) * C50953 +
            (C34746 + C34747) * C25431 + (C34743 + C34742) * C50964 +
            (C34741 + C34740) * C25430) *
               C50623 * C1725) *
              C290 +
          ((C44548 * C25430 + C44549 * C50964 + (C35966 + C35967) * C25431 +
            (C35968 + C35969) * C50953 + (C45436 + C45437) * C25432 +
            (C45438 + C45439) * C25427) *
               C50623 * C1725 -
           ((C31640 * C11561 + C50822 * C11563 + C31639 * C9797 +
             C31637 * C9800) *
                C25427 +
            (C31640 * C11560 + C50822 * C11562 + C31639 * C9794 +
             C31637 * C9798) *
                C25432 +
            (C46097 + C46096) * C50953 + (C46095 + C46094) * C25431 +
            C46084 * C50964 + C46085 * C25430) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50685 * C50916 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50685 * C50721) *
                      C50958 +
                  (((C38331 + C38330 + C38329) * C22719 +
                    (C38328 + C38327 + C38326) * C22714 +
                    (C38332 + C38333 + C38334) * C22720 +
                    (C38335 + C38336 + C38337) * C50796) *
                       C50623 * C50685 * C50721 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50685 * C50916) *
                      C50959 +
                  (((C38149 + C38148 + C38147) * C22719 +
                    (C38146 + C38145 + C38144) * C22714 +
                    (C38678 + C38679 + C38680) * C22720 +
                    (C38681 + C38682 + C38683) * C50796) *
                       C50623 * C50685 * C50916 -
                   ((C38100 * C3664 + C38097 * C3670 + C38099 * C1617 +
                     C50956 * C1624 + C38098 * C317 + C50965 * C330) *
                        C50796 +
                    (C38100 * C3661 + C38097 * C3665 + C38099 * C1612 +
                     C50956 * C1618 + C38098 * C300 + C50965 * C316) *
                        C22720 +
                    (C38683 + C38682 + C38681) * C22714 +
                    (C38680 + C38679 + C38678) * C22719) *
                       C50623 * C50685 * C50721) *
                      C673)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C22719 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C22714 +
                     (C47242 + C47243 + C47244) * C22720 +
                     (C47245 + C47246 + C47247) * C50796) *
                        C50623 * C50917 -
                    ((C47898 + C47899 + C47900) * C50796 +
                     (C47901 + C47902 + C47903) * C22720 +
                     (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                      C50956 * C517 + C38098 * C499 + C50965 * C516) *
                         C22714 +
                     (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                      C50956 * C501 + C38098 * C486 + C50965 * C500) *
                         C22719) *
                        C50623 * C50749) *
                       C50916 +
                   (((C47903 + C47902 + C47901) * C22719 +
                     (C47900 + C47899 + C47898) * C22714 +
                     (C38098 * C1614 + C50965 * C1622 + C38099 * C3663 +
                      C50956 * C3669 + C38100 * C10198 + C38097 * C10202) *
                         C22720 +
                     (C38098 * C1621 + C50965 * C1626 + C38099 * C3668 +
                      C50956 * C3672 + C38100 * C10201 + C38097 * C10204) *
                         C50796) *
                        C50623 * C50749 -
                    ((C47248 + C47249 + C47250) * C50796 +
                     (C47251 + C47252 + C47253) * C22720 +
                     (C47247 + C47246 + C47245) * C22714 +
                     (C47244 + C47243 + C47242) * C22719) *
                        C50623 * C50917) *
                       C50721) *
                      C292 +
                  ((((C38513 + C38512 + C38511) * C22719 +
                     (C38510 + C38509 + C38508) * C22714 +
                     (C39054 + C39055 + C39056) * C22720 +
                     (C39057 + C39058 + C39059) * C50796) *
                        C50623 * C50749 -
                    ((C38326 + C38327 + C38328) * C50796 +
                     (C38329 + C38330 + C38331) * C22720 +
                     (C38143 + C38142 + C38141) * C22714 +
                     (C38140 + C38139 + C38138) * C22719) *
                        C50623 * C50917) *
                       C50916 +
                   (((C38331 + C38330 + C38329) * C22719 +
                     (C38328 + C38327 + C38326) * C22714 +
                     (C38332 + C38333 + C38334) * C22720 +
                     (C38335 + C38336 + C38337) * C50796) *
                        C50623 * C50917 -
                    ((C38100 * C10199 + C38097 * C10203 + C38099 * C3666 +
                      C50956 * C3671 + C38098 * C1619 + C50965 * C1625) *
                         C50796 +
                     (C38100 * C10197 + C38097 * C10200 + C38099 * C3662 +
                      C50956 * C3667 + C38098 * C1613 + C50965 * C1620) *
                         C22720 +
                     (C39059 + C39058 + C39057) * C22714 +
                     (C39056 + C39055 + C39054) * C22719) *
                        C50623 * C50749) *
                       C50721) *
                      C50656)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50685 * C289 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50685 * C290 +
                   ((C47253 + C47252 + C47251) * C22719 +
                    (C47250 + C47249 + C47248) * C22714 +
                    (C38098 * C1153 + C50965 * C1161 + C38099 * C4167 +
                     C50956 * C4173 + C38100 * C9294 + C38097 * C9298) *
                        C22720 +
                    (C38098 * C1160 + C50965 * C1165 + C38099 * C4172 +
                     C50956 * C4176 + C38100 * C9297 + C38097 * C9300) *
                        C50796) *
                       C50623 * C50685 * C291) *
                      C292 +
                  (((C38331 + C38330 + C38329) * C22719 +
                    (C38328 + C38327 + C38326) * C22714 +
                    (C38332 + C38333 + C38334) * C22720 +
                    (C38335 + C38336 + C38337) * C50796) *
                       C50623 * C50685 * C290 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50685 * C289 -
                   ((C38100 * C9295 + C38097 * C9299 + C38099 * C4170 +
                     C50956 * C4175 + C38098 * C1158 + C50965 * C1164) *
                        C50796 +
                    (C38100 * C9293 + C38097 * C9296 + C38099 * C4166 +
                     C50956 * C4171 + C38098 * C1152 + C50965 * C1159) *
                        C22720 +
                    (C38337 + C38336 + C38335) * C22714 +
                    (C38334 + C38333 + C38332) * C22719) *
                       C50623 * C50685 * C291) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                    C50956 * C500 + C38100 * C487 + C38097 * C501) *
                       C22719 +
                   (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                    C50956 * C516 + C38100 * C502 + C38097 * C517) *
                       C22714 +
                   (C38098 * C297 + C50965 * C311 + C38099 * C932 +
                    C50956 * C937 + C38100 * C1267 + C38097 * C1275) *
                       C22720 +
                   (C38098 * C310 + C50965 * C327 + C38099 * C938 +
                    C50956 * C947 + C38100 * C1274 + C38097 * C1279) *
                       C50796) *
                      C50623 * C50685 * C50669 * C113 -
                  ((C38326 + C38327 + C38328) * C50796 +
                   (C38329 + C38330 + C38331) * C22720 +
                   (C38143 + C38142 + C38141) * C22714 +
                   (C38140 + C38139 + C38138) * C22719) *
                      C50623 * C50685 * C50669 * C114 +
                  ((C38149 + C38148 + C38147) * C22719 +
                   (C38146 + C38145 + C38144) * C22714 +
                   (C38678 + C38679 + C38680) * C22720 +
                   (C38681 + C38682 + C38683) * C50796) *
                      C50623 * C50685 * C50669 * C115 -
                  ((C38100 * C1268 + C38097 * C1276 + C38099 * C944 +
                    C50956 * C950 + C38098 * C304 + C50965 * C324) *
                       C50796 +
                   (C38100 * C1264 + C38097 * C1269 + C38099 * C935 +
                    C50956 * C943 + C38098 * C294 + C50965 * C305) *
                       C22720 +
                   (C38155 + C38154 + C38153) * C22714 +
                   (C38152 + C38151 + C38150) * C22719) *
                      C50623 * C50685 * C50669 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C480 -
                   ((C38100 * C4580 + C38097 * C4584 + C38099 * C1274 +
                     C50956 * C1279 + C38098 * C938 + C50965 * C947) *
                        C50796 +
                    (C38100 * C4575 + C38097 * C4581 + C38099 * C1267 +
                     C50956 * C1275 + C38098 * C932 + C50965 * C937) *
                        C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C481 +
                   ((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                     C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                        C22719 +
                    (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                     C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                        C22714 +
                    (C38098 * C1267 + C50965 * C1275 + C38099 * C4575 +
                     C50956 * C4581 + C38100 * C14781 + C38097 * C14785) *
                        C22720 +
                    (C38098 * C1274 + C50965 * C1279 + C38099 * C4580 +
                     C50956 * C4584 + C38100 * C14784 + C38097 * C14787) *
                        C50796) *
                       C50623 * C482) *
                      C50669 * C292 +
                  (((C38513 + C38512 + C38511) * C22719 +
                    (C38510 + C38509 + C38508) * C22714 +
                    (C39054 + C39055 + C39056) * C22720 +
                    (C39057 + C39058 + C39059) * C50796) *
                       C50623 * C481 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C480 -
                   ((C38100 * C16727 + C38097 * C16729 + C38099 * C4578 +
                     C50956 * C4583 + C38098 * C1272 + C50965 * C1278) *
                        C50796 +
                    (C38100 * C16726 + C38097 * C16728 + C38099 * C4574 +
                     C50956 * C4579 + C38098 * C1266 + C50965 * C1273) *
                        C22720 +
                    (C38519 + C38518 + C38517) * C22714 +
                    (C38516 + C38515 + C38514) * C22719) *
                       C50623 * C482) *
                      C50669 * C50656)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50917 -
                   ((C38100 * C4580 + C38097 * C4584 + C38099 * C1274 +
                     C50956 * C1279 + C38098 * C938 + C50965 * C947) *
                        C50796 +
                    (C38100 * C4575 + C38097 * C4581 + C38099 * C1267 +
                     C50956 * C1275 + C38098 * C932 + C50965 * C937) *
                        C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50749) *
                      C50669 * C50958 +
                  (((C38513 + C38512 + C38511) * C22719 +
                    (C38510 + C38509 + C38508) * C22714 +
                    (C39054 + C39055 + C39056) * C22720 +
                    (C39057 + C39058 + C39059) * C50796) *
                       C50623 * C50749 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50917) *
                      C50669 * C50959 +
                  (((C38149 + C38148 + C38147) * C22719 +
                    (C38146 + C38145 + C38144) * C22714 +
                    (C38678 + C38679 + C38680) * C22720 +
                    (C38681 + C38682 + C38683) * C50796) *
                       C50623 * C50917 -
                   ((C38100 * C4576 + C38097 * C4582 + C38099 * C1270 +
                     C50956 * C1277 + C38098 * C942 + C50965 * C949) *
                        C50796 +
                    (C38100 * C4573 + C38097 * C4577 + C38099 * C1265 +
                     C50956 * C1271 + C38098 * C934 + C50965 * C941) *
                        C22720 +
                    (C38847 + C38846 + C38845) * C22714 +
                    (C38844 + C38843 + C38842) * C22719) *
                       C50623 * C50749) *
                      C50669 * C673)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                    C50956 * C500 + C38100 * C487 + C38097 * C501) *
                       C22719 +
                   (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                    C50956 * C516 + C38100 * C502 + C38097 * C517) *
                       C22714 +
                   (C38098 * C297 + C50965 * C311 + C38099 * C932 +
                    C50956 * C937 + C38100 * C1267 + C38097 * C1275) *
                       C22720 +
                   (C38098 * C310 + C50965 * C327 + C38099 * C938 +
                    C50956 * C947 + C38100 * C1274 + C38097 * C1279) *
                       C50796) *
                      C50623 * C50685 * C50669 * C113 -
                  ((C38326 + C38327 + C38328) * C50796 +
                   (C38329 + C38330 + C38331) * C22720 +
                   (C38143 + C38142 + C38141) * C22714 +
                   (C38140 + C38139 + C38138) * C22719) *
                      C50623 * C50685 * C50669 * C114 +
                  ((C38149 + C38148 + C38147) * C22719 +
                   (C38146 + C38145 + C38144) * C22714 +
                   (C38678 + C38679 + C38680) * C22720 +
                   (C38681 + C38682 + C38683) * C50796) *
                      C50623 * C50685 * C50669 * C115 -
                  ((C38100 * C1268 + C38097 * C1276 + C38099 * C944 +
                    C50956 * C950 + C38098 * C304 + C50965 * C324) *
                       C50796 +
                   (C38100 * C1264 + C38097 * C1269 + C38099 * C935 +
                    C50956 * C943 + C38098 * C294 + C50965 * C305) *
                       C22720 +
                   (C38155 + C38154 + C38153) * C22714 +
                   (C38152 + C38151 + C38150) * C22719) *
                      C50623 * C50685 * C50669 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50685 * C289 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50685 * C290 +
                   ((C47253 + C47252 + C47251) * C22719 +
                    (C47250 + C47249 + C47248) * C22714 +
                    (C38098 * C1153 + C50965 * C1161 + C38099 * C4167 +
                     C50956 * C4173 + C38100 * C9294 + C38097 * C9298) *
                        C22720 +
                    (C38098 * C1160 + C50965 * C1165 + C38099 * C4172 +
                     C50956 * C4176 + C38100 * C9297 + C38097 * C9300) *
                        C50796) *
                       C50623 * C50685 * C291) *
                      C292 +
                  (((C38331 + C38330 + C38329) * C22719 +
                    (C38328 + C38327 + C38326) * C22714 +
                    (C38332 + C38333 + C38334) * C22720 +
                    (C38335 + C38336 + C38337) * C50796) *
                       C50623 * C50685 * C290 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50685 * C289 -
                   ((C38100 * C9295 + C38097 * C9299 + C38099 * C4170 +
                     C50956 * C4175 + C38098 * C1158 + C50965 * C1164) *
                        C50796 +
                    (C38100 * C9293 + C38097 * C9296 + C38099 * C4166 +
                     C50956 * C4171 + C38098 * C1152 + C50965 * C1159) *
                        C22720 +
                    (C38337 + C38336 + C38335) * C22714 +
                    (C38334 + C38333 + C38332) * C22719) *
                       C50623 * C50685 * C291) *
                      C50656)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50685 * C50960 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50685 * C50961 +
                   ((C47253 + C47252 + C47251) * C22719 +
                    (C47250 + C47249 + C47248) * C22714 +
                    (C48160 + C48161 + C48162) * C22720 +
                    (C48163 + C48164 + C48165) * C50796) *
                       C50623 * C50685 * C1380) *
                      C50908 +
                  (((C38331 + C38330 + C38329) * C22719 +
                    (C38328 + C38327 + C38326) * C22714 +
                    (C38332 + C38333 + C38334) * C22720 +
                    (C38335 + C38336 + C38337) * C50796) *
                       C50623 * C50685 * C50961 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50685 * C50960 -
                   ((C38100 * C9295 + C38097 * C9299 + C38099 * C4170 +
                     C50956 * C4175 + C38098 * C1158 + C50965 * C1164) *
                        C50796 +
                    (C38100 * C9293 + C38097 * C9296 + C38099 * C4166 +
                     C50956 * C4171 + C38098 * C1152 + C50965 * C1159) *
                        C22720 +
                    (C38337 + C38336 + C38335) * C22714 +
                    (C38334 + C38333 + C38332) * C22719) *
                       C50623 * C50685 * C1380) *
                      C50656)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50917 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50749) *
                      C50960 +
                  (((C47903 + C47902 + C47901) * C22719 +
                    (C47900 + C47899 + C47898) * C22714 +
                    (C48828 + C48829 + C48830) * C22720 +
                    (C48831 + C48832 + C48833) * C50796) *
                       C50623 * C50749 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50917) *
                      C50961 +
                  (((C47253 + C47252 + C47251) * C22719 +
                    (C47250 + C47249 + C47248) * C22714 +
                    (C48160 + C48161 + C48162) * C22720 +
                    (C48163 + C48164 + C48165) * C50796) *
                       C50623 * C50917 -
                   ((C38100 * C12169 + C38097 * C12171 + C38099 * C9297 +
                     C50956 * C9300 + C38098 * C4172 + C50965 * C4176) *
                        C50796 +
                    (C38100 * C12168 + C38097 * C12170 + C38099 * C9294 +
                     C50956 * C9298 + C38098 * C4167 + C50965 * C4173) *
                        C22720 +
                    (C48833 + C48832 + C48831) * C22714 +
                    (C48830 + C48829 + C48828) * C22719) *
                       C50623 * C50749) *
                      C1380) *
                 C50650) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                    C50956 * C500 + C38100 * C487 + C38097 * C501) *
                       C22719 +
                   (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                    C50956 * C516 + C38100 * C502 + C38097 * C517) *
                       C22714 +
                   (C47242 + C47243 + C47244) * C22720 +
                   (C47245 + C47246 + C47247) * C50796) *
                      C50623 * C50685 * C1145 -
                  ((C47248 + C47249 + C47250) * C50796 +
                   (C47251 + C47252 + C47253) * C22720 +
                   (C47247 + C47246 + C47245) * C22714 +
                   (C47244 + C47243 + C47242) * C22719) *
                      C50623 * C50685 * C1146 +
                  ((C47253 + C47252 + C47251) * C22719 +
                   (C47250 + C47249 + C47248) * C22714 +
                   (C48160 + C48161 + C48162) * C22720 +
                   (C48163 + C48164 + C48165) * C50796) *
                      C50623 * C50685 * C1147 -
                  ((C38100 * C11561 + C38097 * C11563 + C38099 * C9797 +
                    C50956 * C9800 + C38098 * C3504 + C50965 * C3508) *
                       C50796 +
                   (C38100 * C11560 + C38097 * C11562 + C38099 * C9794 +
                    C50956 * C9798 + C38098 * C3499 + C50965 * C3505) *
                       C22720 +
                   (C48165 + C48164 + C48163) * C22714 +
                   (C48162 + C48161 + C48160) * C22719) *
                      C50623 * C50685 * C1148) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50685 * C1074 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50685 * C50721) *
                      C1076 +
                  (((C38331 + C38330 + C38329) * C22719 +
                    (C38328 + C38327 + C38326) * C22714 +
                    (C38332 + C38333 + C38334) * C22720 +
                    (C38335 + C38336 + C38337) * C50796) *
                       C50623 * C50685 * C50721 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50685 * C1074) *
                      C1077 +
                  (((C38149 + C38148 + C38147) * C22719 +
                    (C38146 + C38145 + C38144) * C22714 +
                    (C38678 + C38679 + C38680) * C22720 +
                    (C38681 + C38682 + C38683) * C50796) *
                       C50623 * C50685 * C1074 -
                   ((C38100 * C3664 + C38097 * C3670 + C38099 * C1617 +
                     C50956 * C1624 + C38098 * C317 + C50965 * C330) *
                        C50796 +
                    (C38100 * C3661 + C38097 * C3665 + C38099 * C1612 +
                     C50956 * C1618 + C38098 * C300 + C50965 * C316) *
                        C22720 +
                    (C38683 + C38682 + C38681) * C22714 +
                    (C38680 + C38679 + C38678) * C22719) *
                       C50623 * C50685 * C50721) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C480 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C481 +
                   ((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                     C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                        C22719 +
                    (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                     C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                        C22714 +
                    (C48324 + C48325 + C48326) * C22720 +
                    (C48327 + C48328 + C48329) * C50796) *
                       C50623 * C482) *
                      C1074 +
                  (((C47903 + C47902 + C47901) * C22719 +
                    (C47900 + C47899 + C47898) * C22714 +
                    (C38098 * C1614 + C50965 * C1622 + C38099 * C3663 +
                     C50956 * C3669 + C38100 * C10198 + C38097 * C10202) *
                        C22720 +
                    (C38098 * C1621 + C50965 * C1626 + C38099 * C3668 +
                     C50956 * C3672 + C38100 * C10201 + C38097 * C10204) *
                        C50796) *
                       C50623 * C481 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C480 -
                   ((C38100 * C14782 + C38097 * C14786 + C38099 * C10201 +
                     C50956 * C10204 + C38098 * C3668 + C50965 * C3672) *
                        C50796 +
                    (C38100 * C14780 + C38097 * C14783 + C38099 * C10198 +
                     C50956 * C10202 + C38098 * C3663 + C50965 * C3669) *
                        C22720 +
                    (C48329 + C48328 + C48327) * C22714 +
                    (C48326 + C48325 + C48324) * C22719) *
                       C50623 * C482) *
                      C50721) *
                 C50650) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C22719 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C22714 +
                     (C47242 + C47243 + C47244) * C22720 +
                     (C47245 + C47246 + C47247) * C50796) *
                        C50623 * C50917 -
                    ((C47898 + C47899 + C47900) * C50796 +
                     (C47901 + C47902 + C47903) * C22720 +
                     (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                      C50956 * C517 + C38098 * C499 + C50965 * C516) *
                         C22714 +
                     (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                      C50956 * C501 + C38098 * C486 + C50965 * C500) *
                         C22719) *
                        C50623 * C50749) *
                       C1074 +
                   (((C47903 + C47902 + C47901) * C22719 +
                     (C47900 + C47899 + C47898) * C22714 +
                     (C38098 * C1614 + C50965 * C1622 + C38099 * C3663 +
                      C50956 * C3669 + C38100 * C10198 + C38097 * C10202) *
                         C22720 +
                     (C38098 * C1621 + C50965 * C1626 + C38099 * C3668 +
                      C50956 * C3672 + C38100 * C10201 + C38097 * C10204) *
                         C50796) *
                        C50623 * C50749 -
                    ((C47248 + C47249 + C47250) * C50796 +
                     (C47251 + C47252 + C47253) * C22720 +
                     (C47247 + C47246 + C47245) * C22714 +
                     (C47244 + C47243 + C47242) * C22719) *
                        C50623 * C50917) *
                       C50721) *
                      C50908 +
                  ((((C38513 + C38512 + C38511) * C22719 +
                     (C38510 + C38509 + C38508) * C22714 +
                     (C39054 + C39055 + C39056) * C22720 +
                     (C39057 + C39058 + C39059) * C50796) *
                        C50623 * C50749 -
                    ((C38326 + C38327 + C38328) * C50796 +
                     (C38329 + C38330 + C38331) * C22720 +
                     (C38143 + C38142 + C38141) * C22714 +
                     (C38140 + C38139 + C38138) * C22719) *
                        C50623 * C50917) *
                       C1074 +
                   (((C38331 + C38330 + C38329) * C22719 +
                     (C38328 + C38327 + C38326) * C22714 +
                     (C38332 + C38333 + C38334) * C22720 +
                     (C38335 + C38336 + C38337) * C50796) *
                        C50623 * C50917 -
                    ((C38100 * C10199 + C38097 * C10203 + C38099 * C3666 +
                      C50956 * C3671 + C38098 * C1619 + C50965 * C1625) *
                         C50796 +
                     (C38100 * C10197 + C38097 * C10200 + C38099 * C3662 +
                      C50956 * C3667 + C38098 * C1613 + C50965 * C1620) *
                         C22720 +
                     (C39059 + C39058 + C39057) * C22714 +
                     (C39056 + C39055 + C39054) * C22719) *
                        C50623 * C50749) *
                       C50721) *
                      C50656)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50685 * C1074 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50685 * C50721) *
                      C1076 +
                  (((C38331 + C38330 + C38329) * C22719 +
                    (C38328 + C38327 + C38326) * C22714 +
                    (C38332 + C38333 + C38334) * C22720 +
                    (C38335 + C38336 + C38337) * C50796) *
                       C50623 * C50685 * C50721 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50685 * C1074) *
                      C1077 +
                  (((C38149 + C38148 + C38147) * C22719 +
                    (C38146 + C38145 + C38144) * C22714 +
                    (C38678 + C38679 + C38680) * C22720 +
                    (C38681 + C38682 + C38683) * C50796) *
                       C50623 * C50685 * C1074 -
                   ((C38100 * C3664 + C38097 * C3670 + C38099 * C1617 +
                     C50956 * C1624 + C38098 * C317 + C50965 * C330) *
                        C50796 +
                    (C38100 * C3661 + C38097 * C3665 + C38099 * C1612 +
                     C50956 * C1618 + C38098 * C300 + C50965 * C316) *
                        C22720 +
                    (C38683 + C38682 + C38681) * C22714 +
                    (C38680 + C38679 + C38678) * C22719) *
                       C50623 * C50685 * C50721) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                    C50956 * C500 + C38100 * C487 + C38097 * C501) *
                       C22719 +
                   (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                    C50956 * C516 + C38100 * C502 + C38097 * C517) *
                       C22714 +
                   (C47242 + C47243 + C47244) * C22720 +
                   (C47245 + C47246 + C47247) * C50796) *
                      C50623 * C50685 * C1145 -
                  ((C47248 + C47249 + C47250) * C50796 +
                   (C47251 + C47252 + C47253) * C22720 +
                   (C47247 + C47246 + C47245) * C22714 +
                   (C47244 + C47243 + C47242) * C22719) *
                      C50623 * C50685 * C1146 +
                  ((C47253 + C47252 + C47251) * C22719 +
                   (C47250 + C47249 + C47248) * C22714 +
                   (C48160 + C48161 + C48162) * C22720 +
                   (C48163 + C48164 + C48165) * C50796) *
                      C50623 * C50685 * C1147 -
                  ((C38100 * C11561 + C38097 * C11563 + C38099 * C9797 +
                    C50956 * C9800 + C38098 * C3504 + C50965 * C3508) *
                       C50796 +
                   (C38100 * C11560 + C38097 * C11562 + C38099 * C9794 +
                    C50956 * C9798 + C38098 * C3499 + C50965 * C3505) *
                       C22720 +
                   (C48165 + C48164 + C48163) * C22714 +
                   (C48162 + C48161 + C48160) * C22719) *
                      C50623 * C50685 * C1148) *
                 C50650) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C22719 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C22714 +
                     (C47242 + C47243 + C47244) * C22720 +
                     (C47245 + C47246 + C47247) * C50796) *
                        C50623 * C1725 -
                    ((C47898 + C47899 + C47900) * C50796 +
                     (C47901 + C47902 + C47903) * C22720 +
                     (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                      C50956 * C517 + C38098 * C499 + C50965 * C516) *
                         C22714 +
                     (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                      C50956 * C501 + C38098 * C486 + C50965 * C500) *
                         C22719) *
                        C50623 * C50749) *
                       C50916 +
                   (((C47903 + C47902 + C47901) * C22719 +
                     (C47900 + C47899 + C47898) * C22714 +
                     (C48828 + C48829 + C48830) * C22720 +
                     (C48831 + C48832 + C48833) * C50796) *
                        C50623 * C50749 -
                    ((C47248 + C47249 + C47250) * C50796 +
                     (C47251 + C47252 + C47253) * C22720 +
                     (C47247 + C47246 + C47245) * C22714 +
                     (C47244 + C47243 + C47242) * C22719) *
                        C50623 * C1725) *
                       C50721) *
                      C50908 +
                  ((((C38513 + C38512 + C38511) * C22719 +
                     (C38510 + C38509 + C38508) * C22714 +
                     (C39054 + C39055 + C39056) * C22720 +
                     (C39057 + C39058 + C39059) * C50796) *
                        C50623 * C50749 -
                    ((C38326 + C38327 + C38328) * C50796 +
                     (C38329 + C38330 + C38331) * C22720 +
                     (C38143 + C38142 + C38141) * C22714 +
                     (C38140 + C38139 + C38138) * C22719) *
                        C50623 * C1725) *
                       C50916 +
                   (((C38331 + C38330 + C38329) * C22719 +
                     (C38328 + C38327 + C38326) * C22714 +
                     (C38332 + C38333 + C38334) * C22720 +
                     (C38335 + C38336 + C38337) * C50796) *
                        C50623 * C1725 -
                    ((C38100 * C10199 + C38097 * C10203 + C38099 * C3666 +
                      C50956 * C3671 + C38098 * C1619 + C50965 * C1625) *
                         C50796 +
                     (C38100 * C10197 + C38097 * C10200 + C38099 * C3662 +
                      C50956 * C3667 + C38098 * C1613 + C50965 * C1620) *
                         C22720 +
                     (C39059 + C39058 + C39057) * C22714 +
                     (C39056 + C39055 + C39054) * C22719) *
                        C50623 * C50749) *
                       C50721) *
                      C50656)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50962 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50963 +
                   ((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                     C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                        C22719 +
                    (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                     C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                        C22714 +
                    (C48324 + C48325 + C48326) * C22720 +
                    (C48327 + C48328 + C48329) * C50796) *
                       C50623 * C2141) *
                      C50916 +
                  (((C47903 + C47902 + C47901) * C22719 +
                    (C47900 + C47899 + C47898) * C22714 +
                    (C48828 + C48829 + C48830) * C22720 +
                    (C48831 + C48832 + C48833) * C50796) *
                       C50623 * C50963 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C50962 -
                   ((C38100 * C14782 + C38097 * C14786 + C38099 * C10201 +
                     C50956 * C10204 + C38098 * C3668 + C50965 * C3672) *
                        C50796 +
                    (C38100 * C14780 + C38097 * C14783 + C38099 * C10198 +
                     C50956 * C10202 + C38098 * C3663 + C50965 * C3669) *
                        C22720 +
                    (C48329 + C48328 + C48327) * C22714 +
                    (C48326 + C48325 + C48324) * C22719) *
                       C50623 * C2141) *
                      C50721) *
                 C50650) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C1725 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50749) *
                      C289 +
                  (((C47903 + C47902 + C47901) * C22719 +
                    (C47900 + C47899 + C47898) * C22714 +
                    (C48828 + C48829 + C48830) * C22720 +
                    (C48831 + C48832 + C48833) * C50796) *
                       C50623 * C50749 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C1725) *
                      C290 +
                  (((C47253 + C47252 + C47251) * C22719 +
                    (C47250 + C47249 + C47248) * C22714 +
                    (C48160 + C48161 + C48162) * C22720 +
                    (C48163 + C48164 + C48165) * C50796) *
                       C50623 * C1725 -
                   ((C38100 * C12169 + C38097 * C12171 + C38099 * C9297 +
                     C50956 * C9300 + C38098 * C4172 + C50965 * C4176) *
                        C50796 +
                    (C38100 * C12168 + C38097 * C12170 + C38099 * C9294 +
                     C50956 * C9298 + C38098 * C4167 + C50965 * C4173) *
                        C22720 +
                    (C48833 + C48832 + C48831) * C22714 +
                    (C48830 + C48829 + C48828) * C22719) *
                       C50623 * C50749) *
                      C291) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C1725 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50749) *
                      C50669 * C1076 +
                  (((C38513 + C38512 + C38511) * C22719 +
                    (C38510 + C38509 + C38508) * C22714 +
                    (C39054 + C39055 + C39056) * C22720 +
                    (C39057 + C39058 + C39059) * C50796) *
                       C50623 * C50749 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C1725) *
                      C50669 * C1077 +
                  (((C38149 + C38148 + C38147) * C22719 +
                    (C38146 + C38145 + C38144) * C22714 +
                    (C38678 + C38679 + C38680) * C22720 +
                    (C38681 + C38682 + C38683) * C50796) *
                       C50623 * C1725 -
                   ((C38100 * C4576 + C38097 * C4582 + C38099 * C1270 +
                     C50956 * C1277 + C38098 * C942 + C50965 * C949) *
                        C50796 +
                    (C38100 * C4573 + C38097 * C4577 + C38099 * C1265 +
                     C50956 * C1271 + C38098 * C934 + C50965 * C941) *
                        C22720 +
                    (C38847 + C38846 + C38845) * C22714 +
                    (C38844 + C38843 + C38842) * C22719) *
                       C50623 * C50749) *
                      C50669 * C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                    C50956 * C500 + C38100 * C487 + C38097 * C501) *
                       C22719 +
                   (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                    C50956 * C516 + C38100 * C502 + C38097 * C517) *
                       C22714 +
                   (C47242 + C47243 + C47244) * C22720 +
                   (C47245 + C47246 + C47247) * C50796) *
                      C50623 * C1891 -
                  ((C47898 + C47899 + C47900) * C50796 +
                   (C47901 + C47902 + C47903) * C22720 +
                   (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                    C50956 * C517 + C38098 * C499 + C50965 * C516) *
                       C22714 +
                   (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                    C50956 * C501 + C38098 * C486 + C50965 * C500) *
                       C22719) *
                      C50623 * C1892 +
                  ((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                    C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                       C22719 +
                   (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                    C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                       C22714 +
                   (C48324 + C48325 + C48326) * C22720 +
                   (C48327 + C48328 + C48329) * C50796) *
                      C50623 * C1893 -
                  ((C38100 * C20351 + C38097 * C20353 + C38099 * C14784 +
                    C50956 * C14787 + C38098 * C4580 + C50965 * C4584) *
                       C50796 +
                   (C38100 * C20350 + C38097 * C20352 + C38099 * C14781 +
                    C50956 * C14785 + C38098 * C4575 + C50965 * C4581) *
                       C22720 +
                   (C38100 * C17610 + C38097 * C17613 + C38099 * C7436 +
                    C50956 * C7440 + C38098 * C1905 + C50965 * C1910) *
                       C22714 +
                   (C38100 * C17607 + C38097 * C17611 + C38099 * C7431 +
                    C50956 * C7437 + C38098 * C1898 + C50965 * C1906) *
                       C22719) *
                      C50623 * C1894) *
                 C50669 * C50650) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C50962 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50963 +
                   ((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                     C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                        C22719 +
                    (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                     C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                        C22714 +
                    (C48324 + C48325 + C48326) * C22720 +
                    (C48327 + C48328 + C48329) * C50796) *
                       C50623 * C2141) *
                      C50669 * C50908 +
                  (((C38513 + C38512 + C38511) * C22719 +
                    (C38510 + C38509 + C38508) * C22714 +
                    (C39054 + C39055 + C39056) * C22720 +
                    (C39057 + C39058 + C39059) * C50796) *
                       C50623 * C50963 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C50962 -
                   ((C38100 * C16727 + C38097 * C16729 + C38099 * C4578 +
                     C50956 * C4583 + C38098 * C1272 + C50965 * C1278) *
                        C50796 +
                    (C38100 * C16726 + C38097 * C16728 + C38099 * C4574 +
                     C50956 * C4579 + C38098 * C1266 + C50965 * C1273) *
                        C22720 +
                    (C38519 + C38518 + C38517) * C22714 +
                    (C38516 + C38515 + C38514) * C22719) *
                       C50623 * C2141) *
                      C50669 * C50656)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C1725 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50749) *
                      C50669 * C1076 +
                  (((C38513 + C38512 + C38511) * C22719 +
                    (C38510 + C38509 + C38508) * C22714 +
                    (C39054 + C39055 + C39056) * C22720 +
                    (C39057 + C39058 + C39059) * C50796) *
                       C50623 * C50749 -
                   ((C38326 + C38327 + C38328) * C50796 +
                    (C38329 + C38330 + C38331) * C22720 +
                    (C38143 + C38142 + C38141) * C22714 +
                    (C38140 + C38139 + C38138) * C22719) *
                       C50623 * C1725) *
                      C50669 * C1077 +
                  (((C38149 + C38148 + C38147) * C22719 +
                    (C38146 + C38145 + C38144) * C22714 +
                    (C38678 + C38679 + C38680) * C22720 +
                    (C38681 + C38682 + C38683) * C50796) *
                       C50623 * C1725 -
                   ((C38100 * C4576 + C38097 * C4582 + C38099 * C1270 +
                     C50956 * C1277 + C38098 * C942 + C50965 * C949) *
                        C50796 +
                    (C38100 * C4573 + C38097 * C4577 + C38099 * C1265 +
                     C50956 * C1271 + C38098 * C934 + C50965 * C941) *
                        C22720 +
                    (C38847 + C38846 + C38845) * C22714 +
                    (C38844 + C38843 + C38842) * C22719) *
                       C50623 * C50749) *
                      C50669 * C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                     C50956 * C500 + C38100 * C487 + C38097 * C501) *
                        C22719 +
                    (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                     C50956 * C516 + C38100 * C502 + C38097 * C517) *
                        C22714 +
                    (C47242 + C47243 + C47244) * C22720 +
                    (C47245 + C47246 + C47247) * C50796) *
                       C50623 * C1725 -
                   ((C47898 + C47899 + C47900) * C50796 +
                    (C47901 + C47902 + C47903) * C22720 +
                    (C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                     C50956 * C517 + C38098 * C499 + C50965 * C516) *
                        C22714 +
                    (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                     C50956 * C501 + C38098 * C486 + C50965 * C500) *
                        C22719) *
                       C50623 * C50749) *
                      C289 +
                  (((C47903 + C47902 + C47901) * C22719 +
                    (C47900 + C47899 + C47898) * C22714 +
                    (C48828 + C48829 + C48830) * C22720 +
                    (C48831 + C48832 + C48833) * C50796) *
                       C50623 * C50749 -
                   ((C47248 + C47249 + C47250) * C50796 +
                    (C47251 + C47252 + C47253) * C22720 +
                    (C47247 + C47246 + C47245) * C22714 +
                    (C47244 + C47243 + C47242) * C22719) *
                       C50623 * C1725) *
                      C290 +
                  (((C47253 + C47252 + C47251) * C22719 +
                    (C47250 + C47249 + C47248) * C22714 +
                    (C48160 + C48161 + C48162) * C22720 +
                    (C48163 + C48164 + C48165) * C50796) *
                       C50623 * C1725 -
                   ((C38100 * C12169 + C38097 * C12171 + C38099 * C9297 +
                     C50956 * C9300 + C38098 * C4172 + C50965 * C4176) *
                        C50796 +
                    (C38100 * C12168 + C38097 * C12170 + C38099 * C9294 +
                     C50956 * C9298 + C38098 * C4167 + C50965 * C4173) *
                        C22720 +
                    (C48833 + C48832 + C48831) * C22714 +
                    (C48830 + C48829 + C48828) * C22719) *
                       C50623 * C50749) *
                      C291) *
                 C50650) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C8030 +
                     (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                     C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                        C50899 +
                    (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                       C50685 * C50916 -
                   ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                    (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                     C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                        C50899) *
                       C50685 * C50721) *
                      C50958 +
                  (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                    (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                       C50685 * C50721 -
                   ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                    (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                       C50685 * C50916) *
                      C50959 +
                  (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                    (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                       C50685 * C50916 -
                   (((C117 * C1154 + C50810 * C1162) * C8027 +
                     (C117 * C1150 + C50810 * C1155) * C8032 + C370 * C8026 +
                     C369 * C8031 + C359 * C8025 + C360 * C8030) *
                        C50628 +
                    (C8531 + C8530 + C8529 + C8528 + C8527 + C8526) * C50899) *
                       C50685 * C50721) *
                      C673)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C118 +
                     (C117 * C127 + C50810 * C140) * C50780) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C50685 * C50916 -
                   (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                    ((C117 * C310 + C50810 * C327) * C50780 +
                     (C117 * C297 + C50810 * C311) * C118) *
                        C107) *
                       C50685 * C50721) *
                      C50958 +
                  (((C376 + C375) * C107 + (C374 + C373) * C108 +
                    (C372 + C371) * C109 + (C687 + C688) * C110) *
                       C50685 * C50721 -
                   (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                    (C179 + C178) * C107) *
                       C50685 * C50916) *
                      C50959 +
                  ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                    (C186 + C187) * C110) *
                       C50685 * C50916 -
                   (((C117 * C675 + C50810 * C677) * C50780 +
                     (C117 * C674 + C50810 * C676) * C118) *
                        C110 +
                    (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
                       C50685 * C50721) *
                      C673)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                      C15373 * C500 + C15377 * C487 + C15374 * C501) *
                         C118 +
                     (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                      C15373 * C516 + C15377 * C502 + C15374 * C517) *
                         C50780) *
                        C50899 +
                    ((C15415 + C15416 + C15417) * C118 +
                     (C15418 + C15419 + C15420) * C50780) *
                        C50628) *
                       C50685 * C50916 -
                   (((C15603 + C15604 + C15605) * C50780 +
                     (C15606 + C15607 + C15608) * C118) *
                        C50628 +
                    ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                      C15373 * C947 + C15375 * C310 + C15372 * C327) *
                         C50780 +
                     (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                      C15373 * C937 + C15375 * C297 + C15372 * C311) *
                         C118) *
                        C50899) *
                       C50685 * C50721) *
                      C50958 +
                  ((((C15608 + C15607 + C15606) * C118 +
                     (C15605 + C15604 + C15603) * C50780) *
                        C50899 +
                    ((C15955 + C15956 + C15957) * C118 +
                     (C15958 + C15959 + C15960) * C50780) *
                        C50628) *
                       C50685 * C50721 -
                   (((C15421 + C15422 + C15423) * C50780 +
                     (C15424 + C15425 + C15426) * C118) *
                        C50628 +
                    ((C15420 + C15419 + C15418) * C50780 +
                     (C15417 + C15416 + C15415) * C118) *
                        C50899) *
                       C50685 * C50916) *
                      C50959 +
                  ((((C15426 + C15425 + C15424) * C118 +
                     (C15423 + C15422 + C15421) * C50780) *
                        C50899 +
                    ((C15427 + C15428 + C15429) * C118 +
                     (C15430 + C15431 + C15432) * C50780) *
                        C50628) *
                       C50685 * C50916 -
                   (((C15377 * C1268 + C15374 * C1276 + C15376 * C944 +
                      C15373 * C950 + C15375 * C304 + C15372 * C324) *
                         C50780 +
                     (C15377 * C1264 + C15374 * C1269 + C15376 * C935 +
                      C15373 * C943 + C15375 * C294 + C15372 * C305) *
                         C118) *
                        C50628 +
                    ((C15960 + C15959 + C15958) * C50780 +
                     (C15957 + C15956 + C15955) * C118) *
                        C50899) *
                       C50685 * C50721) *
                      C673)) /
                    (p * q * std::sqrt(p + q));
    d2ee[91] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50917 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C50916 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + (C117 * C4167 + C50810 * C4173) * C8032 +
                      (C117 * C4172 + C50810 * C4176) * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50749 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50917) *
                       C50721) *
                      C292 +
                  ((((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50749 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50917) *
                       C50916 +
                   (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                     (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                        C50917 -
                    (((C117 * C4168 + C50810 * C4174) * C8027 +
                      (C117 * C4165 + C50810 * C4169) * C8032 + C3249 * C8026 +
                      C3248 * C8031 + C968 * C8025 + C967 * C8030) *
                         C50628 +
                     (C8889 + C8888 + C8881 + C8880 + C8879 + C8878) * C50899) *
                        C50749) *
                       C50721) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50917 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C50916 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50749 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50917) *
                       C50721) *
                      C292 +
                  ((((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50749 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50917) *
                       C50916 +
                   (((C376 + C375) * C107 + (C374 + C373) * C108 +
                     (C372 + C371) * C109 + (C687 + C688) * C110) *
                        C50917 -
                    (((C117 * C945 + C50810 * C951) * C50780 +
                      (C117 * C936 + C50810 * C946) * C118) *
                         C110 +
                     (C976 + C975) * C109 + (C974 + C973) * C108 +
                     (C972 + C971) * C107) *
                        C50749) *
                       C50721) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                       C15373 * C500 + C15377 * C487 + C15374 * C501) *
                          C118 +
                      (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                       C15373 * C516 + C15377 * C502 + C15374 * C517) *
                          C50780) *
                         C50899 +
                     ((C15415 + C15416 + C15417) * C118 +
                      (C15418 + C15419 + C15420) * C50780) *
                         C50628) *
                        C50917 -
                    (((C15785 + C15786 + C15787) * C50780 +
                      (C15788 + C15789 + C15790) * C118) *
                         C50628 +
                     ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                       C15373 * C517 + C15375 * C499 + C15372 * C516) *
                          C50780 +
                      (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                       C15373 * C501 + C15375 * C486 + C15372 * C500) *
                          C118) *
                         C50899) *
                        C50749) *
                       C50916 +
                   ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 +
                       C15373 * C1275 + C15377 * C4575 + C15374 * C4581) *
                          C118 +
                      (C15375 * C938 + C15372 * C947 + C15376 * C1274 +
                       C15373 * C1279 + C15377 * C4580 + C15374 * C4584) *
                          C50780) *
                         C50899 +
                     ((C16331 + C16332 + C16333) * C118 +
                      (C16334 + C16335 + C16336) * C50780) *
                         C50628) *
                        C50749 -
                    (((C15603 + C15604 + C15605) * C50780 +
                      (C15606 + C15607 + C15608) * C118) *
                         C50628 +
                     ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                       C15373 * C947 + C15375 * C310 + C15372 * C327) *
                          C50780 +
                      (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                       C15373 * C937 + C15375 * C297 + C15372 * C311) *
                          C118) *
                         C50899) *
                        C50917) *
                       C50721) *
                      C292 +
                  (((((C15790 + C15789 + C15788) * C118 +
                      (C15787 + C15786 + C15785) * C50780) *
                         C50899 +
                     ((C16119 + C16120 + C16121) * C118 +
                      (C16122 + C16123 + C16124) * C50780) *
                         C50628) *
                        C50749 -
                    (((C15421 + C15422 + C15423) * C50780 +
                      (C15424 + C15425 + C15426) * C118) *
                         C50628 +
                     ((C15420 + C15419 + C15418) * C50780 +
                      (C15417 + C15416 + C15415) * C118) *
                         C50899) *
                        C50917) *
                       C50916 +
                   ((((C15608 + C15607 + C15606) * C118 +
                      (C15605 + C15604 + C15603) * C50780) *
                         C50899 +
                     ((C15955 + C15956 + C15957) * C118 +
                      (C15958 + C15959 + C15960) * C50780) *
                         C50628) *
                        C50917 -
                    (((C15377 * C4576 + C15374 * C4582 + C15376 * C1270 +
                       C15373 * C1277 + C15375 * C942 + C15372 * C949) *
                          C50780 +
                      (C15377 * C4573 + C15374 * C4577 + C15376 * C1265 +
                       C15373 * C1271 + C15375 * C934 + C15372 * C941) *
                          C118) *
                         C50628 +
                     ((C16336 + C16335 + C16334) * C50780 +
                      (C16333 + C16332 + C16331) * C118) *
                         C50899) *
                        C50749) *
                       C50721) *
                      C50656)) /
                    (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50810 * C126) * C118 +
                (C117 * C127 + C50810 * C140) * C50780) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C50685 * C50669 * C113 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C50685 * C50669 * C114 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C50685 * C50669 * C115 -
              (((C117 * C138 + C50810 * C146) * C50780 +
                (C117 * C125 + C50810 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C50685 * C50669 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C118 +
                 (C117 * C127 + C50810 * C140) * C50780) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C50685 * C289 -
               ((C371 + C372) * C110 + (C373 + C374) * C109 +
                (C375 + C376) * C108 +
                ((C117 * C310 + C50810 * C327) * C50780 +
                 (C117 * C297 + C50810 * C311) * C118) *
                    C107) *
                   C50685 * C290 +
               (((C117 * C298 + C50810 * C312) * C118 +
                 (C117 * C313 + C50810 * C328) * C50780) *
                    C107 +
                (C377 + C378) * C108 + (C379 + C380) * C109 +
                (C381 + C382) * C110) *
                   C50685 * C291) *
                  C292 +
              (((C376 + C375) * C107 + (C374 + C373) * C108 +
                (C372 + C371) * C109 +
                ((C117 * C302 + C50810 * C320) * C118 +
                 (C117 * C321 + C50810 * C332) * C50780) *
                    C110) *
                   C50685 * C290 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C50685 * C289 -
               (((C117 * C322 + C50810 * C333) * C50780 +
                 (C117 * C303 + C50810 * C323) * C118) *
                    C110 +
                (C382 + C381) * C109 + (C380 + C379) * C108 +
                (C378 + C377) * C107) *
                   C50685 * C291) *
                  C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           ((C560 + C561) * C110 + (C562 + C563) * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50810 * C516) * C50780 +
             (C117 * C486 + C50810 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C118 +
             (C117 * C502 + C50810 * C517) * C50780) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C50669 * C292 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            ((C117 * C491 + C50810 * C509) * C118 +
             (C117 * C510 + C50810 * C521) * C50780) *
                C110) *
               C481 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C480 -
           (((C117 * C511 + C50810 * C522) * C50780 +
             (C117 * C492 + C50810 * C512) * C118) *
                C110 +
            (C571 + C570) * C109 + (C569 + C568) * C108 +
            (C567 + C566) * C107) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C50669 * C113 -
          ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
           (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
              C50685 * C50669 * C114 +
          ((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
           (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
              C50685 * C50669 * C115 -
          (((C117 * C322 + C50810 * C333) * C8027 +
            (C117 * C303 + C50810 * C323) * C8032 + C686 * C8026 +
            C685 * C8031 + C174 * C8025 + C175 * C8030) *
               C50628 +
           (C8051 + C8050 + C8049 + C8048 + C8047 + C8046) * C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C289 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C290 +
           ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
             (C117 * C3499 + C50810 * C3505) * C8032 +
             (C117 * C3504 + C50810 * C3508) * C8027) *
                C50899 +
            (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
               C50685 * C291) *
              C292 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C362 * C8030 + C361 * C8025 + C367 * C8031 + C368 * C8026 +
             C2548 * C8032 + C2549 * C8027) *
                C50628) *
               C50685 * C290 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C289 -
           (((C117 * C3500 + C50810 * C3506) * C8027 +
             (C117 * C3497 + C50810 * C3501) * C8032 + C2549 * C8026 +
             C2548 * C8031 + C368 * C8025 + C367 * C8030) *
                C50628 +
            (C8215 + C8214 + C8207 + C8206 + C8205 + C8204) * C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C480 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C8030 +
             (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
             C3679 * C8026 + (C117 * C3663 + C50810 * C3669) * C8032 +
             (C117 * C3668 + C50810 * C3672) * C8027) *
                C50899 +
            (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
               C482) *
              C50669 * C292 +
          (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
            (C551 * C8030 + C550 * C8025 + C967 * C8031 + C968 * C8026 +
             C3248 * C8032 + C3249 * C8027) *
                C50628) *
               C481 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C480 -
           (((C117 * C3664 + C50810 * C3670) * C8027 +
             (C117 * C3661 + C50810 * C3665) * C8032 + C2723 * C8026 +
             C2722 * C8031 + C557 * C8025 + C556 * C8030) *
                C50628 +
            (C8379 + C8378 + C8371 + C8370 + C8369 + C8368) * C50899) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C118 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50780) *
               C50899 +
           ((C15415 + C15416 + C15417) * C118 +
            (C15418 + C15419 + C15420) * C50780) *
               C50628) *
              C50685 * C50669 * C113 -
          (((C15421 + C15422 + C15423) * C50780 +
            (C15424 + C15425 + C15426) * C118) *
               C50628 +
           ((C15420 + C15419 + C15418) * C50780 +
            (C15417 + C15416 + C15415) * C118) *
               C50899) *
              C50685 * C50669 * C114 +
          (((C15426 + C15425 + C15424) * C118 +
            (C15423 + C15422 + C15421) * C50780) *
               C50899 +
           ((C15427 + C15428 + C15429) * C118 +
            (C15430 + C15431 + C15432) * C50780) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C15377 * C511 + C15374 * C522 + C15376 * C510 + C15373 * C521 +
             C15375 * C134 + C15372 * C144) *
                C50780 +
            (C15377 * C492 + C15374 * C512 + C15376 * C491 + C15373 * C509 +
             C15375 * C123 + C15372 * C135) *
                C118) *
               C50628 +
           ((C15432 + C15431 + C15430) * C50780 +
            (C15429 + C15428 + C15427) * C118) *
               C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C118 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50780) *
                C50899 +
            ((C15415 + C15416 + C15417) * C118 +
             (C15418 + C15419 + C15420) * C50780) *
                C50628) *
               C50685 * C289 -
           (((C15603 + C15604 + C15605) * C50780 +
             (C15606 + C15607 + C15608) * C118) *
                C50628 +
            ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 + C15373 * C947 +
              C15375 * C310 + C15372 * C327) *
                 C50780 +
             (C15377 * C1267 + C15374 * C1275 + C15376 * C932 + C15373 * C937 +
              C15375 * C297 + C15372 * C311) *
                 C118) *
                C50899) *
               C50685 * C290 +
           (((C15375 * C298 + C15372 * C312 + C15376 * C1614 + C15373 * C1622 +
              C15377 * C3663 + C15374 * C3669) *
                 C118 +
             (C15375 * C313 + C15372 * C328 + C15376 * C1621 + C15373 * C1626 +
              C15377 * C3668 + C15374 * C3672) *
                 C50780) *
                C50899 +
            ((C15609 + C15610 + C15611) * C118 +
             (C15612 + C15613 + C15614) * C50780) *
                C50628) *
               C50685 * C291) *
              C292 +
          ((((C15608 + C15607 + C15606) * C118 +
             (C15605 + C15604 + C15603) * C50780) *
                C50899 +
            ((C15375 * C295 + C15372 * C307 + C15376 * C934 + C15373 * C941 +
              C15377 * C1265 + C15374 * C1271) *
                 C118 +
             (C15375 * C306 + C15372 * C325 + C15376 * C942 + C15373 * C949 +
              C15377 * C1270 + C15374 * C1277) *
                 C50780) *
                C50628) *
               C50685 * C290 -
           (((C15421 + C15422 + C15423) * C50780 +
             (C15424 + C15425 + C15426) * C118) *
                C50628 +
            ((C15420 + C15419 + C15418) * C50780 +
             (C15417 + C15416 + C15415) * C118) *
                C50899) *
               C50685 * C289 -
           (((C15377 * C3664 + C15374 * C3670 + C15376 * C1617 +
              C15373 * C1624 + C15375 * C317 + C15372 * C330) *
                 C50780 +
             (C15377 * C3661 + C15374 * C3665 + C15376 * C1612 +
              C15373 * C1618 + C15375 * C300 + C15372 * C316) *
                 C118) *
                C50628 +
            ((C15614 + C15613 + C15612) * C50780 +
             (C15611 + C15610 + C15609) * C118) *
                C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C118 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50780) *
                C50899 +
            ((C15415 + C15416 + C15417) * C118 +
             (C15418 + C15419 + C15420) * C50780) *
                C50628) *
               C480 -
           (((C15785 + C15786 + C15787) * C50780 +
             (C15788 + C15789 + C15790) * C118) *
                C50628 +
            ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
              C15375 * C499 + C15372 * C516) *
                 C50780 +
             (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
              C15375 * C486 + C15372 * C500) *
                 C118) *
                C50899) *
               C481 +
           (((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
              C15377 * C7431 + C15374 * C7437) *
                 C118 +
             (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
              C15377 * C7436 + C15374 * C7440) *
                 C50780) *
                C50899 +
            ((C15791 + C15792 + C15793) * C118 +
             (C15794 + C15795 + C15796) * C50780) *
                C50628) *
               C482) *
              C50669 * C292 +
          ((((C15790 + C15789 + C15788) * C118 +
             (C15787 + C15786 + C15785) * C50780) *
                C50899 +
            ((C15375 * C484 + C15372 * C496 + C15376 * C489 + C15373 * C505 +
              C15377 * C1896 + C15374 * C1902) *
                 C118 +
             (C15375 * C495 + C15372 * C514 + C15376 * C506 + C15373 * C519 +
              C15377 * C1901 + C15374 * C1908) *
                 C50780) *
                C50628) *
               C481 -
           (((C15421 + C15422 + C15423) * C50780 +
             (C15424 + C15425 + C15426) * C118) *
                C50628 +
            ((C15420 + C15419 + C15418) * C50780 +
             (C15417 + C15416 + C15415) * C118) *
                C50899) *
               C480 -
           (((C15377 * C7432 + C15374 * C7438 + C15376 * C1901 +
              C15373 * C1908 + C15375 * C506 + C15372 * C519) *
                 C50780 +
             (C15377 * C7429 + C15374 * C7433 + C15376 * C1896 +
              C15373 * C1902 + C15375 * C489 + C15372 * C505) *
                 C118) *
                C50628 +
            ((C15796 + C15795 + C15794) * C50780 +
             (C15793 + C15792 + C15791) * C118) *
                C50899) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C8030 +
                     (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                     C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                        C50899 +
                    (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                       C50917 -
                   ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                    (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                     C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                     (C117 * C486 + C50810 * C500) * C8030) *
                        C50899) *
                       C50749) *
                      C50669 * C50958 +
                  (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                    (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                       C50749 -
                   ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                    (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                       C50917) *
                      C50669 * C50959 +
                  (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                    (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                       C50917 -
                   (((C117 * C1615 + C50810 * C1623) * C8027 +
                     (C117 * C1611 + C50810 * C1616) * C8032 + C970 * C8026 +
                     C969 * C8031 + C548 * C8025 + C549 * C8030) *
                        C50628 +
                    (C8683 + C8682 + C8681 + C8680 + C8679 + C8678) * C50899) *
                       C50749) *
                      C50669 * C673)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C118 +
                     (C117 * C127 + C50810 * C140) * C50780) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C50917 -
                   (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                    ((C117 * C499 + C50810 * C516) * C50780 +
                     (C117 * C486 + C50810 * C500) * C118) *
                        C107) *
                       C50749) *
                      C50669 * C50958 +
                  (((C565 + C564) * C107 + (C563 + C562) * C108 +
                    (C561 + C560) * C109 + (C801 + C802) * C110) *
                       C50749 -
                   (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                    (C179 + C178) * C107) *
                       C50917) *
                      C50669 * C50959 +
                  ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                    (C186 + C187) * C110) *
                       C50917 -
                   (((C117 * C789 + C50810 * C791) * C50780 +
                     (C117 * C788 + C50810 * C790) * C118) *
                        C110 +
                    (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                       C50749) *
                      C50669 * C673)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                      C15373 * C500 + C15377 * C487 + C15374 * C501) *
                         C118 +
                     (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                      C15373 * C516 + C15377 * C502 + C15374 * C517) *
                         C50780) *
                        C50899 +
                    ((C15415 + C15416 + C15417) * C118 +
                     (C15418 + C15419 + C15420) * C50780) *
                        C50628) *
                       C50917 -
                   (((C15785 + C15786 + C15787) * C50780 +
                     (C15788 + C15789 + C15790) * C118) *
                        C50628 +
                    ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                      C15373 * C517 + C15375 * C499 + C15372 * C516) *
                         C50780 +
                     (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                      C15373 * C501 + C15375 * C486 + C15372 * C500) *
                         C118) *
                        C50899) *
                       C50749) *
                      C50669 * C50958 +
                  ((((C15790 + C15789 + C15788) * C118 +
                     (C15787 + C15786 + C15785) * C50780) *
                        C50899 +
                    ((C16119 + C16120 + C16121) * C118 +
                     (C16122 + C16123 + C16124) * C50780) *
                        C50628) *
                       C50749 -
                   (((C15421 + C15422 + C15423) * C50780 +
                     (C15424 + C15425 + C15426) * C118) *
                        C50628 +
                    ((C15420 + C15419 + C15418) * C50780 +
                     (C15417 + C15416 + C15415) * C118) *
                        C50899) *
                       C50917) *
                      C50669 * C50959 +
                  ((((C15426 + C15425 + C15424) * C118 +
                     (C15423 + C15422 + C15421) * C50780) *
                        C50899 +
                    ((C15427 + C15428 + C15429) * C118 +
                     (C15430 + C15431 + C15432) * C50780) *
                        C50628) *
                       C50917 -
                   (((C15377 * C1899 + C15374 * C1907 + C15376 * C508 +
                      C15373 * C520 + C15375 * C493 + C15372 * C513) *
                         C50780 +
                     (C15377 * C1895 + C15374 * C1900 + C15376 * C490 +
                      C15373 * C507 + C15375 * C483 + C15372 * C494) *
                         C118) *
                        C50628 +
                    ((C16124 + C16123 + C16122) * C50780 +
                     (C16121 + C16120 + C16119) * C118) *
                        C50899) *
                       C50749) *
                      C50669 * C673)) /
                    (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50685 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C50685 * C290 +
           (((C117 * C298 + C50810 * C312) * C118 +
             (C117 * C313 + C50810 * C328) * C50780) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50685 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C50810 * C320) * C118 +
             (C117 * C321 + C50810 * C332) * C50780) *
                C110) *
               C50685 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50685 * C289 -
           (((C117 * C322 + C50810 * C333) * C50780 +
             (C117 * C303 + C50810 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50685 * C50669 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50685 * C50669 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50685 * C50669 * C115 -
          (((C117 * C138 + C50810 * C146) * C50780 +
            (C117 * C125 + C50810 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C50669 * C113 -
          ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
           (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
              C50685 * C50669 * C114 +
          ((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
           (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
              C50685 * C50669 * C115 -
          (((C117 * C322 + C50810 * C333) * C8027 +
            (C117 * C303 + C50810 * C323) * C8032 + C686 * C8026 +
            C685 * C8031 + C174 * C8025 + C175 * C8030) *
               C50628 +
           (C8051 + C8050 + C8049 + C8048 + C8047 + C8046) * C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C289 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C290 +
           ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
             (C117 * C3499 + C50810 * C3505) * C8032 +
             (C117 * C3504 + C50810 * C3508) * C8027) *
                C50899 +
            (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
               C50685 * C291) *
              C292 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C362 * C8030 + C361 * C8025 + C367 * C8031 + C368 * C8026 +
             C2548 * C8032 + C2549 * C8027) *
                C50628) *
               C50685 * C290 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C289 -
           (((C117 * C3500 + C50810 * C3506) * C8027 +
             (C117 * C3497 + C50810 * C3501) * C8032 + C2549 * C8026 +
             C2548 * C8031 + C368 * C8025 + C367 * C8030) *
                C50628 +
            (C8215 + C8214 + C8207 + C8206 + C8205 + C8204) * C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C118 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50780) *
               C50899 +
           ((C15415 + C15416 + C15417) * C118 +
            (C15418 + C15419 + C15420) * C50780) *
               C50628) *
              C50685 * C50669 * C113 -
          (((C15421 + C15422 + C15423) * C50780 +
            (C15424 + C15425 + C15426) * C118) *
               C50628 +
           ((C15420 + C15419 + C15418) * C50780 +
            (C15417 + C15416 + C15415) * C118) *
               C50899) *
              C50685 * C50669 * C114 +
          (((C15426 + C15425 + C15424) * C118 +
            (C15423 + C15422 + C15421) * C50780) *
               C50899 +
           ((C15427 + C15428 + C15429) * C118 +
            (C15430 + C15431 + C15432) * C50780) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C15377 * C511 + C15374 * C522 + C15376 * C510 + C15373 * C521 +
             C15375 * C134 + C15372 * C144) *
                C50780 +
            (C15377 * C492 + C15374 * C512 + C15376 * C491 + C15373 * C509 +
             C15375 * C123 + C15372 * C135) *
                C118) *
               C50628 +
           ((C15432 + C15431 + C15430) * C50780 +
            (C15429 + C15428 + C15427) * C118) *
               C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C118 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50780) *
                C50899 +
            ((C15415 + C15416 + C15417) * C118 +
             (C15418 + C15419 + C15420) * C50780) *
                C50628) *
               C50685 * C289 -
           (((C15603 + C15604 + C15605) * C50780 +
             (C15606 + C15607 + C15608) * C118) *
                C50628 +
            ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 + C15373 * C947 +
              C15375 * C310 + C15372 * C327) *
                 C50780 +
             (C15377 * C1267 + C15374 * C1275 + C15376 * C932 + C15373 * C937 +
              C15375 * C297 + C15372 * C311) *
                 C118) *
                C50899) *
               C50685 * C290 +
           (((C15375 * C298 + C15372 * C312 + C15376 * C1614 + C15373 * C1622 +
              C15377 * C3663 + C15374 * C3669) *
                 C118 +
             (C15375 * C313 + C15372 * C328 + C15376 * C1621 + C15373 * C1626 +
              C15377 * C3668 + C15374 * C3672) *
                 C50780) *
                C50899 +
            ((C15609 + C15610 + C15611) * C118 +
             (C15612 + C15613 + C15614) * C50780) *
                C50628) *
               C50685 * C291) *
              C292 +
          ((((C15608 + C15607 + C15606) * C118 +
             (C15605 + C15604 + C15603) * C50780) *
                C50899 +
            ((C15375 * C295 + C15372 * C307 + C15376 * C934 + C15373 * C941 +
              C15377 * C1265 + C15374 * C1271) *
                 C118 +
             (C15375 * C306 + C15372 * C325 + C15376 * C942 + C15373 * C949 +
              C15377 * C1270 + C15374 * C1277) *
                 C50780) *
                C50628) *
               C50685 * C290 -
           (((C15421 + C15422 + C15423) * C50780 +
             (C15424 + C15425 + C15426) * C118) *
                C50628 +
            ((C15420 + C15419 + C15418) * C50780 +
             (C15417 + C15416 + C15415) * C118) *
                C50899) *
               C50685 * C289 -
           (((C15377 * C3664 + C15374 * C3670 + C15376 * C1617 +
              C15373 * C1624 + C15375 * C317 + C15372 * C330) *
                 C50780 +
             (C15377 * C3661 + C15374 * C3665 + C15376 * C1612 +
              C15373 * C1618 + C15375 * C300 + C15372 * C316) *
                 C118) *
                C50628 +
            ((C15614 + C15613 + C15612) * C50780 +
             (C15611 + C15610 + C15609) * C118) *
                C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C8030 +
                     (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                     C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                        C50899 +
                    (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                       C50685 * C50960 -
                   ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                    (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                     C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                        C50899) *
                       C50685 * C50961 +
                   ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                     C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                        C50899 +
                    (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                       C50685 * C1380) *
                      C50908 +
                  (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                    (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                       C50685 * C50961 -
                   ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                    (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                       C50685 * C50960 -
                   (((C117 * C3500 + C50810 * C3506) * C8027 +
                     (C117 * C3497 + C50810 * C3501) * C8032 + C2549 * C8026 +
                     C2548 * C8031 + C368 * C8025 + C367 * C8030) *
                        C50628 +
                    (C8215 + C8214 + C8207 + C8206 + C8205 + C8204) * C50899) *
                       C50685 * C1380) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C118 +
                     (C117 * C127 + C50810 * C140) * C50780) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C50685 * C50960 -
                   (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                    ((C117 * C310 + C50810 * C327) * C50780 +
                     (C117 * C297 + C50810 * C311) * C118) *
                        C107) *
                       C50685 * C50961 +
                   (((C117 * C298 + C50810 * C312) * C118 +
                     (C117 * C313 + C50810 * C328) * C50780) *
                        C107 +
                    (C377 + C378) * C108 + (C379 + C380) * C109 +
                    (C381 + C382) * C110) *
                       C50685 * C1380) *
                      C50908 +
                  (((C376 + C375) * C107 + (C374 + C373) * C108 +
                    (C372 + C371) * C109 + (C687 + C688) * C110) *
                       C50685 * C50961 -
                   (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                    (C179 + C178) * C107) *
                       C50685 * C50960 -
                   (((C117 * C322 + C50810 * C333) * C50780 +
                     (C117 * C303 + C50810 * C323) * C118) *
                        C110 +
                    (C382 + C381) * C109 + (C380 + C379) * C108 +
                    (C378 + C377) * C107) *
                       C50685 * C1380) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                      C15373 * C500 + C15377 * C487 + C15374 * C501) *
                         C118 +
                     (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                      C15373 * C516 + C15377 * C502 + C15374 * C517) *
                         C50780) *
                        C50899 +
                    ((C15415 + C15416 + C15417) * C118 +
                     (C15418 + C15419 + C15420) * C50780) *
                        C50628) *
                       C50685 * C50960 -
                   (((C15603 + C15604 + C15605) * C50780 +
                     (C15606 + C15607 + C15608) * C118) *
                        C50628 +
                    ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                      C15373 * C947 + C15375 * C310 + C15372 * C327) *
                         C50780 +
                     (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                      C15373 * C937 + C15375 * C297 + C15372 * C311) *
                         C118) *
                        C50899) *
                       C50685 * C50961 +
                   (((C15375 * C298 + C15372 * C312 + C15376 * C1614 +
                      C15373 * C1622 + C15377 * C3663 + C15374 * C3669) *
                         C118 +
                     (C15375 * C313 + C15372 * C328 + C15376 * C1621 +
                      C15373 * C1626 + C15377 * C3668 + C15374 * C3672) *
                         C50780) *
                        C50899 +
                    ((C15609 + C15610 + C15611) * C118 +
                     (C15612 + C15613 + C15614) * C50780) *
                        C50628) *
                       C50685 * C1380) *
                      C50908 +
                  ((((C15608 + C15607 + C15606) * C118 +
                     (C15605 + C15604 + C15603) * C50780) *
                        C50899 +
                    ((C15955 + C15956 + C15957) * C118 +
                     (C15958 + C15959 + C15960) * C50780) *
                        C50628) *
                       C50685 * C50961 -
                   (((C15421 + C15422 + C15423) * C50780 +
                     (C15424 + C15425 + C15426) * C118) *
                        C50628 +
                    ((C15420 + C15419 + C15418) * C50780 +
                     (C15417 + C15416 + C15415) * C118) *
                        C50899) *
                       C50685 * C50960 -
                   (((C15377 * C3664 + C15374 * C3670 + C15376 * C1617 +
                      C15373 * C1624 + C15375 * C317 + C15372 * C330) *
                         C50780 +
                     (C15377 * C3661 + C15374 * C3665 + C15376 * C1612 +
                      C15373 * C1618 + C15375 * C300 + C15372 * C316) *
                         C118) *
                        C50628 +
                    ((C15614 + C15613 + C15612) * C50780 +
                     (C15611 + C15610 + C15609) * C118) *
                        C50899) *
                       C50685 * C1380) *
                      C50656)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C8030 +
                     (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                     C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                        C50899 +
                    (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                       C50917 -
                   ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                    (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                     C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                     (C117 * C486 + C50810 * C500) * C8030) *
                        C50899) *
                       C50749) *
                      C50960 +
                  (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                     C4183 * C8026 + C9806 * C8032 + C9807 * C8027) *
                        C50899 +
                    (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                       C50749 -
                   ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                    (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                     C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                        C50899) *
                       C50917) *
                      C50961 +
                  (((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                     C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                        C50899 +
                    (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                       C50917 -
                   (((C117 * C9795 + C50810 * C9799) * C8027 +
                     (C117 * C9793 + C50810 * C9796) * C8032 + C8887 * C8026 +
                     C8886 * C8031 + C3247 * C8025 + C3246 * C8030) *
                        C50628 +
                    ((C117 * C9797 + C50810 * C9800) * C8027 +
                     (C117 * C9794 + C50810 * C9798) * C8032 + C9807 * C8026 +
                     C9806 * C8031 + C4183 * C8025 + C4182 * C8030) *
                        C50899) *
                       C50749) *
                      C1380) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C118 +
                     (C117 * C127 + C50810 * C140) * C50780) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C50917 -
                   (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                    ((C117 * C499 + C50810 * C516) * C50780 +
                     (C117 * C486 + C50810 * C500) * C118) *
                        C107) *
                       C50749) *
                      C50960 +
                  ((((C117 * C932 + C50810 * C937) * C118 +
                     (C117 * C938 + C50810 * C947) * C50780) *
                        C107 +
                    (C971 + C972) * C108 + (C973 + C974) * C109 +
                    (C975 + C976) * C110) *
                       C50749 -
                   (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                    ((C117 * C310 + C50810 * C327) * C50780 +
                     (C117 * C297 + C50810 * C311) * C118) *
                        C107) *
                       C50917) *
                      C50961 +
                  ((((C117 * C298 + C50810 * C312) * C118 +
                     (C117 * C313 + C50810 * C328) * C50780) *
                        C107 +
                    (C377 + C378) * C108 + (C379 + C380) * C109 +
                    (C381 + C382) * C110) *
                       C50917 -
                   (((C117 * C1615 + C50810 * C1623) * C50780 +
                     (C117 * C1611 + C50810 * C1616) * C118) *
                        C110 +
                    ((C117 * C1617 + C50810 * C1624) * C50780 +
                     (C117 * C1612 + C50810 * C1618) * C118) *
                        C109 +
                    ((C117 * C1619 + C50810 * C1625) * C50780 +
                     (C117 * C1613 + C50810 * C1620) * C118) *
                        C108 +
                    ((C117 * C1621 + C50810 * C1626) * C50780 +
                     (C117 * C1614 + C50810 * C1622) * C118) *
                        C107) *
                       C50749) *
                      C1380) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                      C15373 * C500 + C15377 * C487 + C15374 * C501) *
                         C118 +
                     (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                      C15373 * C516 + C15377 * C502 + C15374 * C517) *
                         C50780) *
                        C50899 +
                    ((C15415 + C15416 + C15417) * C118 +
                     (C15418 + C15419 + C15420) * C50780) *
                        C50628) *
                       C50917 -
                   (((C15785 + C15786 + C15787) * C50780 +
                     (C15788 + C15789 + C15790) * C118) *
                        C50628 +
                    ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                      C15373 * C517 + C15375 * C499 + C15372 * C516) *
                         C50780 +
                     (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                      C15373 * C501 + C15375 * C486 + C15372 * C500) *
                         C118) *
                        C50899) *
                       C50749) *
                      C50960 +
                  ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 +
                      C15373 * C1275 + C15377 * C4575 + C15374 * C4581) *
                         C118 +
                     (C15375 * C938 + C15372 * C947 + C15376 * C1274 +
                      C15373 * C1279 + C15377 * C4580 + C15374 * C4584) *
                         C50780) *
                        C50899 +
                    ((C16331 + C16332 + C16333) * C118 +
                     (C16334 + C16335 + C16336) * C50780) *
                        C50628) *
                       C50749 -
                   (((C15603 + C15604 + C15605) * C50780 +
                     (C15606 + C15607 + C15608) * C118) *
                        C50628 +
                    ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                      C15373 * C947 + C15375 * C310 + C15372 * C327) *
                         C50780 +
                     (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                      C15373 * C937 + C15375 * C297 + C15372 * C311) *
                         C118) *
                        C50899) *
                       C50917) *
                      C50961 +
                  ((((C15375 * C298 + C15372 * C312 + C15376 * C1614 +
                      C15373 * C1622 + C15377 * C3663 + C15374 * C3669) *
                         C118 +
                     (C15375 * C313 + C15372 * C328 + C15376 * C1621 +
                      C15373 * C1626 + C15377 * C3668 + C15374 * C3672) *
                         C50780) *
                        C50899 +
                    ((C15609 + C15610 + C15611) * C118 +
                     (C15612 + C15613 + C15614) * C50780) *
                        C50628) *
                       C50917 -
                   (((C15377 * C10199 + C15374 * C10203 + C15376 * C3666 +
                      C15373 * C3671 + C15375 * C1619 + C15372 * C1625) *
                         C50780 +
                     (C15377 * C10197 + C15374 * C10200 + C15376 * C3662 +
                      C15373 * C3667 + C15375 * C1613 + C15372 * C1620) *
                         C118) *
                        C50628 +
                    ((C15377 * C10201 + C15374 * C10204 + C15376 * C3668 +
                      C15373 * C3672 + C15375 * C1621 + C15372 * C1626) *
                         C50780 +
                     (C15377 * C10198 + C15374 * C10202 + C15376 * C3663 +
                      C15373 * C3669 + C15375 * C1614 + C15372 * C1622) *
                         C118) *
                        C50899) *
                       C50749) *
                      C1380) *
                 C50650) /
                    (p * q * std::sqrt(p + q));
    d2ee[97] += (0.5 * std::pow(Pi, 2.5) *
                     (((((C117 * C119 + C50810 * C126) * C118 +
                         (C117 * C127 + C50810 * C140) * C50780) *
                            C107 +
                        (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                           C50685 * C1074 -
                       (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                        ((C117 * C310 + C50810 * C327) * C50780 +
                         (C117 * C297 + C50810 * C311) * C118) *
                            C107) *
                           C50685 * C50721) *
                          C1076 +
                      (((C376 + C375) * C107 + (C374 + C373) * C108 +
                        (C372 + C371) * C109 + (C687 + C688) * C110) *
                           C50685 * C50721 -
                       (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                        (C179 + C178) * C107) *
                           C50685 * C1074) *
                          C1077 +
                      ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                        (C186 + C187) * C110) *
                           C50685 * C1074 -
                       (((C117 * C675 + C50810 * C677) * C50780 +
                         (C117 * C674 + C50810 * C676) * C118) *
                            C110 +
                        (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
                           C50685 * C50721) *
                          C1078) +
                 0.5 * std::pow(Pi, 2.5) *
                     ((((C117 * C119 + C50810 * C126) * C118 +
                        (C117 * C127 + C50810 * C140) * C50780) *
                           C107 +
                       (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                          C50685 * C1145 -
                      (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                       ((C117 * C310 + C50810 * C327) * C50780 +
                        (C117 * C297 + C50810 * C311) * C118) *
                           C107) *
                          C50685 * C1146 +
                      (((C117 * C298 + C50810 * C312) * C118 +
                        (C117 * C313 + C50810 * C328) * C50780) *
                           C107 +
                       (C377 + C378) * C108 + (C379 + C380) * C109 +
                       (C381 + C382) * C110) *
                          C50685 * C1147 -
                      (((C117 * C1154 + C50810 * C1162) * C50780 +
                        (C117 * C1150 + C50810 * C1155) * C118) *
                           C110 +
                       ((C117 * C1156 + C50810 * C1163) * C50780 +
                        (C117 * C1151 + C50810 * C1157) * C118) *
                           C109 +
                       ((C117 * C1158 + C50810 * C1164) * C50780 +
                        (C117 * C1152 + C50810 * C1159) * C118) *
                           C108 +
                       ((C117 * C1160 + C50810 * C1165) * C50780 +
                        (C117 * C1153 + C50810 * C1161) * C118) *
                           C107) *
                          C50685 * C1148) *
                     C50650) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C118 +
                     (C117 * C127 + C50810 * C140) * C50780) *
                        C107 +
                    (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                       C480 -
                   (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                    ((C117 * C499 + C50810 * C516) * C50780 +
                     (C117 * C486 + C50810 * C500) * C118) *
                        C107) *
                       C481 +
                   (((C117 * C487 + C50810 * C501) * C118 +
                     (C117 * C502 + C50810 * C517) * C50780) *
                        C107 +
                    (C566 + C567) * C108 + (C568 + C569) * C109 +
                    (C570 + C571) * C110) *
                       C482) *
                      C1074 +
                  ((((C117 * C932 + C50810 * C937) * C118 +
                     (C117 * C938 + C50810 * C947) * C50780) *
                        C107 +
                    (C971 + C972) * C108 + (C973 + C974) * C109 +
                    (C975 + C976) * C110) *
                       C481 -
                   (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                    ((C117 * C310 + C50810 * C327) * C50780 +
                     (C117 * C297 + C50810 * C311) * C118) *
                        C107) *
                       C480 -
                   (((C117 * C1268 + C50810 * C1276) * C50780 +
                     (C117 * C1264 + C50810 * C1269) * C118) *
                        C110 +
                    ((C117 * C1270 + C50810 * C1277) * C50780 +
                     (C117 * C1265 + C50810 * C1271) * C118) *
                        C109 +
                    ((C117 * C1272 + C50810 * C1278) * C50780 +
                     (C117 * C1266 + C50810 * C1273) * C118) *
                        C108 +
                    ((C117 * C1274 + C50810 * C1279) * C50780 +
                     (C117 * C1267 + C50810 * C1275) * C118) *
                        C107) *
                       C482) *
                      C50721) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C8030 +
                     (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                     C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                        C50899 +
                    (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                       C50685 * C1074 -
                   ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                    (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                     C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                        C50899) *
                       C50685 * C50721) *
                      C1076 +
                  (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                    (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                       C50685 * C50721 -
                   ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                    (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                       C50685 * C1074) *
                      C1077 +
                  (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                    (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                       C50685 * C1074 -
                   (((C117 * C1154 + C50810 * C1162) * C8027 +
                     (C117 * C1150 + C50810 * C1155) * C8032 + C370 * C8026 +
                     C369 * C8031 + C359 * C8025 + C360 * C8030) *
                        C50628 +
                    (C8531 + C8530 + C8529 + C8528 + C8527 + C8526) * C50899) *
                       C50685 * C50721) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C50810 * C126) * C8030 +
                    (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                    C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                       C50899 +
                   (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                      C50685 * C1145 -
                  ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                   (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                    C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                       C50899) *
                      C50685 * C1146 +
                  ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                    C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                       C50899 +
                   (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                      C50685 * C1147 -
                  (((C117 * C9135 + C50810 * C9139) * C8027 +
                    (C117 * C9133 + C50810 * C9136) * C8032 + C8213 * C8026 +
                    C8212 * C8031 + C2547 * C8025 + C2546 * C8030) *
                       C50628 +
                   ((C117 * C9137 + C50810 * C9140) * C8027 +
                    (C117 * C9134 + C50810 * C9138) * C8032 + C9147 * C8026 +
                    C9146 * C8031 + C3515 * C8025 + C3514 * C8030) *
                       C50899) *
                      C50685 * C1148) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C50810 * C126) * C8030 +
                     (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                     C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                        C50899 +
                    (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                       C480 -
                   ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                    (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                     C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                     (C117 * C486 + C50810 * C500) * C8030) *
                        C50899) *
                       C481 +
                   (((C117 * C487 + C50810 * C501) * C8030 +
                     (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
                     C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
                        C50899 +
                    (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
                       C482) *
                      C1074 +
                  (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                     C4183 * C8026 + (C117 * C4167 + C50810 * C4173) * C8032 +
                     (C117 * C4172 + C50810 * C4176) * C8027) *
                        C50899 +
                    (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                       C481 -
                   ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                    (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                     C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                        C50899) *
                       C480 -
                   (((C117 * C9295 + C50810 * C9299) * C8027 +
                     (C117 * C9293 + C50810 * C9296) * C8032 + C8377 * C8026 +
                     C8376 * C8031 + C2721 * C8025 + C2720 * C8030) *
                        C50628 +
                    ((C117 * C9297 + C50810 * C9300) * C8027 +
                     (C117 * C9294 + C50810 * C9298) * C8032 + C9307 * C8026 +
                     C9306 * C8031 + C3679 * C8025 + C3678 * C8030) *
                        C50899) *
                       C482) *
                      C50721) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                      C15373 * C500 + C15377 * C487 + C15374 * C501) *
                         C118 +
                     (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                      C15373 * C516 + C15377 * C502 + C15374 * C517) *
                         C50780) *
                        C50899 +
                    ((C15415 + C15416 + C15417) * C118 +
                     (C15418 + C15419 + C15420) * C50780) *
                        C50628) *
                       C50685 * C1074 -
                   (((C15603 + C15604 + C15605) * C50780 +
                     (C15606 + C15607 + C15608) * C118) *
                        C50628 +
                    ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                      C15373 * C947 + C15375 * C310 + C15372 * C327) *
                         C50780 +
                     (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                      C15373 * C937 + C15375 * C297 + C15372 * C311) *
                         C118) *
                        C50899) *
                       C50685 * C50721) *
                      C1076 +
                  ((((C15608 + C15607 + C15606) * C118 +
                     (C15605 + C15604 + C15603) * C50780) *
                        C50899 +
                    ((C15955 + C15956 + C15957) * C118 +
                     (C15958 + C15959 + C15960) * C50780) *
                        C50628) *
                       C50685 * C50721 -
                   (((C15421 + C15422 + C15423) * C50780 +
                     (C15424 + C15425 + C15426) * C118) *
                        C50628 +
                    ((C15420 + C15419 + C15418) * C50780 +
                     (C15417 + C15416 + C15415) * C118) *
                        C50899) *
                       C50685 * C1074) *
                      C1077 +
                  ((((C15426 + C15425 + C15424) * C118 +
                     (C15423 + C15422 + C15421) * C50780) *
                        C50899 +
                    ((C15427 + C15428 + C15429) * C118 +
                     (C15430 + C15431 + C15432) * C50780) *
                        C50628) *
                       C50685 * C1074 -
                   (((C15377 * C1268 + C15374 * C1276 + C15376 * C944 +
                      C15373 * C950 + C15375 * C304 + C15372 * C324) *
                         C50780 +
                     (C15377 * C1264 + C15374 * C1269 + C15376 * C935 +
                      C15373 * C943 + C15375 * C294 + C15372 * C305) *
                         C118) *
                        C50628 +
                    ((C15960 + C15959 + C15958) * C50780 +
                     (C15957 + C15956 + C15955) * C118) *
                        C50899) *
                       C50685 * C50721) *
                      C1078)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                     C15373 * C500 + C15377 * C487 + C15374 * C501) *
                        C118 +
                    (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                     C15373 * C516 + C15377 * C502 + C15374 * C517) *
                        C50780) *
                       C50899 +
                   ((C15415 + C15416 + C15417) * C118 +
                    (C15418 + C15419 + C15420) * C50780) *
                       C50628) *
                      C50685 * C1145 -
                  (((C15603 + C15604 + C15605) * C50780 +
                    (C15606 + C15607 + C15608) * C118) *
                       C50628 +
                   ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                     C15373 * C947 + C15375 * C310 + C15372 * C327) *
                        C50780 +
                    (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                     C15373 * C937 + C15375 * C297 + C15372 * C311) *
                        C118) *
                       C50899) *
                      C50685 * C1146 +
                  (((C15375 * C298 + C15372 * C312 + C15376 * C1614 +
                     C15373 * C1622 + C15377 * C3663 + C15374 * C3669) *
                        C118 +
                    (C15375 * C313 + C15372 * C328 + C15376 * C1621 +
                     C15373 * C1626 + C15377 * C3668 + C15374 * C3672) *
                        C50780) *
                       C50899 +
                   ((C15609 + C15610 + C15611) * C118 +
                    (C15612 + C15613 + C15614) * C50780) *
                       C50628) *
                      C50685 * C1147 -
                  (((C15377 * C9295 + C15374 * C9299 + C15376 * C4170 +
                     C15373 * C4175 + C15375 * C1158 + C15372 * C1164) *
                        C50780 +
                    (C15377 * C9293 + C15374 * C9296 + C15376 * C4166 +
                     C15373 * C4171 + C15375 * C1152 + C15372 * C1159) *
                        C118) *
                       C50628 +
                   ((C15377 * C9297 + C15374 * C9300 + C15376 * C4172 +
                     C15373 * C4176 + C15375 * C1160 + C15372 * C1165) *
                        C50780 +
                    (C15377 * C9294 + C15374 * C9298 + C15376 * C4167 +
                     C15373 * C4173 + C15375 * C1153 + C15372 * C1161) *
                        C118) *
                       C50899) *
                      C50685 * C1148) *
                 C50650) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                      C15373 * C500 + C15377 * C487 + C15374 * C501) *
                         C118 +
                     (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                      C15373 * C516 + C15377 * C502 + C15374 * C517) *
                         C50780) *
                        C50899 +
                    ((C15415 + C15416 + C15417) * C118 +
                     (C15418 + C15419 + C15420) * C50780) *
                        C50628) *
                       C480 -
                   (((C15785 + C15786 + C15787) * C50780 +
                     (C15788 + C15789 + C15790) * C118) *
                        C50628 +
                    ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                      C15373 * C517 + C15375 * C499 + C15372 * C516) *
                         C50780 +
                     (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                      C15373 * C501 + C15375 * C486 + C15372 * C500) *
                         C118) *
                        C50899) *
                       C481 +
                   (((C15375 * C487 + C15372 * C501 + C15376 * C1898 +
                      C15373 * C1906 + C15377 * C7431 + C15374 * C7437) *
                         C118 +
                     (C15375 * C502 + C15372 * C517 + C15376 * C1905 +
                      C15373 * C1910 + C15377 * C7436 + C15374 * C7440) *
                         C50780) *
                        C50899 +
                    ((C15791 + C15792 + C15793) * C118 +
                     (C15794 + C15795 + C15796) * C50780) *
                        C50628) *
                       C482) *
                      C1074 +
                  ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 +
                      C15373 * C1275 + C15377 * C4575 + C15374 * C4581) *
                         C118 +
                     (C15375 * C938 + C15372 * C947 + C15376 * C1274 +
                      C15373 * C1279 + C15377 * C4580 + C15374 * C4584) *
                         C50780) *
                        C50899 +
                    ((C16331 + C16332 + C16333) * C118 +
                     (C16334 + C16335 + C16336) * C50780) *
                        C50628) *
                       C481 -
                   (((C15603 + C15604 + C15605) * C50780 +
                     (C15606 + C15607 + C15608) * C118) *
                        C50628 +
                    ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                      C15373 * C947 + C15375 * C310 + C15372 * C327) *
                         C50780 +
                     (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                      C15373 * C937 + C15375 * C297 + C15372 * C311) *
                         C118) *
                        C50899) *
                       C480 -
                   (((C15377 * C16727 + C15374 * C16729 + C15376 * C4578 +
                      C15373 * C4583 + C15375 * C1272 + C15372 * C1278) *
                         C50780 +
                     (C15377 * C16726 + C15374 * C16728 + C15376 * C4574 +
                      C15373 * C4579 + C15375 * C1266 + C15372 * C1273) *
                         C118) *
                        C50628 +
                    ((C15377 * C14784 + C15374 * C14787 + C15376 * C4580 +
                      C15373 * C4584 + C15375 * C1274 + C15372 * C1279) *
                         C50780 +
                     (C15377 * C14781 + C15374 * C14785 + C15376 * C4575 +
                      C15373 * C4581 + C15375 * C1267 + C15372 * C1275) *
                         C118) *
                        C50899) *
                       C482) *
                      C50721) *
                 C50650) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50917 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C1074 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + (C117 * C4167 + C50810 * C4173) * C8032 +
                      (C117 * C4172 + C50810 * C4176) * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50749 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50917) *
                       C50721) *
                      C50908 +
                  ((((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50749 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50917) *
                       C1074 +
                   (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                     (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                        C50917 -
                    (((C117 * C4168 + C50810 * C4174) * C8027 +
                      (C117 * C4165 + C50810 * C4169) * C8032 + C3249 * C8026 +
                      C3248 * C8031 + C968 * C8025 + C967 * C8030) *
                         C50628 +
                     (C8889 + C8888 + C8881 + C8880 + C8879 + C8878) * C50899) *
                        C50749) *
                       C50721) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50917 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C1074 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50749 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50917) *
                       C50721) *
                      C50908 +
                  ((((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50749 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50917) *
                       C1074 +
                   (((C376 + C375) * C107 + (C374 + C373) * C108 +
                     (C372 + C371) * C109 + (C687 + C688) * C110) *
                        C50917 -
                    (((C117 * C945 + C50810 * C951) * C50780 +
                      (C117 * C936 + C50810 * C946) * C118) *
                         C110 +
                     (C976 + C975) * C109 + (C974 + C973) * C108 +
                     (C972 + C971) * C107) *
                        C50749) *
                       C50721) *
                      C50656)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                       C15373 * C500 + C15377 * C487 + C15374 * C501) *
                          C118 +
                      (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                       C15373 * C516 + C15377 * C502 + C15374 * C517) *
                          C50780) *
                         C50899 +
                     ((C15415 + C15416 + C15417) * C118 +
                      (C15418 + C15419 + C15420) * C50780) *
                         C50628) *
                        C50917 -
                    (((C15785 + C15786 + C15787) * C50780 +
                      (C15788 + C15789 + C15790) * C118) *
                         C50628 +
                     ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                       C15373 * C517 + C15375 * C499 + C15372 * C516) *
                          C50780 +
                      (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                       C15373 * C501 + C15375 * C486 + C15372 * C500) *
                          C118) *
                         C50899) *
                        C50749) *
                       C1074 +
                   ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 +
                       C15373 * C1275 + C15377 * C4575 + C15374 * C4581) *
                          C118 +
                      (C15375 * C938 + C15372 * C947 + C15376 * C1274 +
                       C15373 * C1279 + C15377 * C4580 + C15374 * C4584) *
                          C50780) *
                         C50899 +
                     ((C16331 + C16332 + C16333) * C118 +
                      (C16334 + C16335 + C16336) * C50780) *
                         C50628) *
                        C50749 -
                    (((C15603 + C15604 + C15605) * C50780 +
                      (C15606 + C15607 + C15608) * C118) *
                         C50628 +
                     ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                       C15373 * C947 + C15375 * C310 + C15372 * C327) *
                          C50780 +
                      (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                       C15373 * C937 + C15375 * C297 + C15372 * C311) *
                          C118) *
                         C50899) *
                        C50917) *
                       C50721) *
                      C50908 +
                  (((((C15790 + C15789 + C15788) * C118 +
                      (C15787 + C15786 + C15785) * C50780) *
                         C50899 +
                     ((C16119 + C16120 + C16121) * C118 +
                      (C16122 + C16123 + C16124) * C50780) *
                         C50628) *
                        C50749 -
                    (((C15421 + C15422 + C15423) * C50780 +
                      (C15424 + C15425 + C15426) * C118) *
                         C50628 +
                     ((C15420 + C15419 + C15418) * C50780 +
                      (C15417 + C15416 + C15415) * C118) *
                         C50899) *
                        C50917) *
                       C1074 +
                   ((((C15608 + C15607 + C15606) * C118 +
                      (C15605 + C15604 + C15603) * C50780) *
                         C50899 +
                     ((C15955 + C15956 + C15957) * C118 +
                      (C15958 + C15959 + C15960) * C50780) *
                         C50628) *
                        C50917 -
                    (((C15377 * C4576 + C15374 * C4582 + C15376 * C1270 +
                       C15373 * C1277 + C15375 * C942 + C15372 * C949) *
                          C50780 +
                      (C15377 * C4573 + C15374 * C4577 + C15376 * C1265 +
                       C15373 * C1271 + C15375 * C934 + C15372 * C941) *
                          C118) *
                         C50628 +
                     ((C16336 + C16335 + C16334) * C50780 +
                      (C16333 + C16332 + C16331) * C118) *
                         C50899) *
                        C50749) *
                       C50721) *
                      C50656)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50685 * C1145 -
          (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C50810 * C327) * C50780 +
            (C117 * C297 + C50810 * C311) * C118) *
               C107) *
              C50685 * C1146 +
          (((C117 * C298 + C50810 * C312) * C118 +
            (C117 * C313 + C50810 * C328) * C50780) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C50685 * C1147 -
          (((C117 * C1154 + C50810 * C1162) * C50780 +
            (C117 * C1150 + C50810 * C1155) * C118) *
               C110 +
           ((C117 * C1156 + C50810 * C1163) * C50780 +
            (C117 * C1151 + C50810 * C1157) * C118) *
               C109 +
           ((C117 * C1158 + C50810 * C1164) * C50780 +
            (C117 * C1152 + C50810 * C1159) * C118) *
               C108 +
           ((C117 * C1160 + C50810 * C1165) * C50780 +
            (C117 * C1153 + C50810 * C1161) * C118) *
               C107) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50685 * C1074 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C50685 * C50721) *
              C1076 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50685 * C50721 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50685 * C1074) *
              C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50685 * C1074 -
           (((C117 * C675 + C50810 * C677) * C50780 +
             (C117 * C674 + C50810 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C1074 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C50721) *
              C1076 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
               C50685 * C50721 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C1074) *
              C1077 +
          (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
            (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
               C50685 * C1074 -
           (((C117 * C1154 + C50810 * C1162) * C8027 +
             (C117 * C1150 + C50810 * C1155) * C8032 + C370 * C8026 +
             C369 * C8031 + C359 * C8025 + C360 * C8030) *
                C50628 +
            (C8531 + C8530 + C8529 + C8528 + C8527 + C8526) * C50899) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C1145 -
          ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
           (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
            C2543 * C8025 + C2542 * C8030) *
               C50899) *
              C50685 * C1146 +
          ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
            C9146 * C8032 + C9147 * C8027) *
               C50899 +
           (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
              C50685 * C1147 -
          (((C117 * C9135 + C50810 * C9139) * C8027 +
            (C117 * C9133 + C50810 * C9136) * C8032 + C8213 * C8026 +
            C8212 * C8031 + C2547 * C8025 + C2546 * C8030) *
               C50628 +
           ((C117 * C9137 + C50810 * C9140) * C8027 +
            (C117 * C9134 + C50810 * C9138) * C8032 + C9147 * C8026 +
            C9146 * C8031 + C3515 * C8025 + C3514 * C8030) *
               C50899) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C118 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50780) *
                C50899 +
            ((C15415 + C15416 + C15417) * C118 +
             (C15418 + C15419 + C15420) * C50780) *
                C50628) *
               C50685 * C1074 -
           (((C15603 + C15604 + C15605) * C50780 +
             (C15606 + C15607 + C15608) * C118) *
                C50628 +
            ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 + C15373 * C947 +
              C15375 * C310 + C15372 * C327) *
                 C50780 +
             (C15377 * C1267 + C15374 * C1275 + C15376 * C932 + C15373 * C937 +
              C15375 * C297 + C15372 * C311) *
                 C118) *
                C50899) *
               C50685 * C50721) *
              C1076 +
          ((((C15608 + C15607 + C15606) * C118 +
             (C15605 + C15604 + C15603) * C50780) *
                C50899 +
            ((C15955 + C15956 + C15957) * C118 +
             (C15958 + C15959 + C15960) * C50780) *
                C50628) *
               C50685 * C50721 -
           (((C15421 + C15422 + C15423) * C50780 +
             (C15424 + C15425 + C15426) * C118) *
                C50628 +
            ((C15420 + C15419 + C15418) * C50780 +
             (C15417 + C15416 + C15415) * C118) *
                C50899) *
               C50685 * C1074) *
              C1077 +
          ((((C15426 + C15425 + C15424) * C118 +
             (C15423 + C15422 + C15421) * C50780) *
                C50899 +
            ((C15427 + C15428 + C15429) * C118 +
             (C15430 + C15431 + C15432) * C50780) *
                C50628) *
               C50685 * C1074 -
           (((C15377 * C1268 + C15374 * C1276 + C15376 * C944 + C15373 * C950 +
              C15375 * C304 + C15372 * C324) *
                 C50780 +
             (C15377 * C1264 + C15374 * C1269 + C15376 * C935 + C15373 * C943 +
              C15375 * C294 + C15372 * C305) *
                 C118) *
                C50628 +
            ((C15960 + C15959 + C15958) * C50780 +
             (C15957 + C15956 + C15955) * C118) *
                C50899) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C118 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50780) *
               C50899 +
           ((C15415 + C15416 + C15417) * C118 +
            (C15418 + C15419 + C15420) * C50780) *
               C50628) *
              C50685 * C1145 -
          (((C15603 + C15604 + C15605) * C50780 +
            (C15606 + C15607 + C15608) * C118) *
               C50628 +
           ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 + C15373 * C947 +
             C15375 * C310 + C15372 * C327) *
                C50780 +
            (C15377 * C1267 + C15374 * C1275 + C15376 * C932 + C15373 * C937 +
             C15375 * C297 + C15372 * C311) *
                C118) *
               C50899) *
              C50685 * C1146 +
          (((C15375 * C298 + C15372 * C312 + C15376 * C1614 + C15373 * C1622 +
             C15377 * C3663 + C15374 * C3669) *
                C118 +
            (C15375 * C313 + C15372 * C328 + C15376 * C1621 + C15373 * C1626 +
             C15377 * C3668 + C15374 * C3672) *
                C50780) *
               C50899 +
           ((C15609 + C15610 + C15611) * C118 +
            (C15612 + C15613 + C15614) * C50780) *
               C50628) *
              C50685 * C1147 -
          (((C15377 * C9295 + C15374 * C9299 + C15376 * C4170 + C15373 * C4175 +
             C15375 * C1158 + C15372 * C1164) *
                C50780 +
            (C15377 * C9293 + C15374 * C9296 + C15376 * C4166 + C15373 * C4171 +
             C15375 * C1152 + C15372 * C1159) *
                C118) *
               C50628 +
           ((C15377 * C9297 + C15374 * C9300 + C15376 * C4172 + C15373 * C4176 +
             C15375 * C1160 + C15372 * C1165) *
                C50780 +
            (C15377 * C9294 + C15374 * C9298 + C15376 * C4167 + C15373 * C4173 +
             C15375 * C1153 + C15372 * C1161) *
                C118) *
               C50899) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C8030 +
              (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
              C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                 C50899 +
             (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                C1725 -
            ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
             (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
              (C117 * C499 + C50810 * C516) * C8025 +
              (C117 * C486 + C50810 * C500) * C8030) *
                 C50899) *
                C50749) *
               C50916 +
           (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
              C9806 * C8032 + C9807 * C8027) *
                 C50899 +
             (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                C50749 -
            ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
             (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
              C2543 * C8025 + C2542 * C8030) *
                 C50899) *
                C1725) *
               C50721) *
              C50908 +
          ((((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
             (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                C50749 -
            ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
             (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                C1725) *
               C50916 +
           (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
             (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                C1725 -
            (((C117 * C4168 + C50810 * C4174) * C8027 +
              (C117 * C4165 + C50810 * C4169) * C8032 + C3249 * C8026 +
              C3248 * C8031 + C968 * C8025 + C967 * C8030) *
                 C50628 +
             (C8889 + C8888 + C8881 + C8880 + C8879 + C8878) * C50899) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C118 +
              (C117 * C127 + C50810 * C140) * C50780) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C1725 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50810 * C516) * C50780 +
              (C117 * C486 + C50810 * C500) * C118) *
                 C107) *
                C50749) *
               C50916 +
           ((((C117 * C932 + C50810 * C937) * C118 +
              (C117 * C938 + C50810 * C947) * C50780) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50749 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50810 * C327) * C50780 +
              (C117 * C297 + C50810 * C311) * C118) *
                 C107) *
                C1725) *
               C50721) *
              C50908 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50749 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C1725) *
               C50916 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C1725 -
            (((C117 * C945 + C50810 * C951) * C50780 +
              (C117 * C936 + C50810 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
               C15377 * C487 + C15374 * C501) *
                  C118 +
              (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
               C15377 * C502 + C15374 * C517) *
                  C50780) *
                 C50899 +
             ((C15415 + C15416 + C15417) * C118 +
              (C15418 + C15419 + C15420) * C50780) *
                 C50628) *
                C1725 -
            (((C15785 + C15786 + C15787) * C50780 +
              (C15788 + C15789 + C15790) * C118) *
                 C50628 +
             ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
               C15375 * C499 + C15372 * C516) *
                  C50780 +
              (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
               C15375 * C486 + C15372 * C500) *
                  C118) *
                 C50899) *
                C50749) *
               C50916 +
           ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 + C15373 * C1275 +
               C15377 * C4575 + C15374 * C4581) *
                  C118 +
              (C15375 * C938 + C15372 * C947 + C15376 * C1274 + C15373 * C1279 +
               C15377 * C4580 + C15374 * C4584) *
                  C50780) *
                 C50899 +
             ((C16331 + C16332 + C16333) * C118 +
              (C16334 + C16335 + C16336) * C50780) *
                 C50628) *
                C50749 -
            (((C15603 + C15604 + C15605) * C50780 +
              (C15606 + C15607 + C15608) * C118) *
                 C50628 +
             ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 + C15373 * C947 +
               C15375 * C310 + C15372 * C327) *
                  C50780 +
              (C15377 * C1267 + C15374 * C1275 + C15376 * C932 + C15373 * C937 +
               C15375 * C297 + C15372 * C311) *
                  C118) *
                 C50899) *
                C1725) *
               C50721) *
              C50908 +
          (((((C15790 + C15789 + C15788) * C118 +
              (C15787 + C15786 + C15785) * C50780) *
                 C50899 +
             ((C16119 + C16120 + C16121) * C118 +
              (C16122 + C16123 + C16124) * C50780) *
                 C50628) *
                C50749 -
            (((C15421 + C15422 + C15423) * C50780 +
              (C15424 + C15425 + C15426) * C118) *
                 C50628 +
             ((C15420 + C15419 + C15418) * C50780 +
              (C15417 + C15416 + C15415) * C118) *
                 C50899) *
                C1725) *
               C50916 +
           ((((C15608 + C15607 + C15606) * C118 +
              (C15605 + C15604 + C15603) * C50780) *
                 C50899 +
             ((C15955 + C15956 + C15957) * C118 +
              (C15958 + C15959 + C15960) * C50780) *
                 C50628) *
                C1725 -
            (((C15377 * C4576 + C15374 * C4582 + C15376 * C1270 +
               C15373 * C1277 + C15375 * C942 + C15372 * C949) *
                  C50780 +
              (C15377 * C4573 + C15374 * C4577 + C15376 * C1265 +
               C15373 * C1271 + C15375 * C934 + C15372 * C941) *
                  C118) *
                 C50628 +
             ((C16336 + C16335 + C16334) * C50780 +
              (C16333 + C16332 + C16331) * C118) *
                 C50899) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50962 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C8030 +
                      (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
                      C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
                         C50899 +
                     (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
                        C2141) *
                       C50916 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + C9806 * C8032 + C9807 * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50963 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50962 -
                    (((C117 * C9295 + C50810 * C9299) * C8027 +
                      (C117 * C9293 + C50810 * C9296) * C8032 + C8377 * C8026 +
                      C8376 * C8031 + C2721 * C8025 + C2720 * C8030) *
                         C50628 +
                     ((C117 * C9297 + C50810 * C9300) * C8027 +
                      (C117 * C9294 + C50810 * C9298) * C8032 + C9307 * C8026 +
                      C9306 * C8031 + C3679 * C8025 + C3678 * C8030) *
                         C50899) *
                        C2141) *
                       C50721) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50962 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C118 +
                      (C117 * C502 + C50810 * C517) * C50780) *
                         C107 +
                     (C566 + C567) * C108 + (C568 + C569) * C109 +
                     (C570 + C571) * C110) *
                        C2141) *
                       C50916 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50963 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50962 -
                    (((C117 * C1268 + C50810 * C1276) * C50780 +
                      (C117 * C1264 + C50810 * C1269) * C118) *
                         C110 +
                     ((C117 * C1270 + C50810 * C1277) * C50780 +
                      (C117 * C1265 + C50810 * C1271) * C118) *
                         C109 +
                     ((C117 * C1272 + C50810 * C1278) * C50780 +
                      (C117 * C1266 + C50810 * C1273) * C118) *
                         C108 +
                     ((C117 * C1274 + C50810 * C1279) * C50780 +
                      (C117 * C1267 + C50810 * C1275) * C118) *
                         C107) *
                        C2141) *
                       C50721) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                       C15373 * C500 + C15377 * C487 + C15374 * C501) *
                          C118 +
                      (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                       C15373 * C516 + C15377 * C502 + C15374 * C517) *
                          C50780) *
                         C50899 +
                     ((C15415 + C15416 + C15417) * C118 +
                      (C15418 + C15419 + C15420) * C50780) *
                         C50628) *
                        C50962 -
                    (((C15785 + C15786 + C15787) * C50780 +
                      (C15788 + C15789 + C15790) * C118) *
                         C50628 +
                     ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                       C15373 * C517 + C15375 * C499 + C15372 * C516) *
                          C50780 +
                      (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                       C15373 * C501 + C15375 * C486 + C15372 * C500) *
                          C118) *
                         C50899) *
                        C50963 +
                    (((C15375 * C487 + C15372 * C501 + C15376 * C1898 +
                       C15373 * C1906 + C15377 * C7431 + C15374 * C7437) *
                          C118 +
                      (C15375 * C502 + C15372 * C517 + C15376 * C1905 +
                       C15373 * C1910 + C15377 * C7436 + C15374 * C7440) *
                          C50780) *
                         C50899 +
                     ((C15791 + C15792 + C15793) * C118 +
                      (C15794 + C15795 + C15796) * C50780) *
                         C50628) *
                        C2141) *
                       C50916 +
                   ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 +
                       C15373 * C1275 + C15377 * C4575 + C15374 * C4581) *
                          C118 +
                      (C15375 * C938 + C15372 * C947 + C15376 * C1274 +
                       C15373 * C1279 + C15377 * C4580 + C15374 * C4584) *
                          C50780) *
                         C50899 +
                     ((C16331 + C16332 + C16333) * C118 +
                      (C16334 + C16335 + C16336) * C50780) *
                         C50628) *
                        C50963 -
                    (((C15603 + C15604 + C15605) * C50780 +
                      (C15606 + C15607 + C15608) * C118) *
                         C50628 +
                     ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                       C15373 * C947 + C15375 * C310 + C15372 * C327) *
                          C50780 +
                      (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                       C15373 * C937 + C15375 * C297 + C15372 * C311) *
                          C118) *
                         C50899) *
                        C50962 -
                    (((C15377 * C16727 + C15374 * C16729 + C15376 * C4578 +
                       C15373 * C4583 + C15375 * C1272 + C15372 * C1278) *
                          C50780 +
                      (C15377 * C16726 + C15374 * C16728 + C15376 * C4574 +
                       C15373 * C4579 + C15375 * C1266 + C15372 * C1273) *
                          C118) *
                         C50628 +
                     ((C15377 * C14784 + C15374 * C14787 + C15376 * C4580 +
                       C15373 * C4584 + C15375 * C1274 + C15372 * C1279) *
                          C50780 +
                      (C15377 * C14781 + C15374 * C14785 + C15376 * C4575 +
                       C15373 * C4581 + C15375 * C1267 + C15372 * C1275) *
                          C118) *
                         C50899) *
                        C2141) *
                       C50721) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C118 +
                 (C117 * C127 + C50810 * C140) * C50780) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C1725 -
               (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                ((C117 * C499 + C50810 * C516) * C50780 +
                 (C117 * C486 + C50810 * C500) * C118) *
                    C107) *
                   C50749) *
                  C50669 * C1076 +
              (((C565 + C564) * C107 + (C563 + C562) * C108 +
                (C561 + C560) * C109 + (C801 + C802) * C110) *
                   C50749 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C1725) *
                  C50669 * C1077 +
              ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C1725 -
               (((C117 * C789 + C50810 * C791) * C50780 +
                 (C117 * C788 + C50810 * C790) * C118) *
                    C110 +
                (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                   C50749) *
                  C50669 * C1078) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C118 +
                 (C117 * C127 + C50810 * C140) * C50780) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C1725 -
               (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                ((C117 * C499 + C50810 * C516) * C50780 +
                 (C117 * C486 + C50810 * C500) * C118) *
                    C107) *
                   C50749) *
                  C289 +
              ((((C117 * C932 + C50810 * C937) * C118 +
                 (C117 * C938 + C50810 * C947) * C50780) *
                    C107 +
                (C971 + C972) * C108 + (C973 + C974) * C109 +
                (C975 + C976) * C110) *
                   C50749 -
               (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                ((C117 * C310 + C50810 * C327) * C50780 +
                 (C117 * C297 + C50810 * C311) * C118) *
                    C107) *
                   C1725) *
                  C290 +
              ((((C117 * C298 + C50810 * C312) * C118 +
                 (C117 * C313 + C50810 * C328) * C50780) *
                    C107 +
                (C377 + C378) * C108 + (C379 + C380) * C109 +
                (C381 + C382) * C110) *
                   C1725 -
               (((C117 * C1615 + C50810 * C1623) * C50780 +
                 (C117 * C1611 + C50810 * C1616) * C118) *
                    C110 +
                ((C117 * C1617 + C50810 * C1624) * C50780 +
                 (C117 * C1612 + C50810 * C1618) * C118) *
                    C109 +
                ((C117 * C1619 + C50810 * C1625) * C50780 +
                 (C117 * C1613 + C50810 * C1620) * C118) *
                    C108 +
                ((C117 * C1621 + C50810 * C1626) * C50780 +
                 (C117 * C1614 + C50810 * C1622) * C118) *
                    C107) *
                   C50749) *
                  C291) *
             C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C1891 -
          (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
           ((C117 * C499 + C50810 * C516) * C50780 +
            (C117 * C486 + C50810 * C500) * C118) *
               C107) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C118 +
            (C117 * C502 + C50810 * C517) * C50780) *
               C107 +
           (C566 + C567) * C108 + (C568 + C569) * C109 + (C570 + C571) * C110) *
              C1893 -
          (((C117 * C1899 + C50810 * C1907) * C50780 +
            (C117 * C1895 + C50810 * C1900) * C118) *
               C110 +
           ((C117 * C1901 + C50810 * C1908) * C50780 +
            (C117 * C1896 + C50810 * C1902) * C118) *
               C109 +
           ((C117 * C1903 + C50810 * C1909) * C50780 +
            (C117 * C1897 + C50810 * C1904) * C118) *
               C108 +
           ((C117 * C1905 + C50810 * C1910) * C50780 +
            (C117 * C1898 + C50810 * C1906) * C118) *
               C107) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C1725 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C50749) *
              C50669 * C1076 +
          (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
            (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
               C50749 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C1725) *
              C50669 * C1077 +
          (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
            (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
               C1725 -
           (((C117 * C1615 + C50810 * C1623) * C8027 +
             (C117 * C1611 + C50810 * C1616) * C8032 + C970 * C8026 +
             C969 * C8031 + C548 * C8025 + C549 * C8030) *
                C50628 +
            (C8683 + C8682 + C8681 + C8680 + C8679 + C8678) * C50899) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C1725 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C50749) *
              C289 +
          (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
             C9806 * C8032 + C9807 * C8027) *
                C50899 +
            (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
               C50749 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C1725) *
              C290 +
          (((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
             C9146 * C8032 + C9147 * C8027) *
                C50899 +
            (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
               C1725 -
           (((C117 * C9795 + C50810 * C9799) * C8027 +
             (C117 * C9793 + C50810 * C9796) * C8032 + C8887 * C8026 +
             C8886 * C8031 + C3247 * C8025 + C3246 * C8030) *
                C50628 +
            ((C117 * C9797 + C50810 * C9800) * C8027 +
             (C117 * C9794 + C50810 * C9798) * C8032 + C9807 * C8026 +
             C9806 * C8031 + C4183 * C8025 + C4182 * C8030) *
                C50899) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C1891 -
          ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
           (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
            (C117 * C499 + C50810 * C516) * C8025 +
            (C117 * C486 + C50810 * C500) * C8030) *
               C50899) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C8030 +
            (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
            C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
               C50899 +
           (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
              C1893 -
          (((C117 * C10199 + C50810 * C10203) * C8027 +
            (C117 * C10197 + C50810 * C10200) * C8032 +
            (C117 * C4578 + C50810 * C4583) * C8026 +
            (C117 * C4574 + C50810 * C4579) * C8031 +
            (C117 * C1903 + C50810 * C1909) * C8025 +
            (C117 * C1897 + C50810 * C1904) * C8030) *
               C50628 +
           ((C117 * C10201 + C50810 * C10204) * C8027 +
            (C117 * C10198 + C50810 * C10202) * C8032 +
            (C117 * C4580 + C50810 * C4584) * C8026 +
            (C117 * C4575 + C50810 * C4581) * C8031 +
            (C117 * C1905 + C50810 * C1910) * C8025 +
            (C117 * C1898 + C50810 * C1906) * C8030) *
               C50899) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C118 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50780) *
                C50899 +
            ((C15415 + C15416 + C15417) * C118 +
             (C15418 + C15419 + C15420) * C50780) *
                C50628) *
               C1725 -
           (((C15785 + C15786 + C15787) * C50780 +
             (C15788 + C15789 + C15790) * C118) *
                C50628 +
            ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
              C15375 * C499 + C15372 * C516) *
                 C50780 +
             (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
              C15375 * C486 + C15372 * C500) *
                 C118) *
                C50899) *
               C50749) *
              C50669 * C1076 +
          ((((C15790 + C15789 + C15788) * C118 +
             (C15787 + C15786 + C15785) * C50780) *
                C50899 +
            ((C16119 + C16120 + C16121) * C118 +
             (C16122 + C16123 + C16124) * C50780) *
                C50628) *
               C50749 -
           (((C15421 + C15422 + C15423) * C50780 +
             (C15424 + C15425 + C15426) * C118) *
                C50628 +
            ((C15420 + C15419 + C15418) * C50780 +
             (C15417 + C15416 + C15415) * C118) *
                C50899) *
               C1725) *
              C50669 * C1077 +
          ((((C15426 + C15425 + C15424) * C118 +
             (C15423 + C15422 + C15421) * C50780) *
                C50899 +
            ((C15427 + C15428 + C15429) * C118 +
             (C15430 + C15431 + C15432) * C50780) *
                C50628) *
               C1725 -
           (((C15377 * C1899 + C15374 * C1907 + C15376 * C508 + C15373 * C520 +
              C15375 * C493 + C15372 * C513) *
                 C50780 +
             (C15377 * C1895 + C15374 * C1900 + C15376 * C490 + C15373 * C507 +
              C15375 * C483 + C15372 * C494) *
                 C118) *
                C50628 +
            ((C16124 + C16123 + C16122) * C50780 +
             (C16121 + C16120 + C16119) * C118) *
                C50899) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C118 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50780) *
                C50899 +
            ((C15415 + C15416 + C15417) * C118 +
             (C15418 + C15419 + C15420) * C50780) *
                C50628) *
               C1725 -
           (((C15785 + C15786 + C15787) * C50780 +
             (C15788 + C15789 + C15790) * C118) *
                C50628 +
            ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
              C15375 * C499 + C15372 * C516) *
                 C50780 +
             (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
              C15375 * C486 + C15372 * C500) *
                 C118) *
                C50899) *
               C50749) *
              C289 +
          ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 + C15373 * C1275 +
              C15377 * C4575 + C15374 * C4581) *
                 C118 +
             (C15375 * C938 + C15372 * C947 + C15376 * C1274 + C15373 * C1279 +
              C15377 * C4580 + C15374 * C4584) *
                 C50780) *
                C50899 +
            ((C16331 + C16332 + C16333) * C118 +
             (C16334 + C16335 + C16336) * C50780) *
                C50628) *
               C50749 -
           (((C15603 + C15604 + C15605) * C50780 +
             (C15606 + C15607 + C15608) * C118) *
                C50628 +
            ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 + C15373 * C947 +
              C15375 * C310 + C15372 * C327) *
                 C50780 +
             (C15377 * C1267 + C15374 * C1275 + C15376 * C932 + C15373 * C937 +
              C15375 * C297 + C15372 * C311) *
                 C118) *
                C50899) *
               C1725) *
              C290 +
          ((((C15375 * C298 + C15372 * C312 + C15376 * C1614 + C15373 * C1622 +
              C15377 * C3663 + C15374 * C3669) *
                 C118 +
             (C15375 * C313 + C15372 * C328 + C15376 * C1621 + C15373 * C1626 +
              C15377 * C3668 + C15374 * C3672) *
                 C50780) *
                C50899 +
            ((C15609 + C15610 + C15611) * C118 +
             (C15612 + C15613 + C15614) * C50780) *
                C50628) *
               C1725 -
           (((C15377 * C10199 + C15374 * C10203 + C15376 * C3666 +
              C15373 * C3671 + C15375 * C1619 + C15372 * C1625) *
                 C50780 +
             (C15377 * C10197 + C15374 * C10200 + C15376 * C3662 +
              C15373 * C3667 + C15375 * C1613 + C15372 * C1620) *
                 C118) *
                C50628 +
            ((C15377 * C10201 + C15374 * C10204 + C15376 * C3668 +
              C15373 * C3672 + C15375 * C1621 + C15372 * C1626) *
                 C50780 +
             (C15377 * C10198 + C15374 * C10202 + C15376 * C3663 +
              C15373 * C3669 + C15375 * C1614 + C15372 * C1622) *
                 C118) *
                C50899) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C118 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50780) *
               C50899 +
           ((C15415 + C15416 + C15417) * C118 +
            (C15418 + C15419 + C15420) * C50780) *
               C50628) *
              C1891 -
          (((C15785 + C15786 + C15787) * C50780 +
            (C15788 + C15789 + C15790) * C118) *
               C50628 +
           ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50780 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C118) *
               C50899) *
              C1892 +
          (((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
             C15377 * C7431 + C15374 * C7437) *
                C118 +
            (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
             C15377 * C7436 + C15374 * C7440) *
                C50780) *
               C50899 +
           ((C15791 + C15792 + C15793) * C118 +
            (C15794 + C15795 + C15796) * C50780) *
               C50628) *
              C1893 -
          (((C15377 * C17608 + C15374 * C17612 + C15376 * C7434 +
             C15373 * C7439 + C15375 * C1903 + C15372 * C1909) *
                C50780 +
            (C15377 * C17606 + C15374 * C17609 + C15376 * C7430 +
             C15373 * C7435 + C15375 * C1897 + C15372 * C1904) *
                C118) *
               C50628 +
           ((C15377 * C17610 + C15374 * C17613 + C15376 * C7436 +
             C15373 * C7440 + C15375 * C1905 + C15372 * C1910) *
                C50780 +
            (C15377 * C17607 + C15374 * C17611 + C15376 * C7431 +
             C15373 * C7437 + C15375 * C1898 + C15372 * C1906) *
                C118) *
               C50899) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[103] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50962 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C8030 +
                      (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
                      C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
                         C50899 +
                     (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
                        C2141) *
                       C50669 * C50908 +
                   (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50963 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50962 -
                    (((C117 * C3664 + C50810 * C3670) * C8027 +
                      (C117 * C3661 + C50810 * C3665) * C8032 + C2723 * C8026 +
                      C2722 * C8031 + C557 * C8025 + C556 * C8030) *
                         C50628 +
                     (C8379 + C8378 + C8371 + C8370 + C8369 + C8368) * C50899) *
                        C2141) *
                       C50669 * C50656)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50962 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C118 +
                      (C117 * C502 + C50810 * C517) * C50780) *
                         C107 +
                     (C566 + C567) * C108 + (C568 + C569) * C109 +
                     (C570 + C571) * C110) *
                        C2141) *
                       C50669 * C50908 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50963 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50962 -
                    (((C117 * C511 + C50810 * C522) * C50780 +
                      (C117 * C492 + C50810 * C512) * C118) *
                         C110 +
                     (C571 + C570) * C109 + (C569 + C568) * C108 +
                     (C567 + C566) * C107) *
                        C2141) *
                       C50669 * C50656)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                       C15373 * C500 + C15377 * C487 + C15374 * C501) *
                          C118 +
                      (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                       C15373 * C516 + C15377 * C502 + C15374 * C517) *
                          C50780) *
                         C50899 +
                     ((C15415 + C15416 + C15417) * C118 +
                      (C15418 + C15419 + C15420) * C50780) *
                         C50628) *
                        C50962 -
                    (((C15785 + C15786 + C15787) * C50780 +
                      (C15788 + C15789 + C15790) * C118) *
                         C50628 +
                     ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                       C15373 * C517 + C15375 * C499 + C15372 * C516) *
                          C50780 +
                      (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                       C15373 * C501 + C15375 * C486 + C15372 * C500) *
                          C118) *
                         C50899) *
                        C50963 +
                    (((C15375 * C487 + C15372 * C501 + C15376 * C1898 +
                       C15373 * C1906 + C15377 * C7431 + C15374 * C7437) *
                          C118 +
                      (C15375 * C502 + C15372 * C517 + C15376 * C1905 +
                       C15373 * C1910 + C15377 * C7436 + C15374 * C7440) *
                          C50780) *
                         C50899 +
                     ((C15791 + C15792 + C15793) * C118 +
                      (C15794 + C15795 + C15796) * C50780) *
                         C50628) *
                        C2141) *
                       C50669 * C50908 +
                   ((((C15790 + C15789 + C15788) * C118 +
                      (C15787 + C15786 + C15785) * C50780) *
                         C50899 +
                     ((C16119 + C16120 + C16121) * C118 +
                      (C16122 + C16123 + C16124) * C50780) *
                         C50628) *
                        C50963 -
                    (((C15421 + C15422 + C15423) * C50780 +
                      (C15424 + C15425 + C15426) * C118) *
                         C50628 +
                     ((C15420 + C15419 + C15418) * C50780 +
                      (C15417 + C15416 + C15415) * C118) *
                         C50899) *
                        C50962 -
                    (((C15377 * C7432 + C15374 * C7438 + C15376 * C1901 +
                       C15373 * C1908 + C15375 * C506 + C15372 * C519) *
                          C50780 +
                      (C15377 * C7429 + C15374 * C7433 + C15376 * C1896 +
                       C15373 * C1902 + C15375 * C489 + C15372 * C505) *
                          C118) *
                         C50628 +
                     ((C15796 + C15795 + C15794) * C50780 +
                      (C15793 + C15792 + C15791) * C118) *
                         C50899) *
                        C2141) *
                       C50669 * C50656)) /
                     (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C1725 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C289 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50749 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C1725) *
                       C290 +
                   ((((C117 * C298 + C50810 * C312) * C118 +
                      (C117 * C313 + C50810 * C328) * C50780) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C1725 -
                    (((C117 * C1615 + C50810 * C1623) * C50780 +
                      (C117 * C1611 + C50810 * C1616) * C118) *
                         C110 +
                     ((C117 * C1617 + C50810 * C1624) * C50780 +
                      (C117 * C1612 + C50810 * C1618) * C118) *
                         C109 +
                     ((C117 * C1619 + C50810 * C1625) * C50780 +
                      (C117 * C1613 + C50810 * C1620) * C118) *
                         C108 +
                     ((C117 * C1621 + C50810 * C1626) * C50780 +
                      (C117 * C1614 + C50810 * C1622) * C118) *
                         C107) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C1725 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C50669 * C1076 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50749 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C1725) *
                       C50669 * C1077 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C1725 -
                    (((C117 * C789 + C50810 * C791) * C50780 +
                      (C117 * C788 + C50810 * C790) * C118) *
                         C110 +
                     (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C1725 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C50669 * C1076 +
                   (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50749 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C1725) *
                       C50669 * C1077 +
                   (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                     (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                        C1725 -
                    (((C117 * C1615 + C50810 * C1623) * C8027 +
                      (C117 * C1611 + C50810 * C1616) * C8032 + C970 * C8026 +
                      C969 * C8031 + C548 * C8025 + C549 * C8030) *
                         C50628 +
                     (C8683 + C8682 + C8681 + C8680 + C8679 + C8678) * C50899) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C1725 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C289 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + C9806 * C8032 + C9807 * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50749 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C1725) *
                       C290 +
                   (((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                      C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                         C50899 +
                     (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                        C1725 -
                    (((C117 * C9795 + C50810 * C9799) * C8027 +
                      (C117 * C9793 + C50810 * C9796) * C8032 + C8887 * C8026 +
                      C8886 * C8031 + C3247 * C8025 + C3246 * C8030) *
                         C50628 +
                     ((C117 * C9797 + C50810 * C9800) * C8027 +
                      (C117 * C9794 + C50810 * C9798) * C8032 + C9807 * C8026 +
                      C9806 * C8031 + C4183 * C8025 + C4182 * C8030) *
                         C50899) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                       C15373 * C500 + C15377 * C487 + C15374 * C501) *
                          C118 +
                      (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                       C15373 * C516 + C15377 * C502 + C15374 * C517) *
                          C50780) *
                         C50899 +
                     ((C15415 + C15416 + C15417) * C118 +
                      (C15418 + C15419 + C15420) * C50780) *
                         C50628) *
                        C1725 -
                    (((C15785 + C15786 + C15787) * C50780 +
                      (C15788 + C15789 + C15790) * C118) *
                         C50628 +
                     ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                       C15373 * C517 + C15375 * C499 + C15372 * C516) *
                          C50780 +
                      (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                       C15373 * C501 + C15375 * C486 + C15372 * C500) *
                          C118) *
                         C50899) *
                        C50749) *
                       C50669 * C1076 +
                   ((((C15790 + C15789 + C15788) * C118 +
                      (C15787 + C15786 + C15785) * C50780) *
                         C50899 +
                     ((C16119 + C16120 + C16121) * C118 +
                      (C16122 + C16123 + C16124) * C50780) *
                         C50628) *
                        C50749 -
                    (((C15421 + C15422 + C15423) * C50780 +
                      (C15424 + C15425 + C15426) * C118) *
                         C50628 +
                     ((C15420 + C15419 + C15418) * C50780 +
                      (C15417 + C15416 + C15415) * C118) *
                         C50899) *
                        C1725) *
                       C50669 * C1077 +
                   ((((C15426 + C15425 + C15424) * C118 +
                      (C15423 + C15422 + C15421) * C50780) *
                         C50899 +
                     ((C15427 + C15428 + C15429) * C118 +
                      (C15430 + C15431 + C15432) * C50780) *
                         C50628) *
                        C1725 -
                    (((C15377 * C1899 + C15374 * C1907 + C15376 * C508 +
                       C15373 * C520 + C15375 * C493 + C15372 * C513) *
                          C50780 +
                      (C15377 * C1895 + C15374 * C1900 + C15376 * C490 +
                       C15373 * C507 + C15375 * C483 + C15372 * C494) *
                          C118) *
                         C50628 +
                     ((C16124 + C16123 + C16122) * C50780 +
                      (C16121 + C16120 + C16119) * C118) *
                         C50899) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C15375 * C119 + C15372 * C126 + C15376 * C486 +
                       C15373 * C500 + C15377 * C487 + C15374 * C501) *
                          C118 +
                      (C15375 * C127 + C15372 * C140 + C15376 * C499 +
                       C15373 * C516 + C15377 * C502 + C15374 * C517) *
                          C50780) *
                         C50899 +
                     ((C15415 + C15416 + C15417) * C118 +
                      (C15418 + C15419 + C15420) * C50780) *
                         C50628) *
                        C1725 -
                    (((C15785 + C15786 + C15787) * C50780 +
                      (C15788 + C15789 + C15790) * C118) *
                         C50628 +
                     ((C15377 * C1905 + C15374 * C1910 + C15376 * C502 +
                       C15373 * C517 + C15375 * C499 + C15372 * C516) *
                          C50780 +
                      (C15377 * C1898 + C15374 * C1906 + C15376 * C487 +
                       C15373 * C501 + C15375 * C486 + C15372 * C500) *
                          C118) *
                         C50899) *
                        C50749) *
                       C289 +
                   ((((C15375 * C932 + C15372 * C937 + C15376 * C1267 +
                       C15373 * C1275 + C15377 * C4575 + C15374 * C4581) *
                          C118 +
                      (C15375 * C938 + C15372 * C947 + C15376 * C1274 +
                       C15373 * C1279 + C15377 * C4580 + C15374 * C4584) *
                          C50780) *
                         C50899 +
                     ((C16331 + C16332 + C16333) * C118 +
                      (C16334 + C16335 + C16336) * C50780) *
                         C50628) *
                        C50749 -
                    (((C15603 + C15604 + C15605) * C50780 +
                      (C15606 + C15607 + C15608) * C118) *
                         C50628 +
                     ((C15377 * C1274 + C15374 * C1279 + C15376 * C938 +
                       C15373 * C947 + C15375 * C310 + C15372 * C327) *
                          C50780 +
                      (C15377 * C1267 + C15374 * C1275 + C15376 * C932 +
                       C15373 * C937 + C15375 * C297 + C15372 * C311) *
                          C118) *
                         C50899) *
                        C1725) *
                       C290 +
                   ((((C15375 * C298 + C15372 * C312 + C15376 * C1614 +
                       C15373 * C1622 + C15377 * C3663 + C15374 * C3669) *
                          C118 +
                      (C15375 * C313 + C15372 * C328 + C15376 * C1621 +
                       C15373 * C1626 + C15377 * C3668 + C15374 * C3672) *
                          C50780) *
                         C50899 +
                     ((C15609 + C15610 + C15611) * C118 +
                      (C15612 + C15613 + C15614) * C50780) *
                         C50628) *
                        C1725 -
                    (((C15377 * C10199 + C15374 * C10203 + C15376 * C3666 +
                       C15373 * C3671 + C15375 * C1619 + C15372 * C1625) *
                          C50780 +
                      (C15377 * C10197 + C15374 * C10200 + C15376 * C3662 +
                       C15373 * C3667 + C15375 * C1613 + C15372 * C1620) *
                          C118) *
                         C50628 +
                     ((C15377 * C10201 + C15374 * C10204 + C15376 * C3668 +
                       C15373 * C3672 + C15375 * C1621 + C15372 * C1626) *
                          C50780 +
                      (C15377 * C10198 + C15374 * C10202 + C15376 * C3663 +
                       C15373 * C3669 + C15375 * C1614 + C15372 * C1622) *
                          C118) *
                         C50899) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C50916 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50721) *
              C50958 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50721 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C50916) *
              C50959 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50685 * C50916 -
           ((C117 * C3500 + C50810 * C3506) * C10760 +
            (C117 * C3497 + C50810 * C3501) * C10765 + C2549 * C10759 +
            C2548 * C10764 + C368 * C10758 + C367 * C10763 + C361 * C10757 +
            C362 * C10762) *
               C50623 * C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C50916 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50721) *
              C50958 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50721 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C50916) *
              C50959 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50685 * C50916 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C2344 + C686 * C50926 +
             C685 * C2343) *
                C2342 +
            (C2878 + C2877 + C2876 + C2875) * C2341 + C2880 * C2340) *
               C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50685 * C50916 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50685 * C50721) *
              C50958 +
          (((C15608 + C15607 + C15606) * C2343 +
            (C15605 + C15604 + C15603) * C50926 +
            (C15609 + C15610 + C15611) * C2344 +
            (C15612 + C15613 + C15614) * C50796) *
               C50623 * C50685 * C50721 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50685 * C50916) *
              C50959 +
          (((C15426 + C15425 + C15424) * C2343 +
            (C15423 + C15422 + C15421) * C50926 +
            (C15955 + C15956 + C15957) * C2344 +
            (C15958 + C15959 + C15960) * C50796) *
               C50623 * C50685 * C50916 -
           ((C15377 * C3664 + C15374 * C3670 + C15376 * C1617 + C15373 * C1624 +
             C15375 * C317 + C15372 * C330) *
                C50796 +
            (C15377 * C3661 + C15374 * C3665 + C15376 * C1612 + C15373 * C1618 +
             C15375 * C300 + C15372 * C316) *
                C2344 +
            (C15960 + C15959 + C15958) * C50926 +
            (C15957 + C15956 + C15955) * C2343) *
               C50623 * C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C10762 +
             (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
             C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
             C3515 * C10760) *
                C50623 * C50917 -
            (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
             C3244 * C10758 + C3245 * C10763 +
             (C117 * C499 + C50810 * C516) * C10757 +
             (C117 * C486 + C50810 * C500) * C10762) *
                C50623 * C50749) *
               C50916 +
           ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
             C9806 * C10764 + C9807 * C10759 +
             (C117 * C9794 + C50810 * C9798) * C10765 +
             (C117 * C9797 + C50810 * C9800) * C10760) *
                C50623 * C50749 -
            (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
             C2544 * C10758 + C2545 * C10763 + C2543 * C10757 +
             C2542 * C10762) *
                C50623 * C50917) *
               C50721) *
              C292 +
          (((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
             C3246 * C10764 + C3247 * C10759 + C8886 * C10765 +
             C8887 * C10760) *
                C50623 * C50749 -
            (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
             C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
                C50623 * C50917) *
               C50916 +
           ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
             C2546 * C10764 + C2547 * C10759 + C8212 * C10765 +
             C8213 * C10760) *
                C50623 * C50917 -
            ((C117 * C9795 + C50810 * C9799) * C10760 +
             (C117 * C9793 + C50810 * C9796) * C10765 + C8887 * C10759 +
             C8886 * C10764 + C3247 * C10758 + C3246 * C10763 + C966 * C10757 +
             C965 * C10762) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C2343 +
              (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
              C2543 * C50796) *
                 C2340 +
             (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                C50917 -
            (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
             (C3244 * C50796 + C3245 * C2344 +
              (C117 * C499 + C50810 * C516) * C50926 +
              (C117 * C486 + C50810 * C500) * C2343) *
                 C2340) *
                C50749) *
               C50916 +
           (((C3245 * C2343 + C3244 * C50926 +
              (C117 * C1614 + C50810 * C1622) * C2344 +
              (C117 * C1621 + C50810 * C1626) * C50796) *
                 C2340 +
             (C3232 + C3233 + C3250 + C3251) * C2341 +
             (C3238 + C3239 + C3252 + C3253) * C2342) *
                C50749 -
            (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
             (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                 C2340) *
                C50917) *
               C50721) *
              C292 +
          ((((C2707 + C2706 + C2705 + C2704) * C2340 +
             (C2703 + C2702 + C2701 + C2700) * C2341 +
             (C3028 + C3029 + C3030 + C3031) * C2342) *
                C50749 -
            (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
             (C2349 + C2348 + C2347 + C2346) * C2340) *
                C50917) *
               C50916 +
           (((C2525 + C2524 + C2523 + C2522) * C2340 +
             (C2521 + C2520 + C2519 + C2518) * C2341 +
             (C2875 + C2876 + C2877 + C2878) * C2342) *
                C50917 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C2344 + C970 * C50926 +
              C969 * C2343) *
                 C2342 +
             (C3253 + C3252 + C3239 + C3238) * C2341 +
             (C3251 + C3250 + C3233 + C3232) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C2343 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50926 +
             (C18369 + C18370 + C18371) * C2344 +
             (C18372 + C18373 + C18374) * C50796) *
                C50623 * C50917 -
            ((C19025 + C19026 + C19027) * C50796 +
             (C19028 + C19029 + C19030) * C2344 +
             (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
              C15375 * C499 + C15372 * C516) *
                 C50926 +
             (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
              C15375 * C486 + C15372 * C500) *
                 C2343) *
                C50623 * C50749) *
               C50916 +
           (((C19030 + C19029 + C19028) * C2343 +
             (C19027 + C19026 + C19025) * C50926 +
             (C15375 * C1614 + C15372 * C1622 + C15376 * C3663 +
              C15373 * C3669 + C15377 * C10198 + C15374 * C10202) *
                 C2344 +
             (C15375 * C1621 + C15372 * C1626 + C15376 * C3668 +
              C15373 * C3672 + C15377 * C10201 + C15374 * C10204) *
                 C50796) *
                C50623 * C50749 -
            ((C18375 + C18376 + C18377) * C50796 +
             (C18378 + C18379 + C18380) * C2344 +
             (C18374 + C18373 + C18372) * C50926 +
             (C18371 + C18370 + C18369) * C2343) *
                C50623 * C50917) *
               C50721) *
              C292 +
          ((((C15790 + C15789 + C15788) * C2343 +
             (C15787 + C15786 + C15785) * C50926 +
             (C16331 + C16332 + C16333) * C2344 +
             (C16334 + C16335 + C16336) * C50796) *
                C50623 * C50749 -
            ((C15603 + C15604 + C15605) * C50796 +
             (C15606 + C15607 + C15608) * C2344 +
             (C15420 + C15419 + C15418) * C50926 +
             (C15417 + C15416 + C15415) * C2343) *
                C50623 * C50917) *
               C50916 +
           (((C15608 + C15607 + C15606) * C2343 +
             (C15605 + C15604 + C15603) * C50926 +
             (C15609 + C15610 + C15611) * C2344 +
             (C15612 + C15613 + C15614) * C50796) *
                C50623 * C50917 -
            ((C15377 * C10199 + C15374 * C10203 + C15376 * C3666 +
              C15373 * C3671 + C15375 * C1619 + C15372 * C1625) *
                 C50796 +
             (C15377 * C10197 + C15374 * C10200 + C15376 * C3662 +
              C15373 * C3667 + C15375 * C1613 + C15372 * C1620) *
                 C2344 +
             (C16336 + C16335 + C16334) * C50926 +
             (C16333 + C16332 + C16331) * C2343) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50810 * C126) * C2343 +
                (C117 * C127 + C50810 * C140) * C50926 +
                (C117 * C297 + C50810 * C311) * C2344 +
                (C117 * C310 + C50810 * C327) * C50796) *
                   C2340 +
               (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                  C50685 * C50669 * C113 -
              (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
               (C2349 + C2348 + C2347 + C2346) * C2340) *
                  C50685 * C50669 * C114 +
              (C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
               (C2358 + C2359 + C2360 + C2361) * C2342) *
                  C50685 * C50669 * C115 -
              (((C117 * C675 + C50810 * C677) * C50796 +
                (C117 * C674 + C50810 * C676) * C2344 + C177 * C50926 +
                C176 * C2343) *
                   C2342 +
               (C2361 + C2360 + C2359 + C2358) * C2341 + C2367 * C2340) *
                  C50685 * C50669 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C2343 +
                 (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
                 C2543 * C50796) *
                    C2340 +
                (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                   C50685 * C289 -
               ((C2518 + C2519 + C2520 + C2521) * C2342 +
                (C2522 + C2523 + C2524 + C2525) * C2341 +
                (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 +
                 C2542 * C2343) *
                    C2340) *
                   C50685 * C290 +
               ((C2545 * C2343 + C2544 * C50926 +
                 (C117 * C1153 + C50810 * C1161) * C2344 +
                 (C117 * C1160 + C50810 * C1165) * C50796) *
                    C2340 +
                (C2530 + C2531 + C2550 + C2551) * C2341 +
                (C2536 + C2537 + C2552 + C2553) * C2342) *
                   C50685 * C291) *
                  C292 +
              (((C2525 + C2524 + C2523 + C2522) * C2340 +
                (C2521 + C2520 + C2519 + C2518) * C2341 +
                (C360 * C2343 + C359 * C50926 + C369 * C2344 + C370 * C50796) *
                    C2342) *
                   C50685 * C290 -
               (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
                (C2349 + C2348 + C2347 + C2346) * C2340) *
                   C50685 * C289 -
               (((C117 * C1154 + C50810 * C1162) * C50796 +
                 (C117 * C1150 + C50810 * C1155) * C2344 + C370 * C50926 +
                 C369 * C2343) *
                    C2342 +
                (C2553 + C2552 + C2537 + C2536) * C2341 +
                (C2551 + C2550 + C2531 + C2530) * C2340) *
                   C50685 * C291) *
                  C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C480 -
           ((C2700 + C2701 + C2702 + C2703) * C2342 +
            (C2704 + C2705 + C2706 + C2707) * C2341 +
            ((C117 * C938 + C50810 * C947) * C50796 +
             (C117 * C932 + C50810 * C937) * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 +
             (C117 * C1267 + C50810 * C1275) * C2344 +
             (C117 * C1274 + C50810 * C1279) * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C482) *
              C50669 * C292 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C549 * C2343 + C548 * C50926 + C969 * C2344 + C970 * C50796) *
                C2342) *
               C481 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C480 -
           (((C117 * C1268 + C50810 * C1276) * C50796 +
             (C117 * C1264 + C50810 * C1269) * C2344 + C559 * C50926 +
             C558 * C2343) *
                C2342 +
            (C2727 + C2726 + C2715 + C2714) * C2341 +
            (C2725 + C2724 + C2709 + C2708) * C2340) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C50669 * C113 -
          (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
           C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
              C50623 * C50685 * C50669 * C114 +
          (C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
           C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
              C50623 * C50685 * C50669 * C115 -
          ((C117 * C1154 + C50810 * C1162) * C10760 +
           (C117 * C1150 + C50810 * C1155) * C10765 + C370 * C10759 +
           C369 * C10764 + C359 * C10758 + C360 * C10763 + C173 * C10757 +
           C172 * C10762) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C289 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C290 +
           (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 +
            (C117 * C9134 + C50810 * C9138) * C10765 +
            (C117 * C9137 + C50810 * C9140) * C10760) *
               C50623 * C50685 * C291) *
              C292 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C290 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C289 -
           ((C117 * C9135 + C50810 * C9139) * C10760 +
            (C117 * C9133 + C50810 * C9136) * C10765 + C8213 * C10759 +
            C8212 * C10764 + C2547 * C10758 + C2546 * C10763 + C366 * C10757 +
            C365 * C10762) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C480 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C481 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 +
            (C117 * C9294 + C50810 * C9298) * C10765 +
            (C117 * C9297 + C50810 * C9300) * C10760) *
               C50623 * C482) *
              C50669 * C292 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C481 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C480 -
           ((C117 * C9295 + C50810 * C9299) * C10760 +
            (C117 * C9293 + C50810 * C9296) * C10765 + C8377 * C10759 +
            C8376 * C10764 + C2721 * C10758 + C2720 * C10763 + C555 * C10757 +
            C554 * C10762) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
            C15377 * C487 + C15374 * C501) *
               C2343 +
           (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
            C15377 * C502 + C15374 * C517) *
               C50926 +
           (C15375 * C297 + C15372 * C311 + C15376 * C932 + C15373 * C937 +
            C15377 * C1267 + C15374 * C1275) *
               C2344 +
           (C15375 * C310 + C15372 * C327 + C15376 * C938 + C15373 * C947 +
            C15377 * C1274 + C15374 * C1279) *
               C50796) *
              C50623 * C50685 * C50669 * C113 -
          ((C15603 + C15604 + C15605) * C50796 +
           (C15606 + C15607 + C15608) * C2344 +
           (C15420 + C15419 + C15418) * C50926 +
           (C15417 + C15416 + C15415) * C2343) *
              C50623 * C50685 * C50669 * C114 +
          ((C15426 + C15425 + C15424) * C2343 +
           (C15423 + C15422 + C15421) * C50926 +
           (C15955 + C15956 + C15957) * C2344 +
           (C15958 + C15959 + C15960) * C50796) *
              C50623 * C50685 * C50669 * C115 -
          ((C15377 * C1268 + C15374 * C1276 + C15376 * C944 + C15373 * C950 +
            C15375 * C304 + C15372 * C324) *
               C50796 +
           (C15377 * C1264 + C15374 * C1269 + C15376 * C935 + C15373 * C943 +
            C15375 * C294 + C15372 * C305) *
               C2344 +
           (C15432 + C15431 + C15430) * C50926 +
           (C15429 + C15428 + C15427) * C2343) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50685 * C289 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50685 * C290 +
           ((C18380 + C18379 + C18378) * C2343 +
            (C18377 + C18376 + C18375) * C50926 +
            (C15375 * C1153 + C15372 * C1161 + C15376 * C4167 + C15373 * C4173 +
             C15377 * C9294 + C15374 * C9298) *
                C2344 +
            (C15375 * C1160 + C15372 * C1165 + C15376 * C4172 + C15373 * C4176 +
             C15377 * C9297 + C15374 * C9300) *
                C50796) *
               C50623 * C50685 * C291) *
              C292 +
          (((C15608 + C15607 + C15606) * C2343 +
            (C15605 + C15604 + C15603) * C50926 +
            (C15609 + C15610 + C15611) * C2344 +
            (C15612 + C15613 + C15614) * C50796) *
               C50623 * C50685 * C290 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50685 * C289 -
           ((C15377 * C9295 + C15374 * C9299 + C15376 * C4170 + C15373 * C4175 +
             C15375 * C1158 + C15372 * C1164) *
                C50796 +
            (C15377 * C9293 + C15374 * C9296 + C15376 * C4166 + C15373 * C4171 +
             C15375 * C1152 + C15372 * C1159) *
                C2344 +
            (C15614 + C15613 + C15612) * C50926 +
            (C15611 + C15610 + C15609) * C2343) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C480 -
           ((C15377 * C4580 + C15374 * C4584 + C15376 * C1274 + C15373 * C1279 +
             C15375 * C938 + C15372 * C947) *
                C50796 +
            (C15377 * C4575 + C15374 * C4581 + C15376 * C1267 + C15373 * C1275 +
             C15375 * C932 + C15372 * C937) *
                C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C481 +
           ((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
             C15377 * C7431 + C15374 * C7437) *
                C2343 +
            (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
             C15377 * C7436 + C15374 * C7440) *
                C50926 +
            (C15375 * C1267 + C15372 * C1275 + C15376 * C4575 + C15373 * C4581 +
             C15377 * C14781 + C15374 * C14785) *
                C2344 +
            (C15375 * C1274 + C15372 * C1279 + C15376 * C4580 + C15373 * C4584 +
             C15377 * C14784 + C15374 * C14787) *
                C50796) *
               C50623 * C482) *
              C50669 * C292 +
          (((C15790 + C15789 + C15788) * C2343 +
            (C15787 + C15786 + C15785) * C50926 +
            (C16331 + C16332 + C16333) * C2344 +
            (C16334 + C16335 + C16336) * C50796) *
               C50623 * C481 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C480 -
           ((C15377 * C16727 + C15374 * C16729 + C15376 * C4578 +
             C15373 * C4583 + C15375 * C1272 + C15372 * C1278) *
                C50796 +
            (C15377 * C16726 + C15374 * C16728 + C15376 * C4574 +
             C15373 * C4579 + C15375 * C1266 + C15372 * C1273) *
                C2344 +
            (C15796 + C15795 + C15794) * C50926 +
            (C15793 + C15792 + C15791) * C2343) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50917 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50669 * C50958 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50749 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50917) *
              C50669 * C50959 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50917 -
           ((C117 * C4168 + C50810 * C4174) * C10760 +
            (C117 * C4165 + C50810 * C4169) * C10765 + C3249 * C10759 +
            C3248 * C10764 + C968 * C10758 + C967 * C10763 + C550 * C10757 +
            C551 * C10762) *
               C50623 * C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50917 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            ((C117 * C938 + C50810 * C947) * C50796 +
             (C117 * C932 + C50810 * C937) * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50669 * C50958 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50749 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50917) *
              C50669 * C50959 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50917 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C2344 + C800 * C50926 +
             C799 * C2343) *
                C2342 +
            (C3031 + C3030 + C3029 + C3028) * C2341 + C3033 * C2340) *
               C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50917 -
           ((C15377 * C4580 + C15374 * C4584 + C15376 * C1274 + C15373 * C1279 +
             C15375 * C938 + C15372 * C947) *
                C50796 +
            (C15377 * C4575 + C15374 * C4581 + C15376 * C1267 + C15373 * C1275 +
             C15375 * C932 + C15372 * C937) *
                C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50749) *
              C50669 * C50958 +
          (((C15790 + C15789 + C15788) * C2343 +
            (C15787 + C15786 + C15785) * C50926 +
            (C16331 + C16332 + C16333) * C2344 +
            (C16334 + C16335 + C16336) * C50796) *
               C50623 * C50749 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50917) *
              C50669 * C50959 +
          (((C15426 + C15425 + C15424) * C2343 +
            (C15423 + C15422 + C15421) * C50926 +
            (C15955 + C15956 + C15957) * C2344 +
            (C15958 + C15959 + C15960) * C50796) *
               C50623 * C50917 -
           ((C15377 * C4576 + C15374 * C4582 + C15376 * C1270 + C15373 * C1277 +
             C15375 * C942 + C15372 * C949) *
                C50796 +
            (C15377 * C4573 + C15374 * C4577 + C15376 * C1265 + C15373 * C1271 +
             C15375 * C934 + C15372 * C941) *
                C2344 +
            (C16124 + C16123 + C16122) * C50926 +
            (C16121 + C16120 + C16119) * C2343) *
               C50623 * C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C289 -
           ((C2518 + C2519 + C2520 + C2521) * C2342 +
            (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C290 +
           ((C2545 * C2343 + C2544 * C50926 +
             (C117 * C1153 + C50810 * C1161) * C2344 +
             (C117 * C1160 + C50810 * C1165) * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50685 * C291) *
              C292 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C360 * C2343 + C359 * C50926 + C369 * C2344 + C370 * C50796) *
                C2342) *
               C50685 * C290 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C289 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C2344 + C370 * C50926 +
             C369 * C2343) *
                C2342 +
            (C2553 + C2552 + C2537 + C2536) * C2341 +
            (C2551 + C2550 + C2531 + C2530) * C2340) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 +
            (C117 * C297 + C50810 * C311) * C2344 +
            (C117 * C310 + C50810 * C327) * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C50685 * C50669 * C113 -
          (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
           (C2349 + C2348 + C2347 + C2346) * C2340) *
              C50685 * C50669 * C114 +
          (C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
           (C2358 + C2359 + C2360 + C2361) * C2342) *
              C50685 * C50669 * C115 -
          (((C117 * C675 + C50810 * C677) * C50796 +
            (C117 * C674 + C50810 * C676) * C2344 + C177 * C50926 +
            C176 * C2343) *
               C2342 +
           (C2361 + C2360 + C2359 + C2358) * C2341 + C2367 * C2340) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C50669 * C113 -
          (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
           C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
              C50623 * C50685 * C50669 * C114 +
          (C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
           C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
              C50623 * C50685 * C50669 * C115 -
          ((C117 * C1154 + C50810 * C1162) * C10760 +
           (C117 * C1150 + C50810 * C1155) * C10765 + C370 * C10759 +
           C369 * C10764 + C359 * C10758 + C360 * C10763 + C173 * C10757 +
           C172 * C10762) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C289 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C290 +
           (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 +
            (C117 * C9134 + C50810 * C9138) * C10765 +
            (C117 * C9137 + C50810 * C9140) * C10760) *
               C50623 * C50685 * C291) *
              C292 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C290 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C289 -
           ((C117 * C9135 + C50810 * C9139) * C10760 +
            (C117 * C9133 + C50810 * C9136) * C10765 + C8213 * C10759 +
            C8212 * C10764 + C2547 * C10758 + C2546 * C10763 + C366 * C10757 +
            C365 * C10762) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
            C15377 * C487 + C15374 * C501) *
               C2343 +
           (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
            C15377 * C502 + C15374 * C517) *
               C50926 +
           (C15375 * C297 + C15372 * C311 + C15376 * C932 + C15373 * C937 +
            C15377 * C1267 + C15374 * C1275) *
               C2344 +
           (C15375 * C310 + C15372 * C327 + C15376 * C938 + C15373 * C947 +
            C15377 * C1274 + C15374 * C1279) *
               C50796) *
              C50623 * C50685 * C50669 * C113 -
          ((C15603 + C15604 + C15605) * C50796 +
           (C15606 + C15607 + C15608) * C2344 +
           (C15420 + C15419 + C15418) * C50926 +
           (C15417 + C15416 + C15415) * C2343) *
              C50623 * C50685 * C50669 * C114 +
          ((C15426 + C15425 + C15424) * C2343 +
           (C15423 + C15422 + C15421) * C50926 +
           (C15955 + C15956 + C15957) * C2344 +
           (C15958 + C15959 + C15960) * C50796) *
              C50623 * C50685 * C50669 * C115 -
          ((C15377 * C1268 + C15374 * C1276 + C15376 * C944 + C15373 * C950 +
            C15375 * C304 + C15372 * C324) *
               C50796 +
           (C15377 * C1264 + C15374 * C1269 + C15376 * C935 + C15373 * C943 +
            C15375 * C294 + C15372 * C305) *
               C2344 +
           (C15432 + C15431 + C15430) * C50926 +
           (C15429 + C15428 + C15427) * C2343) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50685 * C289 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50685 * C290 +
           ((C18380 + C18379 + C18378) * C2343 +
            (C18377 + C18376 + C18375) * C50926 +
            (C15375 * C1153 + C15372 * C1161 + C15376 * C4167 + C15373 * C4173 +
             C15377 * C9294 + C15374 * C9298) *
                C2344 +
            (C15375 * C1160 + C15372 * C1165 + C15376 * C4172 + C15373 * C4176 +
             C15377 * C9297 + C15374 * C9300) *
                C50796) *
               C50623 * C50685 * C291) *
              C292 +
          (((C15608 + C15607 + C15606) * C2343 +
            (C15605 + C15604 + C15603) * C50926 +
            (C15609 + C15610 + C15611) * C2344 +
            (C15612 + C15613 + C15614) * C50796) *
               C50623 * C50685 * C290 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50685 * C289 -
           ((C15377 * C9295 + C15374 * C9299 + C15376 * C4170 + C15373 * C4175 +
             C15375 * C1158 + C15372 * C1164) *
                C50796 +
            (C15377 * C9293 + C15374 * C9296 + C15376 * C4166 + C15373 * C4171 +
             C15375 * C1152 + C15372 * C1159) *
                C2344 +
            (C15614 + C15613 + C15612) * C50926 +
            (C15611 + C15610 + C15609) * C2343) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C50960 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50961 +
           (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C50685 * C1380) *
              C50908 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50961 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C50960 -
           ((C117 * C9135 + C50810 * C9139) * C10760 +
            (C117 * C9133 + C50810 * C9136) * C10765 + C8213 * C10759 +
            C8212 * C10764 + C2547 * C10758 + C2546 * C10763 + C366 * C10757 +
            C365 * C10762) *
               C50623 * C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C50960 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50961 +
           ((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50685 * C1380) *
              C50908 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50961 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C50960 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C2344 + C370 * C50926 +
             C369 * C2343) *
                C2342 +
            (C2553 + C2552 + C2537 + C2536) * C2341 +
            (C2551 + C2550 + C2531 + C2530) * C2340) *
               C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50685 * C50960 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50685 * C50961 +
           ((C18380 + C18379 + C18378) * C2343 +
            (C18377 + C18376 + C18375) * C50926 +
            (C19287 + C19288 + C19289) * C2344 +
            (C19290 + C19291 + C19292) * C50796) *
               C50623 * C50685 * C1380) *
              C50908 +
          (((C15608 + C15607 + C15606) * C2343 +
            (C15605 + C15604 + C15603) * C50926 +
            (C15609 + C15610 + C15611) * C2344 +
            (C15612 + C15613 + C15614) * C50796) *
               C50623 * C50685 * C50961 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50685 * C50960 -
           ((C15377 * C9295 + C15374 * C9299 + C15376 * C4170 + C15373 * C4175 +
             C15375 * C1158 + C15372 * C1164) *
                C50796 +
            (C15377 * C9293 + C15374 * C9296 + C15376 * C4166 + C15373 * C4171 +
             C15375 * C1152 + C15372 * C1159) *
                C2344 +
            (C15614 + C15613 + C15612) * C50926 +
            (C15611 + C15610 + C15609) * C2343) *
               C50623 * C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50917 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50960 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50749 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50917) *
              C50961 +
          ((C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C50917 -
           ((C117 * C11897 + C50810 * C11899) * C10760 +
            (C117 * C11896 + C50810 * C11898) * C10765 + C11906 * C10759 +
            C11905 * C10764 + C9807 * C10758 + C9806 * C10763 + C4183 * C10757 +
            C4182 * C10762) *
               C50623 * C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50917 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50960 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50749 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50917) *
              C50961 +
          (((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50917 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C2344 + C3249 * C50926 +
             C3248 * C2343) *
                C2342 +
            ((C117 * C4170 + C50810 * C4175) * C50796 +
             (C117 * C4166 + C50810 * C4171) * C2344 + C3247 * C50926 +
             C3246 * C2343) *
                C2341 +
            ((C117 * C4172 + C50810 * C4176) * C50796 +
             (C117 * C4167 + C50810 * C4173) * C2344 + C4183 * C50926 +
             C4182 * C2343) *
                C2340) *
               C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50917 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50749) *
              C50960 +
          (((C19030 + C19029 + C19028) * C2343 +
            (C19027 + C19026 + C19025) * C50926 +
            (C19955 + C19956 + C19957) * C2344 +
            (C19958 + C19959 + C19960) * C50796) *
               C50623 * C50749 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50917) *
              C50961 +
          (((C18380 + C18379 + C18378) * C2343 +
            (C18377 + C18376 + C18375) * C50926 +
            (C19287 + C19288 + C19289) * C2344 +
            (C19290 + C19291 + C19292) * C50796) *
               C50623 * C50917 -
           ((C15377 * C12169 + C15374 * C12171 + C15376 * C9297 +
             C15373 * C9300 + C15375 * C4172 + C15372 * C4176) *
                C50796 +
            (C15377 * C12168 + C15374 * C12170 + C15376 * C9294 +
             C15373 * C9298 + C15375 * C4167 + C15372 * C4173) *
                C2344 +
            (C19960 + C19959 + C19958) * C50926 +
            (C19957 + C19956 + C19955) * C2343) *
               C50623 * C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C2343 +
                 (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
                 C2543 * C50796) *
                    C2340 +
                (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                   C50685 * C1074 -
               (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
                (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 +
                 C2542 * C2343) *
                    C2340) *
                   C50685 * C50721) *
                  C1076 +
              (((C2525 + C2524 + C2523 + C2522) * C2340 +
                (C2521 + C2520 + C2519 + C2518) * C2341 +
                (C2875 + C2876 + C2877 + C2878) * C2342) *
                   C50685 * C50721 -
               (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
                (C2349 + C2348 + C2347 + C2346) * C2340) *
                   C50685 * C1074) *
                  C1077 +
              ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
                (C2358 + C2359 + C2360 + C2361) * C2342) *
                   C50685 * C1074 -
               (((C117 * C322 + C50810 * C333) * C50796 +
                 (C117 * C303 + C50810 * C323) * C2344 + C686 * C50926 +
                 C685 * C2343) *
                    C2342 +
                (C2878 + C2877 + C2876 + C2875) * C2341 + C2880 * C2340) *
                   C50685 * C50721) *
                  C1078) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50810 * C126) * C2343 +
                (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
                C2543 * C50796) *
                   C2340 +
               (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                  C50685 * C1145 -
              (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
               (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 +
                C2542 * C2343) *
                   C2340) *
                  C50685 * C1146 +
              ((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 +
                C3515 * C50796) *
                   C2340 +
               (C2530 + C2531 + C2550 + C2551) * C2341 +
               (C2536 + C2537 + C2552 + C2553) * C2342) *
                  C50685 * C1147 -
              (((C117 * C3500 + C50810 * C3506) * C50796 +
                (C117 * C3497 + C50810 * C3501) * C2344 + C2549 * C50926 +
                C2548 * C2343) *
                   C2342 +
               ((C117 * C3502 + C50810 * C3507) * C50796 +
                (C117 * C3498 + C50810 * C3503) * C2344 + C2547 * C50926 +
                C2546 * C2343) *
                   C2341 +
               ((C117 * C3504 + C50810 * C3508) * C50796 +
                (C117 * C3499 + C50810 * C3505) * C2344 + C3515 * C50926 +
                C3514 * C2343) *
                   C2340) *
                  C50685 * C1148) *
             C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C480 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
             C3679 * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C482) *
              C1074 +
          (((C3245 * C2343 + C3244 * C50926 +
             (C117 * C1614 + C50810 * C1622) * C2344 +
             (C117 * C1621 + C50810 * C1626) * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C481 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C480 -
           (((C117 * C3664 + C50810 * C3670) * C50796 +
             (C117 * C3661 + C50810 * C3665) * C2344 + C2723 * C50926 +
             C2722 * C2343) *
                C2342 +
            ((C117 * C3666 + C50810 * C3671) * C50796 +
             (C117 * C3662 + C50810 * C3667) * C2344 + C2721 * C50926 +
             C2720 * C2343) *
                C2341 +
            ((C117 * C3668 + C50810 * C3672) * C50796 +
             (C117 * C3663 + C50810 * C3669) * C2344 + C3679 * C50926 +
             C3678 * C2343) *
                C2340) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C1074 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50721) *
              C1076 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50721 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50685 * C1074 -
           ((C117 * C3500 + C50810 * C3506) * C10760 +
            (C117 * C3497 + C50810 * C3501) * C10765 + C2549 * C10759 +
            C2548 * C10764 + C368 * C10758 + C367 * C10763 + C361 * C10757 +
            C362 * C10762) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C1145 -
          (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
           C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
              C50623 * C50685 * C1146 +
          (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
           C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
           C11462 * C10760) *
              C50623 * C50685 * C1147 -
          ((C117 * C11453 + C50810 * C11455) * C10760 +
           (C117 * C11452 + C50810 * C11454) * C10765 + C11462 * C10759 +
           C11461 * C10764 + C9147 * C10758 + C9146 * C10763 + C3515 * C10757 +
           C3514 * C10762) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C480 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C481 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
            C11570 * C10760) *
               C50623 * C482) *
              C1074 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 +
            (C117 * C9794 + C50810 * C9798) * C10765 +
            (C117 * C9797 + C50810 * C9800) * C10760) *
               C50623 * C481 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C480 -
           ((C117 * C11561 + C50810 * C11563) * C10760 +
            (C117 * C11560 + C50810 * C11562) * C10765 + C11570 * C10759 +
            C11569 * C10764 + C9307 * C10758 + C9306 * C10763 + C3679 * C10757 +
            C3678 * C10762) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50685 * C1074 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C15608 + C15607 + C15606) * C2343 +
            (C15605 + C15604 + C15603) * C50926 +
            (C15609 + C15610 + C15611) * C2344 +
            (C15612 + C15613 + C15614) * C50796) *
               C50623 * C50685 * C50721 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50685 * C1074) *
              C1077 +
          (((C15426 + C15425 + C15424) * C2343 +
            (C15423 + C15422 + C15421) * C50926 +
            (C15955 + C15956 + C15957) * C2344 +
            (C15958 + C15959 + C15960) * C50796) *
               C50623 * C50685 * C1074 -
           ((C15377 * C3664 + C15374 * C3670 + C15376 * C1617 + C15373 * C1624 +
             C15375 * C317 + C15372 * C330) *
                C50796 +
            (C15377 * C3661 + C15374 * C3665 + C15376 * C1612 + C15373 * C1618 +
             C15375 * C300 + C15372 * C316) *
                C2344 +
            (C15960 + C15959 + C15958) * C50926 +
            (C15957 + C15956 + C15955) * C2343) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
            C15377 * C487 + C15374 * C501) *
               C2343 +
           (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
            C15377 * C502 + C15374 * C517) *
               C50926 +
           (C18369 + C18370 + C18371) * C2344 +
           (C18372 + C18373 + C18374) * C50796) *
              C50623 * C50685 * C1145 -
          ((C18375 + C18376 + C18377) * C50796 +
           (C18378 + C18379 + C18380) * C2344 +
           (C18374 + C18373 + C18372) * C50926 +
           (C18371 + C18370 + C18369) * C2343) *
              C50623 * C50685 * C1146 +
          ((C18380 + C18379 + C18378) * C2343 +
           (C18377 + C18376 + C18375) * C50926 +
           (C19287 + C19288 + C19289) * C2344 +
           (C19290 + C19291 + C19292) * C50796) *
              C50623 * C50685 * C1147 -
          ((C15377 * C11561 + C15374 * C11563 + C15376 * C9797 +
            C15373 * C9800 + C15375 * C3504 + C15372 * C3508) *
               C50796 +
           (C15377 * C11560 + C15374 * C11562 + C15376 * C9794 +
            C15373 * C9798 + C15375 * C3499 + C15372 * C3505) *
               C2344 +
           (C19292 + C19291 + C19290) * C50926 +
           (C19289 + C19288 + C19287) * C2343) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C480 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C481 +
           ((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
             C15377 * C7431 + C15374 * C7437) *
                C2343 +
            (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
             C15377 * C7436 + C15374 * C7440) *
                C50926 +
            (C19451 + C19452 + C19453) * C2344 +
            (C19454 + C19455 + C19456) * C50796) *
               C50623 * C482) *
              C1074 +
          (((C19030 + C19029 + C19028) * C2343 +
            (C19027 + C19026 + C19025) * C50926 +
            (C15375 * C1614 + C15372 * C1622 + C15376 * C3663 + C15373 * C3669 +
             C15377 * C10198 + C15374 * C10202) *
                C2344 +
            (C15375 * C1621 + C15372 * C1626 + C15376 * C3668 + C15373 * C3672 +
             C15377 * C10201 + C15374 * C10204) *
                C50796) *
               C50623 * C481 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C480 -
           ((C15377 * C14782 + C15374 * C14786 + C15376 * C10201 +
             C15373 * C10204 + C15375 * C3668 + C15372 * C3672) *
                C50796 +
            (C15377 * C14780 + C15374 * C14783 + C15376 * C10198 +
             C15373 * C10202 + C15375 * C3663 + C15372 * C3669) *
                C2344 +
            (C19456 + C19455 + C19454) * C50926 +
            (C19453 + C19452 + C19451) * C2343) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C10762 +
             (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
             C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
             C3515 * C10760) *
                C50623 * C50917 -
            (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
             C3244 * C10758 + C3245 * C10763 +
             (C117 * C499 + C50810 * C516) * C10757 +
             (C117 * C486 + C50810 * C500) * C10762) *
                C50623 * C50749) *
               C1074 +
           ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
             C9806 * C10764 + C9807 * C10759 +
             (C117 * C9794 + C50810 * C9798) * C10765 +
             (C117 * C9797 + C50810 * C9800) * C10760) *
                C50623 * C50749 -
            (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
             C2544 * C10758 + C2545 * C10763 + C2543 * C10757 +
             C2542 * C10762) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          (((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
             C3246 * C10764 + C3247 * C10759 + C8886 * C10765 +
             C8887 * C10760) *
                C50623 * C50749 -
            (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
             C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
                C50623 * C50917) *
               C1074 +
           ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
             C2546 * C10764 + C2547 * C10759 + C8212 * C10765 +
             C8213 * C10760) *
                C50623 * C50917 -
            ((C117 * C9795 + C50810 * C9799) * C10760 +
             (C117 * C9793 + C50810 * C9796) * C10765 + C8887 * C10759 +
             C8886 * C10764 + C3247 * C10758 + C3246 * C10763 + C966 * C10757 +
             C965 * C10762) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C2343 +
              (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
              C2543 * C50796) *
                 C2340 +
             (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                C50917 -
            (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
             (C3244 * C50796 + C3245 * C2344 +
              (C117 * C499 + C50810 * C516) * C50926 +
              (C117 * C486 + C50810 * C500) * C2343) *
                 C2340) *
                C50749) *
               C1074 +
           (((C3245 * C2343 + C3244 * C50926 +
              (C117 * C1614 + C50810 * C1622) * C2344 +
              (C117 * C1621 + C50810 * C1626) * C50796) *
                 C2340 +
             (C3232 + C3233 + C3250 + C3251) * C2341 +
             (C3238 + C3239 + C3252 + C3253) * C2342) *
                C50749 -
            (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
             (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                 C2340) *
                C50917) *
               C50721) *
              C50908 +
          ((((C2707 + C2706 + C2705 + C2704) * C2340 +
             (C2703 + C2702 + C2701 + C2700) * C2341 +
             (C3028 + C3029 + C3030 + C3031) * C2342) *
                C50749 -
            (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
             (C2349 + C2348 + C2347 + C2346) * C2340) *
                C50917) *
               C1074 +
           (((C2525 + C2524 + C2523 + C2522) * C2340 +
             (C2521 + C2520 + C2519 + C2518) * C2341 +
             (C2875 + C2876 + C2877 + C2878) * C2342) *
                C50917 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C2344 + C970 * C50926 +
              C969 * C2343) *
                 C2342 +
             (C3253 + C3252 + C3239 + C3238) * C2341 +
             (C3251 + C3250 + C3233 + C3232) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C2343 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50926 +
             (C18369 + C18370 + C18371) * C2344 +
             (C18372 + C18373 + C18374) * C50796) *
                C50623 * C50917 -
            ((C19025 + C19026 + C19027) * C50796 +
             (C19028 + C19029 + C19030) * C2344 +
             (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
              C15375 * C499 + C15372 * C516) *
                 C50926 +
             (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
              C15375 * C486 + C15372 * C500) *
                 C2343) *
                C50623 * C50749) *
               C1074 +
           (((C19030 + C19029 + C19028) * C2343 +
             (C19027 + C19026 + C19025) * C50926 +
             (C15375 * C1614 + C15372 * C1622 + C15376 * C3663 +
              C15373 * C3669 + C15377 * C10198 + C15374 * C10202) *
                 C2344 +
             (C15375 * C1621 + C15372 * C1626 + C15376 * C3668 +
              C15373 * C3672 + C15377 * C10201 + C15374 * C10204) *
                 C50796) *
                C50623 * C50749 -
            ((C18375 + C18376 + C18377) * C50796 +
             (C18378 + C18379 + C18380) * C2344 +
             (C18374 + C18373 + C18372) * C50926 +
             (C18371 + C18370 + C18369) * C2343) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          ((((C15790 + C15789 + C15788) * C2343 +
             (C15787 + C15786 + C15785) * C50926 +
             (C16331 + C16332 + C16333) * C2344 +
             (C16334 + C16335 + C16336) * C50796) *
                C50623 * C50749 -
            ((C15603 + C15604 + C15605) * C50796 +
             (C15606 + C15607 + C15608) * C2344 +
             (C15420 + C15419 + C15418) * C50926 +
             (C15417 + C15416 + C15415) * C2343) *
                C50623 * C50917) *
               C1074 +
           (((C15608 + C15607 + C15606) * C2343 +
             (C15605 + C15604 + C15603) * C50926 +
             (C15609 + C15610 + C15611) * C2344 +
             (C15612 + C15613 + C15614) * C50796) *
                C50623 * C50917 -
            ((C15377 * C10199 + C15374 * C10203 + C15376 * C3666 +
              C15373 * C3671 + C15375 * C1619 + C15372 * C1625) *
                 C50796 +
             (C15377 * C10197 + C15374 * C10200 + C15376 * C3662 +
              C15373 * C3667 + C15375 * C1613 + C15372 * C1620) *
                 C2344 +
             (C16336 + C16335 + C16334) * C50926 +
             (C16333 + C16332 + C16331) * C2343) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
            C2543 * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C50685 * C1145 -
          (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
           (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
               C2340) *
              C50685 * C1146 +
          ((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
               C2340 +
           (C2530 + C2531 + C2550 + C2551) * C2341 +
           (C2536 + C2537 + C2552 + C2553) * C2342) *
              C50685 * C1147 -
          (((C117 * C3500 + C50810 * C3506) * C50796 +
            (C117 * C3497 + C50810 * C3501) * C2344 + C2549 * C50926 +
            C2548 * C2343) *
               C2342 +
           ((C117 * C3502 + C50810 * C3507) * C50796 +
            (C117 * C3498 + C50810 * C3503) * C2344 + C2547 * C50926 +
            C2546 * C2343) *
               C2341 +
           ((C117 * C3504 + C50810 * C3508) * C50796 +
            (C117 * C3499 + C50810 * C3505) * C2344 + C3515 * C50926 +
            C3514 * C2343) *
               C2340) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C1074 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50721) *
              C1076 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50721 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C1074) *
              C1077 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50685 * C1074 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C2344 + C686 * C50926 +
             C685 * C2343) *
                C2342 +
            (C2878 + C2877 + C2876 + C2875) * C2341 + C2880 * C2340) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C1074 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50721) *
              C1076 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50721 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50685 * C1074 -
           ((C117 * C3500 + C50810 * C3506) * C10760 +
            (C117 * C3497 + C50810 * C3501) * C10765 + C2549 * C10759 +
            C2548 * C10764 + C368 * C10758 + C367 * C10763 + C361 * C10757 +
            C362 * C10762) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C1145 -
          (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
           C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
              C50623 * C50685 * C1146 +
          (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
           C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
           C11462 * C10760) *
              C50623 * C50685 * C1147 -
          ((C117 * C11453 + C50810 * C11455) * C10760 +
           (C117 * C11452 + C50810 * C11454) * C10765 + C11462 * C10759 +
           C11461 * C10764 + C9147 * C10758 + C9146 * C10763 + C3515 * C10757 +
           C3514 * C10762) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50685 * C1074 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C15608 + C15607 + C15606) * C2343 +
            (C15605 + C15604 + C15603) * C50926 +
            (C15609 + C15610 + C15611) * C2344 +
            (C15612 + C15613 + C15614) * C50796) *
               C50623 * C50685 * C50721 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50685 * C1074) *
              C1077 +
          (((C15426 + C15425 + C15424) * C2343 +
            (C15423 + C15422 + C15421) * C50926 +
            (C15955 + C15956 + C15957) * C2344 +
            (C15958 + C15959 + C15960) * C50796) *
               C50623 * C50685 * C1074 -
           ((C15377 * C3664 + C15374 * C3670 + C15376 * C1617 + C15373 * C1624 +
             C15375 * C317 + C15372 * C330) *
                C50796 +
            (C15377 * C3661 + C15374 * C3665 + C15376 * C1612 + C15373 * C1618 +
             C15375 * C300 + C15372 * C316) *
                C2344 +
            (C15960 + C15959 + C15958) * C50926 +
            (C15957 + C15956 + C15955) * C2343) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
            C15377 * C487 + C15374 * C501) *
               C2343 +
           (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
            C15377 * C502 + C15374 * C517) *
               C50926 +
           (C18369 + C18370 + C18371) * C2344 +
           (C18372 + C18373 + C18374) * C50796) *
              C50623 * C50685 * C1145 -
          ((C18375 + C18376 + C18377) * C50796 +
           (C18378 + C18379 + C18380) * C2344 +
           (C18374 + C18373 + C18372) * C50926 +
           (C18371 + C18370 + C18369) * C2343) *
              C50623 * C50685 * C1146 +
          ((C18380 + C18379 + C18378) * C2343 +
           (C18377 + C18376 + C18375) * C50926 +
           (C19287 + C19288 + C19289) * C2344 +
           (C19290 + C19291 + C19292) * C50796) *
              C50623 * C50685 * C1147 -
          ((C15377 * C11561 + C15374 * C11563 + C15376 * C9797 +
            C15373 * C9800 + C15375 * C3504 + C15372 * C3508) *
               C50796 +
           (C15377 * C11560 + C15374 * C11562 + C15376 * C9794 +
            C15373 * C9798 + C15375 * C3499 + C15372 * C3505) *
               C2344 +
           (C19292 + C19291 + C19290) * C50926 +
           (C19289 + C19288 + C19287) * C2343) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C10762 +
             (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
             C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
             C3515 * C10760) *
                C50623 * C1725 -
            (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
             C3244 * C10758 + C3245 * C10763 +
             (C117 * C499 + C50810 * C516) * C10757 +
             (C117 * C486 + C50810 * C500) * C10762) *
                C50623 * C50749) *
               C50916 +
           ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
             C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
             C11906 * C10760) *
                C50623 * C50749 -
            (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
             C2544 * C10758 + C2545 * C10763 + C2543 * C10757 +
             C2542 * C10762) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          (((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
             C3246 * C10764 + C3247 * C10759 + C8886 * C10765 +
             C8887 * C10760) *
                C50623 * C50749 -
            (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
             C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
                C50623 * C1725) *
               C50916 +
           ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
             C2546 * C10764 + C2547 * C10759 + C8212 * C10765 +
             C8213 * C10760) *
                C50623 * C1725 -
            ((C117 * C9795 + C50810 * C9799) * C10760 +
             (C117 * C9793 + C50810 * C9796) * C10765 + C8887 * C10759 +
             C8886 * C10764 + C3247 * C10758 + C3246 * C10763 + C966 * C10757 +
             C965 * C10762) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C2343 +
              (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
              C2543 * C50796) *
                 C2340 +
             (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                C1725 -
            (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
             (C3244 * C50796 + C3245 * C2344 +
              (C117 * C499 + C50810 * C516) * C50926 +
              (C117 * C486 + C50810 * C500) * C2343) *
                 C2340) *
                C50749) *
               C50916 +
           (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                 C2340 +
             (C3232 + C3233 + C3250 + C3251) * C2341 +
             (C3238 + C3239 + C3252 + C3253) * C2342) *
                C50749 -
            (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
             (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                 C2340) *
                C1725) *
               C50721) *
              C50908 +
          ((((C2707 + C2706 + C2705 + C2704) * C2340 +
             (C2703 + C2702 + C2701 + C2700) * C2341 +
             (C3028 + C3029 + C3030 + C3031) * C2342) *
                C50749 -
            (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
             (C2349 + C2348 + C2347 + C2346) * C2340) *
                C1725) *
               C50916 +
           (((C2525 + C2524 + C2523 + C2522) * C2340 +
             (C2521 + C2520 + C2519 + C2518) * C2341 +
             (C2875 + C2876 + C2877 + C2878) * C2342) *
                C1725 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C2344 + C970 * C50926 +
              C969 * C2343) *
                 C2342 +
             (C3253 + C3252 + C3239 + C3238) * C2341 +
             (C3251 + C3250 + C3233 + C3232) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
              C15377 * C487 + C15374 * C501) *
                 C2343 +
             (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
              C15377 * C502 + C15374 * C517) *
                 C50926 +
             (C18369 + C18370 + C18371) * C2344 +
             (C18372 + C18373 + C18374) * C50796) *
                C50623 * C1725 -
            ((C19025 + C19026 + C19027) * C50796 +
             (C19028 + C19029 + C19030) * C2344 +
             (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
              C15375 * C499 + C15372 * C516) *
                 C50926 +
             (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
              C15375 * C486 + C15372 * C500) *
                 C2343) *
                C50623 * C50749) *
               C50916 +
           (((C19030 + C19029 + C19028) * C2343 +
             (C19027 + C19026 + C19025) * C50926 +
             (C19955 + C19956 + C19957) * C2344 +
             (C19958 + C19959 + C19960) * C50796) *
                C50623 * C50749 -
            ((C18375 + C18376 + C18377) * C50796 +
             (C18378 + C18379 + C18380) * C2344 +
             (C18374 + C18373 + C18372) * C50926 +
             (C18371 + C18370 + C18369) * C2343) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          ((((C15790 + C15789 + C15788) * C2343 +
             (C15787 + C15786 + C15785) * C50926 +
             (C16331 + C16332 + C16333) * C2344 +
             (C16334 + C16335 + C16336) * C50796) *
                C50623 * C50749 -
            ((C15603 + C15604 + C15605) * C50796 +
             (C15606 + C15607 + C15608) * C2344 +
             (C15420 + C15419 + C15418) * C50926 +
             (C15417 + C15416 + C15415) * C2343) *
                C50623 * C1725) *
               C50916 +
           (((C15608 + C15607 + C15606) * C2343 +
             (C15605 + C15604 + C15603) * C50926 +
             (C15609 + C15610 + C15611) * C2344 +
             (C15612 + C15613 + C15614) * C50796) *
                C50623 * C1725 -
            ((C15377 * C10199 + C15374 * C10203 + C15376 * C3666 +
              C15373 * C3671 + C15375 * C1619 + C15372 * C1625) *
                 C50796 +
             (C15377 * C10197 + C15374 * C10200 + C15376 * C3662 +
              C15373 * C3667 + C15375 * C1613 + C15372 * C1620) *
                 C2344 +
             (C16336 + C16335 + C16334) * C50926 +
             (C16333 + C16332 + C16331) * C2343) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50962 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50963 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
            C11570 * C10760) *
               C50623 * C2141) *
              C50916 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50963 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50962 -
           ((C117 * C11561 + C50810 * C11563) * C10760 +
            (C117 * C11560 + C50810 * C11562) * C10765 + C11570 * C10759 +
            C11569 * C10764 + C9307 * C10758 + C9306 * C10763 + C3679 * C10757 +
            C3678 * C10762) *
               C50623 * C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50962 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
             C3679 * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C2141) *
              C50916 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50963 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50962 -
           (((C117 * C3664 + C50810 * C3670) * C50796 +
             (C117 * C3661 + C50810 * C3665) * C2344 + C2723 * C50926 +
             C2722 * C2343) *
                C2342 +
            ((C117 * C3666 + C50810 * C3671) * C50796 +
             (C117 * C3662 + C50810 * C3667) * C2344 + C2721 * C50926 +
             C2720 * C2343) *
                C2341 +
            ((C117 * C3668 + C50810 * C3672) * C50796 +
             (C117 * C3663 + C50810 * C3669) * C2344 + C3679 * C50926 +
             C3678 * C2343) *
                C2340) *
               C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50962 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50963 +
           ((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
             C15377 * C7431 + C15374 * C7437) *
                C2343 +
            (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
             C15377 * C7436 + C15374 * C7440) *
                C50926 +
            (C19451 + C19452 + C19453) * C2344 +
            (C19454 + C19455 + C19456) * C50796) *
               C50623 * C2141) *
              C50916 +
          (((C19030 + C19029 + C19028) * C2343 +
            (C19027 + C19026 + C19025) * C50926 +
            (C19955 + C19956 + C19957) * C2344 +
            (C19958 + C19959 + C19960) * C50796) *
               C50623 * C50963 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C50962 -
           ((C15377 * C14782 + C15374 * C14786 + C15376 * C10201 +
             C15373 * C10204 + C15375 * C3668 + C15372 * C3672) *
                C50796 +
            (C15377 * C14780 + C15374 * C14783 + C15376 * C10198 +
             C15373 * C10202 + C15375 * C3663 + C15372 * C3669) *
                C2344 +
            (C19456 + C19455 + C19454) * C50926 +
            (C19453 + C19452 + C19451) * C2343) *
               C50623 * C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C2343 +
                 (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
                 C2543 * C50796) *
                    C2340 +
                (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                   C1725 -
               (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
                (C3244 * C50796 + C3245 * C2344 +
                 (C117 * C499 + C50810 * C516) * C50926 +
                 (C117 * C486 + C50810 * C500) * C2343) *
                    C2340) *
                   C50749) *
                  C50669 * C1076 +
              (((C2707 + C2706 + C2705 + C2704) * C2340 +
                (C2703 + C2702 + C2701 + C2700) * C2341 +
                (C3028 + C3029 + C3030 + C3031) * C2342) *
                   C50749 -
               (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
                (C2349 + C2348 + C2347 + C2346) * C2340) *
                   C1725) *
                  C50669 * C1077 +
              ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
                (C2358 + C2359 + C2360 + C2361) * C2342) *
                   C1725 -
               (((C117 * C945 + C50810 * C951) * C50796 +
                 (C117 * C936 + C50810 * C946) * C2344 + C800 * C50926 +
                 C799 * C2343) *
                    C2342 +
                (C3031 + C3030 + C3029 + C3028) * C2341 + C3033 * C2340) *
                   C50749) *
                  C50669 * C1078) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50810 * C126) * C2343 +
                 (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
                 C2543 * C50796) *
                    C2340 +
                (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                   C1725 -
               (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
                (C3244 * C50796 + C3245 * C2344 +
                 (C117 * C499 + C50810 * C516) * C50926 +
                 (C117 * C486 + C50810 * C500) * C2343) *
                    C2340) *
                   C50749) *
                  C289 +
              (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 +
                 C4183 * C50796) *
                    C2340 +
                (C3232 + C3233 + C3250 + C3251) * C2341 +
                (C3238 + C3239 + C3252 + C3253) * C2342) *
                   C50749 -
               (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
                (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 +
                 C2542 * C2343) *
                    C2340) *
                   C1725) *
                  C290 +
              (((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 +
                 C3515 * C50796) *
                    C2340 +
                (C2530 + C2531 + C2550 + C2551) * C2341 +
                (C2536 + C2537 + C2552 + C2553) * C2342) *
                   C1725 -
               (((C117 * C4168 + C50810 * C4174) * C50796 +
                 (C117 * C4165 + C50810 * C4169) * C2344 + C3249 * C50926 +
                 C3248 * C2343) *
                    C2342 +
                ((C117 * C4170 + C50810 * C4175) * C50796 +
                 (C117 * C4166 + C50810 * C4171) * C2344 + C3247 * C50926 +
                 C3246 * C2343) *
                    C2341 +
                ((C117 * C4172 + C50810 * C4176) * C50796 +
                 (C117 * C4167 + C50810 * C4173) * C2344 + C4183 * C50926 +
                 C4182 * C2343) *
                    C2340) *
                   C50749) *
                  C291) *
             C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
            C2543 * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C1891 -
          (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
           (C3244 * C50796 + C3245 * C2344 +
            (C117 * C499 + C50810 * C516) * C50926 +
            (C117 * C486 + C50810 * C500) * C2343) *
               C2340) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C2343 +
            (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
            C3679 * C50796) *
               C2340 +
           (C2708 + C2709 + C2724 + C2725) * C2341 +
           (C2714 + C2715 + C2726 + C2727) * C2342) *
              C1893 -
          (((C117 * C4576 + C50810 * C4582) * C50796 +
            (C117 * C4573 + C50810 * C4577) * C2344 +
            (C117 * C1901 + C50810 * C1908) * C50926 +
            (C117 * C1896 + C50810 * C1902) * C2343) *
               C2342 +
           ((C117 * C4578 + C50810 * C4583) * C50796 +
            (C117 * C4574 + C50810 * C4579) * C2344 +
            (C117 * C1903 + C50810 * C1909) * C50926 +
            (C117 * C1897 + C50810 * C1904) * C2343) *
               C2341 +
           ((C117 * C4580 + C50810 * C4584) * C50796 +
            (C117 * C4575 + C50810 * C4581) * C2344 +
            (C117 * C1905 + C50810 * C1910) * C50926 +
            (C117 * C1898 + C50810 * C1906) * C2343) *
               C2340) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50669 * C1076 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50749 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C1725 -
           ((C117 * C4168 + C50810 * C4174) * C10760 +
            (C117 * C4165 + C50810 * C4169) * C10765 + C3249 * C10759 +
            C3248 * C10764 + C968 * C10758 + C967 * C10763 + C550 * C10757 +
            C551 * C10762) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C289 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50749 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C1725) *
              C290 +
          ((C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C1725 -
           ((C117 * C11897 + C50810 * C11899) * C10760 +
            (C117 * C11896 + C50810 * C11898) * C10765 + C11906 * C10759 +
            C11905 * C10764 + C9807 * C10758 + C9806 * C10763 + C4183 * C10757 +
            C4182 * C10762) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C1891 -
          (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
           C3244 * C10758 + C3245 * C10763 +
           (C117 * C499 + C50810 * C516) * C10757 +
           (C117 * C486 + C50810 * C500) * C10762) *
              C50623 * C1892 +
          ((C117 * C487 + C50810 * C501) * C10762 +
           (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
           C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
           C11570 * C10760) *
              C50623 * C1893 -
          ((C117 * C12169 + C50810 * C12171) * C10760 +
           (C117 * C12168 + C50810 * C12170) * C10765 +
           (C117 * C10201 + C50810 * C10204) * C10759 +
           (C117 * C10198 + C50810 * C10202) * C10764 +
           (C117 * C4580 + C50810 * C4584) * C10758 +
           (C117 * C4575 + C50810 * C4581) * C10763 +
           (C117 * C1905 + C50810 * C1910) * C10757 +
           (C117 * C1898 + C50810 * C1906) * C10762) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C1725 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C15790 + C15789 + C15788) * C2343 +
            (C15787 + C15786 + C15785) * C50926 +
            (C16331 + C16332 + C16333) * C2344 +
            (C16334 + C16335 + C16336) * C50796) *
               C50623 * C50749 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C1725) *
              C50669 * C1077 +
          (((C15426 + C15425 + C15424) * C2343 +
            (C15423 + C15422 + C15421) * C50926 +
            (C15955 + C15956 + C15957) * C2344 +
            (C15958 + C15959 + C15960) * C50796) *
               C50623 * C1725 -
           ((C15377 * C4576 + C15374 * C4582 + C15376 * C1270 + C15373 * C1277 +
             C15375 * C942 + C15372 * C949) *
                C50796 +
            (C15377 * C4573 + C15374 * C4577 + C15376 * C1265 + C15373 * C1271 +
             C15375 * C934 + C15372 * C941) *
                C2344 +
            (C16124 + C16123 + C16122) * C50926 +
            (C16121 + C16120 + C16119) * C2343) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C1725 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50749) *
              C289 +
          (((C19030 + C19029 + C19028) * C2343 +
            (C19027 + C19026 + C19025) * C50926 +
            (C19955 + C19956 + C19957) * C2344 +
            (C19958 + C19959 + C19960) * C50796) *
               C50623 * C50749 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C1725) *
              C290 +
          (((C18380 + C18379 + C18378) * C2343 +
            (C18377 + C18376 + C18375) * C50926 +
            (C19287 + C19288 + C19289) * C2344 +
            (C19290 + C19291 + C19292) * C50796) *
               C50623 * C1725 -
           ((C15377 * C12169 + C15374 * C12171 + C15376 * C9297 +
             C15373 * C9300 + C15375 * C4172 + C15372 * C4176) *
                C50796 +
            (C15377 * C12168 + C15374 * C12170 + C15376 * C9294 +
             C15373 * C9298 + C15375 * C4167 + C15372 * C4173) *
                C2344 +
            (C19960 + C19959 + C19958) * C50926 +
            (C19957 + C19956 + C19955) * C2343) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
            C15377 * C487 + C15374 * C501) *
               C2343 +
           (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
            C15377 * C502 + C15374 * C517) *
               C50926 +
           (C18369 + C18370 + C18371) * C2344 +
           (C18372 + C18373 + C18374) * C50796) *
              C50623 * C1891 -
          ((C19025 + C19026 + C19027) * C50796 +
           (C19028 + C19029 + C19030) * C2344 +
           (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
            C15375 * C499 + C15372 * C516) *
               C50926 +
           (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
            C15375 * C486 + C15372 * C500) *
               C2343) *
              C50623 * C1892 +
          ((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
            C15377 * C7431 + C15374 * C7437) *
               C2343 +
           (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
            C15377 * C7436 + C15374 * C7440) *
               C50926 +
           (C19451 + C19452 + C19453) * C2344 +
           (C19454 + C19455 + C19456) * C50796) *
              C50623 * C1893 -
          ((C15377 * C20351 + C15374 * C20353 + C15376 * C14784 +
            C15373 * C14787 + C15375 * C4580 + C15372 * C4584) *
               C50796 +
           (C15377 * C20350 + C15374 * C20352 + C15376 * C14781 +
            C15373 * C14785 + C15375 * C4575 + C15372 * C4581) *
               C2344 +
           (C15377 * C17610 + C15374 * C17613 + C15376 * C7436 +
            C15373 * C7440 + C15375 * C1905 + C15372 * C1910) *
               C50926 +
           (C15377 * C17607 + C15374 * C17611 + C15376 * C7431 +
            C15373 * C7437 + C15375 * C1898 + C15372 * C1906) *
               C2343) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50962 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50963 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
            C11570 * C10760) *
               C50623 * C2141) *
              C50669 * C50908 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50963 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50962 -
           ((C117 * C9295 + C50810 * C9299) * C10760 +
            (C117 * C9293 + C50810 * C9296) * C10765 + C8377 * C10759 +
            C8376 * C10764 + C2721 * C10758 + C2720 * C10763 + C555 * C10757 +
            C554 * C10762) *
               C50623 * C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50962 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
             C3679 * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C2141) *
              C50669 * C50908 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50963 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50962 -
           (((C117 * C1268 + C50810 * C1276) * C50796 +
             (C117 * C1264 + C50810 * C1269) * C2344 + C559 * C50926 +
             C558 * C2343) *
                C2342 +
            (C2727 + C2726 + C2715 + C2714) * C2341 +
            (C2725 + C2724 + C2709 + C2708) * C2340) *
               C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C50962 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50963 +
           ((C15375 * C487 + C15372 * C501 + C15376 * C1898 + C15373 * C1906 +
             C15377 * C7431 + C15374 * C7437) *
                C2343 +
            (C15375 * C502 + C15372 * C517 + C15376 * C1905 + C15373 * C1910 +
             C15377 * C7436 + C15374 * C7440) *
                C50926 +
            (C19451 + C19452 + C19453) * C2344 +
            (C19454 + C19455 + C19456) * C50796) *
               C50623 * C2141) *
              C50669 * C50908 +
          (((C15790 + C15789 + C15788) * C2343 +
            (C15787 + C15786 + C15785) * C50926 +
            (C16331 + C16332 + C16333) * C2344 +
            (C16334 + C16335 + C16336) * C50796) *
               C50623 * C50963 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C50962 -
           ((C15377 * C16727 + C15374 * C16729 + C15376 * C4578 +
             C15373 * C4583 + C15375 * C1272 + C15372 * C1278) *
                C50796 +
            (C15377 * C16726 + C15374 * C16728 + C15376 * C4574 +
             C15373 * C4579 + C15375 * C1266 + C15372 * C1273) *
                C2344 +
            (C15796 + C15795 + C15794) * C50926 +
            (C15793 + C15792 + C15791) * C2343) *
               C50623 * C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C1725 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C289 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50749 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C1725) *
              C290 +
          (((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C1725 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C2344 + C3249 * C50926 +
             C3248 * C2343) *
                C2342 +
            ((C117 * C4170 + C50810 * C4175) * C50796 +
             (C117 * C4166 + C50810 * C4171) * C2344 + C3247 * C50926 +
             C3246 * C2343) *
                C2341 +
            ((C117 * C4172 + C50810 * C4176) * C50796 +
             (C117 * C4167 + C50810 * C4173) * C2344 + C4183 * C50926 +
             C4182 * C2343) *
                C2340) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C1725 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50669 * C1076 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50749 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C1725) *
              C50669 * C1077 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C1725 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C2344 + C800 * C50926 +
             C799 * C2343) *
                C2342 +
            (C3031 + C3030 + C3029 + C3028) * C2341 + C3033 * C2340) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50669 * C1076 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50749 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C1725 -
           ((C117 * C4168 + C50810 * C4174) * C10760 +
            (C117 * C4165 + C50810 * C4169) * C10765 + C3249 * C10759 +
            C3248 * C10764 + C968 * C10758 + C967 * C10763 + C550 * C10757 +
            C551 * C10762) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C289 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50749 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C1725) *
              C290 +
          ((C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C1725 -
           ((C117 * C11897 + C50810 * C11899) * C10760 +
            (C117 * C11896 + C50810 * C11898) * C10765 + C11906 * C10759 +
            C11905 * C10764 + C9807 * C10758 + C9806 * C10763 + C4183 * C10757 +
            C4182 * C10762) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C1725 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C15790 + C15789 + C15788) * C2343 +
            (C15787 + C15786 + C15785) * C50926 +
            (C16331 + C16332 + C16333) * C2344 +
            (C16334 + C16335 + C16336) * C50796) *
               C50623 * C50749 -
           ((C15603 + C15604 + C15605) * C50796 +
            (C15606 + C15607 + C15608) * C2344 +
            (C15420 + C15419 + C15418) * C50926 +
            (C15417 + C15416 + C15415) * C2343) *
               C50623 * C1725) *
              C50669 * C1077 +
          (((C15426 + C15425 + C15424) * C2343 +
            (C15423 + C15422 + C15421) * C50926 +
            (C15955 + C15956 + C15957) * C2344 +
            (C15958 + C15959 + C15960) * C50796) *
               C50623 * C1725 -
           ((C15377 * C4576 + C15374 * C4582 + C15376 * C1270 + C15373 * C1277 +
             C15375 * C942 + C15372 * C949) *
                C50796 +
            (C15377 * C4573 + C15374 * C4577 + C15376 * C1265 + C15373 * C1271 +
             C15375 * C934 + C15372 * C941) *
                C2344 +
            (C16124 + C16123 + C16122) * C50926 +
            (C16121 + C16120 + C16119) * C2343) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15375 * C119 + C15372 * C126 + C15376 * C486 + C15373 * C500 +
             C15377 * C487 + C15374 * C501) *
                C2343 +
            (C15375 * C127 + C15372 * C140 + C15376 * C499 + C15373 * C516 +
             C15377 * C502 + C15374 * C517) *
                C50926 +
            (C18369 + C18370 + C18371) * C2344 +
            (C18372 + C18373 + C18374) * C50796) *
               C50623 * C1725 -
           ((C19025 + C19026 + C19027) * C50796 +
            (C19028 + C19029 + C19030) * C2344 +
            (C15377 * C1905 + C15374 * C1910 + C15376 * C502 + C15373 * C517 +
             C15375 * C499 + C15372 * C516) *
                C50926 +
            (C15377 * C1898 + C15374 * C1906 + C15376 * C487 + C15373 * C501 +
             C15375 * C486 + C15372 * C500) *
                C2343) *
               C50623 * C50749) *
              C289 +
          (((C19030 + C19029 + C19028) * C2343 +
            (C19027 + C19026 + C19025) * C50926 +
            (C19955 + C19956 + C19957) * C2344 +
            (C19958 + C19959 + C19960) * C50796) *
               C50623 * C50749 -
           ((C18375 + C18376 + C18377) * C50796 +
            (C18378 + C18379 + C18380) * C2344 +
            (C18374 + C18373 + C18372) * C50926 +
            (C18371 + C18370 + C18369) * C2343) *
               C50623 * C1725) *
              C290 +
          (((C18380 + C18379 + C18378) * C2343 +
            (C18377 + C18376 + C18375) * C50926 +
            (C19287 + C19288 + C19289) * C2344 +
            (C19290 + C19291 + C19292) * C50796) *
               C50623 * C1725 -
           ((C15377 * C12169 + C15374 * C12171 + C15376 * C9297 +
             C15373 * C9300 + C15375 * C4172 + C15372 * C4176) *
                C50796 +
            (C15377 * C12168 + C15374 * C12170 + C15376 * C9294 +
             C15373 * C9298 + C15375 * C4167 + C15372 * C4173) *
                C2344 +
            (C19960 + C19959 + C19958) * C50926 +
            (C19957 + C19956 + C19955) * C2343) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C50916 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50721) *
              C50958 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50721 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C50916) *
              C50959 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50685 * C50916 -
           ((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C8027 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C8032 +
            (C5425 + C5424) * C8026 + (C5423 + C5422) * C8031 + C5766 * C8025 +
            C5767 * C8030) *
               C50623 * C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C50916 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50721) *
              C50958 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50721 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C50916) *
              C50959 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50685 * C50916 -
           (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                 C50780 +
             (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                 C118) *
                C2342 +
            ((C5781 + C5780) * C50780 + (C5779 + C5778) * C118) * C2341 +
            C5782 * C2340) *
               C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50685 * C50916 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50685 * C50721) *
              C50958 +
          (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
             C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
             C20909 * C4579) *
                C118 +
            (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
             C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
             C20909 * C4583) *
                C50780) *
               C50623 * C50685 * C50721 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50685 * C50916) *
              C50959 +
          (((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
             C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
                C118 +
            (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
             C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
                C50780) *
               C50623 * C50685 * C50916 -
           ((C20913 * C4576 + C20909 * C4582 + C20912 * C1270 + C20908 * C1277 +
             C20911 * C942 + C20907 * C949 + C20910 * C306 + C20906 * C325) *
                C50780 +
            (C20913 * C4573 + C20909 * C4577 + C20912 * C1265 + C20908 * C1271 +
             C20911 * C934 + C20907 * C941 + C20910 * C295 + C20906 * C307) *
                C118) *
               C50623 * C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C8030 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C8025 +
             (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
             C12793 * C8032 + C12794 * C8027) *
                C50623 * C50917 -
            ((C13451 + C13452) * C8027 + (C13453 + C13454) * C8032 +
             (C13455 + C13456) * C8026 + (C13457 + C13458) * C8031 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C8025 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C8030) *
                C50623 * C50749) *
               C50916 +
           (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
             (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
             (C5171 * C4167 + C50928 * C4173 + C5172 * C9294 + C50822 * C9298) *
                 C8032 +
             (C5171 * C4172 + C50928 * C4176 + C5172 * C9297 + C50822 * C9300) *
                 C8027) *
                C50623 * C50749 -
            ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
             (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
             (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
                C50623 * C50917) *
               C50721) *
              C292 +
          ((((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
             (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
             (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
                C50623 * C50749 -
            (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
             (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
             (C5207 + C5206) * C8030) *
                C50623 * C50917) *
               C50916 +
           (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
             (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
             (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
                C50623 * C50917 -
            ((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C8027 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C8032 +
             (C13462 + C13461) * C8026 + (C13460 + C13459) * C8031 +
             (C6159 + C6158) * C8025 + (C6157 + C6156) * C8030) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C118 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C50780) *
                 C2340 +
             ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
             C5230 * C2342) *
                C50917 -
            (C5945 * C2342 +
             ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
             ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C50780 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C118) *
                 C2340) *
                C50749) *
               C50916 +
           ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                  C118 +
              (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                  C50780) *
                 C2340 +
             ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
             ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                C50749 -
            (C5782 * C2342 +
             ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
             ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                  C50780 +
              (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                  C118) *
                 C2340) *
                C50917) *
               C50721) *
              C292 +
          (((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
             ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
             ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                C50749 -
            (C5231 * C2342 +
             ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
             ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                C50917) *
               C50916 +
           ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
             ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
             ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                C50917 -
            (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                  C50780 +
              (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                  C118) *
                 C2342 +
             ((C6163 + C6162) * C50780 + (C6161 + C6160) * C118) * C2341 +
             ((C6159 + C6158) * C50780 + (C6157 + C6156) * C118) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
              C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                 C118 +
             (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
              C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                 C50780) *
                C50623 * C50917 -
            ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 +
              C20908 * C1910 + C20911 * C502 + C20907 * C517 + C20910 * C499 +
              C20906 * C516) *
                 C50780 +
             (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 +
              C20908 * C1906 + C20911 * C487 + C20907 * C501 + C20910 * C486 +
              C20906 * C500) *
                 C118) *
                C50623 * C50749) *
               C50916 +
           (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
              C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
              C20909 * C14785) *
                 C118 +
             (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
              C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
              C20909 * C14787) *
                 C50780) *
                C50623 * C50749 -
            ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 +
              C20908 * C1279 + C20911 * C938 + C20907 * C947 + C20910 * C310 +
              C20906 * C327) *
                 C50780 +
             (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 +
              C20908 * C1275 + C20911 * C932 + C20907 * C937 + C20910 * C297 +
              C20906 * C311) *
                 C118) *
                C50623 * C50917) *
               C50721) *
              C292 +
          ((((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
              C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
              C20909 * C7435) *
                 C118 +
             (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
              C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
              C20909 * C7439) *
                 C50780) *
                C50623 * C50749 -
            ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
              C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                 C50780 +
             (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
              C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                 C118) *
                C50623 * C50917) *
               C50916 +
           (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
              C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
              C20909 * C4579) *
                 C118 +
             (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
              C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
              C20909 * C4583) *
                 C50780) *
                C50623 * C50917 -
            ((C20913 * C16727 + C20909 * C16729 + C20912 * C4578 +
              C20908 * C4583 + C20911 * C1272 + C20907 * C1278 + C20910 * C940 +
              C20906 * C948) *
                 C50780 +
             (C20913 * C16726 + C20909 * C16728 + C20912 * C4574 +
              C20908 * C4579 + C20911 * C1266 + C20907 * C1273 + C20910 * C933 +
              C20906 * C939) *
                 C118) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                    C118 +
                (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                    C50780) *
                   C2340 +
               ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
               C5230 * C2342) *
                  C50685 * C50669 * C113 -
              (C5231 * C2342 +
               ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
               ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                  C50685 * C50669 * C114 +
              (C5230 * C2340 +
               ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
               ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
                  C50685 * C50669 * C115 -
              (((C5172 * C789 + C50822 * C791 + C5171 * C137 + C50928 * C145) *
                    C50780 +
                (C5172 * C788 + C50822 * C790 + C5171 * C124 + C50928 * C136) *
                    C118) *
                   C2342 +
               ((C5221 + C5220) * C50780 + (C5219 + C5218) * C118) * C2341 +
               C5231 * C2340) *
                  C50685 * C50669 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                     C118 +
                 (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                     C50780) *
                    C2340 +
                ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
                C5230 * C2342) *
                   C50685 * C289 -
               (((C5410 + C5411) * C50780 + (C5412 + C5413) * C118) * C2342 +
                ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
                ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                     C50780 +
                 (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                     C118) *
                    C2340) *
                   C50685 * C290 +
               (((C5171 * C298 + C50928 * C312 + C5172 * C1614 +
                  C50822 * C1622) *
                     C118 +
                 (C5171 * C313 + C50928 * C328 + C5172 * C1621 +
                  C50822 * C1626) *
                     C50780) *
                    C2340 +
                ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
                ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
                   C50685 * C291) *
                  C292 +
              ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
                ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
                ((C5171 * C294 + C50928 * C305 + C5172 * C935 + C50822 * C943) *
                     C118 +
                 (C5171 * C304 + C50928 * C324 + C5172 * C944 + C50822 * C950) *
                     C50780) *
                    C2342) *
                   C50685 * C290 -
               (C5231 * C2342 +
                ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
                ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                   C50685 * C289 -
               (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 +
                  C50928 * C331) *
                     C50780 +
                 (C5172 * C1611 + C50822 * C1616 + C5171 * C301 +
                  C50928 * C318) *
                     C118) *
                    C2342 +
                ((C5425 + C5424) * C50780 + (C5423 + C5422) * C118) * C2341 +
                ((C5421 + C5420) * C50780 + (C5419 + C5418) * C118) * C2340) *
                   C50685 * C291) *
                  C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C480 -
           (((C5604 + C5605) * C50780 + (C5606 + C5607) * C118) * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C482) *
              C50669 * C292 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5171 * C483 + C50928 * C494 + C5172 * C490 + C50822 * C507) *
                 C118 +
             (C5171 * C493 + C50928 * C513 + C5172 * C508 + C50822 * C520) *
                 C50780) *
                C2342) *
               C481 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C480 -
           (((C5172 * C1899 + C50822 * C1907 + C5171 * C508 + C50928 * C520) *
                 C50780 +
             (C5172 * C1895 + C50822 * C1900 + C5171 * C490 + C50928 * C507) *
                 C118) *
                C2342 +
            ((C5619 + C5618) * C50780 + (C5617 + C5616) * C118) * C2341 +
            ((C5615 + C5614) * C50780 + (C5613 + C5612) * C118) * C2340) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C5171 * C297 + C50928 * C311 + C5172 * C932 + C50822 * C937) *
               C8031 +
           (C5171 * C310 + C50928 * C327 + C5172 * C938 + C50822 * C947) *
               C8026 +
           (C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
               C8032 +
           (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
               C8027) *
              C50623 * C50685 * C50669 * C113 -
          ((C5421 + C5420) * C8027 + (C5419 + C5418) * C8032 +
           (C5414 + C5415) * C8026 + (C5416 + C5417) * C8031 +
           (C5209 + C5208) * C8025 + (C5207 + C5206) * C8030) *
              C50623 * C50685 * C50669 * C114 +
          (C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
           (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
           (C5424 + C5425) * C8027) *
              C50623 * C50685 * C50669 * C115 -
          ((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
               C8027 +
           (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
               C8032 +
           (C5781 + C5780) * C8026 + (C5779 + C5778) * C8031 + C5224 * C8025 +
           C5225 * C8030) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C289 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C290 +
           (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 +
            (C5171 * C3499 + C50928 * C3505 + C5172 * C9794 + C50822 * C9798) *
                C8032 +
            (C5171 * C3504 + C50928 * C3508 + C5172 * C9797 + C50822 * C9800) *
                C8027) *
               C50623 * C50685 * C291) *
              C292 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C290 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C289 -
           ((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C8027 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C8032 +
            (C12792 + C12791) * C8026 + (C12790 + C12789) * C8031 +
            C12775 * C8025 + C12776 * C8030) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C480 -
           ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                C8027 +
            (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                C8032 +
            (C5172 * C1274 + C50822 * C1279 + C5171 * C938 + C50928 * C947) *
                C8026 +
            (C5172 * C1267 + C50822 * C1275 + C5171 * C932 + C50928 * C937) *
                C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C481 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C5171 * C1267 + C50928 * C1275 + C5172 * C4575 + C50822 * C4581) *
                C8031 +
            (C5171 * C1274 + C50928 * C1279 + C5172 * C4580 + C50822 * C4584) *
                C8026 +
            (C5171 * C3663 + C50928 * C3669 + C5172 * C10198 +
             C50822 * C10202) *
                C8032 +
            (C5171 * C3668 + C50928 * C3672 + C5172 * C10201 +
             C50822 * C10204) *
                C8027) *
               C50623 * C482) *
              C50669 * C292 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C5171 * C1613 + C50928 * C1620 + C5172 * C3662 + C50822 * C3667) *
                C8032 +
            (C5171 * C1619 + C50928 * C1625 + C5172 * C3666 + C50822 * C3671) *
                C8027) *
               C50623 * C481 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C480 -
           ((C5172 * C10199 + C50822 * C10203 + C5171 * C3666 +
             C50928 * C3671) *
                C8027 +
            (C5172 * C10197 + C50822 * C10200 + C5171 * C3662 +
             C50928 * C3667) *
                C8032 +
            (C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                C8026 +
            (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                C8031 +
            (C5615 + C5614) * C8025 + (C5613 + C5612) * C8030) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
            C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
               C118 +
           (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
            C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
               C50780) *
              C50623 * C50685 * C50669 * C113 -
          ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
            C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
               C50780 +
           (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
            C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
               C118) *
              C50623 * C50685 * C50669 * C114 +
          ((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
            C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
               C118 +
           (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
            C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
               C50780) *
              C50623 * C50685 * C50669 * C115 -
          ((C20913 * C1899 + C20909 * C1907 + C20912 * C508 + C20908 * C520 +
            C20911 * C493 + C20907 * C513 + C20910 * C133 + C20906 * C143) *
               C50780 +
           (C20913 * C1895 + C20909 * C1900 + C20912 * C490 + C20908 * C507 +
            C20911 * C483 + C20907 * C494 + C20910 * C122 + C20906 * C132) *
               C118) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50685 * C289 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50685 * C290 +
           ((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
             C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
             C20909 * C10202) *
                C118 +
            (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
             C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
             C20909 * C10204) *
                C50780) *
               C50623 * C50685 * C291) *
              C292 +
          (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
             C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
             C20909 * C4579) *
                C118 +
            (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
             C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
             C20909 * C4583) *
                C50780) *
               C50623 * C50685 * C290 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50685 * C289 -
           ((C20913 * C10199 + C20909 * C10203 + C20912 * C3666 +
             C20908 * C3671 + C20911 * C1619 + C20907 * C1625 + C20910 * C315 +
             C20906 * C329) *
                C50780 +
            (C20913 * C10197 + C20909 * C10200 + C20912 * C3662 +
             C20908 * C3667 + C20911 * C1613 + C20907 * C1620 + C20910 * C299 +
             C20906 * C314) *
                C118) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C480 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C481 +
           ((C20910 * C487 + C20906 * C501 + C20911 * C1898 + C20907 * C1906 +
             C20912 * C7431 + C20908 * C7437 + C20913 * C17607 +
             C20909 * C17611) *
                C118 +
            (C20910 * C502 + C20906 * C517 + C20911 * C1905 + C20907 * C1910 +
             C20912 * C7436 + C20908 * C7440 + C20913 * C17610 +
             C20909 * C17613) *
                C50780) *
               C50623 * C482) *
              C50669 * C292 +
          (((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
             C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
             C20909 * C7435) *
                C118 +
            (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
             C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
             C20909 * C7439) *
                C50780) *
               C50623 * C481 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C480 -
           ((C20913 * C17608 + C20909 * C17612 + C20912 * C7434 +
             C20908 * C7439 + C20911 * C1903 + C20907 * C1909 + C20910 * C504 +
             C20906 * C518) *
                C50780 +
            (C20913 * C17606 + C20909 * C17609 + C20912 * C7430 +
             C20908 * C7435 + C20911 * C1897 + C20907 * C1904 + C20910 * C488 +
             C20906 * C503) *
                C118) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50917 -
           ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                C8027 +
            (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                C8032 +
            (C5172 * C1274 + C50822 * C1279 + C5171 * C938 + C50928 * C947) *
                C8026 +
            (C5172 * C1267 + C50822 * C1275 + C5171 * C932 + C50928 * C937) *
                C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50669 * C50958 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C5171 * C1613 + C50928 * C1620 + C5172 * C3662 + C50822 * C3667) *
                C8032 +
            (C5171 * C1619 + C50928 * C1625 + C5172 * C3666 + C50822 * C3671) *
                C8027) *
               C50623 * C50749 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50917) *
              C50669 * C50959 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50917 -
           ((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                C8027 +
            (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                C8032 +
            (C6163 + C6162) * C8026 + (C6161 + C6160) * C8031 + C5929 * C8025 +
            C5930 * C8030) *
               C50623 * C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50917 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50669 * C50958 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50749 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50917) *
              C50669 * C50959 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50917 -
           (((C5172 * C511 + C50822 * C522 + C5171 * C510 + C50928 * C521) *
                 C50780 +
             (C5172 * C492 + C50822 * C512 + C5171 * C491 + C50928 * C509) *
                 C118) *
                C2342 +
            ((C5944 + C5943) * C50780 + (C5942 + C5941) * C118) * C2341 +
            C5945 * C2340) *
               C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50917 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50749) *
              C50669 * C50958 +
          (((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
             C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
             C20909 * C7435) *
                C118 +
            (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
             C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
             C20909 * C7439) *
                C50780) *
               C50623 * C50749 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50917) *
              C50669 * C50959 +
          (((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
             C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
                C118 +
            (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
             C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
                C50780) *
               C50623 * C50917 -
           ((C20913 * C7432 + C20909 * C7438 + C20912 * C1901 + C20908 * C1908 +
             C20911 * C506 + C20907 * C519 + C20910 * C495 + C20906 * C514) *
                C50780 +
            (C20913 * C7429 + C20909 * C7433 + C20912 * C1896 + C20908 * C1902 +
             C20911 * C489 + C20907 * C505 + C20910 * C484 + C20906 * C496) *
                C118) *
               C50623 * C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C289 -
           (((C5410 + C5411) * C50780 + (C5412 + C5413) * C118) * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C290 +
           (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50685 * C291) *
              C292 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5171 * C294 + C50928 * C305 + C5172 * C935 + C50822 * C943) *
                 C118 +
             (C5171 * C304 + C50928 * C324 + C5172 * C944 + C50822 * C950) *
                 C50780) *
                C2342) *
               C50685 * C290 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C289 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50780 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C118) *
                C2342 +
            ((C5425 + C5424) * C50780 + (C5423 + C5422) * C118) * C2341 +
            ((C5421 + C5420) * C50780 + (C5419 + C5418) * C118) * C2340) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C50685 * C50669 * C113 -
          (C5231 * C2342 +
           ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
           ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
              C50685 * C50669 * C114 +
          (C5230 * C2340 +
           ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
           ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
              C50685 * C50669 * C115 -
          (((C5172 * C789 + C50822 * C791 + C5171 * C137 + C50928 * C145) *
                C50780 +
            (C5172 * C788 + C50822 * C790 + C5171 * C124 + C50928 * C136) *
                C118) *
               C2342 +
           ((C5221 + C5220) * C50780 + (C5219 + C5218) * C118) * C2341 +
           C5231 * C2340) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C5171 * C297 + C50928 * C311 + C5172 * C932 + C50822 * C937) *
               C8031 +
           (C5171 * C310 + C50928 * C327 + C5172 * C938 + C50822 * C947) *
               C8026 +
           (C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
               C8032 +
           (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
               C8027) *
              C50623 * C50685 * C50669 * C113 -
          ((C5421 + C5420) * C8027 + (C5419 + C5418) * C8032 +
           (C5414 + C5415) * C8026 + (C5416 + C5417) * C8031 +
           (C5209 + C5208) * C8025 + (C5207 + C5206) * C8030) *
              C50623 * C50685 * C50669 * C114 +
          (C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
           (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
           (C5424 + C5425) * C8027) *
              C50623 * C50685 * C50669 * C115 -
          ((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
               C8027 +
           (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
               C8032 +
           (C5781 + C5780) * C8026 + (C5779 + C5778) * C8031 + C5224 * C8025 +
           C5225 * C8030) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C289 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C290 +
           (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 +
            (C5171 * C3499 + C50928 * C3505 + C5172 * C9794 + C50822 * C9798) *
                C8032 +
            (C5171 * C3504 + C50928 * C3508 + C5172 * C9797 + C50822 * C9800) *
                C8027) *
               C50623 * C50685 * C291) *
              C292 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C290 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C289 -
           ((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C8027 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C8032 +
            (C12792 + C12791) * C8026 + (C12790 + C12789) * C8031 +
            C12775 * C8025 + C12776 * C8030) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
            C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
               C118 +
           (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
            C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
               C50780) *
              C50623 * C50685 * C50669 * C113 -
          ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
            C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
               C50780 +
           (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
            C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
               C118) *
              C50623 * C50685 * C50669 * C114 +
          ((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
            C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
               C118 +
           (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
            C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
               C50780) *
              C50623 * C50685 * C50669 * C115 -
          ((C20913 * C1899 + C20909 * C1907 + C20912 * C508 + C20908 * C520 +
            C20911 * C493 + C20907 * C513 + C20910 * C133 + C20906 * C143) *
               C50780 +
           (C20913 * C1895 + C20909 * C1900 + C20912 * C490 + C20908 * C507 +
            C20911 * C483 + C20907 * C494 + C20910 * C122 + C20906 * C132) *
               C118) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50685 * C289 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50685 * C290 +
           ((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
             C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
             C20909 * C10202) *
                C118 +
            (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
             C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
             C20909 * C10204) *
                C50780) *
               C50623 * C50685 * C291) *
              C292 +
          (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
             C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
             C20909 * C4579) *
                C118 +
            (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
             C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
             C20909 * C4583) *
                C50780) *
               C50623 * C50685 * C290 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50685 * C289 -
           ((C20913 * C10199 + C20909 * C10203 + C20912 * C3666 +
             C20908 * C3671 + C20911 * C1619 + C20907 * C1625 + C20910 * C315 +
             C20906 * C329) *
                C50780 +
            (C20913 * C10197 + C20909 * C10200 + C20912 * C3662 +
             C20908 * C3667 + C20911 * C1613 + C20907 * C1620 + C20910 * C299 +
             C20906 * C314) *
                C118) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C50960 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50961 +
           (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C50685 * C1380) *
              C50908 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50961 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C50960 -
           ((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C8027 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C8032 +
            (C12792 + C12791) * C8026 + (C12790 + C12789) * C8031 +
            C12775 * C8025 + C12776 * C8030) *
               C50623 * C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C50960 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50961 +
           (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50685 * C1380) *
              C50908 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50961 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C50960 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50780 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C118) *
                C2342 +
            ((C5425 + C5424) * C50780 + (C5423 + C5422) * C118) * C2341 +
            ((C5421 + C5420) * C50780 + (C5419 + C5418) * C118) * C2340) *
               C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50685 * C50960 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50685 * C50961 +
           ((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
             C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
             C20909 * C10202) *
                C118 +
            (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
             C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
             C20909 * C10204) *
                C50780) *
               C50623 * C50685 * C1380) *
              C50908 +
          (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
             C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
             C20909 * C4579) *
                C118 +
            (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
             C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
             C20909 * C4583) *
                C50780) *
               C50623 * C50685 * C50961 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50685 * C50960 -
           ((C20913 * C10199 + C20909 * C10203 + C20912 * C3666 +
             C20908 * C3671 + C20911 * C1619 + C20907 * C1625 + C20910 * C315 +
             C20906 * C329) *
                C50780 +
            (C20913 * C10197 + C20909 * C10200 + C20912 * C3662 +
             C20908 * C3667 + C20911 * C1613 + C20907 * C1620 + C20910 * C299 +
             C20906 * C314) *
                C118) *
               C50623 * C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50917 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50960 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50749 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C50917) *
              C50961 +
          ((C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C50917 -
           ((C5172 * C11561 + C50822 * C11563 + C5171 * C9797 +
             C50928 * C9800) *
                C8027 +
            (C5172 * C11560 + C50822 * C11562 + C5171 * C9794 +
             C50928 * C9798) *
                C8032 +
            (C14390 + C14389) * C8026 + (C14388 + C14387) * C8031 +
            C14377 * C8025 + C14378 * C8030) *
               C50623 * C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50917 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50960 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50749 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50917) *
              C50961 +
          ((((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50917 -
           (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                 C50780 +
             (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                 C118) *
                C2342 +
            ((C5172 * C3666 + C50822 * C3671 + C5171 * C1619 + C50928 * C1625) *
                 C50780 +
             (C5172 * C3662 + C50822 * C3667 + C5171 * C1613 + C50928 * C1620) *
                 C118) *
                C2341 +
            ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                 C50780 +
             (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                 C118) *
                C2340) *
               C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50917 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50749) *
              C50960 +
          (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
             C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
             C20909 * C14785) *
                C118 +
            (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
             C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
             C20909 * C14787) *
                C50780) *
               C50623 * C50749 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50917) *
              C50961 +
          (((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
             C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
             C20909 * C10202) *
                C118 +
            (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
             C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
             C20909 * C10204) *
                C50780) *
               C50623 * C50917 -
           ((C20913 * C14782 + C20909 * C14786 + C20912 * C10201 +
             C20908 * C10204 + C20911 * C3668 + C20907 * C3672 +
             C20910 * C1621 + C20906 * C1626) *
                C50780 +
            (C20913 * C14780 + C20909 * C14783 + C20912 * C10198 +
             C20908 * C10202 + C20911 * C3663 + C20907 * C3669 +
             C20910 * C1614 + C20906 * C1622) *
                C118) *
               C50623 * C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                     C118 +
                 (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                     C50780) *
                    C2340 +
                ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
                C5230 * C2342) *
                   C50685 * C1074 -
               (C5782 * C2342 +
                ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
                ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                     C50780 +
                 (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                     C118) *
                    C2340) *
                   C50685 * C50721) *
                  C1076 +
              ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
                ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
                ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                   C50685 * C50721 -
               (C5231 * C2342 +
                ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
                ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                   C50685 * C1074) *
                  C1077 +
              ((C5230 * C2340 +
                ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
                ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
                   C50685 * C1074 -
               (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                     C50780 +
                 (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                     C118) *
                    C2342 +
                ((C5781 + C5780) * C50780 + (C5779 + C5778) * C118) * C2341 +
                C5782 * C2340) *
                   C50685 * C50721) *
                  C1078) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                    C118 +
                (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                    C50780) *
                   C2340 +
               ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
               C5230 * C2342) *
                  C50685 * C1145 -
              (C5782 * C2342 +
               ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
               ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                    C50780 +
                (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                    C118) *
                   C2340) *
                  C50685 * C1146 +
              (((C5171 * C298 + C50928 * C312 + C5172 * C1614 +
                 C50822 * C1622) *
                    C118 +
                (C5171 * C313 + C50928 * C328 + C5172 * C1621 +
                 C50822 * C1626) *
                    C50780) *
                   C2340 +
               ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
               ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
                  C50685 * C1147 -
              (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 +
                 C50928 * C1163) *
                    C50780 +
                (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 +
                 C50928 * C1157) *
                    C118) *
                   C2342 +
               ((C5172 * C4170 + C50822 * C4175 + C5171 * C1158 +
                 C50928 * C1164) *
                    C50780 +
                (C5172 * C4166 + C50822 * C4171 + C5171 * C1152 +
                 C50928 * C1159) *
                    C118) *
                   C2341 +
               ((C5172 * C4172 + C50822 * C4176 + C5171 * C1160 +
                 C50928 * C1165) *
                    C50780 +
                (C5172 * C4167 + C50822 * C4173 + C5171 * C1153 +
                 C50928 * C1161) *
                    C118) *
                   C2340) *
                  C50685 * C1148) *
             C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C480 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C482) *
              C1074 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C481 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C480 -
           (((C5172 * C4576 + C50822 * C4582 + C5171 * C1270 + C50928 * C1277) *
                 C50780 +
             (C5172 * C4573 + C50822 * C4577 + C5171 * C1265 + C50928 * C1271) *
                 C118) *
                C2342 +
            ((C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                 C50780 +
             (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                 C118) *
                C2341 +
            ((C5172 * C4580 + C50822 * C4584 + C5171 * C1274 + C50928 * C1279) *
                 C50780 +
             (C5172 * C4575 + C50822 * C4581 + C5171 * C1267 + C50928 * C1275) *
                 C118) *
                C2340) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C1074 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50721 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50685 * C1074 -
           ((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C8027 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C8032 +
            (C5425 + C5424) * C8026 + (C5423 + C5422) * C8031 + C5766 * C8025 +
            C5767 * C8030) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
           C12793 * C8032 + C12794 * C8027) *
              C50623 * C50685 * C1145 -
          (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
           (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
           (C12778 + C12777) * C8030) *
              C50623 * C50685 * C1146 +
          (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
           (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
           (C13719 + C13720) * C8027) *
              C50623 * C50685 * C1147 -
          ((C5172 * C11897 + C50822 * C11899 + C5171 * C9137 + C50928 * C9140) *
               C8027 +
           (C5172 * C11896 + C50822 * C11898 + C5171 * C9134 + C50928 * C9138) *
               C8032 +
           (C13720 + C13719) * C8026 + (C13718 + C13717) * C8031 +
           C13707 * C8025 + C13708 * C8030) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C480 -
           ((C13451 + C13452) * C8027 + (C13453 + C13454) * C8032 +
            (C13455 + C13456) * C8026 + (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C481 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
            (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
               C50623 * C482) *
              C1074 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C5171 * C4167 + C50928 * C4173 + C5172 * C9294 + C50822 * C9298) *
                C8032 +
            (C5171 * C4172 + C50928 * C4176 + C5172 * C9297 + C50822 * C9300) *
                C8027) *
               C50623 * C481 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C480 -
           ((C5172 * C12169 + C50822 * C12171 + C5171 * C9297 +
             C50928 * C9300) *
                C8027 +
            (C5172 * C12168 + C50822 * C12170 + C5171 * C9294 +
             C50928 * C9298) *
                C8032 +
            (C13890 + C13889) * C8026 + (C13888 + C13887) * C8031 +
            (C13886 + C13885) * C8025 + (C13884 + C13883) * C8030) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50685 * C1074 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
             C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
             C20909 * C4579) *
                C118 +
            (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
             C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
             C20909 * C4583) *
                C50780) *
               C50623 * C50685 * C50721 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50685 * C1074) *
              C1077 +
          (((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
             C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
                C118 +
            (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
             C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
                C50780) *
               C50623 * C50685 * C1074 -
           ((C20913 * C4576 + C20909 * C4582 + C20912 * C1270 + C20908 * C1277 +
             C20911 * C942 + C20907 * C949 + C20910 * C306 + C20906 * C325) *
                C50780 +
            (C20913 * C4573 + C20909 * C4577 + C20912 * C1265 + C20908 * C1271 +
             C20911 * C934 + C20907 * C941 + C20910 * C295 + C20906 * C307) *
                C118) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
            C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
               C118 +
           (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
            C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
               C50780) *
              C50623 * C50685 * C1145 -
          ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
            C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
               C50780 +
           (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
            C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
               C118) *
              C50623 * C50685 * C1146 +
          ((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
            C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
            C20909 * C10202) *
               C118 +
           (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
            C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
            C20909 * C10204) *
               C50780) *
              C50623 * C50685 * C1147 -
          ((C20913 * C12169 + C20909 * C12171 + C20912 * C9297 +
            C20908 * C9300 + C20911 * C4172 + C20907 * C4176 + C20910 * C1160 +
            C20906 * C1165) *
               C50780 +
           (C20913 * C12168 + C20909 * C12170 + C20912 * C9294 +
            C20908 * C9298 + C20911 * C4167 + C20907 * C4173 + C20910 * C1153 +
            C20906 * C1161) *
               C118) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C480 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C481 +
           ((C20910 * C487 + C20906 * C501 + C20911 * C1898 + C20907 * C1906 +
             C20912 * C7431 + C20908 * C7437 + C20913 * C17607 +
             C20909 * C17611) *
                C118 +
            (C20910 * C502 + C20906 * C517 + C20911 * C1905 + C20907 * C1910 +
             C20912 * C7436 + C20908 * C7440 + C20913 * C17610 +
             C20909 * C17613) *
                C50780) *
               C50623 * C482) *
              C1074 +
          (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
             C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
             C20909 * C14785) *
                C118 +
            (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
             C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
             C20909 * C14787) *
                C50780) *
               C50623 * C481 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C480 -
           ((C20913 * C20351 + C20909 * C20353 + C20912 * C14784 +
             C20908 * C14787 + C20911 * C4580 + C20907 * C4584 +
             C20910 * C1274 + C20906 * C1279) *
                C50780 +
            (C20913 * C20350 + C20909 * C20352 + C20912 * C14781 +
             C20908 * C14785 + C20911 * C4575 + C20907 * C4581 +
             C20910 * C1267 + C20906 * C1275) *
                C118) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C8030 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C8025 +
             (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
             C12793 * C8032 + C12794 * C8027) *
                C50623 * C50917 -
            ((C13451 + C13452) * C8027 + (C13453 + C13454) * C8032 +
             (C13455 + C13456) * C8026 + (C13457 + C13458) * C8031 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C8025 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C8030) *
                C50623 * C50749) *
               C1074 +
           (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
             (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
             (C5171 * C4167 + C50928 * C4173 + C5172 * C9294 + C50822 * C9298) *
                 C8032 +
             (C5171 * C4172 + C50928 * C4176 + C5172 * C9297 + C50822 * C9300) *
                 C8027) *
                C50623 * C50749 -
            (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
             (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
             (C12778 + C12777) * C8030) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          ((((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
             (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
             (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
                C50623 * C50749 -
            (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
             (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
             (C5207 + C5206) * C8030) *
                C50623 * C50917) *
               C1074 +
           (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
             (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
             (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
                C50623 * C50917 -
            ((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C8027 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C8032 +
             (C13462 + C13461) * C8026 + (C13460 + C13459) * C8031 +
             (C6159 + C6158) * C8025 + (C6157 + C6156) * C8030) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C118 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C50780) *
                 C2340 +
             ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
             C5230 * C2342) *
                C50917 -
            (C5945 * C2342 +
             ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
             ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C50780 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C118) *
                 C2340) *
                C50749) *
               C1074 +
           ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                  C118 +
              (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                  C50780) *
                 C2340 +
             ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
             ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                C50749 -
            (C5782 * C2342 +
             ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
             ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                  C50780 +
              (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                  C118) *
                 C2340) *
                C50917) *
               C50721) *
              C50908 +
          (((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
             ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
             ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                C50749 -
            (C5231 * C2342 +
             ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
             ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                C50917) *
               C1074 +
           ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
             ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
             ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                C50917 -
            (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                  C50780 +
              (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                  C118) *
                 C2342 +
             ((C6163 + C6162) * C50780 + (C6161 + C6160) * C118) * C2341 +
             ((C6159 + C6158) * C50780 + (C6157 + C6156) * C118) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
              C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                 C118 +
             (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
              C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                 C50780) *
                C50623 * C50917 -
            ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 +
              C20908 * C1910 + C20911 * C502 + C20907 * C517 + C20910 * C499 +
              C20906 * C516) *
                 C50780 +
             (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 +
              C20908 * C1906 + C20911 * C487 + C20907 * C501 + C20910 * C486 +
              C20906 * C500) *
                 C118) *
                C50623 * C50749) *
               C1074 +
           (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
              C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
              C20909 * C14785) *
                 C118 +
             (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
              C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
              C20909 * C14787) *
                 C50780) *
                C50623 * C50749 -
            ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 +
              C20908 * C1279 + C20911 * C938 + C20907 * C947 + C20910 * C310 +
              C20906 * C327) *
                 C50780 +
             (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 +
              C20908 * C1275 + C20911 * C932 + C20907 * C937 + C20910 * C297 +
              C20906 * C311) *
                 C118) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          ((((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
              C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
              C20909 * C7435) *
                 C118 +
             (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
              C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
              C20909 * C7439) *
                 C50780) *
                C50623 * C50749 -
            ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
              C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                 C50780 +
             (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
              C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                 C118) *
                C50623 * C50917) *
               C1074 +
           (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
              C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
              C20909 * C4579) *
                 C118 +
             (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
              C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
              C20909 * C4583) *
                 C50780) *
                C50623 * C50917 -
            ((C20913 * C16727 + C20909 * C16729 + C20912 * C4578 +
              C20908 * C4583 + C20911 * C1272 + C20907 * C1278 + C20910 * C940 +
              C20906 * C948) *
                 C50780 +
             (C20913 * C16726 + C20909 * C16728 + C20912 * C4574 +
              C20908 * C4579 + C20911 * C1266 + C20907 * C1273 + C20910 * C933 +
              C20906 * C939) *
                 C118) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C50685 * C1145 -
          (C5782 * C2342 +
           ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
           ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                C50780 +
            (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                C118) *
               C2340) *
              C50685 * C1146 +
          (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                C118 +
            (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                C50780) *
               C2340 +
           ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
           ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
              C50685 * C1147 -
          (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C50780 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C118) *
               C2342 +
           ((C5172 * C4170 + C50822 * C4175 + C5171 * C1158 + C50928 * C1164) *
                C50780 +
            (C5172 * C4166 + C50822 * C4171 + C5171 * C1152 + C50928 * C1159) *
                C118) *
               C2341 +
           ((C5172 * C4172 + C50822 * C4176 + C5171 * C1160 + C50928 * C1165) *
                C50780 +
            (C5172 * C4167 + C50822 * C4173 + C5171 * C1153 + C50928 * C1161) *
                C118) *
               C2340) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C1074 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50721) *
              C1076 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50721 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C1074) *
              C1077 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50685 * C1074 -
           (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                 C50780 +
             (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                 C118) *
                C2342 +
            ((C5781 + C5780) * C50780 + (C5779 + C5778) * C118) * C2341 +
            C5782 * C2340) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C1074 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50721 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50685 * C1074 -
           ((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C8027 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C8032 +
            (C5425 + C5424) * C8026 + (C5423 + C5422) * C8031 + C5766 * C8025 +
            C5767 * C8030) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
           C12793 * C8032 + C12794 * C8027) *
              C50623 * C50685 * C1145 -
          (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
           (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
           (C12778 + C12777) * C8030) *
              C50623 * C50685 * C1146 +
          (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
           (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
           (C13719 + C13720) * C8027) *
              C50623 * C50685 * C1147 -
          ((C5172 * C11897 + C50822 * C11899 + C5171 * C9137 + C50928 * C9140) *
               C8027 +
           (C5172 * C11896 + C50822 * C11898 + C5171 * C9134 + C50928 * C9138) *
               C8032 +
           (C13720 + C13719) * C8026 + (C13718 + C13717) * C8031 +
           C13707 * C8025 + C13708 * C8030) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50685 * C1074 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
             C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
             C20909 * C4579) *
                C118 +
            (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
             C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
             C20909 * C4583) *
                C50780) *
               C50623 * C50685 * C50721 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50685 * C1074) *
              C1077 +
          (((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
             C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
                C118 +
            (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
             C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
                C50780) *
               C50623 * C50685 * C1074 -
           ((C20913 * C4576 + C20909 * C4582 + C20912 * C1270 + C20908 * C1277 +
             C20911 * C942 + C20907 * C949 + C20910 * C306 + C20906 * C325) *
                C50780 +
            (C20913 * C4573 + C20909 * C4577 + C20912 * C1265 + C20908 * C1271 +
             C20911 * C934 + C20907 * C941 + C20910 * C295 + C20906 * C307) *
                C118) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
            C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
               C118 +
           (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
            C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
               C50780) *
              C50623 * C50685 * C1145 -
          ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
            C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
               C50780 +
           (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
            C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
               C118) *
              C50623 * C50685 * C1146 +
          ((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
            C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
            C20909 * C10202) *
               C118 +
           (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
            C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
            C20909 * C10204) *
               C50780) *
              C50623 * C50685 * C1147 -
          ((C20913 * C12169 + C20909 * C12171 + C20912 * C9297 +
            C20908 * C9300 + C20911 * C4172 + C20907 * C4176 + C20910 * C1160 +
            C20906 * C1165) *
               C50780 +
           (C20913 * C12168 + C20909 * C12170 + C20912 * C9294 +
            C20908 * C9298 + C20911 * C4167 + C20907 * C4173 + C20910 * C1153 +
            C20906 * C1161) *
               C118) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C8030 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C8025 +
             (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
             C12793 * C8032 + C12794 * C8027) *
                C50623 * C1725 -
            (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
             (C13457 + C13458) * C8031 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C8025 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C8030) *
                C50623 * C50749) *
               C50916 +
           (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
             (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
             (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
                C50623 * C50749 -
            (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
             (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
             (C12778 + C12777) * C8030) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          ((((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
             (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
             (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
                C50623 * C50749 -
            (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
             (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
             (C5207 + C5206) * C8030) *
                C50623 * C1725) *
               C50916 +
           (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
             (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
             (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
                C50623 * C1725 -
            ((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C8027 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C8032 +
             (C13462 + C13461) * C8026 + (C13460 + C13459) * C8031 +
             (C6159 + C6158) * C8025 + (C6157 + C6156) * C8030) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C118 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C50780) *
                 C2340 +
             ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
             C5230 * C2342) *
                C1725 -
            (C5945 * C2342 +
             ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
             ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C50780 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C118) *
                 C2340) *
                C50749) *
               C50916 +
           ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                  C118 +
              (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                  C50780) *
                 C2340 +
             ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
             ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                C50749 -
            (C5782 * C2342 +
             ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
             ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                  C50780 +
              (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                  C118) *
                 C2340) *
                C1725) *
               C50721) *
              C50908 +
          (((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
             ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
             ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                C50749 -
            (C5231 * C2342 +
             ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
             ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                C1725) *
               C50916 +
           ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
             ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
             ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                C1725 -
            (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                  C50780 +
              (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                  C118) *
                 C2342 +
             ((C6163 + C6162) * C50780 + (C6161 + C6160) * C118) * C2341 +
             ((C6159 + C6158) * C50780 + (C6157 + C6156) * C118) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
              C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                 C118 +
             (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
              C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                 C50780) *
                C50623 * C1725 -
            ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 +
              C20908 * C1910 + C20911 * C502 + C20907 * C517 + C20910 * C499 +
              C20906 * C516) *
                 C50780 +
             (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 +
              C20908 * C1906 + C20911 * C487 + C20907 * C501 + C20910 * C486 +
              C20906 * C500) *
                 C118) *
                C50623 * C50749) *
               C50916 +
           (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
              C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
              C20909 * C14785) *
                 C118 +
             (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
              C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
              C20909 * C14787) *
                 C50780) *
                C50623 * C50749 -
            ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 +
              C20908 * C1279 + C20911 * C938 + C20907 * C947 + C20910 * C310 +
              C20906 * C327) *
                 C50780 +
             (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 +
              C20908 * C1275 + C20911 * C932 + C20907 * C937 + C20910 * C297 +
              C20906 * C311) *
                 C118) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          ((((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
              C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
              C20909 * C7435) *
                 C118 +
             (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
              C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
              C20909 * C7439) *
                 C50780) *
                C50623 * C50749 -
            ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
              C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                 C50780 +
             (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
              C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                 C118) *
                C50623 * C1725) *
               C50916 +
           (((C20910 * C296 + C20906 * C309 + C20911 * C933 + C20907 * C939 +
              C20912 * C1266 + C20908 * C1273 + C20913 * C4574 +
              C20909 * C4579) *
                 C118 +
             (C20910 * C308 + C20906 * C326 + C20911 * C940 + C20907 * C948 +
              C20912 * C1272 + C20908 * C1278 + C20913 * C4578 +
              C20909 * C4583) *
                 C50780) *
                C50623 * C1725 -
            ((C20913 * C16727 + C20909 * C16729 + C20912 * C4578 +
              C20908 * C4583 + C20911 * C1272 + C20907 * C1278 + C20910 * C940 +
              C20906 * C948) *
                 C50780 +
             (C20913 * C16726 + C20909 * C16728 + C20912 * C4574 +
              C20908 * C4579 + C20911 * C1266 + C20907 * C1273 + C20910 * C933 +
              C20906 * C939) *
                 C118) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50962 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50963 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
            (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
               C50623 * C2141) *
              C50916 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50963 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C50962 -
           ((C5172 * C12169 + C50822 * C12171 + C5171 * C9297 +
             C50928 * C9300) *
                C8027 +
            (C5172 * C12168 + C50822 * C12170 + C5171 * C9294 +
             C50928 * C9298) *
                C8032 +
            (C13890 + C13889) * C8026 + (C13888 + C13887) * C8031 +
            (C13886 + C13885) * C8025 + (C13884 + C13883) * C8030) *
               C50623 * C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50962 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50963 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C2141) *
              C50916 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50963 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50962 -
           (((C5172 * C4576 + C50822 * C4582 + C5171 * C1270 + C50928 * C1277) *
                 C50780 +
             (C5172 * C4573 + C50822 * C4577 + C5171 * C1265 + C50928 * C1271) *
                 C118) *
                C2342 +
            ((C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                 C50780 +
             (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                 C118) *
                C2341 +
            ((C5172 * C4580 + C50822 * C4584 + C5171 * C1274 + C50928 * C1279) *
                 C50780 +
             (C5172 * C4575 + C50822 * C4581 + C5171 * C1267 + C50928 * C1275) *
                 C118) *
                C2340) *
               C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50962 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50963 +
           ((C20910 * C487 + C20906 * C501 + C20911 * C1898 + C20907 * C1906 +
             C20912 * C7431 + C20908 * C7437 + C20913 * C17607 +
             C20909 * C17611) *
                C118 +
            (C20910 * C502 + C20906 * C517 + C20911 * C1905 + C20907 * C1910 +
             C20912 * C7436 + C20908 * C7440 + C20913 * C17610 +
             C20909 * C17613) *
                C50780) *
               C50623 * C2141) *
              C50916 +
          (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
             C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
             C20909 * C14785) *
                C118 +
            (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
             C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
             C20909 * C14787) *
                C50780) *
               C50623 * C50963 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C50962 -
           ((C20913 * C20351 + C20909 * C20353 + C20912 * C14784 +
             C20908 * C14787 + C20911 * C4580 + C20907 * C4584 +
             C20910 * C1274 + C20906 * C1279) *
                C50780 +
            (C20913 * C20350 + C20909 * C20352 + C20912 * C14781 +
             C20908 * C14785 + C20911 * C4575 + C20907 * C4581 +
             C20910 * C1267 + C20906 * C1275) *
                C118) *
               C50623 * C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                     C118 +
                 (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                     C50780) *
                    C2340 +
                ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
                C5230 * C2342) *
                   C1725 -
               (C5945 * C2342 +
                ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
                ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                     C50780 +
                 (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                     C118) *
                    C2340) *
                   C50749) *
                  C50669 * C1076 +
              ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
                ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
                ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                   C50749 -
               (C5231 * C2342 +
                ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
                ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                   C1725) *
                  C50669 * C1077 +
              ((C5230 * C2340 +
                ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
                ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
                   C1725 -
               (((C5172 * C511 + C50822 * C522 + C5171 * C510 + C50928 * C521) *
                     C50780 +
                 (C5172 * C492 + C50822 * C512 + C5171 * C491 + C50928 * C509) *
                     C118) *
                    C2342 +
                ((C5944 + C5943) * C50780 + (C5942 + C5941) * C118) * C2341 +
                C5945 * C2340) *
                   C50749) *
                  C50669 * C1078) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                     C118 +
                 (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                     C50780) *
                    C2340 +
                ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
                C5230 * C2342) *
                   C1725 -
               (C5945 * C2342 +
                ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
                ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                     C50780 +
                 (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                     C118) *
                    C2340) *
                   C50749) *
                  C289 +
              ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 +
                  C50822 * C1275) *
                     C118 +
                 (C5171 * C938 + C50928 * C947 + C5172 * C1274 +
                  C50822 * C1279) *
                     C50780) *
                    C2340 +
                ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
                ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                   C50749 -
               (C5782 * C2342 +
                ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
                ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                     C50780 +
                 (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                     C118) *
                    C2340) *
                   C1725) *
                  C290 +
              ((((C5171 * C298 + C50928 * C312 + C5172 * C1614 +
                  C50822 * C1622) *
                     C118 +
                 (C5171 * C313 + C50928 * C328 + C5172 * C1621 +
                  C50822 * C1626) *
                     C50780) *
                    C2340 +
                ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
                ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
                   C1725 -
               (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 +
                  C50928 * C1624) *
                     C50780 +
                 (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 +
                  C50928 * C1618) *
                     C118) *
                    C2342 +
                ((C5172 * C3666 + C50822 * C3671 + C5171 * C1619 +
                  C50928 * C1625) *
                     C50780 +
                 (C5172 * C3662 + C50822 * C3667 + C5171 * C1613 +
                  C50928 * C1620) *
                     C118) *
                    C2341 +
                ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 +
                  C50928 * C1626) *
                     C50780 +
                 (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 +
                  C50928 * C1622) *
                     C118) *
                    C2340) *
                   C50749) *
                  C291) *
             C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C1891 -
          (C5945 * C2342 +
           ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
           ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C50780 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C118) *
               C2340) *
              C1892 +
          (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C118 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C50780) *
               C2340 +
           ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
           ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
              C1893 -
          (((C5172 * C7432 + C50822 * C7438 + C5171 * C1901 + C50928 * C1908) *
                C50780 +
            (C5172 * C7429 + C50822 * C7433 + C5171 * C1896 + C50928 * C1902) *
                C118) *
               C2342 +
           ((C5172 * C7434 + C50822 * C7439 + C5171 * C1903 + C50928 * C1909) *
                C50780 +
            (C5172 * C7430 + C50822 * C7435 + C5171 * C1897 + C50928 * C1904) *
                C118) *
               C2341 +
           ((C5172 * C7436 + C50822 * C7440 + C5171 * C1905 + C50928 * C1910) *
                C50780 +
            (C5172 * C7431 + C50822 * C7437 + C5171 * C1898 + C50928 * C1906) *
                C118) *
               C2340) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
               C50623 * C50749 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C1725 -
           ((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                C8027 +
            (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                C8032 +
            (C6163 + C6162) * C8026 + (C6161 + C6160) * C8031 + C5929 * C8025 +
            C5930 * C8030) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C289 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50749 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C1725) *
              C290 +
          ((C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C1725 -
           ((C5172 * C11561 + C50822 * C11563 + C5171 * C9797 +
             C50928 * C9800) *
                C8027 +
            (C5172 * C11560 + C50822 * C11562 + C5171 * C9794 +
             C50928 * C9798) *
                C8032 +
            (C14390 + C14389) * C8026 + (C14388 + C14387) * C8031 +
            C14377 * C8025 + C14378 * C8030) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
           C12793 * C8032 + C12794 * C8027) *
              C50623 * C1891 -
          (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
           (C13457 + C13458) * C8031 +
           (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
               C8025 +
           (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
               C8030) *
              C50623 * C1892 +
          ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
               C8030 +
           (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
               C8025 +
           (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
           (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
              C50623 * C1893 -
          ((C5172 * C14782 + C50822 * C14786 + C5171 * C10201 +
            C50928 * C10204) *
               C8027 +
           (C5172 * C14780 + C50822 * C14783 + C5171 * C10198 +
            C50928 * C10202) *
               C8032 +
           (C5172 * C14784 + C50822 * C14787 + C5171 * C4580 + C50928 * C4584) *
               C8026 +
           (C5172 * C14781 + C50822 * C14785 + C5171 * C4575 + C50928 * C4581) *
               C8031 +
           (C5172 * C7436 + C50822 * C7440 + C5171 * C1905 + C50928 * C1910) *
               C8025 +
           (C5172 * C7431 + C50822 * C7437 + C5171 * C1898 + C50928 * C1906) *
               C8030) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
             C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
             C20909 * C7435) *
                C118 +
            (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
             C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
             C20909 * C7439) *
                C50780) *
               C50623 * C50749 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C1725) *
              C50669 * C1077 +
          (((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
             C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
                C118 +
            (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
             C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C7432 + C20909 * C7438 + C20912 * C1901 + C20908 * C1908 +
             C20911 * C506 + C20907 * C519 + C20910 * C495 + C20906 * C514) *
                C50780 +
            (C20913 * C7429 + C20909 * C7433 + C20912 * C1896 + C20908 * C1902 +
             C20911 * C489 + C20907 * C505 + C20910 * C484 + C20906 * C496) *
                C118) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50749) *
              C289 +
          (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
             C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
             C20909 * C14785) *
                C118 +
            (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
             C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
             C20909 * C14787) *
                C50780) *
               C50623 * C50749 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C1725) *
              C290 +
          (((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
             C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
             C20909 * C10202) *
                C118 +
            (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
             C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
             C20909 * C10204) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C14782 + C20909 * C14786 + C20912 * C10201 +
             C20908 * C10204 + C20911 * C3668 + C20907 * C3672 +
             C20910 * C1621 + C20906 * C1626) *
                C50780 +
            (C20913 * C14780 + C20909 * C14783 + C20912 * C10198 +
             C20908 * C10202 + C20911 * C3663 + C20907 * C3669 +
             C20910 * C1614 + C20906 * C1622) *
                C118) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
            C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
               C118 +
           (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
            C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
               C50780) *
              C50623 * C1891 -
          ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
            C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
               C50780 +
           (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
            C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
               C118) *
              C50623 * C1892 +
          ((C20910 * C487 + C20906 * C501 + C20911 * C1898 + C20907 * C1906 +
            C20912 * C7431 + C20908 * C7437 + C20913 * C17607 +
            C20909 * C17611) *
               C118 +
           (C20910 * C502 + C20906 * C517 + C20911 * C1905 + C20907 * C1910 +
            C20912 * C7436 + C20908 * C7440 + C20913 * C17610 +
            C20909 * C17613) *
               C50780) *
              C50623 * C1893 -
          ((C20913 * C22287 + C20909 * C22289 + C20912 * C17610 +
            C20908 * C17613 + C20911 * C7436 + C20907 * C7440 + C20910 * C1905 +
            C20906 * C1910) *
               C50780 +
           (C20913 * C22286 + C20909 * C22288 + C20912 * C17607 +
            C20908 * C17611 + C20911 * C7431 + C20907 * C7437 + C20910 * C1898 +
            C20906 * C1906) *
               C118) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50962 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50963 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
            (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
               C50623 * C2141) *
              C50669 * C50908 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
               C50623 * C50963 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50962 -
           ((C5172 * C10199 + C50822 * C10203 + C5171 * C3666 +
             C50928 * C3671) *
                C8027 +
            (C5172 * C10197 + C50822 * C10200 + C5171 * C3662 +
             C50928 * C3667) *
                C8032 +
            (C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                C8026 +
            (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                C8031 +
            (C5615 + C5614) * C8025 + (C5613 + C5612) * C8030) *
               C50623 * C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50962 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50963 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C2141) *
              C50669 * C50908 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50963 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50962 -
           (((C5172 * C1899 + C50822 * C1907 + C5171 * C508 + C50928 * C520) *
                 C50780 +
             (C5172 * C1895 + C50822 * C1900 + C5171 * C490 + C50928 * C507) *
                 C118) *
                C2342 +
            ((C5619 + C5618) * C50780 + (C5617 + C5616) * C118) * C2341 +
            ((C5615 + C5614) * C50780 + (C5613 + C5612) * C118) * C2340) *
               C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C50962 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50963 +
           ((C20910 * C487 + C20906 * C501 + C20911 * C1898 + C20907 * C1906 +
             C20912 * C7431 + C20908 * C7437 + C20913 * C17607 +
             C20909 * C17611) *
                C118 +
            (C20910 * C502 + C20906 * C517 + C20911 * C1905 + C20907 * C1910 +
             C20912 * C7436 + C20908 * C7440 + C20913 * C17610 +
             C20909 * C17613) *
                C50780) *
               C50623 * C2141) *
              C50669 * C50908 +
          (((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
             C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
             C20909 * C7435) *
                C118 +
            (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
             C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
             C20909 * C7439) *
                C50780) *
               C50623 * C50963 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C50962 -
           ((C20913 * C17608 + C20909 * C17612 + C20912 * C7434 +
             C20908 * C7439 + C20911 * C1903 + C20907 * C1909 + C20910 * C504 +
             C20906 * C518) *
                C50780 +
            (C20913 * C17606 + C20909 * C17609 + C20912 * C7430 +
             C20908 * C7435 + C20911 * C1897 + C20907 * C1904 + C20910 * C488 +
             C20906 * C503) *
                C118) *
               C50623 * C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C1725 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C289 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50749 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C1725) *
              C290 +
          ((((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C1725 -
           (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                 C50780 +
             (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                 C118) *
                C2342 +
            ((C5172 * C3666 + C50822 * C3671 + C5171 * C1619 + C50928 * C1625) *
                 C50780 +
             (C5172 * C3662 + C50822 * C3667 + C5171 * C1613 + C50928 * C1620) *
                 C118) *
                C2341 +
            ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                 C50780 +
             (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                 C118) *
                C2340) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C1725 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50669 * C1076 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50749 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C1725) *
              C50669 * C1077 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C1725 -
           (((C5172 * C511 + C50822 * C522 + C5171 * C510 + C50928 * C521) *
                 C50780 +
             (C5172 * C492 + C50822 * C512 + C5171 * C491 + C50928 * C509) *
                 C118) *
                C2342 +
            ((C5944 + C5943) * C50780 + (C5942 + C5941) * C118) * C2341 +
            C5945 * C2340) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
               C50623 * C50749 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C1725 -
           ((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                C8027 +
            (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                C8032 +
            (C6163 + C6162) * C8026 + (C6161 + C6160) * C8031 + C5929 * C8025 +
            C5930 * C8030) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C289 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50749 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C1725) *
              C290 +
          ((C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C1725 -
           ((C5172 * C11561 + C50822 * C11563 + C5171 * C9797 +
             C50928 * C9800) *
                C8027 +
            (C5172 * C11560 + C50822 * C11562 + C5171 * C9794 +
             C50928 * C9798) *
                C8032 +
            (C14390 + C14389) * C8026 + (C14388 + C14387) * C8031 +
            C14377 * C8025 + C14378 * C8030) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C20910 * C485 + C20906 * C498 + C20911 * C488 + C20907 * C503 +
             C20912 * C1897 + C20908 * C1904 + C20913 * C7430 +
             C20909 * C7435) *
                C118 +
            (C20910 * C497 + C20906 * C515 + C20911 * C504 + C20907 * C518 +
             C20912 * C1903 + C20908 * C1909 + C20913 * C7434 +
             C20909 * C7439) *
                C50780) *
               C50623 * C50749 -
           ((C20913 * C1903 + C20909 * C1909 + C20912 * C504 + C20908 * C518 +
             C20911 * C497 + C20907 * C515 + C20910 * C129 + C20906 * C141) *
                C50780 +
            (C20913 * C1897 + C20909 * C1904 + C20912 * C488 + C20908 * C503 +
             C20911 * C485 + C20907 * C498 + C20910 * C120 + C20906 * C128) *
                C118) *
               C50623 * C1725) *
              C50669 * C1077 +
          (((C20910 * C121 + C20906 * C130 + C20911 * C484 + C20907 * C496 +
             C20912 * C489 + C20908 * C505 + C20913 * C1896 + C20909 * C1902) *
                C118 +
            (C20910 * C131 + C20906 * C142 + C20911 * C495 + C20907 * C514 +
             C20912 * C506 + C20908 * C519 + C20913 * C1901 + C20909 * C1908) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C7432 + C20909 * C7438 + C20912 * C1901 + C20908 * C1908 +
             C20911 * C506 + C20907 * C519 + C20910 * C495 + C20906 * C514) *
                C50780 +
            (C20913 * C7429 + C20909 * C7433 + C20912 * C1896 + C20908 * C1902 +
             C20911 * C489 + C20907 * C505 + C20910 * C484 + C20906 * C496) *
                C118) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20910 * C119 + C20906 * C126 + C20911 * C486 + C20907 * C500 +
             C20912 * C487 + C20908 * C501 + C20913 * C1898 + C20909 * C1906) *
                C118 +
            (C20910 * C127 + C20906 * C140 + C20911 * C499 + C20907 * C516 +
             C20912 * C502 + C20908 * C517 + C20913 * C1905 + C20909 * C1910) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C7436 + C20909 * C7440 + C20912 * C1905 + C20908 * C1910 +
             C20911 * C502 + C20907 * C517 + C20910 * C499 + C20906 * C516) *
                C50780 +
            (C20913 * C7431 + C20909 * C7437 + C20912 * C1898 + C20908 * C1906 +
             C20911 * C487 + C20907 * C501 + C20910 * C486 + C20906 * C500) *
                C118) *
               C50623 * C50749) *
              C289 +
          (((C20910 * C932 + C20906 * C937 + C20911 * C1267 + C20907 * C1275 +
             C20912 * C4575 + C20908 * C4581 + C20913 * C14781 +
             C20909 * C14785) *
                C118 +
            (C20910 * C938 + C20906 * C947 + C20911 * C1274 + C20907 * C1279 +
             C20912 * C4580 + C20908 * C4584 + C20913 * C14784 +
             C20909 * C14787) *
                C50780) *
               C50623 * C50749 -
           ((C20913 * C4580 + C20909 * C4584 + C20912 * C1274 + C20908 * C1279 +
             C20911 * C938 + C20907 * C947 + C20910 * C310 + C20906 * C327) *
                C50780 +
            (C20913 * C4575 + C20909 * C4581 + C20912 * C1267 + C20908 * C1275 +
             C20911 * C932 + C20907 * C937 + C20910 * C297 + C20906 * C311) *
                C118) *
               C50623 * C1725) *
              C290 +
          (((C20910 * C298 + C20906 * C312 + C20911 * C1614 + C20907 * C1622 +
             C20912 * C3663 + C20908 * C3669 + C20913 * C10198 +
             C20909 * C10202) *
                C118 +
            (C20910 * C313 + C20906 * C328 + C20911 * C1621 + C20907 * C1626 +
             C20912 * C3668 + C20908 * C3672 + C20913 * C10201 +
             C20909 * C10204) *
                C50780) *
               C50623 * C1725 -
           ((C20913 * C14782 + C20909 * C14786 + C20912 * C10201 +
             C20908 * C10204 + C20911 * C3668 + C20907 * C3672 +
             C20910 * C1621 + C20906 * C1626) *
                C50780 +
            (C20913 * C14780 + C20909 * C14783 + C20912 * C10198 +
             C20908 * C10202 + C20911 * C3663 + C20907 * C3669 +
             C20910 * C1614 + C20906 * C1622) *
                C118) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50685 * C50916 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50685 * C50721) *
              C50958 +
          ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
            ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
            ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
               C50685 * C50721 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50685 * C50916) *
              C50959 +
          ((C31698 * C50957 +
            ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
            ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
               C50685 * C50916 -
           (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                 C50780 +
             (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                 C118) *
                C22718 +
            ((C32249 + C32248) * C50780 + (C32247 + C32246) * C118) * C50941 +
            C32250 * C50957) *
               C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C118 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C50780) *
                 C50957 +
             ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
             C31698 * C22718) *
                C50917 -
            (C32413 * C22718 +
             ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
             ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C50780 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C118) *
                 C50957) *
                C50749) *
               C50916 +
           ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 +
               C50822 * C1275) *
                  C118 +
              (C31639 * C938 + C31637 * C947 + C31640 * C1274 +
               C50822 * C1279) *
                  C50780) *
                 C50957 +
             ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
             ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
                C50749 -
            (C32250 * C22718 +
             ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
             ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                  C50780 +
              (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                  C118) *
                 C50957) *
                C50917) *
               C50721) *
              C292 +
          (((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
             ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
             ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
                C50749 -
            (C31699 * C22718 +
             ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
             ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
                C50917) *
               C50916 +
           ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
             ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
             ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
                C50917 -
            (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 +
               C31637 * C950) *
                  C50780 +
              (C31640 * C1264 + C50822 * C1269 + C31639 * C935 +
               C31637 * C943) *
                  C118) *
                 C22718 +
             ((C32631 + C32630) * C50780 + (C32629 + C32628) * C118) * C50941 +
             ((C32627 + C32626) * C50780 + (C32625 + C32624) * C118) * C50957) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50685 * C289 -
           (((C31878 + C31879) * C50780 + (C31880 + C31881) * C118) * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50685 * C290 +
           (((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                 C118 +
             (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                 C50780) *
                C50957 +
            ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
            ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
               C50685 * C291) *
              C292 +
          ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
            ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
            ((C31639 * C294 + C31637 * C305 + C31640 * C935 + C50822 * C943) *
                 C118 +
             (C31639 * C304 + C31637 * C324 + C31640 * C944 + C50822 * C950) *
                 C50780) *
                C22718) *
               C50685 * C290 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50685 * C289 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50780 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C118) *
                C22718 +
            ((C31893 + C31892) * C50780 + (C31891 + C31890) * C118) * C50941 +
            ((C31889 + C31888) * C50780 + (C31887 + C31886) * C118) * C50957) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C118 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50780) *
               C50957 +
           ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
           C31698 * C22718) *
              C50685 * C50669 * C113 -
          (C31699 * C22718 +
           ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
           ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
              C50685 * C50669 * C114 +
          (C31698 * C50957 +
           ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
           ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
              C50685 * C50669 * C115 -
          (((C31640 * C789 + C50822 * C791 + C31639 * C137 + C31637 * C145) *
                C50780 +
            (C31640 * C788 + C50822 * C790 + C31639 * C124 + C31637 * C136) *
                C118) *
               C22718 +
           ((C31689 + C31688) * C50780 + (C31687 + C31686) * C118) * C50941 +
           C31699 * C50957) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C480 -
           (((C32072 + C32073) * C50780 + (C32074 + C32075) * C118) * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C481 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C118 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50780) *
                C50957 +
            ((C32080 + C32081) * C118 + (C32082 + C32083) * C50780) * C50941 +
            ((C32084 + C32085) * C118 + (C32086 + C32087) * C50780) * C22718) *
               C482) *
              C50669 * C292 +
          ((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
            ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
            ((C31639 * C483 + C31637 * C494 + C31640 * C490 + C50822 * C507) *
                 C118 +
             (C31639 * C493 + C31637 * C513 + C31640 * C508 + C50822 * C520) *
                 C50780) *
                C22718) *
               C481 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C480 -
           (((C31640 * C1899 + C50822 * C1907 + C31639 * C508 + C31637 * C520) *
                 C50780 +
             (C31640 * C1895 + C50822 * C1900 + C31639 * C490 + C31637 * C507) *
                 C118) *
                C22718 +
            ((C32087 + C32086) * C50780 + (C32085 + C32084) * C118) * C50941 +
            ((C32083 + C32082) * C50780 + (C32081 + C32080) * C118) * C50957) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50917 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50749) *
              C50669 * C50958 +
          ((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
            ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
            ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
               C50749 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50917) *
              C50669 * C50959 +
          ((C31698 * C50957 +
            ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
            ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
               C50917 -
           (((C31640 * C511 + C50822 * C522 + C31639 * C510 + C31637 * C521) *
                 C50780 +
             (C31640 * C492 + C50822 * C512 + C31639 * C491 + C31637 * C509) *
                 C118) *
                C22718 +
            ((C32412 + C32411) * C50780 + (C32410 + C32409) * C118) * C50941 +
            C32413 * C50957) *
               C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C118 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50780) *
               C50957 +
           ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
           C31698 * C22718) *
              C50685 * C50669 * C113 -
          (C31699 * C22718 +
           ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
           ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
              C50685 * C50669 * C114 +
          (C31698 * C50957 +
           ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
           ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
              C50685 * C50669 * C115 -
          (((C31640 * C789 + C50822 * C791 + C31639 * C137 + C31637 * C145) *
                C50780 +
            (C31640 * C788 + C50822 * C790 + C31639 * C124 + C31637 * C136) *
                C118) *
               C22718 +
           ((C31689 + C31688) * C50780 + (C31687 + C31686) * C118) * C50941 +
           C31699 * C50957) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50685 * C289 -
           (((C31878 + C31879) * C50780 + (C31880 + C31881) * C118) * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50685 * C290 +
           (((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                 C118 +
             (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                 C50780) *
                C50957 +
            ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
            ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
               C50685 * C291) *
              C292 +
          ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
            ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
            ((C31639 * C294 + C31637 * C305 + C31640 * C935 + C50822 * C943) *
                 C118 +
             (C31639 * C304 + C31637 * C324 + C31640 * C944 + C50822 * C950) *
                 C50780) *
                C22718) *
               C50685 * C290 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50685 * C289 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50780 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C118) *
                C22718 +
            ((C31893 + C31892) * C50780 + (C31891 + C31890) * C118) * C50941 +
            ((C31889 + C31888) * C50780 + (C31887 + C31886) * C118) * C50957) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50685 * C50960 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50685 * C50961 +
           (((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                 C118 +
             (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                 C50780) *
                C50957 +
            ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
            ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
               C50685 * C1380) *
              C50908 +
          ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
            ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
            ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
               C50685 * C50961 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50685 * C50960 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50780 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C118) *
                C22718 +
            ((C31893 + C31892) * C50780 + (C31891 + C31890) * C118) * C50941 +
            ((C31889 + C31888) * C50780 + (C31887 + C31886) * C118) * C50957) *
               C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50917 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50749) *
              C50960 +
          ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 + C50822 * C1275) *
                 C118 +
             (C31639 * C938 + C31637 * C947 + C31640 * C1274 + C50822 * C1279) *
                 C50780) *
                C50957 +
            ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
            ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
               C50749 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50917) *
              C50961 +
          ((((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                 C118 +
             (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                 C50780) *
                C50957 +
            ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
            ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
               C50917 -
           (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
              C31637 * C1624) *
                 C50780 +
             (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
              C31637 * C1618) *
                 C118) *
                C22718 +
            ((C31640 * C3666 + C50822 * C3671 + C31639 * C1619 +
              C31637 * C1625) *
                 C50780 +
             (C31640 * C3662 + C50822 * C3667 + C31639 * C1613 +
              C31637 * C1620) *
                 C118) *
                C50941 +
            ((C31640 * C3668 + C50822 * C3672 + C31639 * C1621 +
              C31637 * C1626) *
                 C50780 +
             (C31640 * C3663 + C50822 * C3669 + C31639 * C1614 +
              C31637 * C1622) *
                 C118) *
                C50957) *
               C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C118 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50780) *
               C50957 +
           ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
           C31698 * C22718) *
              C50685 * C1145 -
          (C32250 * C22718 +
           ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
           ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                C50780 +
            (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                C118) *
               C50957) *
              C50685 * C1146 +
          (((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                C118 +
            (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                C50780) *
               C50957 +
           ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
           ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
              C50685 * C1147 -
          (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
             C31637 * C1163) *
                C50780 +
            (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
             C31637 * C1157) *
                C118) *
               C22718 +
           ((C31640 * C4170 + C50822 * C4175 + C31639 * C1158 +
             C31637 * C1164) *
                C50780 +
            (C31640 * C4166 + C50822 * C4171 + C31639 * C1152 +
             C31637 * C1159) *
                C118) *
               C50941 +
           ((C31640 * C4172 + C50822 * C4176 + C31639 * C1160 +
             C31637 * C1165) *
                C50780 +
            (C31640 * C4167 + C50822 * C4173 + C31639 * C1153 +
             C31637 * C1161) *
                C118) *
               C50957) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50685 * C1074 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50685 * C50721) *
              C1076 +
          ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
            ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
            ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
               C50685 * C50721 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50685 * C1074) *
              C1077 +
          ((C31698 * C50957 +
            ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
            ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
               C50685 * C1074 -
           (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                 C50780 +
             (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                 C118) *
                C22718 +
            ((C32249 + C32248) * C50780 + (C32247 + C32246) * C118) * C50941 +
            C32250 * C50957) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C480 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C481 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C118 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50780) *
                C50957 +
            ((C32080 + C32081) * C118 + (C32082 + C32083) * C50780) * C50941 +
            ((C32084 + C32085) * C118 + (C32086 + C32087) * C50780) * C22718) *
               C482) *
              C1074 +
          ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 + C50822 * C1275) *
                 C118 +
             (C31639 * C938 + C31637 * C947 + C31640 * C1274 + C50822 * C1279) *
                 C50780) *
                C50957 +
            ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
            ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
               C481 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C480 -
           (((C31640 * C4576 + C50822 * C4582 + C31639 * C1270 +
              C31637 * C1277) *
                 C50780 +
             (C31640 * C4573 + C50822 * C4577 + C31639 * C1265 +
              C31637 * C1271) *
                 C118) *
                C22718 +
            ((C31640 * C4578 + C50822 * C4583 + C31639 * C1272 +
              C31637 * C1278) *
                 C50780 +
             (C31640 * C4574 + C50822 * C4579 + C31639 * C1266 +
              C31637 * C1273) *
                 C118) *
                C50941 +
            ((C31640 * C4580 + C50822 * C4584 + C31639 * C1274 +
              C31637 * C1279) *
                 C50780 +
             (C31640 * C4575 + C50822 * C4581 + C31639 * C1267 +
              C31637 * C1275) *
                 C118) *
                C50957) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C118 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C50780) *
                 C50957 +
             ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
             C31698 * C22718) *
                C50917 -
            (C32413 * C22718 +
             ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
             ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C50780 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C118) *
                 C50957) *
                C50749) *
               C1074 +
           ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 +
               C50822 * C1275) *
                  C118 +
              (C31639 * C938 + C31637 * C947 + C31640 * C1274 +
               C50822 * C1279) *
                  C50780) *
                 C50957 +
             ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
             ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
                C50749 -
            (C32250 * C22718 +
             ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
             ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                  C50780 +
              (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                  C118) *
                 C50957) *
                C50917) *
               C50721) *
              C50908 +
          (((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
             ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
             ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
                C50749 -
            (C31699 * C22718 +
             ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
             ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
                C50917) *
               C1074 +
           ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
             ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
             ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
                C50917 -
            (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 +
               C31637 * C950) *
                  C50780 +
              (C31640 * C1264 + C50822 * C1269 + C31639 * C935 +
               C31637 * C943) *
                  C118) *
                 C22718 +
             ((C32631 + C32630) * C50780 + (C32629 + C32628) * C118) * C50941 +
             ((C32627 + C32626) * C50780 + (C32625 + C32624) * C118) * C50957) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50685 * C1074 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50685 * C50721) *
              C1076 +
          ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
            ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
            ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
               C50685 * C50721 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50685 * C1074) *
              C1077 +
          ((C31698 * C50957 +
            ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
            ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
               C50685 * C1074 -
           (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                 C50780 +
             (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                 C118) *
                C22718 +
            ((C32249 + C32248) * C50780 + (C32247 + C32246) * C118) * C50941 +
            C32250 * C50957) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C118 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50780) *
               C50957 +
           ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
           C31698 * C22718) *
              C50685 * C1145 -
          (C32250 * C22718 +
           ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
           ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                C50780 +
            (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                C118) *
               C50957) *
              C50685 * C1146 +
          (((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                C118 +
            (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                C50780) *
               C50957 +
           ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
           ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
              C50685 * C1147 -
          (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
             C31637 * C1163) *
                C50780 +
            (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
             C31637 * C1157) *
                C118) *
               C22718 +
           ((C31640 * C4170 + C50822 * C4175 + C31639 * C1158 +
             C31637 * C1164) *
                C50780 +
            (C31640 * C4166 + C50822 * C4171 + C31639 * C1152 +
             C31637 * C1159) *
                C118) *
               C50941 +
           ((C31640 * C4172 + C50822 * C4176 + C31639 * C1160 +
             C31637 * C1165) *
                C50780 +
            (C31640 * C4167 + C50822 * C4173 + C31639 * C1153 +
             C31637 * C1161) *
                C118) *
               C50957) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C118 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C50780) *
                 C50957 +
             ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
             C31698 * C22718) *
                C1725 -
            (C32413 * C22718 +
             ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
             ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C50780 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C118) *
                 C50957) *
                C50749) *
               C50916 +
           ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 +
               C50822 * C1275) *
                  C118 +
              (C31639 * C938 + C31637 * C947 + C31640 * C1274 +
               C50822 * C1279) *
                  C50780) *
                 C50957 +
             ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
             ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
                C50749 -
            (C32250 * C22718 +
             ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
             ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                  C50780 +
              (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                  C118) *
                 C50957) *
                C1725) *
               C50721) *
              C50908 +
          (((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
             ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
             ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
                C50749 -
            (C31699 * C22718 +
             ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
             ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
                C1725) *
               C50916 +
           ((((C31885 + C31884) * C118 + (C31883 + C31882) * C50780) * C50957 +
             ((C31881 + C31880) * C118 + (C31879 + C31878) * C50780) * C50941 +
             ((C32246 + C32247) * C118 + (C32248 + C32249) * C50780) * C22718) *
                C1725 -
            (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 +
               C31637 * C950) *
                  C50780 +
              (C31640 * C1264 + C50822 * C1269 + C31639 * C935 +
               C31637 * C943) *
                  C118) *
                 C22718 +
             ((C32631 + C32630) * C50780 + (C32629 + C32628) * C118) * C50941 +
             ((C32627 + C32626) * C50780 + (C32625 + C32624) * C118) * C50957) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50962 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50963 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C118 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50780) *
                C50957 +
            ((C32080 + C32081) * C118 + (C32082 + C32083) * C50780) * C50941 +
            ((C32084 + C32085) * C118 + (C32086 + C32087) * C50780) * C22718) *
               C2141) *
              C50916 +
          ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 + C50822 * C1275) *
                 C118 +
             (C31639 * C938 + C31637 * C947 + C31640 * C1274 + C50822 * C1279) *
                 C50780) *
                C50957 +
            ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
            ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
               C50963 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C50962 -
           (((C31640 * C4576 + C50822 * C4582 + C31639 * C1270 +
              C31637 * C1277) *
                 C50780 +
             (C31640 * C4573 + C50822 * C4577 + C31639 * C1265 +
              C31637 * C1271) *
                 C118) *
                C22718 +
            ((C31640 * C4578 + C50822 * C4583 + C31639 * C1272 +
              C31637 * C1278) *
                 C50780 +
             (C31640 * C4574 + C50822 * C4579 + C31639 * C1266 +
              C31637 * C1273) *
                 C118) *
                C50941 +
            ((C31640 * C4580 + C50822 * C4584 + C31639 * C1274 +
              C31637 * C1279) *
                 C50780 +
             (C31640 * C4575 + C50822 * C4581 + C31639 * C1267 +
              C31637 * C1275) *
                 C118) *
                C50957) *
               C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C1725 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50749) *
              C289 +
          ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 + C50822 * C1275) *
                 C118 +
             (C31639 * C938 + C31637 * C947 + C31640 * C1274 + C50822 * C1279) *
                 C50780) *
                C50957 +
            ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
            ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
               C50749 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C1725) *
              C290 +
          ((((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                 C118 +
             (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                 C50780) *
                C50957 +
            ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
            ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
               C1725 -
           (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
              C31637 * C1624) *
                 C50780 +
             (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
              C31637 * C1618) *
                 C118) *
                C22718 +
            ((C31640 * C3666 + C50822 * C3671 + C31639 * C1619 +
              C31637 * C1625) *
                 C50780 +
             (C31640 * C3662 + C50822 * C3667 + C31639 * C1613 +
              C31637 * C1620) *
                 C118) *
                C50941 +
            ((C31640 * C3668 + C50822 * C3672 + C31639 * C1621 +
              C31637 * C1626) *
                 C50780 +
             (C31640 * C3663 + C50822 * C3669 + C31639 * C1614 +
              C31637 * C1622) *
                 C118) *
                C50957) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C1725 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50749) *
              C50669 * C1076 +
          ((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
            ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
            ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
               C50749 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C1725) *
              C50669 * C1077 +
          ((C31698 * C50957 +
            ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
            ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
               C1725 -
           (((C31640 * C511 + C50822 * C522 + C31639 * C510 + C31637 * C521) *
                 C50780 +
             (C31640 * C492 + C50822 * C512 + C31639 * C491 + C31637 * C509) *
                 C118) *
                C22718 +
            ((C32412 + C32411) * C50780 + (C32410 + C32409) * C118) * C50941 +
            C32413 * C50957) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C118 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50780) *
               C50957 +
           ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
           C31698 * C22718) *
              C1891 -
          (C32413 * C22718 +
           ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
           ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50780 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C118) *
               C50957) *
              C1892 +
          (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C118 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C50780) *
               C50957 +
           ((C32080 + C32081) * C118 + (C32082 + C32083) * C50780) * C50941 +
           ((C32084 + C32085) * C118 + (C32086 + C32087) * C50780) * C22718) *
              C1893 -
          (((C31640 * C7432 + C50822 * C7438 + C31639 * C1901 +
             C31637 * C1908) *
                C50780 +
            (C31640 * C7429 + C50822 * C7433 + C31639 * C1896 +
             C31637 * C1902) *
                C118) *
               C22718 +
           ((C31640 * C7434 + C50822 * C7439 + C31639 * C1903 +
             C31637 * C1909) *
                C50780 +
            (C31640 * C7430 + C50822 * C7435 + C31639 * C1897 +
             C31637 * C1904) *
                C118) *
               C50941 +
           ((C31640 * C7436 + C50822 * C7440 + C31639 * C1905 +
             C31637 * C1910) *
                C50780 +
            (C31640 * C7431 + C50822 * C7437 + C31639 * C1898 +
             C31637 * C1906) *
                C118) *
               C50957) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C50962 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50963 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C118 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50780) *
                C50957 +
            ((C32080 + C32081) * C118 + (C32082 + C32083) * C50780) * C50941 +
            ((C32084 + C32085) * C118 + (C32086 + C32087) * C50780) * C22718) *
               C2141) *
              C50669 * C50908 +
          ((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
            ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
            ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
               C50963 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C50962 -
           (((C31640 * C1899 + C50822 * C1907 + C31639 * C508 + C31637 * C520) *
                 C50780 +
             (C31640 * C1895 + C50822 * C1900 + C31639 * C490 + C31637 * C507) *
                 C118) *
                C22718 +
            ((C32087 + C32086) * C50780 + (C32085 + C32084) * C118) * C50941 +
            ((C32083 + C32082) * C50780 + (C32081 + C32080) * C118) * C50957) *
               C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C1725 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50749) *
              C50669 * C1076 +
          ((((C32079 + C32078) * C118 + (C32077 + C32076) * C50780) * C50957 +
            ((C32075 + C32074) * C118 + (C32073 + C32072) * C50780) * C50941 +
            ((C32409 + C32410) * C118 + (C32411 + C32412) * C50780) * C22718) *
               C50749 -
           (C31699 * C22718 +
            ((C31681 + C31680) * C50780 + (C31679 + C31678) * C118) * C50941 +
            ((C31677 + C31676) * C50780 + (C31675 + C31674) * C118) * C50957) *
               C1725) *
              C50669 * C1077 +
          ((C31698 * C50957 +
            ((C31685 + C31684) * C118 + (C31683 + C31682) * C50780) * C50941 +
            ((C31686 + C31687) * C118 + (C31688 + C31689) * C50780) * C22718) *
               C1725 -
           (((C31640 * C511 + C50822 * C522 + C31639 * C510 + C31637 * C521) *
                 C50780 +
             (C31640 * C492 + C50822 * C512 + C31639 * C491 + C31637 * C509) *
                 C118) *
                C22718 +
            ((C32412 + C32411) * C50780 + (C32410 + C32409) * C118) * C50941 +
            C32413 * C50957) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C118 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50780) *
                C50957 +
            ((C31674 + C31675) * C118 + (C31676 + C31677) * C50780) * C50941 +
            C31698 * C22718) *
               C1725 -
           (C32413 * C22718 +
            ((C32076 + C32077) * C50780 + (C32078 + C32079) * C118) * C50941 +
            ((C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50780 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C118) *
                C50957) *
               C50749) *
              C289 +
          ((((C31639 * C932 + C31637 * C937 + C31640 * C1267 + C50822 * C1275) *
                 C118 +
             (C31639 * C938 + C31637 * C947 + C31640 * C1274 + C50822 * C1279) *
                 C50780) *
                C50957 +
            ((C32624 + C32625) * C118 + (C32626 + C32627) * C50780) * C50941 +
            ((C32628 + C32629) * C118 + (C32630 + C32631) * C50780) * C22718) *
               C50749 -
           (C32250 * C22718 +
            ((C31882 + C31883) * C50780 + (C31884 + C31885) * C118) * C50941 +
            ((C31640 * C938 + C50822 * C947 + C31639 * C310 + C31637 * C327) *
                 C50780 +
             (C31640 * C932 + C50822 * C937 + C31639 * C297 + C31637 * C311) *
                 C118) *
                C50957) *
               C1725) *
              C290 +
          ((((C31639 * C298 + C31637 * C312 + C31640 * C1614 + C50822 * C1622) *
                 C118 +
             (C31639 * C313 + C31637 * C328 + C31640 * C1621 + C50822 * C1626) *
                 C50780) *
                C50957 +
            ((C31886 + C31887) * C118 + (C31888 + C31889) * C50780) * C50941 +
            ((C31890 + C31891) * C118 + (C31892 + C31893) * C50780) * C22718) *
               C1725 -
           (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
              C31637 * C1624) *
                 C50780 +
             (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
              C31637 * C1618) *
                 C118) *
                C22718 +
            ((C31640 * C3666 + C50822 * C3671 + C31639 * C1619 +
              C31637 * C1625) *
                 C50780 +
             (C31640 * C3662 + C50822 * C3667 + C31639 * C1613 +
              C31637 * C1620) *
                 C118) *
                C50941 +
            ((C31640 * C3668 + C50822 * C3672 + C31639 * C1621 +
              C31637 * C1626) *
                 C50780 +
             (C31640 * C3663 + C50822 * C3669 + C31639 * C1614 +
              C31637 * C1622) *
                 C118) *
                C50957) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50685 * C50916 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50685 * C50721) *
              C50958 +
          (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
             C34731 * C50796) *
                C25428 +
            (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50685 * C50916) *
              C50959 +
          (((C31690 * C2343 + C31691 * C50926 + C35152 * C2344 +
             C35153 * C50796) *
                C25428 +
            ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
             (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
                C50628) *
               C50685 * C50916 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50796 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C2344 +
             (C32249 + C32248) * C50926 + (C32247 + C32246) * C2343) *
                C50628 +
            ((C31893 + C31892) * C50796 + (C31891 + C31890) * C2344 +
             C32234 * C50926 + C32235 * C2343) *
                C25428) *
               C50685 * C50721) *
              C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C2343 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C50926 +
              (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                 C25428 +
             ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
              C34716 * C2344 + C34717 * C50796) *
                 C50628) *
                C50917 -
            ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
              (C32078 + C32079) * C2343) *
                 C50628 +
             ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
              (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C50926 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C2343) *
                 C25428) *
                C50749) *
               C50916 +
           ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
              (C31639 * C1614 + C31637 * C1622 + C31640 * C3663 +
               C50822 * C3669) *
                  C2344 +
              (C31639 * C1621 + C31637 * C1626 + C31640 * C3668 +
               C50822 * C3672) *
                  C50796) *
                 C25428 +
             (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
              (C35632 + C35633) * C50796) *
                 C50628) *
                C50749 -
            ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
              C34721 * C2343) *
                 C50628 +
             ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
              (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                 C25428) *
                C50917) *
               C50721) *
              C292 +
          (((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
              C35616 * C2344 + C35617 * C50796) *
                 C25428 +
             ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
              (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                 C50628) *
                C50749 -
            ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
              (C31679 + C31678) * C2343) *
                 C50628 +
             (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
              (C31675 + C31674) * C2343) *
                 C25428) *
                C50917) *
               C50916 +
           (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
              C34731 * C50796) *
                 C25428 +
             (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
              (C31892 + C31893) * C50796) *
                 C50628) *
                C50917 -
            (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
               C31637 * C1624) *
                  C50796 +
              (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
               C31637 * C1618) *
                  C2344 +
              (C32631 + C32630) * C50926 + (C32629 + C32628) * C2343) *
                 C50628 +
             ((C35633 + C35632) * C50796 + (C35631 + C35630) * C2344 +
              C35606 * C50926 + C35607 * C2343) *
                 C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50685 * C289 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50685 * C290 +
           (((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
             (C31639 * C1153 + C31637 * C1161 + C31640 * C4167 +
              C50822 * C4173) *
                 C2344 +
             (C31639 * C1160 + C31637 * C1165 + C31640 * C4172 +
              C50822 * C4176) *
                 C50796) *
                C25428 +
            (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50685 * C291) *
              C292 +
          (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
             C34731 * C50796) *
                C25428 +
            ((C31881 + C31880) * C2343 + (C31879 + C31878) * C50926 +
             (C31890 + C31891) * C2344 + (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C290 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50685 * C289 -
           (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
              C31637 * C1163) *
                 C50796 +
             (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
              C31637 * C1157) *
                 C2344 +
             (C31893 + C31892) * C50926 + (C31891 + C31890) * C2343) *
                C50628 +
            ((C34751 + C34750) * C50796 + (C34749 + C34748) * C2344 +
             C34718 * C50926 + C34719 * C2343) *
                C25428) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C2343 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50926 +
            (C31639 * C297 + C31637 * C311 + C31640 * C932 + C50822 * C937) *
                C2344 +
            (C31639 * C310 + C31637 * C327 + C31640 * C938 + C50822 * C947) *
                C50796) *
               C25428 +
           ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
            (C31885 + C31884) * C2344 + (C31883 + C31882) * C50796) *
               C50628) *
              C50685 * C50669 * C113 -
          ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
            (C31679 + C31678) * C2343) *
               C50628 +
           ((C31882 + C31883) * C50796 + (C31884 + C31885) * C2344 +
            (C31677 + C31676) * C50926 + (C31675 + C31674) * C2343) *
               C25428) *
              C50685 * C50669 * C114 +
          ((C31690 * C2343 + C31691 * C50926 + (C31881 + C31880) * C2344 +
            (C31879 + C31878) * C50796) *
               C25428 +
           ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
            (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                C50796 +
            (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                C2344 +
            (C31689 + C31688) * C50926 + (C31687 + C31686) * C2343) *
               C50628 +
           ((C32249 + C32248) * C50796 + (C32247 + C32246) * C2344 +
            C31692 * C50926 + C31693 * C2343) *
               C25428) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C480 -
           (((C32627 + C32626) * C50796 + (C32625 + C32624) * C2344 +
             (C32076 + C32077) * C50926 + (C32078 + C32079) * C2343) *
                C50628 +
            ((C31640 * C1274 + C50822 * C1279 + C31639 * C938 + C31637 * C947) *
                 C50796 +
             (C31640 * C1267 + C50822 * C1275 + C31639 * C932 + C31637 * C937) *
                 C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C481 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C2343 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50926 +
             (C31639 * C1267 + C31637 * C1275 + C31640 * C4575 +
              C50822 * C4581) *
                 C2344 +
             (C31639 * C1274 + C31637 * C1279 + C31640 * C4580 +
              C50822 * C4584) *
                 C50796) *
                C25428 +
            ((C32080 + C32081) * C2343 + (C32082 + C32083) * C50926 +
             (C34954 + C34955) * C2344 + (C34956 + C34957) * C50796) *
                C50628) *
               C482) *
              C50669 * C292 +
          ((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
             (C32624 + C32625) * C2344 + (C32626 + C32627) * C50796) *
                C25428 +
            ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
             (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                C50628) *
               C481 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C480 -
           (((C31640 * C4576 + C50822 * C4582 + C31639 * C1270 +
              C31637 * C1277) *
                 C50796 +
             (C31640 * C4573 + C50822 * C4577 + C31639 * C1265 +
              C31637 * C1271) *
                 C2344 +
             (C32087 + C32086) * C50926 + (C32085 + C32084) * C2343) *
                C50628 +
            ((C34957 + C34956) * C50796 + (C34955 + C34954) * C2344 +
             (C32083 + C32082) * C50926 + (C32081 + C32080) * C2343) *
                C25428) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50917 -
           (((C32627 + C32626) * C50796 + (C32625 + C32624) * C2344 +
             (C32076 + C32077) * C50926 + (C32078 + C32079) * C2343) *
                C50628 +
            ((C31640 * C1274 + C50822 * C1279 + C31639 * C938 + C31637 * C947) *
                 C50796 +
             (C31640 * C1267 + C50822 * C1275 + C31639 * C932 + C31637 * C937) *
                 C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50749) *
              C50669 * C50958 +
          ((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
             (C32624 + C32625) * C2344 + (C32626 + C32627) * C50796) *
                C25428 +
            ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
             (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                C50628) *
               C50749 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50917) *
              C50669 * C50959 +
          (((C31690 * C2343 + C31691 * C50926 + C35152 * C2344 +
             C35153 * C50796) *
                C25428 +
            ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
             (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
                C50628) *
               C50917 -
           (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 + C31637 * C950) *
                 C50796 +
             (C31640 * C1264 + C50822 * C1269 + C31639 * C935 + C31637 * C943) *
                 C2344 +
             (C32412 + C32411) * C50926 + (C32410 + C32409) * C2343) *
                C50628 +
            ((C32631 + C32630) * C50796 + (C32629 + C32628) * C2344 +
             C32397 * C50926 + C32398 * C2343) *
                C25428) *
               C50749) *
              C50669 * C673)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C2343 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50926 +
            (C31639 * C297 + C31637 * C311 + C31640 * C932 + C50822 * C937) *
                C2344 +
            (C31639 * C310 + C31637 * C327 + C31640 * C938 + C50822 * C947) *
                C50796) *
               C25428 +
           ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
            (C31885 + C31884) * C2344 + (C31883 + C31882) * C50796) *
               C50628) *
              C50685 * C50669 * C113 -
          ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
            (C31679 + C31678) * C2343) *
               C50628 +
           ((C31882 + C31883) * C50796 + (C31884 + C31885) * C2344 +
            (C31677 + C31676) * C50926 + (C31675 + C31674) * C2343) *
               C25428) *
              C50685 * C50669 * C114 +
          ((C31690 * C2343 + C31691 * C50926 + (C31881 + C31880) * C2344 +
            (C31879 + C31878) * C50796) *
               C25428 +
           ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
            (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
               C50628) *
              C50685 * C50669 * C115 -
          (((C31640 * C945 + C50822 * C951 + C31639 * C321 + C31637 * C332) *
                C50796 +
            (C31640 * C936 + C50822 * C946 + C31639 * C302 + C31637 * C320) *
                C2344 +
            (C31689 + C31688) * C50926 + (C31687 + C31686) * C2343) *
               C50628 +
           ((C32249 + C32248) * C50796 + (C32247 + C32246) * C2344 +
            C31692 * C50926 + C31693 * C2343) *
               C25428) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50685 * C289 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50685 * C290 +
           (((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
             (C31639 * C1153 + C31637 * C1161 + C31640 * C4167 +
              C50822 * C4173) *
                 C2344 +
             (C31639 * C1160 + C31637 * C1165 + C31640 * C4172 +
              C50822 * C4176) *
                 C50796) *
                C25428 +
            (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50685 * C291) *
              C292 +
          (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
             C34731 * C50796) *
                C25428 +
            ((C31881 + C31880) * C2343 + (C31879 + C31878) * C50926 +
             (C31890 + C31891) * C2344 + (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C290 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50685 * C289 -
           (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
              C31637 * C1163) *
                 C50796 +
             (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
              C31637 * C1157) *
                 C2344 +
             (C31893 + C31892) * C50926 + (C31891 + C31890) * C2343) *
                C50628 +
            ((C34751 + C34750) * C50796 + (C34749 + C34748) * C2344 +
             C34718 * C50926 + C34719 * C2343) *
                C25428) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50685 * C50960 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50685 * C50961 +
           (((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
             (C35966 + C35967) * C2344 + (C35968 + C35969) * C50796) *
                C25428 +
            (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50685 * C1380) *
              C50908 +
          (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
             C34731 * C50796) *
                C25428 +
            (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50961 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50685 * C50960 -
           (((C31640 * C4168 + C50822 * C4174 + C31639 * C1156 +
              C31637 * C1163) *
                 C50796 +
             (C31640 * C4165 + C50822 * C4169 + C31639 * C1151 +
              C31637 * C1157) *
                 C2344 +
             (C31893 + C31892) * C50926 + (C31891 + C31890) * C2343) *
                C50628 +
            ((C34751 + C34750) * C50796 + (C34749 + C34748) * C2344 +
             C34718 * C50926 + C34719 * C2343) *
                C25428) *
               C50685 * C1380) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50917 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50749) *
              C50960 +
          ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
             (C36830 + C36831) * C2344 + (C36832 + C36833) * C50796) *
                C25428 +
            (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50749 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50917) *
              C50961 +
          ((((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
             (C35966 + C35967) * C2344 + (C35968 + C35969) * C50796) *
                C25428 +
            (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C50917 -
           (((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C50796 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C2344 +
             (C35633 + C35632) * C50926 + (C35631 + C35630) * C2343) *
                C50628 +
            ((C31640 * C9297 + C50822 * C9300 + C31639 * C4172 +
              C31637 * C4176) *
                 C50796 +
             (C31640 * C9294 + C50822 * C9298 + C31639 * C4167 +
              C31637 * C4173) *
                 C2344 +
             (C36833 + C36832) * C50926 + (C36831 + C36830) * C2343) *
                C25428) *
               C50749) *
              C1380) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C2343 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50926 +
            (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
               C25428 +
           ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
            C34716 * C2344 + C34717 * C50796) *
               C50628) *
              C50685 * C1145 -
          ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
            C34721 * C2343) *
               C50628 +
           ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
            (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
               C25428) *
              C50685 * C1146 +
          (((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
            (C35966 + C35967) * C2344 + (C35968 + C35969) * C50796) *
               C25428 +
           (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
            (C34750 + C34751) * C50796) *
               C50628) *
              C50685 * C1147 -
          (((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C50796 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C2344 +
            (C34751 + C34750) * C50926 + (C34749 + C34748) * C2343) *
               C50628 +
           ((C31640 * C9797 + C50822 * C9800 + C31639 * C3504 +
             C31637 * C3508) *
                C50796 +
            (C31640 * C9794 + C50822 * C9798 + C31639 * C3499 +
             C31637 * C3505) *
                C2344 +
            (C35969 + C35968) * C50926 + (C35967 + C35966) * C2343) *
               C25428) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50685 * C1074 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50685 * C50721) *
              C1076 +
          (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
             C34731 * C50796) *
                C25428 +
            (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50685 * C1074) *
              C1077 +
          (((C31690 * C2343 + C31691 * C50926 + C35152 * C2344 +
             C35153 * C50796) *
                C25428 +
            ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
             (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
                C50628) *
               C50685 * C1074 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50796 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C2344 +
             (C32249 + C32248) * C50926 + (C32247 + C32246) * C2343) *
                C50628 +
            ((C31893 + C31892) * C50796 + (C31891 + C31890) * C2344 +
             C32234 * C50926 + C32235 * C2343) *
                C25428) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C480 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C481 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C2343 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50926 +
             (C36172 + C36173) * C2344 + (C36174 + C36175) * C50796) *
                C25428 +
            ((C32080 + C32081) * C2343 + (C32082 + C32083) * C50926 +
             (C34954 + C34955) * C2344 + (C34956 + C34957) * C50796) *
                C50628) *
               C482) *
              C1074 +
          ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
             (C31639 * C1614 + C31637 * C1622 + C31640 * C3663 +
              C50822 * C3669) *
                 C2344 +
             (C31639 * C1621 + C31637 * C1626 + C31640 * C3668 +
              C50822 * C3672) *
                 C50796) *
                C25428 +
            (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C481 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C480 -
           (((C31640 * C10199 + C50822 * C10203 + C31639 * C3666 +
              C31637 * C3671) *
                 C50796 +
             (C31640 * C10197 + C50822 * C10200 + C31639 * C3662 +
              C31637 * C3667) *
                 C2344 +
             (C34957 + C34956) * C50926 + (C34955 + C34954) * C2343) *
                C50628 +
            ((C31640 * C10201 + C50822 * C10204 + C31639 * C3668 +
              C31637 * C3672) *
                 C50796 +
             (C31640 * C10198 + C50822 * C10202 + C31639 * C3663 +
              C31637 * C3669) *
                 C2344 +
             (C36175 + C36174) * C50926 + (C36173 + C36172) * C2343) *
                C25428) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C2343 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C50926 +
              (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                 C25428 +
             ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
              C34716 * C2344 + C34717 * C50796) *
                 C50628) *
                C50917 -
            ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
              (C32078 + C32079) * C2343) *
                 C50628 +
             ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
              (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C50926 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C2343) *
                 C25428) *
                C50749) *
               C1074 +
           ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
              (C31639 * C1614 + C31637 * C1622 + C31640 * C3663 +
               C50822 * C3669) *
                  C2344 +
              (C31639 * C1621 + C31637 * C1626 + C31640 * C3668 +
               C50822 * C3672) *
                  C50796) *
                 C25428 +
             (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
              (C35632 + C35633) * C50796) *
                 C50628) *
                C50749 -
            ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
              C34721 * C2343) *
                 C50628 +
             ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
              (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                 C25428) *
                C50917) *
               C50721) *
              C50908 +
          (((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
              C35616 * C2344 + C35617 * C50796) *
                 C25428 +
             ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
              (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                 C50628) *
                C50749 -
            ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
              (C31679 + C31678) * C2343) *
                 C50628 +
             (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
              (C31675 + C31674) * C2343) *
                 C25428) *
                C50917) *
               C1074 +
           (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
              C34731 * C50796) *
                 C25428 +
             (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
              (C31892 + C31893) * C50796) *
                 C50628) *
                C50917 -
            (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
               C31637 * C1624) *
                  C50796 +
              (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
               C31637 * C1618) *
                  C2344 +
              (C32631 + C32630) * C50926 + (C32629 + C32628) * C2343) *
                 C50628 +
             ((C35633 + C35632) * C50796 + (C35631 + C35630) * C2344 +
              C35606 * C50926 + C35607 * C2343) *
                 C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50685 * C1074 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50685 * C50721) *
              C1076 +
          (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
             C34731 * C50796) *
                C25428 +
            (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
             (C31892 + C31893) * C50796) *
                C50628) *
               C50685 * C50721 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50685 * C1074) *
              C1077 +
          (((C31690 * C2343 + C31691 * C50926 + C35152 * C2344 +
             C35153 * C50796) *
                C25428 +
            ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
             (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
                C50628) *
               C50685 * C1074 -
           (((C31640 * C1615 + C50822 * C1623 + C31639 * C319 + C31637 * C331) *
                 C50796 +
             (C31640 * C1611 + C50822 * C1616 + C31639 * C301 + C31637 * C318) *
                 C2344 +
             (C32249 + C32248) * C50926 + (C32247 + C32246) * C2343) *
                C50628 +
            ((C31893 + C31892) * C50796 + (C31891 + C31890) * C2344 +
             C32234 * C50926 + C32235 * C2343) *
                C25428) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C2343 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50926 +
            (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
               C25428 +
           ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
            C34716 * C2344 + C34717 * C50796) *
               C50628) *
              C50685 * C1145 -
          ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
            C34721 * C2343) *
               C50628 +
           ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
            (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
               C25428) *
              C50685 * C1146 +
          (((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
            (C35966 + C35967) * C2344 + (C35968 + C35969) * C50796) *
               C25428 +
           (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
            (C34750 + C34751) * C50796) *
               C50628) *
              C50685 * C1147 -
          (((C31640 * C9795 + C50822 * C9799 + C31639 * C3502 +
             C31637 * C3507) *
                C50796 +
            (C31640 * C9793 + C50822 * C9796 + C31639 * C3498 +
             C31637 * C3503) *
                C2344 +
            (C34751 + C34750) * C50926 + (C34749 + C34748) * C2343) *
               C50628 +
           ((C31640 * C9797 + C50822 * C9800 + C31639 * C3504 +
             C31637 * C3508) *
                C50796 +
            (C31640 * C9794 + C50822 * C9798 + C31639 * C3499 +
             C31637 * C3505) *
                C2344 +
            (C35969 + C35968) * C50926 + (C35967 + C35966) * C2343) *
               C25428) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                  C2343 +
              (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                  C50926 +
              (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                 C25428 +
             ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
              C34716 * C2344 + C34717 * C50796) *
                 C50628) *
                C1725 -
            ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
              (C32078 + C32079) * C2343) *
                 C50628 +
             ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
              (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                  C50926 +
              (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                  C2343) *
                 C25428) *
                C50749) *
               C50916 +
           ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
              (C36830 + C36831) * C2344 + (C36832 + C36833) * C50796) *
                 C25428 +
             (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
              (C35632 + C35633) * C50796) *
                 C50628) *
                C50749 -
            ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
              C34721 * C2343) *
                 C50628 +
             ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
              (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                 C25428) *
                C1725) *
               C50721) *
              C50908 +
          (((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
              C35616 * C2344 + C35617 * C50796) *
                 C25428 +
             ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
              (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                 C50628) *
                C50749 -
            ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
              (C31679 + C31678) * C2343) *
                 C50628 +
             (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
              (C31675 + C31674) * C2343) *
                 C25428) *
                C1725) *
               C50916 +
           (((C34716 * C2343 + C34717 * C50926 + C34730 * C2344 +
              C34731 * C50796) *
                 C25428 +
             (C35152 * C2343 + C35153 * C50926 + (C31890 + C31891) * C2344 +
              (C31892 + C31893) * C50796) *
                 C50628) *
                C1725 -
            (((C31640 * C3664 + C50822 * C3670 + C31639 * C1617 +
               C31637 * C1624) *
                  C50796 +
              (C31640 * C3661 + C50822 * C3665 + C31639 * C1612 +
               C31637 * C1618) *
                  C2344 +
              (C32631 + C32630) * C50926 + (C32629 + C32628) * C2343) *
                 C50628 +
             ((C35633 + C35632) * C50796 + (C35631 + C35630) * C2344 +
              C35606 * C50926 + C35607 * C2343) *
                 C25428) *
                C50749) *
               C50721) *
              C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50962 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50963 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C2343 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50926 +
             (C36172 + C36173) * C2344 + (C36174 + C36175) * C50796) *
                C25428 +
            ((C32080 + C32081) * C2343 + (C32082 + C32083) * C50926 +
             (C34954 + C34955) * C2344 + (C34956 + C34957) * C50796) *
                C50628) *
               C2141) *
              C50916 +
          ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
             (C36830 + C36831) * C2344 + (C36832 + C36833) * C50796) *
                C25428 +
            (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50963 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C50962 -
           (((C31640 * C10199 + C50822 * C10203 + C31639 * C3666 +
              C31637 * C3671) *
                 C50796 +
             (C31640 * C10197 + C50822 * C10200 + C31639 * C3662 +
              C31637 * C3667) *
                 C2344 +
             (C34957 + C34956) * C50926 + (C34955 + C34954) * C2343) *
                C50628 +
            ((C31640 * C10201 + C50822 * C10204 + C31639 * C3668 +
              C31637 * C3672) *
                 C50796 +
             (C31640 * C10198 + C50822 * C10202 + C31639 * C3663 +
              C31637 * C3669) *
                 C2344 +
             (C36175 + C36174) * C50926 + (C36173 + C36172) * C2343) *
                C25428) *
               C2141) *
              C50721) *
         C50650) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50749) *
              C289 +
          ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
             (C36830 + C36831) * C2344 + (C36832 + C36833) * C50796) *
                C25428 +
            (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50749 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C1725) *
              C290 +
          ((((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
             (C35966 + C35967) * C2344 + (C35968 + C35969) * C50796) *
                C25428 +
            (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C50796 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C2344 +
             (C35633 + C35632) * C50926 + (C35631 + C35630) * C2343) *
                C50628 +
            ((C31640 * C9297 + C50822 * C9300 + C31639 * C4172 +
              C31637 * C4176) *
                 C50796 +
             (C31640 * C9294 + C50822 * C9298 + C31639 * C4167 +
              C31637 * C4173) *
                 C2344 +
             (C36833 + C36832) * C50926 + (C36831 + C36830) * C2343) *
                C25428) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50749) *
              C50669 * C1076 +
          ((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
             C35616 * C2344 + C35617 * C50796) *
                C25428 +
            ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
             (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                C50628) *
               C50749 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C1725) *
              C50669 * C1077 +
          (((C31690 * C2343 + C31691 * C50926 + C35152 * C2344 +
             C35153 * C50796) *
                C25428 +
            ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
             (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 + C31637 * C950) *
                 C50796 +
             (C31640 * C1264 + C50822 * C1269 + C31639 * C935 + C31637 * C943) *
                 C2344 +
             (C32412 + C32411) * C50926 + (C32410 + C32409) * C2343) *
                C50628 +
            ((C32631 + C32630) * C50796 + (C32629 + C32628) * C2344 +
             C32397 * C50926 + C32398 * C2343) *
                C25428) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                C2343 +
            (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                C50926 +
            (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
               C25428 +
           ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
            C34716 * C2344 + C34717 * C50796) *
               C50628) *
              C1891 -
          ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
            (C32078 + C32079) * C2343) *
               C50628 +
           ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
            (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                C50926 +
            (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                C2343) *
               C25428) *
              C1892 +
          (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                C2343 +
            (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                C50926 +
            (C36172 + C36173) * C2344 + (C36174 + C36175) * C50796) *
               C25428 +
           ((C32080 + C32081) * C2343 + (C32082 + C32083) * C50926 +
            (C34954 + C34955) * C2344 + (C34956 + C34957) * C50796) *
               C50628) *
              C1893 -
          (((C31640 * C16727 + C50822 * C16729 + C31639 * C4578 +
             C31637 * C4583) *
                C50796 +
            (C31640 * C16726 + C50822 * C16728 + C31639 * C4574 +
             C31637 * C4579) *
                C2344 +
            (C31640 * C7434 + C50822 * C7439 + C31639 * C1903 +
             C31637 * C1909) *
                C50926 +
            (C31640 * C7430 + C50822 * C7435 + C31639 * C1897 +
             C31637 * C1904) *
                C2343) *
               C50628 +
           ((C31640 * C14784 + C50822 * C14787 + C31639 * C4580 +
             C31637 * C4584) *
                C50796 +
            (C31640 * C14781 + C50822 * C14785 + C31639 * C4575 +
             C31637 * C4581) *
                C2344 +
            (C31640 * C7436 + C50822 * C7440 + C31639 * C1905 +
             C31637 * C1910) *
                C50926 +
            (C31640 * C7431 + C50822 * C7437 + C31639 * C1898 +
             C31637 * C1906) *
                C2343) *
               C25428) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C50962 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50963 +
           (((C31639 * C487 + C31637 * C501 + C31640 * C1898 + C50822 * C1906) *
                 C2343 +
             (C31639 * C502 + C31637 * C517 + C31640 * C1905 + C50822 * C1910) *
                 C50926 +
             (C36172 + C36173) * C2344 + (C36174 + C36175) * C50796) *
                C25428 +
            ((C32080 + C32081) * C2343 + (C32082 + C32083) * C50926 +
             (C34954 + C34955) * C2344 + (C34956 + C34957) * C50796) *
                C50628) *
               C2141) *
              C50669 * C50908 +
          ((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
             C35616 * C2344 + C35617 * C50796) *
                C25428 +
            ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
             (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                C50628) *
               C50963 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C50962 -
           (((C31640 * C4576 + C50822 * C4582 + C31639 * C1270 +
              C31637 * C1277) *
                 C50796 +
             (C31640 * C4573 + C50822 * C4577 + C31639 * C1265 +
              C31637 * C1271) *
                 C2344 +
             (C32087 + C32086) * C50926 + (C32085 + C32084) * C2343) *
                C50628 +
            ((C34957 + C34956) * C50796 + (C34955 + C34954) * C2344 +
             (C32083 + C32082) * C50926 + (C32081 + C32080) * C2343) *
                C25428) *
               C2141) *
              C50669 * C50656)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50749) *
              C50669 * C1076 +
          ((((C32079 + C32078) * C2343 + (C32077 + C32076) * C50926 +
             C35616 * C2344 + C35617 * C50796) *
                C25428 +
            ((C32075 + C32074) * C2343 + (C32073 + C32072) * C50926 +
             (C32628 + C32629) * C2344 + (C32630 + C32631) * C50796) *
                C50628) *
               C50749 -
           ((C32234 * C50796 + C32235 * C2344 + (C31681 + C31680) * C50926 +
             (C31679 + C31678) * C2343) *
                C50628 +
            (C34720 * C50796 + C34721 * C2344 + (C31677 + C31676) * C50926 +
             (C31675 + C31674) * C2343) *
                C25428) *
               C1725) *
              C50669 * C1077 +
          (((C31690 * C2343 + C31691 * C50926 + C35152 * C2344 +
             C35153 * C50796) *
                C25428 +
            ((C31685 + C31684) * C2343 + (C31683 + C31682) * C50926 +
             (C32246 + C32247) * C2344 + (C32248 + C32249) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C1268 + C50822 * C1276 + C31639 * C944 + C31637 * C950) *
                 C50796 +
             (C31640 * C1264 + C50822 * C1269 + C31639 * C935 + C31637 * C943) *
                 C2344 +
             (C32412 + C32411) * C50926 + (C32410 + C32409) * C2343) *
                C50628 +
            ((C32631 + C32630) * C50796 + (C32629 + C32628) * C2344 +
             C32397 * C50926 + C32398 * C2343) *
                C25428) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31639 * C119 + C31637 * C126 + C31640 * C486 + C50822 * C500) *
                 C2343 +
             (C31639 * C127 + C31637 * C140 + C31640 * C499 + C50822 * C516) *
                 C50926 +
             (C34740 + C34741) * C2344 + (C34742 + C34743) * C50796) *
                C25428 +
            ((C31674 + C31675) * C2343 + (C31676 + C31677) * C50926 +
             C34716 * C2344 + C34717 * C50796) *
                C50628) *
               C1725 -
           ((C35606 * C50796 + C35607 * C2344 + (C32076 + C32077) * C50926 +
             (C32078 + C32079) * C2343) *
                C50628 +
            ((C35626 + C35627) * C50796 + (C35628 + C35629) * C2344 +
             (C31640 * C502 + C50822 * C517 + C31639 * C499 + C31637 * C516) *
                 C50926 +
             (C31640 * C487 + C50822 * C501 + C31639 * C486 + C31637 * C500) *
                 C2343) *
                C25428) *
               C50749) *
              C289 +
          ((((C35629 + C35628) * C2343 + (C35627 + C35626) * C50926 +
             (C36830 + C36831) * C2344 + (C36832 + C36833) * C50796) *
                C25428 +
            (C35616 * C2343 + C35617 * C50926 + (C35630 + C35631) * C2344 +
             (C35632 + C35633) * C50796) *
                C50628) *
               C50749 -
           ((C34718 * C50796 + C34719 * C2344 + C34720 * C50926 +
             C34721 * C2343) *
                C50628 +
            ((C34744 + C34745) * C50796 + (C34746 + C34747) * C2344 +
             (C34743 + C34742) * C50926 + (C34741 + C34740) * C2343) *
                C25428) *
               C1725) *
              C290 +
          ((((C34747 + C34746) * C2343 + (C34745 + C34744) * C50926 +
             (C35966 + C35967) * C2344 + (C35968 + C35969) * C50796) *
                C25428 +
            (C34730 * C2343 + C34731 * C50926 + (C34748 + C34749) * C2344 +
             (C34750 + C34751) * C50796) *
                C50628) *
               C1725 -
           (((C31640 * C9295 + C50822 * C9299 + C31639 * C4170 +
              C31637 * C4175) *
                 C50796 +
             (C31640 * C9293 + C50822 * C9296 + C31639 * C4166 +
              C31637 * C4171) *
                 C2344 +
             (C35633 + C35632) * C50926 + (C35631 + C35630) * C2343) *
                C50628 +
            ((C31640 * C9297 + C50822 * C9300 + C31639 * C4172 +
              C31637 * C4176) *
                 C50796 +
             (C31640 * C9294 + C50822 * C9298 + C31639 * C4167 +
              C31637 * C4173) *
                 C2344 +
             (C36833 + C36832) * C50926 + (C36831 + C36830) * C2343) *
                C25428) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50685 * C50916 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50685 * C50721) *
                       C50958 +
                   ((((C38331 + C38330 + C38329) * C118 +
                      (C38328 + C38327 + C38326) * C50780) *
                         C25428 +
                     ((C38678 + C38679 + C38680) * C118 +
                      (C38681 + C38682 + C38683) * C50780) *
                         C50628) *
                        C50685 * C50721 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50685 * C50916) *
                       C50959 +
                   ((((C38149 + C38148 + C38147) * C118 +
                      (C38146 + C38145 + C38144) * C50780) *
                         C25428 +
                     ((C38150 + C38151 + C38152) * C118 +
                      (C38153 + C38154 + C38155) * C50780) *
                         C50628) *
                        C50685 * C50916 -
                    (((C38100 * C1268 + C38097 * C1276 + C38099 * C944 +
                       C50956 * C950 + C38098 * C304 + C50965 * C324) *
                          C50780 +
                      (C38100 * C1264 + C38097 * C1269 + C38099 * C935 +
                       C50956 * C943 + C38098 * C294 + C50965 * C305) *
                          C118) *
                         C50628 +
                     ((C38683 + C38682 + C38681) * C50780 +
                      (C38680 + C38679 + C38678) * C118) *
                         C25428) *
                        C50685 * C50721) *
                       C673)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                        C50956 * C500 + C38100 * C487 + C38097 * C501) *
                           C118 +
                       (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                        C50956 * C516 + C38100 * C502 + C38097 * C517) *
                           C50780) *
                          C25428 +
                      ((C38138 + C38139 + C38140) * C118 +
                       (C38141 + C38142 + C38143) * C50780) *
                          C50628) *
                         C50917 -
                     (((C38508 + C38509 + C38510) * C50780 +
                       (C38511 + C38512 + C38513) * C118) *
                          C50628 +
                      ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                        C50956 * C517 + C38098 * C499 + C50965 * C516) *
                           C50780 +
                       (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                        C50956 * C501 + C38098 * C486 + C50965 * C500) *
                           C118) *
                          C25428) *
                         C50749) *
                        C50916 +
                    ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                        C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                           C118 +
                       (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                        C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                           C50780) *
                          C25428 +
                      ((C39054 + C39055 + C39056) * C118 +
                       (C39057 + C39058 + C39059) * C50780) *
                          C50628) *
                         C50749 -
                     (((C38326 + C38327 + C38328) * C50780 +
                       (C38329 + C38330 + C38331) * C118) *
                          C50628 +
                      ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                        C50956 * C947 + C38098 * C310 + C50965 * C327) *
                           C50780 +
                       (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                        C50956 * C937 + C38098 * C297 + C50965 * C311) *
                           C118) *
                          C25428) *
                         C50917) *
                        C50721) *
                       C292 +
                   (((((C38513 + C38512 + C38511) * C118 +
                       (C38510 + C38509 + C38508) * C50780) *
                          C25428 +
                      ((C38842 + C38843 + C38844) * C118 +
                       (C38845 + C38846 + C38847) * C50780) *
                          C50628) *
                         C50749 -
                     (((C38144 + C38145 + C38146) * C50780 +
                       (C38147 + C38148 + C38149) * C118) *
                          C50628 +
                      ((C38143 + C38142 + C38141) * C50780 +
                       (C38140 + C38139 + C38138) * C118) *
                          C25428) *
                         C50917) *
                        C50916 +
                    ((((C38331 + C38330 + C38329) * C118 +
                       (C38328 + C38327 + C38326) * C50780) *
                          C25428 +
                      ((C38678 + C38679 + C38680) * C118 +
                       (C38681 + C38682 + C38683) * C50780) *
                          C50628) *
                         C50917 -
                     (((C38100 * C4576 + C38097 * C4582 + C38099 * C1270 +
                        C50956 * C1277 + C38098 * C942 + C50965 * C949) *
                           C50780 +
                       (C38100 * C4573 + C38097 * C4577 + C38099 * C1265 +
                        C50956 * C1271 + C38098 * C934 + C50965 * C941) *
                           C118) *
                          C50628 +
                      ((C39059 + C39058 + C39057) * C50780 +
                       (C39056 + C39055 + C39054) * C118) *
                          C25428) *
                         C50749) *
                        C50721) *
                       C50656)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50685 * C289 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50685 * C290 +
                    (((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                       C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                          C118 +
                      (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                       C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                          C50780) *
                         C25428 +
                     ((C38332 + C38333 + C38334) * C118 +
                      (C38335 + C38336 + C38337) * C50780) *
                         C50628) *
                        C50685 * C291) *
                       C292 +
                   ((((C38331 + C38330 + C38329) * C118 +
                      (C38328 + C38327 + C38326) * C50780) *
                         C25428 +
                     ((C38098 * C295 + C50965 * C307 + C38099 * C934 +
                       C50956 * C941 + C38100 * C1265 + C38097 * C1271) *
                          C118 +
                      (C38098 * C306 + C50965 * C325 + C38099 * C942 +
                       C50956 * C949 + C38100 * C1270 + C38097 * C1277) *
                          C50780) *
                         C50628) *
                        C50685 * C290 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50685 * C289 -
                    (((C38100 * C3664 + C38097 * C3670 + C38099 * C1617 +
                       C50956 * C1624 + C38098 * C317 + C50965 * C330) *
                          C50780 +
                      (C38100 * C3661 + C38097 * C3665 + C38099 * C1612 +
                       C50956 * C1618 + C38098 * C300 + C50965 * C316) *
                          C118) *
                         C50628 +
                     ((C38337 + C38336 + C38335) * C50780 +
                      (C38334 + C38333 + C38332) * C118) *
                         C25428) *
                        C50685 * C291) *
                       C50656)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C118 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C50780) *
                        C25428 +
                    ((C38138 + C38139 + C38140) * C118 +
                     (C38141 + C38142 + C38143) * C50780) *
                        C50628) *
                       C50685 * C50669 * C113 -
                   (((C38144 + C38145 + C38146) * C50780 +
                     (C38147 + C38148 + C38149) * C118) *
                        C50628 +
                    ((C38143 + C38142 + C38141) * C50780 +
                     (C38140 + C38139 + C38138) * C118) *
                        C25428) *
                       C50685 * C50669 * C114 +
                   (((C38149 + C38148 + C38147) * C118 +
                     (C38146 + C38145 + C38144) * C50780) *
                        C25428 +
                    ((C38150 + C38151 + C38152) * C118 +
                     (C38153 + C38154 + C38155) * C50780) *
                        C50628) *
                       C50685 * C50669 * C115 -
                   (((C38100 * C511 + C38097 * C522 + C38099 * C510 +
                      C50956 * C521 + C38098 * C134 + C50965 * C144) *
                         C50780 +
                     (C38100 * C492 + C38097 * C512 + C38099 * C491 +
                      C50956 * C509 + C38098 * C123 + C50965 * C135) *
                         C118) *
                        C50628 +
                    ((C38155 + C38154 + C38153) * C50780 +
                     (C38152 + C38151 + C38150) * C118) *
                        C25428) *
                       C50685 * C50669 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C480 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C481 +
                    (((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                       C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                          C118 +
                      (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                       C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                          C50780) *
                         C25428 +
                     ((C38514 + C38515 + C38516) * C118 +
                      (C38517 + C38518 + C38519) * C50780) *
                         C50628) *
                        C482) *
                       C50669 * C292 +
                   ((((C38513 + C38512 + C38511) * C118 +
                      (C38510 + C38509 + C38508) * C50780) *
                         C25428 +
                     ((C38098 * C484 + C50965 * C496 + C38099 * C489 +
                       C50956 * C505 + C38100 * C1896 + C38097 * C1902) *
                          C118 +
                      (C38098 * C495 + C50965 * C514 + C38099 * C506 +
                       C50956 * C519 + C38100 * C1901 + C38097 * C1908) *
                          C50780) *
                         C50628) *
                        C481 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C480 -
                    (((C38100 * C7432 + C38097 * C7438 + C38099 * C1901 +
                       C50956 * C1908 + C38098 * C506 + C50965 * C519) *
                          C50780 +
                      (C38100 * C7429 + C38097 * C7433 + C38099 * C1896 +
                       C50956 * C1902 + C38098 * C489 + C50965 * C505) *
                          C118) *
                         C50628 +
                     ((C38519 + C38518 + C38517) * C50780 +
                      (C38516 + C38515 + C38514) * C118) *
                         C25428) *
                        C482) *
                       C50669 * C50656)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50917 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50749) *
                       C50669 * C50958 +
                   ((((C38513 + C38512 + C38511) * C118 +
                      (C38510 + C38509 + C38508) * C50780) *
                         C25428 +
                     ((C38842 + C38843 + C38844) * C118 +
                      (C38845 + C38846 + C38847) * C50780) *
                         C50628) *
                        C50749 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50917) *
                       C50669 * C50959 +
                   ((((C38149 + C38148 + C38147) * C118 +
                      (C38146 + C38145 + C38144) * C50780) *
                         C25428 +
                     ((C38150 + C38151 + C38152) * C118 +
                      (C38153 + C38154 + C38155) * C50780) *
                         C50628) *
                        C50917 -
                    (((C38100 * C1899 + C38097 * C1907 + C38099 * C508 +
                       C50956 * C520 + C38098 * C493 + C50965 * C513) *
                          C50780 +
                      (C38100 * C1895 + C38097 * C1900 + C38099 * C490 +
                       C50956 * C507 + C38098 * C483 + C50965 * C494) *
                          C118) *
                         C50628 +
                     ((C38847 + C38846 + C38845) * C50780 +
                      (C38844 + C38843 + C38842) * C118) *
                         C25428) *
                        C50749) *
                       C50669 * C673)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C118 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C50780) *
                        C25428 +
                    ((C38138 + C38139 + C38140) * C118 +
                     (C38141 + C38142 + C38143) * C50780) *
                        C50628) *
                       C50685 * C50669 * C113 -
                   (((C38144 + C38145 + C38146) * C50780 +
                     (C38147 + C38148 + C38149) * C118) *
                        C50628 +
                    ((C38143 + C38142 + C38141) * C50780 +
                     (C38140 + C38139 + C38138) * C118) *
                        C25428) *
                       C50685 * C50669 * C114 +
                   (((C38149 + C38148 + C38147) * C118 +
                     (C38146 + C38145 + C38144) * C50780) *
                        C25428 +
                    ((C38150 + C38151 + C38152) * C118 +
                     (C38153 + C38154 + C38155) * C50780) *
                        C50628) *
                       C50685 * C50669 * C115 -
                   (((C38100 * C511 + C38097 * C522 + C38099 * C510 +
                      C50956 * C521 + C38098 * C134 + C50965 * C144) *
                         C50780 +
                     (C38100 * C492 + C38097 * C512 + C38099 * C491 +
                      C50956 * C509 + C38098 * C123 + C50965 * C135) *
                         C118) *
                        C50628 +
                    ((C38155 + C38154 + C38153) * C50780 +
                     (C38152 + C38151 + C38150) * C118) *
                        C25428) *
                       C50685 * C50669 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50685 * C289 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50685 * C290 +
                    (((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                       C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                          C118 +
                      (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                       C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                          C50780) *
                         C25428 +
                     ((C38332 + C38333 + C38334) * C118 +
                      (C38335 + C38336 + C38337) * C50780) *
                         C50628) *
                        C50685 * C291) *
                       C292 +
                   ((((C38331 + C38330 + C38329) * C118 +
                      (C38328 + C38327 + C38326) * C50780) *
                         C25428 +
                     ((C38098 * C295 + C50965 * C307 + C38099 * C934 +
                       C50956 * C941 + C38100 * C1265 + C38097 * C1271) *
                          C118 +
                      (C38098 * C306 + C50965 * C325 + C38099 * C942 +
                       C50956 * C949 + C38100 * C1270 + C38097 * C1277) *
                          C50780) *
                         C50628) *
                        C50685 * C290 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50685 * C289 -
                    (((C38100 * C3664 + C38097 * C3670 + C38099 * C1617 +
                       C50956 * C1624 + C38098 * C317 + C50965 * C330) *
                          C50780 +
                      (C38100 * C3661 + C38097 * C3665 + C38099 * C1612 +
                       C50956 * C1618 + C38098 * C300 + C50965 * C316) *
                          C118) *
                         C50628 +
                     ((C38337 + C38336 + C38335) * C50780 +
                      (C38334 + C38333 + C38332) * C118) *
                         C25428) *
                        C50685 * C291) *
                       C50656)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50685 * C50960 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50685 * C50961 +
                    (((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                       C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                          C118 +
                      (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                       C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                          C50780) *
                         C25428 +
                     ((C38332 + C38333 + C38334) * C118 +
                      (C38335 + C38336 + C38337) * C50780) *
                         C50628) *
                        C50685 * C1380) *
                       C50908 +
                   ((((C38331 + C38330 + C38329) * C118 +
                      (C38328 + C38327 + C38326) * C50780) *
                         C25428 +
                     ((C38678 + C38679 + C38680) * C118 +
                      (C38681 + C38682 + C38683) * C50780) *
                         C50628) *
                        C50685 * C50961 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50685 * C50960 -
                    (((C38100 * C3664 + C38097 * C3670 + C38099 * C1617 +
                       C50956 * C1624 + C38098 * C317 + C50965 * C330) *
                          C50780 +
                      (C38100 * C3661 + C38097 * C3665 + C38099 * C1612 +
                       C50956 * C1618 + C38098 * C300 + C50965 * C316) *
                          C118) *
                         C50628 +
                     ((C38337 + C38336 + C38335) * C50780 +
                      (C38334 + C38333 + C38332) * C118) *
                         C25428) *
                        C50685 * C1380) *
                       C50656)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50917 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50749) *
                       C50960 +
                   ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                       C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                          C118 +
                      (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                       C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                          C50780) *
                         C25428 +
                     ((C39054 + C39055 + C39056) * C118 +
                      (C39057 + C39058 + C39059) * C50780) *
                         C50628) *
                        C50749 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50917) *
                       C50961 +
                   ((((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                       C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                          C118 +
                      (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                       C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                          C50780) *
                         C25428 +
                     ((C38332 + C38333 + C38334) * C118 +
                      (C38335 + C38336 + C38337) * C50780) *
                         C50628) *
                        C50917 -
                    (((C38100 * C10199 + C38097 * C10203 + C38099 * C3666 +
                       C50956 * C3671 + C38098 * C1619 + C50965 * C1625) *
                          C50780 +
                      (C38100 * C10197 + C38097 * C10200 + C38099 * C3662 +
                       C50956 * C3667 + C38098 * C1613 + C50965 * C1620) *
                          C118) *
                         C50628 +
                     ((C38100 * C10201 + C38097 * C10204 + C38099 * C3668 +
                       C50956 * C3672 + C38098 * C1621 + C50965 * C1626) *
                          C50780 +
                      (C38100 * C10198 + C38097 * C10202 + C38099 * C3663 +
                       C50956 * C3669 + C38098 * C1614 + C50965 * C1622) *
                          C118) *
                         C25428) *
                        C50749) *
                       C1380) *
                  C50650) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C118 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C50780) *
                        C25428 +
                    ((C38138 + C38139 + C38140) * C118 +
                     (C38141 + C38142 + C38143) * C50780) *
                        C50628) *
                       C50685 * C1145 -
                   (((C38326 + C38327 + C38328) * C50780 +
                     (C38329 + C38330 + C38331) * C118) *
                        C50628 +
                    ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                      C50956 * C947 + C38098 * C310 + C50965 * C327) *
                         C50780 +
                     (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                      C50956 * C937 + C38098 * C297 + C50965 * C311) *
                         C118) *
                        C25428) *
                       C50685 * C1146 +
                   (((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                      C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                         C118 +
                     (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                      C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                         C50780) *
                        C25428 +
                    ((C38332 + C38333 + C38334) * C118 +
                     (C38335 + C38336 + C38337) * C50780) *
                        C50628) *
                       C50685 * C1147 -
                   (((C38100 * C9295 + C38097 * C9299 + C38099 * C4170 +
                      C50956 * C4175 + C38098 * C1158 + C50965 * C1164) *
                         C50780 +
                     (C38100 * C9293 + C38097 * C9296 + C38099 * C4166 +
                      C50956 * C4171 + C38098 * C1152 + C50965 * C1159) *
                         C118) *
                        C50628 +
                    ((C38100 * C9297 + C38097 * C9300 + C38099 * C4172 +
                      C50956 * C4176 + C38098 * C1160 + C50965 * C1165) *
                         C50780 +
                     (C38100 * C9294 + C38097 * C9298 + C38099 * C4167 +
                      C50956 * C4173 + C38098 * C1153 + C50965 * C1161) *
                         C118) *
                        C25428) *
                       C50685 * C1148) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50685 * C1074 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50685 * C50721) *
                       C1076 +
                   ((((C38331 + C38330 + C38329) * C118 +
                      (C38328 + C38327 + C38326) * C50780) *
                         C25428 +
                     ((C38678 + C38679 + C38680) * C118 +
                      (C38681 + C38682 + C38683) * C50780) *
                         C50628) *
                        C50685 * C50721 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50685 * C1074) *
                       C1077 +
                   ((((C38149 + C38148 + C38147) * C118 +
                      (C38146 + C38145 + C38144) * C50780) *
                         C25428 +
                     ((C38150 + C38151 + C38152) * C118 +
                      (C38153 + C38154 + C38155) * C50780) *
                         C50628) *
                        C50685 * C1074 -
                    (((C38100 * C1268 + C38097 * C1276 + C38099 * C944 +
                       C50956 * C950 + C38098 * C304 + C50965 * C324) *
                          C50780 +
                      (C38100 * C1264 + C38097 * C1269 + C38099 * C935 +
                       C50956 * C943 + C38098 * C294 + C50965 * C305) *
                          C118) *
                         C50628 +
                     ((C38683 + C38682 + C38681) * C50780 +
                      (C38680 + C38679 + C38678) * C118) *
                         C25428) *
                        C50685 * C50721) *
                       C1078)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C480 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C481 +
                    (((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                       C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                          C118 +
                      (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                       C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                          C50780) *
                         C25428 +
                     ((C38514 + C38515 + C38516) * C118 +
                      (C38517 + C38518 + C38519) * C50780) *
                         C50628) *
                        C482) *
                       C1074 +
                   ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                       C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                          C118 +
                      (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                       C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                          C50780) *
                         C25428 +
                     ((C39054 + C39055 + C39056) * C118 +
                      (C39057 + C39058 + C39059) * C50780) *
                         C50628) *
                        C481 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C480 -
                    (((C38100 * C16727 + C38097 * C16729 + C38099 * C4578 +
                       C50956 * C4583 + C38098 * C1272 + C50965 * C1278) *
                          C50780 +
                      (C38100 * C16726 + C38097 * C16728 + C38099 * C4574 +
                       C50956 * C4579 + C38098 * C1266 + C50965 * C1273) *
                          C118) *
                         C50628 +
                     ((C38100 * C14784 + C38097 * C14787 + C38099 * C4580 +
                       C50956 * C4584 + C38098 * C1274 + C50965 * C1279) *
                          C50780 +
                      (C38100 * C14781 + C38097 * C14785 + C38099 * C4575 +
                       C50956 * C4581 + C38098 * C1267 + C50965 * C1275) *
                          C118) *
                         C25428) *
                        C482) *
                       C50721) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                        C50956 * C500 + C38100 * C487 + C38097 * C501) *
                           C118 +
                       (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                        C50956 * C516 + C38100 * C502 + C38097 * C517) *
                           C50780) *
                          C25428 +
                      ((C38138 + C38139 + C38140) * C118 +
                       (C38141 + C38142 + C38143) * C50780) *
                          C50628) *
                         C50917 -
                     (((C38508 + C38509 + C38510) * C50780 +
                       (C38511 + C38512 + C38513) * C118) *
                          C50628 +
                      ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                        C50956 * C517 + C38098 * C499 + C50965 * C516) *
                           C50780 +
                       (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                        C50956 * C501 + C38098 * C486 + C50965 * C500) *
                           C118) *
                          C25428) *
                         C50749) *
                        C1074 +
                    ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                        C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                           C118 +
                       (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                        C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                           C50780) *
                          C25428 +
                      ((C39054 + C39055 + C39056) * C118 +
                       (C39057 + C39058 + C39059) * C50780) *
                          C50628) *
                         C50749 -
                     (((C38326 + C38327 + C38328) * C50780 +
                       (C38329 + C38330 + C38331) * C118) *
                          C50628 +
                      ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                        C50956 * C947 + C38098 * C310 + C50965 * C327) *
                           C50780 +
                       (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                        C50956 * C937 + C38098 * C297 + C50965 * C311) *
                           C118) *
                          C25428) *
                         C50917) *
                        C50721) *
                       C50908 +
                   (((((C38513 + C38512 + C38511) * C118 +
                       (C38510 + C38509 + C38508) * C50780) *
                          C25428 +
                      ((C38842 + C38843 + C38844) * C118 +
                       (C38845 + C38846 + C38847) * C50780) *
                          C50628) *
                         C50749 -
                     (((C38144 + C38145 + C38146) * C50780 +
                       (C38147 + C38148 + C38149) * C118) *
                          C50628 +
                      ((C38143 + C38142 + C38141) * C50780 +
                       (C38140 + C38139 + C38138) * C118) *
                          C25428) *
                         C50917) *
                        C1074 +
                    ((((C38331 + C38330 + C38329) * C118 +
                       (C38328 + C38327 + C38326) * C50780) *
                          C25428 +
                      ((C38678 + C38679 + C38680) * C118 +
                       (C38681 + C38682 + C38683) * C50780) *
                          C50628) *
                         C50917 -
                     (((C38100 * C4576 + C38097 * C4582 + C38099 * C1270 +
                        C50956 * C1277 + C38098 * C942 + C50965 * C949) *
                           C50780 +
                       (C38100 * C4573 + C38097 * C4577 + C38099 * C1265 +
                        C50956 * C1271 + C38098 * C934 + C50965 * C941) *
                           C118) *
                          C50628 +
                      ((C39059 + C39058 + C39057) * C50780 +
                       (C39056 + C39055 + C39054) * C118) *
                          C25428) *
                         C50749) *
                        C50721) *
                       C50656)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50685 * C1074 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50685 * C50721) *
                       C1076 +
                   ((((C38331 + C38330 + C38329) * C118 +
                      (C38328 + C38327 + C38326) * C50780) *
                         C25428 +
                     ((C38678 + C38679 + C38680) * C118 +
                      (C38681 + C38682 + C38683) * C50780) *
                         C50628) *
                        C50685 * C50721 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50685 * C1074) *
                       C1077 +
                   ((((C38149 + C38148 + C38147) * C118 +
                      (C38146 + C38145 + C38144) * C50780) *
                         C25428 +
                     ((C38150 + C38151 + C38152) * C118 +
                      (C38153 + C38154 + C38155) * C50780) *
                         C50628) *
                        C50685 * C1074 -
                    (((C38100 * C1268 + C38097 * C1276 + C38099 * C944 +
                       C50956 * C950 + C38098 * C304 + C50965 * C324) *
                          C50780 +
                      (C38100 * C1264 + C38097 * C1269 + C38099 * C935 +
                       C50956 * C943 + C38098 * C294 + C50965 * C305) *
                          C118) *
                         C50628 +
                     ((C38683 + C38682 + C38681) * C50780 +
                      (C38680 + C38679 + C38678) * C118) *
                         C25428) *
                        C50685 * C50721) *
                       C1078)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C118 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C50780) *
                        C25428 +
                    ((C38138 + C38139 + C38140) * C118 +
                     (C38141 + C38142 + C38143) * C50780) *
                        C50628) *
                       C50685 * C1145 -
                   (((C38326 + C38327 + C38328) * C50780 +
                     (C38329 + C38330 + C38331) * C118) *
                        C50628 +
                    ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                      C50956 * C947 + C38098 * C310 + C50965 * C327) *
                         C50780 +
                     (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                      C50956 * C937 + C38098 * C297 + C50965 * C311) *
                         C118) *
                        C25428) *
                       C50685 * C1146 +
                   (((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                      C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                         C118 +
                     (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                      C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                         C50780) *
                        C25428 +
                    ((C38332 + C38333 + C38334) * C118 +
                     (C38335 + C38336 + C38337) * C50780) *
                        C50628) *
                       C50685 * C1147 -
                   (((C38100 * C9295 + C38097 * C9299 + C38099 * C4170 +
                      C50956 * C4175 + C38098 * C1158 + C50965 * C1164) *
                         C50780 +
                     (C38100 * C9293 + C38097 * C9296 + C38099 * C4166 +
                      C50956 * C4171 + C38098 * C1152 + C50965 * C1159) *
                         C118) *
                        C50628 +
                    ((C38100 * C9297 + C38097 * C9300 + C38099 * C4172 +
                      C50956 * C4176 + C38098 * C1160 + C50965 * C1165) *
                         C50780 +
                     (C38100 * C9294 + C38097 * C9298 + C38099 * C4167 +
                      C50956 * C4173 + C38098 * C1153 + C50965 * C1161) *
                         C118) *
                        C25428) *
                       C50685 * C1148) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                        C50956 * C500 + C38100 * C487 + C38097 * C501) *
                           C118 +
                       (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                        C50956 * C516 + C38100 * C502 + C38097 * C517) *
                           C50780) *
                          C25428 +
                      ((C38138 + C38139 + C38140) * C118 +
                       (C38141 + C38142 + C38143) * C50780) *
                          C50628) *
                         C1725 -
                     (((C38508 + C38509 + C38510) * C50780 +
                       (C38511 + C38512 + C38513) * C118) *
                          C50628 +
                      ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                        C50956 * C517 + C38098 * C499 + C50965 * C516) *
                           C50780 +
                       (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                        C50956 * C501 + C38098 * C486 + C50965 * C500) *
                           C118) *
                          C25428) *
                         C50749) *
                        C50916 +
                    ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                        C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                           C118 +
                       (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                        C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                           C50780) *
                          C25428 +
                      ((C39054 + C39055 + C39056) * C118 +
                       (C39057 + C39058 + C39059) * C50780) *
                          C50628) *
                         C50749 -
                     (((C38326 + C38327 + C38328) * C50780 +
                       (C38329 + C38330 + C38331) * C118) *
                          C50628 +
                      ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                        C50956 * C947 + C38098 * C310 + C50965 * C327) *
                           C50780 +
                       (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                        C50956 * C937 + C38098 * C297 + C50965 * C311) *
                           C118) *
                          C25428) *
                         C1725) *
                        C50721) *
                       C50908 +
                   (((((C38513 + C38512 + C38511) * C118 +
                       (C38510 + C38509 + C38508) * C50780) *
                          C25428 +
                      ((C38842 + C38843 + C38844) * C118 +
                       (C38845 + C38846 + C38847) * C50780) *
                          C50628) *
                         C50749 -
                     (((C38144 + C38145 + C38146) * C50780 +
                       (C38147 + C38148 + C38149) * C118) *
                          C50628 +
                      ((C38143 + C38142 + C38141) * C50780 +
                       (C38140 + C38139 + C38138) * C118) *
                          C25428) *
                         C1725) *
                        C50916 +
                    ((((C38331 + C38330 + C38329) * C118 +
                       (C38328 + C38327 + C38326) * C50780) *
                          C25428 +
                      ((C38678 + C38679 + C38680) * C118 +
                       (C38681 + C38682 + C38683) * C50780) *
                          C50628) *
                         C1725 -
                     (((C38100 * C4576 + C38097 * C4582 + C38099 * C1270 +
                        C50956 * C1277 + C38098 * C942 + C50965 * C949) *
                           C50780 +
                       (C38100 * C4573 + C38097 * C4577 + C38099 * C1265 +
                        C50956 * C1271 + C38098 * C934 + C50965 * C941) *
                           C118) *
                          C50628 +
                      ((C39059 + C39058 + C39057) * C50780 +
                       (C39056 + C39055 + C39054) * C118) *
                          C25428) *
                         C50749) *
                        C50721) *
                       C50656)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50962 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50963 +
                    (((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                       C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                          C118 +
                      (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                       C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                          C50780) *
                         C25428 +
                     ((C38514 + C38515 + C38516) * C118 +
                      (C38517 + C38518 + C38519) * C50780) *
                         C50628) *
                        C2141) *
                       C50916 +
                   ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                       C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                          C118 +
                      (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                       C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                          C50780) *
                         C25428 +
                     ((C39054 + C39055 + C39056) * C118 +
                      (C39057 + C39058 + C39059) * C50780) *
                         C50628) *
                        C50963 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C50962 -
                    (((C38100 * C16727 + C38097 * C16729 + C38099 * C4578 +
                       C50956 * C4583 + C38098 * C1272 + C50965 * C1278) *
                          C50780 +
                      (C38100 * C16726 + C38097 * C16728 + C38099 * C4574 +
                       C50956 * C4579 + C38098 * C1266 + C50965 * C1273) *
                          C118) *
                         C50628 +
                     ((C38100 * C14784 + C38097 * C14787 + C38099 * C4580 +
                       C50956 * C4584 + C38098 * C1274 + C50965 * C1279) *
                          C50780 +
                      (C38100 * C14781 + C38097 * C14785 + C38099 * C4575 +
                       C50956 * C4581 + C38098 * C1267 + C50965 * C1275) *
                          C118) *
                         C25428) *
                        C2141) *
                       C50721) *
                  C50650) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50749) *
                       C289 +
                   ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                       C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                          C118 +
                      (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                       C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                          C50780) *
                         C25428 +
                     ((C39054 + C39055 + C39056) * C118 +
                      (C39057 + C39058 + C39059) * C50780) *
                         C50628) *
                        C50749 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C1725) *
                       C290 +
                   ((((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                       C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                          C118 +
                      (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                       C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                          C50780) *
                         C25428 +
                     ((C38332 + C38333 + C38334) * C118 +
                      (C38335 + C38336 + C38337) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38100 * C10199 + C38097 * C10203 + C38099 * C3666 +
                       C50956 * C3671 + C38098 * C1619 + C50965 * C1625) *
                          C50780 +
                      (C38100 * C10197 + C38097 * C10200 + C38099 * C3662 +
                       C50956 * C3667 + C38098 * C1613 + C50965 * C1620) *
                          C118) *
                         C50628 +
                     ((C38100 * C10201 + C38097 * C10204 + C38099 * C3668 +
                       C50956 * C3672 + C38098 * C1621 + C50965 * C1626) *
                          C50780 +
                      (C38100 * C10198 + C38097 * C10202 + C38099 * C3663 +
                       C50956 * C3669 + C38098 * C1614 + C50965 * C1622) *
                          C118) *
                         C25428) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50749) *
                       C50669 * C1076 +
                   ((((C38513 + C38512 + C38511) * C118 +
                      (C38510 + C38509 + C38508) * C50780) *
                         C25428 +
                     ((C38842 + C38843 + C38844) * C118 +
                      (C38845 + C38846 + C38847) * C50780) *
                         C50628) *
                        C50749 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C1725) *
                       C50669 * C1077 +
                   ((((C38149 + C38148 + C38147) * C118 +
                      (C38146 + C38145 + C38144) * C50780) *
                         C25428 +
                     ((C38150 + C38151 + C38152) * C118 +
                      (C38153 + C38154 + C38155) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38100 * C1899 + C38097 * C1907 + C38099 * C508 +
                       C50956 * C520 + C38098 * C493 + C50965 * C513) *
                          C50780 +
                      (C38100 * C1895 + C38097 * C1900 + C38099 * C490 +
                       C50956 * C507 + C38098 * C483 + C50965 * C494) *
                          C118) *
                         C50628 +
                     ((C38847 + C38846 + C38845) * C50780 +
                      (C38844 + C38843 + C38842) * C118) *
                         C25428) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                      C50956 * C500 + C38100 * C487 + C38097 * C501) *
                         C118 +
                     (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                      C50956 * C516 + C38100 * C502 + C38097 * C517) *
                         C50780) *
                        C25428 +
                    ((C38138 + C38139 + C38140) * C118 +
                     (C38141 + C38142 + C38143) * C50780) *
                        C50628) *
                       C1891 -
                   (((C38508 + C38509 + C38510) * C50780 +
                     (C38511 + C38512 + C38513) * C118) *
                        C50628 +
                    ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                      C50956 * C517 + C38098 * C499 + C50965 * C516) *
                         C50780 +
                     (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                      C50956 * C501 + C38098 * C486 + C50965 * C500) *
                         C118) *
                        C25428) *
                       C1892 +
                   (((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                      C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                         C118 +
                     (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                      C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                         C50780) *
                        C25428 +
                    ((C38514 + C38515 + C38516) * C118 +
                     (C38517 + C38518 + C38519) * C50780) *
                        C50628) *
                       C1893 -
                   (((C38100 * C17608 + C38097 * C17612 + C38099 * C7434 +
                      C50956 * C7439 + C38098 * C1903 + C50965 * C1909) *
                         C50780 +
                     (C38100 * C17606 + C38097 * C17609 + C38099 * C7430 +
                      C50956 * C7435 + C38098 * C1897 + C50965 * C1904) *
                         C118) *
                        C50628 +
                    ((C38100 * C17610 + C38097 * C17613 + C38099 * C7436 +
                      C50956 * C7440 + C38098 * C1905 + C50965 * C1910) *
                         C50780 +
                     (C38100 * C17607 + C38097 * C17611 + C38099 * C7431 +
                      C50956 * C7437 + C38098 * C1898 + C50965 * C1906) *
                         C118) *
                        C25428) *
                       C1894) *
                  C50669 * C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C50962 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50963 +
                    (((C38098 * C487 + C50965 * C501 + C38099 * C1898 +
                       C50956 * C1906 + C38100 * C7431 + C38097 * C7437) *
                          C118 +
                      (C38098 * C502 + C50965 * C517 + C38099 * C1905 +
                       C50956 * C1910 + C38100 * C7436 + C38097 * C7440) *
                          C50780) *
                         C25428 +
                     ((C38514 + C38515 + C38516) * C118 +
                      (C38517 + C38518 + C38519) * C50780) *
                         C50628) *
                        C2141) *
                       C50669 * C50908 +
                   ((((C38513 + C38512 + C38511) * C118 +
                      (C38510 + C38509 + C38508) * C50780) *
                         C25428 +
                     ((C38842 + C38843 + C38844) * C118 +
                      (C38845 + C38846 + C38847) * C50780) *
                         C50628) *
                        C50963 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C50962 -
                    (((C38100 * C7432 + C38097 * C7438 + C38099 * C1901 +
                       C50956 * C1908 + C38098 * C506 + C50965 * C519) *
                          C50780 +
                      (C38100 * C7429 + C38097 * C7433 + C38099 * C1896 +
                       C50956 * C1902 + C38098 * C489 + C50965 * C505) *
                          C118) *
                         C50628 +
                     ((C38519 + C38518 + C38517) * C50780 +
                      (C38516 + C38515 + C38514) * C118) *
                         C25428) *
                        C2141) *
                       C50669 * C50656)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50749) *
                       C50669 * C1076 +
                   ((((C38513 + C38512 + C38511) * C118 +
                      (C38510 + C38509 + C38508) * C50780) *
                         C25428 +
                     ((C38842 + C38843 + C38844) * C118 +
                      (C38845 + C38846 + C38847) * C50780) *
                         C50628) *
                        C50749 -
                    (((C38144 + C38145 + C38146) * C50780 +
                      (C38147 + C38148 + C38149) * C118) *
                         C50628 +
                     ((C38143 + C38142 + C38141) * C50780 +
                      (C38140 + C38139 + C38138) * C118) *
                         C25428) *
                        C1725) *
                       C50669 * C1077 +
                   ((((C38149 + C38148 + C38147) * C118 +
                      (C38146 + C38145 + C38144) * C50780) *
                         C25428 +
                     ((C38150 + C38151 + C38152) * C118 +
                      (C38153 + C38154 + C38155) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38100 * C1899 + C38097 * C1907 + C38099 * C508 +
                       C50956 * C520 + C38098 * C493 + C50965 * C513) *
                          C50780 +
                      (C38100 * C1895 + C38097 * C1900 + C38099 * C490 +
                       C50956 * C507 + C38098 * C483 + C50965 * C494) *
                          C118) *
                         C50628 +
                     ((C38847 + C38846 + C38845) * C50780 +
                      (C38844 + C38843 + C38842) * C118) *
                         C25428) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C38098 * C119 + C50965 * C126 + C38099 * C486 +
                       C50956 * C500 + C38100 * C487 + C38097 * C501) *
                          C118 +
                      (C38098 * C127 + C50965 * C140 + C38099 * C499 +
                       C50956 * C516 + C38100 * C502 + C38097 * C517) *
                          C50780) *
                         C25428 +
                     ((C38138 + C38139 + C38140) * C118 +
                      (C38141 + C38142 + C38143) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38508 + C38509 + C38510) * C50780 +
                      (C38511 + C38512 + C38513) * C118) *
                         C50628 +
                     ((C38100 * C1905 + C38097 * C1910 + C38099 * C502 +
                       C50956 * C517 + C38098 * C499 + C50965 * C516) *
                          C50780 +
                      (C38100 * C1898 + C38097 * C1906 + C38099 * C487 +
                       C50956 * C501 + C38098 * C486 + C50965 * C500) *
                          C118) *
                         C25428) *
                        C50749) *
                       C289 +
                   ((((C38098 * C932 + C50965 * C937 + C38099 * C1267 +
                       C50956 * C1275 + C38100 * C4575 + C38097 * C4581) *
                          C118 +
                      (C38098 * C938 + C50965 * C947 + C38099 * C1274 +
                       C50956 * C1279 + C38100 * C4580 + C38097 * C4584) *
                          C50780) *
                         C25428 +
                     ((C39054 + C39055 + C39056) * C118 +
                      (C39057 + C39058 + C39059) * C50780) *
                         C50628) *
                        C50749 -
                    (((C38326 + C38327 + C38328) * C50780 +
                      (C38329 + C38330 + C38331) * C118) *
                         C50628 +
                     ((C38100 * C1274 + C38097 * C1279 + C38099 * C938 +
                       C50956 * C947 + C38098 * C310 + C50965 * C327) *
                          C50780 +
                      (C38100 * C1267 + C38097 * C1275 + C38099 * C932 +
                       C50956 * C937 + C38098 * C297 + C50965 * C311) *
                          C118) *
                         C25428) *
                        C1725) *
                       C290 +
                   ((((C38098 * C298 + C50965 * C312 + C38099 * C1614 +
                       C50956 * C1622 + C38100 * C3663 + C38097 * C3669) *
                          C118 +
                      (C38098 * C313 + C50965 * C328 + C38099 * C1621 +
                       C50956 * C1626 + C38100 * C3668 + C38097 * C3672) *
                          C50780) *
                         C25428 +
                     ((C38332 + C38333 + C38334) * C118 +
                      (C38335 + C38336 + C38337) * C50780) *
                         C50628) *
                        C1725 -
                    (((C38100 * C10199 + C38097 * C10203 + C38099 * C3666 +
                       C50956 * C3671 + C38098 * C1619 + C50965 * C1625) *
                          C50780 +
                      (C38100 * C10197 + C38097 * C10200 + C38099 * C3662 +
                       C50956 * C3667 + C38098 * C1613 + C50965 * C1620) *
                          C118) *
                         C50628 +
                     ((C38100 * C10201 + C38097 * C10204 + C38099 * C3668 +
                       C50956 * C3672 + C38098 * C1621 + C50965 * C1626) *
                          C50780 +
                      (C38100 * C10198 + C38097 * C10202 + C38099 * C3663 +
                       C50956 * C3669 + C38098 * C1614 + C50965 * C1622) *
                          C118) *
                         C25428) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50685 * C50916 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50685 * C50721) *
                       C50958 +
                   (((C376 + C375) * C107 + (C374 + C373) * C108 +
                     (C372 + C371) * C109 + (C687 + C688) * C110) *
                        C50685 * C50721 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50685 * C50916) *
                       C50959 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C50685 * C50916 -
                    (((C117 * C675 + C50810 * C677) * C50780 +
                      (C117 * C674 + C50810 * C676) * C118) *
                         C110 +
                     (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
                        C50685 * C50721) *
                       C673)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50685 * C50916 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50685 * C50721) *
                       C50958 +
                   (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                     (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                        C50685 * C50721 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50685 * C50916) *
                       C50959 +
                   (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                     (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                        C50685 * C50916 -
                    (((C117 * C1154 + C50810 * C1162) * C8027 +
                      (C117 * C1150 + C50810 * C1155) * C8032 + C370 * C8026 +
                      C369 * C8031 + C359 * C8025 + C360 * C8030) *
                         C50628 +
                     (C8531 + C8530 + C8529 + C8528 + C8527 + C8526) * C50899) *
                        C50685 * C50721) *
                       C673)) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C118 +
              (C117 * C127 + C50810 * C140) * C50780) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C50917 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50810 * C516) * C50780 +
              (C117 * C486 + C50810 * C500) * C118) *
                 C107) *
                C50749) *
               C50916 +
           ((((C117 * C932 + C50810 * C937) * C118 +
              (C117 * C938 + C50810 * C947) * C50780) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50749 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50810 * C327) * C50780 +
              (C117 * C297 + C50810 * C311) * C118) *
                 C107) *
                C50917) *
               C50721) *
              C292 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50749 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C50917) *
               C50916 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C50917 -
            (((C117 * C945 + C50810 * C951) * C50780 +
              (C117 * C936 + C50810 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C8030 +
              (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
              C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                 C50899 +
             (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                C50917 -
            ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
             (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
              (C117 * C499 + C50810 * C516) * C8025 +
              (C117 * C486 + C50810 * C500) * C8030) *
                 C50899) *
                C50749) *
               C50916 +
           (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
              (C117 * C4167 + C50810 * C4173) * C8032 +
              (C117 * C4172 + C50810 * C4176) * C8027) *
                 C50899 +
             (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                C50749 -
            ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
             (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
              C2543 * C8025 + C2542 * C8030) *
                 C50899) *
                C50917) *
               C50721) *
              C292 +
          ((((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
             (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                C50749 -
            ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
             (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                C50917) *
               C50916 +
           (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
             (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                C50917 -
            (((C117 * C4168 + C50810 * C4174) * C8027 +
              (C117 * C4165 + C50810 * C4169) * C8032 + C3249 * C8026 +
              C3248 * C8031 + C968 * C8025 + C967 * C8030) *
                 C50628 +
             (C8889 + C8888 + C8881 + C8880 + C8879 + C8878) * C50899) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50685 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C50685 * C290 +
           (((C117 * C298 + C50810 * C312) * C118 +
             (C117 * C313 + C50810 * C328) * C50780) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50685 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C50810 * C320) * C118 +
             (C117 * C321 + C50810 * C332) * C50780) *
                C110) *
               C50685 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50685 * C289 -
           (((C117 * C322 + C50810 * C333) * C50780 +
             (C117 * C303 + C50810 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50685 * C50669 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50685 * C50669 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50685 * C50669 * C115 -
          (((C117 * C138 + C50810 * C146) * C50780 +
            (C117 * C125 + C50810 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           ((C560 + C561) * C110 + (C562 + C563) * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50810 * C516) * C50780 +
             (C117 * C486 + C50810 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C118 +
             (C117 * C502 + C50810 * C517) * C50780) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C50669 * C292 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            ((C117 * C491 + C50810 * C509) * C118 +
             (C117 * C510 + C50810 * C521) * C50780) *
                C110) *
               C481 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C480 -
           (((C117 * C511 + C50810 * C522) * C50780 +
             (C117 * C492 + C50810 * C512) * C118) *
                C110 +
            (C571 + C570) * C109 + (C569 + C568) * C108 +
            (C567 + C566) * C107) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C50669 * C113 -
          ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
           (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
              C50685 * C50669 * C114 +
          ((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
           (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
              C50685 * C50669 * C115 -
          (((C117 * C322 + C50810 * C333) * C8027 +
            (C117 * C303 + C50810 * C323) * C8032 + C686 * C8026 +
            C685 * C8031 + C174 * C8025 + C175 * C8030) *
               C50628 +
           (C8051 + C8050 + C8049 + C8048 + C8047 + C8046) * C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C289 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C290 +
           ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
             (C117 * C3499 + C50810 * C3505) * C8032 +
             (C117 * C3504 + C50810 * C3508) * C8027) *
                C50899 +
            (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
               C50685 * C291) *
              C292 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C362 * C8030 + C361 * C8025 + C367 * C8031 + C368 * C8026 +
             C2548 * C8032 + C2549 * C8027) *
                C50628) *
               C50685 * C290 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C289 -
           (((C117 * C3500 + C50810 * C3506) * C8027 +
             (C117 * C3497 + C50810 * C3501) * C8032 + C2549 * C8026 +
             C2548 * C8031 + C368 * C8025 + C367 * C8030) *
                C50628 +
            (C8215 + C8214 + C8207 + C8206 + C8205 + C8204) * C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C480 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C8030 +
             (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
             C3679 * C8026 + (C117 * C3663 + C50810 * C3669) * C8032 +
             (C117 * C3668 + C50810 * C3672) * C8027) *
                C50899 +
            (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
               C482) *
              C50669 * C292 +
          (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
            (C551 * C8030 + C550 * C8025 + C967 * C8031 + C968 * C8026 +
             C3248 * C8032 + C3249 * C8027) *
                C50628) *
               C481 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C480 -
           (((C117 * C3664 + C50810 * C3670) * C8027 +
             (C117 * C3661 + C50810 * C3665) * C8032 + C2723 * C8026 +
             C2722 * C8031 + C557 * C8025 + C556 * C8030) *
                C50628 +
            (C8379 + C8378 + C8371 + C8370 + C8369 + C8368) * C50899) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50917 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C50669 * C50958 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50749 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50917) *
                       C50669 * C50959 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C50917 -
                    (((C117 * C789 + C50810 * C791) * C50780 +
                      (C117 * C788 + C50810 * C790) * C118) *
                         C110 +
                     (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                        C50749) *
                       C50669 * C673)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50917 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C50669 * C50958 +
                   (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50749 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50917) *
                       C50669 * C50959 +
                   (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                     (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                        C50917 -
                    (((C117 * C1615 + C50810 * C1623) * C8027 +
                      (C117 * C1611 + C50810 * C1616) * C8032 + C970 * C8026 +
                      C969 * C8031 + C548 * C8025 + C549 * C8030) *
                         C50628 +
                     (C8683 + C8682 + C8681 + C8680 + C8679 + C8678) * C50899) *
                        C50749) *
                       C50669 * C673)) /
                     (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50685 * C50669 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C50685 * C50669 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C50685 * C50669 * C115 -
          (((C117 * C138 + C50810 * C146) * C50780 +
            (C117 * C125 + C50810 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50685 * C289 -
           ((C371 + C372) * C110 + (C373 + C374) * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C50685 * C290 +
           (((C117 * C298 + C50810 * C312) * C118 +
             (C117 * C313 + C50810 * C328) * C50780) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C50685 * C291) *
              C292 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            ((C117 * C302 + C50810 * C320) * C118 +
             (C117 * C321 + C50810 * C332) * C50780) *
                C110) *
               C50685 * C290 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50685 * C289 -
           (((C117 * C322 + C50810 * C333) * C50780 +
             (C117 * C303 + C50810 * C323) * C118) *
                C110 +
            (C382 + C381) * C109 + (C380 + C379) * C108 +
            (C378 + C377) * C107) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C50669 * C113 -
          ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
           (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
              C50685 * C50669 * C114 +
          ((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
           (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
              C50685 * C50669 * C115 -
          (((C117 * C322 + C50810 * C333) * C8027 +
            (C117 * C303 + C50810 * C323) * C8032 + C686 * C8026 +
            C685 * C8031 + C174 * C8025 + C175 * C8030) *
               C50628 +
           (C8051 + C8050 + C8049 + C8048 + C8047 + C8046) * C50899) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C289 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C290 +
           ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
             (C117 * C3499 + C50810 * C3505) * C8032 +
             (C117 * C3504 + C50810 * C3508) * C8027) *
                C50899 +
            (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
               C50685 * C291) *
              C292 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C362 * C8030 + C361 * C8025 + C367 * C8031 + C368 * C8026 +
             C2548 * C8032 + C2549 * C8027) *
                C50628) *
               C50685 * C290 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C289 -
           (((C117 * C3500 + C50810 * C3506) * C8027 +
             (C117 * C3497 + C50810 * C3501) * C8032 + C2549 * C8026 +
             C2548 * C8031 + C368 * C8025 + C367 * C8030) *
                C50628 +
            (C8215 + C8214 + C8207 + C8206 + C8205 + C8204) * C50899) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50685 * C50960 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50685 * C50961 +
                    (((C117 * C298 + C50810 * C312) * C118 +
                      (C117 * C313 + C50810 * C328) * C50780) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C50685 * C1380) *
                       C50908 +
                   (((C376 + C375) * C107 + (C374 + C373) * C108 +
                     (C372 + C371) * C109 + (C687 + C688) * C110) *
                        C50685 * C50961 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50685 * C50960 -
                    (((C117 * C322 + C50810 * C333) * C50780 +
                      (C117 * C303 + C50810 * C323) * C118) *
                         C110 +
                     (C382 + C381) * C109 + (C380 + C379) * C108 +
                     (C378 + C377) * C107) *
                        C50685 * C1380) *
                       C50656)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50685 * C50960 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50685 * C50961 +
                    ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                      C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                         C50899 +
                     (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                        C50685 * C1380) *
                       C50908 +
                   (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
                     (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                        C50685 * C50961 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50685 * C50960 -
                    (((C117 * C3500 + C50810 * C3506) * C8027 +
                      (C117 * C3497 + C50810 * C3501) * C8032 + C2549 * C8026 +
                      C2548 * C8031 + C368 * C8025 + C367 * C8030) *
                         C50628 +
                     (C8215 + C8214 + C8207 + C8206 + C8205 + C8204) * C50899) *
                        C50685 * C1380) *
                       C50656)) /
                     (p * q * std::sqrt(p + q));
    d2ee[186] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50917 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C50960 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50749 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50917) *
                       C50961 +
                   ((((C117 * C298 + C50810 * C312) * C118 +
                      (C117 * C313 + C50810 * C328) * C50780) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C50917 -
                    (((C117 * C1615 + C50810 * C1623) * C50780 +
                      (C117 * C1611 + C50810 * C1616) * C118) *
                         C110 +
                     ((C117 * C1617 + C50810 * C1624) * C50780 +
                      (C117 * C1612 + C50810 * C1618) * C118) *
                         C109 +
                     ((C117 * C1619 + C50810 * C1625) * C50780 +
                      (C117 * C1613 + C50810 * C1620) * C118) *
                         C108 +
                     ((C117 * C1621 + C50810 * C1626) * C50780 +
                      (C117 * C1614 + C50810 * C1622) * C118) *
                         C107) *
                        C50749) *
                       C1380) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50917 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C50960 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + C9806 * C8032 + C9807 * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50749 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50917) *
                       C50961 +
                   (((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                      C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                         C50899 +
                     (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                        C50917 -
                    (((C117 * C9795 + C50810 * C9799) * C8027 +
                      (C117 * C9793 + C50810 * C9796) * C8032 + C8887 * C8026 +
                      C8886 * C8031 + C3247 * C8025 + C3246 * C8030) *
                         C50628 +
                     ((C117 * C9797 + C50810 * C9800) * C8027 +
                      (C117 * C9794 + C50810 * C9798) * C8032 + C9807 * C8026 +
                      C9806 * C8031 + C4183 * C8025 + C4182 * C8030) *
                         C50899) *
                        C50749) *
                       C1380) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50685 * C1145 -
          (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C50810 * C327) * C50780 +
            (C117 * C297 + C50810 * C311) * C118) *
               C107) *
              C50685 * C1146 +
          (((C117 * C298 + C50810 * C312) * C118 +
            (C117 * C313 + C50810 * C328) * C50780) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C50685 * C1147 -
          (((C117 * C1154 + C50810 * C1162) * C50780 +
            (C117 * C1150 + C50810 * C1155) * C118) *
               C110 +
           ((C117 * C1156 + C50810 * C1163) * C50780 +
            (C117 * C1151 + C50810 * C1157) * C118) *
               C109 +
           ((C117 * C1158 + C50810 * C1164) * C50780 +
            (C117 * C1152 + C50810 * C1159) * C118) *
               C108 +
           ((C117 * C1160 + C50810 * C1165) * C50780 +
            (C117 * C1153 + C50810 * C1161) * C118) *
               C107) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50685 * C1074 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C50685 * C50721) *
              C1076 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50685 * C50721 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50685 * C1074) *
              C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50685 * C1074 -
           (((C117 * C675 + C50810 * C677) * C50780 +
             (C117 * C674 + C50810 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C480 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50810 * C516) * C50780 +
             (C117 * C486 + C50810 * C500) * C118) *
                C107) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C118 +
             (C117 * C502 + C50810 * C517) * C50780) *
                C107 +
            (C566 + C567) * C108 + (C568 + C569) * C109 +
            (C570 + C571) * C110) *
               C482) *
              C1074 +
          ((((C117 * C932 + C50810 * C937) * C118 +
             (C117 * C938 + C50810 * C947) * C50780) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C481 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C480 -
           (((C117 * C1268 + C50810 * C1276) * C50780 +
             (C117 * C1264 + C50810 * C1269) * C118) *
                C110 +
            ((C117 * C1270 + C50810 * C1277) * C50780 +
             (C117 * C1265 + C50810 * C1271) * C118) *
                C109 +
            ((C117 * C1272 + C50810 * C1278) * C50780 +
             (C117 * C1266 + C50810 * C1273) * C118) *
                C108 +
            ((C117 * C1274 + C50810 * C1279) * C50780 +
             (C117 * C1267 + C50810 * C1275) * C118) *
                C107) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C1074 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C50721) *
              C1076 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
               C50685 * C50721 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C1074) *
              C1077 +
          (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
            (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
               C50685 * C1074 -
           (((C117 * C1154 + C50810 * C1162) * C8027 +
             (C117 * C1150 + C50810 * C1155) * C8032 + C370 * C8026 +
             C369 * C8031 + C359 * C8025 + C360 * C8030) *
                C50628 +
            (C8531 + C8530 + C8529 + C8528 + C8527 + C8526) * C50899) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C1145 -
          ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
           (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
            C2543 * C8025 + C2542 * C8030) *
               C50899) *
              C50685 * C1146 +
          ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
            C9146 * C8032 + C9147 * C8027) *
               C50899 +
           (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
              C50685 * C1147 -
          (((C117 * C9135 + C50810 * C9139) * C8027 +
            (C117 * C9133 + C50810 * C9136) * C8032 + C8213 * C8026 +
            C8212 * C8031 + C2547 * C8025 + C2546 * C8030) *
               C50628 +
           ((C117 * C9137 + C50810 * C9140) * C8027 +
            (C117 * C9134 + C50810 * C9138) * C8032 + C9147 * C8026 +
            C9146 * C8031 + C3515 * C8025 + C3514 * C8030) *
               C50899) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C480 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C8030 +
             (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
             C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
                C50899 +
            (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
               C482) *
              C1074 +
          (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
             (C117 * C4167 + C50810 * C4173) * C8032 +
             (C117 * C4172 + C50810 * C4176) * C8027) *
                C50899 +
            (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
               C481 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C480 -
           (((C117 * C9295 + C50810 * C9299) * C8027 +
             (C117 * C9293 + C50810 * C9296) * C8032 + C8377 * C8026 +
             C8376 * C8031 + C2721 * C8025 + C2720 * C8030) *
                C50628 +
            ((C117 * C9297 + C50810 * C9300) * C8027 +
             (C117 * C9294 + C50810 * C9298) * C8032 + C9307 * C8026 +
             C9306 * C8031 + C3679 * C8025 + C3678 * C8030) *
                C50899) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C118 +
              (C117 * C127 + C50810 * C140) * C50780) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C50917 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50810 * C516) * C50780 +
              (C117 * C486 + C50810 * C500) * C118) *
                 C107) *
                C50749) *
               C1074 +
           ((((C117 * C932 + C50810 * C937) * C118 +
              (C117 * C938 + C50810 * C947) * C50780) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50749 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50810 * C327) * C50780 +
              (C117 * C297 + C50810 * C311) * C118) *
                 C107) *
                C50917) *
               C50721) *
              C50908 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50749 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C50917) *
               C1074 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C50917 -
            (((C117 * C945 + C50810 * C951) * C50780 +
              (C117 * C936 + C50810 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C8030 +
              (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
              C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                 C50899 +
             (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                C50917 -
            ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
             (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
              (C117 * C499 + C50810 * C516) * C8025 +
              (C117 * C486 + C50810 * C500) * C8030) *
                 C50899) *
                C50749) *
               C1074 +
           (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
              (C117 * C4167 + C50810 * C4173) * C8032 +
              (C117 * C4172 + C50810 * C4176) * C8027) *
                 C50899 +
             (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                C50749 -
            ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
             (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
              C2543 * C8025 + C2542 * C8030) *
                 C50899) *
                C50917) *
               C50721) *
              C50908 +
          ((((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
             (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                C50749 -
            ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
             (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                C50917) *
               C1074 +
           (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
             (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                C50917 -
            (((C117 * C4168 + C50810 * C4174) * C8027 +
              (C117 * C4165 + C50810 * C4169) * C8032 + C3249 * C8026 +
              C3248 * C8031 + C968 * C8025 + C967 * C8030) *
                 C50628 +
             (C8889 + C8888 + C8881 + C8880 + C8879 + C8878) * C50899) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C50685 * C1074 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C50685 * C50721) *
              C1076 +
          (((C376 + C375) * C107 + (C374 + C373) * C108 + (C372 + C371) * C109 +
            (C687 + C688) * C110) *
               C50685 * C50721 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C50685 * C1074) *
              C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C50685 * C1074 -
           (((C117 * C675 + C50810 * C677) * C50780 +
             (C117 * C674 + C50810 * C676) * C118) *
                C110 +
            (C688 + C687) * C109 + C679 * C108 + C680 * C107) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C50685 * C1145 -
          (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
           ((C117 * C310 + C50810 * C327) * C50780 +
            (C117 * C297 + C50810 * C311) * C118) *
               C107) *
              C50685 * C1146 +
          (((C117 * C298 + C50810 * C312) * C118 +
            (C117 * C313 + C50810 * C328) * C50780) *
               C107 +
           (C377 + C378) * C108 + (C379 + C380) * C109 + (C381 + C382) * C110) *
              C50685 * C1147 -
          (((C117 * C1154 + C50810 * C1162) * C50780 +
            (C117 * C1150 + C50810 * C1155) * C118) *
               C110 +
           ((C117 * C1156 + C50810 * C1163) * C50780 +
            (C117 * C1151 + C50810 * C1157) * C118) *
               C109 +
           ((C117 * C1158 + C50810 * C1164) * C50780 +
            (C117 * C1152 + C50810 * C1159) * C118) *
               C108 +
           ((C117 * C1160 + C50810 * C1165) * C50780 +
            (C117 * C1153 + C50810 * C1161) * C118) *
               C107) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C50685 * C1074 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C50685 * C50721) *
              C1076 +
          (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
            (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
               C50685 * C50721 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C50685 * C1074) *
              C1077 +
          (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
            (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
               C50685 * C1074 -
           (((C117 * C1154 + C50810 * C1162) * C8027 +
             (C117 * C1150 + C50810 * C1155) * C8032 + C370 * C8026 +
             C369 * C8031 + C359 * C8025 + C360 * C8030) *
                C50628 +
            (C8531 + C8530 + C8529 + C8528 + C8527 + C8526) * C50899) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C50685 * C1145 -
          ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
           (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
            C2543 * C8025 + C2542 * C8030) *
               C50899) *
              C50685 * C1146 +
          ((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
            C9146 * C8032 + C9147 * C8027) *
               C50899 +
           (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
              C50685 * C1147 -
          (((C117 * C9135 + C50810 * C9139) * C8027 +
            (C117 * C9133 + C50810 * C9136) * C8032 + C8213 * C8026 +
            C8212 * C8031 + C2547 * C8025 + C2546 * C8030) *
               C50628 +
           ((C117 * C9137 + C50810 * C9140) * C8027 +
            (C117 * C9134 + C50810 * C9138) * C8032 + C9147 * C8026 +
            C9146 * C8031 + C3515 * C8025 + C3514 * C8030) *
               C50899) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C118 +
              (C117 * C127 + C50810 * C140) * C50780) *
                 C107 +
             (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                C1725 -
            (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
             ((C117 * C499 + C50810 * C516) * C50780 +
              (C117 * C486 + C50810 * C500) * C118) *
                 C107) *
                C50749) *
               C50916 +
           ((((C117 * C932 + C50810 * C937) * C118 +
              (C117 * C938 + C50810 * C947) * C50780) *
                 C107 +
             (C971 + C972) * C108 + (C973 + C974) * C109 +
             (C975 + C976) * C110) *
                C50749 -
            (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
             ((C117 * C310 + C50810 * C327) * C50780 +
              (C117 * C297 + C50810 * C311) * C118) *
                 C107) *
                C1725) *
               C50721) *
              C50908 +
          ((((C565 + C564) * C107 + (C563 + C562) * C108 +
             (C561 + C560) * C109 + (C801 + C802) * C110) *
                C50749 -
            (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
             (C179 + C178) * C107) *
                C1725) *
               C50916 +
           (((C376 + C375) * C107 + (C374 + C373) * C108 +
             (C372 + C371) * C109 + (C687 + C688) * C110) *
                C1725 -
            (((C117 * C945 + C50810 * C951) * C50780 +
              (C117 * C936 + C50810 * C946) * C118) *
                 C110 +
             (C976 + C975) * C109 + (C974 + C973) * C108 +
             (C972 + C971) * C107) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C8030 +
              (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
              C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                 C50899 +
             (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                C1725 -
            ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
             (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
              (C117 * C499 + C50810 * C516) * C8025 +
              (C117 * C486 + C50810 * C500) * C8030) *
                 C50899) *
                C50749) *
               C50916 +
           (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
              C9806 * C8032 + C9807 * C8027) *
                 C50899 +
             (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                C50749 -
            ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
             (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
              C2543 * C8025 + C2542 * C8030) *
                 C50899) *
                C1725) *
               C50721) *
              C50908 +
          ((((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
             (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                C50749 -
            ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
             (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                C1725) *
               C50916 +
           (((C8203 + C8202 + C8201 + C8200 + C8199 + C8198) * C50899 +
             (C8526 + C8527 + C8528 + C8529 + C8530 + C8531) * C50628) *
                C1725 -
            (((C117 * C4168 + C50810 * C4174) * C8027 +
              (C117 * C4165 + C50810 * C4169) * C8032 + C3249 * C8026 +
              C3248 * C8031 + C968 * C8025 + C967 * C8030) *
                 C50628 +
             (C8889 + C8888 + C8881 + C8880 + C8879 + C8878) * C50899) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50962 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C118 +
                      (C117 * C502 + C50810 * C517) * C50780) *
                         C107 +
                     (C566 + C567) * C108 + (C568 + C569) * C109 +
                     (C570 + C571) * C110) *
                        C2141) *
                       C50916 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50963 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C50962 -
                    (((C117 * C1268 + C50810 * C1276) * C50780 +
                      (C117 * C1264 + C50810 * C1269) * C118) *
                         C110 +
                     ((C117 * C1270 + C50810 * C1277) * C50780 +
                      (C117 * C1265 + C50810 * C1271) * C118) *
                         C109 +
                     ((C117 * C1272 + C50810 * C1278) * C50780 +
                      (C117 * C1266 + C50810 * C1273) * C118) *
                         C108 +
                     ((C117 * C1274 + C50810 * C1279) * C50780 +
                      (C117 * C1267 + C50810 * C1275) * C118) *
                         C107) *
                        C2141) *
                       C50721) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50962 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C8030 +
                      (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
                      C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
                         C50899 +
                     (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
                        C2141) *
                       C50916 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + C9806 * C8032 + C9807 * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50963 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C50962 -
                    (((C117 * C9295 + C50810 * C9299) * C8027 +
                      (C117 * C9293 + C50810 * C9296) * C8032 + C8377 * C8026 +
                      C8376 * C8031 + C2721 * C8025 + C2720 * C8030) *
                         C50628 +
                     ((C117 * C9297 + C50810 * C9300) * C8027 +
                      (C117 * C9294 + C50810 * C9298) * C8032 + C9307 * C8026 +
                      C9306 * C8031 + C3679 * C8025 + C3678 * C8030) *
                         C50899) *
                        C2141) *
                       C50721) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C1725 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50810 * C516) * C50780 +
             (C117 * C486 + C50810 * C500) * C118) *
                C107) *
               C50749) *
              C289 +
          ((((C117 * C932 + C50810 * C937) * C118 +
             (C117 * C938 + C50810 * C947) * C50780) *
                C107 +
            (C971 + C972) * C108 + (C973 + C974) * C109 +
            (C975 + C976) * C110) *
               C50749 -
           (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
            ((C117 * C310 + C50810 * C327) * C50780 +
             (C117 * C297 + C50810 * C311) * C118) *
                C107) *
               C1725) *
              C290 +
          ((((C117 * C298 + C50810 * C312) * C118 +
             (C117 * C313 + C50810 * C328) * C50780) *
                C107 +
            (C377 + C378) * C108 + (C379 + C380) * C109 +
            (C381 + C382) * C110) *
               C1725 -
           (((C117 * C1615 + C50810 * C1623) * C50780 +
             (C117 * C1611 + C50810 * C1616) * C118) *
                C110 +
            ((C117 * C1617 + C50810 * C1624) * C50780 +
             (C117 * C1612 + C50810 * C1618) * C118) *
                C109 +
            ((C117 * C1619 + C50810 * C1625) * C50780 +
             (C117 * C1613 + C50810 * C1620) * C118) *
                C108 +
            ((C117 * C1621 + C50810 * C1626) * C50780 +
             (C117 * C1614 + C50810 * C1622) * C118) *
                C107) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C118 +
             (C117 * C127 + C50810 * C140) * C50780) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C1725 -
           (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
            ((C117 * C499 + C50810 * C516) * C50780 +
             (C117 * C486 + C50810 * C500) * C118) *
                C107) *
               C50749) *
              C50669 * C1076 +
          (((C565 + C564) * C107 + (C563 + C562) * C108 + (C561 + C560) * C109 +
            (C801 + C802) * C110) *
               C50749 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C1725) *
              C50669 * C1077 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C1725 -
           (((C117 * C789 + C50810 * C791) * C50780 +
             (C117 * C788 + C50810 * C790) * C118) *
                C110 +
            (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C118 +
            (C117 * C127 + C50810 * C140) * C50780) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C1891 -
          (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
           ((C117 * C499 + C50810 * C516) * C50780 +
            (C117 * C486 + C50810 * C500) * C118) *
               C107) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C118 +
            (C117 * C502 + C50810 * C517) * C50780) *
               C107 +
           (C566 + C567) * C108 + (C568 + C569) * C109 + (C570 + C571) * C110) *
              C1893 -
          (((C117 * C1899 + C50810 * C1907) * C50780 +
            (C117 * C1895 + C50810 * C1900) * C118) *
               C110 +
           ((C117 * C1901 + C50810 * C1908) * C50780 +
            (C117 * C1896 + C50810 * C1902) * C118) *
               C109 +
           ((C117 * C1903 + C50810 * C1909) * C50780 +
            (C117 * C1897 + C50810 * C1904) * C118) *
               C108 +
           ((C117 * C1905 + C50810 * C1910) * C50780 +
            (C117 * C1898 + C50810 * C1906) * C118) *
               C107) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C1725 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C50749) *
              C50669 * C1076 +
          (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
            (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
               C50749 -
           ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
            (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
               C1725) *
              C50669 * C1077 +
          (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
            (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
               C1725 -
           (((C117 * C1615 + C50810 * C1623) * C8027 +
             (C117 * C1611 + C50810 * C1616) * C8032 + C970 * C8026 +
             C969 * C8031 + C548 * C8025 + C549 * C8030) *
                C50628 +
            (C8683 + C8682 + C8681 + C8680 + C8679 + C8678) * C50899) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C8030 +
             (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
             C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                C50899 +
            (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
               C1725 -
           ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
            (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
             (C117 * C499 + C50810 * C516) * C8025 +
             (C117 * C486 + C50810 * C500) * C8030) *
                C50899) *
               C50749) *
              C289 +
          (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 + C4183 * C8026 +
             C9806 * C8032 + C9807 * C8027) *
                C50899 +
            (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
               C50749 -
           ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
            (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 + C2545 * C8031 +
             C2543 * C8025 + C2542 * C8030) *
                C50899) *
               C1725) *
              C290 +
          (((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 + C3515 * C8026 +
             C9146 * C8032 + C9147 * C8027) *
                C50899 +
            (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
               C1725 -
           (((C117 * C9795 + C50810 * C9799) * C8027 +
             (C117 * C9793 + C50810 * C9796) * C8032 + C8887 * C8026 +
             C8886 * C8031 + C3247 * C8025 + C3246 * C8030) *
                C50628 +
            ((C117 * C9797 + C50810 * C9800) * C8027 +
             (C117 * C9794 + C50810 * C9798) * C8032 + C9807 * C8026 +
             C9806 * C8031 + C4183 * C8025 + C4182 * C8030) *
                C50899) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C8030 +
            (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
            C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
               C50899 +
           (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
              C1891 -
          ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
           (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 + C3245 * C8031 +
            (C117 * C499 + C50810 * C516) * C8025 +
            (C117 * C486 + C50810 * C500) * C8030) *
               C50899) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C8030 +
            (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
            C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
               C50899 +
           (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
              C1893 -
          (((C117 * C10199 + C50810 * C10203) * C8027 +
            (C117 * C10197 + C50810 * C10200) * C8032 +
            (C117 * C4578 + C50810 * C4583) * C8026 +
            (C117 * C4574 + C50810 * C4579) * C8031 +
            (C117 * C1903 + C50810 * C1909) * C8025 +
            (C117 * C1897 + C50810 * C1904) * C8030) *
               C50628 +
           ((C117 * C10201 + C50810 * C10204) * C8027 +
            (C117 * C10198 + C50810 * C10202) * C8032 +
            (C117 * C4580 + C50810 * C4584) * C8026 +
            (C117 * C4575 + C50810 * C4581) * C8031 +
            (C117 * C1905 + C50810 * C1910) * C8025 +
            (C117 * C1898 + C50810 * C1906) * C8030) *
               C50899) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[193] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C50962 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C118 +
                      (C117 * C502 + C50810 * C517) * C50780) *
                         C107 +
                     (C566 + C567) * C108 + (C568 + C569) * C109 +
                     (C570 + C571) * C110) *
                        C2141) *
                       C50669 * C50908 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50963 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C50962 -
                    (((C117 * C511 + C50810 * C522) * C50780 +
                      (C117 * C492 + C50810 * C512) * C118) *
                         C110 +
                     (C571 + C570) * C109 + (C569 + C568) * C108 +
                     (C567 + C566) * C107) *
                        C2141) *
                       C50669 * C50656)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C50962 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50963 +
                    (((C117 * C487 + C50810 * C501) * C8030 +
                      (C117 * C502 + C50810 * C517) * C8025 + C3678 * C8031 +
                      C3679 * C8026 + C9306 * C8032 + C9307 * C8027) *
                         C50899 +
                     (C8368 + C8369 + C8370 + C8371 + C8378 + C8379) * C50628) *
                        C2141) *
                       C50669 * C50908 +
                   (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50963 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C50962 -
                    (((C117 * C3664 + C50810 * C3670) * C8027 +
                      (C117 * C3661 + C50810 * C3665) * C8032 + C2723 * C8026 +
                      C2722 * C8031 + C557 * C8025 + C556 * C8030) *
                         C50628 +
                     (C8379 + C8378 + C8371 + C8370 + C8369 + C8368) * C50899) *
                        C2141) *
                       C50669 * C50656)) /
                     (p * q * std::sqrt(p + q));
    d2ee[194] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C1725 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C50669 * C1076 +
                   (((C565 + C564) * C107 + (C563 + C562) * C108 +
                     (C561 + C560) * C109 + (C801 + C802) * C110) *
                        C50749 -
                    (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                     (C179 + C178) * C107) *
                        C1725) *
                       C50669 * C1077 +
                   ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                     (C186 + C187) * C110) *
                        C1725 -
                    (((C117 * C789 + C50810 * C791) * C50780 +
                      (C117 * C788 + C50810 * C790) * C118) *
                         C110 +
                     (C802 + C801) * C109 + C793 * C108 + C794 * C107) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C118 +
                      (C117 * C127 + C50810 * C140) * C50780) *
                         C107 +
                     (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                        C1725 -
                    (C793 * C110 + C794 * C109 + (C564 + C565) * C108 +
                     ((C117 * C499 + C50810 * C516) * C50780 +
                      (C117 * C486 + C50810 * C500) * C118) *
                         C107) *
                        C50749) *
                       C289 +
                   ((((C117 * C932 + C50810 * C937) * C118 +
                      (C117 * C938 + C50810 * C947) * C50780) *
                         C107 +
                     (C971 + C972) * C108 + (C973 + C974) * C109 +
                     (C975 + C976) * C110) *
                        C50749 -
                    (C679 * C110 + C680 * C109 + (C375 + C376) * C108 +
                     ((C117 * C310 + C50810 * C327) * C50780 +
                      (C117 * C297 + C50810 * C311) * C118) *
                         C107) *
                        C1725) *
                       C290 +
                   ((((C117 * C298 + C50810 * C312) * C118 +
                      (C117 * C313 + C50810 * C328) * C50780) *
                         C107 +
                     (C377 + C378) * C108 + (C379 + C380) * C109 +
                     (C381 + C382) * C110) *
                        C1725 -
                    (((C117 * C1615 + C50810 * C1623) * C50780 +
                      (C117 * C1611 + C50810 * C1616) * C118) *
                         C110 +
                     ((C117 * C1617 + C50810 * C1624) * C50780 +
                      (C117 * C1612 + C50810 * C1618) * C118) *
                         C109 +
                     ((C117 * C1619 + C50810 * C1625) * C50780 +
                      (C117 * C1613 + C50810 * C1620) * C118) *
                         C108 +
                     ((C117 * C1621 + C50810 * C1626) * C50780 +
                      (C117 * C1614 + C50810 * C1622) * C118) *
                         C107) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C1725 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C50669 * C1076 +
                   (((C8367 + C8366 + C8365 + C8364 + C8363 + C8362) * C50899 +
                     (C8678 + C8679 + C8680 + C8681 + C8682 + C8683) * C50628) *
                        C50749 -
                    ((C8040 + C8041 + C8042 + C8043 + C8044 + C8045) * C50628 +
                     (C8039 + C8038 + C8037 + C8036 + C8035 + C8034) * C50899) *
                        C1725) *
                       C50669 * C1077 +
                   (((C8045 + C8044 + C8043 + C8042 + C8041 + C8040) * C50899 +
                     (C8046 + C8047 + C8048 + C8049 + C8050 + C8051) * C50628) *
                        C1725 -
                    (((C117 * C1615 + C50810 * C1623) * C8027 +
                      (C117 * C1611 + C50810 * C1616) * C8032 + C970 * C8026 +
                      C969 * C8031 + C548 * C8025 + C549 * C8030) *
                         C50628 +
                     (C8683 + C8682 + C8681 + C8680 + C8679 + C8678) * C50899) *
                        C50749) *
                       C50669 * C1078)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50810 * C126) * C8030 +
                      (C117 * C127 + C50810 * C140) * C8025 + C2542 * C8031 +
                      C2543 * C8026 + C2545 * C8032 + C2544 * C8027) *
                         C50899 +
                     (C8034 + C8035 + C8036 + C8037 + C8038 + C8039) * C50628) *
                        C1725 -
                    ((C8362 + C8363 + C8364 + C8365 + C8366 + C8367) * C50628 +
                     (C4183 * C8027 + C4182 * C8032 + C3244 * C8026 +
                      C3245 * C8031 + (C117 * C499 + C50810 * C516) * C8025 +
                      (C117 * C486 + C50810 * C500) * C8030) *
                         C50899) *
                        C50749) *
                       C289 +
                   (((C3245 * C8030 + C3244 * C8025 + C4182 * C8031 +
                      C4183 * C8026 + C9806 * C8032 + C9807 * C8027) *
                         C50899 +
                     (C8878 + C8879 + C8880 + C8881 + C8888 + C8889) * C50628) *
                        C50749 -
                    ((C8198 + C8199 + C8200 + C8201 + C8202 + C8203) * C50628 +
                     (C3515 * C8027 + C3514 * C8032 + C2544 * C8026 +
                      C2545 * C8031 + C2543 * C8025 + C2542 * C8030) *
                         C50899) *
                        C1725) *
                       C290 +
                   (((C2545 * C8030 + C2544 * C8025 + C3514 * C8031 +
                      C3515 * C8026 + C9146 * C8032 + C9147 * C8027) *
                         C50899 +
                     (C8204 + C8205 + C8206 + C8207 + C8214 + C8215) * C50628) *
                        C1725 -
                    (((C117 * C9795 + C50810 * C9799) * C8027 +
                      (C117 * C9793 + C50810 * C9796) * C8032 + C8887 * C8026 +
                      C8886 * C8031 + C3247 * C8025 + C3246 * C8030) *
                         C50628 +
                     ((C117 * C9797 + C50810 * C9800) * C8027 +
                      (C117 * C9794 + C50810 * C9798) * C8032 + C9807 * C8026 +
                      C9806 * C8031 + C4183 * C8025 + C4182 * C8030) *
                         C50899) *
                        C50749) *
                       C291) *
                  C50650) /
                     (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C50916 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50721) *
              C50958 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50721 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C50916) *
              C50959 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50685 * C50916 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C2344 + C686 * C50926 +
             C685 * C2343) *
                C2342 +
            (C2878 + C2877 + C2876 + C2875) * C2341 + C2880 * C2340) *
               C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C50916 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50721) *
              C50958 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50721 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C50916) *
              C50959 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50685 * C50916 -
           ((C117 * C3500 + C50810 * C3506) * C10760 +
            (C117 * C3497 + C50810 * C3501) * C10765 + C2549 * C10759 +
            C2548 * C10764 + C368 * C10758 + C367 * C10763 + C361 * C10757 +
            C362 * C10762) *
               C50623 * C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C2343 +
              (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
              C2543 * C50796) *
                 C2340 +
             (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                C50917 -
            (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
             (C3244 * C50796 + C3245 * C2344 +
              (C117 * C499 + C50810 * C516) * C50926 +
              (C117 * C486 + C50810 * C500) * C2343) *
                 C2340) *
                C50749) *
               C50916 +
           (((C3245 * C2343 + C3244 * C50926 +
              (C117 * C1614 + C50810 * C1622) * C2344 +
              (C117 * C1621 + C50810 * C1626) * C50796) *
                 C2340 +
             (C3232 + C3233 + C3250 + C3251) * C2341 +
             (C3238 + C3239 + C3252 + C3253) * C2342) *
                C50749 -
            (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
             (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                 C2340) *
                C50917) *
               C50721) *
              C292 +
          ((((C2707 + C2706 + C2705 + C2704) * C2340 +
             (C2703 + C2702 + C2701 + C2700) * C2341 +
             (C3028 + C3029 + C3030 + C3031) * C2342) *
                C50749 -
            (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
             (C2349 + C2348 + C2347 + C2346) * C2340) *
                C50917) *
               C50916 +
           (((C2525 + C2524 + C2523 + C2522) * C2340 +
             (C2521 + C2520 + C2519 + C2518) * C2341 +
             (C2875 + C2876 + C2877 + C2878) * C2342) *
                C50917 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C2344 + C970 * C50926 +
              C969 * C2343) *
                 C2342 +
             (C3253 + C3252 + C3239 + C3238) * C2341 +
             (C3251 + C3250 + C3233 + C3232) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C10762 +
             (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
             C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
             C3515 * C10760) *
                C50623 * C50917 -
            (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
             C3244 * C10758 + C3245 * C10763 +
             (C117 * C499 + C50810 * C516) * C10757 +
             (C117 * C486 + C50810 * C500) * C10762) *
                C50623 * C50749) *
               C50916 +
           ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
             C9806 * C10764 + C9807 * C10759 +
             (C117 * C9794 + C50810 * C9798) * C10765 +
             (C117 * C9797 + C50810 * C9800) * C10760) *
                C50623 * C50749 -
            (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
             C2544 * C10758 + C2545 * C10763 + C2543 * C10757 +
             C2542 * C10762) *
                C50623 * C50917) *
               C50721) *
              C292 +
          (((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
             C3246 * C10764 + C3247 * C10759 + C8886 * C10765 +
             C8887 * C10760) *
                C50623 * C50749 -
            (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
             C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
                C50623 * C50917) *
               C50916 +
           ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
             C2546 * C10764 + C2547 * C10759 + C8212 * C10765 +
             C8213 * C10760) *
                C50623 * C50917 -
            ((C117 * C9795 + C50810 * C9799) * C10760 +
             (C117 * C9793 + C50810 * C9796) * C10765 + C8887 * C10759 +
             C8886 * C10764 + C3247 * C10758 + C3246 * C10763 + C966 * C10757 +
             C965 * C10762) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C289 -
           ((C2518 + C2519 + C2520 + C2521) * C2342 +
            (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C290 +
           ((C2545 * C2343 + C2544 * C50926 +
             (C117 * C1153 + C50810 * C1161) * C2344 +
             (C117 * C1160 + C50810 * C1165) * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50685 * C291) *
              C292 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C360 * C2343 + C359 * C50926 + C369 * C2344 + C370 * C50796) *
                C2342) *
               C50685 * C290 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C289 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C2344 + C370 * C50926 +
             C369 * C2343) *
                C2342 +
            (C2553 + C2552 + C2537 + C2536) * C2341 +
            (C2551 + C2550 + C2531 + C2530) * C2340) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 +
            (C117 * C297 + C50810 * C311) * C2344 +
            (C117 * C310 + C50810 * C327) * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C50685 * C50669 * C113 -
          (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
           (C2349 + C2348 + C2347 + C2346) * C2340) *
              C50685 * C50669 * C114 +
          (C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
           (C2358 + C2359 + C2360 + C2361) * C2342) *
              C50685 * C50669 * C115 -
          (((C117 * C675 + C50810 * C677) * C50796 +
            (C117 * C674 + C50810 * C676) * C2344 + C177 * C50926 +
            C176 * C2343) *
               C2342 +
           (C2361 + C2360 + C2359 + C2358) * C2341 + C2367 * C2340) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C480 -
           ((C2700 + C2701 + C2702 + C2703) * C2342 +
            (C2704 + C2705 + C2706 + C2707) * C2341 +
            ((C117 * C938 + C50810 * C947) * C50796 +
             (C117 * C932 + C50810 * C937) * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 +
             (C117 * C1267 + C50810 * C1275) * C2344 +
             (C117 * C1274 + C50810 * C1279) * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C482) *
              C50669 * C292 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C549 * C2343 + C548 * C50926 + C969 * C2344 + C970 * C50796) *
                C2342) *
               C481 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C480 -
           (((C117 * C1268 + C50810 * C1276) * C50796 +
             (C117 * C1264 + C50810 * C1269) * C2344 + C559 * C50926 +
             C558 * C2343) *
                C2342 +
            (C2727 + C2726 + C2715 + C2714) * C2341 +
            (C2725 + C2724 + C2709 + C2708) * C2340) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C50669 * C113 -
          (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
           C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
              C50623 * C50685 * C50669 * C114 +
          (C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
           C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
              C50623 * C50685 * C50669 * C115 -
          ((C117 * C1154 + C50810 * C1162) * C10760 +
           (C117 * C1150 + C50810 * C1155) * C10765 + C370 * C10759 +
           C369 * C10764 + C359 * C10758 + C360 * C10763 + C173 * C10757 +
           C172 * C10762) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C289 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C290 +
           (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 +
            (C117 * C9134 + C50810 * C9138) * C10765 +
            (C117 * C9137 + C50810 * C9140) * C10760) *
               C50623 * C50685 * C291) *
              C292 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C290 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C289 -
           ((C117 * C9135 + C50810 * C9139) * C10760 +
            (C117 * C9133 + C50810 * C9136) * C10765 + C8213 * C10759 +
            C8212 * C10764 + C2547 * C10758 + C2546 * C10763 + C366 * C10757 +
            C365 * C10762) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C480 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C481 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 +
            (C117 * C9294 + C50810 * C9298) * C10765 +
            (C117 * C9297 + C50810 * C9300) * C10760) *
               C50623 * C482) *
              C50669 * C292 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C481 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C480 -
           ((C117 * C9295 + C50810 * C9299) * C10760 +
            (C117 * C9293 + C50810 * C9296) * C10765 + C8377 * C10759 +
            C8376 * C10764 + C2721 * C10758 + C2720 * C10763 + C555 * C10757 +
            C554 * C10762) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50917 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            ((C117 * C938 + C50810 * C947) * C50796 +
             (C117 * C932 + C50810 * C937) * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50669 * C50958 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50749 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50917) *
              C50669 * C50959 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50917 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C2344 + C800 * C50926 +
             C799 * C2343) *
                C2342 +
            (C3031 + C3030 + C3029 + C3028) * C2341 + C3033 * C2340) *
               C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50917 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50669 * C50958 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50749 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50917) *
              C50669 * C50959 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50917 -
           ((C117 * C4168 + C50810 * C4174) * C10760 +
            (C117 * C4165 + C50810 * C4169) * C10765 + C3249 * C10759 +
            C3248 * C10764 + C968 * C10758 + C967 * C10763 + C550 * C10757 +
            C551 * C10762) *
               C50623 * C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 +
            (C117 * C297 + C50810 * C311) * C2344 +
            (C117 * C310 + C50810 * C327) * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C50685 * C50669 * C113 -
          (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
           (C2349 + C2348 + C2347 + C2346) * C2340) *
              C50685 * C50669 * C114 +
          (C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
           (C2358 + C2359 + C2360 + C2361) * C2342) *
              C50685 * C50669 * C115 -
          (((C117 * C675 + C50810 * C677) * C50796 +
            (C117 * C674 + C50810 * C676) * C2344 + C177 * C50926 +
            C176 * C2343) *
               C2342 +
           (C2361 + C2360 + C2359 + C2358) * C2341 + C2367 * C2340) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C289 -
           ((C2518 + C2519 + C2520 + C2521) * C2342 +
            (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C290 +
           ((C2545 * C2343 + C2544 * C50926 +
             (C117 * C1153 + C50810 * C1161) * C2344 +
             (C117 * C1160 + C50810 * C1165) * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50685 * C291) *
              C292 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C360 * C2343 + C359 * C50926 + C369 * C2344 + C370 * C50796) *
                C2342) *
               C50685 * C290 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C289 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C2344 + C370 * C50926 +
             C369 * C2343) *
                C2342 +
            (C2553 + C2552 + C2537 + C2536) * C2341 +
            (C2551 + C2550 + C2531 + C2530) * C2340) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C50669 * C113 -
          (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
           C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
              C50623 * C50685 * C50669 * C114 +
          (C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
           C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
              C50623 * C50685 * C50669 * C115 -
          ((C117 * C1154 + C50810 * C1162) * C10760 +
           (C117 * C1150 + C50810 * C1155) * C10765 + C370 * C10759 +
           C369 * C10764 + C359 * C10758 + C360 * C10763 + C173 * C10757 +
           C172 * C10762) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C289 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C290 +
           (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 +
            (C117 * C9134 + C50810 * C9138) * C10765 +
            (C117 * C9137 + C50810 * C9140) * C10760) *
               C50623 * C50685 * C291) *
              C292 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C290 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C289 -
           ((C117 * C9135 + C50810 * C9139) * C10760 +
            (C117 * C9133 + C50810 * C9136) * C10765 + C8213 * C10759 +
            C8212 * C10764 + C2547 * C10758 + C2546 * C10763 + C366 * C10757 +
            C365 * C10762) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C50960 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50961 +
           ((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50685 * C1380) *
              C50908 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50961 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C50960 -
           (((C117 * C1154 + C50810 * C1162) * C50796 +
             (C117 * C1150 + C50810 * C1155) * C2344 + C370 * C50926 +
             C369 * C2343) *
                C2342 +
            (C2553 + C2552 + C2537 + C2536) * C2341 +
            (C2551 + C2550 + C2531 + C2530) * C2340) *
               C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C50960 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50961 +
           (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C50685 * C1380) *
              C50908 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50961 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C50960 -
           ((C117 * C9135 + C50810 * C9139) * C10760 +
            (C117 * C9133 + C50810 * C9136) * C10765 + C8213 * C10759 +
            C8212 * C10764 + C2547 * C10758 + C2546 * C10763 + C366 * C10757 +
            C365 * C10762) *
               C50623 * C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50917 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50960 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50749 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50917) *
              C50961 +
          (((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C50917 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C2344 + C3249 * C50926 +
             C3248 * C2343) *
                C2342 +
            ((C117 * C4170 + C50810 * C4175) * C50796 +
             (C117 * C4166 + C50810 * C4171) * C2344 + C3247 * C50926 +
             C3246 * C2343) *
                C2341 +
            ((C117 * C4172 + C50810 * C4176) * C50796 +
             (C117 * C4167 + C50810 * C4173) * C2344 + C4183 * C50926 +
             C4182 * C2343) *
                C2340) *
               C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50917 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50960 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50749 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50917) *
              C50961 +
          ((C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C50917 -
           ((C117 * C11897 + C50810 * C11899) * C10760 +
            (C117 * C11896 + C50810 * C11898) * C10765 + C11906 * C10759 +
            C11905 * C10764 + C9807 * C10758 + C9806 * C10763 + C4183 * C10757 +
            C4182 * C10762) *
               C50623 * C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
            C2543 * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C50685 * C1145 -
          (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
           (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
               C2340) *
              C50685 * C1146 +
          ((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
               C2340 +
           (C2530 + C2531 + C2550 + C2551) * C2341 +
           (C2536 + C2537 + C2552 + C2553) * C2342) *
              C50685 * C1147 -
          (((C117 * C3500 + C50810 * C3506) * C50796 +
            (C117 * C3497 + C50810 * C3501) * C2344 + C2549 * C50926 +
            C2548 * C2343) *
               C2342 +
           ((C117 * C3502 + C50810 * C3507) * C50796 +
            (C117 * C3498 + C50810 * C3503) * C2344 + C2547 * C50926 +
            C2546 * C2343) *
               C2341 +
           ((C117 * C3504 + C50810 * C3508) * C50796 +
            (C117 * C3499 + C50810 * C3505) * C2344 + C3515 * C50926 +
            C3514 * C2343) *
               C2340) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C1074 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50721) *
              C1076 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50721 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C1074) *
              C1077 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50685 * C1074 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C2344 + C686 * C50926 +
             C685 * C2343) *
                C2342 +
            (C2878 + C2877 + C2876 + C2875) * C2341 + C2880 * C2340) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C480 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C481 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
             C3679 * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C482) *
              C1074 +
          (((C3245 * C2343 + C3244 * C50926 +
             (C117 * C1614 + C50810 * C1622) * C2344 +
             (C117 * C1621 + C50810 * C1626) * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C481 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C480 -
           (((C117 * C3664 + C50810 * C3670) * C50796 +
             (C117 * C3661 + C50810 * C3665) * C2344 + C2723 * C50926 +
             C2722 * C2343) *
                C2342 +
            ((C117 * C3666 + C50810 * C3671) * C50796 +
             (C117 * C3662 + C50810 * C3667) * C2344 + C2721 * C50926 +
             C2720 * C2343) *
                C2341 +
            ((C117 * C3668 + C50810 * C3672) * C50796 +
             (C117 * C3663 + C50810 * C3669) * C2344 + C3679 * C50926 +
             C3678 * C2343) *
                C2340) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C1074 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50721) *
              C1076 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50721 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50685 * C1074 -
           ((C117 * C3500 + C50810 * C3506) * C10760 +
            (C117 * C3497 + C50810 * C3501) * C10765 + C2549 * C10759 +
            C2548 * C10764 + C368 * C10758 + C367 * C10763 + C361 * C10757 +
            C362 * C10762) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C1145 -
          (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
           C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
              C50623 * C50685 * C1146 +
          (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
           C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
           C11462 * C10760) *
              C50623 * C50685 * C1147 -
          ((C117 * C11453 + C50810 * C11455) * C10760 +
           (C117 * C11452 + C50810 * C11454) * C10765 + C11462 * C10759 +
           C11461 * C10764 + C9147 * C10758 + C9146 * C10763 + C3515 * C10757 +
           C3514 * C10762) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C480 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C481 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
            C11570 * C10760) *
               C50623 * C482) *
              C1074 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 +
            (C117 * C9794 + C50810 * C9798) * C10765 +
            (C117 * C9797 + C50810 * C9800) * C10760) *
               C50623 * C481 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C480 -
           ((C117 * C11561 + C50810 * C11563) * C10760 +
            (C117 * C11560 + C50810 * C11562) * C10765 + C11570 * C10759 +
            C11569 * C10764 + C9307 * C10758 + C9306 * C10763 + C3679 * C10757 +
            C3678 * C10762) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C2343 +
              (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
              C2543 * C50796) *
                 C2340 +
             (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                C50917 -
            (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
             (C3244 * C50796 + C3245 * C2344 +
              (C117 * C499 + C50810 * C516) * C50926 +
              (C117 * C486 + C50810 * C500) * C2343) *
                 C2340) *
                C50749) *
               C1074 +
           (((C3245 * C2343 + C3244 * C50926 +
              (C117 * C1614 + C50810 * C1622) * C2344 +
              (C117 * C1621 + C50810 * C1626) * C50796) *
                 C2340 +
             (C3232 + C3233 + C3250 + C3251) * C2341 +
             (C3238 + C3239 + C3252 + C3253) * C2342) *
                C50749 -
            (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
             (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                 C2340) *
                C50917) *
               C50721) *
              C50908 +
          ((((C2707 + C2706 + C2705 + C2704) * C2340 +
             (C2703 + C2702 + C2701 + C2700) * C2341 +
             (C3028 + C3029 + C3030 + C3031) * C2342) *
                C50749 -
            (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
             (C2349 + C2348 + C2347 + C2346) * C2340) *
                C50917) *
               C1074 +
           (((C2525 + C2524 + C2523 + C2522) * C2340 +
             (C2521 + C2520 + C2519 + C2518) * C2341 +
             (C2875 + C2876 + C2877 + C2878) * C2342) *
                C50917 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C2344 + C970 * C50926 +
              C969 * C2343) *
                 C2342 +
             (C3253 + C3252 + C3239 + C3238) * C2341 +
             (C3251 + C3250 + C3233 + C3232) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C10762 +
             (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
             C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
             C3515 * C10760) *
                C50623 * C50917 -
            (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
             C3244 * C10758 + C3245 * C10763 +
             (C117 * C499 + C50810 * C516) * C10757 +
             (C117 * C486 + C50810 * C500) * C10762) *
                C50623 * C50749) *
               C1074 +
           ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
             C9806 * C10764 + C9807 * C10759 +
             (C117 * C9794 + C50810 * C9798) * C10765 +
             (C117 * C9797 + C50810 * C9800) * C10760) *
                C50623 * C50749 -
            (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
             C2544 * C10758 + C2545 * C10763 + C2543 * C10757 +
             C2542 * C10762) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          (((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
             C3246 * C10764 + C3247 * C10759 + C8886 * C10765 +
             C8887 * C10760) *
                C50623 * C50749 -
            (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
             C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
                C50623 * C50917) *
               C1074 +
           ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
             C2546 * C10764 + C2547 * C10759 + C8212 * C10765 +
             C8213 * C10760) *
                C50623 * C50917 -
            ((C117 * C9795 + C50810 * C9799) * C10760 +
             (C117 * C9793 + C50810 * C9796) * C10765 + C8887 * C10759 +
             C8886 * C10764 + C3247 * C10758 + C3246 * C10763 + C966 * C10757 +
             C965 * C10762) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50685 * C1074 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50685 * C50721) *
              C1076 +
          (((C2525 + C2524 + C2523 + C2522) * C2340 +
            (C2521 + C2520 + C2519 + C2518) * C2341 +
            (C2875 + C2876 + C2877 + C2878) * C2342) *
               C50685 * C50721 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50685 * C1074) *
              C1077 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C50685 * C1074 -
           (((C117 * C322 + C50810 * C333) * C50796 +
             (C117 * C303 + C50810 * C323) * C2344 + C686 * C50926 +
             C685 * C2343) *
                C2342 +
            (C2878 + C2877 + C2876 + C2875) * C2341 + C2880 * C2340) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
            C2543 * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C50685 * C1145 -
          (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
           (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
               C2340) *
              C50685 * C1146 +
          ((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
               C2340 +
           (C2530 + C2531 + C2550 + C2551) * C2341 +
           (C2536 + C2537 + C2552 + C2553) * C2342) *
              C50685 * C1147 -
          (((C117 * C3500 + C50810 * C3506) * C50796 +
            (C117 * C3497 + C50810 * C3501) * C2344 + C2549 * C50926 +
            C2548 * C2343) *
               C2342 +
           ((C117 * C3502 + C50810 * C3507) * C50796 +
            (C117 * C3498 + C50810 * C3503) * C2344 + C2547 * C50926 +
            C2546 * C2343) *
               C2341 +
           ((C117 * C3504 + C50810 * C3508) * C50796 +
            (C117 * C3499 + C50810 * C3505) * C2344 + C3515 * C50926 +
            C3514 * C2343) *
               C2340) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50685 * C1074 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50685 * C50721) *
              C1076 +
          ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
            C2546 * C10764 + C2547 * C10759 + C8212 * C10765 + C8213 * C10760) *
               C50623 * C50685 * C50721 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C50685 * C1074 -
           ((C117 * C3500 + C50810 * C3506) * C10760 +
            (C117 * C3497 + C50810 * C3501) * C10765 + C2549 * C10759 +
            C2548 * C10764 + C368 * C10758 + C367 * C10763 + C361 * C10757 +
            C362 * C10762) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C50685 * C1145 -
          (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
           C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
              C50623 * C50685 * C1146 +
          (C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
           C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
           C11462 * C10760) *
              C50623 * C50685 * C1147 -
          ((C117 * C11453 + C50810 * C11455) * C10760 +
           (C117 * C11452 + C50810 * C11454) * C10765 + C11462 * C10759 +
           C11461 * C10764 + C9147 * C10758 + C9146 * C10763 + C3515 * C10757 +
           C3514 * C10762) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50810 * C126) * C2343 +
              (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
              C2543 * C50796) *
                 C2340 +
             (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
                C1725 -
            (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
             (C3244 * C50796 + C3245 * C2344 +
              (C117 * C499 + C50810 * C516) * C50926 +
              (C117 * C486 + C50810 * C500) * C2343) *
                 C2340) *
                C50749) *
               C50916 +
           (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                 C2340 +
             (C3232 + C3233 + C3250 + C3251) * C2341 +
             (C3238 + C3239 + C3252 + C3253) * C2342) *
                C50749 -
            (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
             (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                 C2340) *
                C1725) *
               C50721) *
              C50908 +
          ((((C2707 + C2706 + C2705 + C2704) * C2340 +
             (C2703 + C2702 + C2701 + C2700) * C2341 +
             (C3028 + C3029 + C3030 + C3031) * C2342) *
                C50749 -
            (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
             (C2349 + C2348 + C2347 + C2346) * C2340) *
                C1725) *
               C50916 +
           (((C2525 + C2524 + C2523 + C2522) * C2340 +
             (C2521 + C2520 + C2519 + C2518) * C2341 +
             (C2875 + C2876 + C2877 + C2878) * C2342) *
                C1725 -
            (((C117 * C1615 + C50810 * C1623) * C50796 +
              (C117 * C1611 + C50810 * C1616) * C2344 + C970 * C50926 +
              C969 * C2343) *
                 C2342 +
             (C3253 + C3252 + C3239 + C3238) * C2341 +
             (C3251 + C3250 + C3233 + C3232) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C10762 +
             (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
             C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
             C3515 * C10760) *
                C50623 * C1725 -
            (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
             C3244 * C10758 + C3245 * C10763 +
             (C117 * C499 + C50810 * C516) * C10757 +
             (C117 * C486 + C50810 * C500) * C10762) *
                C50623 * C50749) *
               C50916 +
           ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
             C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
             C11906 * C10760) *
                C50623 * C50749 -
            (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
             C2544 * C10758 + C2545 * C10763 + C2543 * C10757 +
             C2542 * C10762) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          (((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
             C3246 * C10764 + C3247 * C10759 + C8886 * C10765 +
             C8887 * C10760) *
                C50623 * C50749 -
            (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
             C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
                C50623 * C1725) *
               C50916 +
           ((C364 * C10762 + C363 * C10757 + C365 * C10763 + C366 * C10758 +
             C2546 * C10764 + C2547 * C10759 + C8212 * C10765 +
             C8213 * C10760) *
                C50623 * C1725 -
            ((C117 * C9795 + C50810 * C9799) * C10760 +
             (C117 * C9793 + C50810 * C9796) * C10765 + C8887 * C10759 +
             C8886 * C10764 + C3247 * C10758 + C3246 * C10763 + C966 * C10757 +
             C965 * C10762) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50962 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
             C3679 * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C2141) *
              C50916 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50963 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C50962 -
           (((C117 * C3664 + C50810 * C3670) * C50796 +
             (C117 * C3661 + C50810 * C3665) * C2344 + C2723 * C50926 +
             C2722 * C2343) *
                C2342 +
            ((C117 * C3666 + C50810 * C3671) * C50796 +
             (C117 * C3662 + C50810 * C3667) * C2344 + C2721 * C50926 +
             C2720 * C2343) *
                C2341 +
            ((C117 * C3668 + C50810 * C3672) * C50796 +
             (C117 * C3663 + C50810 * C3669) * C2344 + C3679 * C50926 +
             C3678 * C2343) *
                C2340) *
               C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50962 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50963 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
            C11570 * C10760) *
               C50623 * C2141) *
              C50916 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50963 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C50962 -
           ((C117 * C11561 + C50810 * C11563) * C10760 +
            (C117 * C11560 + C50810 * C11562) * C10765 + C11570 * C10759 +
            C11569 * C10764 + C9307 * C10758 + C9306 * C10763 + C3679 * C10757 +
            C3678 * C10762) *
               C50623 * C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C1725 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C289 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50749 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C1725) *
              C290 +
          (((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C1725 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C2344 + C3249 * C50926 +
             C3248 * C2343) *
                C2342 +
            ((C117 * C4170 + C50810 * C4175) * C50796 +
             (C117 * C4166 + C50810 * C4171) * C2344 + C3247 * C50926 +
             C3246 * C2343) *
                C2341 +
            ((C117 * C4172 + C50810 * C4176) * C50796 +
             (C117 * C4167 + C50810 * C4173) * C2344 + C4183 * C50926 +
             C4182 * C2343) *
                C2340) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C1725 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50669 * C1076 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50749 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C1725) *
              C50669 * C1077 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C1725 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C2344 + C800 * C50926 +
             C799 * C2343) *
                C2342 +
            (C3031 + C3030 + C3029 + C3028) * C2341 + C3033 * C2340) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C2343 +
            (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
            C2543 * C50796) *
               C2340 +
           (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
              C1891 -
          (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
           (C3244 * C50796 + C3245 * C2344 +
            (C117 * C499 + C50810 * C516) * C50926 +
            (C117 * C486 + C50810 * C500) * C2343) *
               C2340) *
              C1892 +
          (((C117 * C487 + C50810 * C501) * C2343 +
            (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
            C3679 * C50796) *
               C2340 +
           (C2708 + C2709 + C2724 + C2725) * C2341 +
           (C2714 + C2715 + C2726 + C2727) * C2342) *
              C1893 -
          (((C117 * C4576 + C50810 * C4582) * C50796 +
            (C117 * C4573 + C50810 * C4577) * C2344 +
            (C117 * C1901 + C50810 * C1908) * C50926 +
            (C117 * C1896 + C50810 * C1902) * C2343) *
               C2342 +
           ((C117 * C4578 + C50810 * C4583) * C50796 +
            (C117 * C4574 + C50810 * C4579) * C2344 +
            (C117 * C1903 + C50810 * C1909) * C50926 +
            (C117 * C1897 + C50810 * C1904) * C2343) *
               C2341 +
           ((C117 * C4580 + C50810 * C4584) * C50796 +
            (C117 * C4575 + C50810 * C4581) * C2344 +
            (C117 * C1905 + C50810 * C1910) * C50926 +
            (C117 * C1898 + C50810 * C1906) * C2343) *
               C2340) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50669 * C1076 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50749 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C1725 -
           ((C117 * C4168 + C50810 * C4174) * C10760 +
            (C117 * C4165 + C50810 * C4169) * C10765 + C3249 * C10759 +
            C3248 * C10764 + C968 * C10758 + C967 * C10763 + C550 * C10757 +
            C551 * C10762) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C289 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50749 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C1725) *
              C290 +
          ((C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C1725 -
           ((C117 * C11897 + C50810 * C11899) * C10760 +
            (C117 * C11896 + C50810 * C11898) * C10765 + C11906 * C10759 +
            C11905 * C10764 + C9807 * C10758 + C9806 * C10763 + C4183 * C10757 +
            C4182 * C10762) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50810 * C126) * C10762 +
           (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
           C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
           C3515 * C10760) *
              C50623 * C1891 -
          (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
           C3244 * C10758 + C3245 * C10763 +
           (C117 * C499 + C50810 * C516) * C10757 +
           (C117 * C486 + C50810 * C500) * C10762) *
              C50623 * C1892 +
          ((C117 * C487 + C50810 * C501) * C10762 +
           (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
           C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
           C11570 * C10760) *
              C50623 * C1893 -
          ((C117 * C12169 + C50810 * C12171) * C10760 +
           (C117 * C12168 + C50810 * C12170) * C10765 +
           (C117 * C10201 + C50810 * C10204) * C10759 +
           (C117 * C10198 + C50810 * C10202) * C10764 +
           (C117 * C4580 + C50810 * C4584) * C10758 +
           (C117 * C4575 + C50810 * C4581) * C10763 +
           (C117 * C1905 + C50810 * C1910) * C10757 +
           (C117 * C1898 + C50810 * C1906) * C10762) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C50962 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50963 +
           (((C117 * C487 + C50810 * C501) * C2343 +
             (C117 * C502 + C50810 * C517) * C50926 + C3678 * C2344 +
             C3679 * C50796) *
                C2340 +
            (C2708 + C2709 + C2724 + C2725) * C2341 +
            (C2714 + C2715 + C2726 + C2727) * C2342) *
               C2141) *
              C50669 * C50908 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50963 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C50962 -
           (((C117 * C1268 + C50810 * C1276) * C50796 +
             (C117 * C1264 + C50810 * C1269) * C2344 + C559 * C50926 +
             C558 * C2343) *
                C2342 +
            (C2727 + C2726 + C2715 + C2714) * C2341 +
            (C2725 + C2724 + C2709 + C2708) * C2340) *
               C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C50962 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50963 +
           ((C117 * C487 + C50810 * C501) * C10762 +
            (C117 * C502 + C50810 * C517) * C10757 + C3678 * C10763 +
            C3679 * C10758 + C9306 * C10764 + C9307 * C10759 + C11569 * C10765 +
            C11570 * C10760) *
               C50623 * C2141) *
              C50669 * C50908 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50963 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C50962 -
           ((C117 * C9295 + C50810 * C9299) * C10760 +
            (C117 * C9293 + C50810 * C9296) * C10765 + C8377 * C10759 +
            C8376 * C10764 + C2721 * C10758 + C2720 * C10763 + C555 * C10757 +
            C554 * C10762) *
               C50623 * C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C1725 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C50669 * C1076 +
          (((C2707 + C2706 + C2705 + C2704) * C2340 +
            (C2703 + C2702 + C2701 + C2700) * C2341 +
            (C3028 + C3029 + C3030 + C3031) * C2342) *
               C50749 -
           (C2367 * C2342 + (C2353 + C2352 + C2351 + C2350) * C2341 +
            (C2349 + C2348 + C2347 + C2346) * C2340) *
               C1725) *
              C50669 * C1077 +
          ((C2366 * C2340 + (C2357 + C2356 + C2355 + C2354) * C2341 +
            (C2358 + C2359 + C2360 + C2361) * C2342) *
               C1725 -
           (((C117 * C945 + C50810 * C951) * C50796 +
             (C117 * C936 + C50810 * C946) * C2344 + C800 * C50926 +
             C799 * C2343) *
                C2342 +
            (C3031 + C3030 + C3029 + C3028) * C2341 + C3033 * C2340) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50810 * C126) * C2343 +
             (C117 * C127 + C50810 * C140) * C50926 + C2542 * C2344 +
             C2543 * C50796) *
                C2340 +
            (C2346 + C2347 + C2348 + C2349) * C2341 + C2366 * C2342) *
               C1725 -
           (C3033 * C2342 + (C2704 + C2705 + C2706 + C2707) * C2341 +
            (C3244 * C50796 + C3245 * C2344 +
             (C117 * C499 + C50810 * C516) * C50926 +
             (C117 * C486 + C50810 * C500) * C2343) *
                C2340) *
               C50749) *
              C289 +
          (((C3245 * C2343 + C3244 * C50926 + C4182 * C2344 + C4183 * C50796) *
                C2340 +
            (C3232 + C3233 + C3250 + C3251) * C2341 +
            (C3238 + C3239 + C3252 + C3253) * C2342) *
               C50749 -
           (C2880 * C2342 + (C2522 + C2523 + C2524 + C2525) * C2341 +
            (C2544 * C50796 + C2545 * C2344 + C2543 * C50926 + C2542 * C2343) *
                C2340) *
               C1725) *
              C290 +
          (((C2545 * C2343 + C2544 * C50926 + C3514 * C2344 + C3515 * C50796) *
                C2340 +
            (C2530 + C2531 + C2550 + C2551) * C2341 +
            (C2536 + C2537 + C2552 + C2553) * C2342) *
               C1725 -
           (((C117 * C4168 + C50810 * C4174) * C50796 +
             (C117 * C4165 + C50810 * C4169) * C2344 + C3249 * C50926 +
             C3248 * C2343) *
                C2342 +
            ((C117 * C4170 + C50810 * C4175) * C50796 +
             (C117 * C4166 + C50810 * C4171) * C2344 + C3247 * C50926 +
             C3246 * C2343) *
                C2341 +
            ((C117 * C4172 + C50810 * C4176) * C50796 +
             (C117 * C4167 + C50810 * C4173) * C2344 + C4183 * C50926 +
             C4182 * C2343) *
                C2340) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C50669 * C1076 +
          ((C553 * C10762 + C552 * C10757 + C965 * C10763 + C966 * C10758 +
            C3246 * C10764 + C3247 * C10759 + C8886 * C10765 + C8887 * C10760) *
               C50623 * C50749 -
           (C2547 * C10760 + C2546 * C10765 + C366 * C10759 + C365 * C10764 +
            C363 * C10758 + C364 * C10763 + C169 * C10757 + C168 * C10762) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C170 * C10762 + C171 * C10757 + C362 * C10763 + C361 * C10758 +
            C367 * C10764 + C368 * C10759 + C2548 * C10765 + C2549 * C10760) *
               C50623 * C1725 -
           ((C117 * C4168 + C50810 * C4174) * C10760 +
            (C117 * C4165 + C50810 * C4169) * C10765 + C3249 * C10759 +
            C3248 * C10764 + C968 * C10758 + C967 * C10763 + C550 * C10757 +
            C551 * C10762) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50810 * C126) * C10762 +
            (C117 * C127 + C50810 * C140) * C10757 + C2542 * C10763 +
            C2543 * C10758 + C2545 * C10764 + C2544 * C10759 + C3514 * C10765 +
            C3515 * C10760) *
               C50623 * C1725 -
           (C9807 * C10760 + C9806 * C10765 + C4183 * C10759 + C4182 * C10764 +
            C3244 * C10758 + C3245 * C10763 +
            (C117 * C499 + C50810 * C516) * C10757 +
            (C117 * C486 + C50810 * C500) * C10762) *
               C50623 * C50749) *
              C289 +
          ((C3245 * C10762 + C3244 * C10757 + C4182 * C10763 + C4183 * C10758 +
            C9806 * C10764 + C9807 * C10759 + C11905 * C10765 +
            C11906 * C10760) *
               C50623 * C50749 -
           (C9147 * C10760 + C9146 * C10765 + C3515 * C10759 + C3514 * C10764 +
            C2544 * C10758 + C2545 * C10763 + C2543 * C10757 + C2542 * C10762) *
               C50623 * C1725) *
              C290 +
          ((C2545 * C10762 + C2544 * C10757 + C3514 * C10763 + C3515 * C10758 +
            C9146 * C10764 + C9147 * C10759 + C11461 * C10765 +
            C11462 * C10760) *
               C50623 * C1725 -
           ((C117 * C11897 + C50810 * C11899) * C10760 +
            (C117 * C11896 + C50810 * C11898) * C10765 + C11906 * C10759 +
            C11905 * C10764 + C9807 * C10758 + C9806 * C10763 + C4183 * C10757 +
            C4182 * C10762) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C50916 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50721) *
              C50958 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50721 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C50916) *
              C50959 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50685 * C50916 -
           (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                 C50780 +
             (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                 C118) *
                C2342 +
            ((C5781 + C5780) * C50780 + (C5779 + C5778) * C118) * C2341 +
            C5782 * C2340) *
               C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C50916 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50721) *
              C50958 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50721 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C50916) *
              C50959 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50685 * C50916 -
           ((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C8027 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C8032 +
            (C5425 + C5424) * C8026 + (C5423 + C5422) * C8031 + C5766 * C8025 +
            C5767 * C8030) *
               C50623 * C50685 * C50721) *
              C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C118 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C50780) *
                 C2340 +
             ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
             C5230 * C2342) *
                C50917 -
            (C5945 * C2342 +
             ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
             ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C50780 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C118) *
                 C2340) *
                C50749) *
               C50916 +
           ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                  C118 +
              (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                  C50780) *
                 C2340 +
             ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
             ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                C50749 -
            (C5782 * C2342 +
             ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
             ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                  C50780 +
              (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                  C118) *
                 C2340) *
                C50917) *
               C50721) *
              C292 +
          (((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
             ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
             ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                C50749 -
            (C5231 * C2342 +
             ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
             ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                C50917) *
               C50916 +
           ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
             ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
             ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                C50917 -
            (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                  C50780 +
              (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                  C118) *
                 C2342 +
             ((C6163 + C6162) * C50780 + (C6161 + C6160) * C118) * C2341 +
             ((C6159 + C6158) * C50780 + (C6157 + C6156) * C118) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C8030 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C8025 +
             (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
             C12793 * C8032 + C12794 * C8027) *
                C50623 * C50917 -
            ((C13451 + C13452) * C8027 + (C13453 + C13454) * C8032 +
             (C13455 + C13456) * C8026 + (C13457 + C13458) * C8031 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C8025 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C8030) *
                C50623 * C50749) *
               C50916 +
           (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
             (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
             (C5171 * C4167 + C50928 * C4173 + C5172 * C9294 + C50822 * C9298) *
                 C8032 +
             (C5171 * C4172 + C50928 * C4176 + C5172 * C9297 + C50822 * C9300) *
                 C8027) *
                C50623 * C50749 -
            ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
             (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
             (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
                C50623 * C50917) *
               C50721) *
              C292 +
          ((((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
             (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
             (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
                C50623 * C50749 -
            (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
             (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
             (C5207 + C5206) * C8030) *
                C50623 * C50917) *
               C50916 +
           (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
             (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
             (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
                C50623 * C50917 -
            ((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C8027 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C8032 +
             (C13462 + C13461) * C8026 + (C13460 + C13459) * C8031 +
             (C6159 + C6158) * C8025 + (C6157 + C6156) * C8030) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C289 -
           (((C5410 + C5411) * C50780 + (C5412 + C5413) * C118) * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C290 +
           (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50685 * C291) *
              C292 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5171 * C294 + C50928 * C305 + C5172 * C935 + C50822 * C943) *
                 C118 +
             (C5171 * C304 + C50928 * C324 + C5172 * C944 + C50822 * C950) *
                 C50780) *
                C2342) *
               C50685 * C290 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C289 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50780 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C118) *
                C2342 +
            ((C5425 + C5424) * C50780 + (C5423 + C5422) * C118) * C2341 +
            ((C5421 + C5420) * C50780 + (C5419 + C5418) * C118) * C2340) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C50685 * C50669 * C113 -
          (C5231 * C2342 +
           ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
           ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
              C50685 * C50669 * C114 +
          (C5230 * C2340 +
           ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
           ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
              C50685 * C50669 * C115 -
          (((C5172 * C789 + C50822 * C791 + C5171 * C137 + C50928 * C145) *
                C50780 +
            (C5172 * C788 + C50822 * C790 + C5171 * C124 + C50928 * C136) *
                C118) *
               C2342 +
           ((C5221 + C5220) * C50780 + (C5219 + C5218) * C118) * C2341 +
           C5231 * C2340) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C480 -
           (((C5604 + C5605) * C50780 + (C5606 + C5607) * C118) * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C482) *
              C50669 * C292 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5171 * C483 + C50928 * C494 + C5172 * C490 + C50822 * C507) *
                 C118 +
             (C5171 * C493 + C50928 * C513 + C5172 * C508 + C50822 * C520) *
                 C50780) *
                C2342) *
               C481 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C480 -
           (((C5172 * C1899 + C50822 * C1907 + C5171 * C508 + C50928 * C520) *
                 C50780 +
             (C5172 * C1895 + C50822 * C1900 + C5171 * C490 + C50928 * C507) *
                 C118) *
                C2342 +
            ((C5619 + C5618) * C50780 + (C5617 + C5616) * C118) * C2341 +
            ((C5615 + C5614) * C50780 + (C5613 + C5612) * C118) * C2340) *
               C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C5171 * C297 + C50928 * C311 + C5172 * C932 + C50822 * C937) *
               C8031 +
           (C5171 * C310 + C50928 * C327 + C5172 * C938 + C50822 * C947) *
               C8026 +
           (C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
               C8032 +
           (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
               C8027) *
              C50623 * C50685 * C50669 * C113 -
          ((C5421 + C5420) * C8027 + (C5419 + C5418) * C8032 +
           (C5414 + C5415) * C8026 + (C5416 + C5417) * C8031 +
           (C5209 + C5208) * C8025 + (C5207 + C5206) * C8030) *
              C50623 * C50685 * C50669 * C114 +
          (C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
           (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
           (C5424 + C5425) * C8027) *
              C50623 * C50685 * C50669 * C115 -
          ((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
               C8027 +
           (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
               C8032 +
           (C5781 + C5780) * C8026 + (C5779 + C5778) * C8031 + C5224 * C8025 +
           C5225 * C8030) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C289 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C290 +
           (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 +
            (C5171 * C3499 + C50928 * C3505 + C5172 * C9794 + C50822 * C9798) *
                C8032 +
            (C5171 * C3504 + C50928 * C3508 + C5172 * C9797 + C50822 * C9800) *
                C8027) *
               C50623 * C50685 * C291) *
              C292 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C290 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C289 -
           ((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C8027 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C8032 +
            (C12792 + C12791) * C8026 + (C12790 + C12789) * C8031 +
            C12775 * C8025 + C12776 * C8030) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C480 -
           ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                C8027 +
            (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                C8032 +
            (C5172 * C1274 + C50822 * C1279 + C5171 * C938 + C50928 * C947) *
                C8026 +
            (C5172 * C1267 + C50822 * C1275 + C5171 * C932 + C50928 * C937) *
                C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C481 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C5171 * C1267 + C50928 * C1275 + C5172 * C4575 + C50822 * C4581) *
                C8031 +
            (C5171 * C1274 + C50928 * C1279 + C5172 * C4580 + C50822 * C4584) *
                C8026 +
            (C5171 * C3663 + C50928 * C3669 + C5172 * C10198 +
             C50822 * C10202) *
                C8032 +
            (C5171 * C3668 + C50928 * C3672 + C5172 * C10201 +
             C50822 * C10204) *
                C8027) *
               C50623 * C482) *
              C50669 * C292 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C5171 * C1613 + C50928 * C1620 + C5172 * C3662 + C50822 * C3667) *
                C8032 +
            (C5171 * C1619 + C50928 * C1625 + C5172 * C3666 + C50822 * C3671) *
                C8027) *
               C50623 * C481 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C480 -
           ((C5172 * C10199 + C50822 * C10203 + C5171 * C3666 +
             C50928 * C3671) *
                C8027 +
            (C5172 * C10197 + C50822 * C10200 + C5171 * C3662 +
             C50928 * C3667) *
                C8032 +
            (C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                C8026 +
            (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                C8031 +
            (C5615 + C5614) * C8025 + (C5613 + C5612) * C8030) *
               C50623 * C482) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50917 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50669 * C50958 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50749 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50917) *
              C50669 * C50959 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50917 -
           (((C5172 * C511 + C50822 * C522 + C5171 * C510 + C50928 * C521) *
                 C50780 +
             (C5172 * C492 + C50822 * C512 + C5171 * C491 + C50928 * C509) *
                 C118) *
                C2342 +
            ((C5944 + C5943) * C50780 + (C5942 + C5941) * C118) * C2341 +
            C5945 * C2340) *
               C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50917 -
           ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                C8027 +
            (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                C8032 +
            (C5172 * C1274 + C50822 * C1279 + C5171 * C938 + C50928 * C947) *
                C8026 +
            (C5172 * C1267 + C50822 * C1275 + C5171 * C932 + C50928 * C937) *
                C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50669 * C50958 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C5171 * C1613 + C50928 * C1620 + C5172 * C3662 + C50822 * C3667) *
                C8032 +
            (C5171 * C1619 + C50928 * C1625 + C5172 * C3666 + C50822 * C3671) *
                C8027) *
               C50623 * C50749 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50917) *
              C50669 * C50959 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50917 -
           ((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                C8027 +
            (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                C8032 +
            (C6163 + C6162) * C8026 + (C6161 + C6160) * C8031 + C5929 * C8025 +
            C5930 * C8030) *
               C50623 * C50749) *
              C50669 * C673)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C50685 * C50669 * C113 -
          (C5231 * C2342 +
           ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
           ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
              C50685 * C50669 * C114 +
          (C5230 * C2340 +
           ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
           ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
              C50685 * C50669 * C115 -
          (((C5172 * C789 + C50822 * C791 + C5171 * C137 + C50928 * C145) *
                C50780 +
            (C5172 * C788 + C50822 * C790 + C5171 * C124 + C50928 * C136) *
                C118) *
               C2342 +
           ((C5221 + C5220) * C50780 + (C5219 + C5218) * C118) * C2341 +
           C5231 * C2340) *
              C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C289 -
           (((C5410 + C5411) * C50780 + (C5412 + C5413) * C118) * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C290 +
           (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50685 * C291) *
              C292 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5171 * C294 + C50928 * C305 + C5172 * C935 + C50822 * C943) *
                 C118 +
             (C5171 * C304 + C50928 * C324 + C5172 * C944 + C50822 * C950) *
                 C50780) *
                C2342) *
               C50685 * C290 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C289 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50780 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C118) *
                C2342 +
            ((C5425 + C5424) * C50780 + (C5423 + C5422) * C118) * C2341 +
            ((C5421 + C5420) * C50780 + (C5419 + C5418) * C118) * C2340) *
               C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C5171 * C297 + C50928 * C311 + C5172 * C932 + C50822 * C937) *
               C8031 +
           (C5171 * C310 + C50928 * C327 + C5172 * C938 + C50822 * C947) *
               C8026 +
           (C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
               C8032 +
           (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
               C8027) *
              C50623 * C50685 * C50669 * C113 -
          ((C5421 + C5420) * C8027 + (C5419 + C5418) * C8032 +
           (C5414 + C5415) * C8026 + (C5416 + C5417) * C8031 +
           (C5209 + C5208) * C8025 + (C5207 + C5206) * C8030) *
              C50623 * C50685 * C50669 * C114 +
          (C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
           (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
           (C5424 + C5425) * C8027) *
              C50623 * C50685 * C50669 * C115 -
          ((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
               C8027 +
           (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
               C8032 +
           (C5781 + C5780) * C8026 + (C5779 + C5778) * C8031 + C5224 * C8025 +
           C5225 * C8030) *
              C50623 * C50685 * C50669 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C289 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C290 +
           (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 +
            (C5171 * C3499 + C50928 * C3505 + C5172 * C9794 + C50822 * C9798) *
                C8032 +
            (C5171 * C3504 + C50928 * C3508 + C5172 * C9797 + C50822 * C9800) *
                C8027) *
               C50623 * C50685 * C291) *
              C292 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C290 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C289 -
           ((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C8027 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C8032 +
            (C12792 + C12791) * C8026 + (C12790 + C12789) * C8031 +
            C12775 * C8025 + C12776 * C8030) *
               C50623 * C50685 * C291) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C50960 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50961 +
           (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50685 * C1380) *
              C50908 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50961 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C50960 -
           (((C5172 * C1615 + C50822 * C1623 + C5171 * C319 + C50928 * C331) *
                 C50780 +
             (C5172 * C1611 + C50822 * C1616 + C5171 * C301 + C50928 * C318) *
                 C118) *
                C2342 +
            ((C5425 + C5424) * C50780 + (C5423 + C5422) * C118) * C2341 +
            ((C5421 + C5420) * C50780 + (C5419 + C5418) * C118) * C2340) *
               C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C50960 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50961 +
           (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C50685 * C1380) *
              C50908 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50961 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C50960 -
           ((C5172 * C9795 + C50822 * C9799 + C5171 * C3502 + C50928 * C3507) *
                C8027 +
            (C5172 * C9793 + C50822 * C9796 + C5171 * C3498 + C50928 * C3503) *
                C8032 +
            (C12792 + C12791) * C8026 + (C12790 + C12789) * C8031 +
            C12775 * C8025 + C12776 * C8030) *
               C50623 * C50685 * C1380) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50917 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50960 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50749 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50917) *
              C50961 +
          ((((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C50917 -
           (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                 C50780 +
             (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                 C118) *
                C2342 +
            ((C5172 * C3666 + C50822 * C3671 + C5171 * C1619 + C50928 * C1625) *
                 C50780 +
             (C5172 * C3662 + C50822 * C3667 + C5171 * C1613 + C50928 * C1620) *
                 C118) *
                C2341 +
            ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                 C50780 +
             (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                 C118) *
                C2340) *
               C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50917 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50960 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50749 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C50917) *
              C50961 +
          ((C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C50917 -
           ((C5172 * C11561 + C50822 * C11563 + C5171 * C9797 +
             C50928 * C9800) *
                C8027 +
            (C5172 * C11560 + C50822 * C11562 + C5171 * C9794 +
             C50928 * C9798) *
                C8032 +
            (C14390 + C14389) * C8026 + (C14388 + C14387) * C8031 +
            C14377 * C8025 + C14378 * C8030) *
               C50623 * C50749) *
              C1380) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C50685 * C1145 -
          (C5782 * C2342 +
           ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
           ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                C50780 +
            (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                C118) *
               C2340) *
              C50685 * C1146 +
          (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                C118 +
            (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                C50780) *
               C2340 +
           ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
           ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
              C50685 * C1147 -
          (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C50780 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C118) *
               C2342 +
           ((C5172 * C4170 + C50822 * C4175 + C5171 * C1158 + C50928 * C1164) *
                C50780 +
            (C5172 * C4166 + C50822 * C4171 + C5171 * C1152 + C50928 * C1159) *
                C118) *
               C2341 +
           ((C5172 * C4172 + C50822 * C4176 + C5171 * C1160 + C50928 * C1165) *
                C50780 +
            (C5172 * C4167 + C50822 * C4173 + C5171 * C1153 + C50928 * C1161) *
                C118) *
               C2340) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C1074 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50721) *
              C1076 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50721 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C1074) *
              C1077 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50685 * C1074 -
           (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                 C50780 +
             (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                 C118) *
                C2342 +
            ((C5781 + C5780) * C50780 + (C5779 + C5778) * C118) * C2341 +
            C5782 * C2340) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C480 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C481 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C482) *
              C1074 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C481 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C480 -
           (((C5172 * C4576 + C50822 * C4582 + C5171 * C1270 + C50928 * C1277) *
                 C50780 +
             (C5172 * C4573 + C50822 * C4577 + C5171 * C1265 + C50928 * C1271) *
                 C118) *
                C2342 +
            ((C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                 C50780 +
             (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                 C118) *
                C2341 +
            ((C5172 * C4580 + C50822 * C4584 + C5171 * C1274 + C50928 * C1279) *
                 C50780 +
             (C5172 * C4575 + C50822 * C4581 + C5171 * C1267 + C50928 * C1275) *
                 C118) *
                C2340) *
               C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C1074 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50721 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50685 * C1074 -
           ((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C8027 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C8032 +
            (C5425 + C5424) * C8026 + (C5423 + C5422) * C8031 + C5766 * C8025 +
            C5767 * C8030) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
           C12793 * C8032 + C12794 * C8027) *
              C50623 * C50685 * C1145 -
          (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
           (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
           (C12778 + C12777) * C8030) *
              C50623 * C50685 * C1146 +
          (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
           (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
           (C13719 + C13720) * C8027) *
              C50623 * C50685 * C1147 -
          ((C5172 * C11897 + C50822 * C11899 + C5171 * C9137 + C50928 * C9140) *
               C8027 +
           (C5172 * C11896 + C50822 * C11898 + C5171 * C9134 + C50928 * C9138) *
               C8032 +
           (C13720 + C13719) * C8026 + (C13718 + C13717) * C8031 +
           C13707 * C8025 + C13708 * C8030) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C480 -
           ((C13451 + C13452) * C8027 + (C13453 + C13454) * C8032 +
            (C13455 + C13456) * C8026 + (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C481 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
            (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
               C50623 * C482) *
              C1074 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C5171 * C4167 + C50928 * C4173 + C5172 * C9294 + C50822 * C9298) *
                C8032 +
            (C5171 * C4172 + C50928 * C4176 + C5172 * C9297 + C50822 * C9300) *
                C8027) *
               C50623 * C481 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C480 -
           ((C5172 * C12169 + C50822 * C12171 + C5171 * C9297 +
             C50928 * C9300) *
                C8027 +
            (C5172 * C12168 + C50822 * C12170 + C5171 * C9294 +
             C50928 * C9298) *
                C8032 +
            (C13890 + C13889) * C8026 + (C13888 + C13887) * C8031 +
            (C13886 + C13885) * C8025 + (C13884 + C13883) * C8030) *
               C50623 * C482) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C118 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C50780) *
                 C2340 +
             ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
             C5230 * C2342) *
                C50917 -
            (C5945 * C2342 +
             ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
             ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C50780 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C118) *
                 C2340) *
                C50749) *
               C1074 +
           ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                  C118 +
              (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                  C50780) *
                 C2340 +
             ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
             ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                C50749 -
            (C5782 * C2342 +
             ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
             ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                  C50780 +
              (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                  C118) *
                 C2340) *
                C50917) *
               C50721) *
              C50908 +
          (((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
             ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
             ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                C50749 -
            (C5231 * C2342 +
             ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
             ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                C50917) *
               C1074 +
           ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
             ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
             ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                C50917 -
            (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                  C50780 +
              (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                  C118) *
                 C2342 +
             ((C6163 + C6162) * C50780 + (C6161 + C6160) * C118) * C2341 +
             ((C6159 + C6158) * C50780 + (C6157 + C6156) * C118) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C8030 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C8025 +
             (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
             C12793 * C8032 + C12794 * C8027) *
                C50623 * C50917 -
            ((C13451 + C13452) * C8027 + (C13453 + C13454) * C8032 +
             (C13455 + C13456) * C8026 + (C13457 + C13458) * C8031 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C8025 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C8030) *
                C50623 * C50749) *
               C1074 +
           (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
             (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
             (C5171 * C4167 + C50928 * C4173 + C5172 * C9294 + C50822 * C9298) *
                 C8032 +
             (C5171 * C4172 + C50928 * C4176 + C5172 * C9297 + C50822 * C9300) *
                 C8027) *
                C50623 * C50749 -
            (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
             (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
             (C12778 + C12777) * C8030) *
                C50623 * C50917) *
               C50721) *
              C50908 +
          ((((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
             (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
             (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
                C50623 * C50749 -
            (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
             (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
             (C5207 + C5206) * C8030) *
                C50623 * C50917) *
               C1074 +
           (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
             (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
             (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
                C50623 * C50917 -
            ((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C8027 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C8032 +
             (C13462 + C13461) * C8026 + (C13460 + C13459) * C8031 +
             (C6159 + C6158) * C8025 + (C6157 + C6156) * C8030) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50685 * C1074 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50685 * C50721) *
              C1076 +
          ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
            ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
            ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
               C50685 * C50721 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50685 * C1074) *
              C1077 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C50685 * C1074 -
           (((C5172 * C945 + C50822 * C951 + C5171 * C321 + C50928 * C332) *
                 C50780 +
             (C5172 * C936 + C50822 * C946 + C5171 * C302 + C50928 * C320) *
                 C118) *
                C2342 +
            ((C5781 + C5780) * C50780 + (C5779 + C5778) * C118) * C2341 +
            C5782 * C2340) *
               C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C50685 * C1145 -
          (C5782 * C2342 +
           ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
           ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                C50780 +
            (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                C118) *
               C2340) *
              C50685 * C1146 +
          (((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                C118 +
            (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                C50780) *
               C2340 +
           ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
           ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
              C50685 * C1147 -
          (((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C50780 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C118) *
               C2342 +
           ((C5172 * C4170 + C50822 * C4175 + C5171 * C1158 + C50928 * C1164) *
                C50780 +
            (C5172 * C4166 + C50822 * C4171 + C5171 * C1152 + C50928 * C1159) *
                C118) *
               C2341 +
           ((C5172 * C4172 + C50822 * C4176 + C5171 * C1160 + C50928 * C1165) *
                C50780 +
            (C5172 * C4167 + C50822 * C4173 + C5171 * C1153 + C50928 * C1161) *
                C118) *
               C2340) *
              C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50685 * C1074 -
           ((C12785 + C12786) * C8027 + (C12787 + C12788) * C8032 +
            (C12784 + C12783) * C8026 + (C12782 + C12781) * C8031 +
            (C12780 + C12779) * C8025 + (C12778 + C12777) * C8030) *
               C50623 * C50685 * C50721) *
              C1076 +
          (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
            (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
            (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
               C50623 * C50685 * C50721 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50685 * C1074) *
              C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C50685 * C1074 -
           ((C5172 * C4168 + C50822 * C4174 + C5171 * C1156 + C50928 * C1163) *
                C8027 +
            (C5172 * C4165 + C50822 * C4169 + C5171 * C1151 + C50928 * C1157) *
                C8032 +
            (C5425 + C5424) * C8026 + (C5423 + C5422) * C8031 + C5766 * C8025 +
            C5767 * C8030) *
               C50623 * C50685 * C50721) *
              C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
           C12793 * C8032 + C12794 * C8027) *
              C50623 * C50685 * C1145 -
          (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
           (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
           (C12778 + C12777) * C8030) *
              C50623 * C50685 * C1146 +
          (C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
           (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
           (C13719 + C13720) * C8027) *
              C50623 * C50685 * C1147 -
          ((C5172 * C11897 + C50822 * C11899 + C5171 * C9137 + C50928 * C9140) *
               C8027 +
           (C5172 * C11896 + C50822 * C11898 + C5171 * C9134 + C50928 * C9138) *
               C8032 +
           (C13720 + C13719) * C8026 + (C13718 + C13717) * C8031 +
           C13707 * C8025 + C13708 * C8030) *
              C50623 * C50685 * C1148) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                  C118 +
              (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                  C50780) *
                 C2340 +
             ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
             C5230 * C2342) *
                C1725 -
            (C5945 * C2342 +
             ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
             ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                  C50780 +
              (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                  C118) *
                 C2340) *
                C50749) *
               C50916 +
           ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                  C118 +
              (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                  C50780) *
                 C2340 +
             ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
             ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
                C50749 -
            (C5782 * C2342 +
             ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
             ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                  C50780 +
              (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                  C118) *
                 C2340) *
                C1725) *
               C50721) *
              C50908 +
          (((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
             ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
             ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
                C50749 -
            (C5231 * C2342 +
             ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
             ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
                C1725) *
               C50916 +
           ((((C5417 + C5416) * C118 + (C5415 + C5414) * C50780) * C2340 +
             ((C5413 + C5412) * C118 + (C5411 + C5410) * C50780) * C2341 +
             ((C5778 + C5779) * C118 + (C5780 + C5781) * C50780) * C2342) *
                C1725 -
            (((C5172 * C1268 + C50822 * C1276 + C5171 * C944 + C50928 * C950) *
                  C50780 +
              (C5172 * C1264 + C50822 * C1269 + C5171 * C935 + C50928 * C943) *
                  C118) *
                 C2342 +
             ((C6163 + C6162) * C50780 + (C6161 + C6160) * C118) * C2341 +
             ((C6159 + C6158) * C50780 + (C6157 + C6156) * C118) * C2340) *
                C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C8030 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C8025 +
             (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
             C12793 * C8032 + C12794 * C8027) *
                C50623 * C1725 -
            (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
             (C13457 + C13458) * C8031 +
             (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C8025 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C8030) *
                C50623 * C50749) *
               C50916 +
           (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
             (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
             (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
                C50623 * C50749 -
            (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
             (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
             (C12778 + C12777) * C8030) *
                C50623 * C1725) *
               C50721) *
              C50908 +
          ((((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
             (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
             (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
                C50623 * C50749 -
            (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
             (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
             (C5207 + C5206) * C8030) *
                C50623 * C1725) *
               C50916 +
           (((C5417 + C5416) * C8030 + (C5415 + C5414) * C8025 +
             (C5418 + C5419) * C8031 + (C5420 + C5421) * C8026 +
             (C12789 + C12790) * C8032 + (C12791 + C12792) * C8027) *
                C50623 * C1725 -
            ((C5172 * C9295 + C50822 * C9299 + C5171 * C4170 + C50928 * C4175) *
                 C8027 +
             (C5172 * C9293 + C50822 * C9296 + C5171 * C4166 + C50928 * C4171) *
                 C8032 +
             (C13462 + C13461) * C8026 + (C13460 + C13459) * C8031 +
             (C6159 + C6158) * C8025 + (C6157 + C6156) * C8030) *
                C50623 * C50749) *
               C50721) *
              C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50962 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50963 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C2141) *
              C50916 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50963 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C50962 -
           (((C5172 * C4576 + C50822 * C4582 + C5171 * C1270 + C50928 * C1277) *
                 C50780 +
             (C5172 * C4573 + C50822 * C4577 + C5171 * C1265 + C50928 * C1271) *
                 C118) *
                C2342 +
            ((C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                 C50780 +
             (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                 C118) *
                C2341 +
            ((C5172 * C4580 + C50822 * C4584 + C5171 * C1274 + C50928 * C1279) *
                 C50780 +
             (C5172 * C4575 + C50822 * C4581 + C5171 * C1267 + C50928 * C1275) *
                 C118) *
                C2340) *
               C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50962 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50963 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
            (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
               C50623 * C2141) *
              C50916 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50963 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C50962 -
           ((C5172 * C12169 + C50822 * C12171 + C5171 * C9297 +
             C50928 * C9300) *
                C8027 +
            (C5172 * C12168 + C50822 * C12170 + C5171 * C9294 +
             C50928 * C9298) *
                C8032 +
            (C13890 + C13889) * C8026 + (C13888 + C13887) * C8031 +
            (C13886 + C13885) * C8025 + (C13884 + C13883) * C8030) *
               C50623 * C2141) *
              C50721) *
         C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C1725 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C289 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50749 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C1725) *
              C290 +
          ((((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C1725 -
           (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                 C50780 +
             (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                 C118) *
                C2342 +
            ((C5172 * C3666 + C50822 * C3671 + C5171 * C1619 + C50928 * C1625) *
                 C50780 +
             (C5172 * C3662 + C50822 * C3667 + C5171 * C1613 + C50928 * C1620) *
                 C118) *
                C2341 +
            ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                 C50780 +
             (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                 C118) *
                C2340) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C1725 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50669 * C1076 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50749 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C1725) *
              C50669 * C1077 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C1725 -
           (((C5172 * C511 + C50822 * C522 + C5171 * C510 + C50928 * C521) *
                 C50780 +
             (C5172 * C492 + C50822 * C512 + C5171 * C491 + C50928 * C509) *
                 C118) *
                C2342 +
            ((C5944 + C5943) * C50780 + (C5942 + C5941) * C118) * C2341 +
            C5945 * C2340) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C118 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C50780) *
               C2340 +
           ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
           C5230 * C2342) *
              C1891 -
          (C5945 * C2342 +
           ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
           ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C50780 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C118) *
               C2340) *
              C1892 +
          (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C118 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C50780) *
               C2340 +
           ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
           ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
              C1893 -
          (((C5172 * C7432 + C50822 * C7438 + C5171 * C1901 + C50928 * C1908) *
                C50780 +
            (C5172 * C7429 + C50822 * C7433 + C5171 * C1896 + C50928 * C1902) *
                C118) *
               C2342 +
           ((C5172 * C7434 + C50822 * C7439 + C5171 * C1903 + C50928 * C1909) *
                C50780 +
            (C5172 * C7430 + C50822 * C7435 + C5171 * C1897 + C50928 * C1904) *
                C118) *
               C2341 +
           ((C5172 * C7436 + C50822 * C7440 + C5171 * C1905 + C50928 * C1910) *
                C50780 +
            (C5172 * C7431 + C50822 * C7437 + C5171 * C1898 + C50928 * C1906) *
                C118) *
               C2340) *
              C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
               C50623 * C50749 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C1725 -
           ((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                C8027 +
            (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                C8032 +
            (C6163 + C6162) * C8026 + (C6161 + C6160) * C8031 + C5929 * C8025 +
            C5930 * C8030) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C289 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50749 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C1725) *
              C290 +
          ((C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C1725 -
           ((C5172 * C11561 + C50822 * C11563 + C5171 * C9797 +
             C50928 * C9800) *
                C8027 +
            (C5172 * C11560 + C50822 * C11562 + C5171 * C9794 +
             C50928 * C9798) *
                C8032 +
            (C14390 + C14389) * C8026 + (C14388 + C14387) * C8031 +
            C14377 * C8025 + C14378 * C8030) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
               C8030 +
           (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
               C8025 +
           (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
           C12793 * C8032 + C12794 * C8027) *
              C50623 * C1891 -
          (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
           (C13457 + C13458) * C8031 +
           (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
               C8025 +
           (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
               C8030) *
              C50623 * C1892 +
          ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
               C8030 +
           (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
               C8025 +
           (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
           (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
              C50623 * C1893 -
          ((C5172 * C14782 + C50822 * C14786 + C5171 * C10201 +
            C50928 * C10204) *
               C8027 +
           (C5172 * C14780 + C50822 * C14783 + C5171 * C10198 +
            C50928 * C10202) *
               C8032 +
           (C5172 * C14784 + C50822 * C14787 + C5171 * C4580 + C50928 * C4584) *
               C8026 +
           (C5172 * C14781 + C50822 * C14785 + C5171 * C4575 + C50928 * C4581) *
               C8031 +
           (C5172 * C7436 + C50822 * C7440 + C5171 * C1905 + C50928 * C1910) *
               C8025 +
           (C5172 * C7431 + C50822 * C7437 + C5171 * C1898 + C50928 * C1906) *
               C8030) *
              C50623 * C1894) *
         C50669 * C50650) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C50962 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50963 +
           (((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                 C118 +
             (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                 C50780) *
                C2340 +
            ((C5612 + C5613) * C118 + (C5614 + C5615) * C50780) * C2341 +
            ((C5616 + C5617) * C118 + (C5618 + C5619) * C50780) * C2342) *
               C2141) *
              C50669 * C50908 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50963 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C50962 -
           (((C5172 * C1899 + C50822 * C1907 + C5171 * C508 + C50928 * C520) *
                 C50780 +
             (C5172 * C1895 + C50822 * C1900 + C5171 * C490 + C50928 * C507) *
                 C118) *
                C2342 +
            ((C5619 + C5618) * C50780 + (C5617 + C5616) * C118) * C2341 +
            ((C5615 + C5614) * C50780 + (C5613 + C5612) * C118) * C2340) *
               C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C50962 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50963 +
           ((C5171 * C487 + C50928 * C501 + C5172 * C1898 + C50822 * C1906) *
                C8030 +
            (C5171 * C502 + C50928 * C517 + C5172 * C1905 + C50822 * C1910) *
                C8025 +
            (C13883 + C13884) * C8031 + (C13885 + C13886) * C8026 +
            (C13887 + C13888) * C8032 + (C13889 + C13890) * C8027) *
               C50623 * C2141) *
              C50669 * C50908 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
               C50623 * C50963 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C50962 -
           ((C5172 * C10199 + C50822 * C10203 + C5171 * C3666 +
             C50928 * C3671) *
                C8027 +
            (C5172 * C10197 + C50822 * C10200 + C5171 * C3662 +
             C50928 * C3667) *
                C8032 +
            (C5172 * C4578 + C50822 * C4583 + C5171 * C1272 + C50928 * C1278) *
                C8026 +
            (C5172 * C4574 + C50822 * C4579 + C5171 * C1266 + C50928 * C1273) *
                C8031 +
            (C5615 + C5614) * C8025 + (C5613 + C5612) * C8030) *
               C50623 * C2141) *
              C50669 * C50656)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C1725 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C50669 * C1076 +
          ((((C5611 + C5610) * C118 + (C5609 + C5608) * C50780) * C2340 +
            ((C5607 + C5606) * C118 + (C5605 + C5604) * C50780) * C2341 +
            ((C5941 + C5942) * C118 + (C5943 + C5944) * C50780) * C2342) *
               C50749 -
           (C5231 * C2342 +
            ((C5213 + C5212) * C50780 + (C5211 + C5210) * C118) * C2341 +
            ((C5209 + C5208) * C50780 + (C5207 + C5206) * C118) * C2340) *
               C1725) *
              C50669 * C1077 +
          ((C5230 * C2340 +
            ((C5217 + C5216) * C118 + (C5215 + C5214) * C50780) * C2341 +
            ((C5218 + C5219) * C118 + (C5220 + C5221) * C50780) * C2342) *
               C1725 -
           (((C5172 * C511 + C50822 * C522 + C5171 * C510 + C50928 * C521) *
                 C50780 +
             (C5172 * C492 + C50822 * C512 + C5171 * C491 + C50928 * C509) *
                 C118) *
                C2342 +
            ((C5944 + C5943) * C50780 + (C5942 + C5941) * C118) * C2341 +
            C5945 * C2340) *
               C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                 C118 +
             (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                 C50780) *
                C2340 +
            ((C5206 + C5207) * C118 + (C5208 + C5209) * C50780) * C2341 +
            C5230 * C2342) *
               C1725 -
           (C5945 * C2342 +
            ((C5608 + C5609) * C50780 + (C5610 + C5611) * C118) * C2341 +
            ((C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                 C50780 +
             (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                 C118) *
                C2340) *
               C50749) *
              C289 +
          ((((C5171 * C932 + C50928 * C937 + C5172 * C1267 + C50822 * C1275) *
                 C118 +
             (C5171 * C938 + C50928 * C947 + C5172 * C1274 + C50822 * C1279) *
                 C50780) *
                C2340 +
            ((C6156 + C6157) * C118 + (C6158 + C6159) * C50780) * C2341 +
            ((C6160 + C6161) * C118 + (C6162 + C6163) * C50780) * C2342) *
               C50749 -
           (C5782 * C2342 +
            ((C5414 + C5415) * C50780 + (C5416 + C5417) * C118) * C2341 +
            ((C5172 * C938 + C50822 * C947 + C5171 * C310 + C50928 * C327) *
                 C50780 +
             (C5172 * C932 + C50822 * C937 + C5171 * C297 + C50928 * C311) *
                 C118) *
                C2340) *
               C1725) *
              C290 +
          ((((C5171 * C298 + C50928 * C312 + C5172 * C1614 + C50822 * C1622) *
                 C118 +
             (C5171 * C313 + C50928 * C328 + C5172 * C1621 + C50822 * C1626) *
                 C50780) *
                C2340 +
            ((C5418 + C5419) * C118 + (C5420 + C5421) * C50780) * C2341 +
            ((C5422 + C5423) * C118 + (C5424 + C5425) * C50780) * C2342) *
               C1725 -
           (((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                 C50780 +
             (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                 C118) *
                C2342 +
            ((C5172 * C3666 + C50822 * C3671 + C5171 * C1619 + C50928 * C1625) *
                 C50780 +
             (C5172 * C3662 + C50822 * C3667 + C5171 * C1613 + C50928 * C1620) *
                 C118) *
                C2341 +
            ((C5172 * C3668 + C50822 * C3672 + C5171 * C1621 + C50928 * C1626) *
                 C50780 +
             (C5172 * C3663 + C50822 * C3669 + C5171 * C1614 + C50928 * C1622) *
                 C118) *
                C2340) *
               C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C50669 * C1076 +
          (((C5611 + C5610) * C8030 + (C5609 + C5608) * C8025 +
            (C6156 + C6157) * C8031 + (C6158 + C6159) * C8026 +
            (C13459 + C13460) * C8032 + (C13461 + C13462) * C8027) *
               C50623 * C50749 -
           (C12775 * C8027 + C12776 * C8032 + (C5414 + C5415) * C8026 +
            (C5416 + C5417) * C8031 + (C5209 + C5208) * C8025 +
            (C5207 + C5206) * C8030) *
               C50623 * C1725) *
              C50669 * C1077 +
          ((C5222 * C8030 + C5223 * C8025 + (C5413 + C5412) * C8031 +
            (C5411 + C5410) * C8026 + (C5422 + C5423) * C8032 +
            (C5424 + C5425) * C8027) *
               C50623 * C1725 -
           ((C5172 * C3664 + C50822 * C3670 + C5171 * C1617 + C50928 * C1624) *
                C8027 +
            (C5172 * C3661 + C50822 * C3665 + C5171 * C1612 + C50928 * C1618) *
                C8032 +
            (C6163 + C6162) * C8026 + (C6161 + C6160) * C8031 + C5929 * C8025 +
            C5930 * C8030) *
               C50623 * C50749) *
              C50669 * C1078)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5171 * C119 + C50928 * C126 + C5172 * C486 + C50822 * C500) *
                C8030 +
            (C5171 * C127 + C50928 * C140 + C5172 * C499 + C50822 * C516) *
                C8025 +
            (C12777 + C12778) * C8031 + (C12779 + C12780) * C8026 +
            C12793 * C8032 + C12794 * C8027) *
               C50623 * C1725 -
           (C14377 * C8027 + C14378 * C8032 + (C13455 + C13456) * C8026 +
            (C13457 + C13458) * C8031 +
            (C5172 * C502 + C50822 * C517 + C5171 * C499 + C50928 * C516) *
                C8025 +
            (C5172 * C487 + C50822 * C501 + C5171 * C486 + C50928 * C500) *
                C8030) *
               C50623 * C50749) *
              C289 +
          (((C13458 + C13457) * C8030 + (C13456 + C13455) * C8025 +
            (C13454 + C13453) * C8031 + (C13452 + C13451) * C8026 +
            (C14387 + C14388) * C8032 + (C14389 + C14390) * C8027) *
               C50623 * C50749 -
           (C13707 * C8027 + C13708 * C8032 + (C12784 + C12783) * C8026 +
            (C12782 + C12781) * C8031 + (C12780 + C12779) * C8025 +
            (C12778 + C12777) * C8030) *
               C50623 * C1725) *
              C290 +
          ((C12793 * C8030 + C12794 * C8025 + (C12788 + C12787) * C8031 +
            (C12786 + C12785) * C8026 + (C13717 + C13718) * C8032 +
            (C13719 + C13720) * C8027) *
               C50623 * C1725 -
           ((C5172 * C11561 + C50822 * C11563 + C5171 * C9797 +
             C50928 * C9800) *
                C8027 +
            (C5172 * C11560 + C50822 * C11562 + C5171 * C9794 +
             C50928 * C9798) *
                C8032 +
            (C14390 + C14389) * C8026 + (C14388 + C14387) * C8031 +
            C14377 * C8025 + C14378 * C8030) *
               C50623 * C50749) *
              C291) *
         C50650) /
            (p * q * std::sqrt(p + q));
}
