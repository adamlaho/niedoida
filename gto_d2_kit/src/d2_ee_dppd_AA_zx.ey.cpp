/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dppd_AA_zx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2112_11_31(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49724 = 0 * ae;
    const double C49723 = ae * be;
    const double C49722 = 0 * be;
    const double C49721 = ae + be;
    const double C49720 = 0 * be;
    const double C49719 = xA - xB;
    const double C49768 = zA - zB;
    const double C49782 = 0 * be;
    const double C49800 = 0 * ae;
    const double C49796 = 0 * be;
    const double C49848 = xP - xQ;
    const double C49847 = zP - zQ;
    const double C49846 = p + q;
    const double C49845 = p * q;
    const double C49855 = std::pow(ae, 2);
    const double C49853 = bs[3];
    const double C49863 = bs[4];
    const double C49872 = bs[5];
    const double C49886 = bs[6];
    const double C49908 = bs[7];
    const double C50017 = yP - yQ;
    const double C50223 = bs[2];
    const double C122 = bs[0];
    const double C50653 = ce + de;
    const double C50652 = ce * de;
    const double C50651 = xC - xD;
    const double C50675 = yC - yD;
    const double C50691 = zC - zD;
    const double C50779 = yA - yB;
    const double C49729 = C49724 / C49721;
    const double C49726 = 2 * C49721;
    const double C49725 = std::pow(C49721, 2);
    const double C49728 = C49723 * C49719;
    const double C49727 = C49719 * C49722;
    const double C50626 = C49719 * be;
    const double C50625 = C49719 * ae;
    const double C50624 = std::pow(C49719, 2);
    const double C49783 = C49723 * C49768;
    const double C50818 = std::pow(C49768, 2);
    const double C50830 = C49768 * be;
    const double C50829 = C49768 * ae;
    const double C49797 = C49768 * C49782;
    const double C49805 = C49800 / C49721;
    const double C49873 = std::pow(C49848, 2);
    const double C49941 = C49848 * ae;
    const double C49856 = C49847 * ae;
    const double C49854 = C49847 * C49848;
    const double C50071 = std::pow(C49847, 2);
    const double C49849 = 2 * C49845;
    const double C50035 = std::pow(C50017, 2);
    const double C50655 = 2 * C50653;
    const double C50665 = std::pow(C50653, 2);
    const double C50657 = C50651 * de;
    const double C50656 = C50651 * ce;
    const double C50654 = std::pow(C50651, 2);
    const double C50676 = std::pow(C50675, 2);
    const double C50728 = C50675 * de;
    const double C50727 = C50675 * ce;
    const double C50692 = std::pow(C50691, 2);
    const double C50756 = C50691 * de;
    const double C50755 = C50691 * ce;
    const double C50792 = std::pow(C50779, 2);
    const double C50806 = C50779 * be;
    const double C50805 = C50779 * ae;
    const double C50634 = std::pow(C49726, -1);
    const double C50938 = std::pow(C49726, -2);
    const double C49730 = 2 * C49725;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (xP - xQ) * std::pow(ae, 2)) /
                        C49725;
    const double C50917 = 4 * C49725;
    const double C49731 = C49727 / C49721;
    const double C50627 = C50624 * C49723;
    const double C50819 = C50818 * C49723;
    const double C49802 = C49797 / C49721;
    const double C49944 = C49863 * C49941;
    const double C49950 = C49853 * C49941;
    const double C49957 = C49872 * C49941;
    const double C49969 = C49886 * C49941;
    const double C49990 = C49908 * C49941;
    const double C49859 = C49853 * C49856;
    const double C49865 = C49863 * C49856;
    const double C49875 = C49872 * C49856;
    const double C49890 = C49886 * C49856;
    const double C49914 = C49908 * C49856;
    const double C49858 = C49854 * C49855;
    const double C49850 = C49849 / C49846;
    const double C129 = (-(bs[1] * C49941 * C49849) / C49846) / C49721;
    const double C133 = (-(bs[1] * C49856 * C49849) / C49846) / C49721;
    const double C123 = -(C49848 * bs[1] * C49849) / C49846;
    const double C256 = -(C50017 * bs[1] * C49849) / C49846;
    const double C397 = -(C49847 * bs[1] * C49849) / C49846;
    const double C50666 = std::pow(C50655, -1);
    const double C50926 = std::pow(C50655, -2);
    const double C50670 = 2 * C50665;
    const double C50924 = 4 * C50665;
    const double C50658 = C50654 * C50652;
    const double C50677 = C50676 * C50652;
    const double C50693 = C50692 * C50652;
    const double C50793 = C50792 * C49723;
    const double C49736 = C49722 / C49730;
    const double C49734 = C49720 / C49730;
    const double C49799 = C49782 / C49730;
    const double C49803 = C49796 / C49730;
    const double C49733 = 0 - C49731;
    const double C50628 = C50627 / C49721;
    const double C50820 = C50819 / C49721;
    const double C49806 = 0 - C49802;
    const double C49864 = C49863 * C49858;
    const double C49874 = C49872 * C49858;
    const double C49888 = C49886 * C49858;
    const double C49912 = C49908 * C49858;
    const double C49852 = -C49850;
    const double C49862 = std::pow(C49850, 4);
    const double C49885 = std::pow(C49850, 6);
    const double C144 = (ae * std::pow(C49850, 2) * bs[2] * C49847 * ae +
                         C49848 * std::pow(-C49850, 3) * bs[3] * C49847 *
                             C49848 * std::pow(ae, 2)) /
                        C49725;
    const double C50222 = std::pow(C49850, 2);
    const double C130 =
        (C49848 * std::pow(C49850, 2) * bs[2] * C49941) / C49721 -
        (ae * bs[1] * C49849) / (C49846 * C49721);
    const double C50659 = C50658 / C50653;
    const double C50678 = C50677 / C50653;
    const double C50694 = C50693 / C50653;
    const double C50794 = C50793 / C49721;
    const double C49738 = C49733 * ae;
    const double C50629 = -C50628;
    const double C50821 = -C50820;
    const double C49809 = C49806 * ae;
    const double C49857 = std::pow(C49852, 3);
    const double C49871 = std::pow(C49852, 5);
    const double C49907 = std::pow(C49852, 7);
    const double C49867 = C49862 * C49865;
    const double C49866 = C49862 * C49864;
    const double C49943 = C49863 * C49862;
    const double C49945 = C49862 * C49944;
    const double C49893 = C49885 * C49890;
    const double C49892 = C49885 * C49888;
    const double C49971 = C49885 * C49969;
    const double C49991 = C49886 * C49885;
    const double C50224 = C50223 * C50222;
    const double C134 = (C49848 * C50222 * C50223 * C49856) / C49721;
    const double C266 = (C50017 * C50222 * C50223 * C49856) / C49721;
    const double C270 = (C50017 * C50222 * C50223 * C49941) / C49721;
    const double C407 = (C49847 * C50222 * C50223 * C49856) / C49721 -
                        (ae * bs[1] * C49849) / (C49846 * C49721);
    const double C411 = (C49847 * C50222 * C50223 * C49941) / C49721;
    const double C50660 = -C50659;
    const double C50679 = -C50678;
    const double C50695 = -C50694;
    const double C50795 = -C50794;
    const double C49741 = C49738 / C49721;
    const double C50630 = std::exp(C50629);
    const double C50822 = std::exp(C50821);
    const double C49811 = C49809 / C49721;
    const double C49860 = C49857 * C49859;
    const double C49942 = C49853 * C49857;
    const double C49951 = C49857 * C49950;
    const double C286 = ((yP - yQ) * C49857 * C49853 * C49858) / C49725;
    const double C427 = (ae * std::pow(C49850, 2) * bs[2] * C49941 +
                         C49847 * C49857 * C49853 * C49858) /
                        C49725;
    const double C49877 = C49871 * C49875;
    const double C49876 = C49871 * C49874;
    const double C49960 = C49871 * C49957;
    const double C49970 = C49872 * C49871;
    const double C49917 = C49907 * C49914;
    const double C49916 = C49907 * C49912;
    const double C49993 = C49907 * C49990;
    const double C49870 = ae * C49867;
    const double C49869 = C49848 * C49867;
    const double C50366 = C50017 * C49867;
    const double C50384 = C49847 * C49867;
    const double C287 =
        (C49857 * C49853 * C49858 + C49866 * std::pow(yP - yQ, 2)) / C49725;
    const double C49959 = C49848 * C49943;
    const double C49958 = C49943 * ae;
    const double C50233 = C49943 * C49873;
    const double C50348 = C49943 * C50035;
    const double C50367 = C50017 * C49943;
    const double C50386 = C49943 * C50071;
    const double C50486 = C49847 * C49943;
    const double C49953 = C49848 * C49945;
    const double C50033 = C50017 * C49945;
    const double C50084 = ae * C49945;
    const double C50083 = C49847 * C49945;
    const double C49895 = C49893 * C49873;
    const double C49906 = ae * C49893;
    const double C49905 = C49848 * C49893;
    const double C50424 = C49893 * C50035;
    const double C50500 = C50017 * C49893;
    const double C50518 = C49847 * C49893;
    const double C49894 = C49848 * C49892;
    const double C50093 = C49892 * C50035;
    const double C50112 = C50017 * C49892;
    const double C50170 = C49847 * C49892;
    const double C49975 = C49848 * C49971;
    const double C50103 = C49971 * C50035;
    const double C50120 = C50017 * C49971;
    const double C50171 = C49971 * C50071;
    const double C50201 = ae * C49971;
    const double C50200 = C49847 * C49971;
    const double C49996 = C49991 * C49873;
    const double C49995 = C49848 * C49991;
    const double C49994 = C49991 * ae;
    const double C50433 = C49991 * C50035;
    const double C50503 = C50017 * C49991;
    const double C50521 = C49991 * C50071;
    const double C124 = C50224 * C49873 - (bs[1] * C49849) / C49846;
    const double C255 = C50017 * C49848 * C50224;
    const double C257 = C50224 * C50035 - (bs[1] * C49849) / C49846;
    const double C396 = C49847 * C49848 * C50224;
    const double C398 = C50224 * C50071 - (bs[1] * C49849) / C49846;
    const double C775 = C49847 * C50017 * C50224;
    const double C50661 = std::exp(C50660);
    const double C50680 = std::exp(C50679);
    const double C50696 = std::exp(C50695);
    const double C50796 = std::exp(C50795);
    const double C49743 = C49741 - C49734;
    const double C10726 = C50630 * C270;
    const double C12946 = C50630 * C411;
    const double C49732 = C49728 * C50630;
    const double C50631 = C50630 * C50625;
    const double C50635 = C50634 * C50630;
    const double C50913 = C50630 / C49726;
    const double C50912 = C50630 * C50626;
    const double C2159 = C50938 * C50630;
    const double C49784 = C49783 * C50822;
    const double C121 = -(2 * C49723 * (zA - zB) * C50822) / C49721;
    const double C5023 =
        ((C50822 - (C49768 * 2 * C49723 * C49768 * C50822) / C49721) * ae) /
            C49721 -
        (0 * be) / C49730;
    const double C5024 =
        (0 * ae) / C49721 - (C49723 * C49768 * C50822) / C49725;
    const double C50831 = C50822 * C50829;
    const double C50834 = C50634 * C50822;
    const double C50947 = C50822 * C50830;
    const double C50946 = C50822 / C49726;
    const double C15408 = C50938 * C50822;
    const double C49813 = C49811 - C49803;
    const double C145 = (C49857 * C49853 * C49858 + ae * C49848 * C49860 +
                         C49848 * (ae * C49860 + C49848 * std::pow(C49850, 4) *
                                                     bs[4] * C49858)) /
                        C49725;
    const double C146 =
        (2 * (ae * C49860 + C49848 * C49866) +
         ae * (C49860 + C49867 * std::pow(C49848, 2)) +
         C49848 * (C49866 + ae * C49848 * C49867 +
                   C49848 * (ae * C49867 +
                             C49848 * std::pow(C49852, 5) * bs[5] * C49858))) /
        C49725;
    const double C285 = ((yP - yQ) * (ae * C49860 + C49848 * C49866)) / C49725;
    const double C426 = (ae * (C49848 * C49857 * C49853 * C49941 +
                               bs[2] * std::pow(C49850, 2) * ae) +
                         C49847 * (ae * C49860 + C49848 * C49866)) /
                        C49725;
    const double C135 = (C50222 * C50223 * C49856 + C49860 * C49873) / C49721;
    const double C136 =
        (2 * C49848 * C49860 + C49848 * (C49860 + C49867 * C49873)) / C49721;
    const double C264 = (C50017 * (C49860 + C49867 * C49873)) / C49721;
    const double C265 = (C50017 * C49848 * C49860) / C49721;
    const double C275 = (C50222 * C50223 * C49856 + C49860 * C50035) / C49721;
    const double C406 =
        (C49847 * C49848 * C49860 + C49848 * C50224 * ae) / C49721;
    const double C416 =
        (C50222 * C50223 * C49856 + C49847 * (C49847 * C49860 + C50224 * ae) +
         C49847 * C50224 * ae) /
        C49721;
    const double C784 =
        (C49847 * C50017 * C49860 + C50017 * C50224 * ae) / C49721;
    const double C976 =
        (2 * C50017 * C49860 + C50017 * (C49860 + C49867 * C50035)) / C49721;
    const double C49954 = C49942 * ae;
    const double C50232 = C49848 * C49942;
    const double C50314 = C50017 * C49942;
    const double C50385 = C49847 * C49942;
    const double C405 = (C49847 * (C49860 + C49867 * C49873) +
                         (C50224 + C49942 * C49873) * ae) /
                        C49721;
    const double C1437 = (C49847 * (C49860 + C49867 * C50035) +
                          (C50224 + C49942 * C50035) * ae) /
                         C49721;
    const double C125 =
        2 * C49848 * C50224 + C49848 * (C50224 + C49942 * C49873);
    const double C254 = C50017 * (C50224 + C49942 * C49873);
    const double C395 = C49847 * (C50224 + C49942 * C49873);
    const double C972 =
        2 * C50017 * C50224 + C50017 * (C50224 + C49942 * C50035);
    const double C1433 = C49847 * (C50224 + C49942 * C50035);
    const double C1717 =
        2 * C49847 * C50224 + C49847 * (C50224 + C49942 * C50071);
    const double C428 = (C49857 * C49853 * C49858 + ae * C49847 * C49951 +
                         C49847 * (ae * C49951 + C49847 * C49866)) /
                        C49725;
    const double C790 =
        (ae * C50017 * C49951 + C49847 * C50017 * C49866) / C49725;
    const double C131 =
        (C50222 * C50223 * C49941 + C49848 * (C49848 * C49951 + C50224 * ae) +
         C49848 * C50224 * ae) /
        C49721;
    const double C269 = (C50017 * (C49848 * C49951 + C50224 * ae)) / C49721;
    const double C271 = (C50222 * C50223 * C49941 + C49951 * C50035) / C49721;
    const double C410 = (C49847 * (C49848 * C49951 + C50224 * ae)) / C49721;
    const double C412 = (C50222 * C50223 * C49941 + C49951 * C50071) / C49721;
    const double C780 = (C49847 * C50017 * C49951) / C49721;
    const double C980 =
        (2 * C50017 * C49951 + C50017 * (C49951 + C49945 * C50035)) / C49721;
    const double C1441 = (C49847 * (C49951 + C49945 * C50035)) / C49721;
    const double C1725 =
        (2 * C49847 * C49951 + C49847 * (C49951 + C49945 * C50071)) / C49721;
    const double C10728 = C50630 * C286;
    const double C12948 = C50630 * C427;
    const double C49879 = C49877 * C49873;
    const double C49884 = ae * C49877;
    const double C49883 = C49848 * C49877;
    const double C50396 = C49877 * C50035;
    const double C50423 = C50017 * C49877;
    const double C50485 = C49847 * C49877;
    const double C3318 =
        (3 * (C49860 + C49867 * C50035) +
         C50017 * (2 * C50017 * C49867 + C50017 * (C49867 + C49877 * C50035))) /
        C49721;
    const double C49878 = C49848 * C49876;
    const double C50065 = C50017 * C49876;
    const double C50085 = C49847 * C49876;
    const double C984 = (2 * C50017 * C49866 +
                         C50017 * (C49866 + C49876 * std::pow(C50017, 2))) /
                        C49725;
    const double C1445 = (ae * (C49951 + C49945 * C50035) +
                          C49847 * (C49866 + C49876 * C50035)) /
                         C49725;
    const double C1729 = (2 * (ae * C49951 + C49847 * C49866) +
                          ae * (C49951 + C49945 * std::pow(C49847, 2)) +
                          C49847 * (C49866 + ae * C49847 * C49945 +
                                    C49847 * (ae * C49945 + C49847 * C49876))) /
                         C49725;
    const double C3324 =
        (3 * (C49866 + C49876 * C50035) +
         C50017 * (2 * C50017 * C49876 + C50017 * (C49876 + C49892 * C50035))) /
        C49725;
    const double C49962 = C49848 * C49960;
    const double C50053 = C49960 * C50035;
    const double C50066 = C50017 * C49960;
    const double C50086 = C49960 * C50071;
    const double C50169 = ae * C49960;
    const double C50168 = C49847 * C49960;
    const double C49974 = C49970 * C49873;
    const double C49973 = C49848 * C49970;
    const double C49972 = C49970 * ae;
    const double C50408 = C49970 * C50035;
    const double C50432 = C50017 * C49970;
    const double C50487 = C49970 * C50071;
    const double C50519 = C49847 * C49970;
    const double C49919 = C49917 * C49873;
    const double C49918 = C49848 * C49916;
    const double C50113 = C49916 * C50035;
    const double C50184 = C50017 * C49916;
    const double C50202 = C49847 * C49916;
    const double C49997 = C49848 * C49993;
    const double C50121 = C49993 * C50035;
    const double C50185 = C50017 * C49993;
    const double C50204 = C49993 * C50071;
    const double C276 = (C49848 * C49860 + C49869 * C50035) / C49721;
    const double C10732 = C50630 * C287;
    const double C49961 = C49959 * ae;
    const double C50236 = 2 * C49959;
    const double C50312 = C50017 * C49959;
    const double C50379 = C49847 * C49959;
    const double C50234 = C49942 + C50233;
    const double C50349 = C49942 + C50348;
    const double C50407 = 2 * C50367;
    const double C50456 = C49847 * C50367;
    const double C50455 = C50367 * ae;
    const double C50388 = C49942 + C50386;
    const double C50491 = 2 * C50486;
    const double C50489 = C50486 * ae;
    const double C1098 = (C50017 * C49866 + ae * C49847 * C50033 +
                          C49847 * (ae * C50033 + C49847 * C50017 * C49876)) /
                         C49725;
    const double C1094 = (C50017 * C49951 + C50033 * C50071) / C49721;
    const double C49897 = C49877 + C49895;
    const double C49913 = 2 * C49905;
    const double C49911 = ae * C49905;
    const double C50393 = C49905 * C50035;
    const double C50462 = C50017 * C49905;
    const double C50472 = C49847 * C49905;
    const double C50426 = C49877 + C50424;
    const double C50504 = C49847 * C50500;
    const double C50094 = C49876 + C50093;
    const double C50114 = 2 * C50112;
    const double C50140 = C49847 * C50112;
    const double C50104 = C49960 + C50103;
    const double C50122 = 2 * C50120;
    const double C50141 = C50120 * C50071;
    const double C50183 = ae * C50120;
    const double C50182 = C49847 * C50120;
    const double C50175 = C49960 + C50171;
    const double C50208 = 2 * C50200;
    const double C50206 = ae * C50200;
    const double C49999 = C49970 + C49996;
    const double C49998 = C49995 * ae;
    const double C50402 = C49995 * C50035;
    const double C50465 = C50017 * C49995;
    const double C50474 = C49995 * C50071;
    const double C50435 = C49970 + C50433;
    const double C50506 = C50503 * C50071;
    const double C50525 = C49970 + C50521;
    const double C50662 = C50661 * C50656;
    const double C50667 = C50666 * C50661;
    const double C50921 = C50661 * C50657;
    const double C50918 = C50661 / C50655;
    const double C897 = C50926 * C50661;
    const double C50729 = C50680 * C50727;
    const double C50732 = C50666 * C50680;
    const double C50930 = C50680 * C50728;
    const double C50925 = C50680 / C50655;
    const double C250 = C50926 * C50680;
    const double C50757 = C50696 * C50755;
    const double C50760 = C50666 * C50696;
    const double C50934 = C50696 * C50756;
    const double C50927 = C50696 / C50655;
    const double C393 = C50926 * C50696;
    const double C50807 = C50796 * C50805;
    const double C50810 = C50634 * C50796;
    const double C50942 = C50796 * C50806;
    const double C50941 = C50796 / C49726;
    const double C7777 = C50938 * C50796;
    const double C49737 = C49732 / C49725;
    const double C49735 = 2 * C49732;
    const double C50915 = C50631 / C49730;
    const double C50914 = C50631 * C50626;
    const double C50911 = C50631 / C49721;
    const double C50638 = C50635 * C50626;
    const double C108 = C50635 / C50917;
    const double C22716 = C50635 / C49726;
    const double C2157 = (C50630 * std::pow(C50626, 2)) / C49725 + C50913;
    const double C50951 = C50912 / C49721;
    const double C2158 = (-2 * C50634 * C50912) / C49721;
    const double C49785 = 2 * C49784;
    const double C49801 = C49784 / C49725;
    const double C50949 = C50831 / C49730;
    const double C50948 = C50831 * C50830;
    const double C50940 = C50831 / C49721;
    const double C50837 = C50834 * C50830;
    const double C20891 = C50834 / C50917;
    const double C38225 = C50834 / C49726;
    const double C50966 = C50947 / C49721;
    const double C15407 = (-2 * C50634 * C50947) / C49721;
    const double C15406 = (C50822 * std::pow(C50830, 2)) / C49725 + C50946;
    const double C7934 = C50635 * C285;
    const double C10744 = C50630 * C285;
    const double C25691 = C50635 * C285;
    const double C12956 = C50630 * C426;
    const double C15712 = C50635 * C426;
    const double C28805 = C50635 * C426;
    const double C49955 = C49953 + C49954;
    const double C50387 = C50384 + C49954;
    const double C1721 =
        (2 * (C49847 * C49860 + C50224 * ae) +
         C49847 * (C49860 + C49847 * (C49847 * C49867 + C49954) +
                   C49847 * C49942 * ae) +
         (C50224 + C49942 * C50071) * ae) /
        C49721;
    const double C417 =
        (C49848 * C49860 + C49847 * (C49847 * C49869 + C50232 * ae) +
         C49847 * C50232 * ae) /
        C49721;
    const double C785 =
        (C49847 * C50017 * C49869 + C50017 * C50232 * ae) / C49721;
    const double C258 = C49848 * C50224 + C50232 * C50035;
    const double C399 = C49848 * C50224 + C50232 * C50071;
    const double C776 = C49847 * C50017 * C50232;
    const double C971 =
        2 * C50017 * C50232 + C50017 * (C50232 + C49959 * C50035);
    const double C1432 = C49847 * (C50232 + C49959 * C50035);
    const double C1716 =
        2 * C49847 * C50232 + C49847 * (C50232 + C49959 * C50071);
    const double C1090 =
        (C50017 * C49860 + C49847 * (C49847 * C50017 * C49867 + C50314 * ae) +
         C49847 * C50314 * ae) /
        C49721;
    const double C4430 =
        (2 * (C49847 * C50366 + C50314 * ae) +
         C49847 * (C50366 + C49847 * (C49847 * C50017 * C49877 + C50367 * ae) +
                   C49847 * C50367 * ae) +
         (C50314 + C50367 * C50071) * ae) /
        C49721;
    const double C1086 = C50017 * C50224 + C50314 * C50071;
    const double C4427 =
        2 * C49847 * C50314 + C49847 * (C50314 + C50367 * C50071);
    const double C12950 = C50630 * C428;
    const double C11250 = C50630 * C790;
    const double C7930 = C50635 * C269;
    const double C10742 = C50630 * C269;
    const double C25687 = C50635 * C269;
    const double C10730 = C50630 * C271;
    const double C12954 = C50630 * C410;
    const double C15708 = C50635 * C410;
    const double C28801 = C50635 * C410;
    const double C12952 = C50630 * C412;
    const double C11252 = C50630 * C780;
    const double C10734 = C50630 * C980;
    const double C11248 = C50630 * C1441;
    const double C14818 = C50630 * C1725;
    const double C49881 = C49867 + C49879;
    const double C49896 = C49884 + C49894;
    const double C49889 = 2 * C49883;
    const double C49887 = ae * C49883;
    const double C50363 = C50017 * C49883;
    const double C50378 = C49847 * C49883;
    const double C975 =
        (2 * C50017 * C49869 + C50017 * (C49869 + C49883 * C50035)) / C49721;
    const double C1436 = (C49847 * (C49869 + C49883 * C50035) +
                          (C50232 + C49959 * C50035) * ae) /
                         C49721;
    const double C3317 =
        (3 * (C49869 + C49883 * C50035) +
         C50017 * (2 * C50017 * C49883 + C50017 * (C49883 + C49905 * C50035))) /
        C49721;
    const double C50397 = C49867 + C50396;
    const double C50425 = 2 * C50423;
    const double C50454 = C49847 * C50423;
    const double C50488 = C50485 + C49958;
    const double C49880 = C49870 + C49878;
    const double C50087 = C50084 + C50085;
    const double C10736 = C50630 * C984;
    const double C11246 = C50630 * C1445;
    const double C14820 = C50630 * C1729;
    const double C10738 = C50630 * C3324;
    const double C49963 = C49962 + C49958;
    const double C50054 = C49945 + C50053;
    const double C50102 = 2 * C50066;
    const double C50139 = ae * C50066;
    const double C50138 = C49847 * C50066;
    const double C4436 =
        (2 * (ae * C50033 + C49847 * C50065) +
         ae * (C50033 + C50066 * std::pow(C49847, 2)) +
         C49847 * (C50065 + ae * C49847 * C50066 +
                   C49847 * (ae * C50066 + C49847 * C50017 * C49892))) /
        C49725;
    const double C4433 =
        (2 * C49847 * C50033 + C49847 * (C50033 + C50066 * C50071)) / C49721;
    const double C50088 = C49945 + C50086;
    const double C50173 = C50169 + C50170;
    const double C50174 = 2 * C50168;
    const double C50172 = ae * C50168;
    const double C49977 = C49943 + C49974;
    const double C49976 = C49973 * ae;
    const double C49992 = 2 * C49973;
    const double C50345 = C49973 * C50035;
    const double C50364 = C50017 * C49973;
    const double C50380 = C49973 * C50071;
    const double C50473 = C49847 * C49973;
    const double C49978 = C49975 + C49972;
    const double C50523 = C50518 + C49972;
    const double C50409 = C49943 + C50408;
    const double C50434 = 2 * C50432;
    const double C50457 = C50432 * C50071;
    const double C50502 = C49847 * C50432;
    const double C50501 = C50432 * ae;
    const double C50490 = C49943 + C50487;
    const double C50526 = 2 * C50519;
    const double C50524 = C50519 * ae;
    const double C49921 = C49893 + C49919;
    const double C49920 = C49906 + C49918;
    const double C50115 = C49892 + C50113;
    const double C50187 = C49847 * C50184;
    const double C50207 = C50201 + C50202;
    const double C50000 = C49997 + C49994;
    const double C50123 = C49971 + C50121;
    const double C50189 = C50185 * C50071;
    const double C50209 = C49971 + C50204;
    const double C1720 =
        (2 * (C49847 * C49869 + C50232 * ae) +
         C49847 * (C49869 + C49847 * (C49847 * C49883 + C49961) +
                   C49847 * C49959 * ae) +
         (C50232 + C49959 * C50071) * ae) /
        C49721;
    const double C1089 =
        (C50017 * C49869 + C49847 * (C49847 * C50017 * C49883 + C50312 * ae) +
         C49847 * C50312 * ae) /
        C49721;
    const double C1085 = C50017 * C50232 + C50312 * C50071;
    const double C126 = 3 * (C50224 + C49942 * C49873) +
                        C49848 * (2 * C50232 + C49848 * C50234);
    const double C253 = C50017 * (2 * C50232 + C49848 * C50234);
    const double C259 = C50224 + C49942 * C49873 + C50234 * C50035;
    const double C394 = C49847 * (2 * C50232 + C49848 * C50234);
    const double C400 = C50224 + C49942 * C49873 + C50234 * C50071;
    const double C777 = C49847 * C50017 * C50234;
    const double C3494 =
        (C49860 + C49867 * C50035 +
         C49847 * (C49847 * (C49867 + C49877 * C50035) + C50349 * ae) +
         C49847 * C50349 * ae) /
        C49721;
    const double C4010 =
        (C49847 * (2 * C50017 * C49867 + C50017 * (C49867 + C49877 * C50035)) +
         (2 * C50314 + C50017 * C50349) * ae) /
        C49721;
    const double C3315 = 3 * (C50224 + C49942 * C50035) +
                         C50017 * (2 * C50314 + C50017 * C50349);
    const double C3491 = C50224 + C49942 * C50035 + C50349 * C50071;
    const double C4007 = C49847 * (2 * C50314 + C50017 * C50349);
    const double C7161 = 3 * (C50224 + C49942 * C50071) +
                         C49847 * (2 * C50385 + C49847 * C50388);
    const double C11572 = C50630 * C1098;
    const double C11570 = C50630 * C1094;
    const double C49899 = C49848 * C49897;
    const double C49909 = 3 * C49897;
    const double C49904 = ae * C49897;
    const double C50360 = C50017 * C49897;
    const double C50372 = C49847 * C49897;
    const double C49915 = C49892 + C49911;
    const double C50394 = C49883 + C50393;
    const double C50466 = C49847 * C50462;
    const double C50427 = C50017 * C50426;
    const double C50446 = C49847 * C50426;
    const double C8963 =
        (4 * (2 * C50065 + C50017 * C50094) +
         C50017 *
             (3 * C50094 + C50017 * (2 * C50017 * C49892 +
                                     C50017 * (C49892 + C49916 * C50035)))) /
        C49725;
    const double C50105 = C50017 * C50104;
    const double C50119 = 3 * C50104;
    const double C50132 = ae * C50104;
    const double C50131 = C49847 * C50104;
    const double C50143 = C50066 + C50141;
    const double C50188 = 2 * C50182;
    const double C50186 = ae * C50182;
    const double C50178 = C49847 * C50175;
    const double C50203 = 3 * C50175;
    const double C50199 = ae * C50175;
    const double C50210 = C49892 + C50206;
    const double C50002 = C49848 * C49999;
    const double C50001 = C49999 * ae;
    const double C50342 = C49999 * C50035;
    const double C50361 = C50017 * C49999;
    const double C50374 = C49999 * C50071;
    const double C50403 = C49973 + C50402;
    const double C50467 = C50465 * C50071;
    const double C50477 = C49973 + C50474;
    const double C50436 = C50017 * C50435;
    const double C50449 = C50435 * C50071;
    const double C50509 = C50432 + C50506;
    const double C50528 = C49847 * C50525;
    const double C50922 = C50662 / C50670;
    const double C50920 = C50662 / C50653;
    const double C50919 = C50662 * C50657;
    const double C896 = (2 * C50666 * C50662) / C50653;
    const double C50923 = C50667 * C50657;
    const double C116 = C50667 / C50924;
    const double C536 = C50667 / C50655;
    const double C50955 = C50921 / C50653;
    const double C895 = (C50661 * std::pow(C50656, 2)) / C50665 + C50918;
    const double C50932 = C50729 / C50670;
    const double C50931 = C50729 * C50728;
    const double C50928 = C50729 / C50653;
    const double C249 = (2 * C50666 * C50729) / C50653;
    const double C50933 = C50732 * C50728;
    const double C967 = C50732 / C50924;
    const double C1199 = C50732 / C50655;
    const double C50957 = C50930 / C50653;
    const double C248 = (C50680 * std::pow(C50727, 2)) / C50665 + C50925;
    const double C50936 = C50757 / C50670;
    const double C50935 = C50757 * C50756;
    const double C50929 = C50757 / C50653;
    const double C392 = (2 * C50666 * C50757) / C50653;
    const double C50937 = C50760 * C50756;
    const double C1713 = C50760 / C50924;
    const double C1960 = C50760 / C50655;
    const double C50960 = C50934 / C50653;
    const double C391 = (C50696 * std::pow(C50755, 2)) / C50665 + C50927;
    const double C50944 = C50807 / C49730;
    const double C50943 = C50807 * C50806;
    const double C50939 = C50807 / C49721;
    const double C50813 = C50810 * C50806;
    const double C10624 = C50810 / C50917;
    const double C25534 = C50810 / C49726;
    const double C50963 = C50942 / C49721;
    const double C7776 = (-2 * C50634 * C50942) / C49721;
    const double C7775 = (C50796 * std::pow(C50806, 2)) / C49725 + C50941;
    const double C49740 = C49729 - C49737;
    const double C49739 = C49719 * C49735;
    const double C2164 =
        ((-C49735 / C49721) / C49726 - (0 * be) / C49721) / C49726 -
        (0 * be) / C49721;
    const double C10625 = -C49735 / C49721;
    const double C25536 = (-C49735 / C49721) / C49726 - (0 * be) / C49721;
    const double C50952 = C50914 / C49725;
    const double C7956 = C50911 * C285;
    const double C7952 = C50911 * C269;
    const double C7950 = C50911 * C980;
    const double C7946 = C50911 * C984;
    const double C7940 = C50911 * C287;
    const double C7936 = C50911 * C271;
    const double C7932 = C50911 * C286;
    const double C7928 = C50911 * C270;
    const double C8680 = C50911 * C780;
    const double C8676 = C50911 * C790;
    const double C8672 = C50911 * C1441;
    const double C8668 = C50911 * C1445;
    const double C8972 = C50911 * C3324;
    const double C9141 = C50911 * C1098;
    const double C9137 = C50911 * C1094;
    const double C15734 = C50911 * C426;
    const double C15730 = C50911 * C410;
    const double C15728 = C50911 * C1725;
    const double C15724 = C50911 * C1729;
    const double C15718 = C50911 * C428;
    const double C15714 = C50911 * C412;
    const double C15710 = C50911 * C427;
    const double C15706 = C50911 * C411;
    const double C50916 = C50638 / C49721;
    const double C2343 = C2157 * C285;
    const double C2337 = C2157 * C269;
    const double C2335 = C2157 * C271;
    const double C2329 = C2157 * C287;
    const double C2319 = C2157 * C286;
    const double C2313 = C2157 * C270;
    const double C3045 = C2157 * C780;
    const double C3039 = C2157 * C790;
    const double C3333 = C2157 * C984;
    const double C3327 = C2157 * C980;
    const double C3509 = C2157 * C1098;
    const double C3503 = C2157 * C1094;
    const double C4025 = C2157 * C1445;
    const double C4019 = C2157 * C1441;
    const double C5349 = C2157 * C426;
    const double C5343 = C2157 * C410;
    const double C5341 = C2157 * C412;
    const double C5335 = C2157 * C428;
    const double C5325 = C2157 * C427;
    const double C5319 = C2157 * C411;
    const double C7179 = C2157 * C1729;
    const double C7173 = C2157 * C1725;
    const double C25530 = -C50951;
    const double C2321 = C2158 * C285;
    const double C2315 = C2158 * C269;
    const double C5327 = C2158 * C426;
    const double C5321 = C2158 * C410;
    const double C49798 = C49768 * C49785;
    const double C15410 =
        ((-C49782 / C49721) / C49726 -
         ((C50822 - (C49768 * C49785) / C49721) * be) / C49721) /
            C49726 -
        ((C49768 * ((-C49785 / C49721) / C49726 - (0 * be) / C49721) + C50834) *
         be) /
            C49721;
    const double C15411 =
        ((-C49785 / C49721) / C49726 - (0 * be) / C49721) / C49726 -
        (0 * be) / C49721;
    const double C31994 = (-C49785 / C49721) / C49726 - (0 * be) / C49721;
    const double C49808 = C49805 - C49801;
    const double C50967 = C50948 / C49725;
    const double C50950 = C50837 / C49721;
    const double C31991 = -C50966;
    const double C132 =
        (2 * (C49848 * C49951 + C50224 * ae) +
         C49848 * (C49951 + C49848 * C49955 + C49848 * C49942 * ae) +
         (C50224 + C49942 * C49873) * ae) /
        C49721;
    const double C268 =
        (C50017 * (C49951 + C49848 * C49955 + C50232 * ae)) / C49721;
    const double C272 =
        (C49848 * C49951 + C50224 * ae + C49955 * C50035) / C49721;
    const double C409 =
        (C49847 * (C49951 + C49848 * C49955 + C50232 * ae)) / C49721;
    const double C413 =
        (C49848 * C49951 + C50224 * ae + C49955 * C50071) / C49721;
    const double C781 = (C49847 * C50017 * C49955) / C49721;
    const double C7164 =
        (3 * (C49860 + C49847 * C50387 + C50385 * ae) +
         C49847 * (2 * C50387 +
                   C49847 * (C49867 + C49847 * (C49847 * C49877 + C49958) +
                             C49847 * C49943 * ae) +
                   C50388 * ae) +
         (2 * C50385 + C49847 * C50388) * ae) /
        C49721;
    const double C137 = (3 * (C49860 + C49867 * C49873) +
                         C49848 * (2 * C49869 + C49848 * C49881)) /
                        C49721;
    const double C263 = (C50017 * (2 * C49869 + C49848 * C49881)) / C49721;
    const double C277 = (C49860 + C49867 * C49873 + C49881 * C50035) / C49721;
    const double C404 = (C49847 * (2 * C49869 + C49848 * C49881) +
                         (2 * C50232 + C49848 * C50234) * ae) /
                        C49721;
    const double C418 =
        (C49860 + C49867 * C49873 + C49847 * (C49847 * C49881 + C50234 * ae) +
         C49847 * C50234 * ae) /
        C49721;
    const double C786 =
        (C49847 * C50017 * C49881 + C50017 * C50234 * ae) / C49721;
    const double C974 =
        (2 * C50017 * C49881 + C50017 * (C49881 + C49897 * C50035)) / C49721;
    const double C49898 = C49848 * C49896;
    const double C49903 = 2 * C49896;
    const double C50062 = C50017 * C49896;
    const double C50078 = C49847 * C49896;
    const double C49891 = C49876 + C49887;
    const double C50381 = C50378 + C49961;
    const double C8959 =
        (4 * (2 * C50366 + C50017 * C50397) +
         C50017 *
             (3 * C50397 + C50017 * (2 * C50017 * C49877 +
                                     C50017 * (C49877 + C49893 * C50035)))) /
        C49721;
    const double C50458 = C50454 + C50455;
    const double C50492 = C49847 * C50488;
    const double C50517 = 2 * C50488;
    const double C147 =
        (3 * (C49866 + ae * C49869 + C49848 * C49880) +
         ae * (2 * C49869 + C49848 * C49881) +
         C49848 *
             (2 * C49880 + ae * C49881 +
              C49848 * (C49876 + ae * C49848 * C49877 +
                        C49848 * (ae * C49877 + C49848 * std::pow(C49850, 6) *
                                                    bs[6] * C49858)))) /
        C49725;
    const double C284 =
        ((yP - yQ) * (C49866 + ae * C49869 + C49848 * C49880)) / C49725;
    const double C288 =
        (ae * C49860 + C49848 * C49866 + C49880 * std::pow(yP - yQ, 2)) /
        C49725;
    const double C425 = (ae * (C49857 * C49853 * C49941 +
                               C49848 * (C49848 * C49945 + C49942 * ae) +
                               C49848 * C49942 * ae) +
                         C49847 * (C49866 + ae * C49869 + C49848 * C49880)) /
                        C49725;
    const double C429 = (ae * C49860 + C49848 * C49866 + ae * C49847 * C49955 +
                         C49847 * (ae * C49955 + C49847 * C49880)) /
                        C49725;
    const double C791 =
        (ae * C50017 * C49955 + C49847 * C50017 * C49880) / C49725;
    const double C983 = (2 * C50017 * C49880 +
                         C50017 * (C49880 + C49896 * std::pow(C50017, 2))) /
                        C49725;
    const double C49964 = C49848 * C49963;
    const double C49968 = 2 * C49963;
    const double C50031 = C50017 * C49963;
    const double C50077 = ae * C49963;
    const double C50076 = C49847 * C49963;
    const double C1444 = (ae * (C49955 + C49963 * C50035) +
                          C49847 * (C49880 + C49896 * C50035)) /
                         C49725;
    const double C1728 = (2 * (ae * C49955 + C49847 * C49880) +
                          ae * (C49955 + C49963 * std::pow(C49847, 2)) +
                          C49847 * (C49880 + ae * C49847 * C49963 +
                                    C49847 * (ae * C49963 + C49847 * C49896))) /
                         C49725;
    const double C979 =
        (2 * C50017 * C49955 + C50017 * (C49955 + C49963 * C50035)) / C49721;
    const double C1440 = (C49847 * (C49955 + C49963 * C50035)) / C49721;
    const double C1724 =
        (2 * C49847 * C49955 + C49847 * (C49955 + C49963 * C50071)) / C49721;
    const double C3500 =
        (C49866 + C49876 * C50035 + ae * C49847 * C50054 +
         C49847 * (ae * C50054 + C49847 * (C49876 + C49892 * C50035))) /
        C49725;
    const double C4016 =
        (ae * (2 * C50033 + C50017 * C50054) +
         C49847 * (2 * C50017 * C49876 + C50017 * (C49876 + C49892 * C50035))) /
        C49725;
    const double C10067 =
        (2 * (ae * C50054 + C49847 * C50094) + ae * (C50054 + C50104 * C50071) +
         C49847 *
             (C50094 + ae * C49847 * C50104 +
              C49847 * (ae * C50104 + C49847 * (C49892 + C49916 * C50035)))) /
        C49725;
    const double C3321 = (3 * (C49951 + C49945 * C50035) +
                          C50017 * (2 * C50033 + C50017 * C50054)) /
                         C49721;
    const double C3497 = (C49951 + C49945 * C50035 + C50054 * C50071) / C49721;
    const double C4013 = (C49847 * (2 * C50033 + C50017 * C50054)) / C49721;
    const double C10065 =
        (2 * C49847 * C50054 + C49847 * (C50054 + C50104 * C50071)) / C49721;
    const double C50142 = C50139 + C50140;
    const double C13911 = C50630 * C4436;
    const double C16702 = C50911 * C4436;
    const double C13909 = C50630 * C4433;
    const double C16698 = C50911 * C4433;
    const double C7170 =
        (3 * (C49866 + ae * C50083 + C49847 * C50087) +
         ae * (2 * C50083 + C49847 * C50088) +
         C49847 * (2 * C50087 + ae * C50088 +
                   C49847 * (C49876 + ae * C49847 * C49960 +
                             C49847 * (ae * C49960 + C49847 * C49892)))) /
        C49725;
    const double C7167 = (3 * (C49951 + C49945 * C50071) +
                          C49847 * (2 * C50083 + C49847 * C50088)) /
                         C49721;
    const double C50177 = C49847 * C50173;
    const double C50198 = 2 * C50173;
    const double C50176 = C49876 + C50172;
    const double C49979 = C49977 * ae;
    const double C50237 = C49848 * C49977;
    const double C50242 = 3 * C49977;
    const double C50310 = C50017 * C49977;
    const double C50373 = C49847 * C49977;
    const double C1435 = (C49847 * (C49881 + C49897 * C50035) +
                          (C50234 + C49977 * C50035) * ae) /
                         C49721;
    const double C970 =
        2 * C50017 * C50234 + C50017 * (C50234 + C49977 * C50035);
    const double C1431 = C49847 * (C50234 + C49977 * C50035);
    const double C1715 =
        2 * C49847 * C50234 + C49847 * (C50234 + C49977 * C50071);
    const double C50475 = C50472 + C49976;
    const double C50346 = C49959 + C50345;
    const double C50401 = 2 * C50364;
    const double C50464 = C49847 * C50364;
    const double C50463 = C50364 * ae;
    const double C4429 =
        (2 * (C49847 * C50363 + C50312 * ae) +
         C49847 * (C50363 + C49847 * (C49847 * C50017 * C49905 + C50364 * ae) +
                   C49847 * C50364 * ae) +
         (C50312 + C50364 * C50071) * ae) /
        C49721;
    const double C4426 =
        2 * C49847 * C50312 + C49847 * (C50312 + C50364 * C50071);
    const double C50382 = C49959 + C50380;
    const double C50478 = 2 * C50473;
    const double C50476 = C50473 * ae;
    const double C49980 = C49848 * C49978;
    const double C49989 = 2 * C49978;
    const double C50050 = C49978 * C50035;
    const double C50063 = C50017 * C49978;
    const double C50079 = C49978 * C50071;
    const double C50155 = ae * C49978;
    const double C50154 = C49847 * C49978;
    const double C50527 = C49847 * C50523;
    const double C50410 = C50017 * C50409;
    const double C50431 = 3 * C50409;
    const double C50448 = C49847 * C50409;
    const double C50447 = C50409 * ae;
    const double C10063 =
        (2 * (C49847 * C50397 + C50349 * ae) +
         C49847 *
             (C50397 +
              C49847 * (C49847 * (C49877 + C49893 * C50035) + C50409 * ae) +
              C49847 * C50409 * ae) +
         (C50349 + C50409 * C50071) * ae) /
        C49721;
    const double C10061 =
        2 * C49847 * C50349 + C49847 * (C50349 + C50409 * C50071);
    const double C50459 = C50367 + C50457;
    const double C50507 = 2 * C50502;
    const double C50505 = C50502 * ae;
    const double C50508 = C50504 + C50501;
    const double C50493 = C49847 * C50490;
    const double C50522 = 3 * C50490;
    const double C50520 = C50490 * ae;
    const double C49923 = C49848 * C49921;
    const double C3316 =
        (3 * (C49881 + C49897 * C50035) +
         C50017 * (2 * C50017 * C49897 + C50017 * (C49897 + C49921 * C50035))) /
        C49721;
    const double C49922 = C49848 * C49920;
    const double C50090 = C49920 * C50035;
    const double C50147 = C50017 * C49920;
    const double C50156 = C49847 * C49920;
    const double C3323 =
        (3 * (C49880 + C49896 * C50035) +
         C50017 * (2 * C50017 * C49896 + C50017 * (C49896 + C49920 * C50035))) /
        C49725;
    const double C50116 = C50017 * C50115;
    const double C50133 = C49847 * C50115;
    const double C50191 = C50183 + C50187;
    const double C50211 = C49847 * C50207;
    const double C50003 = C49848 * C50000;
    const double C50097 = C50000 * C50035;
    const double C50148 = C50017 * C50000;
    const double C50157 = C50000 * C50071;
    const double C50124 = C50017 * C50123;
    const double C50134 = C50123 * C50071;
    const double C50192 = C50120 + C50189;
    const double C50212 = C49847 * C50209;
    const double C49901 = C49889 + C49899;
    const double C8958 =
        (4 * (2 * C50363 + C50017 * C50394) +
         C50017 * (3 * C50394 +
                   C50017 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50035)))) /
        C49721;
    const double C50428 = C50425 + C50427;
    const double C11462 = C50630 * C8963;
    const double C50106 = C50102 + C50105;
    const double C14813 = (3 * (C50033 + C50066 * C50071) +
                           C49847 * (2 * C50138 + C49847 * C50143)) /
                          C49721;
    const double C50190 = C50112 + C50186;
    const double C50180 = C50174 + C50178;
    const double C50004 = C49992 + C50002;
    const double C50343 = C49977 + C50342;
    const double C50376 = C49977 + C50374;
    const double C50404 = C50017 * C50403;
    const double C50469 = C50364 + C50467;
    const double C50480 = C49847 * C50477;
    const double C50437 = C50434 + C50436;
    const double C50451 = C50409 + C50449;
    const double C50511 = C49847 * C50509;
    const double C50530 = C50526 + C50528;
    const double C50954 = C50919 / C50665;
    const double C50956 = C50923 / C50653;
    const double C251 = -C50955;
    const double C50958 = C50931 / C50665;
    const double C50959 = C50933 / C50653;
    const double C893 = -C50957;
    const double C50961 = C50935 / C50665;
    const double C50962 = C50937 / C50653;
    const double C1544 = -C50960;
    const double C50964 = C50943 / C49725;
    const double C50945 = C50813 / C49721;
    const double C22717 = -C50963;
    const double C7961 = C49740 * C259;
    const double C7957 = C49740 * C264;
    const double C7953 = C49740 * C254;
    const double C7947 = C49740 * C971;
    const double C7943 = C49740 * C975;
    const double C7941 = C49740 * C276;
    const double C7937 = C49740 * C258;
    const double C7933 = C49740 * C265;
    const double C7929 = C49740 * C255;
    const double C8303 = C49740 * C253;
    const double C8683 = C49740 * C777;
    const double C8677 = C49740 * C776;
    const double C8673 = C49740 * C785;
    const double C8669 = C49740 * C1432;
    const double C8665 = C49740 * C1436;
    const double C8973 = C49740 * C3317;
    const double C9142 = C49740 * C1089;
    const double C9138 = C49740 * C1085;
    const double C15739 = C49740 * C400;
    const double C15735 = C49740 * C405;
    const double C15731 = C49740 * C395;
    const double C15725 = C49740 * C1716;
    const double C15721 = C49740 * C1720;
    const double C15719 = C49740 * C417;
    const double C15715 = C49740 * C399;
    const double C15711 = C49740 * C406;
    const double C15707 = C49740 * C396;
    const double C16075 = C49740 * C394;
    const double C120 =
        (C49740 / C49726 - (0 * be) / C49721) / C49726 - (0 * be) / C49721;
    const double C22721 = C49740 / C49726 - (0 * be) / C49721;
    const double C49742 = C49739 / C49721;
    const double C2340 = C2164 * C253;
    const double C2330 = C2164 * C259;
    const double C2322 = C2164 * C264;
    const double C2316 = C2164 * C254;
    const double C3040 = C2164 * C777;
    const double C5346 = C2164 * C394;
    const double C5336 = C2164 * C400;
    const double C5328 = C2164 * C405;
    const double C5322 = C2164 * C395;
    const double C10755 = C10625 * C3317;
    const double C10751 = C10625 * C975;
    const double C10749 = C10625 * C971;
    const double C10747 = C10625 * C276;
    const double C10745 = C10625 * C258;
    const double C10743 = C10625 * C265;
    const double C10741 = C10625 * C255;
    const double C10739 = C10625 * C3315;
    const double C10737 = C10625 * C3318;
    const double C10735 = C10625 * C976;
    const double C10733 = C10625 * C972;
    const double C10731 = C10625 * C275;
    const double C10729 = C10625 * C257;
    const double C10727 = C10625 * C266;
    const double C10725 = C10625 * C256;
    const double C10993 = C10625 * C259;
    const double C10991 = C10625 * C264;
    const double C10989 = C10625 * C254;
    const double C11259 = C10625 * C1436;
    const double C11257 = C10625 * C1432;
    const double C11255 = C10625 * C785;
    const double C11253 = C10625 * C776;
    const double C11251 = C10625 * C775;
    const double C11249 = C10625 * C784;
    const double C11247 = C10625 * C1433;
    const double C11245 = C10625 * C1437;
    const double C11243 = C10625 * C4007;
    const double C11241 = C10625 * C4010;
    const double C11575 = C10625 * C3494;
    const double C11573 = C10625 * C3491;
    const double C11571 = C10625 * C1090;
    const double C11569 = C10625 * C1086;
    const double C12963 = C10625 * C1089;
    const double C12961 = C10625 * C1085;
    const double C12959 = C10625 * C417;
    const double C12957 = C10625 * C399;
    const double C12955 = C10625 * C406;
    const double C12953 = C10625 * C396;
    const double C12951 = C10625 * C398;
    const double C12949 = C10625 * C416;
    const double C12947 = C10625 * C407;
    const double C12945 = C10625 * C397;
    const double C13129 = C10625 * C777;
    const double C13295 = C10625 * C405;
    const double C13293 = C10625 * C395;
    const double C13910 = C10625 * C4430;
    const double C13908 = C10625 * C4427;
    const double C14819 = C10625 * C1721;
    const double C14817 = C10625 * C1717;
    const double C18511 = C10625 * C1720;
    const double C18509 = C10625 * C1716;
    const double C18825 = C10625 * C400;
    const double C20331 = C10625 * C7161;
    const double C25718 = C25536 * C259;
    const double C25714 = C25536 * C264;
    const double C25710 = C25536 * C254;
    const double C25704 = C25536 * C971;
    const double C25700 = C25536 * C975;
    const double C25698 = C25536 * C276;
    const double C25694 = C25536 * C258;
    const double C25690 = C25536 * C265;
    const double C25686 = C25536 * C255;
    const double C26060 = C25536 * C253;
    const double C26440 = C25536 * C777;
    const double C26434 = C25536 * C776;
    const double C26430 = C25536 * C785;
    const double C26426 = C25536 * C1432;
    const double C26422 = C25536 * C1436;
    const double C26722 = C25536 * C3317;
    const double C26883 = C25536 * C1089;
    const double C26879 = C25536 * C1085;
    const double C28824 = C25536 * C400;
    const double C28820 = C25536 * C405;
    const double C28816 = C25536 * C395;
    const double C28810 = C25536 * C399;
    const double C28806 = C25536 * C417;
    const double C28804 = C25536 * C406;
    const double C28800 = C25536 * C396;
    const double C29260 = C25536 * C394;
    const double C31242 = C25536 * C1720;
    const double C31238 = C25536 * C1716;
    const double C50969 = C50913 - C50952;
    const double C50953 = C50915 - C50916;
    const double C25713 = C25530 * C285;
    const double C25709 = C25530 * C269;
    const double C25707 = C25530 * C980;
    const double C25703 = C25530 * C984;
    const double C25697 = C25530 * C287;
    const double C25693 = C25530 * C271;
    const double C25689 = C25530 * C286;
    const double C25685 = C25530 * C270;
    const double C26437 = C25530 * C780;
    const double C26433 = C25530 * C790;
    const double C26429 = C25530 * C1441;
    const double C26425 = C25530 * C1445;
    const double C26721 = C25530 * C3324;
    const double C26882 = C25530 * C1098;
    const double C26878 = C25530 * C1094;
    const double C28819 = C25530 * C426;
    const double C28815 = C25530 * C410;
    const double C28813 = C25530 * C412;
    const double C28809 = C25530 * C428;
    const double C28803 = C25530 * C427;
    const double C28799 = C25530 * C411;
    const double C30063 = C25530 * C4436;
    const double C30059 = C25530 * C4433;
    const double C31241 = C25530 * C1729;
    const double C31237 = C25530 * C1725;
    const double C49804 = C49798 / C49721;
    const double C20895 =
        (C49808 / C49726 - (0 * be) / C49721) / C49726 - (0 * be) / C49721;
    const double C38228 = C49808 / C49726 - (0 * be) / C49721;
    const double C50977 = C50946 - C50967;
    const double C50968 = C50949 - C50950;
    const double C15409 =
        ((-(0 * be) / C49721) / C49726 -
         ((0 - (C49768 * C49782) / C49721) * be) / C49721) /
            C49726 -
        ((C49768 * ((-C49782 / C49721) / C49726 -
                    ((C50822 - (C49768 * C49785) / C49721) * be) / C49721) +
          C31991) *
         be) /
            C49721 +
        (-C49785 / C49721) / C49726 - (0 * be) / C49721;
    const double C2339 = C2158 * C268;
    const double C2317 = C2159 * C268;
    const double C2677 = C2157 * C268;
    const double C7954 = C50635 * C268;
    const double C8302 = C50911 * C268;
    const double C10990 = C50630 * C268;
    const double C22874 = C22716 * C268;
    const double C25711 = C50635 * C268;
    const double C26059 = C25530 * C268;
    const double C2349 = C2157 * C272;
    const double C2333 = C2158 * C272;
    const double C7960 = C50911 * C272;
    const double C7938 = C50635 * C272;
    const double C10746 = C50630 * C272;
    const double C25717 = C25530 * C272;
    const double C25695 = C50635 * C272;
    const double C5345 = C2158 * C409;
    const double C5323 = C2159 * C409;
    const double C5683 = C2157 * C409;
    const double C13294 = C50630 * C409;
    const double C15732 = C50635 * C409;
    const double C16074 = C50911 * C409;
    const double C28817 = C50635 * C409;
    const double C29259 = C25530 * C409;
    const double C32293 = C22716 * C409;
    const double C5355 = C2157 * C413;
    const double C5339 = C2158 * C413;
    const double C12958 = C50630 * C413;
    const double C15738 = C50911 * C413;
    const double C15716 = C50635 * C413;
    const double C28823 = C25530 * C413;
    const double C28811 = C50635 * C413;
    const double C3047 = C2157 * C781;
    const double C3043 = C2158 * C781;
    const double C8682 = C50911 * C781;
    const double C8678 = C50635 * C781;
    const double C11254 = C50630 * C781;
    const double C26439 = C25530 * C781;
    const double C26435 = C50635 * C781;
    const double C20333 = C10625 * C7164;
    const double C2346 = C2164 * C263;
    const double C8307 = C49740 * C263;
    const double C26064 = C25536 * C263;
    const double C2324 = C2164 * C277;
    const double C7965 = C49740 * C277;
    const double C10995 = C10625 * C277;
    const double C25722 = C25536 * C277;
    const double C5352 = C2164 * C404;
    const double C16079 = C49740 * C404;
    const double C29264 = C25536 * C404;
    const double C5330 = C2164 * C418;
    const double C15743 = C49740 * C418;
    const double C18827 = C10625 * C418;
    const double C28828 = C25536 * C418;
    const double C3034 = C2164 * C786;
    const double C8687 = C49740 * C786;
    const double C13131 = C10625 * C786;
    const double C26444 = C25536 * C786;
    const double C3336 = C2164 * C974;
    const double C7973 = C49740 * C974;
    const double C10999 = C10625 * C974;
    const double C25730 = C25536 * C974;
    const double C49910 = C49903 + C49904;
    const double C49900 = C49891 + C49898;
    const double C11461 = C10625 * C8959;
    const double C50494 = C49867 + C50492;
    const double C2345 = C2158 * C284;
    const double C2323 = C2159 * C284;
    const double C2683 = C2157 * C284;
    const double C7958 = C50635 * C284;
    const double C8306 = C50911 * C284;
    const double C10992 = C50630 * C284;
    const double C22880 = C22716 * C284;
    const double C25715 = C50635 * C284;
    const double C26063 = C25530 * C284;
    const double C2355 = C2157 * C288;
    const double C2327 = C2158 * C288;
    const double C7964 = C50911 * C288;
    const double C7942 = C50635 * C288;
    const double C10748 = C50630 * C288;
    const double C25721 = C25530 * C288;
    const double C25699 = C50635 * C288;
    const double C5351 = C2158 * C425;
    const double C5329 = C2159 * C425;
    const double C5689 = C2157 * C425;
    const double C13296 = C50630 * C425;
    const double C15736 = C50635 * C425;
    const double C16078 = C50911 * C425;
    const double C28821 = C50635 * C425;
    const double C29263 = C25530 * C425;
    const double C32299 = C22716 * C425;
    const double C5361 = C2157 * C429;
    const double C5333 = C2158 * C429;
    const double C12960 = C50630 * C429;
    const double C15742 = C50911 * C429;
    const double C15720 = C50635 * C429;
    const double C28827 = C25530 * C429;
    const double C28807 = C50635 * C429;
    const double C3053 = C2157 * C791;
    const double C3037 = C2158 * C791;
    const double C8686 = C50911 * C791;
    const double C8674 = C50635 * C791;
    const double C11256 = C50630 * C791;
    const double C26443 = C25530 * C791;
    const double C26431 = C50635 * C791;
    const double C3335 = C2158 * C983;
    const double C7972 = C50911 * C983;
    const double C7944 = C50635 * C983;
    const double C10752 = C50630 * C983;
    const double C25729 = C25530 * C983;
    const double C25701 = C50635 * C983;
    const double C49965 = C49945 + C49964;
    const double C1097 = (C50017 * C49880 + ae * C49847 * C50031 +
                          C49847 * (ae * C50031 + C49847 * C50017 * C49896)) /
                         C49725;
    const double C1093 = (C50017 * C49955 + C50031 * C50071) / C49721;
    const double C50080 = C50077 + C50078;
    const double C4027 = C2158 * C1444;
    const double C8694 = C50911 * C1444;
    const double C8666 = C50635 * C1444;
    const double C11260 = C50630 * C1444;
    const double C26451 = C25530 * C1444;
    const double C26423 = C50635 * C1444;
    const double C7181 = C2158 * C1728;
    const double C15750 = C50911 * C1728;
    const double C15722 = C50635 * C1728;
    const double C18512 = C50630 * C1728;
    const double C31243 = C50635 * C1728;
    const double C38529 = C25530 * C1728;
    const double C3329 = C2158 * C979;
    const double C7968 = C50911 * C979;
    const double C7948 = C50635 * C979;
    const double C10750 = C50630 * C979;
    const double C25725 = C25530 * C979;
    const double C25705 = C50635 * C979;
    const double C4021 = C2158 * C1440;
    const double C8690 = C50911 * C1440;
    const double C8670 = C50635 * C1440;
    const double C11258 = C50630 * C1440;
    const double C26447 = C25530 * C1440;
    const double C26427 = C50635 * C1440;
    const double C7175 = C2158 * C1724;
    const double C15746 = C50911 * C1724;
    const double C15726 = C50635 * C1724;
    const double C18510 = C50630 * C1724;
    const double C31239 = C50635 * C1724;
    const double C38525 = C25530 * C1724;
    const double C9149 = C50911 * C3500;
    const double C11576 = C50630 * C3500;
    const double C26890 = C25530 * C3500;
    const double C9661 = C50911 * C4016;
    const double C11242 = C50630 * C4016;
    const double C27394 = C25530 * C4016;
    const double C13917 = C50630 * C10067;
    const double C8968 = C50911 * C3321;
    const double C10740 = C50630 * C3321;
    const double C26717 = C25530 * C3321;
    const double C9145 = C50911 * C3497;
    const double C11574 = C50630 * C3497;
    const double C26886 = C25530 * C3497;
    const double C9657 = C50911 * C4013;
    const double C11244 = C50630 * C4013;
    const double C27390 = C25530 * C4013;
    const double C13915 = C50630 * C10065;
    const double C14815 =
        (3 * (C50065 + ae * C50138 + C49847 * C50142) +
         ae * (2 * C50138 + C49847 * C50143) +
         C49847 *
             (2 * C50142 + ae * C50143 +
              C49847 * (C50112 + ae * C49847 * C50120 +
                        C49847 * (ae * C50120 + C49847 * C50017 * C49916)))) /
        C49725;
    const double C17602 = C50911 * C7170;
    const double C20334 = C50630 * C7170;
    const double C40309 = C25530 * C7170;
    const double C17598 = C50911 * C7167;
    const double C20332 = C50630 * C7167;
    const double C40305 = C25530 * C7167;
    const double C50205 = C50198 + C50199;
    const double C50179 = C50176 + C50177;
    const double C50375 = C50372 + C49979;
    const double C1719 =
        (2 * (C49847 * C49881 + C50234 * ae) +
         C49847 * (C49881 + C49847 * (C49847 * C49897 + C49979) +
                   C49847 * C49977 * ae) +
         (C50234 + C49977 * C50071) * ae) /
        C49721;
    const double C50238 = C50236 + C50237;
    const double C1088 =
        (C50017 * C49881 + C49847 * (C49847 * C50017 * C49897 + C50310 * ae) +
         C49847 * C50310 * ae) /
        C49721;
    const double C4428 =
        (2 * (C49847 * C50360 + C50310 * ae) +
         C49847 * (C50360 + C49847 * (C49847 * C50017 * C49921 + C50361 * ae) +
                   C49847 * C50361 * ae) +
         (C50310 + C50361 * C50071) * ae) /
        C49721;
    const double C1084 = C50017 * C50234 + C50310 * C50071;
    const double C4425 =
        2 * C49847 * C50310 + C49847 * (C50310 + C50361 * C50071);
    const double C4028 = C2164 * C1435;
    const double C8695 = C49740 * C1435;
    const double C13137 = C10625 * C1435;
    const double C26452 = C25536 * C1435;
    const double C3330 = C2164 * C970;
    const double C7969 = C49740 * C970;
    const double C10997 = C10625 * C970;
    const double C25726 = C25536 * C970;
    const double C4022 = C2164 * C1431;
    const double C8691 = C49740 * C1431;
    const double C13135 = C10625 * C1431;
    const double C26448 = C25536 * C1431;
    const double C7176 = C2164 * C1715;
    const double C15747 = C49740 * C1715;
    const double C21295 = C10625 * C1715;
    const double C38526 = C25536 * C1715;
    const double C50479 = C49847 * C50475;
    const double C3493 =
        (C49869 + C49883 * C50035 +
         C49847 * (C49847 * (C49883 + C49905 * C50035) + C50346 * ae) +
         C49847 * C50346 * ae) /
        C49721;
    const double C4009 =
        (C49847 * (2 * C50017 * C49883 + C50017 * (C49883 + C49905 * C50035)) +
         (2 * C50312 + C50017 * C50346) * ae) /
        C49721;
    const double C10062 =
        (2 * (C49847 * C50394 + C50346 * ae) +
         C49847 * (C50394 +
                   C49847 * (C49847 * (C49905 + C49848 * C49917 * C50035) +
                             C50403 * ae) +
                   C49847 * C50403 * ae) +
         (C50346 + C50403 * C50071) * ae) /
        C49721;
    const double C3314 = 3 * (C50232 + C49959 * C50035) +
                         C50017 * (2 * C50312 + C50017 * C50346);
    const double C3490 = C50232 + C49959 * C50035 + C50346 * C50071;
    const double C4006 = C49847 * (2 * C50312 + C50017 * C50346);
    const double C10060 =
        2 * C49847 * C50346 + C49847 * (C50346 + C50403 * C50071);
    const double C50468 = C50466 + C50463;
    const double C16703 = C49740 * C4429;
    const double C18515 = C10625 * C4429;
    const double C30064 = C25536 * C4429;
    const double C16699 = C49740 * C4426;
    const double C18513 = C10625 * C4426;
    const double C30060 = C25536 * C4426;
    const double C7163 =
        (3 * (C49869 + C49847 * C50381 + C50379 * ae) +
         C49847 * (2 * C50381 +
                   C49847 * (C49883 + C49847 * (C49847 * C49905 + C49976) +
                             C49847 * C49973 * ae) +
                   C50382 * ae) +
         (2 * C50379 + C49847 * C50382) * ae) /
        C49721;
    const double C7160 = 3 * (C50232 + C49959 * C50071) +
                         C49847 * (2 * C50379 + C49847 * C50382);
    const double C49981 = C49960 + C49980;
    const double C50051 = C49963 + C50050;
    const double C50096 = 2 * C50063;
    const double C50146 = ae * C50063;
    const double C50145 = C49847 * C50063;
    const double C4435 =
        (2 * (ae * C50031 + C49847 * C50062) +
         ae * (C50031 + C50063 * std::pow(C49847, 2)) +
         C49847 * (C50062 + ae * C49847 * C50063 +
                   C49847 * (ae * C50063 + C49847 * C50017 * C49920))) /
        C49725;
    const double C4432 =
        (2 * C49847 * C50031 + C49847 * (C50031 + C50063 * C50071)) / C49721;
    const double C50081 = C49963 + C50079;
    const double C50160 = 2 * C50154;
    const double C50158 = ae * C50154;
    const double C50529 = C49877 + C50527;
    const double C50411 = C50407 + C50410;
    const double C50450 = C50446 + C50447;
    const double C13916 = C10625 * C10063;
    const double C13914 = C10625 * C10061;
    const double C14812 =
        (3 * (C50366 + C49847 * C50458 + C50456 * ae) +
         C49847 * (2 * C50458 +
                   C49847 * (C50423 +
                             C49847 * (C49847 * C50017 * C49893 + C50432 * ae) +
                             C49847 * C50432 * ae) +
                   C50459 * ae) +
         (2 * C50456 + C49847 * C50459) * ae) /
        C49721;
    const double C14809 = 3 * (C50314 + C50367 * C50071) +
                          C49847 * (2 * C50456 + C49847 * C50459);
    const double C50510 = C49847 * C50508;
    const double C50495 = C50491 + C50493;
    const double C49925 = C49913 + C49923;
    const double C49924 = C49915 + C49922;
    const double C50091 = C49896 + C50090;
    const double C50149 = C49847 * C50147;
    const double C50159 = C50155 + C50156;
    const double C8974 = C50635 * C3323;
    const double C10756 = C50630 * C3323;
    const double C26723 = C50635 * C3323;
    const double C50117 = C50114 + C50116;
    const double C50135 = C50132 + C50133;
    const double C50193 = C49847 * C50191;
    const double C50213 = C50210 + C50211;
    const double C50005 = C49971 + C50003;
    const double C50098 = C49978 + C50097;
    const double C50150 = C50148 * C50071;
    const double C50161 = C49978 + C50157;
    const double C50125 = C50122 + C50124;
    const double C50136 = C50104 + C50134;
    const double C50194 = C49847 * C50192;
    const double C50214 = C50208 + C50212;
    const double C140 = (4 * (2 * C49869 + C49848 * C49881) +
                         C49848 * (3 * C49881 + C49848 * C49901)) /
                        C49721;
    const double C278 =
        (2 * C49869 + C49848 * C49881 + C49901 * C50035) / C49721;
    const double C280 = (C50017 * (3 * C49881 + C49848 * C49901)) / C49721;
    const double C11453 =
        (5 * (3 * C50397 + C50017 * C50428) +
         C50017 * (4 * C50428 +
                   C50017 * (3 * C50426 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035))))) /
        C49721;
    const double C9134 =
        (2 * C50065 + C50017 * C50094 + ae * C49847 * C50106 +
         C49847 *
             (ae * C50106 + C49847 * (2 * C50017 * C49892 +
                                      C50017 * (C49892 + C49916 * C50035)))) /
        C49725;
    const double C9652 =
        (ae * (3 * C50054 + C50017 * C50106) +
         C49847 *
             (3 * C50094 + C50017 * (2 * C50017 * C49892 +
                                     C50017 * (C49892 + C49916 * C50035)))) /
        C49725;
    const double C8961 = (4 * (2 * C50033 + C50017 * C50054) +
                          C50017 * (3 * C50054 + C50017 * C50106)) /
                         C49721;
    const double C9132 =
        (2 * C50033 + C50017 * C50054 + C50106 * C50071) / C49721;
    const double C9650 = (C49847 * (3 * C50054 + C50017 * C50106)) / C49721;
    const double C19438 = C50630 * C14813;
    const double C17591 = (4 * (2 * C50083 + C49847 * C50088) +
                           C49847 * (3 * C50088 + C49847 * C50180)) /
                          C49721;
    const double C50006 = C50004 * ae;
    const double C50243 = C49848 * C50004;
    const double C50308 = C50017 * C50004;
    const double C3492 =
        (C49881 + C49897 * C50035 +
         C49847 * (C49847 * (C49897 + C49921 * C50035) + C50343 * ae) +
         C49847 * C50343 * ae) /
        C49721;
    const double C4008 =
        (C49847 * (2 * C50017 * C49897 + C50017 * (C49897 + C49921 * C50035)) +
         (2 * C50310 + C50017 * C50343) * ae) /
        C49721;
    const double C3313 = 3 * (C50234 + C49977 * C50035) +
                         C50017 * (2 * C50310 + C50017 * C50343);
    const double C3489 = C50234 + C49977 * C50035 + C50343 * C50071;
    const double C4005 = C49847 * (2 * C50310 + C50017 * C50343);
    const double C7159 = 3 * (C50234 + C49977 * C50071) +
                         C49847 * (2 * C50373 + C49847 * C50376);
    const double C50405 = C50401 + C50404;
    const double C16692 = 3 * (C50312 + C50364 * C50071) +
                          C49847 * (2 * C50464 + C49847 * C50469);
    const double C50482 = C50478 + C50480;
    const double C50438 = C50017 * C50437;
    const double C14808 = 3 * (C50349 + C50409 * C50071) +
                          C49847 * (2 * C50448 + C49847 * C50451);
    const double C50513 = C50507 + C50511;
    const double C50532 = C49847 * C50530;
    const double C50970 = C50918 - C50954;
    const double C50971 = C50922 - C50956;
    const double C50972 = C50925 - C50958;
    const double C50973 = C50932 - C50959;
    const double C50974 = C50927 - C50961;
    const double C50975 = C50936 - C50962;
    const double C50976 = C50941 - C50964;
    const double C50965 = C50944 - C50945;
    const double C7978 = C7933 + C7934;
    const double C7976 = C7929 + C7930;
    const double C15756 = C15711 + C15712;
    const double C15754 = C15707 + C15708;
    const double C22903 = C22721 * C263;
    const double C22897 = C22721 * C253;
    const double C22887 = C22721 * C259;
    const double C22881 = C22721 * C277;
    const double C22879 = C22721 * C264;
    const double C22873 = C22721 * C254;
    const double C23597 = C22721 * C777;
    const double C23591 = C22721 * C786;
    const double C23881 = C22721 * C974;
    const double C23875 = C22721 * C970;
    const double C24549 = C22721 * C1435;
    const double C24543 = C22721 * C1431;
    const double C32322 = C22721 * C404;
    const double C32316 = C22721 * C394;
    const double C32306 = C22721 * C400;
    const double C32300 = C22721 * C418;
    const double C32298 = C22721 * C405;
    const double C32292 = C22721 * C395;
    const double C34134 = C22721 * C1715;
    const double C49744 = C50630 - C49742;
    const double C10766 = C10743 + C10744;
    const double C10765 = C10741 + C10742;
    const double C10763 = C10737 + C10738;
    const double C10762 = C10735 + C10736;
    const double C10761 = C10733 + C10734;
    const double C10760 = C10731 + C10732;
    const double C10759 = C10729 + C10730;
    const double C10758 = C10727 + C10728;
    const double C10757 = C10725 + C10726;
    const double C11270 = C11251 + C11252;
    const double C11269 = C11249 + C11250;
    const double C11268 = C11247 + C11248;
    const double C11267 = C11245 + C11246;
    const double C11582 = C11571 + C11572;
    const double C11581 = C11569 + C11570;
    const double C12974 = C12955 + C12956;
    const double C12973 = C12953 + C12954;
    const double C12972 = C12951 + C12952;
    const double C12971 = C12949 + C12950;
    const double C12970 = C12947 + C12948;
    const double C12969 = C12945 + C12946;
    const double C13919 = C13910 + C13911;
    const double C13918 = C13908 + C13909;
    const double C14822 = C14819 + C14820;
    const double C14821 = C14817 + C14818;
    const double C25735 = C25690 + C25691;
    const double C25733 = C25686 + C25687;
    const double C28841 = C28804 + C28805;
    const double C28839 = C28800 + C28801;
    const double C22912 = C50969 * C288;
    const double C22906 = C50969 * C272;
    const double C22900 = C50969 * C285;
    const double C22894 = C50969 * C269;
    const double C22892 = C50969 * C271;
    const double C22886 = C50969 * C287;
    const double C22876 = C50969 * C286;
    const double C22870 = C50969 * C270;
    const double C23240 = C50969 * C284;
    const double C23234 = C50969 * C268;
    const double C23610 = C50969 * C791;
    const double C23604 = C50969 * C781;
    const double C23602 = C50969 * C780;
    const double C23596 = C50969 * C790;
    const double C23878 = C50969 * C984;
    const double C23872 = C50969 * C980;
    const double C24042 = C50969 * C1098;
    const double C24036 = C50969 * C1094;
    const double C24546 = C50969 * C1445;
    const double C24540 = C50969 * C1441;
    const double C32331 = C50969 * C429;
    const double C32325 = C50969 * C413;
    const double C32319 = C50969 * C426;
    const double C32313 = C50969 * C410;
    const double C32311 = C50969 * C412;
    const double C32305 = C50969 * C428;
    const double C32295 = C50969 * C427;
    const double C32289 = C50969 * C411;
    const double C32659 = C50969 * C425;
    const double C32653 = C50969 * C409;
    const double C34137 = C50969 * C1729;
    const double C34131 = C50969 * C1725;
    const double C105 = (C50911 - C50951) / C49726 - (C50969 * C50626) / C49721;
    const double C22902 = C50953 * C284;
    const double C22896 = C50953 * C268;
    const double C22890 = C50953 * C272;
    const double C22884 = C50953 * C288;
    const double C22878 = C50953 * C285;
    const double C22872 = C50953 * C269;
    const double C23600 = C50953 * C781;
    const double C23594 = C50953 * C791;
    const double C23880 = C50953 * C983;
    const double C23874 = C50953 * C979;
    const double C24548 = C50953 * C1444;
    const double C24542 = C50953 * C1440;
    const double C32321 = C50953 * C425;
    const double C32315 = C50953 * C409;
    const double C32309 = C50953 * C413;
    const double C32303 = C50953 * C429;
    const double C32297 = C50953 * C426;
    const double C32291 = C50953 * C410;
    const double C34139 = C50953 * C1728;
    const double C34133 = C50953 * C1724;
    const double C106 =
        (2 * C50635 + C50969) / C49726 - (C50953 * C50626) / C49721;
    const double C107 = C50953 / C49726 - C50638 / C49730;
    const double C49807 = C50822 - C49804;
    const double C20888 =
        (C50940 - C50966) / C49726 - (C50977 * C50830) / C49721;
    const double C20889 =
        (2 * C50834 + C50977) / C49726 - (C50968 * C50830) / C49721;
    const double C20890 = C50968 / C49726 - C50837 / C49730;
    const double C2362 = C2316 + C2317;
    const double C7988 = C7953 + C7954;
    const double C11001 = C10989 + C10990;
    const double C25745 = C25710 + C25711;
    const double C7980 = C7937 + C7938;
    const double C10767 = C10745 + C10746;
    const double C25737 = C25694 + C25695;
    const double C5368 = C5322 + C5323;
    const double C13297 = C13293 + C13294;
    const double C15766 = C15731 + C15732;
    const double C28847 = C28816 + C28817;
    const double C12975 = C12957 + C12958;
    const double C15758 = C15715 + C15716;
    const double C28844 = C28810 + C28811;
    const double C8703 = C8677 + C8678;
    const double C11271 = C11253 + C11254;
    const double C26460 = C26434 + C26435;
    const double C148 =
        (4 * (2 * C49880 + ae * C49881 + C49848 * C49900) +
         ae * (3 * C49881 + C49848 * C49901) +
         C49848 * (3 * C49900 + ae * C49901 +
                   C49848 * (2 * C49896 + ae * C49897 +
                             C49848 * (C49892 + ae * C49848 * C49893 +
                                       C49848 * (ae * C49893 +
                                                 C49848 * std::pow(C49852, 7) *
                                                     bs[7] * C49858))))) /
        C49725;
    const double C283 =
        ((yP - yQ) * (2 * C49880 + ae * C49881 + C49848 * C49900)) / C49725;
    const double C289 = (C49866 + ae * C49869 + C49848 * C49880 +
                         C49900 * std::pow(yP - yQ, 2)) /
                        C49725;
    const double C424 =
        (ae * (2 * (C49848 * C49945 + C49942 * ae) +
               C49848 *
                   (C49945 +
                    C49848 * (C49848 * C49871 * C49872 * C49941 + C49943 * ae) +
                    C49848 * C49943 * ae) +
               (C49942 + C49943 * C49873) * ae) +
         C49847 * (2 * C49880 + ae * C49881 + C49848 * C49900)) /
        C49725;
    const double C11464 = C11461 + C11462;
    const double C50496 = C50494 + C50489;
    const double C2365 = C2322 + C2323;
    const double C7990 = C7957 + C7958;
    const double C11002 = C10991 + C10992;
    const double C25747 = C25714 + C25715;
    const double C7982 = C7941 + C7942;
    const double C10768 = C10747 + C10748;
    const double C25739 = C25698 + C25699;
    const double C5371 = C5328 + C5329;
    const double C13298 = C13295 + C13296;
    const double C15768 = C15735 + C15736;
    const double C28849 = C28820 + C28821;
    const double C12976 = C12959 + C12960;
    const double C15760 = C15719 + C15720;
    const double C28842 = C28806 + C28807;
    const double C8701 = C8673 + C8674;
    const double C11272 = C11255 + C11256;
    const double C26458 = C26430 + C26431;
    const double C7983 = C7943 + C7944;
    const double C10770 = C10751 + C10752;
    const double C25740 = C25700 + C25701;
    const double C49966 = C49965 + C49961;
    const double C3511 = C2158 * C1097;
    const double C9143 = C50635 * C1097;
    const double C12964 = C50630 * C1097;
    const double C16296 = C50911 * C1097;
    const double C24044 = C50953 * C1097;
    const double C26884 = C50635 * C1097;
    const double C28835 = C25530 * C1097;
    const double C3505 = C2158 * C1093;
    const double C9139 = C50635 * C1093;
    const double C12962 = C50630 * C1093;
    const double C16292 = C50911 * C1093;
    const double C24038 = C50953 * C1093;
    const double C26880 = C50635 * C1093;
    const double C28831 = C25530 * C1093;
    const double C8697 = C8665 + C8666;
    const double C11274 = C11259 + C11260;
    const double C26454 = C26422 + C26423;
    const double C15761 = C15721 + C15722;
    const double C18518 = C18511 + C18512;
    const double C31247 = C31242 + C31243;
    const double C7985 = C7947 + C7948;
    const double C10769 = C10749 + C10750;
    const double C25742 = C25704 + C25705;
    const double C8699 = C8669 + C8670;
    const double C11273 = C11257 + C11258;
    const double C26456 = C26426 + C26427;
    const double C15763 = C15725 + C15726;
    const double C18517 = C18509 + C18510;
    const double C31245 = C31238 + C31239;
    const double C11584 = C11575 + C11576;
    const double C11265 = C11241 + C11242;
    const double C10764 = C10739 + C10740;
    const double C11583 = C11573 + C11574;
    const double C11266 = C11243 + C11244;
    const double C19440 = C50630 * C14815;
    const double C20336 = C20333 + C20334;
    const double C20335 = C20331 + C20332;
    const double C17593 =
        (4 * (2 * C50087 + ae * C50088 + C49847 * C50179) +
         ae * (3 * C50088 + C49847 * C50180) +
         C49847 *
             (3 * C50179 + ae * C50180 +
              C49847 * (2 * C50173 + ae * C50175 +
                        C49847 * (C49892 + ae * C49847 * C49971 +
                                  C49847 * (ae * C49971 + C49847 * C49916))))) /
        C49725;
    const double C7162 =
        (3 * (C49881 + C49847 * C50375 + C50373 * ae) +
         C49847 * (2 * C50375 +
                   C49847 * (C49897 + C49847 * (C49847 * C49921 + C50001) +
                             C49847 * C49999 * ae) +
                   C50376 * ae) +
         (2 * C50373 + C49847 * C50376) * ae) /
        C49721;
    const double C7182 = C2164 * C1719;
    const double C15751 = C49740 * C1719;
    const double C21297 = C10625 * C1719;
    const double C34140 = C22721 * C1719;
    const double C38530 = C25536 * C1719;
    const double C419 =
        (2 * C49869 + C49848 * C49881 +
         C49847 * (C49847 * C49901 + C50238 * ae) + C49847 * C50238 * ae) /
        C49721;
    const double C421 = (C49847 * (3 * C49881 + C49848 * C49901) +
                         (3 * C50234 + C49848 * C50238) * ae) /
                        C49721;
    const double C787 =
        (C49847 * C50017 * C49901 + C50017 * C50238 * ae) / C49721;
    const double C127 = 4 * (2 * C50232 + C49848 * C50234) +
                        C49848 * (3 * C50234 + C49848 * C50238);
    const double C260 = 2 * C50232 + C49848 * C50234 + C50238 * C50035;
    const double C261 = C50017 * (3 * C50234 + C49848 * C50238);
    const double C401 = 2 * C50232 + C49848 * C50234 + C50238 * C50071;
    const double C402 = C49847 * (3 * C50234 + C49848 * C50238);
    const double C778 = C49847 * C50017 * C50238;
    const double C969 =
        2 * C50017 * C50238 + C50017 * (C50238 + C50004 * C50035);
    const double C1430 = C49847 * (C50238 + C50004 * C50035);
    const double C1714 =
        2 * C49847 * C50238 + C49847 * (C50238 + C50004 * C50071);
    const double C3512 = C2164 * C1088;
    const double C16297 = C49740 * C1088;
    const double C18673 = C10625 * C1088;
    const double C24045 = C22721 * C1088;
    const double C28836 = C25536 * C1088;
    const double C3506 = C2164 * C1084;
    const double C16293 = C49740 * C1084;
    const double C18671 = C10625 * C1084;
    const double C24039 = C22721 * C1084;
    const double C28832 = C25536 * C1084;
    const double C50481 = C49883 + C50479;
    const double C9150 = C49740 * C3493;
    const double C12967 = C10625 * C3493;
    const double C26891 = C25536 * C3493;
    const double C9662 = C49740 * C4009;
    const double C11263 = C10625 * C4009;
    const double C27395 = C25536 * C4009;
    const double C8969 = C49740 * C3314;
    const double C10753 = C10625 * C3314;
    const double C26718 = C25536 * C3314;
    const double C9146 = C49740 * C3490;
    const double C12965 = C10625 * C3490;
    const double C26887 = C25536 * C3490;
    const double C9658 = C49740 * C4006;
    const double C11261 = C10625 * C4006;
    const double C27391 = C25536 * C4006;
    const double C16693 =
        (3 * (C50363 + C49847 * C50468 + C50464 * ae) +
         C49847 * (2 * C50468 +
                   C49847 * (C50462 +
                             C49847 * (C49847 * C50017 * C49848 * C49917 +
                                       C50465 * ae) +
                             C49847 * C50465 * ae) +
                   C50469 * ae) +
         (2 * C50464 + C49847 * C50469) * ae) /
        C49721;
    const double C17603 = C49740 * C7163;
    const double C21095 = C10625 * C7163;
    const double C40310 = C25536 * C7163;
    const double C17599 = C49740 * C7160;
    const double C21093 = C10625 * C7160;
    const double C40306 = C25536 * C7160;
    const double C49982 = C49981 + C49976;
    const double C3499 =
        (C49880 + C49896 * C50035 + ae * C49847 * C50051 +
         C49847 * (ae * C50051 + C49847 * (C49896 + C49920 * C50035))) /
        C49725;
    const double C4015 =
        (ae * (2 * C50031 + C50017 * C50051) +
         C49847 * (2 * C50017 * C49896 + C50017 * (C49896 + C49920 * C50035))) /
        C49725;
    const double C3320 = (3 * (C49955 + C49963 * C50035) +
                          C50017 * (2 * C50031 + C50017 * C50051)) /
                         C49721;
    const double C3496 = (C49955 + C49963 * C50035 + C50051 * C50071) / C49721;
    const double C4012 = (C49847 * (2 * C50031 + C50017 * C50051)) / C49721;
    const double C16704 = C50635 * C4435;
    const double C18516 = C50630 * C4435;
    const double C30065 = C50635 * C4435;
    const double C16700 = C50635 * C4432;
    const double C18514 = C50630 * C4432;
    const double C30061 = C50635 * C4432;
    const double C7169 =
        (3 * (C49880 + ae * C50076 + C49847 * C50080) +
         ae * (2 * C50076 + C49847 * C50081) +
         C49847 * (2 * C50080 + ae * C50081 +
                   C49847 * (C49896 + ae * C49847 * C49978 +
                             C49847 * (ae * C49978 + C49847 * C49920)))) /
        C49725;
    const double C7166 = (3 * (C49955 + C49963 * C50071) +
                          C49847 * (2 * C50076 + C49847 * C50081)) /
                         C49721;
    const double C50162 = C49896 + C50158;
    const double C50531 = C50529 + C50524;
    const double C9130 =
        (2 * C50366 + C50017 * C50397 +
         C49847 * (C49847 * (2 * C50017 * C49877 +
                             C50017 * (C49877 + C49893 * C50035)) +
                   C50411 * ae) +
         C49847 * C50411 * ae) /
        C49721;
    const double C9648 =
        (C49847 *
             (3 * C50397 + C50017 * (2 * C50017 * C49877 +
                                     C50017 * (C49877 + C49893 * C50035))) +
         (3 * C50349 + C50017 * C50411) * ae) /
        C49721;
    const double C12195 =
        (2 * (C49847 * C50428 + C50411 * ae) +
         C49847 * (C50428 +
                   C49847 * (C49847 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035)) +
                             C50437 * ae) +
                   C49847 * C50437 * ae) +
         (C50411 + C50437 * C50071) * ae) /
        C49721;
    const double C8957 = 4 * (2 * C50314 + C50017 * C50349) +
                         C50017 * (3 * C50349 + C50017 * C50411);
    const double C9128 = 2 * C50314 + C50017 * C50349 + C50411 * C50071;
    const double C9646 = C49847 * (3 * C50349 + C50017 * C50411);
    const double C12194 =
        2 * C49847 * C50411 + C49847 * (C50411 + C50437 * C50071);
    const double C14810 =
        (3 * (C50397 + C49847 * C50450 + C50448 * ae) +
         C49847 * (2 * C50450 +
                   C49847 * (C50426 +
                             C49847 * (C49847 * (C49893 + C49917 * C50035) +
                                       C50435 * ae) +
                             C49847 * C50435 * ae) +
                   C50451 * ae) +
         (2 * C50448 + C49847 * C50451) * ae) /
        C49721;
    const double C13921 = C13916 + C13917;
    const double C13920 = C13914 + C13915;
    const double C19439 = C10625 * C14812;
    const double C19437 = C10625 * C14809;
    const double C50512 = C50423 + C50510;
    const double C17587 = 4 * (2 * C50385 + C49847 * C50388) +
                          C49847 * (3 * C50388 + C49847 * C50495);
    const double C49927 = C49848 * C49925;
    const double C973 =
        (2 * C50017 * C49901 + C50017 * (C49901 + C49925 * C50035)) / C49721;
    const double C1434 = (C49847 * (C49901 + C49925 * C50035) +
                          (C50238 + C50004 * C50035) * ae) /
                         C49721;
    const double C49926 = C49848 * C49924;
    const double C50059 = C50017 * C49924;
    const double C50070 = C49847 * C49924;
    const double C982 = (2 * C50017 * C49900 +
                         C50017 * (C49900 + C49924 * std::pow(C50017, 2))) /
                        C49725;
    const double C3322 =
        (3 * (C49900 + C49924 * C50035) +
         C50017 * (2 * C50017 * C49924 +
                   C50017 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50035))) /
        C49725;
    const double C8962 =
        (4 * (2 * C50062 + C50017 * C50091) +
         C50017 * (3 * C50091 +
                   C50017 * (2 * C50017 * C49920 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49725;
    const double C50151 = C50146 + C50149;
    const double C50163 = C49847 * C50159;
    const double C8980 = C8973 + C8974;
    const double C10772 = C10755 + C10756;
    const double C26729 = C26722 + C26723;
    const double C11455 =
        (5 * (3 * C50094 + C50017 * C50117) +
         C50017 * (4 * C50117 +
                   C50017 * (3 * C50115 +
                             C50017 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49725;
    const double C50195 = C50190 + C50193;
    const double C50215 = C49847 * C50213;
    const double C50007 = C50005 + C49998;
    const double C50099 = C50017 * C50098;
    const double C10066 =
        (2 * (ae * C50051 + C49847 * C50091) + ae * (C50051 + C50098 * C50071) +
         C49847 * (C50091 + ae * C49847 * C50098 +
                   C49847 * (ae * C50098 +
                             C49847 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49725;
    const double C10064 =
        (2 * C49847 * C50051 + C49847 * (C50051 + C50098 * C50071)) / C49721;
    const double C50152 = C50063 + C50150;
    const double C50164 = C49847 * C50161;
    const double C50126 = C50017 * C50125;
    const double C12197 =
        (2 * (ae * C50106 + C49847 * C50117) + ae * (C50106 + C50125 * C50071) +
         C49847 * (C50117 + ae * C49847 * C50125 +
                   C49847 * (ae * C50125 +
                             C49847 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49725;
    const double C12196 =
        (2 * C49847 * C50106 + C49847 * (C50106 + C50125 * C50071)) / C49721;
    const double C14814 =
        (3 * (C50094 + ae * C50131 + C49847 * C50135) +
         ae * (2 * C50131 + C49847 * C50136) +
         C49847 * (2 * C50135 + ae * C50136 +
                   C49847 * (C50115 + ae * C49847 * C50123 +
                             C49847 * (ae * C50123 +
                                       C49847 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49725;
    const double C14811 = (3 * (C50054 + C50104 * C50071) +
                           C49847 * (2 * C50131 + C49847 * C50136)) /
                          C49721;
    const double C50196 = C50188 + C50194;
    const double C50216 = C49847 * C50214;
    const double C2358 = C2164 * C278;
    const double C8315 = C49740 * C278;
    const double C22915 = C22721 * C278;
    const double C26072 = C25536 * C278;
    const double C2686 = C2164 * C280;
    const double C23243 = C22721 * C280;
    const double C11580 = C50630 * C9134;
    const double C11928 = C50630 * C9652;
    const double C11460 = C50630 * C8961;
    const double C11578 = C50630 * C9132;
    const double C11926 = C50630 * C9650;
    const double C22286 = C50630 * C17591;
    const double C1718 =
        (2 * (C49847 * C49901 + C50238 * ae) +
         C49847 * (C49901 + C49847 * (C49847 * C49925 + C50006) +
                   C49847 * C50004 * ae) +
         (C50238 + C50004 * C50071) * ae) /
        C49721;
    const double C50244 = C50242 + C50243;
    const double C1087 =
        (C50017 * C49901 + C49847 * (C49847 * C50017 * C49925 + C50308 * ae) +
         C49847 * C50308 * ae) /
        C49721;
    const double C1083 = C50017 * C50238 + C50308 * C50071;
    const double C9129 =
        (2 * C50363 + C50017 * C50394 +
         C49847 * (C49847 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50035)) +
                   C50405 * ae) +
         C49847 * C50405 * ae) /
        C49721;
    const double C9647 =
        (C49847 * (3 * C50394 +
                   C50017 * (2 * C50017 * C49905 +
                             C50017 * (C49905 + C49848 * C49917 * C50035))) +
         (3 * C50346 + C50017 * C50405) * ae) /
        C49721;
    const double C8956 = 4 * (2 * C50312 + C50017 * C50346) +
                         C50017 * (3 * C50346 + C50017 * C50405);
    const double C9127 = 2 * C50312 + C50017 * C50346 + C50405 * C50071;
    const double C9645 = C49847 * (3 * C50346 + C50017 * C50405);
    const double C17586 = 4 * (2 * C50379 + C49847 * C50382) +
                          C49847 * (3 * C50382 + C49847 * C50482);
    const double C50439 = C50431 + C50438;
    const double C20326 = 4 * (2 * C50456 + C49847 * C50459) +
                          C49847 * (3 * C50459 + C49847 * C50513);
    const double C50534 = C50522 + C50532;
    const double C113 = (C50970 * C50656) / C50653 + (C50920 - C50955) / C50655;
    const double C114 =
        (C50971 * C50656) / C50653 + (2 * C50667 + C50970) / C50655;
    const double C115 = (C50656 * C50667) / C50670 + C50971 / C50655;
    const double C964 = (C50972 * C50727) / C50653 + (C50928 - C50957) / C50655;
    const double C965 =
        (C50973 * C50727) / C50653 + (2 * C50732 + C50972) / C50655;
    const double C966 = (C50727 * C50732) / C50670 + C50973 / C50655;
    const double C1710 =
        (C50974 * C50755) / C50653 + (C50929 - C50960) / C50655;
    const double C1711 =
        (C50975 * C50755) / C50653 + (2 * C50760 + C50974) / C50655;
    const double C1712 = (C50755 * C50760) / C50670 + C50975 / C50655;
    const double C10621 =
        (C50939 - C50963) / C49726 - (C50976 * C50806) / C49721;
    const double C10622 =
        (2 * C50810 + C50976) / C49726 - (C50965 * C50806) / C49721;
    const double C10623 = C50965 / C49726 - C50813 / C49730;
    const double C22922 = C22879 + C22880;
    const double C22919 = C22873 + C22874;
    const double C32341 = C32298 + C32299;
    const double C32338 = C32292 + C32293;
    const double C49745 = C49744 * ae;
    const double C2162 =
        ((-C49720 / C49721) / C49726 - (C49733 * be) / C49721) / C49726 -
        ((C49719 * ((-C49722 / C49721) / C49726 - (C49744 * be) / C49721) +
          C25530) *
         be) /
            C49721 +
        (-C49735 / C49721) / C49726 - (0 * be) / C49721;
    const double C2163 =
        ((-C49722 / C49721) / C49726 - (C49744 * be) / C49721) / C49726 -
        ((C49719 * ((-C49735 / C49721) / C49726 - (0 * be) / C49721) + C50635) *
         be) /
            C49721;
    const double C25535 = (-C49722 / C49721) / C49726 - (C49744 * be) / C49721;
    const double C10782 = C10766 * C50822;
    const double C12782 = C10766 * C50940;
    const double C18352 = C10766 * C15406;
    const double C44575 = C10766 * C31991;
    const double C47279 = C10766 * C50977;
    const double C10781 = C10765 * C121;
    const double C12781 = C10765 * C5023;
    const double C18351 = C10765 * C15409;
    const double C10779 = C10763 * C50822;
    const double C13755 = C10763 * C50940;
    const double C45494 = C10763 * C31991;
    const double C10778 = C10762 * C50822;
    const double C12779 = C10762 * C50940;
    const double C19282 = C10762 * C15406;
    const double C44572 = C10762 * C31991;
    const double C48185 = C10762 * C50977;
    const double C10777 = C10761 * C121;
    const double C12780 = C10761 * C5023;
    const double C19281 = C10761 * C15409;
    const double C10776 = C10760 * C50822;
    const double C12774 = C10760 * C50940;
    const double C18349 = C10760 * C15406;
    const double C44567 = C10760 * C31991;
    const double C47276 = C10760 * C50977;
    const double C10775 = C10759 * C121;
    const double C12773 = C10759 * C5023;
    const double C18350 = C10759 * C15409;
    const double C10774 = C10758 * C50822;
    const double C12770 = C10758 * C50940;
    const double C18340 = C10758 * C15406;
    const double C44563 = C10758 * C31991;
    const double C47267 = C10758 * C50977;
    const double C10773 = C10757 * C121;
    const double C12769 = C10757 * C5023;
    const double C18339 = C10757 * C15409;
    const double C11282 = C11270 * C121;
    const double C12771 = C11270 * C5024;
    const double C13500 = C11270 * C5023;
    const double C18341 = C11270 * C15410;
    const double C19030 = C11270 * C15409;
    const double C44564 = C11270 * C31994;
    const double C11281 = C11269 * C50822;
    const double C12772 = C11269 * C50834;
    const double C13499 = C11269 * C50940;
    const double C18342 = C11269 * C15407;
    const double C19029 = C11269 * C15406;
    const double C44565 = C11269 * C50834;
    const double C45238 = C11269 * C31991;
    const double C47269 = C11269 * C50968;
    const double C47932 = C11269 * C50977;
    const double C11280 = C11268 * C121;
    const double C12775 = C11268 * C5024;
    const double C13496 = C11268 * C5023;
    const double C18348 = C11268 * C15410;
    const double C19931 = C11268 * C15409;
    const double C44568 = C11268 * C31994;
    const double C11279 = C11267 * C50822;
    const double C12776 = C11267 * C50834;
    const double C13495 = C11267 * C50940;
    const double C18347 = C11267 * C15407;
    const double C19932 = C11267 * C15406;
    const double C44569 = C11267 * C50834;
    const double C45234 = C11267 * C31991;
    const double C47274 = C11267 * C50968;
    const double C48829 = C11267 * C50977;
    const double C11588 = C11582 * C50822;
    const double C13497 = C11582 * C50834;
    const double C13907 = C11582 * C50940;
    const double C18344 = C11582 * C15408;
    const double C19027 = C11582 * C15407;
    const double C19434 = C11582 * C15406;
    const double C45236 = C11582 * C50834;
    const double C45646 = C11582 * C31991;
    const double C47271 = C11582 * C38225;
    const double C47930 = C11582 * C50968;
    const double C48337 = C11582 * C50977;
    const double C11587 = C11581 * C121;
    const double C13498 = C11581 * C5024;
    const double C13906 = C11581 * C5023;
    const double C18343 = C11581 * C15411;
    const double C19028 = C11581 * C15410;
    const double C19433 = C11581 * C15409;
    const double C45237 = C11581 * C31994;
    const double C47270 = C11581 * C38228;
    const double C13923 = C13919 * C50834;
    const double C19025 = C13919 * C15408;
    const double C19436 = C13919 * C15407;
    const double C45648 = C13919 * C50834;
    const double C47928 = C13919 * C38225;
    const double C48339 = C13919 * C50968;
    const double C13922 = C13918 * C5024;
    const double C19026 = C13918 * C15411;
    const double C19435 = C13918 * C15410;
    const double C45647 = C13918 * C31994;
    const double C47929 = C13918 * C38228;
    const double C49810 = C49807 * ae;
    const double C31993 = (-C49782 / C49721) / C49726 - (C49807 * be) / C49721;
    const double C11007 = C11001 * C121;
    const double C13127 = C11001 * C5023;
    const double C18667 = C11001 * C15409;
    const double C10783 = C10767 * C121;
    const double C12785 = C10767 * C5023;
    const double C18357 = C10767 * C15409;
    const double C11283 = C11271 * C121;
    const double C12783 = C11271 * C5024;
    const double C13501 = C11271 * C5023;
    const double C18353 = C11271 * C15410;
    const double C19031 = C11271 * C15409;
    const double C44576 = C11271 * C31994;
    const double C2347 = C2159 * C283;
    const double C2685 = C2158 * C283;
    const double C8308 = C50635 * C283;
    const double C22904 = C22716 * C283;
    const double C23242 = C50953 * C283;
    const double C26065 = C50635 * C283;
    const double C2357 = C2158 * C289;
    const double C2325 = C2159 * C289;
    const double C7966 = C50635 * C289;
    const double C8314 = C50911 * C289;
    const double C10996 = C50630 * C289;
    const double C22914 = C50953 * C289;
    const double C22882 = C22716 * C289;
    const double C25723 = C50635 * C289;
    const double C26071 = C25530 * C289;
    const double C5353 = C2159 * C424;
    const double C5691 = C2158 * C424;
    const double C16080 = C50635 * C424;
    const double C29265 = C50635 * C424;
    const double C32323 = C22716 * C424;
    const double C32661 = C50953 * C424;
    const double C11466 = C11464 * C50822;
    const double C17589 =
        (4 * (2 * C50387 + C49847 * C50496 + C50388 * ae) +
         C49847 *
             (3 * C50496 +
              C49847 * (2 * C50488 +
                        C49847 * (C49877 + C49847 * (C49847 * C49893 + C49972) +
                                  C49847 * C49970 * ae) +
                        C50490 * ae) +
              C50495 * ae) +
         (3 * C50388 + C49847 * C50495) * ae) /
        C49721;
    const double C11008 = C11002 * C50822;
    const double C13128 = C11002 * C50940;
    const double C18668 = C11002 * C15406;
    const double C44885 = C11002 * C31991;
    const double C47583 = C11002 * C50977;
    const double C10784 = C10768 * C50822;
    const double C12786 = C10768 * C50940;
    const double C18358 = C10768 * C15406;
    const double C44579 = C10768 * C31991;
    const double C47285 = C10768 * C50977;
    const double C11284 = C11272 * C50822;
    const double C12784 = C11272 * C50834;
    const double C13502 = C11272 * C50940;
    const double C18354 = C11272 * C15407;
    const double C19032 = C11272 * C15406;
    const double C44577 = C11272 * C50834;
    const double C45241 = C11272 * C31991;
    const double C47281 = C11272 * C50968;
    const double C47935 = C11272 * C50977;
    const double C10786 = C10770 * C50822;
    const double C12790 = C10770 * C50940;
    const double C44583 = C10770 * C31991;
    const double C430 =
        (C49866 + ae * C49869 + C49848 * C49880 + ae * C49847 * C49966 +
         C49847 * (ae * C49966 + C49847 * C49900)) /
        C49725;
    const double C792 =
        (ae * C50017 * C49966 + C49847 * C50017 * C49900) / C49725;
    const double C138 = (3 * (C49951 + C49848 * C49955 + C50232 * ae) +
                         C49848 * (2 * C49955 + C49848 * C49966 + C50234 * ae) +
                         (2 * C50232 + C49848 * C50234) * ae) /
                        C49721;
    const double C267 =
        (C50017 * (2 * C49955 + C49848 * C49966 + C50234 * ae)) / C49721;
    const double C273 =
        (C49951 + C49848 * C49955 + C50232 * ae + C49966 * C50035) / C49721;
    const double C408 =
        (C49847 * (2 * C49955 + C49848 * C49966 + C50234 * ae)) / C49721;
    const double C414 =
        (C49951 + C49848 * C49955 + C50232 * ae + C49966 * C50071) / C49721;
    const double C782 = (C49847 * C50017 * C49966) / C49721;
    const double C9155 = C9142 + C9143;
    const double C12978 = C12963 + C12964;
    const double C26896 = C26883 + C26884;
    const double C9153 = C9138 + C9139;
    const double C12977 = C12961 + C12962;
    const double C26894 = C26879 + C26880;
    const double C11286 = C11274 * C50822;
    const double C12788 = C11274 * C50834;
    const double C13506 = C11274 * C50940;
    const double C18360 = C11274 * C15407;
    const double C44581 = C11274 * C50834;
    const double C45245 = C11274 * C31991;
    const double C47287 = C11274 * C50968;
    const double C10785 = C10769 * C121;
    const double C12789 = C10769 * C5023;
    const double C11285 = C11273 * C121;
    const double C12787 = C11273 * C5024;
    const double C13505 = C11273 * C5023;
    const double C18359 = C11273 * C15410;
    const double C44580 = C11273 * C31994;
    const double C11590 = C11584 * C50822;
    const double C13493 = C11584 * C50834;
    const double C13913 = C11584 * C50940;
    const double C18345 = C11584 * C15408;
    const double C19934 = C11584 * C15407;
    const double C45232 = C11584 * C50834;
    const double C45650 = C11584 * C31991;
    const double C47272 = C11584 * C38225;
    const double C48831 = C11584 * C50968;
    const double C11277 = C11265 * C50822;
    const double C12777 = C11265 * C50834;
    const double C14414 = C11265 * C50940;
    const double C19284 = C11265 * C15407;
    const double C44570 = C11265 * C50834;
    const double C46141 = C11265 * C31991;
    const double C48187 = C11265 * C50968;
    const double C10780 = C10764 * C121;
    const double C13754 = C10764 * C5023;
    const double C11589 = C11583 * C121;
    const double C13494 = C11583 * C5024;
    const double C13912 = C11583 * C5023;
    const double C18346 = C11583 * C15411;
    const double C19933 = C11583 * C15410;
    const double C45233 = C11583 * C31994;
    const double C47273 = C11583 * C38228;
    const double C11278 = C11266 * C121;
    const double C12778 = C11266 * C5024;
    const double C14413 = C11266 * C5023;
    const double C19283 = C11266 * C15410;
    const double C44571 = C11266 * C31994;
    const double C22288 = C50630 * C17593;
    const double C5364 = C2164 * C419;
    const double C16087 = C49740 * C419;
    const double C32334 = C22721 * C419;
    const double C38836 = C25536 * C419;
    const double C5692 = C2164 * C421;
    const double C32662 = C22721 * C421;
    const double C3056 = C2164 * C787;
    const double C23613 = C22721 * C787;
    const double C29058 = C25536 * C787;
    const double C41520 = C49740 * C787;
    const double C2352 = C2164 * C260;
    const double C8311 = C49740 * C260;
    const double C22909 = C22721 * C260;
    const double C26068 = C25536 * C260;
    const double C2680 = C2164 * C261;
    const double C23237 = C22721 * C261;
    const double C5358 = C2164 * C401;
    const double C16083 = C49740 * C401;
    const double C32328 = C22721 * C401;
    const double C38832 = C25536 * C401;
    const double C5686 = C2164 * C402;
    const double C32656 = C22721 * C402;
    const double C3050 = C2164 * C778;
    const double C23607 = C22721 * C778;
    const double C29054 = C25536 * C778;
    const double C41516 = C49740 * C778;
    const double C50483 = C50481 + C50476;
    const double C49983 = C49848 * C49982;
    const double C49988 = 3 * C49982;
    const double C50029 = C50017 * C49982;
    const double C50069 = ae * C49982;
    const double C50068 = C49847 * C49982;
    const double C1443 = (ae * (C49966 + C49982 * C50035) +
                          C49847 * (C49900 + C49924 * C50035)) /
                         C49725;
    const double C1727 = (2 * (ae * C49966 + C49847 * C49900) +
                          ae * (C49966 + C49982 * std::pow(C49847, 2)) +
                          C49847 * (C49900 + ae * C49847 * C49982 +
                                    C49847 * (ae * C49982 + C49847 * C49924))) /
                         C49725;
    const double C978 =
        (2 * C50017 * C49966 + C50017 * (C49966 + C49982 * C50035)) / C49721;
    const double C1439 = (C49847 * (C49966 + C49982 * C50035)) / C49721;
    const double C1723 =
        (2 * C49847 * C49966 + C49847 * (C49966 + C49982 * C50071)) / C49721;
    const double C9151 = C50635 * C3499;
    const double C12968 = C50630 * C3499;
    const double C26892 = C50635 * C3499;
    const double C9663 = C50635 * C4015;
    const double C11264 = C50630 * C4015;
    const double C27396 = C50635 * C4015;
    const double C8970 = C50635 * C3320;
    const double C10754 = C50630 * C3320;
    const double C26719 = C50635 * C3320;
    const double C9147 = C50635 * C3496;
    const double C12966 = C50630 * C3496;
    const double C26888 = C50635 * C3496;
    const double C9659 = C50635 * C4012;
    const double C11262 = C50630 * C4012;
    const double C27392 = C50635 * C4012;
    const double C16710 = C16703 + C16704;
    const double C18520 = C18515 + C18516;
    const double C30069 = C30064 + C30065;
    const double C16708 = C16699 + C16700;
    const double C18519 = C18513 + C18514;
    const double C30067 = C30060 + C30061;
    const double C17604 = C50635 * C7169;
    const double C21096 = C50630 * C7169;
    const double C40311 = C50635 * C7169;
    const double C17600 = C50635 * C7166;
    const double C21094 = C50630 * C7166;
    const double C40307 = C50635 * C7166;
    const double C50533 = C49847 * C50531;
    const double C11579 = C10625 * C9130;
    const double C11927 = C10625 * C9648;
    const double C11459 = C10625 * C8957;
    const double C11577 = C10625 * C9128;
    const double C11925 = C10625 * C9646;
    const double C13925 = C13921 * C50834;
    const double C19936 = C13921 * C15408;
    const double C45652 = C13921 * C50834;
    const double C48833 = C13921 * C38225;
    const double C13924 = C13920 * C5024;
    const double C19935 = C13920 * C15411;
    const double C45651 = C13920 * C31994;
    const double C48832 = C13920 * C38228;
    const double C19442 = C19439 + C19440;
    const double C19441 = C19437 + C19438;
    const double C50514 = C50512 + C50505;
    const double C22285 = C10625 * C17587;
    const double C49929 = C49909 + C49927;
    const double C49928 = C49910 + C49926;
    const double C3337 = C2159 * C982;
    const double C7974 = C50635 * C982;
    const double C11000 = C50630 * C982;
    const double C23882 = C22716 * C982;
    const double C25731 = C50635 * C982;
    const double C50165 = C50162 + C50163;
    const double C10788 = C10772 * C50822;
    const double C50217 = C50205 + C50215;
    const double C50008 = C49848 * C50007;
    const double C50047 = C50007 * C50035;
    const double C50060 = C50017 * C50007;
    const double C50073 = C50007 * C50071;
    const double C50100 = C50096 + C50099;
    const double C16695 =
        (3 * (C50062 + ae * C50145 + C49847 * C50151) +
         ae * (2 * C50145 + C49847 * C50152) +
         C49847 * (2 * C50151 + ae * C50152 +
                   C49847 * (C50147 + ae * C49847 * C50148 +
                             C49847 * (ae * C50148 +
                                       C49847 * C50017 *
                                           (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C16694 = (3 * (C50031 + C50063 * C50071) +
                           C49847 * (2 * C50145 + C49847 * C50152)) /
                          C49721;
    const double C50166 = C50160 + C50164;
    const double C50127 = C50119 + C50126;
    const double C20329 =
        (4 * (2 * C50142 + ae * C50143 + C49847 * C50195) +
         ae * (3 * C50143 + C49847 * C50196) +
         C49847 * (3 * C50195 + ae * C50196 +
                   C49847 * (2 * C50191 + ae * C50192 +
                             C49847 * (C50184 + ae * C49847 * C50185 +
                                       C49847 * (ae * C50185 +
                                                 C49847 * C50017 *
                                                     std::pow(C49850, 8) *
                                                     bs[8] * C49858))))) /
        C49725;
    const double C20328 = (4 * (2 * C50138 + C49847 * C50143) +
                           C49847 * (3 * C50143 + C49847 * C50196)) /
                          C49721;
    const double C50218 = C50203 + C50216;
    const double C128 = 5 * (3 * C50234 + C49848 * C50238) +
                        C49848 * (4 * C50238 + C49848 * C50244);
    const double C262 = 3 * C50234 + C49848 * C50238 + C50244 * C50035;
    const double C403 = 3 * C50234 + C49848 * C50238 + C50244 * C50071;
    const double C537 = C50017 * (4 * C50238 + C49848 * C50244);
    const double C641 = C49847 * (4 * C50238 + C49848 * C50244);
    const double C779 = C49847 * C50017 * C50244;
    const double C11565 =
        (3 * C50397 + C50017 * C50428 +
         C49847 * (C49847 * (3 * C50426 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035))) +
                   C50439 * ae) +
         C49847 * C50439 * ae) /
        C49721;
    const double C11919 =
        (C49847 * (4 * C50428 +
                   C50017 * (3 * C50426 +
                             C50017 * (2 * C50017 * C49893 +
                                       C50017 * (C49893 + C49917 * C50035)))) +
         (4 * C50411 + C50017 * C50439) * ae) /
        C49721;
    const double C11452 = 5 * (3 * C50349 + C50017 * C50411) +
                          C50017 * (4 * C50411 + C50017 * C50439);
    const double C11564 = 3 * C50349 + C50017 * C50411 + C50439 * C50071;
    const double C11918 = C49847 * (4 * C50411 + C50017 * C50439);
    const double C22280 = 5 * (3 * C50388 + C49847 * C50495) +
                          C49847 * (4 * C50495 + C49847 * C50534);
    const double C49746 = C49745 / C49721;
    const double C2354 = C2162 * C276;
    const double C2348 = C2162 * C258;
    const double C2342 = C2162 * C265;
    const double C2336 = C2162 * C255;
    const double C2334 = C2162 * C257;
    const double C2328 = C2162 * C275;
    const double C2318 = C2162 * C266;
    const double C2312 = C2162 * C256;
    const double C2682 = C2162 * C264;
    const double C2676 = C2162 * C254;
    const double C3052 = C2162 * C785;
    const double C3046 = C2162 * C776;
    const double C3044 = C2162 * C775;
    const double C3038 = C2162 * C784;
    const double C3332 = C2162 * C976;
    const double C3326 = C2162 * C972;
    const double C3508 = C2162 * C1090;
    const double C3502 = C2162 * C1086;
    const double C4024 = C2162 * C1437;
    const double C4018 = C2162 * C1433;
    const double C5360 = C2162 * C417;
    const double C5354 = C2162 * C399;
    const double C5348 = C2162 * C406;
    const double C5342 = C2162 * C396;
    const double C5340 = C2162 * C398;
    const double C5334 = C2162 * C416;
    const double C5324 = C2162 * C407;
    const double C5318 = C2162 * C397;
    const double C5688 = C2162 * C405;
    const double C5682 = C2162 * C395;
    const double C7178 = C2162 * C1721;
    const double C7172 = C2162 * C1717;
    const double C2356 = C2163 * C277;
    const double C2350 = C2163 * C259;
    const double C2344 = C2163 * C264;
    const double C2338 = C2163 * C254;
    const double C2332 = C2163 * C258;
    const double C2326 = C2163 * C276;
    const double C2320 = C2163 * C265;
    const double C2314 = C2163 * C255;
    const double C2684 = C2163 * C263;
    const double C2678 = C2163 * C253;
    const double C3054 = C2163 * C786;
    const double C3048 = C2163 * C777;
    const double C3042 = C2163 * C776;
    const double C3036 = C2163 * C785;
    const double C3334 = C2163 * C975;
    const double C3328 = C2163 * C971;
    const double C3510 = C2163 * C1089;
    const double C3504 = C2163 * C1085;
    const double C4026 = C2163 * C1436;
    const double C4020 = C2163 * C1432;
    const double C5362 = C2163 * C418;
    const double C5356 = C2163 * C400;
    const double C5350 = C2163 * C405;
    const double C5344 = C2163 * C395;
    const double C5338 = C2163 * C399;
    const double C5332 = C2163 * C417;
    const double C5326 = C2163 * C406;
    const double C5320 = C2163 * C396;
    const double C5690 = C2163 * C404;
    const double C5684 = C2163 * C394;
    const double C7180 = C2163 * C1720;
    const double C7174 = C2163 * C1716;
    const double C25728 = C25535 * C975;
    const double C25724 = C25535 * C971;
    const double C25720 = C25535 * C276;
    const double C25716 = C25535 * C258;
    const double C25712 = C25535 * C265;
    const double C25708 = C25535 * C255;
    const double C25706 = C25535 * C972;
    const double C25702 = C25535 * C976;
    const double C25696 = C25535 * C275;
    const double C25692 = C25535 * C257;
    const double C25688 = C25535 * C266;
    const double C25684 = C25535 * C256;
    const double C26070 = C25535 * C277;
    const double C26066 = C25535 * C259;
    const double C26062 = C25535 * C264;
    const double C26058 = C25535 * C254;
    const double C26450 = C25535 * C1436;
    const double C26446 = C25535 * C1432;
    const double C26442 = C25535 * C785;
    const double C26438 = C25535 * C776;
    const double C26436 = C25535 * C775;
    const double C26432 = C25535 * C784;
    const double C26428 = C25535 * C1433;
    const double C26424 = C25535 * C1437;
    const double C26720 = C25535 * C3318;
    const double C26716 = C25535 * C3315;
    const double C26889 = C25535 * C3494;
    const double C26885 = C25535 * C3491;
    const double C26881 = C25535 * C1090;
    const double C26877 = C25535 * C1086;
    const double C27393 = C25535 * C4010;
    const double C27389 = C25535 * C4007;
    const double C28834 = C25535 * C1089;
    const double C28830 = C25535 * C1085;
    const double C28826 = C25535 * C417;
    const double C28822 = C25535 * C399;
    const double C28818 = C25535 * C406;
    const double C28814 = C25535 * C396;
    const double C28812 = C25535 * C398;
    const double C28808 = C25535 * C416;
    const double C28802 = C25535 * C407;
    const double C28798 = C25535 * C397;
    const double C29056 = C25535 * C786;
    const double C29052 = C25535 * C777;
    const double C29262 = C25535 * C405;
    const double C29258 = C25535 * C395;
    const double C30062 = C25535 * C4430;
    const double C30058 = C25535 * C4427;
    const double C31240 = C25535 * C1721;
    const double C31236 = C25535 * C1717;
    const double C38528 = C25535 * C1720;
    const double C38524 = C25535 * C1716;
    const double C38834 = C25535 * C418;
    const double C38830 = C25535 * C400;
    const double C40308 = C25535 * C7164;
    const double C40304 = C25535 * C7161;
    const double C10790 = C10777 + C10778;
    const double C11458 = C10778 + C10777;
    const double C13753 = C12779 + C12780;
    const double C10789 = C10775 + C10776;
    const double C12793 = C12773 + C12774;
    const double C11924 = C11279 + C11280;
    const double C14412 = C13495 + C13496;
    const double C49812 = C49810 / C49721;
    const double C44582 = C10769 * C31993;
    const double C44578 = C10767 * C31993;
    const double C44574 = C10765 * C31993;
    const double C44573 = C10761 * C31993;
    const double C44566 = C10759 * C31993;
    const double C44562 = C10757 * C31993;
    const double C44884 = C11001 * C31993;
    const double C45244 = C11273 * C31993;
    const double C45240 = C11271 * C31993;
    const double C45239 = C11270 * C31993;
    const double C45235 = C11268 * C31993;
    const double C45493 = C10764 * C31993;
    const double C45649 = C11583 * C31993;
    const double C45645 = C11581 * C31993;
    const double C46140 = C11266 * C31993;
    const double C2377 = C2346 + C2347;
    const double C8320 = C8307 + C8308;
    const double C22934 = C22903 + C22904;
    const double C26077 = C26064 + C26065;
    const double C2366 = C2324 + C2325;
    const double C7994 = C7965 + C7966;
    const double C11004 = C10995 + C10996;
    const double C22923 = C22881 + C22882;
    const double C25751 = C25722 + C25723;
    const double C5383 = C5352 + C5353;
    const double C16092 = C16079 + C16080;
    const double C29269 = C29264 + C29265;
    const double C32353 = C32322 + C32323;
    const double C22287 = C10625 * C17589;
    const double C10792 = C10784 + C10783;
    const double C12794 = C12786 + C12785;
    const double C5363 = C2158 * C430;
    const double C5331 = C2159 * C430;
    const double C15744 = C50635 * C430;
    const double C16086 = C50911 * C430;
    const double C18828 = C50630 * C430;
    const double C28829 = C50635 * C430;
    const double C32333 = C50953 * C430;
    const double C32301 = C22716 * C430;
    const double C38835 = C25530 * C430;
    const double C3055 = C2158 * C792;
    const double C3035 = C2159 * C792;
    const double C8688 = C50635 * C792;
    const double C13132 = C50630 * C792;
    const double C23612 = C50953 * C792;
    const double C23592 = C22716 * C792;
    const double C26445 = C50635 * C792;
    const double C29057 = C25530 * C792;
    const double C41519 = C50911 * C792;
    const double C2341 = C2159 * C267;
    const double C2679 = C2158 * C267;
    const double C8304 = C50635 * C267;
    const double C22898 = C22716 * C267;
    const double C23236 = C50953 * C267;
    const double C26061 = C50635 * C267;
    const double C2351 = C2158 * C273;
    const double C2331 = C2159 * C273;
    const double C7962 = C50635 * C273;
    const double C8310 = C50911 * C273;
    const double C10994 = C50630 * C273;
    const double C22908 = C50953 * C273;
    const double C22888 = C22716 * C273;
    const double C25719 = C50635 * C273;
    const double C26067 = C25530 * C273;
    const double C5347 = C2159 * C408;
    const double C5685 = C2158 * C408;
    const double C16076 = C50635 * C408;
    const double C29261 = C50635 * C408;
    const double C32317 = C22716 * C408;
    const double C32655 = C50953 * C408;
    const double C5357 = C2158 * C414;
    const double C5337 = C2159 * C414;
    const double C15740 = C50635 * C414;
    const double C16082 = C50911 * C414;
    const double C18826 = C50630 * C414;
    const double C28825 = C50635 * C414;
    const double C32327 = C50953 * C414;
    const double C32307 = C22716 * C414;
    const double C38831 = C25530 * C414;
    const double C3049 = C2158 * C782;
    const double C3041 = C2159 * C782;
    const double C8684 = C50635 * C782;
    const double C13130 = C50630 * C782;
    const double C23606 = C50953 * C782;
    const double C23598 = C22716 * C782;
    const double C26441 = C50635 * C782;
    const double C29053 = C25530 * C782;
    const double C41515 = C50911 * C782;
    const double C13504 = C12978 * C50834;
    const double C18356 = C12978 * C15408;
    const double C19034 = C12978 * C15407;
    const double C45243 = C12978 * C50834;
    const double C47283 = C12978 * C38225;
    const double C47937 = C12978 * C50968;
    const double C13503 = C12977 * C5024;
    const double C18355 = C12977 * C15411;
    const double C19033 = C12977 * C15410;
    const double C45242 = C12977 * C31994;
    const double C47282 = C12977 * C38228;
    const double C10791 = C10786 + C10785;
    const double C11457 = C10779 + C10780;
    const double C11923 = C11277 + C11278;
    const double C17588 =
        (4 * (2 * C50381 + C49847 * C50483 + C50382 * ae) +
         C49847 *
             (3 * C50483 +
              C49847 * (2 * C50475 +
                        C49847 * (C49905 +
                                  C49847 * (C49847 * C49848 * C49917 + C49998) +
                                  C49847 * C49995 * ae) +
                        C50477 * ae) +
              C50482 * ae) +
         (3 * C50382 + C49847 * C50482) * ae) /
        C49721;
    const double C49984 = C49968 + C49983;
    const double C1096 = (C50017 * C49900 + ae * C49847 * C50029 +
                          C49847 * (ae * C50029 + C49847 * C50017 * C49924)) /
                         C49725;
    const double C1092 = (C50017 * C49966 + C50029 * C50071) / C49721;
    const double C50072 = C50069 + C50070;
    const double C4029 = C2159 * C1443;
    const double C8696 = C50635 * C1443;
    const double C13138 = C50630 * C1443;
    const double C24550 = C22716 * C1443;
    const double C26453 = C50635 * C1443;
    const double C7183 = C2159 * C1727;
    const double C15752 = C50635 * C1727;
    const double C21298 = C50630 * C1727;
    const double C34141 = C22716 * C1727;
    const double C38531 = C50635 * C1727;
    const double C3331 = C2159 * C978;
    const double C7970 = C50635 * C978;
    const double C10998 = C50630 * C978;
    const double C23876 = C22716 * C978;
    const double C25727 = C50635 * C978;
    const double C4023 = C2159 * C1439;
    const double C8692 = C50635 * C1439;
    const double C13136 = C50630 * C1439;
    const double C24544 = C22716 * C1439;
    const double C26449 = C50635 * C1439;
    const double C7177 = C2159 * C1723;
    const double C15748 = C50635 * C1723;
    const double C21296 = C50630 * C1723;
    const double C34135 = C22716 * C1723;
    const double C38527 = C50635 * C1723;
    const double C9159 = C9150 + C9151;
    const double C12980 = C12967 + C12968;
    const double C26900 = C26891 + C26892;
    const double C9669 = C9662 + C9663;
    const double C11276 = C11263 + C11264;
    const double C27402 = C27395 + C27396;
    const double C8978 = C8969 + C8970;
    const double C10771 = C10753 + C10754;
    const double C26727 = C26718 + C26719;
    const double C9157 = C9146 + C9147;
    const double C12979 = C12965 + C12966;
    const double C26898 = C26887 + C26888;
    const double C9667 = C9658 + C9659;
    const double C11275 = C11261 + C11262;
    const double C27400 = C27391 + C27392;
    const double C19036 = C18520 * C15408;
    const double C47939 = C18520 * C38225;
    const double C19035 = C18519 * C15411;
    const double C47938 = C18519 * C38228;
    const double C17608 = C17603 + C17604;
    const double C21098 = C21095 + C21096;
    const double C40315 = C40310 + C40311;
    const double C17606 = C17599 + C17600;
    const double C21097 = C21093 + C21094;
    const double C40313 = C40306 + C40307;
    const double C50535 = C50517 + C50533;
    const double C11586 = C11579 + C11580;
    const double C11930 = C11927 + C11928;
    const double C11463 = C11459 + C11460;
    const double C11585 = C11577 + C11578;
    const double C11929 = C11925 + C11926;
    const double C19444 = C19442 * C15408;
    const double C48341 = C19442 * C38225;
    const double C19443 = C19441 * C15411;
    const double C48340 = C19441 * C38228;
    const double C20327 =
        (4 * (2 * C50458 + C49847 * C50514 + C50459 * ae) +
         C49847 * (3 * C50514 +
                   C49847 * (2 * C50508 +
                             C49847 * (C50500 +
                                       C49847 * (C49847 * C50017 * C49917 +
                                                 C50503 * ae) +
                                       C49847 * C50503 * ae) +
                             C50509 * ae) +
                   C50513 * ae) +
         (3 * C50459 + C49847 * C50513) * ae) /
        C49721;
    const double C22289 = C22285 + C22286;
    const double C141 = (5 * (3 * C49881 + C49848 * C49901) +
                         C49848 * (4 * C49901 + C49848 * C49929)) /
                        C49721;
    const double C281 =
        (3 * C49881 + C49848 * C49901 + C49929 * C50035) / C49721;
    const double C422 =
        (3 * C49881 + C49848 * C49901 +
         C49847 * (C49847 * C49929 + C50244 * ae) + C49847 * C50244 * ae) /
        C49721;
    const double C538 = (C50017 * (4 * C49901 + C49848 * C49929)) / C49721;
    const double C642 = (C49847 * (4 * C49901 + C49848 * C49929) +
                         (4 * C50238 + C49848 * C50244) * ae) /
                        C49721;
    const double C788 =
        (C49847 * C50017 * C49929 + C50017 * C50244 * ae) / C49721;
    const double C149 =
        (5 * (3 * C49900 + ae * C49901 + C49848 * C49928) +
         ae * (4 * C49901 + C49848 * C49929) +
         C49848 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C290 = (2 * C49880 + ae * C49881 + C49848 * C49900 +
                         C49928 * std::pow(yP - yQ, 2)) /
                        C49725;
    const double C291 =
        ((yP - yQ) * (3 * C49900 + ae * C49901 + C49848 * C49928)) / C49725;
    const double C292 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 +
         (3 * C49924 + ae * C49925 +
          C49848 *
              (2 * C49920 + ae * C49921 +
               C49848 * (C49916 + ae * C49848 * C49917 +
                         C49848 * (ae * C49917 + C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))) *
             std::pow(yP - yQ, 2)) /
        C49725;
    const double C540 =
        ((yP - yQ) *
         (4 * C49928 + ae * C49929 +
          C49848 * (3 * C49924 + ae * C49925 +
                    C49848 * (2 * C49920 + ae * C49921 +
                              C49848 * (C49916 + ae * C49848 * C49917 +
                                        C49848 * (ae * C49917 +
                                                  C49848 * std::pow(C49850, 8) *
                                                      bs[8] * C49858)))))) /
        C49725;
    const double C981 =
        (2 * C50017 * C49928 +
         C50017 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                std::pow(C50017, 2))) /
        C49725;
    const double C3343 = C3336 + C3337;
    const double C7998 = C7973 + C7974;
    const double C11006 = C10999 + C11000;
    const double C23888 = C23881 + C23882;
    const double C25755 = C25730 + C25731;
    const double C50009 = C49989 + C50008;
    const double C50048 = C49982 + C50047;
    const double C4434 =
        (2 * (ae * C50029 + C49847 * C50059) +
         ae * (C50029 + C50060 * std::pow(C49847, 2)) +
         C49847 * (C50059 + ae * C49847 * C50060 +
                   C49847 * (ae * C50060 +
                             C49847 * C50017 *
                                 (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C4431 =
        (2 * C49847 * C50029 + C49847 * (C50029 + C50060 * C50071)) / C49721;
    const double C50074 = C49982 + C50073;
    const double C9133 =
        (2 * C50062 + C50017 * C50091 + ae * C49847 * C50100 +
         C49847 * (ae * C50100 +
                   C49847 * (2 * C50017 * C49920 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49725;
    const double C9651 =
        (ae * (3 * C50051 + C50017 * C50100) +
         C49847 * (3 * C50091 +
                   C50017 * (2 * C50017 * C49920 +
                             C50017 * (C49920 + (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858) *
                                                    C50035)))) /
        C49725;
    const double C8960 = (4 * (2 * C50031 + C50017 * C50051) +
                          C50017 * (3 * C50051 + C50017 * C50100)) /
                         C49721;
    const double C9131 =
        (2 * C50031 + C50017 * C50051 + C50100 * C50071) / C49721;
    const double C9649 = (C49847 * (3 * C50051 + C50017 * C50100)) / C49721;
    const double C17592 =
        (4 * (2 * C50080 + ae * C50081 + C49847 * C50165) +
         ae * (3 * C50081 + C49847 * C50166) +
         C49847 *
             (3 * C50165 + ae * C50166 +
              C49847 *
                  (2 * C50159 + ae * C50161 +
                   C49847 * (C49920 + ae * C49847 * C50000 +
                             C49847 * (ae * C50000 +
                                       C49847 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C17590 = (4 * (2 * C50076 + C49847 * C50081) +
                           C49847 * (3 * C50081 + C49847 * C50166)) /
                          C49721;
    const double C11567 =
        (3 * C50094 + C50017 * C50117 + ae * C49847 * C50127 +
         C49847 * (ae * C50127 +
                   C49847 * (3 * C50115 +
                             C50017 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49725;
    const double C11921 =
        (ae * (4 * C50106 + C50017 * C50127) +
         C49847 * (4 * C50117 +
                   C50017 * (3 * C50115 +
                             C50017 * (2 * C50017 * C49916 +
                                       C50017 * (C49916 + std::pow(C49850, 8) *
                                                              bs[8] * C49858 *
                                                              C50035))))) /
        C49725;
    const double C11454 = (5 * (3 * C50054 + C50017 * C50106) +
                           C50017 * (4 * C50106 + C50017 * C50127)) /
                          C49721;
    const double C11566 =
        (3 * C50054 + C50017 * C50106 + C50127 * C50071) / C49721;
    const double C11920 = (C49847 * (4 * C50106 + C50017 * C50127)) / C49721;
    const double C22283 =
        (5 * (3 * C50179 + ae * C50180 + C49847 * C50217) +
         ae * (4 * C50180 + C49847 * C50218) +
         C49847 *
             (4 * C50217 + ae * C50218 +
              C49847 *
                  (3 * C50213 + ae * C50214 +
                   C49847 * (2 * C50207 + ae * C50209 +
                             C49847 * (C49916 + ae * C49847 * C49993 +
                                       C49847 * (ae * C49993 +
                                                 C49847 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C22282 = (5 * (3 * C50088 + C49847 * C50180) +
                           C49847 * (4 * C50180 + C49847 * C50218)) /
                          C49721;
    const double C49747 = C49746 - C49736;
    const double C2381 = C2354 + C2355;
    const double C2378 = C2348 + C2349;
    const double C2375 = C2342 + C2343;
    const double C2372 = C2336 + C2337;
    const double C2371 = C2334 + C2335;
    const double C2368 = C2328 + C2329;
    const double C2363 = C2318 + C2319;
    const double C2360 = C2312 + C2313;
    const double C2691 = C2682 + C2683;
    const double C2688 = C2676 + C2677;
    const double C3067 = C3052 + C3053;
    const double C3064 = C3046 + C3047;
    const double C3063 = C3044 + C3045;
    const double C3060 = C3038 + C3039;
    const double C3341 = C3332 + C3333;
    const double C3338 = C3326 + C3327;
    const double C3517 = C3508 + C3509;
    const double C3514 = C3502 + C3503;
    const double C4033 = C4024 + C4025;
    const double C4030 = C4018 + C4019;
    const double C5387 = C5360 + C5361;
    const double C5384 = C5354 + C5355;
    const double C5381 = C5348 + C5349;
    const double C5378 = C5342 + C5343;
    const double C5377 = C5340 + C5341;
    const double C5374 = C5334 + C5335;
    const double C5369 = C5324 + C5325;
    const double C5366 = C5318 + C5319;
    const double C5697 = C5688 + C5689;
    const double C5694 = C5682 + C5683;
    const double C7187 = C7178 + C7179;
    const double C7184 = C7172 + C7173;
    const double C2382 = C2356 + C2357;
    const double C2376 = C2344 + C2345;
    const double C2373 = C2338 + C2339;
    const double C2370 = C2332 + C2333;
    const double C2367 = C2326 + C2327;
    const double C2364 = C2320 + C2321;
    const double C2361 = C2314 + C2315;
    const double C2692 = C2684 + C2685;
    const double C3062 = C3042 + C3043;
    const double C3059 = C3036 + C3037;
    const double C3342 = C3334 + C3335;
    const double C3339 = C3328 + C3329;
    const double C3518 = C3510 + C3511;
    const double C3515 = C3504 + C3505;
    const double C4034 = C4026 + C4027;
    const double C4031 = C4020 + C4021;
    const double C5382 = C5350 + C5351;
    const double C5379 = C5344 + C5345;
    const double C5376 = C5338 + C5339;
    const double C5373 = C5332 + C5333;
    const double C5370 = C5326 + C5327;
    const double C5367 = C5320 + C5321;
    const double C5698 = C5690 + C5691;
    const double C7188 = C7180 + C7181;
    const double C7185 = C7174 + C7175;
    const double C25754 = C25728 + C25729;
    const double C25752 = C25724 + C25725;
    const double C25750 = C25720 + C25721;
    const double C25748 = C25716 + C25717;
    const double C25746 = C25712 + C25713;
    const double C25744 = C25708 + C25709;
    const double C25743 = C25706 + C25707;
    const double C25741 = C25702 + C25703;
    const double C25738 = C25696 + C25697;
    const double C25736 = C25692 + C25693;
    const double C25734 = C25688 + C25689;
    const double C25732 = C25684 + C25685;
    const double C26080 = C26070 + C26071;
    const double C26076 = C26062 + C26063;
    const double C26074 = C26058 + C26059;
    const double C26468 = C26450 + C26451;
    const double C26466 = C26446 + C26447;
    const double C26464 = C26442 + C26443;
    const double C26462 = C26438 + C26439;
    const double C26461 = C26436 + C26437;
    const double C26459 = C26432 + C26433;
    const double C26457 = C26428 + C26429;
    const double C26455 = C26424 + C26425;
    const double C26728 = C26720 + C26721;
    const double C26726 = C26716 + C26717;
    const double C26899 = C26889 + C26890;
    const double C26897 = C26885 + C26886;
    const double C26895 = C26881 + C26882;
    const double C26893 = C26877 + C26878;
    const double C27401 = C27393 + C27394;
    const double C27399 = C27389 + C27390;
    const double C28856 = C28834 + C28835;
    const double C28854 = C28830 + C28831;
    const double C28852 = C28826 + C28827;
    const double C28850 = C28822 + C28823;
    const double C28848 = C28818 + C28819;
    const double C28846 = C28814 + C28815;
    const double C28845 = C28812 + C28813;
    const double C28843 = C28808 + C28809;
    const double C28840 = C28802 + C28803;
    const double C28838 = C28798 + C28799;
    const double C29268 = C29262 + C29263;
    const double C29266 = C29258 + C29259;
    const double C30068 = C30062 + C30063;
    const double C30066 = C30058 + C30059;
    const double C31246 = C31240 + C31241;
    const double C31244 = C31236 + C31237;
    const double C38536 = C38528 + C38529;
    const double C38534 = C38524 + C38525;
    const double C40314 = C40308 + C40309;
    const double C40312 = C40304 + C40305;
    const double C13758 = C12778 + C13753;
    const double C12795 = C12793 + C12775;
    const double C14417 = C13494 + C14412;
    const double C49814 = C49812 - C49799;
    const double C44587 = C44579 + C44578;
    const double C45492 = C44572 + C44573;
    const double C44586 = C44566 + C44567;
    const double C46139 = C45234 + C45235;
    const double C11010 = C11004 * C50822;
    const double C13134 = C11004 * C50940;
    const double C44889 = C11004 * C31991;
    const double C22290 = C22287 + C22288;
    const double C12796 = C12787 + C12794;
    const double C5388 = C5362 + C5363;
    const double C5372 = C5330 + C5331;
    const double C15772 = C15743 + C15744;
    const double C18830 = C18827 + C18828;
    const double C28853 = C28828 + C28829;
    const double C32342 = C32300 + C32301;
    const double C38840 = C38834 + C38835;
    const double C3068 = C3054 + C3055;
    const double C3058 = C3034 + C3035;
    const double C8708 = C8687 + C8688;
    const double C13140 = C13131 + C13132;
    const double C23615 = C23591 + C23592;
    const double C26465 = C26444 + C26445;
    const double C29062 = C29056 + C29057;
    const double C2374 = C2340 + C2341;
    const double C2689 = C2678 + C2679;
    const double C8318 = C8303 + C8304;
    const double C22931 = C22897 + C22898;
    const double C26075 = C26060 + C26061;
    const double C2379 = C2350 + C2351;
    const double C2369 = C2330 + C2331;
    const double C7992 = C7961 + C7962;
    const double C11003 = C10993 + C10994;
    const double C22926 = C22887 + C22888;
    const double C25749 = C25718 + C25719;
    const double C26078 = C26066 + C26067;
    const double C5380 = C5346 + C5347;
    const double C5695 = C5684 + C5685;
    const double C16090 = C16075 + C16076;
    const double C29267 = C29260 + C29261;
    const double C32350 = C32316 + C32317;
    const double C5385 = C5356 + C5357;
    const double C5375 = C5336 + C5337;
    const double C15770 = C15739 + C15740;
    const double C18829 = C18825 + C18826;
    const double C28851 = C28824 + C28825;
    const double C32345 = C32306 + C32307;
    const double C38838 = C38830 + C38831;
    const double C3065 = C3048 + C3049;
    const double C3061 = C3040 + C3041;
    const double C8706 = C8683 + C8684;
    const double C13139 = C13129 + C13130;
    const double C23618 = C23597 + C23598;
    const double C26463 = C26440 + C26441;
    const double C29060 = C29052 + C29053;
    const double C49985 = C49984 + C49979;
    const double C3513 = C2159 * C1096;
    const double C16298 = C50635 * C1096;
    const double C18674 = C50630 * C1096;
    const double C24046 = C22716 * C1096;
    const double C28837 = C50635 * C1096;
    const double C3507 = C2159 * C1092;
    const double C16294 = C50635 * C1092;
    const double C18672 = C50630 * C1092;
    const double C24040 = C22716 * C1092;
    const double C28833 = C50635 * C1092;
    const double C4035 = C4028 + C4029;
    const double C8712 = C8695 + C8696;
    const double C13142 = C13137 + C13138;
    const double C24556 = C24549 + C24550;
    const double C26469 = C26452 + C26453;
    const double C7189 = C7182 + C7183;
    const double C15776 = C15751 + C15752;
    const double C21300 = C21297 + C21298;
    const double C34147 = C34140 + C34141;
    const double C38537 = C38530 + C38531;
    const double C3340 = C3330 + C3331;
    const double C7996 = C7969 + C7970;
    const double C11005 = C10997 + C10998;
    const double C23885 = C23875 + C23876;
    const double C25753 = C25726 + C25727;
    const double C4032 = C4022 + C4023;
    const double C8710 = C8691 + C8692;
    const double C13141 = C13135 + C13136;
    const double C24553 = C24543 + C24544;
    const double C26467 = C26448 + C26449;
    const double C7186 = C7176 + C7177;
    const double C15774 = C15747 + C15748;
    const double C21299 = C21295 + C21296;
    const double C34144 = C34134 + C34135;
    const double C38535 = C38526 + C38527;
    const double C13508 = C12980 * C50834;
    const double C18362 = C12980 * C15408;
    const double C45247 = C12980 * C50834;
    const double C47289 = C12980 * C38225;
    const double C11288 = C11276 * C50822;
    const double C12792 = C11276 * C50834;
    const double C44585 = C11276 * C50834;
    const double C10787 = C10771 * C121;
    const double C13507 = C12979 * C5024;
    const double C18361 = C12979 * C15411;
    const double C45246 = C12979 * C31994;
    const double C47288 = C12979 * C38228;
    const double C11287 = C11275 * C121;
    const double C12791 = C11275 * C5024;
    const double C44584 = C11275 * C31994;
    const double C50536 = C50535 + C50520;
    const double C11592 = C11586 * C50822;
    const double C14416 = C11586 * C50834;
    const double C19286 = C11586 * C15408;
    const double C46143 = C11586 * C50834;
    const double C48189 = C11586 * C38225;
    const double C11932 = C11930 * C50822;
    const double C13757 = C11930 * C50834;
    const double C45496 = C11930 * C50834;
    const double C11465 = C11463 * C121;
    const double C11591 = C11585 * C121;
    const double C14415 = C11585 * C5024;
    const double C19285 = C11585 * C15411;
    const double C46142 = C11585 * C31994;
    const double C48188 = C11585 * C38228;
    const double C11931 = C11929 * C121;
    const double C13756 = C11929 * C5024;
    const double C45495 = C11929 * C31994;
    const double C2359 = C2159 * C290;
    const double C8316 = C50635 * C290;
    const double C22916 = C22716 * C290;
    const double C26073 = C50635 * C290;
    const double C2687 = C2159 * C291;
    const double C23244 = C22716 * C291;
    const double C11012 = C11006 * C50822;
    const double C50010 = C50009 + C50001;
    const double C3498 =
        (C49900 + C49924 * C50035 + ae * C49847 * C50048 +
         C49847 * (ae * C50048 +
                   C49847 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50035))) /
        C49725;
    const double C4014 =
        (ae * (2 * C50029 + C50017 * C50048) +
         C49847 * (2 * C50017 * C49924 +
                   C50017 * (C49924 + (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)) *
                                          C50035))) /
        C49725;
    const double C3319 = (3 * (C49966 + C49982 * C50035) +
                          C50017 * (2 * C50029 + C50017 * C50048)) /
                         C49721;
    const double C3495 = (C49966 + C49982 * C50035 + C50048 * C50071) / C49721;
    const double C4011 = (C49847 * (2 * C50029 + C50017 * C50048)) / C49721;
    const double C7168 =
        (3 * (C49900 + ae * C50068 + C49847 * C50072) +
         ae * (2 * C50068 + C49847 * C50074) +
         C49847 *
             (2 * C50072 + ae * C50074 +
              C49847 *
                  (C49924 + ae * C49847 * C50007 +
                   C49847 * (ae * C50007 +
                             C49847 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C7165 = (3 * (C49966 + C49982 * C50071) +
                          C49847 * (2 * C50068 + C49847 * C50074)) /
                         C49721;
    const double C7971 = C49747 * C975;
    const double C7967 = C49747 * C971;
    const double C7963 = C49747 * C276;
    const double C7959 = C49747 * C258;
    const double C7955 = C49747 * C265;
    const double C7951 = C49747 * C255;
    const double C7949 = C49747 * C972;
    const double C7945 = C49747 * C976;
    const double C7939 = C49747 * C275;
    const double C7935 = C49747 * C257;
    const double C7931 = C49747 * C266;
    const double C7927 = C49747 * C256;
    const double C8313 = C49747 * C277;
    const double C8309 = C49747 * C259;
    const double C8305 = C49747 * C264;
    const double C8301 = C49747 * C254;
    const double C8693 = C49747 * C1436;
    const double C8689 = C49747 * C1432;
    const double C8685 = C49747 * C785;
    const double C8681 = C49747 * C776;
    const double C8679 = C49747 * C775;
    const double C8675 = C49747 * C784;
    const double C8671 = C49747 * C1433;
    const double C8667 = C49747 * C1437;
    const double C8971 = C49747 * C3318;
    const double C8967 = C49747 * C3315;
    const double C9148 = C49747 * C3494;
    const double C9144 = C49747 * C3491;
    const double C9140 = C49747 * C1090;
    const double C9136 = C49747 * C1086;
    const double C9660 = C49747 * C4010;
    const double C9656 = C49747 * C4007;
    const double C15749 = C49747 * C1720;
    const double C15745 = C49747 * C1716;
    const double C15741 = C49747 * C417;
    const double C15737 = C49747 * C399;
    const double C15733 = C49747 * C406;
    const double C15729 = C49747 * C396;
    const double C15727 = C49747 * C1717;
    const double C15723 = C49747 * C1721;
    const double C15717 = C49747 * C416;
    const double C15713 = C49747 * C398;
    const double C15709 = C49747 * C407;
    const double C15705 = C49747 * C397;
    const double C16085 = C49747 * C418;
    const double C16081 = C49747 * C400;
    const double C16077 = C49747 * C405;
    const double C16073 = C49747 * C395;
    const double C16295 = C49747 * C1089;
    const double C16291 = C49747 * C1085;
    const double C16701 = C49747 * C4430;
    const double C16697 = C49747 * C4427;
    const double C17601 = C49747 * C7164;
    const double C17597 = C49747 * C7161;
    const double C41518 = C49747 * C786;
    const double C41514 = C49747 * C777;
    const double C117 =
        ((((0 - (C49719 * C49720) / C49721) * ae) / C49721 - (0 * be) / C49730 +
          C49722 / C49721) /
             C49726 -
         ((C49719 * C49743 + 0) * be) / C49721) /
            C49726 -
        ((C49719 * (C49743 / C49726 -
                    ((C49719 * C49747 + C50911) * be) / C49721 + C49740) +
          C50969) *
         be) /
            C49721 +
        C49747 / C49726 - ((C49719 * C49740 + C50635) * be) / C49721;
    const double C118 =
        (C49743 / C49726 - ((C49719 * C49747 + C50911) * be) / C49721 +
         C49740) /
            C49726 -
        ((C49719 *
              (C49747 / C49726 - ((C49719 * C49740 + C50635) * be) / C49721) +
          C50953) *
         be) /
            C49721 +
        2 * (C49740 / C49726 - (0 * be) / C49721);
    const double C119 =
        (C49747 / C49726 - ((C49719 * C49740 + C50635) * be) / C49721) /
            C49726 -
        ((C49719 * (C49740 / C49726 - (0 * be) / C49721) + C22716) * be) /
            C49721;
    const double C22719 =
        C49743 / C49726 - ((C49719 * C49747 + C50911) * be) / C49721 + C49740;
    const double C22720 =
        C49747 / C49726 - ((C49719 * C49740 + C50635) * be) / C49721;
    const double C25758 = C25751 + C25750;
    const double C26715 = C25742 + C25743;
    const double C26714 = C25740 + C25741;
    const double C25757 = C25738 + C25739;
    const double C25756 = C25736 + C25737;
    const double C29531 = C26460 + C26461;
    const double C29528 = C26461 + C26460;
    const double C29530 = C26458 + C26459;
    const double C29529 = C26459 + C26458;
    const double C27388 = C26456 + C26457;
    const double C30716 = C26457 + C26456;
    const double C27387 = C26454 + C26455;
    const double C30717 = C26455 + C26454;
    const double C30057 = C26895 + C26896;
    const double C30054 = C26896 + C26895;
    const double C30056 = C26893 + C26894;
    const double C30055 = C26894 + C26893;
    const double C38522 = C28845 + C28844;
    const double C38523 = C28843 + C28842;
    const double C40302 = C31247 + C31246;
    const double C40303 = C31245 + C31244;
    const double C13759 = C12777 + C13758;
    const double C12797 = C12795 + C12776;
    const double C14418 = C13493 + C14417;
    const double C20892 =
        ((((0 - (C49768 * C49796) / C49721) * ae) / C49721 - (0 * be) / C49730 +
          C49782 / C49721) /
             C49726 -
         ((C49768 * C49813 + 0) * be) / C49721) /
            C49726 -
        ((C49768 * (C49813 / C49726 -
                    ((C49768 * C49814 + C50940) * be) / C49721 + C49808) +
          C50977) *
         be) /
            C49721 +
        C49814 / C49726 - ((C49768 * C49808 + C50834) * be) / C49721;
    const double C20893 =
        (C49813 / C49726 - ((C49768 * C49814 + C50940) * be) / C49721 +
         C49808) /
            C49726 -
        ((C49768 *
              (C49814 / C49726 - ((C49768 * C49808 + C50834) * be) / C49721) +
          C50968) *
         be) /
            C49721 +
        2 * (C49808 / C49726 - (0 * be) / C49721);
    const double C20894 =
        (C49814 / C49726 - ((C49768 * C49808 + C50834) * be) / C49721) /
            C49726 -
        ((C49768 * (C49808 / C49726 - (0 * be) / C49721) + C38225) * be) /
            C49721;
    const double C38226 =
        C49813 / C49726 - ((C49768 * C49814 + C50940) * be) / C49721 + C49808;
    const double C38227 =
        C49814 / C49726 - ((C49768 * C49808 + C50834) * be) / C49721;
    const double C44589 = C44580 + C44587;
    const double C45497 = C44571 + C45492;
    const double C44588 = C44586 + C44568;
    const double C46144 = C45233 + C46139;
    const double C12798 = C12788 + C12796;
    const double C38532 = C28853 + C28852;
    const double C13144 = C13140 * C50834;
    const double C18670 = C13140 * C15407;
    const double C44887 = C13140 * C50834;
    const double C47585 = C13140 * C50968;
    const double C29534 = C26465 + C26464;
    const double C29533 = C26464 + C26465;
    const double C11009 = C11003 * C121;
    const double C13133 = C11003 * C5023;
    const double C44888 = C11003 * C31993;
    const double C25759 = C25749 + C25748;
    const double C38533 = C28851 + C28850;
    const double C13143 = C13139 * C5024;
    const double C18669 = C13139 * C15410;
    const double C44886 = C13139 * C31994;
    const double C29535 = C26463 + C26462;
    const double C29532 = C26462 + C26463;
    const double C431 =
        (2 * C49880 + ae * C49881 + C49848 * C49900 + ae * C49847 * C49985 +
         C49847 * (ae * C49985 + C49847 * C49928)) /
        C49725;
    const double C432 =
        (ae * (3 * C49966 + C49848 * C49985 +
               (2 * C49959 + C49848 * C49977) * ae) +
         C49847 * (3 * C49900 + ae * C49901 + C49848 * C49928)) /
        C49725;
    const double C793 =
        (ae * C50017 * C49985 + C49847 * C50017 * C49928) / C49725;
    const double C139 = (4 * (2 * C49955 + C49848 * C49966 + C50234 * ae) +
                         C49848 * (3 * C49966 + C49848 * C49985 + C50238 * ae) +
                         (3 * C50234 + C49848 * C50238) * ae) /
                        C49721;
    const double C274 =
        (2 * C49955 + C49848 * C49966 + C50234 * ae + C49985 * C50035) / C49721;
    const double C279 =
        (C50017 * (3 * C49966 + C49848 * C49985 + C50238 * ae)) / C49721;
    const double C415 =
        (2 * C49955 + C49848 * C49966 + C50234 * ae + C49985 * C50071) / C49721;
    const double C420 =
        (C49847 * (3 * C49966 + C49848 * C49985 + C50238 * ae)) / C49721;
    const double C783 = (C49847 * C50017 * C49985) / C49721;
    const double C3519 = C3512 + C3513;
    const double C16302 = C16297 + C16298;
    const double C18676 = C18673 + C18674;
    const double C24052 = C24045 + C24046;
    const double C28857 = C28836 + C28837;
    const double C3516 = C3506 + C3507;
    const double C16300 = C16293 + C16294;
    const double C18675 = C18671 + C18672;
    const double C24049 = C24039 + C24040;
    const double C28855 = C28832 + C28833;
    const double C13146 = C13142 * C50834;
    const double C44891 = C13142 * C50834;
    const double C11011 = C11005 * C121;
    const double C13145 = C13141 * C5024;
    const double C44890 = C13141 * C31994;
    const double C22281 =
        (5 * (3 * C50496 + C49847 * C50536 + C50495 * ae) +
         C49847 *
             (4 * C50536 +
              C49847 *
                  (3 * C50531 +
                   C49847 *
                       (2 * C50523 +
                        C49847 * (C49893 + C49847 * (C49847 * C49917 + C49994) +
                                  C49847 * C49991 * ae) +
                        C50525 * ae) +
                   C50530 * ae) +
              C50534 * ae) +
         (4 * C50495 + C49847 * C50534) * ae) /
        C49721;
    const double C2383 = C2358 + C2359;
    const double C8324 = C8315 + C8316;
    const double C22940 = C22915 + C22916;
    const double C26081 = C26072 + C26073;
    const double C2693 = C2686 + C2687;
    const double C23250 = C23243 + C23244;
    const double C50011 = C49848 * C50010;
    const double C50027 = C50017 * C50010;
    const double C1442 =
        (ae * (C49985 + C50010 * C50035) +
         C49847 * (C49928 + (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858))) *
                                C50035)) /
        C49725;
    const double C1726 =
        (2 * (ae * C49985 + C49847 * C49928) +
         ae * (C49985 + C50010 * std::pow(C49847, 2)) +
         C49847 *
             (C49928 + ae * C49847 * C50010 +
              C49847 *
                  (ae * C50010 +
                   C49847 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C977 =
        (2 * C50017 * C49985 + C50017 * (C49985 + C50010 * C50035)) / C49721;
    const double C1438 = (C49847 * (C49985 + C50010 * C50035)) / C49721;
    const double C1722 =
        (2 * C49847 * C49985 + C49847 * (C49985 + C50010 * C50071)) / C49721;
    const double C7997 = C7971 + C7972;
    const double C7995 = C7967 + C7968;
    const double C7993 = C7963 + C7964;
    const double C7991 = C7959 + C7960;
    const double C7989 = C7955 + C7956;
    const double C7987 = C7951 + C7952;
    const double C7986 = C7949 + C7950;
    const double C7984 = C7945 + C7946;
    const double C7981 = C7939 + C7940;
    const double C7979 = C7935 + C7936;
    const double C7977 = C7931 + C7932;
    const double C7975 = C7927 + C7928;
    const double C8323 = C8313 + C8314;
    const double C8321 = C8309 + C8310;
    const double C8319 = C8305 + C8306;
    const double C8317 = C8301 + C8302;
    const double C8711 = C8693 + C8694;
    const double C8709 = C8689 + C8690;
    const double C8707 = C8685 + C8686;
    const double C8705 = C8681 + C8682;
    const double C8704 = C8679 + C8680;
    const double C8702 = C8675 + C8676;
    const double C8700 = C8671 + C8672;
    const double C8698 = C8667 + C8668;
    const double C8979 = C8971 + C8972;
    const double C8977 = C8967 + C8968;
    const double C9158 = C9148 + C9149;
    const double C9156 = C9144 + C9145;
    const double C9154 = C9140 + C9141;
    const double C9152 = C9136 + C9137;
    const double C9668 = C9660 + C9661;
    const double C9666 = C9656 + C9657;
    const double C15775 = C15749 + C15750;
    const double C15773 = C15745 + C15746;
    const double C15771 = C15741 + C15742;
    const double C15769 = C15737 + C15738;
    const double C15767 = C15733 + C15734;
    const double C15765 = C15729 + C15730;
    const double C15764 = C15727 + C15728;
    const double C15762 = C15723 + C15724;
    const double C15759 = C15717 + C15718;
    const double C15757 = C15713 + C15714;
    const double C15755 = C15709 + C15710;
    const double C15753 = C15705 + C15706;
    const double C16095 = C16085 + C16086;
    const double C16093 = C16081 + C16082;
    const double C16091 = C16077 + C16078;
    const double C16089 = C16073 + C16074;
    const double C16301 = C16295 + C16296;
    const double C16299 = C16291 + C16292;
    const double C16709 = C16701 + C16702;
    const double C16707 = C16697 + C16698;
    const double C17607 = C17601 + C17602;
    const double C17605 = C17597 + C17598;
    const double C41524 = C41518 + C41519;
    const double C41522 = C41514 + C41515;
    const double C22911 = C22719 * C276;
    const double C22905 = C22719 * C258;
    const double C22899 = C22719 * C265;
    const double C22893 = C22719 * C255;
    const double C22891 = C22719 * C257;
    const double C22885 = C22719 * C275;
    const double C22875 = C22719 * C266;
    const double C22869 = C22719 * C256;
    const double C23239 = C22719 * C264;
    const double C23233 = C22719 * C254;
    const double C23609 = C22719 * C785;
    const double C23603 = C22719 * C776;
    const double C23601 = C22719 * C775;
    const double C23595 = C22719 * C784;
    const double C23877 = C22719 * C976;
    const double C23871 = C22719 * C972;
    const double C24041 = C22719 * C1090;
    const double C24035 = C22719 * C1086;
    const double C24545 = C22719 * C1437;
    const double C24539 = C22719 * C1433;
    const double C32330 = C22719 * C417;
    const double C32324 = C22719 * C399;
    const double C32318 = C22719 * C406;
    const double C32312 = C22719 * C396;
    const double C32310 = C22719 * C398;
    const double C32304 = C22719 * C416;
    const double C32294 = C22719 * C407;
    const double C32288 = C22719 * C397;
    const double C32658 = C22719 * C405;
    const double C32652 = C22719 * C395;
    const double C34136 = C22719 * C1721;
    const double C34130 = C22719 * C1717;
    const double C22913 = C22720 * C277;
    const double C22907 = C22720 * C259;
    const double C22901 = C22720 * C264;
    const double C22895 = C22720 * C254;
    const double C22889 = C22720 * C258;
    const double C22883 = C22720 * C276;
    const double C22877 = C22720 * C265;
    const double C22871 = C22720 * C255;
    const double C23241 = C22720 * C263;
    const double C23235 = C22720 * C253;
    const double C23611 = C22720 * C786;
    const double C23605 = C22720 * C777;
    const double C23599 = C22720 * C776;
    const double C23593 = C22720 * C785;
    const double C23879 = C22720 * C975;
    const double C23873 = C22720 * C971;
    const double C24043 = C22720 * C1089;
    const double C24037 = C22720 * C1085;
    const double C24547 = C22720 * C1436;
    const double C24541 = C22720 * C1432;
    const double C32332 = C22720 * C418;
    const double C32326 = C22720 * C400;
    const double C32320 = C22720 * C405;
    const double C32314 = C22720 * C395;
    const double C32308 = C22720 * C399;
    const double C32302 = C22720 * C417;
    const double C32296 = C22720 * C406;
    const double C32290 = C22720 * C396;
    const double C32660 = C22720 * C404;
    const double C32654 = C22720 * C394;
    const double C34138 = C22720 * C1720;
    const double C34132 = C22720 * C1716;
    const double C25762 = C25758 * C50822;
    const double C26725 = C26715 * C121;
    const double C26724 = C26714 * C50822;
    const double C25761 = C25757 * C50822;
    const double C25760 = C25756 * C121;
    const double C27398 = C27388 * C121;
    const double C27397 = C27387 * C50822;
    const double C47284 = C10767 * C38226;
    const double C47278 = C10765 * C38226;
    const double C47277 = C10759 * C38226;
    const double C47266 = C10757 * C38226;
    const double C47582 = C11001 * C38226;
    const double C47934 = C11271 * C38226;
    const double C47933 = C11270 * C38226;
    const double C48184 = C10761 * C38226;
    const double C48336 = C11581 * C38226;
    const double C48828 = C11268 * C38226;
    const double C47286 = C11273 * C38227;
    const double C47280 = C11271 * C38227;
    const double C47275 = C11268 * C38227;
    const double C47268 = C11270 * C38227;
    const double C47584 = C13139 * C38227;
    const double C47936 = C12977 * C38227;
    const double C47931 = C11581 * C38227;
    const double C48186 = C11266 * C38227;
    const double C48338 = C13918 * C38227;
    const double C48830 = C11583 * C38227;
    const double C44591 = C44581 + C44589;
    const double C45498 = C44570 + C45497;
    const double C44590 = C44588 + C44569;
    const double C46145 = C45232 + C46144;
    const double C25763 = C25759 * C121;
    const double C5365 = C2159 * C431;
    const double C16088 = C50635 * C431;
    const double C32335 = C22716 * C431;
    const double C38837 = C50635 * C431;
    const double C5693 = C2159 * C432;
    const double C32663 = C22716 * C432;
    const double C3057 = C2159 * C793;
    const double C23614 = C22716 * C793;
    const double C29059 = C50635 * C793;
    const double C41521 = C50635 * C793;
    const double C2353 = C2159 * C274;
    const double C8312 = C50635 * C274;
    const double C22910 = C22716 * C274;
    const double C26069 = C50635 * C274;
    const double C2681 = C2159 * C279;
    const double C23238 = C22716 * C279;
    const double C5359 = C2159 * C415;
    const double C16084 = C50635 * C415;
    const double C32329 = C22716 * C415;
    const double C38833 = C50635 * C415;
    const double C5687 = C2159 * C420;
    const double C32657 = C22716 * C420;
    const double C3051 = C2159 * C783;
    const double C23608 = C22716 * C783;
    const double C29055 = C50635 * C783;
    const double C41517 = C50635 * C783;
    const double C18678 = C18676 * C15408;
    const double C47587 = C18676 * C38225;
    const double C18677 = C18675 * C15411;
    const double C47586 = C18675 * C38228;
    const double C50012 = C49988 + C50011;
    const double C1095 =
        (C50017 * C49928 + ae * C49847 * C50027 +
         C49847 * (ae * C50027 +
                   C49847 * C50017 *
                       (2 * C49920 + ae * C49921 +
                        C49848 * (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C1091 = (C50017 * C49985 + C50027 * C50071) / C49721;
    const double C8001 = C7994 + C7993;
    const double C8002 = C7992 + C7991;
    const double C8966 = C7985 + C7986;
    const double C8965 = C7983 + C7984;
    const double C8000 = C7981 + C7982;
    const double C7999 = C7979 + C7980;
    const double C41984 = C8708 + C8707;
    const double C41983 = C8707 + C8708;
    const double C41985 = C8706 + C8705;
    const double C41982 = C8705 + C8706;
    const double C41981 = C8703 + C8704;
    const double C41978 = C8704 + C8703;
    const double C41980 = C8701 + C8702;
    const double C41979 = C8702 + C8701;
    const double C9655 = C8699 + C8700;
    const double C43152 = C8700 + C8699;
    const double C9654 = C8697 + C8698;
    const double C43153 = C8698 + C8697;
    const double C16705 = C9155 + C9154;
    const double C42505 = C9154 + C9155;
    const double C16706 = C9153 + C9152;
    const double C42504 = C9152 + C9153;
    const double C15779 = C15772 + C15771;
    const double C15780 = C15770 + C15769;
    const double C17596 = C15763 + C15764;
    const double C17595 = C15761 + C15762;
    const double C15778 = C15759 + C15760;
    const double C15777 = C15757 + C15758;
    const double C22938 = C22911 + C22912;
    const double C22935 = C22905 + C22906;
    const double C22932 = C22899 + C22900;
    const double C22929 = C22893 + C22894;
    const double C22928 = C22891 + C22892;
    const double C22925 = C22885 + C22886;
    const double C22920 = C22875 + C22876;
    const double C22917 = C22869 + C22870;
    const double C23248 = C23239 + C23240;
    const double C23245 = C23233 + C23234;
    const double C23624 = C23609 + C23610;
    const double C23621 = C23603 + C23604;
    const double C23620 = C23601 + C23602;
    const double C23617 = C23595 + C23596;
    const double C23886 = C23877 + C23878;
    const double C23883 = C23871 + C23872;
    const double C24050 = C24041 + C24042;
    const double C24047 = C24035 + C24036;
    const double C24554 = C24545 + C24546;
    const double C24551 = C24539 + C24540;
    const double C32357 = C32330 + C32331;
    const double C32354 = C32324 + C32325;
    const double C32351 = C32318 + C32319;
    const double C32348 = C32312 + C32313;
    const double C32347 = C32310 + C32311;
    const double C32344 = C32304 + C32305;
    const double C32339 = C32294 + C32295;
    const double C32336 = C32288 + C32289;
    const double C32667 = C32658 + C32659;
    const double C32664 = C32652 + C32653;
    const double C34145 = C34136 + C34137;
    const double C34142 = C34130 + C34131;
    const double C22939 = C22913 + C22914;
    const double C22936 = C22907 + C22908;
    const double C22933 = C22901 + C22902;
    const double C22930 = C22895 + C22896;
    const double C22927 = C22889 + C22890;
    const double C22924 = C22883 + C22884;
    const double C22921 = C22877 + C22878;
    const double C22918 = C22871 + C22872;
    const double C23249 = C23241 + C23242;
    const double C23246 = C23235 + C23236;
    const double C23625 = C23611 + C23612;
    const double C23622 = C23605 + C23606;
    const double C23619 = C23599 + C23600;
    const double C23616 = C23593 + C23594;
    const double C23887 = C23879 + C23880;
    const double C23884 = C23873 + C23874;
    const double C24051 = C24043 + C24044;
    const double C24048 = C24037 + C24038;
    const double C24555 = C24547 + C24548;
    const double C24552 = C24541 + C24542;
    const double C32358 = C32332 + C32333;
    const double C32355 = C32326 + C32327;
    const double C32352 = C32320 + C32321;
    const double C32349 = C32314 + C32315;
    const double C32346 = C32308 + C32309;
    const double C32343 = C32302 + C32303;
    const double C32340 = C32296 + C32297;
    const double C32337 = C32290 + C32291;
    const double C32668 = C32660 + C32661;
    const double C32665 = C32654 + C32655;
    const double C34146 = C34138 + C34139;
    const double C34143 = C34132 + C34133;
    const double C26730 = C26724 + C26725;
    const double C25764 = C25760 + C25761;
    const double C27403 = C27397 + C27398;
    const double C25765 = C25762 + C25763;
    const double C5389 = C5364 + C5365;
    const double C16096 = C16087 + C16088;
    const double C32359 = C32334 + C32335;
    const double C38841 = C38836 + C38837;
    const double C5699 = C5692 + C5693;
    const double C32669 = C32662 + C32663;
    const double C3069 = C3056 + C3057;
    const double C23626 = C23613 + C23614;
    const double C29063 = C29058 + C29059;
    const double C41525 = C41520 + C41521;
    const double C2380 = C2352 + C2353;
    const double C8322 = C8311 + C8312;
    const double C22937 = C22909 + C22910;
    const double C26079 = C26068 + C26069;
    const double C2690 = C2680 + C2681;
    const double C23247 = C23237 + C23238;
    const double C5386 = C5358 + C5359;
    const double C16094 = C16083 + C16084;
    const double C32356 = C32328 + C32329;
    const double C38839 = C38832 + C38833;
    const double C5696 = C5686 + C5687;
    const double C32666 = C32656 + C32657;
    const double C3066 = C3050 + C3051;
    const double C23623 = C23607 + C23608;
    const double C29061 = C29054 + C29055;
    const double C41523 = C41516 + C41517;
    const double C50013 = C50012 + C50006;
    const double C8005 = C8001 * C50822;
    const double C8006 = C8002 * C121;
    const double C8976 = C8966 * C121;
    const double C8975 = C8965 * C50822;
    const double C8004 = C8000 * C50822;
    const double C8003 = C7999 * C121;
    const double C9665 = C9655 * C121;
    const double C9664 = C9654 * C50822;
    const double C433 =
        (3 * C49900 + ae * C49901 + C49848 * C49928 + ae * C49847 * C50013 +
         C49847 *
             (ae * C50013 +
              C49847 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C644 =
        (ae * (4 * C49985 + C49848 * C50013 +
               (3 * C49977 + C49848 * C50004) * ae) +
         C49847 *
             (4 * C49928 + ae * C49929 +
              C49848 *
                  (3 * C49924 + ae * C49925 +
                   C49848 * (2 * C49920 + ae * C49921 +
                             C49848 * (C49916 + ae * C49848 * C49917 +
                                       C49848 * (ae * C49917 +
                                                 C49848 * std::pow(C49850, 8) *
                                                     bs[8] * C49858)))))) /
        C49725;
    const double C794 =
        (ae * C50017 * C50013 +
         C49847 * C50017 *
             (3 * C49924 + ae * C49925 +
              C49848 * (2 * C49920 + ae * C49921 +
                        C49848 * (C49916 + ae * C49848 * C49917 +
                                  C49848 * (ae * C49917 +
                                            C49848 * std::pow(C49850, 8) *
                                                bs[8] * C49858))))) /
        C49725;
    const double C142 = (5 * (3 * C49966 + C49848 * C49985 + C50238 * ae) +
                         C49848 * (4 * C49985 + C49848 * C50013 + C50244 * ae) +
                         (4 * C50238 + C49848 * C50244) * ae) /
                        C49721;
    const double C282 =
        (3 * C49966 + C49848 * C49985 + C50238 * ae + C50013 * C50035) / C49721;
    const double C423 =
        (3 * C49966 + C49848 * C49985 + C50238 * ae + C50013 * C50071) / C49721;
    const double C539 =
        (C50017 * (4 * C49985 + C49848 * C50013 + C50244 * ae)) / C49721;
    const double C643 =
        (C49847 * (4 * C49985 + C49848 * C50013 + C50244 * ae)) / C49721;
    const double C789 = (C49847 * C50017 * C50013) / C49721;
    const double C8008 = C8005 + C8006;
    const double C8981 = C8975 + C8976;
    const double C8007 = C8003 + C8004;
    const double C9670 = C9664 + C9665;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50696 * C50928 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50696 * C50732) *
                     C50970 +
                 ((((C22929 + C22930 + C22931) * C121 +
                    (C22932 + C22933 + C22934) * C50822) *
                       C22717 +
                   ((C22935 + C22936 + C22937) * C121 +
                    (C22938 + C22939 + C22940) * C50822) *
                       C50810) *
                      C50696 * C50732 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50696 * C50928) *
                     C50971 +
                 ((((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                     C50953 * C132 + C22721 * C126 + C22716 * C138) *
                        C121 +
                    (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                     C50953 * C146 + C22721 * C137 + C22716 * C147) *
                        C50822) *
                       C22717 +
                   ((C23245 + C23246 + C23247) * C121 +
                    (C23248 + C23249 + C23250) * C50822) *
                       C50810) *
                      C50696 * C50928 -
                  (((C22721 * C281 + C22716 * C292 + C22720 * C278 +
                     C50953 * C290 + C22719 * C277 + C50969 * C289) *
                        C50822 +
                    (C22721 * C262 + C22716 * C282 + C22720 * C260 +
                     C50953 * C274 + C22719 * C259 + C50969 * C273) *
                        C121) *
                       C50810 +
                   ((C23250 + C23249 + C23248) * C50822 +
                    (C23247 + C23246 + C23245) * C121) *
                       C22717) *
                      C50696 * C50732) *
                     C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C50929 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50760) *
                      C50928 +
                  ((((C23620 + C23619 + C23618) * C121 +
                     (C23617 + C23616 + C23615) * C50822) *
                        C22717 +
                    ((C22719 * C1433 + C50969 * C1441 + C22720 * C1432 +
                      C50953 * C1440 + C22721 * C1431 + C22716 * C1439) *
                         C121 +
                     (C22719 * C1437 + C50969 * C1445 + C22720 * C1436 +
                      C50953 * C1444 + C22721 * C1435 + C22716 * C1443) *
                         C50822) *
                        C50810) *
                       C50760 -
                   (((C22923 + C22924 + C22925) * C50822 +
                     (C22926 + C22927 + C22928) * C121) *
                        C50810 +
                    ((C22922 + C22921 + C22920) * C50822 +
                     (C22919 + C22918 + C22917) * C121) *
                        C22717) *
                       C50929) *
                      C50732) *
                     C251 +
                 (((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                      C50953 * C409 + C22721 * C394 + C22716 * C408) *
                         C121 +
                     (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                      C50953 * C425 + C22721 * C404 + C22716 * C424) *
                         C50822) *
                        C22717 +
                    ((C23621 + C23622 + C23623) * C121 +
                     (C23624 + C23625 + C23626) * C50822) *
                        C50810) *
                       C50760 -
                   (((C22934 + C22933 + C22932) * C50822 +
                     (C22931 + C22930 + C22929) * C121) *
                        C50810 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C50822 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C121) *
                        C22717) *
                       C50929) *
                      C50928 +
                  ((((C22929 + C22930 + C22931) * C121 +
                     (C22932 + C22933 + C22934) * C50822) *
                        C22717 +
                    ((C22935 + C22936 + C22937) * C121 +
                     (C22938 + C22939 + C22940) * C50822) *
                        C50810) *
                       C50929 -
                   (((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                      C50953 * C1443 + C22719 * C1436 + C50969 * C1444) *
                         C50822 +
                     (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                      C50953 * C1439 + C22719 * C1432 + C50969 * C1440) *
                         C121) *
                        C50810 +
                    ((C23626 + C23625 + C23624) * C50822 +
                     (C23623 + C23622 + C23621) * C121) *
                        C22717) *
                       C50760) *
                      C50732) *
                     C50667)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50696 * C248 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50696 * C249 +
                  (((C22928 + C22927 + C22926) * C121 +
                    (C22925 + C22924 + C22923) * C50822) *
                       C22717 +
                   ((C22719 * C972 + C50969 * C980 + C22720 * C971 +
                     C50953 * C979 + C22721 * C970 + C22716 * C978) *
                        C121 +
                    (C22719 * C976 + C50969 * C984 + C22720 * C975 +
                     C50953 * C983 + C22721 * C974 + C22716 * C982) *
                        C50822) *
                       C50810) *
                      C50696 * C250) *
                     C251 +
                 ((((C22929 + C22930 + C22931) * C121 +
                    (C22932 + C22933 + C22934) * C50822) *
                       C22717 +
                   ((C22935 + C22936 + C22937) * C121 +
                    (C22938 + C22939 + C22940) * C50822) *
                       C50810) *
                      C50696 * C249 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50696 * C248 -
                  (((C22721 * C973 + C22716 * C981 + C22720 * C974 +
                     C50953 * C982 + C22719 * C975 + C50969 * C983) *
                        C50822 +
                    (C22721 * C969 + C22716 * C977 + C22720 * C970 +
                     C50953 * C978 + C22719 * C971 + C50969 * C979) *
                        C121) *
                       C50810 +
                   ((C22940 + C22939 + C22938) * C50822 +
                    (C22937 + C22936 + C22935) * C121) *
                       C22717) *
                      C50696 * C250) *
                     C50667)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                    C50953 * C130 + C22721 * C124 + C22716 * C131) *
                       C121 +
                   (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                    C50953 * C144 + C22721 * C135 + C22716 * C145) *
                       C50822) *
                      C22717 +
                  ((C22719 * C256 + C50969 * C270 + C22720 * C255 +
                    C50953 * C269 + C22721 * C254 + C22716 * C268) *
                       C121 +
                   (C22719 * C266 + C50969 * C286 + C22720 * C265 +
                    C50953 * C285 + C22721 * C264 + C22716 * C284) *
                       C50822) *
                      C50810) *
                     C50696 * C50680 * C113 -
                 (((C22721 * C263 + C22716 * C283 + C22720 * C264 +
                    C50953 * C284 + C22719 * C265 + C50969 * C285) *
                       C50822 +
                   (C22721 * C253 + C22716 * C267 + C22720 * C254 +
                    C50953 * C268 + C22719 * C255 + C50969 * C269) *
                       C121) *
                      C50810 +
                  ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50953 * C145 + C22719 * C134 + C50969 * C144) *
                       C50822 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50953 * C131 + C22719 * C123 + C50969 * C130) *
                       C121) *
                      C22717) *
                     C50696 * C50680 * C114 +
                 (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                    C50953 * C132 + C22721 * C126 + C22716 * C138) *
                       C121 +
                   (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                    C50953 * C146 + C22721 * C137 + C22716 * C147) *
                       C50822) *
                      C22717 +
                  ((C22719 * C254 + C50969 * C268 + C22720 * C253 +
                    C50953 * C267 + C22721 * C261 + C22716 * C279) *
                       C121 +
                   (C22719 * C264 + C50969 * C284 + C22720 * C263 +
                    C50953 * C283 + C22721 * C280 + C22716 * C291) *
                       C50822) *
                      C50810) *
                     C50696 * C50680 * C115 -
                 (((C22721 * C538 + C22716 * C540 + C22720 * C280 +
                    C50953 * C291 + C22719 * C263 + C50969 * C283) *
                       C50822 +
                   (C22721 * C537 + C22716 * C539 + C22720 * C261 +
                    C50953 * C279 + C22719 * C253 + C50969 * C267) *
                       C121) *
                      C50810 +
                  ((C22721 * C140 + C22716 * C148 + C22720 * C137 +
                    C50953 * C147 + C22719 * C136 + C50969 * C146) *
                       C50822 +
                   (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                    C50953 * C138 + C22719 * C125 + C50969 * C132) *
                       C121) *
                      C22717) *
                     C50696 * C50680 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C391 -
                  (((C22721 * C786 + C22716 * C792 + C22720 * C785 +
                     C50953 * C791 + C22719 * C784 + C50969 * C790) *
                        C50822 +
                    (C22721 * C777 + C22716 * C782 + C22720 * C776 +
                     C50953 * C781 + C22719 * C775 + C50969 * C780) *
                        C121) *
                       C50810 +
                   ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50953 * C426 + C22719 * C407 + C50969 * C427) *
                        C50822 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50953 * C410 + C22719 * C397 + C50969 * C411) *
                        C121) *
                       C22717) *
                      C392 +
                  (((C22719 * C398 + C50969 * C412 + C22720 * C399 +
                     C50953 * C413 + C22721 * C400 + C22716 * C414) *
                        C121 +
                    (C22719 * C416 + C50969 * C428 + C22720 * C417 +
                     C50953 * C429 + C22721 * C418 + C22716 * C430) *
                        C50822) *
                       C22717 +
                   ((C22719 * C1086 + C50969 * C1094 + C22720 * C1085 +
                     C50953 * C1093 + C22721 * C1084 + C22716 * C1092) *
                        C121 +
                    (C22719 * C1090 + C50969 * C1098 + C22720 * C1089 +
                     C50953 * C1097 + C22721 * C1088 + C22716 * C1096) *
                        C50822) *
                       C50810) *
                      C393) *
                     C50680 * C251 +
                 ((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                     C50953 * C409 + C22721 * C394 + C22716 * C408) *
                        C121 +
                    (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                     C50953 * C425 + C22721 * C404 + C22716 * C424) *
                        C50822) *
                       C22717 +
                   ((C22719 * C776 + C50969 * C781 + C22720 * C777 +
                     C50953 * C782 + C22721 * C778 + C22716 * C783) *
                        C121 +
                    (C22719 * C785 + C50969 * C791 + C22720 * C786 +
                     C50953 * C792 + C22721 * C787 + C22716 * C793) *
                        C50822) *
                       C50810) *
                      C392 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C391 -
                  (((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                     C50953 * C1096 + C22719 * C1089 + C50969 * C1097) *
                        C50822 +
                    (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                     C50953 * C1092 + C22719 * C1085 + C50969 * C1093) *
                        C121) *
                       C50810 +
                   ((C22721 * C419 + C22716 * C431 + C22720 * C418 +
                     C50953 * C430 + C22719 * C417 + C50969 * C429) *
                        C50822 +
                    (C22721 * C401 + C22716 * C415 + C22720 * C400 +
                     C50953 * C414 + C22719 * C399 + C50969 * C413) *
                        C121) *
                       C22717) *
                      C393) *
                     C50680 * C50667)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50929 -
                  (((C22721 * C786 + C22716 * C792 + C22720 * C785 +
                     C50953 * C791 + C22719 * C784 + C50969 * C790) *
                        C50822 +
                    (C22721 * C777 + C22716 * C782 + C22720 * C776 +
                     C50953 * C781 + C22719 * C775 + C50969 * C780) *
                        C121) *
                       C50810 +
                   ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50953 * C426 + C22719 * C407 + C50969 * C427) *
                        C50822 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50953 * C410 + C22719 * C397 + C50969 * C411) *
                        C121) *
                       C22717) *
                      C50760) *
                     C50680 * C50970 +
                 ((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                     C50953 * C409 + C22721 * C394 + C22716 * C408) *
                        C121 +
                    (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                     C50953 * C425 + C22721 * C404 + C22716 * C424) *
                        C50822) *
                       C22717 +
                   ((C22719 * C776 + C50969 * C781 + C22720 * C777 +
                     C50953 * C782 + C22721 * C778 + C22716 * C783) *
                        C121 +
                    (C22719 * C785 + C50969 * C791 + C22720 * C786 +
                     C50953 * C792 + C22721 * C787 + C22716 * C793) *
                        C50822) *
                       C50810) *
                      C50760 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50929) *
                     C50680 * C50971 +
                 ((((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                     C50953 * C132 + C22721 * C126 + C22716 * C138) *
                        C121 +
                    (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                     C50953 * C146 + C22721 * C137 + C22716 * C147) *
                        C50822) *
                       C22717 +
                   ((C23245 + C23246 + C23247) * C121 +
                    (C23248 + C23249 + C23250) * C50822) *
                       C50810) *
                      C50929 -
                  (((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                     C50953 * C793 + C22719 * C786 + C50969 * C792) *
                        C50822 +
                    (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                     C50953 * C783 + C22719 * C777 + C50969 * C782) *
                        C121) *
                       C50810 +
                   ((C22721 * C421 + C22716 * C432 + C22720 * C404 +
                     C50953 * C424 + C22719 * C405 + C50969 * C425) *
                        C50822 +
                    (C22721 * C402 + C22716 * C420 + C22720 * C394 +
                     C50953 * C408 + C22719 * C395 + C50969 * C409) *
                        C121) *
                       C22717) *
                      C50760) *
                     C50680 * C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                    C50953 * C130 + C22721 * C124 + C22716 * C131) *
                       C121 +
                   (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                    C50953 * C144 + C22721 * C135 + C22716 * C145) *
                       C50822) *
                      C22717 +
                  ((C22719 * C256 + C50969 * C270 + C22720 * C255 +
                    C50953 * C269 + C22721 * C254 + C22716 * C268) *
                       C121 +
                   (C22719 * C266 + C50969 * C286 + C22720 * C265 +
                    C50953 * C285 + C22721 * C264 + C22716 * C284) *
                       C50822) *
                      C50810) *
                     C50696 * C50680 * C113 -
                 (((C22721 * C263 + C22716 * C283 + C22720 * C264 +
                    C50953 * C284 + C22719 * C265 + C50969 * C285) *
                       C50822 +
                   (C22721 * C253 + C22716 * C267 + C22720 * C254 +
                    C50953 * C268 + C22719 * C255 + C50969 * C269) *
                       C121) *
                      C50810 +
                  ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                    C50953 * C145 + C22719 * C134 + C50969 * C144) *
                       C50822 +
                   (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                    C50953 * C131 + C22719 * C123 + C50969 * C130) *
                       C121) *
                      C22717) *
                     C50696 * C50680 * C114 +
                 (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                    C50953 * C132 + C22721 * C126 + C22716 * C138) *
                       C121 +
                   (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                    C50953 * C146 + C22721 * C137 + C22716 * C147) *
                       C50822) *
                      C22717 +
                  ((C22719 * C254 + C50969 * C268 + C22720 * C253 +
                    C50953 * C267 + C22721 * C261 + C22716 * C279) *
                       C121 +
                   (C22719 * C264 + C50969 * C284 + C22720 * C263 +
                    C50953 * C283 + C22721 * C280 + C22716 * C291) *
                       C50822) *
                      C50810) *
                     C50696 * C50680 * C115 -
                 (((C22721 * C538 + C22716 * C540 + C22720 * C280 +
                    C50953 * C291 + C22719 * C263 + C50969 * C283) *
                       C50822 +
                   (C22721 * C537 + C22716 * C539 + C22720 * C261 +
                    C50953 * C279 + C22719 * C253 + C50969 * C267) *
                       C121) *
                      C50810 +
                  ((C22721 * C140 + C22716 * C148 + C22720 * C137 +
                    C50953 * C147 + C22719 * C136 + C50969 * C146) *
                       C50822 +
                   (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                    C50953 * C138 + C22719 * C125 + C50969 * C132) *
                       C121) *
                      C22717) *
                     C50696 * C50680 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50696 * C248 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50696 * C249 +
                  (((C22928 + C22927 + C22926) * C121 +
                    (C22925 + C22924 + C22923) * C50822) *
                       C22717 +
                   ((C22719 * C972 + C50969 * C980 + C22720 * C971 +
                     C50953 * C979 + C22721 * C970 + C22716 * C978) *
                        C121 +
                    (C22719 * C976 + C50969 * C984 + C22720 * C975 +
                     C50953 * C983 + C22721 * C974 + C22716 * C982) *
                        C50822) *
                       C50810) *
                      C50696 * C250) *
                     C251 +
                 ((((C22929 + C22930 + C22931) * C121 +
                    (C22932 + C22933 + C22934) * C50822) *
                       C22717 +
                   ((C22935 + C22936 + C22937) * C121 +
                    (C22938 + C22939 + C22940) * C50822) *
                       C50810) *
                      C50696 * C249 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50696 * C248 -
                  (((C22721 * C973 + C22716 * C981 + C22720 * C974 +
                     C50953 * C982 + C22719 * C975 + C50969 * C983) *
                        C50822 +
                    (C22721 * C969 + C22716 * C977 + C22720 * C970 +
                     C50953 * C978 + C22719 * C971 + C50969 * C979) *
                        C121) *
                       C50810 +
                   ((C22940 + C22939 + C22938) * C50822 +
                    (C22937 + C22936 + C22935) * C121) *
                       C22717) *
                      C50696 * C250) *
                     C50667)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50696 * C50972 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50696 * C50973 +
                  (((C22928 + C22927 + C22926) * C121 +
                    (C22925 + C22924 + C22923) * C50822) *
                       C22717 +
                   ((C23883 + C23884 + C23885) * C121 +
                    (C23886 + C23887 + C23888) * C50822) *
                       C50810) *
                      C50696 * C1199) *
                     C50920 +
                 ((((C22929 + C22930 + C22931) * C121 +
                    (C22932 + C22933 + C22934) * C50822) *
                       C22717 +
                   ((C22935 + C22936 + C22937) * C121 +
                    (C22938 + C22939 + C22940) * C50822) *
                       C50810) *
                      C50696 * C50973 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50696 * C50972 -
                  (((C22721 * C973 + C22716 * C981 + C22720 * C974 +
                     C50953 * C982 + C22719 * C975 + C50969 * C983) *
                        C50822 +
                    (C22721 * C969 + C22716 * C977 + C22720 * C970 +
                     C50953 * C978 + C22719 * C971 + C50969 * C979) *
                        C121) *
                       C50810 +
                   ((C22940 + C22939 + C22938) * C50822 +
                    (C22937 + C22936 + C22935) * C121) *
                       C22717) *
                      C50696 * C1199) *
                     C50667)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50929 -
                  (((C23615 + C23616 + C23617) * C50822 +
                    (C23618 + C23619 + C23620) * C121) *
                       C50810 +
                   ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50953 * C426 + C22719 * C407 + C50969 * C427) *
                        C50822 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50953 * C410 + C22719 * C397 + C50969 * C411) *
                        C121) *
                       C22717) *
                      C50760) *
                     C50972 +
                 ((((C23620 + C23619 + C23618) * C121 +
                    (C23617 + C23616 + C23615) * C50822) *
                       C22717 +
                   ((C24551 + C24552 + C24553) * C121 +
                    (C24554 + C24555 + C24556) * C50822) *
                       C50810) *
                      C50760 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50929) *
                     C50973 +
                 ((((C22928 + C22927 + C22926) * C121 +
                    (C22925 + C22924 + C22923) * C50822) *
                       C22717 +
                   ((C23883 + C23884 + C23885) * C121 +
                    (C23886 + C23887 + C23888) * C50822) *
                       C50810) *
                      C50929 -
                  (((C22721 * C4008 + C22716 * C4014 + C22720 * C4009 +
                     C50953 * C4015 + C22719 * C4010 + C50969 * C4016) *
                        C50822 +
                    (C22721 * C4005 + C22716 * C4011 + C22720 * C4006 +
                     C50953 * C4012 + C22719 * C4007 + C50969 * C4013) *
                        C121) *
                       C50810 +
                   ((C24556 + C24555 + C24554) * C50822 +
                    (C24553 + C24552 + C24551) * C121) *
                       C22717) *
                      C50760) *
                     C1199) *
                C50661) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                    C50953 * C130 + C22721 * C124 + C22716 * C131) *
                       C121 +
                   (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                    C50953 * C144 + C22721 * C135 + C22716 * C145) *
                       C50822) *
                      C22717 +
                  ((C22917 + C22918 + C22919) * C121 +
                   (C22920 + C22921 + C22922) * C50822) *
                      C50810) *
                     C50696 * C964 -
                 (((C22923 + C22924 + C22925) * C50822 +
                   (C22926 + C22927 + C22928) * C121) *
                      C50810 +
                  ((C22922 + C22921 + C22920) * C50822 +
                   (C22919 + C22918 + C22917) * C121) *
                      C22717) *
                     C50696 * C965 +
                 (((C22928 + C22927 + C22926) * C121 +
                   (C22925 + C22924 + C22923) * C50822) *
                      C22717 +
                  ((C23883 + C23884 + C23885) * C121 +
                   (C23886 + C23887 + C23888) * C50822) *
                      C50810) *
                     C50696 * C966 -
                 (((C22721 * C3316 + C22716 * C3322 + C22720 * C3317 +
                    C50953 * C3323 + C22719 * C3318 + C50969 * C3324) *
                       C50822 +
                   (C22721 * C3313 + C22716 * C3319 + C22720 * C3314 +
                    C50953 * C3320 + C22719 * C3315 + C50969 * C3321) *
                       C121) *
                      C50810 +
                  ((C23888 + C23887 + C23886) * C50822 +
                   (C23885 + C23884 + C23883) * C121) *
                      C22717) *
                     C50696 * C967) *
                C50661) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50696 * C893 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50696 * C50732) *
                     C895 +
                 ((((C22929 + C22930 + C22931) * C121 +
                    (C22932 + C22933 + C22934) * C50822) *
                       C22717 +
                   ((C22935 + C22936 + C22937) * C121 +
                    (C22938 + C22939 + C22940) * C50822) *
                       C50810) *
                      C50696 * C50732 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50696 * C893) *
                     C896 +
                 ((((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                     C50953 * C132 + C22721 * C126 + C22716 * C138) *
                        C121 +
                    (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                     C50953 * C146 + C22721 * C137 + C22716 * C147) *
                        C50822) *
                       C22717 +
                   ((C23245 + C23246 + C23247) * C121 +
                    (C23248 + C23249 + C23250) * C50822) *
                       C50810) *
                      C50696 * C893 -
                  (((C22721 * C281 + C22716 * C292 + C22720 * C278 +
                     C50953 * C290 + C22719 * C277 + C50969 * C289) *
                        C50822 +
                    (C22721 * C262 + C22716 * C282 + C22720 * C260 +
                     C50953 * C274 + C22719 * C259 + C50969 * C273) *
                        C121) *
                       C50810 +
                   ((C23250 + C23249 + C23248) * C50822 +
                    (C23247 + C23246 + C23245) * C121) *
                       C22717) *
                      C50696 * C50732) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C391 -
                  (((C23615 + C23616 + C23617) * C50822 +
                    (C23618 + C23619 + C23620) * C121) *
                       C50810 +
                   ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50953 * C426 + C22719 * C407 + C50969 * C427) *
                        C50822 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50953 * C410 + C22719 * C397 + C50969 * C411) *
                        C121) *
                       C22717) *
                      C392 +
                  (((C22719 * C398 + C50969 * C412 + C22720 * C399 +
                     C50953 * C413 + C22721 * C400 + C22716 * C414) *
                        C121 +
                    (C22719 * C416 + C50969 * C428 + C22720 * C417 +
                     C50953 * C429 + C22721 * C418 + C22716 * C430) *
                        C50822) *
                       C22717 +
                   ((C24047 + C24048 + C24049) * C121 +
                    (C24050 + C24051 + C24052) * C50822) *
                       C50810) *
                      C393) *
                     C893 +
                 ((((C23620 + C23619 + C23618) * C121 +
                    (C23617 + C23616 + C23615) * C50822) *
                       C22717 +
                   ((C22719 * C1433 + C50969 * C1441 + C22720 * C1432 +
                     C50953 * C1440 + C22721 * C1431 + C22716 * C1439) *
                        C121 +
                    (C22719 * C1437 + C50969 * C1445 + C22720 * C1436 +
                     C50953 * C1444 + C22721 * C1435 + C22716 * C1443) *
                        C50822) *
                       C50810) *
                      C392 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C391 -
                  (((C22721 * C3492 + C22716 * C3498 + C22720 * C3493 +
                     C50953 * C3499 + C22719 * C3494 + C50969 * C3500) *
                        C50822 +
                    (C22721 * C3489 + C22716 * C3495 + C22720 * C3490 +
                     C50953 * C3496 + C22719 * C3491 + C50969 * C3497) *
                        C121) *
                       C50810 +
                   ((C24052 + C24051 + C24050) * C50822 +
                    (C24049 + C24048 + C24047) * C121) *
                       C22717) *
                      C393) *
                     C50732) *
                C50661) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C50929 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50760) *
                      C893 +
                  ((((C23620 + C23619 + C23618) * C121 +
                     (C23617 + C23616 + C23615) * C50822) *
                        C22717 +
                    ((C22719 * C1433 + C50969 * C1441 + C22720 * C1432 +
                      C50953 * C1440 + C22721 * C1431 + C22716 * C1439) *
                         C121 +
                     (C22719 * C1437 + C50969 * C1445 + C22720 * C1436 +
                      C50953 * C1444 + C22721 * C1435 + C22716 * C1443) *
                         C50822) *
                        C50810) *
                       C50760 -
                   (((C22923 + C22924 + C22925) * C50822 +
                     (C22926 + C22927 + C22928) * C121) *
                        C50810 +
                    ((C22922 + C22921 + C22920) * C50822 +
                     (C22919 + C22918 + C22917) * C121) *
                        C22717) *
                       C50929) *
                      C50732) *
                     C50920 +
                 (((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                      C50953 * C409 + C22721 * C394 + C22716 * C408) *
                         C121 +
                     (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                      C50953 * C425 + C22721 * C404 + C22716 * C424) *
                         C50822) *
                        C22717 +
                    ((C23621 + C23622 + C23623) * C121 +
                     (C23624 + C23625 + C23626) * C50822) *
                        C50810) *
                       C50760 -
                   (((C22934 + C22933 + C22932) * C50822 +
                     (C22931 + C22930 + C22929) * C121) *
                        C50810 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C50822 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C121) *
                        C22717) *
                       C50929) *
                      C893 +
                  ((((C22929 + C22930 + C22931) * C121 +
                     (C22932 + C22933 + C22934) * C50822) *
                        C22717 +
                    ((C22935 + C22936 + C22937) * C121 +
                     (C22938 + C22939 + C22940) * C50822) *
                        C50810) *
                       C50929 -
                   (((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                      C50953 * C1443 + C22719 * C1436 + C50969 * C1444) *
                         C50822 +
                     (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                      C50953 * C1439 + C22719 * C1432 + C50969 * C1440) *
                         C121) *
                        C50810 +
                    ((C23626 + C23625 + C23624) * C50822 +
                     (C23623 + C23622 + C23621) * C121) *
                        C22717) *
                       C50760) *
                      C50732) *
                     C50667)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C50696 * C893 -
                  (((C22923 + C22924 + C22925) * C50822 +
                    (C22926 + C22927 + C22928) * C121) *
                       C50810 +
                   ((C22922 + C22921 + C22920) * C50822 +
                    (C22919 + C22918 + C22917) * C121) *
                       C22717) *
                      C50696 * C50732) *
                     C895 +
                 ((((C22929 + C22930 + C22931) * C121 +
                    (C22932 + C22933 + C22934) * C50822) *
                       C22717 +
                   ((C22935 + C22936 + C22937) * C121 +
                    (C22938 + C22939 + C22940) * C50822) *
                       C50810) *
                      C50696 * C50732 -
                  (((C22934 + C22933 + C22932) * C50822 +
                    (C22931 + C22930 + C22929) * C121) *
                       C50810 +
                   ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C50822 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C121) *
                       C22717) *
                      C50696 * C893) *
                     C896 +
                 ((((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                     C50953 * C132 + C22721 * C126 + C22716 * C138) *
                        C121 +
                    (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                     C50953 * C146 + C22721 * C137 + C22716 * C147) *
                        C50822) *
                       C22717 +
                   ((C23245 + C23246 + C23247) * C121 +
                    (C23248 + C23249 + C23250) * C50822) *
                       C50810) *
                      C50696 * C893 -
                  (((C22721 * C281 + C22716 * C292 + C22720 * C278 +
                     C50953 * C290 + C22719 * C277 + C50969 * C289) *
                        C50822 +
                    (C22721 * C262 + C22716 * C282 + C22720 * C260 +
                     C50953 * C274 + C22719 * C259 + C50969 * C273) *
                        C121) *
                       C50810 +
                   ((C23250 + C23249 + C23248) * C50822 +
                    (C23247 + C23246 + C23245) * C121) *
                       C22717) *
                      C50696 * C50732) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                    C50953 * C130 + C22721 * C124 + C22716 * C131) *
                       C121 +
                   (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                    C50953 * C144 + C22721 * C135 + C22716 * C145) *
                       C50822) *
                      C22717 +
                  ((C22917 + C22918 + C22919) * C121 +
                   (C22920 + C22921 + C22922) * C50822) *
                      C50810) *
                     C50696 * C964 -
                 (((C22923 + C22924 + C22925) * C50822 +
                   (C22926 + C22927 + C22928) * C121) *
                      C50810 +
                  ((C22922 + C22921 + C22920) * C50822 +
                   (C22919 + C22918 + C22917) * C121) *
                      C22717) *
                     C50696 * C965 +
                 (((C22928 + C22927 + C22926) * C121 +
                   (C22925 + C22924 + C22923) * C50822) *
                      C22717 +
                  ((C23883 + C23884 + C23885) * C121 +
                   (C23886 + C23887 + C23888) * C50822) *
                      C50810) *
                     C50696 * C966 -
                 (((C22721 * C3316 + C22716 * C3322 + C22720 * C3317 +
                    C50953 * C3323 + C22719 * C3318 + C50969 * C3324) *
                       C50822 +
                   (C22721 * C3313 + C22716 * C3319 + C22720 * C3314 +
                    C50953 * C3320 + C22719 * C3315 + C50969 * C3321) *
                       C121) *
                      C50810 +
                  ((C23888 + C23887 + C23886) * C50822 +
                   (C23885 + C23884 + C23883) * C121) *
                      C22717) *
                     C50696 * C967) *
                C50661) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                       C50953 * C130 + C22721 * C124 + C22716 * C131) *
                          C121 +
                      (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                       C50953 * C144 + C22721 * C135 + C22716 * C145) *
                          C50822) *
                         C22717 +
                     ((C22917 + C22918 + C22919) * C121 +
                      (C22920 + C22921 + C22922) * C50822) *
                         C50810) *
                        C1544 -
                    (((C23615 + C23616 + C23617) * C50822 +
                      (C23618 + C23619 + C23620) * C121) *
                         C50810 +
                     ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                       C50953 * C426 + C22719 * C407 + C50969 * C427) *
                          C50822 +
                      (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                       C50953 * C410 + C22719 * C397 + C50969 * C411) *
                          C121) *
                         C22717) *
                        C50760) *
                       C50928 +
                   ((((C23620 + C23619 + C23618) * C121 +
                      (C23617 + C23616 + C23615) * C50822) *
                         C22717 +
                     ((C24551 + C24552 + C24553) * C121 +
                      (C24554 + C24555 + C24556) * C50822) *
                         C50810) *
                        C50760 -
                    (((C22923 + C22924 + C22925) * C50822 +
                      (C22926 + C22927 + C22928) * C121) *
                         C50810 +
                     ((C22922 + C22921 + C22920) * C50822 +
                      (C22919 + C22918 + C22917) * C121) *
                         C22717) *
                        C1544) *
                       C50732) *
                      C50920 +
                  (((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                       C50953 * C409 + C22721 * C394 + C22716 * C408) *
                          C121 +
                      (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                       C50953 * C425 + C22721 * C404 + C22716 * C424) *
                          C50822) *
                         C22717 +
                     ((C23621 + C23622 + C23623) * C121 +
                      (C23624 + C23625 + C23626) * C50822) *
                         C50810) *
                        C50760 -
                    (((C22934 + C22933 + C22932) * C50822 +
                      (C22931 + C22930 + C22929) * C121) *
                         C50810 +
                     ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50953 * C145 + C22719 * C134 + C50969 * C144) *
                          C50822 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50953 * C131 + C22719 * C123 + C50969 * C130) *
                          C121) *
                         C22717) *
                        C1544) *
                       C50928 +
                   ((((C22929 + C22930 + C22931) * C121 +
                      (C22932 + C22933 + C22934) * C50822) *
                         C22717 +
                     ((C22935 + C22936 + C22937) * C121 +
                      (C22938 + C22939 + C22940) * C50822) *
                         C50810) *
                        C1544 -
                    (((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                       C50953 * C1443 + C22719 * C1436 + C50969 * C1444) *
                          C50822 +
                      (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                       C50953 * C1439 + C22719 * C1432 + C50969 * C1440) *
                          C121) *
                         C50810 +
                     ((C23626 + C23625 + C23624) * C50822 +
                      (C23623 + C23622 + C23621) * C121) *
                         C22717) *
                        C50760) *
                       C50732) *
                      C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C50974 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50975 +
                   (((C22719 * C398 + C50969 * C412 + C22720 * C399 +
                      C50953 * C413 + C22721 * C400 + C22716 * C414) *
                         C121 +
                     (C22719 * C416 + C50969 * C428 + C22720 * C417 +
                      C50953 * C429 + C22721 * C418 + C22716 * C430) *
                         C50822) *
                        C22717 +
                    ((C24047 + C24048 + C24049) * C121 +
                     (C24050 + C24051 + C24052) * C50822) *
                        C50810) *
                       C1960) *
                      C50928 +
                  ((((C23620 + C23619 + C23618) * C121 +
                     (C23617 + C23616 + C23615) * C50822) *
                        C22717 +
                    ((C24551 + C24552 + C24553) * C121 +
                     (C24554 + C24555 + C24556) * C50822) *
                        C50810) *
                       C50975 -
                   (((C22923 + C22924 + C22925) * C50822 +
                     (C22926 + C22927 + C22928) * C121) *
                        C50810 +
                    ((C22922 + C22921 + C22920) * C50822 +
                     (C22919 + C22918 + C22917) * C121) *
                        C22717) *
                       C50974 -
                   (((C22721 * C3492 + C22716 * C3498 + C22720 * C3493 +
                      C50953 * C3499 + C22719 * C3494 + C50969 * C3500) *
                         C50822 +
                     (C22721 * C3489 + C22716 * C3495 + C22720 * C3490 +
                      C50953 * C3496 + C22719 * C3491 + C50969 * C3497) *
                         C121) *
                        C50810 +
                    ((C24052 + C24051 + C24050) * C50822 +
                     (C24049 + C24048 + C24047) * C121) *
                        C22717) *
                       C1960) *
                      C50732) *
                 C50661) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C1544 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50760) *
                      C248 +
                  ((((C23620 + C23619 + C23618) * C121 +
                     (C23617 + C23616 + C23615) * C50822) *
                        C22717 +
                    ((C24551 + C24552 + C24553) * C121 +
                     (C24554 + C24555 + C24556) * C50822) *
                        C50810) *
                       C50760 -
                   (((C22923 + C22924 + C22925) * C50822 +
                     (C22926 + C22927 + C22928) * C121) *
                        C50810 +
                    ((C22922 + C22921 + C22920) * C50822 +
                     (C22919 + C22918 + C22917) * C121) *
                        C22717) *
                       C1544) *
                      C249 +
                  ((((C22928 + C22927 + C22926) * C121 +
                     (C22925 + C22924 + C22923) * C50822) *
                        C22717 +
                    ((C23883 + C23884 + C23885) * C121 +
                     (C23886 + C23887 + C23888) * C50822) *
                        C50810) *
                       C1544 -
                   (((C22721 * C4008 + C22716 * C4014 + C22720 * C4009 +
                      C50953 * C4015 + C22719 * C4010 + C50969 * C4016) *
                         C50822 +
                     (C22721 * C4005 + C22716 * C4011 + C22720 * C4006 +
                      C50953 * C4012 + C22719 * C4007 + C50969 * C4013) *
                         C121) *
                        C50810 +
                    ((C24556 + C24555 + C24554) * C50822 +
                     (C24553 + C24552 + C24551) * C121) *
                        C22717) *
                       C50760) *
                      C250) *
                 C50661) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C1544 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50760) *
                      C50680 * C895 +
                  ((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                      C50953 * C409 + C22721 * C394 + C22716 * C408) *
                         C121 +
                     (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                      C50953 * C425 + C22721 * C404 + C22716 * C424) *
                         C50822) *
                        C22717 +
                    ((C23621 + C23622 + C23623) * C121 +
                     (C23624 + C23625 + C23626) * C50822) *
                        C50810) *
                       C50760 -
                   (((C22934 + C22933 + C22932) * C50822 +
                     (C22931 + C22930 + C22929) * C121) *
                        C50810 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C50822 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C121) *
                        C22717) *
                       C1544) *
                      C50680 * C896 +
                  ((((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C121 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C50822) *
                        C22717 +
                    ((C23245 + C23246 + C23247) * C121 +
                     (C23248 + C23249 + C23250) * C50822) *
                        C50810) *
                       C1544 -
                   (((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                      C50953 * C793 + C22719 * C786 + C50969 * C792) *
                         C50822 +
                     (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                      C50953 * C783 + C22719 * C777 + C50969 * C782) *
                         C121) *
                        C50810 +
                    ((C22721 * C421 + C22716 * C432 + C22720 * C404 +
                      C50953 * C424 + C22719 * C405 + C50969 * C425) *
                         C50822 +
                     (C22721 * C402 + C22716 * C420 + C22720 * C394 +
                      C50953 * C408 + C22719 * C395 + C50969 * C409) *
                         C121) *
                        C22717) *
                       C50760) *
                      C50680 * C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C121 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C50822) *
                       C22717 +
                   ((C22917 + C22918 + C22919) * C121 +
                    (C22920 + C22921 + C22922) * C50822) *
                       C50810) *
                      C1710 -
                  (((C23615 + C23616 + C23617) * C50822 +
                    (C23618 + C23619 + C23620) * C121) *
                       C50810 +
                   ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                     C50953 * C426 + C22719 * C407 + C50969 * C427) *
                        C50822 +
                    (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                     C50953 * C410 + C22719 * C397 + C50969 * C411) *
                        C121) *
                       C22717) *
                      C1711 +
                  (((C22719 * C398 + C50969 * C412 + C22720 * C399 +
                     C50953 * C413 + C22721 * C400 + C22716 * C414) *
                        C121 +
                    (C22719 * C416 + C50969 * C428 + C22720 * C417 +
                     C50953 * C429 + C22721 * C418 + C22716 * C430) *
                        C50822) *
                       C22717 +
                   ((C24047 + C24048 + C24049) * C121 +
                    (C24050 + C24051 + C24052) * C50822) *
                       C50810) *
                      C1712 -
                  (((C22721 * C4428 + C22716 * C4434 + C22720 * C4429 +
                     C50953 * C4435 + C22719 * C4430 + C50969 * C4436) *
                        C50822 +
                    (C22721 * C4425 + C22716 * C4431 + C22720 * C4426 +
                     C50953 * C4432 + C22719 * C4427 + C50969 * C4433) *
                        C121) *
                       C50810 +
                   ((C22721 * C1719 + C22716 * C1727 + C22720 * C1720 +
                     C50953 * C1728 + C22719 * C1721 + C50969 * C1729) *
                        C50822 +
                    (C22721 * C1715 + C22716 * C1723 + C22720 * C1716 +
                     C50953 * C1724 + C22719 * C1717 + C50969 * C1725) *
                        C121) *
                       C22717) *
                      C1713) *
                 C50680 * C50661) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C50974 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50975 +
                   (((C22719 * C398 + C50969 * C412 + C22720 * C399 +
                      C50953 * C413 + C22721 * C400 + C22716 * C414) *
                         C121 +
                     (C22719 * C416 + C50969 * C428 + C22720 * C417 +
                      C50953 * C429 + C22721 * C418 + C22716 * C430) *
                         C50822) *
                        C22717 +
                    ((C24047 + C24048 + C24049) * C121 +
                     (C24050 + C24051 + C24052) * C50822) *
                        C50810) *
                       C1960) *
                      C50680 * C50920 +
                  ((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                      C50953 * C409 + C22721 * C394 + C22716 * C408) *
                         C121 +
                     (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                      C50953 * C425 + C22721 * C404 + C22716 * C424) *
                         C50822) *
                        C22717 +
                    ((C23621 + C23622 + C23623) * C121 +
                     (C23624 + C23625 + C23626) * C50822) *
                        C50810) *
                       C50975 -
                   (((C22934 + C22933 + C22932) * C50822 +
                     (C22931 + C22930 + C22929) * C121) *
                        C50810 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C50822 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C121) *
                        C22717) *
                       C50974 -
                   (((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                      C50953 * C1096 + C22719 * C1089 + C50969 * C1097) *
                         C50822 +
                     (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                      C50953 * C1092 + C22719 * C1085 + C50969 * C1093) *
                         C121) *
                        C50810 +
                    ((C22721 * C419 + C22716 * C431 + C22720 * C418 +
                      C50953 * C430 + C22719 * C417 + C50969 * C429) *
                         C50822 +
                     (C22721 * C401 + C22716 * C415 + C22720 * C400 +
                      C50953 * C414 + C22719 * C399 + C50969 * C413) *
                         C121) *
                        C22717) *
                       C1960) *
                      C50680 * C50667)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C1544 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50760) *
                      C50680 * C895 +
                  ((((C22719 * C396 + C50969 * C410 + C22720 * C395 +
                      C50953 * C409 + C22721 * C394 + C22716 * C408) *
                         C121 +
                     (C22719 * C406 + C50969 * C426 + C22720 * C405 +
                      C50953 * C425 + C22721 * C404 + C22716 * C424) *
                         C50822) *
                        C22717 +
                    ((C23621 + C23622 + C23623) * C121 +
                     (C23624 + C23625 + C23626) * C50822) *
                        C50810) *
                       C50760 -
                   (((C22934 + C22933 + C22932) * C50822 +
                     (C22931 + C22930 + C22929) * C121) *
                        C50810 +
                    ((C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C50822 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C121) *
                        C22717) *
                       C1544) *
                      C50680 * C896 +
                  ((((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C121 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C50822) *
                        C22717 +
                    ((C23245 + C23246 + C23247) * C121 +
                     (C23248 + C23249 + C23250) * C50822) *
                        C50810) *
                       C1544 -
                   (((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                      C50953 * C793 + C22719 * C786 + C50969 * C792) *
                         C50822 +
                     (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                      C50953 * C783 + C22719 * C777 + C50969 * C782) *
                         C121) *
                        C50810 +
                    ((C22721 * C421 + C22716 * C432 + C22720 * C404 +
                      C50953 * C424 + C22719 * C405 + C50969 * C425) *
                         C50822 +
                     (C22721 * C402 + C22716 * C420 + C22720 * C394 +
                      C50953 * C408 + C22719 * C395 + C50969 * C409) *
                         C121) *
                        C22717) *
                       C50760) *
                      C50680 * C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C121 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C50822) *
                        C22717 +
                    ((C22917 + C22918 + C22919) * C121 +
                     (C22920 + C22921 + C22922) * C50822) *
                        C50810) *
                       C1544 -
                   (((C23615 + C23616 + C23617) * C50822 +
                     (C23618 + C23619 + C23620) * C121) *
                        C50810 +
                    ((C22721 * C405 + C22716 * C425 + C22720 * C406 +
                      C50953 * C426 + C22719 * C407 + C50969 * C427) *
                         C50822 +
                     (C22721 * C395 + C22716 * C409 + C22720 * C396 +
                      C50953 * C410 + C22719 * C397 + C50969 * C411) *
                         C121) *
                        C22717) *
                       C50760) *
                      C248 +
                  ((((C23620 + C23619 + C23618) * C121 +
                     (C23617 + C23616 + C23615) * C50822) *
                        C22717 +
                    ((C24551 + C24552 + C24553) * C121 +
                     (C24554 + C24555 + C24556) * C50822) *
                        C50810) *
                       C50760 -
                   (((C22923 + C22924 + C22925) * C50822 +
                     (C22926 + C22927 + C22928) * C121) *
                        C50810 +
                    ((C22922 + C22921 + C22920) * C50822 +
                     (C22919 + C22918 + C22917) * C121) *
                        C22717) *
                       C1544) *
                      C249 +
                  ((((C22928 + C22927 + C22926) * C121 +
                     (C22925 + C22924 + C22923) * C50822) *
                        C22717 +
                    ((C23883 + C23884 + C23885) * C121 +
                     (C23886 + C23887 + C23888) * C50822) *
                        C50810) *
                       C1544 -
                   (((C22721 * C4008 + C22716 * C4014 + C22720 * C4009 +
                      C50953 * C4015 + C22719 * C4010 + C50969 * C4016) *
                         C50822 +
                     (C22721 * C4005 + C22716 * C4011 + C22720 * C4006 +
                      C50953 * C4012 + C22719 * C4007 + C50969 * C4013) *
                         C121) *
                        C50810 +
                    ((C24556 + C24555 + C24554) * C50822 +
                     (C24553 + C24552 + C24551) * C121) *
                        C22717) *
                       C50760) *
                      C250) *
                 C50661) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50696 * C50928 -
           (((C25740 + C25741) * C50822 + (C25742 + C25743) * C121) * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50696 * C50732) *
              C50970 +
          ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
            ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
            ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
               C50696 * C50732 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50696 * C50928) *
              C50971 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C121 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50822) *
                C50976 +
            ((C26074 + C26075) * C121 + (C26076 + C26077) * C50822) * C50965 +
            ((C26078 + C26079) * C121 + (C26080 + C26081) * C50822) * C25534) *
               C50696 * C50928 -
           (((C25536 * C973 + C50635 * C981 + C25535 * C974 + C25530 * C982) *
                 C50822 +
             (C25536 * C969 + C50635 * C977 + C25535 * C970 + C25530 * C978) *
                 C121) *
                C25534 +
            ((C26081 + C26080) * C50822 + (C26079 + C26078) * C121) * C50965 +
            ((C26077 + C26076) * C50822 + (C26075 + C26074) * C121) * C50976) *
               C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C121 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C50822) *
                 C50976 +
             ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
             C25764 * C25534) *
                C50929 -
            (((C26454 + C26455) * C50822 + (C26456 + C26457) * C121) * C25534 +
             ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
             ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                  C50822 +
              (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                  C121) *
                 C50976) *
                C50760) *
               C50928 +
           ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
             ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
             ((C25535 * C4007 + C25530 * C4013 + C25536 * C4006 +
               C50635 * C4012) *
                  C121 +
              (C25535 * C4010 + C25530 * C4016 + C25536 * C4009 +
               C50635 * C4015) *
                  C50822) *
                 C25534) *
                C50760 -
            (((C25740 + C25741) * C50822 + (C25742 + C25743) * C121) * C25534 +
             ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
             ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
                C50929) *
               C50732) *
              C251 +
          (((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                  C121 +
              (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                  C50822) *
                 C50976 +
             ((C26462 + C26463) * C121 + (C26464 + C26465) * C50822) * C50965 +
             ((C26466 + C26467) * C121 + (C26468 + C26469) * C50822) * C25534) *
                C50760 -
            (C25765 * C25534 +
             ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
             ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C50822 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C121) *
                 C50976) *
                C50929) *
               C50928 +
           ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
             ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
             ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
                C50929 -
            (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
               C25530 * C4015) *
                  C50822 +
              (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
               C25530 * C4012) *
                  C121) *
                 C25534 +
             ((C26469 + C26468) * C50822 + (C26467 + C26466) * C121) * C50965 +
             ((C26465 + C26464) * C50822 + (C26463 + C26462) * C121) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50696 * C248 -
           (((C25740 + C25741) * C50822 + (C25742 + C25743) * C121) * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50696 * C249 +
           (C25764 * C50976 +
            ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
            ((C25535 * C3315 + C25530 * C3321 + C25536 * C3314 +
              C50635 * C3320) *
                 C121 +
             (C25535 * C3318 + C25530 * C3324 + C25536 * C3317 +
              C50635 * C3323) *
                 C50822) *
                C25534) *
               C50696 * C250) *
              C251 +
          ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
            ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
            ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
               C50696 * C249 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50696 * C248 -
           (((C25536 * C3316 + C50635 * C3322 + C25535 * C3317 +
              C25530 * C3323) *
                 C50822 +
             (C25536 * C3313 + C50635 * C3319 + C25535 * C3314 +
              C25530 * C3320) *
                 C121) *
                C25534 +
            ((C25755 + C25754) * C50822 + (C25753 + C25752) * C121) * C50965 +
            C25765 * C50976) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C121 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50822) *
               C50976 +
           ((C25535 * C256 + C25530 * C270 + C25536 * C255 + C50635 * C269) *
                C121 +
            (C25535 * C266 + C25530 * C286 + C25536 * C265 + C50635 * C285) *
                C50822) *
               C50965 +
           ((C25535 * C257 + C25530 * C271 + C25536 * C258 + C50635 * C272) *
                C121 +
            (C25535 * C275 + C25530 * C287 + C25536 * C276 + C50635 * C288) *
                C50822) *
               C25534) *
              C50696 * C50680 * C113 -
          (((C25536 * C277 + C50635 * C289 + C25535 * C276 + C25530 * C288) *
                C50822 +
            (C25536 * C259 + C50635 * C273 + C25535 * C258 + C25530 * C272) *
                C121) *
               C25534 +
           ((C25536 * C264 + C50635 * C284 + C25535 * C265 + C25530 * C285) *
                C50822 +
            (C25536 * C254 + C50635 * C268 + C25535 * C255 + C25530 * C269) *
                C121) *
               C50965 +
           ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50822 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C121) *
               C50976) *
              C50696 * C50680 * C114 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C121 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50822) *
               C50976 +
           ((C25535 * C254 + C25530 * C268 + C25536 * C253 + C50635 * C267) *
                C121 +
            (C25535 * C264 + C25530 * C284 + C25536 * C263 + C50635 * C283) *
                C50822) *
               C50965 +
           ((C25535 * C259 + C25530 * C273 + C25536 * C260 + C50635 * C274) *
                C121 +
            (C25535 * C277 + C25530 * C289 + C25536 * C278 + C50635 * C290) *
                C50822) *
               C25534) *
              C50696 * C50680 * C115 -
          (((C25536 * C281 + C50635 * C292 + C25535 * C278 + C25530 * C290) *
                C50822 +
            (C25536 * C262 + C50635 * C282 + C25535 * C260 + C25530 * C274) *
                C121) *
               C25534 +
           ((C25536 * C280 + C50635 * C291 + C25535 * C263 + C25530 * C283) *
                C50822 +
            (C25536 * C261 + C50635 * C279 + C25535 * C253 + C25530 * C267) *
                C121) *
               C50965 +
           ((C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
                C50822 +
            (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
                C121) *
               C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C391 -
           (((C25536 * C1436 + C50635 * C1444 + C25535 * C1437 +
              C25530 * C1445) *
                 C50822 +
             (C25536 * C1432 + C50635 * C1440 + C25535 * C1433 +
              C25530 * C1441) *
                 C121) *
                C25534 +
            ((C25536 * C785 + C50635 * C791 + C25535 * C784 + C25530 * C790) *
                 C50822 +
             (C25536 * C776 + C50635 * C781 + C25535 * C775 + C25530 * C780) *
                 C121) *
                C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C392 +
           (((C25535 * C398 + C25530 * C412 + C25536 * C399 + C50635 * C413) *
                 C121 +
             (C25535 * C416 + C25530 * C428 + C25536 * C417 + C50635 * C429) *
                 C50822) *
                C50976 +
            ((C25535 * C1086 + C25530 * C1094 + C25536 * C1085 +
              C50635 * C1093) *
                 C121 +
             (C25535 * C1090 + C25530 * C1098 + C25536 * C1089 +
              C50635 * C1097) *
                 C50822) *
                C50965 +
            ((C25535 * C3491 + C25530 * C3497 + C25536 * C3490 +
              C50635 * C3496) *
                 C121 +
             (C25535 * C3494 + C25530 * C3500 + C25536 * C3493 +
              C50635 * C3499) *
                 C50822) *
                C25534) *
               C393) *
              C50680 * C251 +
          ((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                 C121 +
             (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                 C50822) *
                C50976 +
            ((C25535 * C776 + C25530 * C781 + C25536 * C777 + C50635 * C782) *
                 C121 +
             (C25535 * C785 + C25530 * C791 + C25536 * C786 + C50635 * C792) *
                 C50822) *
                C50965 +
            ((C25535 * C1432 + C25530 * C1440 + C25536 * C1431 +
              C50635 * C1439) *
                 C121 +
             (C25535 * C1436 + C25530 * C1444 + C25536 * C1435 +
              C50635 * C1443) *
                 C50822) *
                C25534) *
               C392 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C391 -
           (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
              C25530 * C3499) *
                 C50822 +
             (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
              C25530 * C3496) *
                 C121) *
                C25534 +
            ((C25536 * C1088 + C50635 * C1096 + C25535 * C1089 +
              C25530 * C1097) *
                 C50822 +
             (C25536 * C1084 + C50635 * C1092 + C25535 * C1085 +
              C25530 * C1093) *
                 C121) *
                C50965 +
            ((C25536 * C418 + C50635 * C430 + C25535 * C417 + C25530 * C429) *
                 C50822 +
             (C25536 * C400 + C50635 * C414 + C25535 * C399 + C25530 * C413) *
                 C121) *
                C50976) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50929 -
           (((C25536 * C1436 + C50635 * C1444 + C25535 * C1437 +
              C25530 * C1445) *
                 C50822 +
             (C25536 * C1432 + C50635 * C1440 + C25535 * C1433 +
              C25530 * C1441) *
                 C121) *
                C25534 +
            ((C25536 * C785 + C50635 * C791 + C25535 * C784 + C25530 * C790) *
                 C50822 +
             (C25536 * C776 + C50635 * C781 + C25535 * C775 + C25530 * C780) *
                 C121) *
                C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50760) *
              C50680 * C50970 +
          ((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                 C121 +
             (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                 C50822) *
                C50976 +
            ((C25535 * C776 + C25530 * C781 + C25536 * C777 + C50635 * C782) *
                 C121 +
             (C25535 * C785 + C25530 * C791 + C25536 * C786 + C50635 * C792) *
                 C50822) *
                C50965 +
            ((C25535 * C1432 + C25530 * C1440 + C25536 * C1431 +
              C50635 * C1439) *
                 C121 +
             (C25535 * C1436 + C25530 * C1444 + C25536 * C1435 +
              C50635 * C1443) *
                 C50822) *
                C25534) *
               C50760 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50929) *
              C50680 * C50971 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C121 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50822) *
                C50976 +
            ((C26074 + C26075) * C121 + (C26076 + C26077) * C50822) * C50965 +
            ((C26078 + C26079) * C121 + (C26080 + C26081) * C50822) * C25534) *
               C50929 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50822 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C121) *
                C25534 +
            ((C25536 * C787 + C50635 * C793 + C25535 * C786 + C25530 * C792) *
                 C50822 +
             (C25536 * C778 + C50635 * C783 + C25535 * C777 + C25530 * C782) *
                 C121) *
                C50965 +
            ((C25536 * C404 + C50635 * C424 + C25535 * C405 + C25530 * C425) *
                 C50822 +
             (C25536 * C394 + C50635 * C408 + C25535 * C395 + C25530 * C409) *
                 C121) *
                C50976) *
               C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C121 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50822) *
               C50976 +
           ((C25535 * C256 + C25530 * C270 + C25536 * C255 + C50635 * C269) *
                C121 +
            (C25535 * C266 + C25530 * C286 + C25536 * C265 + C50635 * C285) *
                C50822) *
               C50965 +
           ((C25535 * C257 + C25530 * C271 + C25536 * C258 + C50635 * C272) *
                C121 +
            (C25535 * C275 + C25530 * C287 + C25536 * C276 + C50635 * C288) *
                C50822) *
               C25534) *
              C50696 * C50680 * C113 -
          (((C25536 * C277 + C50635 * C289 + C25535 * C276 + C25530 * C288) *
                C50822 +
            (C25536 * C259 + C50635 * C273 + C25535 * C258 + C25530 * C272) *
                C121) *
               C25534 +
           ((C25536 * C264 + C50635 * C284 + C25535 * C265 + C25530 * C285) *
                C50822 +
            (C25536 * C254 + C50635 * C268 + C25535 * C255 + C25530 * C269) *
                C121) *
               C50965 +
           ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50822 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C121) *
               C50976) *
              C50696 * C50680 * C114 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C121 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50822) *
               C50976 +
           ((C25535 * C254 + C25530 * C268 + C25536 * C253 + C50635 * C267) *
                C121 +
            (C25535 * C264 + C25530 * C284 + C25536 * C263 + C50635 * C283) *
                C50822) *
               C50965 +
           ((C25535 * C259 + C25530 * C273 + C25536 * C260 + C50635 * C274) *
                C121 +
            (C25535 * C277 + C25530 * C289 + C25536 * C278 + C50635 * C290) *
                C50822) *
               C25534) *
              C50696 * C50680 * C115 -
          (((C25536 * C281 + C50635 * C292 + C25535 * C278 + C25530 * C290) *
                C50822 +
            (C25536 * C262 + C50635 * C282 + C25535 * C260 + C25530 * C274) *
                C121) *
               C25534 +
           ((C25536 * C280 + C50635 * C291 + C25535 * C263 + C25530 * C283) *
                C50822 +
            (C25536 * C261 + C50635 * C279 + C25535 * C253 + C25530 * C267) *
                C121) *
               C50965 +
           ((C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
                C50822 +
            (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
                C121) *
               C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50696 * C248 -
           (((C25740 + C25741) * C50822 + (C25742 + C25743) * C121) * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50696 * C249 +
           (C25764 * C50976 +
            ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
            ((C25535 * C3315 + C25530 * C3321 + C25536 * C3314 +
              C50635 * C3320) *
                 C121 +
             (C25535 * C3318 + C25530 * C3324 + C25536 * C3317 +
              C50635 * C3323) *
                 C50822) *
                C25534) *
               C50696 * C250) *
              C251 +
          ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
            ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
            ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
               C50696 * C249 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50696 * C248 -
           (((C25536 * C3316 + C50635 * C3322 + C25535 * C3317 +
              C25530 * C3323) *
                 C50822 +
             (C25536 * C3313 + C50635 * C3319 + C25535 * C3314 +
              C25530 * C3320) *
                 C121) *
                C25534 +
            ((C25755 + C25754) * C50822 + (C25753 + C25752) * C121) * C50965 +
            C25765 * C50976) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50696 * C50972 -
           (C26730 * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50696 * C50973 +
           (C25764 * C50976 +
            ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
            ((C26726 + C26727) * C121 + (C26728 + C26729) * C50822) * C25534) *
               C50696 * C1199) *
              C50920 +
          ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
            ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
            ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
               C50696 * C50973 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50696 * C50972 -
           (((C25536 * C3316 + C50635 * C3322 + C25535 * C3317 +
              C25530 * C3323) *
                 C50822 +
             (C25536 * C3313 + C50635 * C3319 + C25535 * C3314 +
              C25530 * C3320) *
                 C121) *
                C25534 +
            ((C25755 + C25754) * C50822 + (C25753 + C25752) * C121) * C50965 +
            C25765 * C50976) *
               C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50929 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50760) *
              C50972 +
          ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
            ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
            ((C27399 + C27400) * C121 + (C27401 + C27402) * C50822) * C25534) *
               C50760 -
           (C26730 * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50929) *
              C50973 +
          ((C25764 * C50976 +
            ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
            ((C26726 + C26727) * C121 + (C26728 + C26729) * C50822) * C25534) *
               C50929 -
           (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
              C25530 * C9652) *
                 C50822 +
             (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
              C25530 * C9650) *
                 C121) *
                C25534 +
            ((C27402 + C27401) * C50822 + (C27400 + C27399) * C121) * C50965 +
            C27403 * C50976) *
               C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C121 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50822) *
               C50976 +
           ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
           C25764 * C25534) *
              C50696 * C964 -
          (C26730 * C25534 +
           ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
           ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
              C50696 * C965 +
          (C25764 * C50976 +
           ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
           ((C26726 + C26727) * C121 + (C26728 + C26729) * C50822) * C25534) *
              C50696 * C966 -
          (((C25536 * C8958 + C50635 * C8962 + C25535 * C8959 +
             C25530 * C8963) *
                C50822 +
            (C25536 * C8956 + C50635 * C8960 + C25535 * C8957 +
             C25530 * C8961) *
                C121) *
               C25534 +
           ((C26729 + C26728) * C50822 + (C26727 + C26726) * C121) * C50965 +
           C26730 * C50976) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50696 * C893 -
           (((C25740 + C25741) * C50822 + (C25742 + C25743) * C121) * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50696 * C50732) *
              C895 +
          ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
            ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
            ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
               C50696 * C50732 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50696 * C893) *
              C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C121 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50822) *
                C50976 +
            ((C26074 + C26075) * C121 + (C26076 + C26077) * C50822) * C50965 +
            ((C26078 + C26079) * C121 + (C26080 + C26081) * C50822) * C25534) *
               C50696 * C893 -
           (((C25536 * C973 + C50635 * C981 + C25535 * C974 + C25530 * C982) *
                 C50822 +
             (C25536 * C969 + C50635 * C977 + C25535 * C970 + C25530 * C978) *
                 C121) *
                C25534 +
            ((C26081 + C26080) * C50822 + (C26079 + C26078) * C121) * C50965 +
            ((C26077 + C26076) * C50822 + (C26075 + C26074) * C121) * C50976) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C391 -
           (((C26454 + C26455) * C50822 + (C26456 + C26457) * C121) * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C392 +
           (((C25535 * C398 + C25530 * C412 + C25536 * C399 + C50635 * C413) *
                 C121 +
             (C25535 * C416 + C25530 * C428 + C25536 * C417 + C50635 * C429) *
                 C50822) *
                C50976 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50822) * C50965 +
            ((C26897 + C26898) * C121 + (C26899 + C26900) * C50822) * C25534) *
               C393) *
              C893 +
          ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
            ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
            ((C25535 * C4007 + C25530 * C4013 + C25536 * C4006 +
              C50635 * C4012) *
                 C121 +
             (C25535 * C4010 + C25530 * C4016 + C25536 * C4009 +
              C50635 * C4015) *
                 C50822) *
                C25534) *
               C392 -
           (C26730 * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C391 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50822 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C121) *
                C25534 +
            ((C26900 + C26899) * C50822 + (C26898 + C26897) * C121) * C50965 +
            ((C26896 + C26895) * C50822 + (C26894 + C26893) * C121) * C50976) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C121 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C50822) *
                 C50976 +
             ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
             C25764 * C25534) *
                C50929 -
            (((C26454 + C26455) * C50822 + (C26456 + C26457) * C121) * C25534 +
             ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
             ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                  C50822 +
              (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                  C121) *
                 C50976) *
                C50760) *
               C893 +
           ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
             ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
             ((C25535 * C4007 + C25530 * C4013 + C25536 * C4006 +
               C50635 * C4012) *
                  C121 +
              (C25535 * C4010 + C25530 * C4016 + C25536 * C4009 +
               C50635 * C4015) *
                  C50822) *
                 C25534) *
                C50760 -
            (C26730 * C25534 +
             ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
             ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
                C50929) *
               C50732) *
              C50920 +
          (((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                  C121 +
              (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                  C50822) *
                 C50976 +
             ((C26462 + C26463) * C121 + (C26464 + C26465) * C50822) * C50965 +
             ((C26466 + C26467) * C121 + (C26468 + C26469) * C50822) * C25534) *
                C50760 -
            (C25765 * C25534 +
             ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
             ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C50822 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C121) *
                 C50976) *
                C50929) *
               C893 +
           ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
             ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
             ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
                C50929 -
            (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
               C25530 * C4015) *
                  C50822 +
              (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
               C25530 * C4012) *
                  C121) *
                 C25534 +
             ((C26469 + C26468) * C50822 + (C26467 + C26466) * C121) * C50965 +
             ((C26465 + C26464) * C50822 + (C26463 + C26462) * C121) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50696 * C893 -
           (((C25740 + C25741) * C50822 + (C25742 + C25743) * C121) * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50696 * C50732) *
              C895 +
          ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
            ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
            ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
               C50696 * C50732 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50696 * C893) *
              C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C121 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50822) *
                C50976 +
            ((C26074 + C26075) * C121 + (C26076 + C26077) * C50822) * C50965 +
            ((C26078 + C26079) * C121 + (C26080 + C26081) * C50822) * C25534) *
               C50696 * C893 -
           (((C25536 * C973 + C50635 * C981 + C25535 * C974 + C25530 * C982) *
                 C50822 +
             (C25536 * C969 + C50635 * C977 + C25535 * C970 + C25530 * C978) *
                 C121) *
                C25534 +
            ((C26081 + C26080) * C50822 + (C26079 + C26078) * C121) * C50965 +
            ((C26077 + C26076) * C50822 + (C26075 + C26074) * C121) * C50976) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C121 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50822) *
               C50976 +
           ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
           C25764 * C25534) *
              C50696 * C964 -
          (C26730 * C25534 +
           ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
           ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
              C50696 * C965 +
          (C25764 * C50976 +
           ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
           ((C26726 + C26727) * C121 + (C26728 + C26729) * C50822) * C25534) *
              C50696 * C966 -
          (((C25536 * C8958 + C50635 * C8962 + C25535 * C8959 +
             C25530 * C8963) *
                C50822 +
            (C25536 * C8956 + C50635 * C8960 + C25535 * C8957 +
             C25530 * C8961) *
                C121) *
               C25534 +
           ((C26729 + C26728) * C50822 + (C26727 + C26726) * C121) * C50965 +
           C26730 * C50976) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C121 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C50822) *
                 C50976 +
             ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
             C25764 * C25534) *
                C1544 -
            (C27403 * C25534 +
             ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
             ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                  C50822 +
              (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                  C121) *
                 C50976) *
                C50760) *
               C50928 +
           ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
             ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
             ((C27399 + C27400) * C121 + (C27401 + C27402) * C50822) * C25534) *
                C50760 -
            (C26730 * C25534 +
             ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
             ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
                C1544) *
               C50732) *
              C50920 +
          (((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                  C121 +
              (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                  C50822) *
                 C50976 +
             ((C26462 + C26463) * C121 + (C26464 + C26465) * C50822) * C50965 +
             ((C26466 + C26467) * C121 + (C26468 + C26469) * C50822) * C25534) *
                C50760 -
            (C25765 * C25534 +
             ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
             ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C50822 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C121) *
                 C50976) *
                C1544) *
               C50928 +
           ((((C25744 + C25745) * C121 + (C25746 + C25747) * C50822) * C50976 +
             ((C25748 + C25749) * C121 + (C25750 + C25751) * C50822) * C50965 +
             ((C25752 + C25753) * C121 + (C25754 + C25755) * C50822) * C25534) *
                C1544 -
            (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
               C25530 * C4015) *
                  C50822 +
              (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
               C25530 * C4012) *
                  C121) *
                 C25534 +
             ((C26469 + C26468) * C50822 + (C26467 + C26466) * C121) * C50965 +
             ((C26465 + C26464) * C50822 + (C26463 + C26462) * C121) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50974 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50975 +
           (((C25535 * C398 + C25530 * C412 + C25536 * C399 + C50635 * C413) *
                 C121 +
             (C25535 * C416 + C25530 * C428 + C25536 * C417 + C50635 * C429) *
                 C50822) *
                C50976 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50822) * C50965 +
            ((C26897 + C26898) * C121 + (C26899 + C26900) * C50822) * C25534) *
               C1960) *
              C50928 +
          ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
            ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
            ((C27399 + C27400) * C121 + (C27401 + C27402) * C50822) * C25534) *
               C50975 -
           (C26730 * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C50974 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50822 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C121) *
                C25534 +
            ((C26900 + C26899) * C50822 + (C26898 + C26897) * C121) * C50965 +
            ((C26896 + C26895) * C50822 + (C26894 + C26893) * C121) * C50976) *
               C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C1544 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50760) *
              C248 +
          ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
            ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
            ((C27399 + C27400) * C121 + (C27401 + C27402) * C50822) * C25534) *
               C50760 -
           (C26730 * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C1544) *
              C249 +
          ((C25764 * C50976 +
            ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
            ((C26726 + C26727) * C121 + (C26728 + C26729) * C50822) * C25534) *
               C1544 -
           (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
              C25530 * C9652) *
                 C50822 +
             (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
              C25530 * C9650) *
                 C121) *
                C25534 +
            ((C27402 + C27401) * C50822 + (C27400 + C27399) * C121) * C50965 +
            C27403 * C50976) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C1544 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50760) *
              C50680 * C895 +
          ((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                 C121 +
             (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                 C50822) *
                C50976 +
            ((C26462 + C26463) * C121 + (C26464 + C26465) * C50822) * C50965 +
            ((C26466 + C26467) * C121 + (C26468 + C26469) * C50822) * C25534) *
               C50760 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C1544) *
              C50680 * C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C121 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50822) *
                C50976 +
            ((C26074 + C26075) * C121 + (C26076 + C26077) * C50822) * C50965 +
            ((C26078 + C26079) * C121 + (C26080 + C26081) * C50822) * C25534) *
               C1544 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50822 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C121) *
                C25534 +
            ((C25536 * C787 + C50635 * C793 + C25535 * C786 + C25530 * C792) *
                 C50822 +
             (C25536 * C778 + C50635 * C783 + C25535 * C777 + C25530 * C782) *
                 C121) *
                C50965 +
            ((C25536 * C404 + C50635 * C424 + C25535 * C405 + C25530 * C425) *
                 C50822 +
             (C25536 * C394 + C50635 * C408 + C25535 * C395 + C25530 * C409) *
                 C121) *
                C50976) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C121 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50822) *
               C50976 +
           ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
           C25764 * C25534) *
              C1710 -
          (C27403 * C25534 +
           ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
           ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                C50822 +
            (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                C121) *
               C50976) *
              C1711 +
          (((C25535 * C398 + C25530 * C412 + C25536 * C399 + C50635 * C413) *
                C121 +
            (C25535 * C416 + C25530 * C428 + C25536 * C417 + C50635 * C429) *
                C50822) *
               C50976 +
           ((C26893 + C26894) * C121 + (C26895 + C26896) * C50822) * C50965 +
           ((C26897 + C26898) * C121 + (C26899 + C26900) * C50822) * C25534) *
              C1712 -
          (((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
             C25530 * C10067) *
                C50822 +
            (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
             C25530 * C10065) *
                C121) *
               C25534 +
           ((C25536 * C4429 + C50635 * C4435 + C25535 * C4430 +
             C25530 * C4436) *
                C50822 +
            (C25536 * C4426 + C50635 * C4432 + C25535 * C4427 +
             C25530 * C4433) *
                C121) *
               C50965 +
           ((C25536 * C1720 + C50635 * C1728 + C25535 * C1721 +
             C25530 * C1729) *
                C50822 +
            (C25536 * C1716 + C50635 * C1724 + C25535 * C1717 +
             C25530 * C1725) *
                C121) *
               C50976) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C50974 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50975 +
           (((C25535 * C398 + C25530 * C412 + C25536 * C399 + C50635 * C413) *
                 C121 +
             (C25535 * C416 + C25530 * C428 + C25536 * C417 + C50635 * C429) *
                 C50822) *
                C50976 +
            ((C26893 + C26894) * C121 + (C26895 + C26896) * C50822) * C50965 +
            ((C26897 + C26898) * C121 + (C26899 + C26900) * C50822) * C25534) *
               C1960) *
              C50680 * C50920 +
          ((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                 C121 +
             (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                 C50822) *
                C50976 +
            ((C26462 + C26463) * C121 + (C26464 + C26465) * C50822) * C50965 +
            ((C26466 + C26467) * C121 + (C26468 + C26469) * C50822) * C25534) *
               C50975 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C50974 -
           (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
              C25530 * C3499) *
                 C50822 +
             (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
              C25530 * C3496) *
                 C121) *
                C25534 +
            ((C25536 * C1088 + C50635 * C1096 + C25535 * C1089 +
              C25530 * C1097) *
                 C50822 +
             (C25536 * C1084 + C50635 * C1092 + C25535 * C1085 +
              C25530 * C1093) *
                 C121) *
                C50965 +
            ((C25536 * C418 + C50635 * C430 + C25535 * C417 + C25530 * C429) *
                 C50822 +
             (C25536 * C400 + C50635 * C414 + C25535 * C399 + C25530 * C413) *
                 C121) *
                C50976) *
               C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C1544 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50760) *
              C50680 * C895 +
          ((((C25535 * C396 + C25530 * C410 + C25536 * C395 + C50635 * C409) *
                 C121 +
             (C25535 * C406 + C25530 * C426 + C25536 * C405 + C50635 * C425) *
                 C50822) *
                C50976 +
            ((C26462 + C26463) * C121 + (C26464 + C26465) * C50822) * C50965 +
            ((C26466 + C26467) * C121 + (C26468 + C26469) * C50822) * C25534) *
               C50760 -
           (C25765 * C25534 +
            ((C25747 + C25746) * C50822 + (C25745 + C25744) * C121) * C50965 +
            ((C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50822 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C121) *
                C50976) *
               C1544) *
              C50680 * C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C121 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50822) *
                C50976 +
            ((C26074 + C26075) * C121 + (C26076 + C26077) * C50822) * C50965 +
            ((C26078 + C26079) * C121 + (C26080 + C26081) * C50822) * C25534) *
               C1544 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50822 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C121) *
                C25534 +
            ((C25536 * C787 + C50635 * C793 + C25535 * C786 + C25530 * C792) *
                 C50822 +
             (C25536 * C778 + C50635 * C783 + C25535 * C777 + C25530 * C782) *
                 C121) *
                C50965 +
            ((C25536 * C404 + C50635 * C424 + C25535 * C405 + C25530 * C425) *
                 C50822 +
             (C25536 * C394 + C50635 * C408 + C25535 * C395 + C25530 * C409) *
                 C121) *
                C50976) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C121 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50822) *
                C50976 +
            ((C25732 + C25733) * C121 + (C25734 + C25735) * C50822) * C50965 +
            C25764 * C25534) *
               C1544 -
           (C27403 * C25534 +
            ((C26458 + C26459) * C50822 + (C26460 + C26461) * C121) * C50965 +
            ((C25536 * C406 + C50635 * C426 + C25535 * C407 + C25530 * C427) *
                 C50822 +
             (C25536 * C396 + C50635 * C410 + C25535 * C397 + C25530 * C411) *
                 C121) *
                C50976) *
               C50760) *
              C248 +
          ((((C26461 + C26460) * C121 + (C26459 + C26458) * C50822) * C50976 +
            ((C26457 + C26456) * C121 + (C26455 + C26454) * C50822) * C50965 +
            ((C27399 + C27400) * C121 + (C27401 + C27402) * C50822) * C25534) *
               C50760 -
           (C26730 * C25534 +
            ((C25739 + C25738) * C50822 + (C25737 + C25736) * C121) * C50965 +
            ((C25735 + C25734) * C50822 + (C25733 + C25732) * C121) * C50976) *
               C1544) *
              C249 +
          ((C25764 * C50976 +
            ((C25743 + C25742) * C121 + (C25741 + C25740) * C50822) * C50965 +
            ((C26726 + C26727) * C121 + (C26728 + C26729) * C50822) * C25534) *
               C1544 -
           (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
              C25530 * C9652) *
                 C50822 +
             (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
              C25530 * C9650) *
                 C121) *
                C25534 +
            ((C27402 + C27401) * C50822 + (C27400 + C27399) * C121) * C50965 +
            C27403 * C50976) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
                C50810) *
               C50696 * C50928 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            ((C26458 + C26459) * C50834 + (C26460 + C26461) * C5024 +
             (C25735 + C25734) * C50940 + (C25733 + C25732) * C5023) *
                C22717) *
               C50696 * C50732) *
              C50970 +
          ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
             (C26462 + C26463) * C5024 + (C26464 + C26465) * C50834) *
                C22717 +
            ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
             (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50732 -
           (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
             (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50696 * C50928) *
              C50971 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C5023 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50940 +
             (C25535 * C395 + C25530 * C409 + C25536 * C394 + C50635 * C408) *
                 C5024 +
             (C25535 * C405 + C25530 * C425 + C25536 * C404 + C50635 * C424) *
                 C50834) *
                C22717 +
            ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
             (C29060 + C29061) * C5024 + (C29062 + C29063) * C50834) *
                C50810) *
               C50696 * C50928 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50834 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C5024 +
             (C26081 + C26080) * C50940 + (C26079 + C26078) * C5023) *
                C50810 +
            ((C29063 + C29062) * C50834 + (C29061 + C29060) * C5024 +
             (C26077 + C26076) * C50940 + (C26075 + C26074) * C5023) *
                C22717) *
               C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C5023 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C50940 +
              (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                 C22717 +
             ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
              C29528 * C5024 + C29529 * C50834) *
                 C50810) *
                C50929 -
            (((C26896 + C26895) * C50834 + (C26894 + C26893) * C5024 +
              C29530 * C50940 + C29531 * C5023) *
                 C50810 +
             ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
              (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                 C22717) *
                C50760) *
               C50928 +
           (((C29528 * C5023 + C29529 * C50940 + (C26893 + C26894) * C5024 +
              (C26895 + C26896) * C50834) *
                 C22717 +
             ((C26457 + C26456) * C5023 + (C26455 + C26454) * C50940 +
              (C26897 + C26898) * C5024 + (C26899 + C26900) * C50834) *
                 C50810) *
                C50760 -
            ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
              (C25737 + C25736) * C5023) *
                 C50810 +
             (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
              (C25733 + C25732) * C5023) *
                 C22717) *
                C50929) *
               C50732) *
              C251 +
          (((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
              (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                 C22717 +
             (C29532 * C5023 + C29533 * C50940 + (C28854 + C28855) * C5024 +
              (C28856 + C28857) * C50834) *
                 C50810) *
                C50760 -
            ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
              (C25745 + C25744) * C5023) *
                 C50810 +
             ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
              (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C50940 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C5023) *
                 C22717) *
                C50929) *
               C50928 +
           ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
              C29532 * C5024 + C29533 * C50834) *
                 C22717 +
             ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
              (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                 C50810) *
                C50929 -
            (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
               C25530 * C3499) *
                  C50834 +
              (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
               C25530 * C3496) *
                  C5024 +
              (C26469 + C26468) * C50940 + (C26467 + C26466) * C5023) *
                 C50810 +
             ((C28857 + C28856) * C50834 + (C28855 + C28854) * C5024 +
              C29534 * C50940 + C29535 * C5023) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C25535 * C397 + C25530 * C411 + C25536 * C396 + C50635 * C410) *
                 C5024 +
             (C25535 * C407 + C25530 * C427 + C25536 * C406 + C50635 * C426) *
                 C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
                C50810) *
               C50696 * C248 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            ((C26458 + C26459) * C50834 + (C26460 + C26461) * C5024 +
             (C25735 + C25734) * C50940 + (C25733 + C25732) * C5023) *
                C22717) *
               C50696 * C249 +
           ((C25756 * C5023 + C25757 * C50940 + (C26457 + C26456) * C5024 +
             (C26455 + C26454) * C50834) *
                C22717 +
            ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
             (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
             (C26462 + C26463) * C5024 + (C26464 + C26465) * C50834) *
                C22717 +
            ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
             (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C249 -
           (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
             (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
                C50810 +
            ((C25536 * C405 + C50635 * C425 + C25535 * C406 + C25530 * C426) *
                 C50834 +
             (C25536 * C395 + C50635 * C409 + C25535 * C396 + C25530 * C410) *
                 C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50696 * C248 -
           (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
              C25530 * C4015) *
                 C50834 +
             (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
              C25530 * C4012) *
                 C5024 +
             (C25755 + C25754) * C50940 + (C25753 + C25752) * C5023) *
                C50810 +
            ((C26469 + C26468) * C50834 + (C26467 + C26466) * C5024 +
             C25758 * C50940 + C25759 * C5023) *
                C22717) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C5023 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50940 +
            (C25535 * C397 + C25530 * C411 + C25536 * C396 + C50635 * C410) *
                C5024 +
            (C25535 * C407 + C25530 * C427 + C25536 * C406 + C50635 * C426) *
                C50834) *
               C22717 +
           ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
            (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
            (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
               C50810 +
           ((C25536 * C405 + C50635 * C425 + C25535 * C406 + C25530 * C426) *
                C50834 +
            (C25536 * C395 + C50635 * C409 + C25535 * C396 + C25530 * C410) *
                C5024 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50940 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C5023) *
               C22717) *
              C50696 * C50680 * C114 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C5023 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50940 +
            (C25535 * C395 + C25530 * C409 + C25536 * C394 + C50635 * C408) *
                C5024 +
            (C25535 * C405 + C25530 * C425 + C25536 * C404 + C50635 * C424) *
                C50834) *
               C22717 +
           ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
            (C25535 * C777 + C25530 * C782 + C25536 * C778 + C50635 * C783) *
                C5024 +
            (C25535 * C786 + C25530 * C792 + C25536 * C787 + C50635 * C793) *
                C50834) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C25536 * C788 + C50635 * C794 + C25535 * C787 + C25530 * C793) *
                C50834 +
            (C25536 * C779 + C50635 * C789 + C25535 * C778 + C25530 * C783) *
                C5024 +
            (C25536 * C280 + C50635 * C291 + C25535 * C263 + C25530 * C283) *
                C50940 +
            (C25536 * C261 + C50635 * C279 + C25535 * C253 + C25530 * C267) *
                C5023) *
               C50810 +
           ((C25536 * C421 + C50635 * C432 + C25535 * C404 + C25530 * C424) *
                C50834 +
            (C25536 * C402 + C50635 * C420 + C25535 * C394 + C25530 * C408) *
                C5024 +
            (C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
                C50940 +
            (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
                C5023) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
                C50810) *
               C391 -
           (((C26896 + C26895) * C50834 + (C26894 + C26893) * C5024 +
             (C26458 + C26459) * C50940 + (C26460 + C26461) * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C392 +
           (((C28845 + C28844) * C5023 + (C28843 + C28842) * C50940 +
             (C25535 * C1717 + C25530 * C1725 + C25536 * C1716 +
              C50635 * C1724) *
                 C5024 +
             (C25535 * C1721 + C25530 * C1729 + C25536 * C1720 +
              C50635 * C1728) *
                 C50834) *
                C22717 +
            ((C26893 + C26894) * C5023 + (C26895 + C26896) * C50940 +
             (C25535 * C4427 + C25530 * C4433 + C25536 * C4426 +
              C50635 * C4432) *
                 C5024 +
             (C25535 * C4430 + C25530 * C4436 + C25536 * C4429 +
              C50635 * C4435) *
                 C50834) *
                C50810) *
               C393) *
              C50680 * C251 +
          ((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
             (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                C22717 +
            ((C26462 + C26463) * C5023 + (C26464 + C26465) * C50940 +
             (C28854 + C28855) * C5024 + (C28856 + C28857) * C50834) *
                C50810) *
               C392 -
           (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
             (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C391 -
           (((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C50834 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C5024 +
             (C28857 + C28856) * C50940 + (C28855 + C28854) * C5023) *
                C50810 +
            ((C25536 * C1719 + C50635 * C1727 + C25535 * C1720 +
              C25530 * C1728) *
                 C50834 +
             (C25536 * C1715 + C50635 * C1723 + C25535 * C1716 +
              C25530 * C1724) *
                 C5024 +
             (C28853 + C28852) * C50940 + (C28851 + C28850) * C5023) *
                C22717) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
                C50810) *
               C50929 -
           (((C26896 + C26895) * C50834 + (C26894 + C26893) * C5024 +
             (C26458 + C26459) * C50940 + (C26460 + C26461) * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50760) *
              C50680 * C50970 +
          ((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
             (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                C22717 +
            ((C26462 + C26463) * C5023 + (C26464 + C26465) * C50940 +
             (C28854 + C28855) * C5024 + (C28856 + C28857) * C50834) *
                C50810) *
               C50760 -
           (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
             (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50929) *
              C50680 * C50971 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C5023 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50940 +
             (C29266 + C29267) * C5024 + (C29268 + C29269) * C50834) *
                C22717 +
            ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
             (C29060 + C29061) * C5024 + (C29062 + C29063) * C50834) *
                C50810) *
               C50929 -
           (((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
              C25530 * C1096) *
                 C50834 +
             (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
              C25530 * C1092) *
                 C5024 +
             (C29063 + C29062) * C50940 + (C29061 + C29060) * C5023) *
                C50810 +
            ((C25536 * C419 + C50635 * C431 + C25535 * C418 + C25530 * C430) *
                 C50834 +
             (C25536 * C401 + C50635 * C415 + C25535 * C400 + C25530 * C414) *
                 C5024 +
             (C29269 + C29268) * C50940 + (C29267 + C29266) * C5023) *
                C22717) *
               C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C5023 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50940 +
            (C25535 * C397 + C25530 * C411 + C25536 * C396 + C50635 * C410) *
                C5024 +
            (C25535 * C407 + C25530 * C427 + C25536 * C406 + C50635 * C426) *
                C50834) *
               C22717 +
           ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
            (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
            (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
               C50810 +
           ((C25536 * C405 + C50635 * C425 + C25535 * C406 + C25530 * C426) *
                C50834 +
            (C25536 * C395 + C50635 * C409 + C25535 * C396 + C25530 * C410) *
                C5024 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50940 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C5023) *
               C22717) *
              C50696 * C50680 * C114 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C5023 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50940 +
            (C25535 * C395 + C25530 * C409 + C25536 * C394 + C50635 * C408) *
                C5024 +
            (C25535 * C405 + C25530 * C425 + C25536 * C404 + C50635 * C424) *
                C50834) *
               C22717 +
           ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
            (C25535 * C777 + C25530 * C782 + C25536 * C778 + C50635 * C783) *
                C5024 +
            (C25535 * C786 + C25530 * C792 + C25536 * C787 + C50635 * C793) *
                C50834) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C25536 * C788 + C50635 * C794 + C25535 * C787 + C25530 * C793) *
                C50834 +
            (C25536 * C779 + C50635 * C789 + C25535 * C778 + C25530 * C783) *
                C5024 +
            (C25536 * C280 + C50635 * C291 + C25535 * C263 + C25530 * C283) *
                C50940 +
            (C25536 * C261 + C50635 * C279 + C25535 * C253 + C25530 * C267) *
                C5023) *
               C50810 +
           ((C25536 * C421 + C50635 * C432 + C25535 * C404 + C25530 * C424) *
                C50834 +
            (C25536 * C402 + C50635 * C420 + C25535 * C394 + C25530 * C408) *
                C5024 +
            (C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
                C50940 +
            (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
                C5023) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C25535 * C397 + C25530 * C411 + C25536 * C396 + C50635 * C410) *
                 C5024 +
             (C25535 * C407 + C25530 * C427 + C25536 * C406 + C50635 * C426) *
                 C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             (C26461 + C26460) * C5024 + (C26459 + C26458) * C50834) *
                C50810) *
               C50696 * C248 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            ((C26458 + C26459) * C50834 + (C26460 + C26461) * C5024 +
             (C25735 + C25734) * C50940 + (C25733 + C25732) * C5023) *
                C22717) *
               C50696 * C249 +
           ((C25756 * C5023 + C25757 * C50940 + (C26457 + C26456) * C5024 +
             (C26455 + C26454) * C50834) *
                C22717 +
            ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
             (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
             (C26462 + C26463) * C5024 + (C26464 + C26465) * C50834) *
                C22717 +
            ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
             (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C249 -
           (((C26465 + C26464) * C50834 + (C26463 + C26462) * C5024 +
             (C25747 + C25746) * C50940 + (C25745 + C25744) * C5023) *
                C50810 +
            ((C25536 * C405 + C50635 * C425 + C25535 * C406 + C25530 * C426) *
                 C50834 +
             (C25536 * C395 + C50635 * C409 + C25535 * C396 + C25530 * C410) *
                 C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50696 * C248 -
           (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
              C25530 * C4015) *
                 C50834 +
             (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
              C25530 * C4012) *
                 C5024 +
             (C25755 + C25754) * C50940 + (C25753 + C25752) * C5023) *
                C50810 +
            ((C26469 + C26468) * C50834 + (C26467 + C26466) * C5024 +
             C25758 * C50940 + C25759 * C5023) *
                C22717) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C50696 * C50972 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C50696 * C50973 +
           ((C25756 * C5023 + C25757 * C50940 + (C26457 + C26456) * C5024 +
             (C26455 + C26454) * C50834) *
                C22717 +
            ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
             (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
                C50810) *
               C50696 * C1199) *
              C50920 +
          ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
             C29532 * C5024 + C29533 * C50834) *
                C22717 +
            ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
             (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50973 -
           ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
             (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50696 * C50972 -
           (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
              C25530 * C4015) *
                 C50834 +
             (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
              C25530 * C4012) *
                 C5024 +
             (C25755 + C25754) * C50940 + (C25753 + C25752) * C5023) *
                C50810 +
            ((C26469 + C26468) * C50834 + (C26467 + C26466) * C5024 +
             C25758 * C50940 + C25759 * C5023) *
                C22717) *
               C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C50929 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50760) *
              C50972 +
          (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
             C30057 * C50834) *
                C22717 +
            (C30716 * C5023 + C30717 * C50940 + (C26897 + C26898) * C5024 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50760 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C50929) *
              C50973 +
          (((C25756 * C5023 + C25757 * C50940 + C30716 * C5024 +
             C30717 * C50834) *
                C22717 +
            ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
             (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
                C50810) *
               C50929 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50834 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C5024 +
             (C27402 + C27401) * C50940 + (C27400 + C27399) * C5023) *
                C50810 +
            ((C26900 + C26899) * C50834 + (C26898 + C26897) * C5024 +
             C27387 * C50940 + C27388 * C5023) *
                C22717) *
               C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C5023 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50940 +
            (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
               C22717 +
           ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
            C29528 * C5024 + C29529 * C50834) *
               C50810) *
              C50696 * C964 -
          ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
            (C25737 + C25736) * C5023) *
               C50810 +
           (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
            (C25733 + C25732) * C5023) *
               C22717) *
              C50696 * C965 +
          ((C25756 * C5023 + C25757 * C50940 + (C26457 + C26456) * C5024 +
            (C26455 + C26454) * C50834) *
               C22717 +
           ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
            (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
               C50810) *
              C50696 * C966 -
          (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
             C25530 * C9652) *
                C50834 +
            (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
             C25530 * C9650) *
                C5024 +
            (C26729 + C26728) * C50940 + (C26727 + C26726) * C5023) *
               C50810 +
           ((C27402 + C27401) * C50834 + (C27400 + C27399) * C5024 +
            C26714 * C50940 + C26715 * C5023) *
               C22717) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C50696 * C893 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C50696 * C50732) *
              C895 +
          ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
             C29532 * C5024 + C29533 * C50834) *
                C22717 +
            ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
             (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
             (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50696 * C893) *
              C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C5023 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50940 +
             (C29266 + C29267) * C5024 + (C29268 + C29269) * C50834) *
                C22717 +
            ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
             (C29060 + C29061) * C5024 + (C29062 + C29063) * C50834) *
                C50810) *
               C50696 * C893 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50834 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C5024 +
             (C26081 + C26080) * C50940 + (C26079 + C26078) * C5023) *
                C50810 +
            ((C29063 + C29062) * C50834 + (C29061 + C29060) * C5024 +
             (C26077 + C26076) * C50940 + (C26075 + C26074) * C5023) *
                C22717) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C391 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C392 +
           (((C28845 + C28844) * C5023 + (C28843 + C28842) * C50940 +
             (C25535 * C1717 + C25530 * C1725 + C25536 * C1716 +
              C50635 * C1724) *
                 C5024 +
             (C25535 * C1721 + C25530 * C1729 + C25536 * C1720 +
              C50635 * C1728) *
                 C50834) *
                C22717 +
            (C30056 * C5023 + C30057 * C50940 + (C30066 + C30067) * C5024 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C393) *
              C893 +
          (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
             C30057 * C50834) *
                C22717 +
            ((C26457 + C26456) * C5023 + (C26455 + C26454) * C50940 +
             (C26897 + C26898) * C5024 + (C26899 + C26900) * C50834) *
                C50810) *
               C392 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C391 -
           (((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
              C25530 * C10067) *
                 C50834 +
             (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
              C25530 * C10065) *
                 C5024 +
             (C26900 + C26899) * C50940 + (C26898 + C26897) * C5023) *
                C50810 +
            ((C30069 + C30068) * C50834 + (C30067 + C30066) * C5024 +
             C30054 * C50940 + C30055 * C5023) *
                C22717) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C5023 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C50940 +
              (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                 C22717 +
             ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
              C29528 * C5024 + C29529 * C50834) *
                 C50810) *
                C50929 -
            ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
              C29531 * C5023) *
                 C50810 +
             ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
              (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                 C22717) *
                C50760) *
               C893 +
           (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
              C30057 * C50834) *
                 C22717 +
             ((C26457 + C26456) * C5023 + (C26455 + C26454) * C50940 +
              (C26897 + C26898) * C5024 + (C26899 + C26900) * C50834) *
                 C50810) *
                C50760 -
            ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
              (C25737 + C25736) * C5023) *
                 C50810 +
             (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
              (C25733 + C25732) * C5023) *
                 C22717) *
                C50929) *
               C50732) *
              C50920 +
          (((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
              (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                 C22717 +
             (C29532 * C5023 + C29533 * C50940 + (C28854 + C28855) * C5024 +
              (C28856 + C28857) * C50834) *
                 C50810) *
                C50760 -
            ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
              (C25745 + C25744) * C5023) *
                 C50810 +
             ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
              (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C50940 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C5023) *
                 C22717) *
                C50929) *
               C893 +
           ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
              C29532 * C5024 + C29533 * C50834) *
                 C22717 +
             ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
              (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                 C50810) *
                C50929 -
            (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
               C25530 * C3499) *
                  C50834 +
              (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
               C25530 * C3496) *
                  C5024 +
              (C26469 + C26468) * C50940 + (C26467 + C26466) * C5023) *
                 C50810 +
             ((C28857 + C28856) * C50834 + (C28855 + C28854) * C5024 +
              C29534 * C50940 + C29535 * C5023) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C50696 * C893 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C50696 * C50732) *
              C895 +
          ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
             C29532 * C5024 + C29533 * C50834) *
                C22717 +
            ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
             (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
             (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50696 * C893) *
              C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C5023 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50940 +
             (C29266 + C29267) * C5024 + (C29268 + C29269) * C50834) *
                C22717 +
            ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
             (C29060 + C29061) * C5024 + (C29062 + C29063) * C50834) *
                C50810) *
               C50696 * C893 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50834 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C5024 +
             (C26081 + C26080) * C50940 + (C26079 + C26078) * C5023) *
                C50810 +
            ((C29063 + C29062) * C50834 + (C29061 + C29060) * C5024 +
             (C26077 + C26076) * C50940 + (C26075 + C26074) * C5023) *
                C22717) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C5023 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50940 +
            (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
               C22717 +
           ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
            C29528 * C5024 + C29529 * C50834) *
               C50810) *
              C50696 * C964 -
          ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
            (C25737 + C25736) * C5023) *
               C50810 +
           (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
            (C25733 + C25732) * C5023) *
               C22717) *
              C50696 * C965 +
          ((C25756 * C5023 + C25757 * C50940 + (C26457 + C26456) * C5024 +
            (C26455 + C26454) * C50834) *
               C22717 +
           ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
            (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
               C50810) *
              C50696 * C966 -
          (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
             C25530 * C9652) *
                C50834 +
            (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
             C25530 * C9650) *
                C5024 +
            (C26729 + C26728) * C50940 + (C26727 + C26726) * C5023) *
               C50810 +
           ((C27402 + C27401) * C50834 + (C27400 + C27399) * C5024 +
            C26714 * C50940 + C26715 * C5023) *
               C22717) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C5023 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C50940 +
              (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                 C22717 +
             ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
              C29528 * C5024 + C29529 * C50834) *
                 C50810) *
                C1544 -
            ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
              C29531 * C5023) *
                 C50810 +
             ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
              (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                 C22717) *
                C50760) *
               C50928 +
           (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
              C30057 * C50834) *
                 C22717 +
             (C30716 * C5023 + C30717 * C50940 + (C26897 + C26898) * C5024 +
              (C26899 + C26900) * C50834) *
                 C50810) *
                C50760 -
            ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
              (C25737 + C25736) * C5023) *
                 C50810 +
             (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
              (C25733 + C25732) * C5023) *
                 C22717) *
                C1544) *
               C50732) *
              C50920 +
          (((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
              (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                 C22717 +
             (C29532 * C5023 + C29533 * C50940 + (C28854 + C28855) * C5024 +
              (C28856 + C28857) * C50834) *
                 C50810) *
                C50760 -
            ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
              (C25745 + C25744) * C5023) *
                 C50810 +
             ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
              (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C50940 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C5023) *
                 C22717) *
                C1544) *
               C50928 +
           ((((C25744 + C25745) * C5023 + (C25746 + C25747) * C50940 +
              C29532 * C5024 + C29533 * C50834) *
                 C22717 +
             ((C25748 + C25749) * C5023 + (C25750 + C25751) * C50940 +
              (C26466 + C26467) * C5024 + (C26468 + C26469) * C50834) *
                 C50810) *
                C1544 -
            (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
               C25530 * C3499) *
                  C50834 +
              (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
               C25530 * C3496) *
                  C5024 +
              (C26469 + C26468) * C50940 + (C26467 + C26466) * C5023) *
                 C50810 +
             ((C28857 + C28856) * C50834 + (C28855 + C28854) * C5024 +
              C29534 * C50940 + C29535 * C5023) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C50974 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50975 +
           (((C28845 + C28844) * C5023 + (C28843 + C28842) * C50940 +
             (C31244 + C31245) * C5024 + (C31246 + C31247) * C50834) *
                C22717 +
            (C30056 * C5023 + C30057 * C50940 + (C30066 + C30067) * C5024 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C1960) *
              C50928 +
          (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
             C30057 * C50834) *
                C22717 +
            (C30716 * C5023 + C30717 * C50940 + (C26897 + C26898) * C5024 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50975 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C50974 -
           (((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
              C25530 * C10067) *
                 C50834 +
             (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
              C25530 * C10065) *
                 C5024 +
             (C26900 + C26899) * C50940 + (C26898 + C26897) * C5023) *
                C50810 +
            ((C30069 + C30068) * C50834 + (C30067 + C30066) * C5024 +
             C30054 * C50940 + C30055 * C5023) *
                C22717) *
               C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50760) *
              C248 +
          (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
             C30057 * C50834) *
                C22717 +
            (C30716 * C5023 + C30717 * C50940 + (C26897 + C26898) * C5024 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50760 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C1544) *
              C249 +
          (((C25756 * C5023 + C25757 * C50940 + C30716 * C5024 +
             C30717 * C50834) *
                C22717 +
            ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
             (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50834 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C5024 +
             (C27402 + C27401) * C50940 + (C27400 + C27399) * C5023) *
                C50810 +
            ((C26900 + C26899) * C50834 + (C26898 + C26897) * C5024 +
             C27387 * C50940 + C27388 * C5023) *
                C22717) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50760) *
              C50680 * C895 +
          ((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
             (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                C22717 +
            (C29532 * C5023 + C29533 * C50940 + (C28854 + C28855) * C5024 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50760 -
           ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
             (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C1544) *
              C50680 * C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C5023 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50940 +
             (C29266 + C29267) * C5024 + (C29268 + C29269) * C50834) *
                C22717 +
            ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
             (C29060 + C29061) * C5024 + (C29062 + C29063) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
              C25530 * C1096) *
                 C50834 +
             (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
              C25530 * C1092) *
                 C5024 +
             (C29063 + C29062) * C50940 + (C29061 + C29060) * C5023) *
                C50810 +
            ((C25536 * C419 + C50635 * C431 + C25535 * C418 + C25530 * C430) *
                 C50834 +
             (C25536 * C401 + C50635 * C415 + C25535 * C400 + C25530 * C414) *
                 C5024 +
             (C29269 + C29268) * C50940 + (C29267 + C29266) * C5023) *
                C22717) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C5023 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50940 +
            (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
               C22717 +
           ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
            C29528 * C5024 + C29529 * C50834) *
               C50810) *
              C1710 -
          ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
            C29531 * C5023) *
               C50810 +
           ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
            (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
               C22717) *
              C1711 +
          (((C28845 + C28844) * C5023 + (C28843 + C28842) * C50940 +
            (C31244 + C31245) * C5024 + (C31246 + C31247) * C50834) *
               C22717 +
           (C30056 * C5023 + C30057 * C50940 + (C30066 + C30067) * C5024 +
            (C30068 + C30069) * C50834) *
               C50810) *
              C1712 -
          (((C25536 * C16693 + C50635 * C16695 + C25535 * C14812 +
             C25530 * C14815) *
                C50834 +
            (C25536 * C16692 + C50635 * C16694 + C25535 * C14809 +
             C25530 * C14813) *
                C5024 +
            (C30069 + C30068) * C50940 + (C30067 + C30066) * C5023) *
               C50810 +
           ((C25536 * C7163 + C50635 * C7169 + C25535 * C7164 +
             C25530 * C7170) *
                C50834 +
            (C25536 * C7160 + C50635 * C7166 + C25535 * C7161 +
             C25530 * C7167) *
                C5024 +
            (C31247 + C31246) * C50940 + (C31245 + C31244) * C5023) *
               C22717) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C50974 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50975 +
           (((C28845 + C28844) * C5023 + (C28843 + C28842) * C50940 +
             (C31244 + C31245) * C5024 + (C31246 + C31247) * C50834) *
                C22717 +
            (C30056 * C5023 + C30057 * C50940 + (C30066 + C30067) * C5024 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C1960) *
              C50680 * C50920 +
          ((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
             (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                C22717 +
            (C29532 * C5023 + C29533 * C50940 + (C28854 + C28855) * C5024 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50975 -
           ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
             (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C50974 -
           (((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C50834 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C5024 +
             (C28857 + C28856) * C50940 + (C28855 + C28854) * C5023) *
                C50810 +
            ((C25536 * C1719 + C50635 * C1727 + C25535 * C1720 +
              C25530 * C1728) *
                 C50834 +
             (C25536 * C1715 + C50635 * C1723 + C25535 * C1716 +
              C25530 * C1724) *
                 C5024 +
             (C28853 + C28852) * C50940 + (C28851 + C28850) * C5023) *
                C22717) *
               C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50760) *
              C50680 * C895 +
          ((((C28846 + C28847) * C5023 + (C28848 + C28849) * C50940 +
             (C28850 + C28851) * C5024 + (C28852 + C28853) * C50834) *
                C22717 +
            (C29532 * C5023 + C29533 * C50940 + (C28854 + C28855) * C5024 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50760 -
           ((C29534 * C50834 + C29535 * C5024 + (C25747 + C25746) * C50940 +
             (C25745 + C25744) * C5023) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C5024 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50940 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C5023) *
                C22717) *
               C1544) *
              C50680 * C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C5023 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C50940 +
             (C29266 + C29267) * C5024 + (C29268 + C29269) * C50834) *
                C22717 +
            ((C26074 + C26075) * C5023 + (C26076 + C26077) * C50940 +
             (C29060 + C29061) * C5024 + (C29062 + C29063) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
              C25530 * C1096) *
                 C50834 +
             (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
              C25530 * C1092) *
                 C5024 +
             (C29063 + C29062) * C50940 + (C29061 + C29060) * C5023) *
                C50810 +
            ((C25536 * C419 + C50635 * C431 + C25535 * C418 + C25530 * C430) *
                 C50834 +
             (C25536 * C401 + C50635 * C415 + C25535 * C400 + C25530 * C414) *
                 C5024 +
             (C29269 + C29268) * C50940 + (C29267 + C29266) * C5023) *
                C22717) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C5023 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50940 +
             (C28838 + C28839) * C5024 + (C28840 + C28841) * C50834) *
                C22717 +
            ((C25732 + C25733) * C5023 + (C25734 + C25735) * C50940 +
             C29528 * C5024 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C5024 + C29530 * C50940 +
             C29531 * C5023) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C5024 +
             (C28841 + C28840) * C50940 + (C28839 + C28838) * C5023) *
                C22717) *
               C50760) *
              C248 +
          (((C29528 * C5023 + C29529 * C50940 + C30056 * C5024 +
             C30057 * C50834) *
                C22717 +
            (C30716 * C5023 + C30717 * C50940 + (C26897 + C26898) * C5024 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50760 -
           ((C27387 * C50834 + C27388 * C5024 + (C25739 + C25738) * C50940 +
             (C25737 + C25736) * C5023) *
                C50810 +
            (C29530 * C50834 + C29531 * C5024 + (C25735 + C25734) * C50940 +
             (C25733 + C25732) * C5023) *
                C22717) *
               C1544) *
              C249 +
          (((C25756 * C5023 + C25757 * C50940 + C30716 * C5024 +
             C30717 * C50834) *
                C22717 +
            ((C25743 + C25742) * C5023 + (C25741 + C25740) * C50940 +
             (C27399 + C27400) * C5024 + (C27401 + C27402) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50834 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C5024 +
             (C27402 + C27401) * C50940 + (C27400 + C27399) * C5023) *
                C50810 +
            ((C26900 + C26899) * C50834 + (C26898 + C26897) * C5024 +
             C27387 * C50940 + C27388 * C5023) *
                C22717) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
                C50810) *
               C50696 * C50928 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            ((C8701 + C8702) * C50834 + (C8703 + C8704) * C31994 +
             (C7978 + C7977) * C31991 + (C7976 + C7975) * C31993) *
                C22717) *
               C50696 * C50732) *
              C50970 +
          ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
             (C8705 + C8706) * C31994 + (C8707 + C8708) * C50834) *
                C22717 +
            ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
             (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                C50810) *
               C50696 * C50732 -
           (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
             (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50696 * C50928) *
              C50971 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C31993 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C31991 +
             (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
                C22717 +
            ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
             (C41522 + C41523) * C31994 + (C41524 + C41525) * C50834) *
                C50810) *
               C50696 * C50928 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50834 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C31994 +
             (C8324 + C8323) * C31991 + (C8322 + C8321) * C31993) *
                C50810 +
            ((C41525 + C41524) * C50834 + (C41523 + C41522) * C31994 +
             (C8320 + C8319) * C31991 + (C8318 + C8317) * C31993) *
                C22717) *
               C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C31993 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C31991 +
              (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                 C22717 +
             ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
              C41978 * C31994 + C41979 * C50834) *
                 C50810) *
                C50929 -
            ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
              C41981 * C31993) *
                 C50810 +
             ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
              (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                 C22717) *
                C50760) *
               C50928 +
           (((C41978 * C31993 + C41979 * C31991 + (C9152 + C9153) * C31994 +
              (C9154 + C9155) * C50834) *
                 C22717 +
             ((C8700 + C8699) * C31993 + (C8698 + C8697) * C31991 +
              (C9156 + C9157) * C31994 + (C9158 + C9159) * C50834) *
                 C50810) *
                C50760 -
            ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
              (C7980 + C7979) * C31993) *
                 C50810 +
             (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
              (C7976 + C7975) * C31993) *
                 C22717) *
                C50929) *
               C50732) *
              C251 +
          (((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
              (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                 C22717 +
             (C41982 * C31993 + C41983 * C31991 + (C16299 + C16300) * C31994 +
              (C16301 + C16302) * C50834) *
                 C50810) *
                C50760 -
            ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
              (C7988 + C7987) * C31993) *
                 C50810 +
             ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
              (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C31991 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C31993) *
                 C22717) *
                C50929) *
               C50928 +
           ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
              C41982 * C31994 + C41983 * C50834) *
                 C22717 +
             ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
              (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                 C50810) *
                C50929 -
            (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
               C50911 * C3499) *
                  C50834 +
              (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
               C50911 * C3496) *
                  C31994 +
              (C8712 + C8711) * C31991 + (C8710 + C8709) * C31993) *
                 C50810 +
             ((C16302 + C16301) * C50834 + (C16300 + C16299) * C31994 +
              C41984 * C31991 + C41985 * C31993) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
                C50810) *
               C50696 * C248 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            ((C8701 + C8702) * C50834 + (C8703 + C8704) * C31994 +
             (C7978 + C7977) * C31991 + (C7976 + C7975) * C31993) *
                C22717) *
               C50696 * C249 +
           ((C7999 * C31993 + C8000 * C31991 + (C8700 + C8699) * C31994 +
             (C8698 + C8697) * C50834) *
                C22717 +
            ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
             (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
             (C8705 + C8706) * C31994 + (C8707 + C8708) * C50834) *
                C22717 +
            ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
             (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                C50810) *
               C50696 * C249 -
           (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
             (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50696 * C248 -
           (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
              C50911 * C4015) *
                 C50834 +
             (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
              C50911 * C4012) *
                 C31994 +
             (C7998 + C7997) * C31991 + (C7996 + C7995) * C31993) *
                C50810 +
            ((C8712 + C8711) * C50834 + (C8710 + C8709) * C31994 +
             C8001 * C31991 + C8002 * C31993) *
                C22717) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C31993 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C31991 +
            (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
               C22717 +
           ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
            (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
            (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
               C50810 +
           ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C31991 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C31993) *
               C22717) *
              C50696 * C50680 * C114 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C31993 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C31991 +
            (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
               C22717 +
           ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
            (C49747 * C777 + C50911 * C782 + C49740 * C778 + C50635 * C783) *
                C31994 +
            (C49747 * C786 + C50911 * C792 + C49740 * C787 + C50635 * C793) *
                C50834) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C49740 * C788 + C50635 * C794 + C49747 * C787 + C50911 * C793) *
                C50834 +
            (C49740 * C779 + C50635 * C789 + C49747 * C778 + C50911 * C783) *
                C31994 +
            (C49740 * C280 + C50635 * C291 + C49747 * C263 + C50911 * C283) *
                C31991 +
            (C49740 * C261 + C50635 * C279 + C49747 * C253 + C50911 * C267) *
                C31993) *
               C50810 +
           ((C49740 * C421 + C50635 * C432 + C49747 * C404 + C50911 * C424) *
                C50834 +
            (C49740 * C402 + C50635 * C420 + C49747 * C394 + C50911 * C408) *
                C31994 +
            (C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
                C31991 +
            (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
                C31993) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
                C50810) *
               C391 -
           ((C16705 * C50834 + C16706 * C31994 + (C8701 + C8702) * C31991 +
             (C8703 + C8704) * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C392 +
           ((C15777 * C31993 + C15778 * C31991 + (C15764 + C15763) * C31994 +
             (C15762 + C15761) * C50834) *
                C22717 +
            ((C9152 + C9153) * C31993 + (C9154 + C9155) * C31991 +
             (C16707 + C16708) * C31994 + (C16709 + C16710) * C50834) *
                C50810) *
               C393) *
              C50680 * C251 +
          ((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
             (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                C22717 +
            ((C8705 + C8706) * C31993 + (C8707 + C8708) * C31991 +
             (C16299 + C16300) * C31994 + (C16301 + C16302) * C50834) *
                C50810) *
               C392 -
           (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
             (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C391 -
           (((C49740 * C4428 + C50635 * C4434 + C49747 * C4429 +
              C50911 * C4435) *
                 C50834 +
             (C49740 * C4425 + C50635 * C4431 + C49747 * C4426 +
              C50911 * C4432) *
                 C31994 +
             (C16302 + C16301) * C31991 + (C16300 + C16299) * C31993) *
                C50810 +
            ((C15776 + C15775) * C50834 + (C15774 + C15773) * C31994 +
             C15779 * C31991 + C15780 * C31993) *
                C22717) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
                C50810) *
               C50929 -
           ((C16705 * C50834 + C16706 * C31994 + (C8701 + C8702) * C31991 +
             (C8703 + C8704) * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50760) *
              C50680 * C50970 +
          ((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
             (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                C22717 +
            ((C8705 + C8706) * C31993 + (C8707 + C8708) * C31991 +
             (C16299 + C16300) * C31994 + (C16301 + C16302) * C50834) *
                C50810) *
               C50760 -
           (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
             (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50929) *
              C50680 * C50971 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C31993 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C31991 +
             (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
                C22717 +
            ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
             (C41522 + C41523) * C31994 + (C41524 + C41525) * C50834) *
                C50810) *
               C50929 -
           (((C49740 * C1087 + C50635 * C1095 + C49747 * C1088 +
              C50911 * C1096) *
                 C50834 +
             (C49740 * C1083 + C50635 * C1091 + C49747 * C1084 +
              C50911 * C1092) *
                 C31994 +
             (C41525 + C41524) * C31991 + (C41523 + C41522) * C31993) *
                C50810 +
            ((C16096 + C16095) * C50834 + (C16094 + C16093) * C31994 +
             (C16092 + C16091) * C31991 + (C16090 + C16089) * C31993) *
                C22717) *
               C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C31993 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C31991 +
            (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
               C22717 +
           ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
            (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
            (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
               C50810 +
           ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C31991 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C31993) *
               C22717) *
              C50696 * C50680 * C114 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C31993 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C31991 +
            (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
               C22717 +
           ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
            (C49747 * C777 + C50911 * C782 + C49740 * C778 + C50635 * C783) *
                C31994 +
            (C49747 * C786 + C50911 * C792 + C49740 * C787 + C50635 * C793) *
                C50834) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C49740 * C788 + C50635 * C794 + C49747 * C787 + C50911 * C793) *
                C50834 +
            (C49740 * C779 + C50635 * C789 + C49747 * C778 + C50911 * C783) *
                C31994 +
            (C49740 * C280 + C50635 * C291 + C49747 * C263 + C50911 * C283) *
                C31991 +
            (C49740 * C261 + C50635 * C279 + C49747 * C253 + C50911 * C267) *
                C31993) *
               C50810 +
           ((C49740 * C421 + C50635 * C432 + C49747 * C404 + C50911 * C424) *
                C50834 +
            (C49740 * C402 + C50635 * C420 + C49747 * C394 + C50911 * C408) *
                C31994 +
            (C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
                C31991 +
            (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
                C31993) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             (C8704 + C8703) * C31994 + (C8702 + C8701) * C50834) *
                C50810) *
               C50696 * C248 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            ((C8701 + C8702) * C50834 + (C8703 + C8704) * C31994 +
             (C7978 + C7977) * C31991 + (C7976 + C7975) * C31993) *
                C22717) *
               C50696 * C249 +
           ((C7999 * C31993 + C8000 * C31991 + (C8700 + C8699) * C31994 +
             (C8698 + C8697) * C50834) *
                C22717 +
            ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
             (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
             (C8705 + C8706) * C31994 + (C8707 + C8708) * C50834) *
                C22717 +
            ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
             (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                C50810) *
               C50696 * C249 -
           (((C8708 + C8707) * C50834 + (C8706 + C8705) * C31994 +
             (C7990 + C7989) * C31991 + (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50696 * C248 -
           (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
              C50911 * C4015) *
                 C50834 +
             (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
              C50911 * C4012) *
                 C31994 +
             (C7998 + C7997) * C31991 + (C7996 + C7995) * C31993) *
                C50810 +
            ((C8712 + C8711) * C50834 + (C8710 + C8709) * C31994 +
             C8001 * C31991 + C8002 * C31993) *
                C22717) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C50696 * C50972 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C50696 * C50973 +
           ((C7999 * C31993 + C8000 * C31991 + (C8700 + C8699) * C31994 +
             (C8698 + C8697) * C50834) *
                C22717 +
            ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
             (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
                C50810) *
               C50696 * C1199) *
              C50920 +
          ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
             C41982 * C31994 + C41983 * C50834) *
                C22717 +
            ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
             (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                C50810) *
               C50696 * C50973 -
           ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
             (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50696 * C50972 -
           (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
              C50911 * C4015) *
                 C50834 +
             (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
              C50911 * C4012) *
                 C31994 +
             (C7998 + C7997) * C31991 + (C7996 + C7995) * C31993) *
                C50810 +
            ((C8712 + C8711) * C50834 + (C8710 + C8709) * C31994 +
             C8001 * C31991 + C8002 * C31993) *
                C22717) *
               C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C50929 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50760) *
              C50972 +
          (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
             C42505 * C50834) *
                C22717 +
            (C43152 * C31993 + C43153 * C31991 + (C9156 + C9157) * C31994 +
             (C9158 + C9159) * C50834) *
                C50810) *
               C50760 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C50929) *
              C50973 +
          (((C7999 * C31993 + C8000 * C31991 + C43152 * C31994 +
             C43153 * C50834) *
                C22717 +
            ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
             (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
                C50810) *
               C50929 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50834 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C31994 +
             (C9669 + C9668) * C31991 + (C9667 + C9666) * C31993) *
                C50810 +
            ((C9159 + C9158) * C50834 + (C9157 + C9156) * C31994 +
             C9654 * C31991 + C9655 * C31993) *
                C22717) *
               C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C31993 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C31991 +
            (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
               C22717 +
           ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
            C41978 * C31994 + C41979 * C50834) *
               C50810) *
              C50696 * C964 -
          ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
            (C7980 + C7979) * C31993) *
               C50810 +
           (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
            (C7976 + C7975) * C31993) *
               C22717) *
              C50696 * C965 +
          ((C7999 * C31993 + C8000 * C31991 + (C8700 + C8699) * C31994 +
            (C8698 + C8697) * C50834) *
               C22717 +
           ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
            (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
               C50810) *
              C50696 * C966 -
          (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
             C50911 * C9652) *
                C50834 +
            (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
             C50911 * C9650) *
                C31994 +
            (C8980 + C8979) * C31991 + (C8978 + C8977) * C31993) *
               C50810 +
           ((C9669 + C9668) * C50834 + (C9667 + C9666) * C31994 +
            C8965 * C31991 + C8966 * C31993) *
               C22717) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C50696 * C893 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C50696 * C50732) *
              C895 +
          ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
             C41982 * C31994 + C41983 * C50834) *
                C22717 +
            ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
             (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
             (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50696 * C893) *
              C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C31993 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C31991 +
             (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
                C22717 +
            ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
             (C41522 + C41523) * C31994 + (C41524 + C41525) * C50834) *
                C50810) *
               C50696 * C893 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50834 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C31994 +
             (C8324 + C8323) * C31991 + (C8322 + C8321) * C31993) *
                C50810 +
            ((C41525 + C41524) * C50834 + (C41523 + C41522) * C31994 +
             (C8320 + C8319) * C31991 + (C8318 + C8317) * C31993) *
                C22717) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C391 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C392 +
           ((C15777 * C31993 + C15778 * C31991 + (C15764 + C15763) * C31994 +
             (C15762 + C15761) * C50834) *
                C22717 +
            (C42504 * C31993 + C42505 * C31991 + (C16707 + C16708) * C31994 +
             (C16709 + C16710) * C50834) *
                C50810) *
               C393) *
              C893 +
          (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
             C42505 * C50834) *
                C22717 +
            ((C8700 + C8699) * C31993 + (C8698 + C8697) * C31991 +
             (C9156 + C9157) * C31994 + (C9158 + C9159) * C50834) *
                C50810) *
               C392 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C391 -
           (((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
              C50911 * C10067) *
                 C50834 +
             (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
              C50911 * C10065) *
                 C31994 +
             (C9159 + C9158) * C31991 + (C9157 + C9156) * C31993) *
                C50810 +
            ((C16710 + C16709) * C50834 + (C16708 + C16707) * C31994 +
             C16705 * C31991 + C16706 * C31993) *
                C22717) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C31993 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C31991 +
              (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                 C22717 +
             ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
              C41978 * C31994 + C41979 * C50834) *
                 C50810) *
                C50929 -
            ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
              C41981 * C31993) *
                 C50810 +
             ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
              (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                 C22717) *
                C50760) *
               C893 +
           (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
              C42505 * C50834) *
                 C22717 +
             ((C8700 + C8699) * C31993 + (C8698 + C8697) * C31991 +
              (C9156 + C9157) * C31994 + (C9158 + C9159) * C50834) *
                 C50810) *
                C50760 -
            ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
              (C7980 + C7979) * C31993) *
                 C50810 +
             (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
              (C7976 + C7975) * C31993) *
                 C22717) *
                C50929) *
               C50732) *
              C50920 +
          (((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
              (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                 C22717 +
             (C41982 * C31993 + C41983 * C31991 + (C16299 + C16300) * C31994 +
              (C16301 + C16302) * C50834) *
                 C50810) *
                C50760 -
            ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
              (C7988 + C7987) * C31993) *
                 C50810 +
             ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
              (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C31991 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C31993) *
                 C22717) *
                C50929) *
               C893 +
           ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
              C41982 * C31994 + C41983 * C50834) *
                 C22717 +
             ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
              (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                 C50810) *
                C50929 -
            (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
               C50911 * C3499) *
                  C50834 +
              (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
               C50911 * C3496) *
                  C31994 +
              (C8712 + C8711) * C31991 + (C8710 + C8709) * C31993) *
                 C50810 +
             ((C16302 + C16301) * C50834 + (C16300 + C16299) * C31994 +
              C41984 * C31991 + C41985 * C31993) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C50696 * C893 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C50696 * C50732) *
              C895 +
          ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
             C41982 * C31994 + C41983 * C50834) *
                C22717 +
            ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
             (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
             (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50696 * C893) *
              C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C31993 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C31991 +
             (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
                C22717 +
            ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
             (C41522 + C41523) * C31994 + (C41524 + C41525) * C50834) *
                C50810) *
               C50696 * C893 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50834 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C31994 +
             (C8324 + C8323) * C31991 + (C8322 + C8321) * C31993) *
                C50810 +
            ((C41525 + C41524) * C50834 + (C41523 + C41522) * C31994 +
             (C8320 + C8319) * C31991 + (C8318 + C8317) * C31993) *
                C22717) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C31993 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C31991 +
            (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
               C22717 +
           ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
            C41978 * C31994 + C41979 * C50834) *
               C50810) *
              C50696 * C964 -
          ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
            (C7980 + C7979) * C31993) *
               C50810 +
           (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
            (C7976 + C7975) * C31993) *
               C22717) *
              C50696 * C965 +
          ((C7999 * C31993 + C8000 * C31991 + (C8700 + C8699) * C31994 +
            (C8698 + C8697) * C50834) *
               C22717 +
           ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
            (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
               C50810) *
              C50696 * C966 -
          (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
             C50911 * C9652) *
                C50834 +
            (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
             C50911 * C9650) *
                C31994 +
            (C8980 + C8979) * C31991 + (C8978 + C8977) * C31993) *
               C50810 +
           ((C9669 + C9668) * C50834 + (C9667 + C9666) * C31994 +
            C8965 * C31991 + C8966 * C31993) *
               C22717) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C31993 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C31991 +
              (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                 C22717 +
             ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
              C41978 * C31994 + C41979 * C50834) *
                 C50810) *
                C1544 -
            ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
              C41981 * C31993) *
                 C50810 +
             ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
              (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                 C22717) *
                C50760) *
               C50928 +
           (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
              C42505 * C50834) *
                 C22717 +
             (C43152 * C31993 + C43153 * C31991 + (C9156 + C9157) * C31994 +
              (C9158 + C9159) * C50834) *
                 C50810) *
                C50760 -
            ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
              (C7980 + C7979) * C31993) *
                 C50810 +
             (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
              (C7976 + C7975) * C31993) *
                 C22717) *
                C1544) *
               C50732) *
              C50920 +
          (((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
              (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                 C22717 +
             (C41982 * C31993 + C41983 * C31991 + (C16299 + C16300) * C31994 +
              (C16301 + C16302) * C50834) *
                 C50810) *
                C50760 -
            ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
              (C7988 + C7987) * C31993) *
                 C50810 +
             ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
              (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C31991 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C31993) *
                 C22717) *
                C1544) *
               C50928 +
           ((((C7987 + C7988) * C31993 + (C7989 + C7990) * C31991 +
              C41982 * C31994 + C41983 * C50834) *
                 C22717 +
             ((C7991 + C7992) * C31993 + (C7993 + C7994) * C31991 +
              (C8709 + C8710) * C31994 + (C8711 + C8712) * C50834) *
                 C50810) *
                C1544 -
            (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
               C50911 * C3499) *
                  C50834 +
              (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
               C50911 * C3496) *
                  C31994 +
              (C8712 + C8711) * C31991 + (C8710 + C8709) * C31993) *
                 C50810 +
             ((C16302 + C16301) * C50834 + (C16300 + C16299) * C31994 +
              C41984 * C31991 + C41985 * C31993) *
                 C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C50974 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50975 +
           ((C15777 * C31993 + C15778 * C31991 + (C15764 + C15763) * C31994 +
             (C15762 + C15761) * C50834) *
                C22717 +
            (C42504 * C31993 + C42505 * C31991 + (C16707 + C16708) * C31994 +
             (C16709 + C16710) * C50834) *
                C50810) *
               C1960) *
              C50928 +
          (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
             C42505 * C50834) *
                C22717 +
            (C43152 * C31993 + C43153 * C31991 + (C9156 + C9157) * C31994 +
             (C9158 + C9159) * C50834) *
                C50810) *
               C50975 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C50974 -
           (((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
              C50911 * C10067) *
                 C50834 +
             (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
              C50911 * C10065) *
                 C31994 +
             (C9159 + C9158) * C31991 + (C9157 + C9156) * C31993) *
                C50810 +
            ((C16710 + C16709) * C50834 + (C16708 + C16707) * C31994 +
             C16705 * C31991 + C16706 * C31993) *
                C22717) *
               C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C1544 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50760) *
              C248 +
          (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
             C42505 * C50834) *
                C22717 +
            (C43152 * C31993 + C43153 * C31991 + (C9156 + C9157) * C31994 +
             (C9158 + C9159) * C50834) *
                C50810) *
               C50760 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C1544) *
              C249 +
          (((C7999 * C31993 + C8000 * C31991 + C43152 * C31994 +
             C43153 * C50834) *
                C22717 +
            ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
             (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
                C50810) *
               C1544 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50834 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C31994 +
             (C9669 + C9668) * C31991 + (C9667 + C9666) * C31993) *
                C50810 +
            ((C9159 + C9158) * C50834 + (C9157 + C9156) * C31994 +
             C9654 * C31991 + C9655 * C31993) *
                C22717) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C1544 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50760) *
              C50680 * C895 +
          ((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
             (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                C22717 +
            (C41982 * C31993 + C41983 * C31991 + (C16299 + C16300) * C31994 +
             (C16301 + C16302) * C50834) *
                C50810) *
               C50760 -
           ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
             (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C1544) *
              C50680 * C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C31993 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C31991 +
             (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
                C22717 +
            ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
             (C41522 + C41523) * C31994 + (C41524 + C41525) * C50834) *
                C50810) *
               C1544 -
           (((C49740 * C1087 + C50635 * C1095 + C49747 * C1088 +
              C50911 * C1096) *
                 C50834 +
             (C49740 * C1083 + C50635 * C1091 + C49747 * C1084 +
              C50911 * C1092) *
                 C31994 +
             (C41525 + C41524) * C31991 + (C41523 + C41522) * C31993) *
                C50810 +
            ((C16096 + C16095) * C50834 + (C16094 + C16093) * C31994 +
             (C16092 + C16091) * C31991 + (C16090 + C16089) * C31993) *
                C22717) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C31993 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C31991 +
            (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
               C22717 +
           ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
            C41978 * C31994 + C41979 * C50834) *
               C50810) *
              C1710 -
          ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
            C41981 * C31993) *
               C50810 +
           ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
            (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
               C22717) *
              C1711 +
          ((C15777 * C31993 + C15778 * C31991 + (C15764 + C15763) * C31994 +
            (C15762 + C15761) * C50834) *
               C22717 +
           (C42504 * C31993 + C42505 * C31991 + (C16707 + C16708) * C31994 +
            (C16709 + C16710) * C50834) *
               C50810) *
              C1712 -
          (((C49740 * C16693 + C50635 * C16695 + C49747 * C14812 +
             C50911 * C14815) *
                C50834 +
            (C49740 * C16692 + C50635 * C16694 + C49747 * C14809 +
             C50911 * C14813) *
                C31994 +
            (C16710 + C16709) * C31991 + (C16708 + C16707) * C31993) *
               C50810 +
           ((C17608 + C17607) * C50834 + (C17606 + C17605) * C31994 +
            C17595 * C31991 + C17596 * C31993) *
               C22717) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C50974 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50975 +
           ((C15777 * C31993 + C15778 * C31991 + (C15764 + C15763) * C31994 +
             (C15762 + C15761) * C50834) *
                C22717 +
            (C42504 * C31993 + C42505 * C31991 + (C16707 + C16708) * C31994 +
             (C16709 + C16710) * C50834) *
                C50810) *
               C1960) *
              C50680 * C50920 +
          ((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
             (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                C22717 +
            (C41982 * C31993 + C41983 * C31991 + (C16299 + C16300) * C31994 +
             (C16301 + C16302) * C50834) *
                C50810) *
               C50975 -
           ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
             (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C50974 -
           (((C49740 * C4428 + C50635 * C4434 + C49747 * C4429 +
              C50911 * C4435) *
                 C50834 +
             (C49740 * C4425 + C50635 * C4431 + C49747 * C4426 +
              C50911 * C4432) *
                 C31994 +
             (C16302 + C16301) * C31991 + (C16300 + C16299) * C31993) *
                C50810 +
            ((C15776 + C15775) * C50834 + (C15774 + C15773) * C31994 +
             C15779 * C31991 + C15780 * C31993) *
                C22717) *
               C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C1544 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50760) *
              C50680 * C895 +
          ((((C15765 + C15766) * C31993 + (C15767 + C15768) * C31991 +
             (C15769 + C15770) * C31994 + (C15771 + C15772) * C50834) *
                C22717 +
            (C41982 * C31993 + C41983 * C31991 + (C16299 + C16300) * C31994 +
             (C16301 + C16302) * C50834) *
                C50810) *
               C50760 -
           ((C41984 * C50834 + C41985 * C31994 + (C7990 + C7989) * C31991 +
             (C7988 + C7987) * C31993) *
                C50810 +
            ((C15768 + C15767) * C50834 + (C15766 + C15765) * C31994 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C31991 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C31993) *
                C22717) *
               C1544) *
              C50680 * C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C31993 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C31991 +
             (C16089 + C16090) * C31994 + (C16091 + C16092) * C50834) *
                C22717 +
            ((C8317 + C8318) * C31993 + (C8319 + C8320) * C31991 +
             (C41522 + C41523) * C31994 + (C41524 + C41525) * C50834) *
                C50810) *
               C1544 -
           (((C49740 * C1087 + C50635 * C1095 + C49747 * C1088 +
              C50911 * C1096) *
                 C50834 +
             (C49740 * C1083 + C50635 * C1091 + C49747 * C1084 +
              C50911 * C1092) *
                 C31994 +
             (C41525 + C41524) * C31991 + (C41523 + C41522) * C31993) *
                C50810 +
            ((C16096 + C16095) * C50834 + (C16094 + C16093) * C31994 +
             (C16092 + C16091) * C31991 + (C16090 + C16089) * C31993) *
                C22717) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C31993 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C31991 +
             (C15753 + C15754) * C31994 + (C15755 + C15756) * C50834) *
                C22717 +
            ((C7975 + C7976) * C31993 + (C7977 + C7978) * C31991 +
             C41978 * C31994 + C41979 * C50834) *
                C50810) *
               C1544 -
           ((C16705 * C50834 + C16706 * C31994 + C41980 * C31991 +
             C41981 * C31993) *
                C50810 +
            ((C15760 + C15759) * C50834 + (C15758 + C15757) * C31994 +
             (C15756 + C15755) * C31991 + (C15754 + C15753) * C31993) *
                C22717) *
               C50760) *
              C248 +
          (((C41978 * C31993 + C41979 * C31991 + C42504 * C31994 +
             C42505 * C50834) *
                C22717 +
            (C43152 * C31993 + C43153 * C31991 + (C9156 + C9157) * C31994 +
             (C9158 + C9159) * C50834) *
                C50810) *
               C50760 -
           ((C9654 * C50834 + C9655 * C31994 + (C7982 + C7981) * C31991 +
             (C7980 + C7979) * C31993) *
                C50810 +
            (C41980 * C50834 + C41981 * C31994 + (C7978 + C7977) * C31991 +
             (C7976 + C7975) * C31993) *
                C22717) *
               C1544) *
              C249 +
          (((C7999 * C31993 + C8000 * C31991 + C43152 * C31994 +
             C43153 * C50834) *
                C22717 +
            ((C7986 + C7985) * C31993 + (C7984 + C7983) * C31991 +
             (C9666 + C9667) * C31994 + (C9668 + C9669) * C50834) *
                C50810) *
               C1544 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50834 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C31994 +
             (C9669 + C9668) * C31991 + (C9667 + C9666) * C31993) *
                C50810 +
            ((C9159 + C9158) * C50834 + (C9157 + C9156) * C31994 +
             C9654 * C31991 + C9655 * C31993) *
                C22717) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50696 * C50928 -
           ((C44570 + C44571 + C44572 + C44573) * C25534 +
            (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50696 * C50732) *
              C50970 +
          (((C44574 + C44575 + C44576 + C44577) * C50976 +
            (C44578 + C44579 + C44580 + C44581) * C50965 +
            (C44582 + C44583 + C44584 + C44585) * C25534) *
               C50696 * C50732 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C31993 +
             (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
             C13298 * C50834) *
                C50976 +
            (C44884 + C44885 + C44886 + C44887) * C50965 +
            (C44888 + C44889 + C44890 + C44891) * C25534) *
               C50696 * C50928 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C31994 + C11006 * C31991 +
             C11005 * C31993) *
                C25534 +
            (C44891 + C44890 + C44889 + C44888) * C50965 +
            (C44887 + C44886 + C44885 + C44884) * C50976) *
               C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C31993 +
              (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
              C12970 * C50834) *
                 C50976 +
             (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
                C50929 -
            ((C45232 + C45233 + C45234 + C45235) * C25534 +
             (C45236 + C45237 + C45238 + C45239) * C50965 +
             (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
              C12969 * C31993) *
                 C50976) *
                C50760) *
               C50928 +
           (((C45239 + C45238 + C45237 + C45236) * C50976 +
             (C45235 + C45234 + C45233 + C45232) * C50965 +
             (C11266 * C31993 + C11265 * C31991 + C11585 * C31994 +
              C11586 * C50834) *
                 C25534) *
                C50760 -
            ((C44570 + C44571 + C44572 + C44573) * C25534 +
             (C44569 + C44568 + C44567 + C44566) * C50965 +
             (C44565 + C44564 + C44563 + C44562) * C50976) *
                C50929) *
               C50732) *
              C251 +
          ((((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
              C12976 * C50834) *
                 C50976 +
             (C45240 + C45241 + C45242 + C45243) * C50965 +
             (C45244 + C45245 + C45246 + C45247) * C25534) *
                C50760 -
            (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
             (C12974 * C50834 + C12973 * C31994 +
              (C10625 * C134 + C50630 * C144) * C31991 +
              (C10625 * C123 + C50630 * C130) * C31993) *
                 C50976) *
                C50929) *
               C50928 +
           (((C44574 + C44575 + C44576 + C44577) * C50976 +
             (C44578 + C44579 + C44580 + C44581) * C50965 +
             (C44582 + C44583 + C44584 + C44585) * C25534) *
                C50929 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C31994 + C11276 * C31991 +
              C11275 * C31993) *
                 C25534 +
             (C45247 + C45246 + C45245 + C45244) * C50965 +
             (C45243 + C45242 + C45241 + C45240) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50696 * C248 -
           ((C44570 + C44571 + C44572 + C44573) * C25534 +
            (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50696 * C249 +
           (C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
            (C10764 * C31993 + C10763 * C31991 + C11929 * C31994 +
             C11930 * C50834) *
                C25534) *
               C50696 * C250) *
              C251 +
          (((C44574 + C44575 + C44576 + C44577) * C50976 +
            (C44578 + C44579 + C44580 + C44581) * C50965 +
            (C44582 + C44583 + C44584 + C44585) * C25534) *
               C50696 * C249 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50696 * C248 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C31994 + C10772 * C31991 +
             C10771 * C31993) *
                C25534 +
            (C44585 + C44584 + C44583 + C44582) * C50965 + C44591 * C50976) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C31993 +
            (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
            C12970 * C50834) *
               C50976 +
           (C10757 * C31993 + C10758 * C31991 + C11270 * C31994 +
            C11269 * C50834) *
               C50965 +
           (C10759 * C31993 + C10760 * C31991 + C11268 * C31994 +
            C11267 * C50834) *
               C25534) *
              C50696 * C50680 * C113 -
          ((C11274 * C50834 + C11273 * C31994 + C10768 * C31991 +
            C10767 * C31993) *
               C25534 +
           (C11272 * C50834 + C11271 * C31994 + C10766 * C31991 +
            C10765 * C31993) *
               C50965 +
           (C12974 * C50834 + C12973 * C31994 +
            (C10625 * C134 + C50630 * C144) * C31991 +
            (C10625 * C123 + C50630 * C130) * C31993) *
               C50976) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C31993 +
            (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
            C13298 * C50834) *
               C50976 +
           (C11001 * C31993 + C11002 * C31991 + C13139 * C31994 +
            C13140 * C50834) *
               C50965 +
           (C11003 * C31993 + C11004 * C31991 + C13141 * C31994 +
            C13142 * C50834) *
               C25534) *
              C50696 * C50680 * C115 -
          (((C10625 * C1434 + C50630 * C1442) * C50834 +
            (C10625 * C1430 + C50630 * C1438) * C31994 +
            (C10625 * C278 + C50630 * C290) * C31991 +
            (C10625 * C260 + C50630 * C274) * C31993) *
               C25534 +
           ((C10625 * C787 + C50630 * C793) * C50834 +
            (C10625 * C778 + C50630 * C783) * C31994 +
            (C10625 * C263 + C50630 * C283) * C31991 +
            (C10625 * C253 + C50630 * C267) * C31993) *
               C50965 +
           ((C10625 * C404 + C50630 * C424) * C50834 +
            (C10625 * C394 + C50630 * C408) * C31994 +
            (C10625 * C136 + C50630 * C146) * C31991 +
            (C10625 * C125 + C50630 * C132) * C31993) *
               C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C391 -
           ((C11584 * C50834 + C11583 * C31994 + C11267 * C31991 +
             C11268 * C31993) *
                C25534 +
            (C11582 * C50834 + C11581 * C31994 + C11269 * C31991 +
             C11270 * C31993) *
                C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C392 +
           ((C12972 * C31993 + C12971 * C31991 + C14821 * C31994 +
             C14822 * C50834) *
                C50976 +
            (C11581 * C31993 + C11582 * C31991 + C13918 * C31994 +
             C13919 * C50834) *
                C50965 +
            (C11583 * C31993 + C11584 * C31991 + C13920 * C31994 +
             C13921 * C50834) *
                C25534) *
               C393) *
              C50680 * C251 +
          (((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
             C12976 * C50834) *
                C50976 +
            (C11271 * C31993 + C11272 * C31991 + C12977 * C31994 +
             C12978 * C50834) *
                C50965 +
            (C11273 * C31993 + C11274 * C31991 + C12979 * C31994 +
             C12980 * C50834) *
                C25534) *
               C392 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C391 -
           (((C10625 * C10062 + C50630 * C10066) * C50834 +
             (C10625 * C10060 + C50630 * C10064) * C31994 + C12980 * C31991 +
             C12979 * C31993) *
                C25534 +
            (C18520 * C50834 + C18519 * C31994 + C12978 * C31991 +
             C12977 * C31993) *
                C50965 +
            (C18518 * C50834 + C18517 * C31994 + C12976 * C31991 +
             C12975 * C31993) *
                C50976) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50929 -
           ((C11584 * C50834 + C11583 * C31994 + C11267 * C31991 +
             C11268 * C31993) *
                C25534 +
            (C11582 * C50834 + C11581 * C31994 + C11269 * C31991 +
             C11270 * C31993) *
                C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50760) *
              C50680 * C50970 +
          (((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
             C12976 * C50834) *
                C50976 +
            (C11271 * C31993 + C11272 * C31991 + C12977 * C31994 +
             C12978 * C50834) *
                C50965 +
            (C11273 * C31993 + C11274 * C31991 + C12979 * C31994 +
             C12980 * C50834) *
                C25534) *
               C50760 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C31993 +
             (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
             C13298 * C50834) *
                C50976 +
            (C44884 + C44885 + C44886 + C44887) * C50965 +
            (C44888 + C44889 + C44890 + C44891) * C25534) *
               C50929 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C31994 + C13142 * C31991 +
             C13141 * C31993) *
                C25534 +
            (C18676 * C50834 + C18675 * C31994 + C13140 * C31991 +
             C13139 * C31993) *
                C50965 +
            (C18830 * C50834 + C18829 * C31994 + C13298 * C31991 +
             C13297 * C31993) *
                C50976) *
               C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C31993 +
            (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
            C12970 * C50834) *
               C50976 +
           (C10757 * C31993 + C10758 * C31991 + C11270 * C31994 +
            C11269 * C50834) *
               C50965 +
           (C10759 * C31993 + C10760 * C31991 + C11268 * C31994 +
            C11267 * C50834) *
               C25534) *
              C50696 * C50680 * C113 -
          ((C11274 * C50834 + C11273 * C31994 + C10768 * C31991 +
            C10767 * C31993) *
               C25534 +
           (C11272 * C50834 + C11271 * C31994 + C10766 * C31991 +
            C10765 * C31993) *
               C50965 +
           (C12974 * C50834 + C12973 * C31994 +
            (C10625 * C134 + C50630 * C144) * C31991 +
            (C10625 * C123 + C50630 * C130) * C31993) *
               C50976) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C31993 +
            (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
            C13298 * C50834) *
               C50976 +
           (C11001 * C31993 + C11002 * C31991 + C13139 * C31994 +
            C13140 * C50834) *
               C50965 +
           (C11003 * C31993 + C11004 * C31991 + C13141 * C31994 +
            C13142 * C50834) *
               C25534) *
              C50696 * C50680 * C115 -
          (((C10625 * C1434 + C50630 * C1442) * C50834 +
            (C10625 * C1430 + C50630 * C1438) * C31994 +
            (C10625 * C278 + C50630 * C290) * C31991 +
            (C10625 * C260 + C50630 * C274) * C31993) *
               C25534 +
           ((C10625 * C787 + C50630 * C793) * C50834 +
            (C10625 * C778 + C50630 * C783) * C31994 +
            (C10625 * C263 + C50630 * C283) * C31991 +
            (C10625 * C253 + C50630 * C267) * C31993) *
               C50965 +
           ((C10625 * C404 + C50630 * C424) * C50834 +
            (C10625 * C394 + C50630 * C408) * C31994 +
            (C10625 * C136 + C50630 * C146) * C31991 +
            (C10625 * C125 + C50630 * C132) * C31993) *
               C50976) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50696 * C248 -
           ((C44570 + C44571 + C44572 + C44573) * C25534 +
            (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50696 * C249 +
           (C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
            (C10764 * C31993 + C10763 * C31991 + C11929 * C31994 +
             C11930 * C50834) *
                C25534) *
               C50696 * C250) *
              C251 +
          (((C44574 + C44575 + C44576 + C44577) * C50976 +
            (C44578 + C44579 + C44580 + C44581) * C50965 +
            (C44582 + C44583 + C44584 + C44585) * C25534) *
               C50696 * C249 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50696 * C248 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C31994 + C10772 * C31991 +
             C10771 * C31993) *
                C25534 +
            (C44585 + C44584 + C44583 + C44582) * C50965 + C44591 * C50976) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50696 * C50972 -
           (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50696 * C50973 +
           (C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
            (C45493 + C45494 + C45495 + C45496) * C25534) *
               C50696 * C1199) *
              C50920 +
          (((C44574 + C44575 + C44576 + C44577) * C50976 +
            (C44578 + C44579 + C44580 + C44581) * C50965 +
            (C44582 + C44583 + C44584 + C44585) * C25534) *
               C50696 * C50973 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50696 * C50972 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C31994 + C10772 * C31991 +
             C10771 * C31993) *
                C25534 +
            (C44585 + C44584 + C44583 + C44582) * C50965 + C44591 * C50976) *
               C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50929 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50760) *
              C50972 +
          (((C45239 + C45238 + C45237 + C45236) * C50976 +
            (C45235 + C45234 + C45233 + C45232) * C50965 +
            (C46140 + C46141 + C46142 + C46143) * C25534) *
               C50760 -
           (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50929) *
              C50973 +
          ((C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
            (C45493 + C45494 + C45495 + C45496) * C25534) *
               C50929 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C31994 + C11930 * C31991 +
             C11929 * C31993) *
                C25534 +
            (C46143 + C46142 + C46141 + C46140) * C50965 + C46145 * C50976) *
               C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C31993 +
            (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
            C12970 * C50834) *
               C50976 +
           (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
              C50696 * C964 -
          (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
           (C44565 + C44564 + C44563 + C44562) * C50976) *
              C50696 * C965 +
          (C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
           (C45493 + C45494 + C45495 + C45496) * C25534) *
              C50696 * C966 -
          (((C10625 * C11919 + C50630 * C11921) * C50834 +
            (C10625 * C11918 + C50630 * C11920) * C31994 + C11464 * C31991 +
            C11463 * C31993) *
               C25534 +
           (C45496 + C45495 + C45494 + C45493) * C50965 + C45498 * C50976) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50696 * C893 -
           ((C44570 + C44571 + C44572 + C44573) * C25534 +
            (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50696 * C50732) *
              C895 +
          (((C44574 + C44575 + C44576 + C44577) * C50976 +
            (C44578 + C44579 + C44580 + C44581) * C50965 +
            (C44582 + C44583 + C44584 + C44585) * C25534) *
               C50696 * C50732 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C31993 +
             (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
             C13298 * C50834) *
                C50976 +
            (C44884 + C44885 + C44886 + C44887) * C50965 +
            (C44888 + C44889 + C44890 + C44891) * C25534) *
               C50696 * C893 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C31994 + C11006 * C31991 +
             C11005 * C31993) *
                C25534 +
            (C44891 + C44890 + C44889 + C44888) * C50965 +
            (C44887 + C44886 + C44885 + C44884) * C50976) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C391 -
           ((C45232 + C45233 + C45234 + C45235) * C25534 +
            (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C392 +
           ((C12972 * C31993 + C12971 * C31991 + C14821 * C31994 +
             C14822 * C50834) *
                C50976 +
            (C45645 + C45646 + C45647 + C45648) * C50965 +
            (C45649 + C45650 + C45651 + C45652) * C25534) *
               C393) *
              C893 +
          (((C45239 + C45238 + C45237 + C45236) * C50976 +
            (C45235 + C45234 + C45233 + C45232) * C50965 +
            (C11266 * C31993 + C11265 * C31991 + C11585 * C31994 +
             C11586 * C50834) *
                C25534) *
               C392 -
           (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C391 -
           (((C10625 * C12195 + C50630 * C12197) * C50834 +
             (C10625 * C12194 + C50630 * C12196) * C31994 + C11586 * C31991 +
             C11585 * C31993) *
                C25534 +
            (C45652 + C45651 + C45650 + C45649) * C50965 +
            (C45648 + C45647 + C45646 + C45645) * C50976) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C31993 +
              (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
              C12970 * C50834) *
                 C50976 +
             (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
                C50929 -
            ((C45232 + C45233 + C45234 + C45235) * C25534 +
             (C45236 + C45237 + C45238 + C45239) * C50965 +
             (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
              C12969 * C31993) *
                 C50976) *
                C50760) *
               C893 +
           (((C45239 + C45238 + C45237 + C45236) * C50976 +
             (C45235 + C45234 + C45233 + C45232) * C50965 +
             (C11266 * C31993 + C11265 * C31991 + C11585 * C31994 +
              C11586 * C50834) *
                 C25534) *
                C50760 -
            (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
             (C44565 + C44564 + C44563 + C44562) * C50976) *
                C50929) *
               C50732) *
              C50920 +
          ((((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
              C12976 * C50834) *
                 C50976 +
             (C45240 + C45241 + C45242 + C45243) * C50965 +
             (C45244 + C45245 + C45246 + C45247) * C25534) *
                C50760 -
            (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
             (C12974 * C50834 + C12973 * C31994 +
              (C10625 * C134 + C50630 * C144) * C31991 +
              (C10625 * C123 + C50630 * C130) * C31993) *
                 C50976) *
                C50929) *
               C893 +
           (((C44574 + C44575 + C44576 + C44577) * C50976 +
             (C44578 + C44579 + C44580 + C44581) * C50965 +
             (C44582 + C44583 + C44584 + C44585) * C25534) *
                C50929 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C31994 + C11276 * C31991 +
              C11275 * C31993) *
                 C25534 +
             (C45247 + C45246 + C45245 + C45244) * C50965 +
             (C45243 + C45242 + C45241 + C45240) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50696 * C893 -
           ((C44570 + C44571 + C44572 + C44573) * C25534 +
            (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50696 * C50732) *
              C895 +
          (((C44574 + C44575 + C44576 + C44577) * C50976 +
            (C44578 + C44579 + C44580 + C44581) * C50965 +
            (C44582 + C44583 + C44584 + C44585) * C25534) *
               C50696 * C50732 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C31993 +
             (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
             C13298 * C50834) *
                C50976 +
            (C44884 + C44885 + C44886 + C44887) * C50965 +
            (C44888 + C44889 + C44890 + C44891) * C25534) *
               C50696 * C893 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C31994 + C11006 * C31991 +
             C11005 * C31993) *
                C25534 +
            (C44891 + C44890 + C44889 + C44888) * C50965 +
            (C44887 + C44886 + C44885 + C44884) * C50976) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C31993 +
            (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
            C12970 * C50834) *
               C50976 +
           (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
              C50696 * C964 -
          (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
           (C44565 + C44564 + C44563 + C44562) * C50976) *
              C50696 * C965 +
          (C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
           (C45493 + C45494 + C45495 + C45496) * C25534) *
              C50696 * C966 -
          (((C10625 * C11919 + C50630 * C11921) * C50834 +
            (C10625 * C11918 + C50630 * C11920) * C31994 + C11464 * C31991 +
            C11463 * C31993) *
               C25534 +
           (C45496 + C45495 + C45494 + C45493) * C50965 + C45498 * C50976) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C31993 +
              (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
              C12970 * C50834) *
                 C50976 +
             (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
                C1544 -
            (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
             (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
              C12969 * C31993) *
                 C50976) *
                C50760) *
               C50928 +
           (((C45239 + C45238 + C45237 + C45236) * C50976 +
             (C45235 + C45234 + C45233 + C45232) * C50965 +
             (C46140 + C46141 + C46142 + C46143) * C25534) *
                C50760 -
            (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
             (C44565 + C44564 + C44563 + C44562) * C50976) *
                C1544) *
               C50732) *
              C50920 +
          ((((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
              C12976 * C50834) *
                 C50976 +
             (C45240 + C45241 + C45242 + C45243) * C50965 +
             (C45244 + C45245 + C45246 + C45247) * C25534) *
                C50760 -
            (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
             (C12974 * C50834 + C12973 * C31994 +
              (C10625 * C134 + C50630 * C144) * C31991 +
              (C10625 * C123 + C50630 * C130) * C31993) *
                 C50976) *
                C1544) *
               C50928 +
           (((C44574 + C44575 + C44576 + C44577) * C50976 +
             (C44578 + C44579 + C44580 + C44581) * C50965 +
             (C44582 + C44583 + C44584 + C44585) * C25534) *
                C1544 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C31994 + C11276 * C31991 +
              C11275 * C31993) *
                 C25534 +
             (C45247 + C45246 + C45245 + C45244) * C50965 +
             (C45243 + C45242 + C45241 + C45240) * C50976) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50974 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50975 +
           ((C12972 * C31993 + C12971 * C31991 + C14821 * C31994 +
             C14822 * C50834) *
                C50976 +
            (C45645 + C45646 + C45647 + C45648) * C50965 +
            (C45649 + C45650 + C45651 + C45652) * C25534) *
               C1960) *
              C50928 +
          (((C45239 + C45238 + C45237 + C45236) * C50976 +
            (C45235 + C45234 + C45233 + C45232) * C50965 +
            (C46140 + C46141 + C46142 + C46143) * C25534) *
               C50975 -
           (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C50974 -
           (((C10625 * C12195 + C50630 * C12197) * C50834 +
             (C10625 * C12194 + C50630 * C12196) * C31994 + C11586 * C31991 +
             C11585 * C31993) *
                C25534 +
            (C45652 + C45651 + C45650 + C45649) * C50965 +
            (C45648 + C45647 + C45646 + C45645) * C50976) *
               C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C1544 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50760) *
              C248 +
          (((C45239 + C45238 + C45237 + C45236) * C50976 +
            (C45235 + C45234 + C45233 + C45232) * C50965 +
            (C46140 + C46141 + C46142 + C46143) * C25534) *
               C50760 -
           (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C1544) *
              C249 +
          ((C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
            (C45493 + C45494 + C45495 + C45496) * C25534) *
               C1544 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C31994 + C11930 * C31991 +
             C11929 * C31993) *
                C25534 +
            (C46143 + C46142 + C46141 + C46140) * C50965 + C46145 * C50976) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C1544 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
             C12976 * C50834) *
                C50976 +
            (C45240 + C45241 + C45242 + C45243) * C50965 +
            (C45244 + C45245 + C45246 + C45247) * C25534) *
               C50760 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C31993 +
             (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
             C13298 * C50834) *
                C50976 +
            (C44884 + C44885 + C44886 + C44887) * C50965 +
            (C44888 + C44889 + C44890 + C44891) * C25534) *
               C1544 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C31994 + C13142 * C31991 +
             C13141 * C31993) *
                C25534 +
            (C18676 * C50834 + C18675 * C31994 + C13140 * C31991 +
             C13139 * C31993) *
                C50965 +
            (C18830 * C50834 + C18829 * C31994 + C13298 * C31991 +
             C13297 * C31993) *
                C50976) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C31993 +
            (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
            C12970 * C50834) *
               C50976 +
           (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
              C1710 -
          (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
           (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
            C12969 * C31993) *
               C50976) *
              C1711 +
          ((C12972 * C31993 + C12971 * C31991 + C14821 * C31994 +
            C14822 * C50834) *
               C50976 +
           (C45645 + C45646 + C45647 + C45648) * C50965 +
           (C45649 + C45650 + C45651 + C45652) * C25534) *
              C1712 -
          (((C10625 * C14810 + C50630 * C14814) * C50834 +
            (C10625 * C14808 + C50630 * C14811) * C31994 + C13921 * C31991 +
            C13920 * C31993) *
               C25534 +
           (C19442 * C50834 + C19441 * C31994 + C13919 * C31991 +
            C13918 * C31993) *
               C50965 +
           (C20336 * C50834 + C20335 * C31994 + C14822 * C31991 +
            C14821 * C31993) *
               C50976) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C50974 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50975 +
           ((C12972 * C31993 + C12971 * C31991 + C14821 * C31994 +
             C14822 * C50834) *
                C50976 +
            (C45645 + C45646 + C45647 + C45648) * C50965 +
            (C45649 + C45650 + C45651 + C45652) * C25534) *
               C1960) *
              C50680 * C50920 +
          (((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
             C12976 * C50834) *
                C50976 +
            (C45240 + C45241 + C45242 + C45243) * C50965 +
            (C45244 + C45245 + C45246 + C45247) * C25534) *
               C50975 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C50974 -
           (((C10625 * C10062 + C50630 * C10066) * C50834 +
             (C10625 * C10060 + C50630 * C10064) * C31994 + C12980 * C31991 +
             C12979 * C31993) *
                C25534 +
            (C18520 * C50834 + C18519 * C31994 + C12978 * C31991 +
             C12977 * C31993) *
                C50965 +
            (C18518 * C50834 + C18517 * C31994 + C12976 * C31991 +
             C12975 * C31993) *
                C50976) *
               C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C1544 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C31993 + C12974 * C31991 + C12975 * C31994 +
             C12976 * C50834) *
                C50976 +
            (C45240 + C45241 + C45242 + C45243) * C50965 +
            (C45244 + C45245 + C45246 + C45247) * C25534) *
               C50760 -
           (C44591 * C25534 + (C44577 + C44576 + C44575 + C44574) * C50965 +
            (C12974 * C50834 + C12973 * C31994 +
             (C10625 * C134 + C50630 * C144) * C31991 +
             (C10625 * C123 + C50630 * C130) * C31993) *
                C50976) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C31993 +
             (C10625 * C135 + C50630 * C145) * C31991 + C13297 * C31994 +
             C13298 * C50834) *
                C50976 +
            (C44884 + C44885 + C44886 + C44887) * C50965 +
            (C44888 + C44889 + C44890 + C44891) * C25534) *
               C1544 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C31994 + C13142 * C31991 +
             C13141 * C31993) *
                C25534 +
            (C18676 * C50834 + C18675 * C31994 + C13140 * C31991 +
             C13139 * C31993) *
                C50965 +
            (C18830 * C50834 + C18829 * C31994 + C13298 * C31991 +
             C13297 * C31993) *
                C50976) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C31993 +
             (C10625 * C133 + C50630 * C143) * C31991 + C12969 * C31994 +
             C12970 * C50834) *
                C50976 +
            (C44562 + C44563 + C44564 + C44565) * C50965 + C44590 * C25534) *
               C1544 -
           (C46145 * C25534 + (C45236 + C45237 + C45238 + C45239) * C50965 +
            (C12971 * C50834 + C12972 * C31994 + C12970 * C31991 +
             C12969 * C31993) *
                C50976) *
               C50760) *
              C248 +
          (((C45239 + C45238 + C45237 + C45236) * C50976 +
            (C45235 + C45234 + C45233 + C45232) * C50965 +
            (C46140 + C46141 + C46142 + C46143) * C25534) *
               C50760 -
           (C45498 * C25534 + (C44569 + C44568 + C44567 + C44566) * C50965 +
            (C44565 + C44564 + C44563 + C44562) * C50976) *
               C1544) *
              C249 +
          ((C44590 * C50976 + (C44573 + C44572 + C44571 + C44570) * C50965 +
            (C45493 + C45494 + C45495 + C45496) * C25534) *
               C1544 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C31994 + C11930 * C31991 +
             C11929 * C31993) *
                C25534 +
            (C46143 + C46142 + C46141 + C46140) * C50965 + C46145 * C50976) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50696 * C50928 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50696 * C50732) *
              C50970 +
          (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
            (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
               C50696 * C50732 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C38226 +
             (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
             C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
                C22717 +
            (C47582 + C47583 + C47584 + C47585 + C47586 + C47587) * C50810) *
               C50696 * C50928 -
           (((C10625 * C3492 + C50630 * C3498) * C38225 +
             (C10625 * C3489 + C50630 * C3495) * C38228 + C13142 * C50968 +
             C13141 * C38227 + C11004 * C50977 + C11003 * C38226) *
                C50810 +
            (C47587 + C47586 + C47585 + C47584 + C47583 + C47582) * C22717) *
               C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C38226 +
              (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
              C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                 C22717 +
             (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
                C50929 -
            ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
             (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
              C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                 C22717) *
                C50760) *
               C50928 +
           (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
             (C11268 * C38226 + C11267 * C50977 + C11583 * C38227 +
              C11584 * C50968 + C13920 * C38228 + C13921 * C38225) *
                 C50810) *
                C50760 -
            ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
             (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
                C50929) *
               C50732) *
              C251 +
          ((((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
              C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                 C22717 +
             (C47934 + C47935 + C47936 + C47937 + C47938 + C47939) * C50810) *
                C50760 -
            ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
             (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
              C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
              (C10625 * C123 + C50630 * C130) * C38226) *
                 C22717) *
                C50929) *
               C50928 +
           (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
             (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
                C50929 -
            (((C10625 * C10062 + C50630 * C10066) * C38225 +
              (C10625 * C10060 + C50630 * C10064) * C38228 + C12980 * C50968 +
              C12979 * C38227 + C11274 * C50977 + C11273 * C38226) *
                 C50810 +
             (C47939 + C47938 + C47937 + C47936 + C47935 + C47934) * C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50696 * C248 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50696 * C249 +
           ((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
            (C10761 * C38226 + C10762 * C50977 + C11266 * C38227 +
             C11265 * C50968 + C11585 * C38228 + C11586 * C38225) *
                C50810) *
               C50696 * C250) *
              C251 +
          (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
            (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
               C50696 * C249 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50696 * C248 -
           (((C10625 * C9129 + C50630 * C9133) * C38225 +
             (C10625 * C9127 + C50630 * C9131) * C38228 + C11276 * C50968 +
             C11275 * C38227 + C10770 * C50977 + C10769 * C38226) *
                C50810 +
            (C47289 + C47288 + C47287 + C47286 + C47285 + C47284) * C22717) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C38226 +
            (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
            C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
               C22717 +
           (C10757 * C38226 + C10758 * C50977 + C11270 * C38227 +
            C11269 * C50968 + C11581 * C38228 + C11582 * C38225) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C12978 * C38225 + C12977 * C38228 + C11272 * C50968 +
            C11271 * C38227 + C10766 * C50977 + C10765 * C38226) *
               C50810 +
           (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
            C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
            (C10625 * C123 + C50630 * C130) * C38226) *
               C22717) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C38226 +
            (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
            C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
               C22717 +
           (C11001 * C38226 + C11002 * C50977 + C13139 * C38227 +
            C13140 * C50968 + C18675 * C38228 + C18676 * C38225) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C10625 * C1087 + C50630 * C1095) * C38225 +
            (C10625 * C1083 + C50630 * C1091) * C38228 +
            (C10625 * C787 + C50630 * C793) * C50968 +
            (C10625 * C778 + C50630 * C783) * C38227 +
            (C10625 * C263 + C50630 * C283) * C50977 +
            (C10625 * C253 + C50630 * C267) * C38226) *
               C50810 +
           ((C10625 * C419 + C50630 * C431) * C38225 +
            (C10625 * C401 + C50630 * C415) * C38228 +
            (C10625 * C404 + C50630 * C424) * C50968 +
            (C10625 * C394 + C50630 * C408) * C38227 +
            (C10625 * C136 + C50630 * C146) * C50977 +
            (C10625 * C125 + C50630 * C132) * C38226) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C391 -
           ((C13919 * C38225 + C13918 * C38228 + C11582 * C50968 +
             C11581 * C38227 + C11269 * C50977 + C11270 * C38226) *
                C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C392 +
           ((C12972 * C38226 + C12971 * C50977 + C14821 * C38227 +
             C14822 * C50968 + C20335 * C38228 + C20336 * C38225) *
                C22717 +
            (C11581 * C38226 + C11582 * C50977 + C13918 * C38227 +
             C13919 * C50968 + C19441 * C38228 + C19442 * C38225) *
                C50810) *
               C393) *
              C50680 * C251 +
          (((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
             C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                C22717 +
            (C11271 * C38226 + C11272 * C50977 + C12977 * C38227 +
             C12978 * C50968 + C18519 * C38228 + C18520 * C38225) *
                C50810) *
               C392 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C391 -
           (((C10625 * C16693 + C50630 * C16695) * C38225 +
             (C10625 * C16692 + C50630 * C16694) * C38228 + C18520 * C50968 +
             C18519 * C38227 + C12978 * C50977 + C12977 * C38226) *
                C50810 +
            (C21098 * C38225 + C21097 * C38228 + C18518 * C50968 +
             C18517 * C38227 + C12976 * C50977 + C12975 * C38226) *
                C22717) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50929 -
           ((C13919 * C38225 + C13918 * C38228 + C11582 * C50968 +
             C11581 * C38227 + C11269 * C50977 + C11270 * C38226) *
                C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50760) *
              C50680 * C50970 +
          (((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
             C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                C22717 +
            (C11271 * C38226 + C11272 * C50977 + C12977 * C38227 +
             C12978 * C50968 + C18519 * C38228 + C18520 * C38225) *
                C50810) *
               C50760 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C38226 +
             (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
             C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
                C22717 +
            (C47582 + C47583 + C47584 + C47585 + C47586 + C47587) * C50810) *
               C50929 -
           (((C10625 * C4428 + C50630 * C4434) * C38225 +
             (C10625 * C4425 + C50630 * C4431) * C38228 + C18676 * C50968 +
             C18675 * C38227 + C13140 * C50977 + C13139 * C38226) *
                C50810 +
            (C21300 * C38225 + C21299 * C38228 + C18830 * C50968 +
             C18829 * C38227 + C13298 * C50977 + C13297 * C38226) *
                C22717) *
               C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C38226 +
            (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
            C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
               C22717 +
           (C10757 * C38226 + C10758 * C50977 + C11270 * C38227 +
            C11269 * C50968 + C11581 * C38228 + C11582 * C38225) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C12978 * C38225 + C12977 * C38228 + C11272 * C50968 +
            C11271 * C38227 + C10766 * C50977 + C10765 * C38226) *
               C50810 +
           (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
            C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
            (C10625 * C123 + C50630 * C130) * C38226) *
               C22717) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C38226 +
            (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
            C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
               C22717 +
           (C11001 * C38226 + C11002 * C50977 + C13139 * C38227 +
            C13140 * C50968 + C18675 * C38228 + C18676 * C38225) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C10625 * C1087 + C50630 * C1095) * C38225 +
            (C10625 * C1083 + C50630 * C1091) * C38228 +
            (C10625 * C787 + C50630 * C793) * C50968 +
            (C10625 * C778 + C50630 * C783) * C38227 +
            (C10625 * C263 + C50630 * C283) * C50977 +
            (C10625 * C253 + C50630 * C267) * C38226) *
               C50810 +
           ((C10625 * C419 + C50630 * C431) * C38225 +
            (C10625 * C401 + C50630 * C415) * C38228 +
            (C10625 * C404 + C50630 * C424) * C50968 +
            (C10625 * C394 + C50630 * C408) * C38227 +
            (C10625 * C136 + C50630 * C146) * C50977 +
            (C10625 * C125 + C50630 * C132) * C38226) *
               C22717) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50696 * C248 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50696 * C249 +
           ((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
            (C10761 * C38226 + C10762 * C50977 + C11266 * C38227 +
             C11265 * C50968 + C11585 * C38228 + C11586 * C38225) *
                C50810) *
               C50696 * C250) *
              C251 +
          (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
            (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
               C50696 * C249 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50696 * C248 -
           (((C10625 * C9129 + C50630 * C9133) * C38225 +
             (C10625 * C9127 + C50630 * C9131) * C38228 + C11276 * C50968 +
             C11275 * C38227 + C10770 * C50977 + C10769 * C38226) *
                C50810 +
            (C47289 + C47288 + C47287 + C47286 + C47285 + C47284) * C22717) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50696 * C50972 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50696 * C50973 +
           ((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
            (C48184 + C48185 + C48186 + C48187 + C48188 + C48189) * C50810) *
               C50696 * C1199) *
              C50920 +
          (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
            (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
               C50696 * C50973 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50696 * C50972 -
           (((C10625 * C9129 + C50630 * C9133) * C38225 +
             (C10625 * C9127 + C50630 * C9131) * C38228 + C11276 * C50968 +
             C11275 * C38227 + C10770 * C50977 + C10769 * C38226) *
                C50810 +
            (C47289 + C47288 + C47287 + C47286 + C47285 + C47284) * C22717) *
               C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50929 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50760) *
              C50972 +
          (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
            (C48828 + C48829 + C48830 + C48831 + C48832 + C48833) * C50810) *
               C50760 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50929) *
              C50973 +
          (((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
            (C48184 + C48185 + C48186 + C48187 + C48188 + C48189) * C50810) *
               C50929 -
           (((C10625 * C12195 + C50630 * C12197) * C38225 +
             (C10625 * C12194 + C50630 * C12196) * C38228 + C11586 * C50968 +
             C11585 * C38227 + C11265 * C50977 + C11266 * C38226) *
                C50810 +
            (C48833 + C48832 + C48831 + C48830 + C48829 + C48828) * C22717) *
               C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C38226 +
            (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
            C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
               C22717 +
           (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
              C50696 * C964 -
          ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
           (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
              C50696 * C965 +
          ((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
           (C48184 + C48185 + C48186 + C48187 + C48188 + C48189) * C50810) *
              C50696 * C966 -
          (((C10625 * C11565 + C50630 * C11567) * C38225 +
            (C10625 * C11564 + C50630 * C11566) * C38228 + C11930 * C50968 +
            C11929 * C38227 + C10763 * C50977 + C10764 * C38226) *
               C50810 +
           (C48189 + C48188 + C48187 + C48186 + C48185 + C48184) * C22717) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50696 * C893 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50696 * C50732) *
              C895 +
          (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
            (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
               C50696 * C50732 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C38226 +
             (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
             C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
                C22717 +
            (C47582 + C47583 + C47584 + C47585 + C47586 + C47587) * C50810) *
               C50696 * C893 -
           (((C10625 * C3492 + C50630 * C3498) * C38225 +
             (C10625 * C3489 + C50630 * C3495) * C38228 + C13142 * C50968 +
             C13141 * C38227 + C11004 * C50977 + C11003 * C38226) *
                C50810 +
            (C47587 + C47586 + C47585 + C47584 + C47583 + C47582) * C22717) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C391 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C392 +
           ((C12972 * C38226 + C12971 * C50977 + C14821 * C38227 +
             C14822 * C50968 + C20335 * C38228 + C20336 * C38225) *
                C22717 +
            (C48336 + C48337 + C48338 + C48339 + C48340 + C48341) * C50810) *
               C393) *
              C893 +
          (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
            (C11268 * C38226 + C11267 * C50977 + C11583 * C38227 +
             C11584 * C50968 + C13920 * C38228 + C13921 * C38225) *
                C50810) *
               C392 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C391 -
           (((C10625 * C14810 + C50630 * C14814) * C38225 +
             (C10625 * C14808 + C50630 * C14811) * C38228 + C13921 * C50968 +
             C13920 * C38227 + C11584 * C50977 + C11583 * C38226) *
                C50810 +
            (C48341 + C48340 + C48339 + C48338 + C48337 + C48336) * C22717) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C38226 +
              (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
              C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                 C22717 +
             (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
                C50929 -
            ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
             (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
              C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                 C22717) *
                C50760) *
               C893 +
           (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
             (C11268 * C38226 + C11267 * C50977 + C11583 * C38227 +
              C11584 * C50968 + C13920 * C38228 + C13921 * C38225) *
                 C50810) *
                C50760 -
            ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
             (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
                C50929) *
               C50732) *
              C50920 +
          ((((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
              C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                 C22717 +
             (C47934 + C47935 + C47936 + C47937 + C47938 + C47939) * C50810) *
                C50760 -
            ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
             (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
              C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
              (C10625 * C123 + C50630 * C130) * C38226) *
                 C22717) *
                C50929) *
               C893 +
           (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
             (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
                C50929 -
            (((C10625 * C10062 + C50630 * C10066) * C38225 +
              (C10625 * C10060 + C50630 * C10064) * C38228 + C12980 * C50968 +
              C12979 * C38227 + C11274 * C50977 + C11273 * C38226) *
                 C50810 +
             (C47939 + C47938 + C47937 + C47936 + C47935 + C47934) * C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50696 * C893 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50696 * C50732) *
              C895 +
          (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
            (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
               C50696 * C50732 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C38226 +
             (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
             C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
                C22717 +
            (C47582 + C47583 + C47584 + C47585 + C47586 + C47587) * C50810) *
               C50696 * C893 -
           (((C10625 * C3492 + C50630 * C3498) * C38225 +
             (C10625 * C3489 + C50630 * C3495) * C38228 + C13142 * C50968 +
             C13141 * C38227 + C11004 * C50977 + C11003 * C38226) *
                C50810 +
            (C47587 + C47586 + C47585 + C47584 + C47583 + C47582) * C22717) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C38226 +
            (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
            C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
               C22717 +
           (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
              C50696 * C964 -
          ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
           (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
              C50696 * C965 +
          ((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
           (C48184 + C48185 + C48186 + C48187 + C48188 + C48189) * C50810) *
              C50696 * C966 -
          (((C10625 * C11565 + C50630 * C11567) * C38225 +
            (C10625 * C11564 + C50630 * C11566) * C38228 + C11930 * C50968 +
            C11929 * C38227 + C10763 * C50977 + C10764 * C38226) *
               C50810 +
           (C48189 + C48188 + C48187 + C48186 + C48185 + C48184) * C22717) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C38226 +
              (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
              C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                 C22717 +
             (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
                C1544 -
            ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
             (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
              C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                 C22717) *
                C50760) *
               C50928 +
           (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
             (C48828 + C48829 + C48830 + C48831 + C48832 + C48833) * C50810) *
                C50760 -
            ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
             (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
                C1544) *
               C50732) *
              C50920 +
          ((((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
              C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                 C22717 +
             (C47934 + C47935 + C47936 + C47937 + C47938 + C47939) * C50810) *
                C50760 -
            ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
             (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
              C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
              (C10625 * C123 + C50630 * C130) * C38226) *
                 C22717) *
                C1544) *
               C50928 +
           (((C47278 + C47279 + C47280 + C47281 + C47282 + C47283) * C22717 +
             (C47284 + C47285 + C47286 + C47287 + C47288 + C47289) * C50810) *
                C1544 -
            (((C10625 * C10062 + C50630 * C10066) * C38225 +
              (C10625 * C10060 + C50630 * C10064) * C38228 + C12980 * C50968 +
              C12979 * C38227 + C11274 * C50977 + C11273 * C38226) *
                 C50810 +
             (C47939 + C47938 + C47937 + C47936 + C47935 + C47934) * C22717) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50974 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50975 +
           ((C12972 * C38226 + C12971 * C50977 + C14821 * C38227 +
             C14822 * C50968 + C20335 * C38228 + C20336 * C38225) *
                C22717 +
            (C48336 + C48337 + C48338 + C48339 + C48340 + C48341) * C50810) *
               C1960) *
              C50928 +
          (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
            (C48828 + C48829 + C48830 + C48831 + C48832 + C48833) * C50810) *
               C50975 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C50974 -
           (((C10625 * C14810 + C50630 * C14814) * C38225 +
             (C10625 * C14808 + C50630 * C14811) * C38228 + C13921 * C50968 +
             C13920 * C38227 + C11584 * C50977 + C11583 * C38226) *
                C50810 +
            (C48341 + C48340 + C48339 + C48338 + C48337 + C48336) * C22717) *
               C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C1544 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50760) *
              C248 +
          (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
            (C48828 + C48829 + C48830 + C48831 + C48832 + C48833) * C50810) *
               C50760 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C1544) *
              C249 +
          (((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
            (C48184 + C48185 + C48186 + C48187 + C48188 + C48189) * C50810) *
               C1544 -
           (((C10625 * C12195 + C50630 * C12197) * C38225 +
             (C10625 * C12194 + C50630 * C12196) * C38228 + C11586 * C50968 +
             C11585 * C38227 + C11265 * C50977 + C11266 * C38226) *
                C50810 +
            (C48833 + C48832 + C48831 + C48830 + C48829 + C48828) * C22717) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C1544 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
             C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                C22717 +
            (C47934 + C47935 + C47936 + C47937 + C47938 + C47939) * C50810) *
               C50760 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C38226 +
             (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
             C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
                C22717 +
            (C47582 + C47583 + C47584 + C47585 + C47586 + C47587) * C50810) *
               C1544 -
           (((C10625 * C4428 + C50630 * C4434) * C38225 +
             (C10625 * C4425 + C50630 * C4431) * C38228 + C18676 * C50968 +
             C18675 * C38227 + C13140 * C50977 + C13139 * C38226) *
                C50810 +
            (C21300 * C38225 + C21299 * C38228 + C18830 * C50968 +
             C18829 * C38227 + C13298 * C50977 + C13297 * C38226) *
                C22717) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C38226 +
            (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
            C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
               C22717 +
           (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
              C1710 -
          ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
           (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
            C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
               C22717) *
              C1711 +
          ((C12972 * C38226 + C12971 * C50977 + C14821 * C38227 +
            C14822 * C50968 + C20335 * C38228 + C20336 * C38225) *
               C22717 +
           (C48336 + C48337 + C48338 + C48339 + C48340 + C48341) * C50810) *
              C1712 -
          (((C10625 * C20327 + C50630 * C20329) * C38225 +
            (C10625 * C20326 + C50630 * C20328) * C38228 + C19442 * C50968 +
            C19441 * C38227 + C13919 * C50977 + C13918 * C38226) *
               C50810 +
           (C22290 * C38225 + C22289 * C38228 + C20336 * C50968 +
            C20335 * C38227 + C14822 * C50977 + C14821 * C38226) *
               C22717) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C50974 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50975 +
           ((C12972 * C38226 + C12971 * C50977 + C14821 * C38227 +
             C14822 * C50968 + C20335 * C38228 + C20336 * C38225) *
                C22717 +
            (C48336 + C48337 + C48338 + C48339 + C48340 + C48341) * C50810) *
               C1960) *
              C50680 * C50920 +
          (((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
             C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                C22717 +
            (C47934 + C47935 + C47936 + C47937 + C47938 + C47939) * C50810) *
               C50975 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C50974 -
           (((C10625 * C16693 + C50630 * C16695) * C38225 +
             (C10625 * C16692 + C50630 * C16694) * C38228 + C18520 * C50968 +
             C18519 * C38227 + C12978 * C50977 + C12977 * C38226) *
                C50810 +
            (C21098 * C38225 + C21097 * C38228 + C18518 * C50968 +
             C18517 * C38227 + C12976 * C50977 + C12975 * C38226) *
                C22717) *
               C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C1544 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C38226 + C12974 * C50977 + C12975 * C38227 +
             C12976 * C50968 + C18517 * C38228 + C18518 * C38225) *
                C22717 +
            (C47934 + C47935 + C47936 + C47937 + C47938 + C47939) * C50810) *
               C50760 -
           ((C47283 + C47282 + C47281 + C47280 + C47279 + C47278) * C50810 +
            (C12976 * C38225 + C12975 * C38228 + C12974 * C50968 +
             C12973 * C38227 + (C10625 * C134 + C50630 * C144) * C50977 +
             (C10625 * C123 + C50630 * C130) * C38226) *
                C22717) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C38226 +
             (C10625 * C135 + C50630 * C145) * C50977 + C13297 * C38227 +
             C13298 * C50968 + C18829 * C38228 + C18830 * C38225) *
                C22717 +
            (C47582 + C47583 + C47584 + C47585 + C47586 + C47587) * C50810) *
               C1544 -
           (((C10625 * C4428 + C50630 * C4434) * C38225 +
             (C10625 * C4425 + C50630 * C4431) * C38228 + C18676 * C50968 +
             C18675 * C38227 + C13140 * C50977 + C13139 * C38226) *
                C50810 +
            (C21300 * C38225 + C21299 * C38228 + C18830 * C50968 +
             C18829 * C38227 + C13298 * C50977 + C13297 * C38226) *
                C22717) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C38226 +
             (C10625 * C133 + C50630 * C143) * C50977 + C12969 * C38227 +
             C12970 * C50968 + C12972 * C38228 + C12971 * C38225) *
                C22717 +
            (C47266 + C47267 + C47268 + C47269 + C47270 + C47271) * C50810) *
               C1544 -
           ((C47928 + C47929 + C47930 + C47931 + C47932 + C47933) * C50810 +
            (C14822 * C38225 + C14821 * C38228 + C12971 * C50968 +
             C12972 * C38227 + C12970 * C50977 + C12969 * C38226) *
                C22717) *
               C50760) *
              C248 +
          (((C47933 + C47932 + C47931 + C47930 + C47929 + C47928) * C22717 +
            (C48828 + C48829 + C48830 + C48831 + C48832 + C48833) * C50810) *
               C50760 -
           ((C47272 + C47273 + C47274 + C47275 + C47276 + C47277) * C50810 +
            (C47271 + C47270 + C47269 + C47268 + C47267 + C47266) * C22717) *
               C1544) *
              C249 +
          (((C47277 + C47276 + C47275 + C47274 + C47273 + C47272) * C22717 +
            (C48184 + C48185 + C48186 + C48187 + C48188 + C48189) * C50810) *
               C1544 -
           (((C10625 * C12195 + C50630 * C12197) * C38225 +
             (C10625 * C12194 + C50630 * C12196) * C38228 + C11586 * C50968 +
             C11585 * C38227 + C11265 * C50977 + C11266 * C38226) *
                C50810 +
            (C48833 + C48832 + C48831 + C48830 + C48829 + C48828) * C22717) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C50928 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50732) *
              C50970 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50732 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C50928) *
              C50971 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50696 * C50928 -
           (((C49740 * C973 + C50635 * C981 + C49747 * C974 + C50911 * C982) *
                 C50822 +
             (C49740 * C969 + C50635 * C977 + C49747 * C970 + C50911 * C978) *
                 C121) *
                C7777 +
            ((C8324 + C8323) * C50822 + (C8322 + C8321) * C121) * C7776 +
            ((C8320 + C8319) * C50822 + (C8318 + C8317) * C121) * C7775) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C50928 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50732 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50696 * C50928 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50822 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50796 * C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50696 * C50928 -
           ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
            (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
            (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
            (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
            (C49747 * C1085 + C50911 * C1093 + C49740 * C1084 +
             C50635 * C1092) *
                C15411 +
            (C49747 * C1089 + C50911 * C1097 + C49740 * C1088 +
             C50635 * C1096) *
                C15408) *
               C50796 * C50696 * C50732 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C15409 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C15406 +
            (C49747 * C395 + C50911 * C409 + C49740 * C394 + C50635 * C408) *
                C15410 +
            (C49747 * C405 + C50911 * C425 + C49740 * C404 + C50635 * C424) *
                C15407 +
            (C49747 * C400 + C50911 * C414 + C49740 * C401 + C50635 * C415) *
                C15411 +
            (C49747 * C418 + C50911 * C430 + C49740 * C419 + C50635 * C431) *
                C15408) *
               C50796 * C50696 * C50928 -
           ((C49740 * C1087 + C50635 * C1095 + C49747 * C1088 +
             C50911 * C1096) *
                C15408 +
            (C49740 * C1083 + C50635 * C1091 + C49747 * C1084 +
             C50911 * C1092) *
                C15411 +
            (C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                C15407 +
            (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                C15410 +
            (C8320 + C8319) * C15406 + (C8318 + C8317) * C15409) *
               C50796 * C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C121 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C50822) *
                 C7775 +
             ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
             C8007 * C7777) *
                C50929 -
            (((C8697 + C8698) * C50822 + (C8699 + C8700) * C121) * C7777 +
             ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
             ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                  C50822 +
              (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                  C121) *
                 C7775) *
                C50760) *
               C50928 +
           ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
             ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
             ((C49747 * C4007 + C50911 * C4013 + C49740 * C4006 +
               C50635 * C4012) *
                  C121 +
              (C49747 * C4010 + C50911 * C4016 + C49740 * C4009 +
               C50635 * C4015) *
                  C50822) *
                 C7777) *
                C50760 -
            (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
             ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
             ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
                C50929) *
               C50732) *
              C251 +
          (((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                  C121 +
              (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                  C50822) *
                 C7775 +
             ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
             ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
                C50760 -
            (C8008 * C7777 +
             ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
             ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C50822 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C121) *
                 C7775) *
                C50929) *
               C50928 +
           ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
             ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
             ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
                C50929 -
            (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
               C50911 * C4015) *
                  C50822 +
              (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
               C50911 * C4012) *
                  C121) *
                 C7777 +
             ((C8712 + C8711) * C50822 + (C8710 + C8709) * C121) * C7776 +
             ((C8708 + C8707) * C50822 + (C8706 + C8705) * C121) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50822 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50822 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50796 * C50929) *
               C50732) *
              C251 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50822 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50796 * C50929) *
               C50928 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50822 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C15409 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C15406 +
             (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
             C15777 * C15411 + C15778 * C15408) *
                C50796 * C50929 -
            ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
             (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
             (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
                C50796 * C50760) *
               C50928 +
           (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
             (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
             (C49747 * C4427 + C50911 * C4433 + C49740 * C4426 +
              C50635 * C4432) *
                 C15411 +
             (C49747 * C4430 + C50911 * C4436 + C49740 * C4429 +
              C50635 * C4435) *
                 C15408) *
                C50796 * C50760 -
            ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
             (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
             (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
                C50796 * C50929) *
               C50732) *
              C251 +
          ((((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
             (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
             (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
                C50796 * C50760 -
            (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
             (C15766 + C15765) * C15410 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C15406 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C15409) *
                C50796 * C50929) *
               C50928 +
           (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
             (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
             (C16299 + C16300) * C15411 + (C16301 + C16302) * C15408) *
                C50796 * C50929 -
            ((C49740 * C4428 + C50635 * C4434 + C49747 * C4429 +
              C50911 * C4435) *
                 C15408 +
             (C49740 * C4425 + C50635 * C4431 + C49747 * C4426 +
              C50911 * C4432) *
                 C15411 +
             (C16302 + C16301) * C15407 + (C16300 + C16299) * C15410 +
             (C8708 + C8707) * C15406 + (C8706 + C8705) * C15409) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50822) *
                  C50796 * C50696 * C50680 * C113 -
              ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                   C50822 +
               (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                   C121) *
                  C50796 * C50696 * C50680 * C114 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C121 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50822) *
                  C50796 * C50696 * C50680 * C115 -
              ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
                C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
                   C50822 +
               (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
                C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
                   C121) *
                  C50796 * C50696 * C50680 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50822) *
                   C50796 * C50696 * C248 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50822 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50796 * C50696 * C249 +
               ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50822) *
                   C50796 * C50696 * C250) *
                  C251 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50822) *
                   C50796 * C50696 * C249 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50822 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50796 * C50696 * C248 -
               ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
                 C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                    C50822 +
                (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
                 C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                    C121) *
                   C50796 * C50696 * C250) *
                  C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C393) *
              C50680 * C251 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C392 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C391 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50822 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C49747 * C256 + C50911 * C270 + C49740 * C255 + C50635 * C269) *
                C121 +
            (C49747 * C266 + C50911 * C286 + C49740 * C265 + C50635 * C285) *
                C50822) *
               C7776 +
           ((C49747 * C257 + C50911 * C271 + C49740 * C258 + C50635 * C272) *
                C121 +
            (C49747 * C275 + C50911 * C287 + C49740 * C276 + C50635 * C288) *
                C50822) *
               C7777) *
              C50696 * C50680 * C113 -
          (((C49740 * C277 + C50635 * C289 + C49747 * C276 + C50911 * C288) *
                C50822 +
            (C49740 * C259 + C50635 * C273 + C49747 * C258 + C50911 * C272) *
                C121) *
               C7777 +
           ((C49740 * C264 + C50635 * C284 + C49747 * C265 + C50911 * C285) *
                C50822 +
            (C49740 * C254 + C50635 * C268 + C49747 * C255 + C50911 * C269) *
                C121) *
               C7776 +
           ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C50822 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C121) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C121 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C50822) *
               C7775 +
           ((C49747 * C254 + C50911 * C268 + C49740 * C253 + C50635 * C267) *
                C121 +
            (C49747 * C264 + C50911 * C284 + C49740 * C263 + C50635 * C283) *
                C50822) *
               C7776 +
           ((C49747 * C259 + C50911 * C273 + C49740 * C260 + C50635 * C274) *
                C121 +
            (C49747 * C277 + C50911 * C289 + C49740 * C278 + C50635 * C290) *
                C50822) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C49740 * C281 + C50635 * C292 + C49747 * C278 + C50911 * C290) *
                C50822 +
            (C49740 * C262 + C50635 * C282 + C49747 * C260 + C50911 * C274) *
                C121) *
               C7777 +
           ((C49740 * C280 + C50635 * C291 + C49747 * C263 + C50911 * C283) *
                C50822 +
            (C49740 * C261 + C50635 * C279 + C49747 * C253 + C50911 * C267) *
                C121) *
               C7776 +
           ((C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
                C50822 +
            (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
                C121) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C248 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C249 +
           (C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C49747 * C3315 + C50911 * C3321 + C49740 * C3314 +
              C50635 * C3320) *
                 C121 +
             (C49747 * C3318 + C50911 * C3324 + C49740 * C3317 +
              C50635 * C3323) *
                 C50822) *
                C7777) *
               C50696 * C250) *
              C251 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C249 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C248 -
           (((C49740 * C3316 + C50635 * C3322 + C49747 * C3317 +
              C50911 * C3323) *
                 C50822 +
             (C49740 * C3313 + C50635 * C3319 + C49747 * C3314 +
              C50911 * C3320) *
                 C121) *
                C7777 +
            ((C7998 + C7997) * C50822 + (C7996 + C7995) * C121) * C7776 +
            C8008 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C391 -
           (((C49740 * C1436 + C50635 * C1444 + C49747 * C1437 +
              C50911 * C1445) *
                 C50822 +
             (C49740 * C1432 + C50635 * C1440 + C49747 * C1433 +
              C50911 * C1441) *
                 C121) *
                C7777 +
            ((C49740 * C785 + C50635 * C791 + C49747 * C784 + C50911 * C790) *
                 C50822 +
             (C49740 * C776 + C50635 * C781 + C49747 * C775 + C50911 * C780) *
                 C121) *
                C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C392 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C49747 * C1086 + C50911 * C1094 + C49740 * C1085 +
              C50635 * C1093) *
                 C121 +
             (C49747 * C1090 + C50911 * C1098 + C49740 * C1089 +
              C50635 * C1097) *
                 C50822) *
                C7776 +
            ((C49747 * C3491 + C50911 * C3497 + C49740 * C3490 +
              C50635 * C3496) *
                 C121 +
             (C49747 * C3494 + C50911 * C3500 + C49740 * C3493 +
              C50635 * C3499) *
                 C50822) *
                C7777) *
               C393) *
              C50680 * C251 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C49747 * C776 + C50911 * C781 + C49740 * C777 + C50635 * C782) *
                 C121 +
             (C49747 * C785 + C50911 * C791 + C49740 * C786 + C50635 * C792) *
                 C50822) *
                C7776 +
            ((C49747 * C1432 + C50911 * C1440 + C49740 * C1431 +
              C50635 * C1439) *
                 C121 +
             (C49747 * C1436 + C50911 * C1444 + C49740 * C1435 +
              C50635 * C1443) *
                 C50822) *
                C7777) *
               C392 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C391 -
           (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
              C50911 * C3499) *
                 C50822 +
             (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
              C50911 * C3496) *
                 C121) *
                C7777 +
            ((C49740 * C1088 + C50635 * C1096 + C49747 * C1089 +
              C50911 * C1097) *
                 C50822 +
             (C49740 * C1084 + C50635 * C1092 + C49747 * C1085 +
              C50911 * C1093) *
                 C121) *
                C7776 +
            ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
                 C50822 +
             (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
                 C121) *
                C7775) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
               C15409 +
           (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
               C15406 +
           (C49747 * C397 + C50911 * C411 + C49740 * C396 + C50635 * C410) *
               C15410 +
           (C49747 * C407 + C50911 * C427 + C49740 * C406 + C50635 * C426) *
               C15407 +
           (C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
               C15411 +
           (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
               C15408) *
              C50796 * C50696 * C50680 * C113 -
          ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
               C15408 +
           (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
               C15411 +
           (C49740 * C405 + C50635 * C425 + C49747 * C406 + C50911 * C426) *
               C15407 +
           (C49740 * C395 + C50635 * C409 + C49747 * C396 + C50911 * C410) *
               C15410 +
           (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
               C15406 +
           (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
               C15409) *
              C50796 * C50696 * C50680 * C114 +
          ((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
               C15409 +
           (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
               C15406 +
           (C49747 * C395 + C50911 * C409 + C49740 * C394 + C50635 * C408) *
               C15410 +
           (C49747 * C405 + C50911 * C425 + C49740 * C404 + C50635 * C424) *
               C15407 +
           (C49747 * C400 + C50911 * C414 + C49740 * C401 + C50635 * C415) *
               C15411 +
           (C49747 * C418 + C50911 * C430 + C49740 * C419 + C50635 * C431) *
               C15408) *
              C50796 * C50696 * C50680 * C115 -
          ((C49740 * C422 + C50635 * C433 + C49747 * C419 + C50911 * C431) *
               C15408 +
           (C49740 * C403 + C50635 * C423 + C49747 * C401 + C50911 * C415) *
               C15411 +
           (C49740 * C421 + C50635 * C432 + C49747 * C404 + C50911 * C424) *
               C15407 +
           (C49740 * C402 + C50635 * C420 + C49747 * C394 + C50911 * C408) *
               C15410 +
           (C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
               C15406 +
           (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
               C15409) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C49747 * C397 + C50911 * C411 + C49740 * C396 + C50635 * C410) *
                C15410 +
            (C49747 * C407 + C50911 * C427 + C49740 * C406 + C50635 * C426) *
                C15407 +
            (C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                C15411 +
            (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                C15408) *
               C50796 * C50696 * C248 -
           ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
            (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
            (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
               C50796 * C50696 * C249 +
           (C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
            (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
            (C9158 + C9159) * C15408) *
               C50796 * C50696 * C250) *
              C251 +
          (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
            (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
            (C49747 * C1085 + C50911 * C1093 + C49740 * C1084 +
             C50635 * C1092) *
                C15411 +
            (C49747 * C1089 + C50911 * C1097 + C49740 * C1088 +
             C50635 * C1096) *
                C15408) *
               C50796 * C50696 * C249 -
           ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
                C15408 +
            (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
                C15411 +
            (C49740 * C405 + C50635 * C425 + C49747 * C406 + C50911 * C426) *
                C15407 +
            (C49740 * C395 + C50635 * C409 + C49747 * C396 + C50911 * C410) *
                C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50696 * C248 -
           ((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
             C50911 * C3499) *
                C15408 +
            (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
             C50911 * C3496) *
                C15411 +
            (C8712 + C8711) * C15407 + (C8710 + C8709) * C15410 +
            C8001 * C15406 + C8002 * C15409) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C391 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C392 +
           (C15777 * C15409 + C15778 * C15406 + (C15764 + C15763) * C15410 +
            (C15762 + C15761) * C15407 +
            (C49747 * C7161 + C50911 * C7167 + C49740 * C7160 +
             C50635 * C7166) *
                C15411 +
            (C49747 * C7164 + C50911 * C7170 + C49740 * C7163 +
             C50635 * C7169) *
                C15408) *
               C50796 * C393) *
              C50680 * C251 +
          (((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
            (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
            (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
               C50796 * C392 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C391 -
           ((C49740 * C7162 + C50635 * C7168 + C49747 * C7163 +
             C50911 * C7169) *
                C15408 +
            (C49740 * C7159 + C50635 * C7165 + C49747 * C7160 +
             C50911 * C7166) *
                C15411 +
            (C15776 + C15775) * C15407 + (C15774 + C15773) * C15410 +
            C15779 * C15406 + C15780 * C15409) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50929 -
           (((C49740 * C1436 + C50635 * C1444 + C49747 * C1437 +
              C50911 * C1445) *
                 C50822 +
             (C49740 * C1432 + C50635 * C1440 + C49747 * C1433 +
              C50911 * C1441) *
                 C121) *
                C7777 +
            ((C49740 * C785 + C50635 * C791 + C49747 * C784 + C50911 * C790) *
                 C50822 +
             (C49740 * C776 + C50635 * C781 + C49747 * C775 + C50911 * C780) *
                 C121) *
                C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C50970 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C49747 * C776 + C50911 * C781 + C49740 * C777 + C50635 * C782) *
                 C121 +
             (C49747 * C785 + C50911 * C791 + C49740 * C786 + C50635 * C792) *
                 C50822) *
                C7776 +
            ((C49747 * C1432 + C50911 * C1440 + C49740 * C1431 +
              C50635 * C1439) *
                 C121 +
             (C49747 * C1436 + C50911 * C1444 + C49740 * C1435 +
              C50635 * C1443) *
                 C50822) *
                C7777) *
               C50760 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50929) *
              C50680 * C50971 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50929 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50822 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C121) *
                C7777 +
            ((C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                 C50822 +
             (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                 C121) *
                C7776 +
            ((C49740 * C404 + C50635 * C424 + C49747 * C405 + C50911 * C425) *
                 C50822 +
             (C49740 * C394 + C50635 * C408 + C49747 * C395 + C50911 * C409) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50822 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50796 * C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50929 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
            (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
            (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
               C50796 * C50760 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C15409 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C15406 +
            (C16089 + C16090) * C15410 + (C16091 + C16092) * C15407 +
            (C16093 + C16094) * C15411 + (C16095 + C16096) * C15408) *
               C50796 * C50929 -
           ((C49740 * C1718 + C50635 * C1726 + C49747 * C1719 +
             C50911 * C1727) *
                C15408 +
            (C49740 * C1714 + C50635 * C1722 + C49747 * C1715 +
             C50911 * C1723) *
                C15411 +
            (C16096 + C16095) * C15407 + (C16094 + C16093) * C15410 +
            (C16092 + C16091) * C15406 + (C16090 + C16089) * C15409) *
               C50796 * C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50696 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50822 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C50696 * C50680 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50822 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50796 * C50696 * C50680 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50822) *
              C50796 * C50696 * C50680 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50822 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C49747 * C256 + C50911 * C270 + C49740 * C255 + C50635 * C269) *
                C121 +
            (C49747 * C266 + C50911 * C286 + C49740 * C265 + C50635 * C285) *
                C50822) *
               C7776 +
           ((C49747 * C257 + C50911 * C271 + C49740 * C258 + C50635 * C272) *
                C121 +
            (C49747 * C275 + C50911 * C287 + C49740 * C276 + C50635 * C288) *
                C50822) *
               C7777) *
              C50696 * C50680 * C113 -
          (((C49740 * C277 + C50635 * C289 + C49747 * C276 + C50911 * C288) *
                C50822 +
            (C49740 * C259 + C50635 * C273 + C49747 * C258 + C50911 * C272) *
                C121) *
               C7777 +
           ((C49740 * C264 + C50635 * C284 + C49747 * C265 + C50911 * C285) *
                C50822 +
            (C49740 * C254 + C50635 * C268 + C49747 * C255 + C50911 * C269) *
                C121) *
               C7776 +
           ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C50822 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C121) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C121 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C50822) *
               C7775 +
           ((C49747 * C254 + C50911 * C268 + C49740 * C253 + C50635 * C267) *
                C121 +
            (C49747 * C264 + C50911 * C284 + C49740 * C263 + C50635 * C283) *
                C50822) *
               C7776 +
           ((C49747 * C259 + C50911 * C273 + C49740 * C260 + C50635 * C274) *
                C121 +
            (C49747 * C277 + C50911 * C289 + C49740 * C278 + C50635 * C290) *
                C50822) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C49740 * C281 + C50635 * C292 + C49747 * C278 + C50911 * C290) *
                C50822 +
            (C49740 * C262 + C50635 * C282 + C49747 * C260 + C50911 * C274) *
                C121) *
               C7777 +
           ((C49740 * C280 + C50635 * C291 + C49747 * C263 + C50911 * C283) *
                C50822 +
            (C49740 * C261 + C50635 * C279 + C49747 * C253 + C50911 * C267) *
                C121) *
               C7776 +
           ((C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
                C50822 +
            (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
                C121) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C248 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C249 +
           (C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C49747 * C3315 + C50911 * C3321 + C49740 * C3314 +
              C50635 * C3320) *
                 C121 +
             (C49747 * C3318 + C50911 * C3324 + C49740 * C3317 +
              C50635 * C3323) *
                 C50822) *
                C7777) *
               C50696 * C250) *
              C251 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C249 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C248 -
           (((C49740 * C3316 + C50635 * C3322 + C49747 * C3317 +
              C50911 * C3323) *
                 C50822 +
             (C49740 * C3313 + C50635 * C3319 + C49747 * C3314 +
              C50911 * C3320) *
                 C121) *
                C7777 +
            ((C7998 + C7997) * C50822 + (C7996 + C7995) * C121) * C7776 +
            C8008 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
               C15409 +
           (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
               C15406 +
           (C49747 * C397 + C50911 * C411 + C49740 * C396 + C50635 * C410) *
               C15410 +
           (C49747 * C407 + C50911 * C427 + C49740 * C406 + C50635 * C426) *
               C15407 +
           (C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
               C15411 +
           (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
               C15408) *
              C50796 * C50696 * C50680 * C113 -
          ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
               C15408 +
           (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
               C15411 +
           (C49740 * C405 + C50635 * C425 + C49747 * C406 + C50911 * C426) *
               C15407 +
           (C49740 * C395 + C50635 * C409 + C49747 * C396 + C50911 * C410) *
               C15410 +
           (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
               C15406 +
           (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
               C15409) *
              C50796 * C50696 * C50680 * C114 +
          ((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
               C15409 +
           (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
               C15406 +
           (C49747 * C395 + C50911 * C409 + C49740 * C394 + C50635 * C408) *
               C15410 +
           (C49747 * C405 + C50911 * C425 + C49740 * C404 + C50635 * C424) *
               C15407 +
           (C49747 * C400 + C50911 * C414 + C49740 * C401 + C50635 * C415) *
               C15411 +
           (C49747 * C418 + C50911 * C430 + C49740 * C419 + C50635 * C431) *
               C15408) *
              C50796 * C50696 * C50680 * C115 -
          ((C49740 * C422 + C50635 * C433 + C49747 * C419 + C50911 * C431) *
               C15408 +
           (C49740 * C403 + C50635 * C423 + C49747 * C401 + C50911 * C415) *
               C15411 +
           (C49740 * C421 + C50635 * C432 + C49747 * C404 + C50911 * C424) *
               C15407 +
           (C49740 * C402 + C50635 * C420 + C49747 * C394 + C50911 * C408) *
               C15410 +
           (C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
               C15406 +
           (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
               C15409) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C49747 * C397 + C50911 * C411 + C49740 * C396 + C50635 * C410) *
                C15410 +
            (C49747 * C407 + C50911 * C427 + C49740 * C406 + C50635 * C426) *
                C15407 +
            (C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                C15411 +
            (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                C15408) *
               C50796 * C50696 * C248 -
           ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
            (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
            (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
               C50796 * C50696 * C249 +
           (C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
            (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
            (C9158 + C9159) * C15408) *
               C50796 * C50696 * C250) *
              C251 +
          (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
            (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
            (C49747 * C1085 + C50911 * C1093 + C49740 * C1084 +
             C50635 * C1092) *
                C15411 +
            (C49747 * C1089 + C50911 * C1097 + C49740 * C1088 +
             C50635 * C1096) *
                C15408) *
               C50796 * C50696 * C249 -
           ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
                C15408 +
            (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
                C15411 +
            (C49740 * C405 + C50635 * C425 + C49747 * C406 + C50911 * C426) *
                C15407 +
            (C49740 * C395 + C50635 * C409 + C49747 * C396 + C50911 * C410) *
                C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50696 * C248 -
           ((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
             C50911 * C3499) *
                C15408 +
            (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
             C50911 * C3496) *
                C15411 +
            (C8712 + C8711) * C15407 + (C8710 + C8709) * C15410 +
            C8001 * C15406 + C8002 * C15409) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C50972 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50973 +
           (C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C50696 * C1199) *
              C50920 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50973 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C50972 -
           (((C49740 * C3316 + C50635 * C3322 + C49747 * C3317 +
              C50911 * C3323) *
                 C50822 +
             (C49740 * C3313 + C50635 * C3319 + C49747 * C3314 +
              C50911 * C3320) *
                 C121) *
                C7777 +
            ((C7998 + C7997) * C50822 + (C7996 + C7995) * C121) * C7776 +
            C8008 * C7775) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C50972 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50973 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50696 * C1199) *
              C50920 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50973 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C50972 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50822 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50796 * C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50696 * C50972 -
           (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
            (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
            (C7976 + C7975) * C15409) *
               C50796 * C50696 * C50973 +
           (C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
            (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
            (C9158 + C9159) * C15408) *
               C50796 * C50696 * C1199) *
              C50920 +
          (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
            (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
            (C16299 + C16300) * C15411 + (C16301 + C16302) * C15408) *
               C50796 * C50696 * C50973 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50696 * C50972 -
           ((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
             C50911 * C3499) *
                C15408 +
            (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
             C50911 * C3496) *
                C15411 +
            (C8712 + C8711) * C15407 + (C8710 + C8709) * C15410 +
            C8001 * C15406 + C8002 * C15409) *
               C50796 * C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50929 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50972 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50760 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50929) *
              C50973 +
          ((C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C50929 -
           (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
              C50911 * C9652) *
                 C50822 +
             (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
              C50911 * C9650) *
                 C121) *
                C7777 +
            ((C9669 + C9668) * C50822 + (C9667 + C9666) * C121) * C7776 +
            C9670 * C7775) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50972 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50929) *
              C50973 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50822 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50796 * C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50929 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C50760) *
              C50972 +
          (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
            (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
            (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
               C50796 * C50760 -
           (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
            (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
            (C7976 + C7975) * C15409) *
               C50796 * C50929) *
              C50973 +
          ((C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
            (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
            (C9158 + C9159) * C15408) *
               C50796 * C50929 -
           ((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
             C50911 * C10067) *
                C15408 +
            (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
             C50911 * C10065) *
                C15411 +
            (C9159 + C9158) * C15407 + (C9157 + C9156) * C15410 +
            C9654 * C15406 + C9655 * C15409) *
               C50796 * C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50822) *
                   C50796 * C50696 * C893 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50822 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50796 * C50696 * C50732) *
                  C895 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50822) *
                   C50796 * C50696 * C50732 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50822 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50796 * C50696 * C893) *
                  C896 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50822) *
                   C50796 * C50696 * C893 -
               ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
                 C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                    C50822 +
                (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
                 C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                    C121) *
                   C50796 * C50696 * C50732) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50822) *
                  C50796 * C50696 * C964 -
              ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                   C50822 +
               (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                   C121) *
                  C50796 * C50696 * C965 +
              ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                   C121 +
               (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                   C50822) *
                  C50796 * C50696 * C966 -
              ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
                C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                   C50822 +
               (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
                C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                   C121) *
                  C50796 * C50696 * C967) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C393) *
              C893 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C392 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C391 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50822 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C893 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50732) *
              C895 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50732 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50696 * C893 -
           (((C49740 * C973 + C50635 * C981 + C49747 * C974 + C50911 * C982) *
                 C50822 +
             (C49740 * C969 + C50635 * C977 + C49747 * C970 + C50911 * C978) *
                 C121) *
                C7777 +
            ((C8324 + C8323) * C50822 + (C8322 + C8321) * C121) * C7776 +
            ((C8320 + C8319) * C50822 + (C8318 + C8317) * C121) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
           C8007 * C7777) *
              C50696 * C964 -
          (C8981 * C7777 +
           ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
           ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
              C50696 * C965 +
          (C8007 * C7775 +
           ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
           ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
              C50696 * C966 -
          (((C49740 * C8958 + C50635 * C8962 + C49747 * C8959 +
             C50911 * C8963) *
                C50822 +
            (C49740 * C8956 + C50635 * C8960 + C49747 * C8957 +
             C50911 * C8961) *
                C121) *
               C7777 +
           ((C8980 + C8979) * C50822 + (C8978 + C8977) * C121) * C7776 +
           C8981 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C391 -
           (((C8697 + C8698) * C50822 + (C8699 + C8700) * C121) * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C392 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
            ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
               C393) *
              C893 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C49747 * C4007 + C50911 * C4013 + C49740 * C4006 +
              C50635 * C4012) *
                 C121 +
             (C49747 * C4010 + C50911 * C4016 + C49740 * C4009 +
              C50635 * C4015) *
                 C50822) *
                C7777) *
               C392 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C391 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50822 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C121) *
                C7777 +
            ((C9159 + C9158) * C50822 + (C9157 + C9156) * C121) * C7776 +
            ((C9155 + C9154) * C50822 + (C9153 + C9152) * C121) * C7775) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50696 * C893 -
           ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
            (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
            (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
            (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
            (C16299 + C16300) * C15411 + (C16301 + C16302) * C15408) *
               C50796 * C50696 * C50732 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50696 * C893) *
              C896 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C15409 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C15406 +
            (C16089 + C16090) * C15410 + (C16091 + C16092) * C15407 +
            (C16093 + C16094) * C15411 + (C16095 + C16096) * C15408) *
               C50796 * C50696 * C893 -
           ((C49740 * C1087 + C50635 * C1095 + C49747 * C1088 +
             C50911 * C1096) *
                C15408 +
            (C49740 * C1083 + C50635 * C1091 + C49747 * C1084 +
             C50911 * C1092) *
                C15411 +
            (C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                C15407 +
            (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                C15410 +
            (C8320 + C8319) * C15406 + (C8318 + C8317) * C15409) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
               C15409 +
           (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
               C15406 +
           (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
           C15777 * C15411 + C15778 * C15408) *
              C50796 * C50696 * C964 -
          ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
           (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
           (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
              C50796 * C50696 * C965 +
          (C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
           (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
           (C9158 + C9159) * C15408) *
              C50796 * C50696 * C966 -
          ((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 + C50911 * C9134) *
               C15408 +
           (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 + C50911 * C9132) *
               C15411 +
           (C9669 + C9668) * C15407 + (C9667 + C9666) * C15410 +
           C8965 * C15406 + C8966 * C15409) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C391 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C392 +
           (C15777 * C15409 + C15778 * C15406 + (C15764 + C15763) * C15410 +
            (C15762 + C15761) * C15407 +
            (C49747 * C7161 + C50911 * C7167 + C49740 * C7160 +
             C50635 * C7166) *
                C15411 +
            (C49747 * C7164 + C50911 * C7170 + C49740 * C7163 +
             C50635 * C7169) *
                C15408) *
               C50796 * C393) *
              C893 +
          (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
            (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
            (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
               C50796 * C392 -
           (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
            (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
            (C7976 + C7975) * C15409) *
               C50796 * C391 -
           ((C49740 * C16693 + C50635 * C16695 + C49747 * C14812 +
             C50911 * C14815) *
                C15408 +
            (C49740 * C16692 + C50635 * C16694 + C49747 * C14809 +
             C50911 * C14813) *
                C15411 +
            (C16710 + C16709) * C15407 + (C16708 + C16707) * C15410 +
            C16705 * C15406 + C16706 * C15409) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C121 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C50822) *
                 C7775 +
             ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
             C8007 * C7777) *
                C50929 -
            (((C8697 + C8698) * C50822 + (C8699 + C8700) * C121) * C7777 +
             ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
             ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                  C50822 +
              (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                  C121) *
                 C7775) *
                C50760) *
               C893 +
           ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
             ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
             ((C49747 * C4007 + C50911 * C4013 + C49740 * C4006 +
               C50635 * C4012) *
                  C121 +
              (C49747 * C4010 + C50911 * C4016 + C49740 * C4009 +
               C50635 * C4015) *
                  C50822) *
                 C7777) *
                C50760 -
            (C8981 * C7777 +
             ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
             ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
                C50929) *
               C50732) *
              C50920 +
          (((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                  C121 +
              (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                  C50822) *
                 C7775 +
             ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
             ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
                C50760 -
            (C8008 * C7777 +
             ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
             ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C50822 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C121) *
                 C7775) *
                C50929) *
               C893 +
           ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
             ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
             ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
                C50929 -
            (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
               C50911 * C4015) *
                  C50822 +
              (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
               C50911 * C4012) *
                  C121) *
                 C7777 +
             ((C8712 + C8711) * C50822 + (C8710 + C8709) * C121) * C7776 +
             ((C8708 + C8707) * C50822 + (C8706 + C8705) * C121) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50822 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50796 * C50760) *
               C893 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50822 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50822 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50796 * C50929) *
               C893 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50822 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C15409 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C15406 +
             (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
             C15777 * C15411 + C15778 * C15408) *
                C50796 * C50929 -
            ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
             (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
             (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
                C50796 * C50760) *
               C893 +
           (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
             (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
             (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
                C50796 * C50760 -
            (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
             (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
             (C7976 + C7975) * C15409) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
             (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
             (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
                C50796 * C50760 -
            (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
             (C15766 + C15765) * C15410 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C15406 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C15409) *
                C50796 * C50929) *
               C893 +
           (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
             (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
             (C16299 + C16300) * C15411 + (C16301 + C16302) * C15408) *
                C50796 * C50929 -
            ((C49740 * C4428 + C50635 * C4434 + C49747 * C4429 +
              C50911 * C4435) *
                 C15408 +
             (C49740 * C4425 + C50635 * C4431 + C49747 * C4426 +
              C50911 * C4432) *
                 C15411 +
             (C16302 + C16301) * C15407 + (C16300 + C16299) * C15410 +
             (C8708 + C8707) * C15406 + (C8706 + C8705) * C15409) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C50696 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50822 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50796 * C50696 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50822) *
              C50796 * C50696 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50822 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50732 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50696 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50822 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C893 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50732) *
              C895 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50732 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50696 * C893 -
           (((C49740 * C973 + C50635 * C981 + C49747 * C974 + C50911 * C982) *
                 C50822 +
             (C49740 * C969 + C50635 * C977 + C49747 * C970 + C50911 * C978) *
                 C121) *
                C7777 +
            ((C8324 + C8323) * C50822 + (C8322 + C8321) * C121) * C7776 +
            ((C8320 + C8319) * C50822 + (C8318 + C8317) * C121) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
           C8007 * C7777) *
              C50696 * C964 -
          (C8981 * C7777 +
           ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
           ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
              C50696 * C965 +
          (C8007 * C7775 +
           ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
           ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
              C50696 * C966 -
          (((C49740 * C8958 + C50635 * C8962 + C49747 * C8959 +
             C50911 * C8963) *
                C50822 +
            (C49740 * C8956 + C50635 * C8960 + C49747 * C8957 +
             C50911 * C8961) *
                C121) *
               C7777 +
           ((C8980 + C8979) * C50822 + (C8978 + C8977) * C121) * C7776 +
           C8981 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50696 * C893 -
           ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
            (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
            (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
            (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
            (C16299 + C16300) * C15411 + (C16301 + C16302) * C15408) *
               C50796 * C50696 * C50732 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50696 * C893) *
              C896 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C15409 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C15406 +
            (C16089 + C16090) * C15410 + (C16091 + C16092) * C15407 +
            (C16093 + C16094) * C15411 + (C16095 + C16096) * C15408) *
               C50796 * C50696 * C893 -
           ((C49740 * C1087 + C50635 * C1095 + C49747 * C1088 +
             C50911 * C1096) *
                C15408 +
            (C49740 * C1083 + C50635 * C1091 + C49747 * C1084 +
             C50911 * C1092) *
                C15411 +
            (C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                C15407 +
            (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                C15410 +
            (C8320 + C8319) * C15406 + (C8318 + C8317) * C15409) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
               C15409 +
           (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
               C15406 +
           (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
           C15777 * C15411 + C15778 * C15408) *
              C50796 * C50696 * C964 -
          ((C9155 + C9154) * C15408 + (C9153 + C9152) * C15411 +
           (C8701 + C8702) * C15407 + (C8703 + C8704) * C15410 +
           (C7978 + C7977) * C15406 + (C7976 + C7975) * C15409) *
              C50796 * C50696 * C965 +
          (C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
           (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
           (C9158 + C9159) * C15408) *
              C50796 * C50696 * C966 -
          ((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 + C50911 * C9134) *
               C15408 +
           (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 + C50911 * C9132) *
               C15411 +
           (C9669 + C9668) * C15407 + (C9667 + C9666) * C15410 +
           C8965 * C15406 + C8966 * C15409) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C121 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C50822) *
                 C7775 +
             ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
             C8007 * C7777) *
                C1544 -
            (C9670 * C7777 +
             ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
             ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                  C50822 +
              (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                  C121) *
                 C7775) *
                C50760) *
               C50928 +
           ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
             ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
             ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
                C50760 -
            (C8981 * C7777 +
             ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
             ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
                C1544) *
               C50732) *
              C50920 +
          (((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                  C121 +
              (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                  C50822) *
                 C7775 +
             ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
             ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
                C50760 -
            (C8008 * C7777 +
             ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
             ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C50822 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C121) *
                 C7775) *
                C1544) *
               C50928 +
           ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
             ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
             ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
                C1544 -
            (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
               C50911 * C4015) *
                  C50822 +
              (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
               C50911 * C4012) *
                  C121) *
                 C7777 +
             ((C8712 + C8711) * C50822 + (C8710 + C8709) * C121) * C7776 +
             ((C8708 + C8707) * C50822 + (C8706 + C8705) * C121) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50822) *
                C50796 * C1544 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50822 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50822 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50822 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50796 * C1544) *
               C50928 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50822) *
                C50796 * C1544 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50822 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C15409 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C15406 +
             (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
             C15777 * C15411 + C15778 * C15408) *
                C50796 * C1544 -
            (C17595 * C15408 + C17596 * C15411 + (C15760 + C15759) * C15407 +
             (C15758 + C15757) * C15410 + (C15756 + C15755) * C15406 +
             (C15754 + C15753) * C15409) *
                C50796 * C50760) *
               C50928 +
           (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
             (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
             (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
                C50796 * C50760 -
            (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
             (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
             (C7976 + C7975) * C15409) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          ((((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
             (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
             (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
                C50796 * C50760 -
            (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
             (C15766 + C15765) * C15410 +
             (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C15406 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C15409) *
                C50796 * C1544) *
               C50928 +
           (((C7987 + C7988) * C15409 + (C7989 + C7990) * C15406 +
             (C8705 + C8706) * C15410 + (C8707 + C8708) * C15407 +
             (C16299 + C16300) * C15411 + (C16301 + C16302) * C15408) *
                C50796 * C1544 -
            ((C49740 * C4428 + C50635 * C4434 + C49747 * C4429 +
              C50911 * C4435) *
                 C15408 +
             (C49740 * C4425 + C50635 * C4431 + C49747 * C4426 +
              C50911 * C4432) *
                 C15411 +
             (C16302 + C16301) * C15407 + (C16300 + C16299) * C15410 +
             (C8708 + C8707) * C15406 + (C8706 + C8705) * C15409) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50974 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50975 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
            ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
               C1960) *
              C50928 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50975 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50974 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50822 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C121) *
                C7777 +
            ((C9159 + C9158) * C50822 + (C9157 + C9156) * C121) * C7776 +
            ((C9155 + C9154) * C50822 + (C9153 + C9152) * C121) * C7775) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50974 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50975 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C1960) *
              C50928 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50975 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50974 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50822 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50796 * C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50974 -
           (C17595 * C15408 + C17596 * C15411 + (C15760 + C15759) * C15407 +
            (C15758 + C15757) * C15410 + (C15756 + C15755) * C15406 +
            (C15754 + C15753) * C15409) *
               C50796 * C50975 +
           (C15777 * C15409 + C15778 * C15406 + (C15764 + C15763) * C15410 +
            (C15762 + C15761) * C15407 + (C17605 + C17606) * C15411 +
            (C17607 + C17608) * C15408) *
               C50796 * C1960) *
              C50928 +
          (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
            (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
            (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
               C50796 * C50975 -
           (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
            (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
            (C7976 + C7975) * C15409) *
               C50796 * C50974 -
           ((C49740 * C16693 + C50635 * C16695 + C49747 * C14812 +
             C50911 * C14815) *
                C15408 +
            (C49740 * C16692 + C50635 * C16694 + C49747 * C14809 +
             C50911 * C14813) *
                C15411 +
            (C16710 + C16709) * C15407 + (C16708 + C16707) * C15410 +
            C16705 * C15406 + C16706 * C15409) *
               C50796 * C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50822) *
                   C50796 * C1544 -
               ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
                 C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                    C50822 +
                (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
                 C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                    C121) *
                   C50796 * C50760) *
                  C50680 * C895 +
              (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
                 C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                    C121 +
                (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
                 C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                    C50822) *
                   C50796 * C50760 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50822 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50796 * C1544) *
                  C50680 * C896 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50822) *
                   C50796 * C1544 -
               ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
                 C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                    C50822 +
                (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
                 C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                    C121) *
                   C50796 * C50760) *
                  C50680 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50822) *
                   C50796 * C1544 -
               ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
                 C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                    C50822 +
                (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
                 C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                    C121) *
                   C50796 * C50760) *
                  C248 +
              (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
                 C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                    C121 +
                (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
                 C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                    C50822) *
                   C50796 * C50760 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50822 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50796 * C1544) *
                  C249 +
              (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50822) *
                   C50796 * C1544 -
               ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
                 C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                    C50822 +
                (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
                 C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                    C121) *
                   C50796 * C50760) *
                  C250) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C1710 -
          ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
            C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
               C50822 +
           (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
            C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
               C121) *
              C50796 * C1711 +
          ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
            C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
               C121 +
           (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
            C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
               C50822) *
              C50796 * C1712 -
          ((C120 * C1718 + C108 * C1726 + C119 * C1719 + C107 * C1727 +
            C118 * C1720 + C106 * C1728 + C117 * C1721 + C105 * C1729) *
               C50822 +
           (C120 * C1714 + C108 * C1722 + C119 * C1715 + C107 * C1723 +
            C118 * C1716 + C106 * C1724 + C117 * C1717 + C105 * C1725) *
               C121) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C895 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
            ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
               C50760 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C1544 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50822 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C121) *
                C7777 +
            ((C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                 C50822 +
             (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                 C121) *
                C7776 +
            ((C49740 * C404 + C50635 * C424 + C49747 * C405 + C50911 * C425) *
                 C50822 +
             (C49740 * C394 + C50635 * C408 + C49747 * C395 + C50911 * C409) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C248 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50760 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C1544) *
              C249 +
          ((C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C1544 -
           (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
              C50911 * C9652) *
                 C50822 +
             (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
              C50911 * C9650) *
                 C121) *
                C7777 +
            ((C9669 + C9668) * C50822 + (C9667 + C9666) * C121) * C7776 +
            C9670 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
           C8007 * C7777) *
              C1710 -
          (C9670 * C7777 +
           ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
           ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                C50822 +
            (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                C121) *
               C7775) *
              C1711 +
          (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                C121 +
            (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                C50822) *
               C7775 +
           ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
           ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
              C1712 -
          (((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
             C50911 * C10067) *
                C50822 +
            (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
             C50911 * C10065) *
                C121) *
               C7777 +
           ((C49740 * C4429 + C50635 * C4435 + C49747 * C4430 +
             C50911 * C4436) *
                C50822 +
            (C49740 * C4426 + C50635 * C4432 + C49747 * C4427 +
             C50911 * C4433) *
                C121) *
               C7776 +
           ((C49740 * C1720 + C50635 * C1728 + C49747 * C1721 +
             C50911 * C1729) *
                C50822 +
            (C49740 * C1716 + C50635 * C1724 + C49747 * C1717 +
             C50911 * C1725) *
                C121) *
               C7775) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C1544 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
            (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
            (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
               C50796 * C50760 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C15409 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C15406 +
            (C16089 + C16090) * C15410 + (C16091 + C16092) * C15407 +
            (C16093 + C16094) * C15411 + (C16095 + C16096) * C15408) *
               C50796 * C1544 -
           ((C49740 * C1718 + C50635 * C1726 + C49747 * C1719 +
             C50911 * C1727) *
                C15408 +
            (C49740 * C1714 + C50635 * C1722 + C49747 * C1715 +
             C50911 * C1723) *
                C15411 +
            (C16096 + C16095) * C15407 + (C16094 + C16093) * C15410 +
            (C16092 + C16091) * C15406 + (C16090 + C16089) * C15409) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C1544 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C50760) *
              C248 +
          (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
            (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
            (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
               C50796 * C50760 -
           (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
            (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
            (C7976 + C7975) * C15409) *
               C50796 * C1544) *
              C249 +
          ((C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
            (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
            (C9158 + C9159) * C15408) *
               C50796 * C1544 -
           ((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
             C50911 * C10067) *
                C15408 +
            (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
             C50911 * C10065) *
                C15411 +
            (C9159 + C9158) * C15407 + (C9157 + C9156) * C15410 +
            C9654 * C15406 + C9655 * C15409) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
               C15409 +
           (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
               C15406 +
           (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
           C15777 * C15411 + C15778 * C15408) *
              C50796 * C1710 -
          (C17595 * C15408 + C17596 * C15411 + (C15760 + C15759) * C15407 +
           (C15758 + C15757) * C15410 + (C15756 + C15755) * C15406 +
           (C15754 + C15753) * C15409) *
              C50796 * C1711 +
          (C15777 * C15409 + C15778 * C15406 + (C15764 + C15763) * C15410 +
           (C15762 + C15761) * C15407 + (C17605 + C17606) * C15411 +
           (C17607 + C17608) * C15408) *
              C50796 * C1712 -
          ((C49740 * C17588 + C50635 * C17592 + C49747 * C17589 +
            C50911 * C17593) *
               C15408 +
           (C49740 * C17586 + C50635 * C17590 + C49747 * C17587 +
            C50911 * C17591) *
               C15411 +
           (C17608 + C17607) * C15407 + (C17606 + C17605) * C15410 +
           C17595 * C15406 + C17596 * C15409) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50974 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50975 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
            ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
               C1960) *
              C50680 * C50920 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
            ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
               C50975 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50974 -
           (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
              C50911 * C3499) *
                 C50822 +
             (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
              C50911 * C3496) *
                 C121) *
                C7777 +
            ((C49740 * C1088 + C50635 * C1096 + C49747 * C1089 +
              C50911 * C1097) *
                 C50822 +
             (C49740 * C1084 + C50635 * C1092 + C49747 * C1085 +
              C50911 * C1093) *
                 C121) *
                C7776 +
            ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
                 C50822 +
             (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
                 C121) *
                C7775) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50974 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50975 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C1960) *
              C50680 * C50920 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50975 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50974 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50822 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50796 * C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C50974 -
           (C17595 * C15408 + C17596 * C15411 + (C15760 + C15759) * C15407 +
            (C15758 + C15757) * C15410 + (C15756 + C15755) * C15406 +
            (C15754 + C15753) * C15409) *
               C50796 * C50975 +
           (C15777 * C15409 + C15778 * C15406 + (C15764 + C15763) * C15410 +
            (C15762 + C15761) * C15407 + (C17605 + C17606) * C15411 +
            (C17607 + C17608) * C15408) *
               C50796 * C1960) *
              C50680 * C50920 +
          (((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
            (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
            (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
               C50796 * C50975 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C50974 -
           ((C49740 * C7162 + C50635 * C7168 + C49747 * C7163 +
             C50911 * C7169) *
                C15408 +
            (C49740 * C7159 + C50635 * C7165 + C49747 * C7160 +
             C50911 * C7166) *
                C15411 +
            (C15776 + C15775) * C15407 + (C15774 + C15773) * C15410 +
            C15779 * C15406 + C15780 * C15409) *
               C50796 * C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50822 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50822 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C895 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
            ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
               C50760 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C1544 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50822 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C121) *
                C7777 +
            ((C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                 C50822 +
             (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                 C121) *
                C7776 +
            ((C49740 * C404 + C50635 * C424 + C49747 * C405 + C50911 * C425) *
                 C50822 +
             (C49740 * C394 + C50635 * C408 + C49747 * C395 + C50911 * C409) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C248 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50760 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C1544) *
              C249 +
          ((C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C1544 -
           (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
              C50911 * C9652) *
                 C50822 +
             (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
              C50911 * C9650) *
                 C121) *
                C7777 +
            ((C9669 + C9668) * C50822 + (C9667 + C9666) * C121) * C7776 +
            C9670 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C1544 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C15765 + C15766) * C15409 + (C15767 + C15768) * C15406 +
            (C15769 + C15770) * C15410 + (C15771 + C15772) * C15407 +
            (C15773 + C15774) * C15411 + (C15775 + C15776) * C15408) *
               C50796 * C50760 -
           (C15779 * C15408 + C15780 * C15411 + (C15768 + C15767) * C15407 +
            (C15766 + C15765) * C15410 +
            (C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C15406 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C15409) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C15409 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C15406 +
            (C16089 + C16090) * C15410 + (C16091 + C16092) * C15407 +
            (C16093 + C16094) * C15411 + (C16095 + C16096) * C15408) *
               C50796 * C1544 -
           ((C49740 * C1718 + C50635 * C1726 + C49747 * C1719 +
             C50911 * C1727) *
                C15408 +
            (C49740 * C1714 + C50635 * C1722 + C49747 * C1715 +
             C50911 * C1723) *
                C15411 +
            (C16096 + C16095) * C15407 + (C16094 + C16093) * C15410 +
            (C16092 + C16091) * C15406 + (C16090 + C16089) * C15409) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C15409 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C15406 +
            (C15753 + C15754) * C15410 + (C15755 + C15756) * C15407 +
            C15777 * C15411 + C15778 * C15408) *
               C50796 * C1544 -
           ((C15761 + C15762) * C15408 + (C15763 + C15764) * C15411 +
            (C15760 + C15759) * C15407 + (C15758 + C15757) * C15410 +
            (C15756 + C15755) * C15406 + (C15754 + C15753) * C15409) *
               C50796 * C50760) *
              C248 +
          (((C8704 + C8703) * C15409 + (C8702 + C8701) * C15406 +
            (C9152 + C9153) * C15410 + (C9154 + C9155) * C15407 +
            (C16707 + C16708) * C15411 + (C16709 + C16710) * C15408) *
               C50796 * C50760 -
           (C16705 * C15408 + C16706 * C15411 + (C8701 + C8702) * C15407 +
            (C8703 + C8704) * C15410 + (C7978 + C7977) * C15406 +
            (C7976 + C7975) * C15409) *
               C50796 * C1544) *
              C249 +
          ((C7999 * C15409 + C8000 * C15406 + (C8700 + C8699) * C15410 +
            (C8698 + C8697) * C15407 + (C9156 + C9157) * C15411 +
            (C9158 + C9159) * C15408) *
               C50796 * C1544 -
           ((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
             C50911 * C10067) *
                C15408 +
            (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
             C50911 * C10065) *
                C15411 +
            (C9159 + C9158) * C15407 + (C9157 + C9156) * C15410 +
            C9654 * C15406 + C9655 * C15409) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C50928 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C50732) *
              C50970 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50732 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50696 * C50928 -
           (((C10625 * C3316 + C50630 * C3322) * C50822 +
             (C10625 * C3313 + C50630 * C3319) * C121) *
                C10624 +
            (C11012 + C11011) * C10623 + (C11010 + C11009) * C10622 +
            (C11008 + C11007) * C10621) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C50928 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50732) *
              C50970 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50732 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50696 * C50928 -
           (((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
              C2162 * C277 + C2157 * C289) *
                 C50822 +
             (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
              C2162 * C259 + C2157 * C273) *
                 C121) *
                C50810 +
            ((C2693 + C2692 + C2691) * C50822 +
             (C2690 + C2689 + C2688) * C121) *
                C50939) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50696 * C50928 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50696 * C50732) *
              C50970 +
          (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
            (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
               C50696 * C50732 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C15409 +
             (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
             C13298 * C15407 + (C10625 * C400 + C50630 * C414) * C15411 +
             (C10625 * C418 + C50630 * C430) * C15408) *
                C50939 +
            (C18667 + C18668 + C18669 + C18670 + C18677 + C18678) * C50810) *
               C50696 * C50928 -
           (((C10625 * C3492 + C50630 * C3498) * C15408 +
             (C10625 * C3489 + C50630 * C3495) * C15411 + C13142 * C15407 +
             C13141 * C15410 + C11004 * C15406 + C11003 * C15409) *
                C50810 +
            (C18678 + C18677 + C18670 + C18669 + C18668 + C18667) * C50939) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C121 +
              (C10625 * C133 + C50630 * C143) * C50822) *
                 C10621 +
             (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
                C50929 -
            ((C11277 + C11278) * C10624 + (C11279 + C11280) * C10623 +
             (C11281 + C11282) * C10622 +
             ((C10625 * C407 + C50630 * C427) * C50822 +
              (C10625 * C397 + C50630 * C411) * C121) *
                 C10621) *
                C50760) *
               C50928 +
           (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
             (C11278 + C11277) * C10623 +
             ((C10625 * C9646 + C50630 * C9650) * C121 +
              (C10625 * C9648 + C50630 * C9652) * C50822) *
                 C10624) *
                C50760 -
            ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
             (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
                C50929) *
               C50732) *
              C251 +
          (((((C10625 * C396 + C50630 * C410) * C121 +
              (C10625 * C406 + C50630 * C426) * C50822) *
                 C10621 +
             (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
             (C11287 + C11288) * C10624) *
                C50760 -
            (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
             ((C10625 * C134 + C50630 * C144) * C50822 +
              (C10625 * C123 + C50630 * C130) * C121) *
                 C10621) *
                C50929) *
               C50928 +
           (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
             (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
                C50929 -
            (((C10625 * C9647 + C50630 * C9651) * C50822 +
              (C10625 * C9645 + C50630 * C9649) * C121) *
                 C10624 +
             (C11288 + C11287) * C10623 + (C11286 + C11285) * C10622 +
             (C11284 + C11283) * C10621) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50822) *
                 C50939 +
             ((C2360 + C2361 + C2362) * C121 +
              (C2363 + C2364 + C2365) * C50822) *
                 C50810) *
                C50929 -
            (((C3058 + C3059 + C3060) * C50822 +
              (C3061 + C3062 + C3063) * C121) *
                 C50810 +
             ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
               C2162 * C407 + C2157 * C427) *
                  C50822 +
              (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
               C2162 * C397 + C2157 * C411) *
                  C121) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C3063 + C3062 + C3061) * C121 +
              (C3060 + C3059 + C3058) * C50822) *
                 C50939 +
             ((C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
               C2164 * C1431 + C2159 * C1439) *
                  C121 +
              (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
               C2164 * C1435 + C2159 * C1443) *
                  C50822) *
                 C50810) *
                C50760 -
            (((C2366 + C2367 + C2368) * C50822 +
              (C2369 + C2370 + C2371) * C121) *
                 C50810 +
             ((C2365 + C2364 + C2363) * C50822 +
              (C2362 + C2361 + C2360) * C121) *
                 C50939) *
                C50929) *
               C50732) *
              C251 +
          (((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
               C2164 * C394 + C2159 * C408) *
                  C121 +
              (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
               C2164 * C404 + C2159 * C424) *
                  C50822) *
                 C50939 +
             ((C3064 + C3065 + C3066) * C121 +
              (C3067 + C3068 + C3069) * C50822) *
                 C50810) *
                C50760 -
            (((C2377 + C2376 + C2375) * C50822 +
              (C2374 + C2373 + C2372) * C121) *
                 C50810 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50822 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50939) *
                C50929) *
               C50928 +
           ((((C2372 + C2373 + C2374) * C121 +
              (C2375 + C2376 + C2377) * C50822) *
                 C50939 +
             ((C2378 + C2379 + C2380) * C121 +
              (C2381 + C2382 + C2383) * C50822) *
                 C50810) *
                C50929 -
            (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
               C2162 * C1436 + C2157 * C1444) *
                  C50822 +
              (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
               C2162 * C1432 + C2157 * C1440) *
                  C121) *
                 C50810 +
             ((C3069 + C3068 + C3067) * C50822 +
              (C3066 + C3065 + C3064) * C121) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C15409 +
              (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
              C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                 C50939 +
             (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
                C50929 -
            ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
             (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
              C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                 C50939) *
                C50760) *
               C50928 +
           (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
             (C11268 * C15409 + C11267 * C15406 + C11583 * C15410 +
              C11584 * C15407 + C13920 * C15411 + C13921 * C15408) *
                 C50810) *
                C50760 -
            ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
             (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
                C50929) *
               C50732) *
              C251 +
          ((((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
              C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                 C50939 +
             (C19031 + C19032 + C19033 + C19034 + C19035 + C19036) * C50810) *
                C50760 -
            ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
             (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
              C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
              (C10625 * C123 + C50630 * C130) * C15409) *
                 C50939) *
                C50929) *
               C50928 +
           (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
             (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
                C50929 -
            (((C10625 * C10062 + C50630 * C10066) * C15408 +
              (C10625 * C10060 + C50630 * C10064) * C15411 + C12980 * C15407 +
              C12979 * C15410 + C11274 * C15406 + C11273 * C15409) *
                 C50810 +
             (C19036 + C19035 + C19034 + C19033 + C19032 + C19031) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C121 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50822) *
                   C50939 +
               ((C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
                 C2164 * C254 + C2159 * C268) *
                    C121 +
                (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
                 C2164 * C264 + C2159 * C284) *
                    C50822) *
                   C50810) *
                  C50696 * C50680 * C113 -
              (((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
                 C2162 * C265 + C2157 * C285) *
                    C50822 +
                (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
                 C2162 * C255 + C2157 * C269) *
                    C121) *
                   C50810 +
               ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50822 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C121) *
                   C50939) *
                  C50696 * C50680 * C114 +
              (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                 C2164 * C126 + C2159 * C138) *
                    C121 +
                (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                 C2164 * C137 + C2159 * C147) *
                    C50822) *
                   C50939 +
               ((C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
                 C2164 * C261 + C2159 * C279) *
                    C121 +
                (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
                 C2164 * C280 + C2159 * C291) *
                    C50822) *
                   C50810) *
                  C50696 * C50680 * C115 -
              (((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
                 C2162 * C263 + C2157 * C283) *
                    C50822 +
                (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
                 C2162 * C253 + C2157 * C267) *
                    C121) *
                   C50810 +
               ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
                 C2162 * C136 + C2157 * C146) *
                    C50822 +
                (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
                 C2162 * C125 + C2157 * C132) *
                    C121) *
                   C50939) *
                  C50696 * C50680 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50822) *
                    C50939 +
                ((C2360 + C2361 + C2362) * C121 +
                 (C2363 + C2364 + C2365) * C50822) *
                    C50810) *
                   C50696 * C248 -
               (((C2366 + C2367 + C2368) * C50822 +
                 (C2369 + C2370 + C2371) * C121) *
                    C50810 +
                ((C2365 + C2364 + C2363) * C50822 +
                 (C2362 + C2361 + C2360) * C121) *
                    C50939) *
                   C50696 * C249 +
               (((C2371 + C2370 + C2369) * C121 +
                 (C2368 + C2367 + C2366) * C50822) *
                    C50939 +
                ((C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
                  C2164 * C970 + C2159 * C978) *
                     C121 +
                 (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
                  C2164 * C974 + C2159 * C982) *
                     C50822) *
                    C50810) *
                   C50696 * C250) *
                  C251 +
              ((((C2372 + C2373 + C2374) * C121 +
                 (C2375 + C2376 + C2377) * C50822) *
                    C50939 +
                ((C2378 + C2379 + C2380) * C121 +
                 (C2381 + C2382 + C2383) * C50822) *
                    C50810) *
                   C50696 * C249 -
               (((C2377 + C2376 + C2375) * C50822 +
                 (C2374 + C2373 + C2372) * C121) *
                    C50810 +
                ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                  C2162 * C134 + C2157 * C144) *
                     C50822 +
                 (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                  C2162 * C123 + C2157 * C130) *
                     C121) *
                    C50939) *
                   C50696 * C248 -
               (((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
                  C2162 * C975 + C2157 * C983) *
                     C50822 +
                 (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
                  C2162 * C971 + C2157 * C979) *
                     C121) *
                    C50810 +
                ((C2383 + C2382 + C2381) * C50822 +
                 (C2380 + C2379 + C2378) * C121) *
                    C50939) *
                   C50696 * C250) *
                  C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C391 -
           (((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
              C2162 * C784 + C2157 * C790) *
                 C50822 +
             (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
              C2162 * C775 + C2157 * C780) *
                 C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C392 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C2162 * C1086 + C2157 * C1094 + C2163 * C1085 + C2158 * C1093 +
              C2164 * C1084 + C2159 * C1092) *
                 C121 +
             (C2162 * C1090 + C2157 * C1098 + C2163 * C1089 + C2158 * C1097 +
              C2164 * C1088 + C2159 * C1096) *
                 C50822) *
                C50810) *
               C393) *
              C50680 * C251 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
              C2164 * C778 + C2159 * C783) *
                 C121 +
             (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
              C2164 * C787 + C2159 * C793) *
                 C50822) *
                C50810) *
               C392 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C391 -
           (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50822 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C121) *
                C50810 +
            ((C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
              C2162 * C417 + C2157 * C429) *
                 C50822 +
             (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
              C2162 * C399 + C2157 * C413) *
                 C121) *
                C50939) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           ((C10625 * C256 + C50630 * C270) * C121 +
            (C10625 * C266 + C50630 * C286) * C50822) *
               C10622 +
           ((C10625 * C257 + C50630 * C271) * C121 +
            (C10625 * C275 + C50630 * C287) * C50822) *
               C10623 +
           ((C10625 * C972 + C50630 * C980) * C121 +
            (C10625 * C976 + C50630 * C984) * C50822) *
               C10624) *
              C50696 * C50680 * C113 -
          (((C10625 * C975 + C50630 * C983) * C50822 +
            (C10625 * C971 + C50630 * C979) * C121) *
               C10624 +
           ((C10625 * C276 + C50630 * C288) * C50822 +
            (C10625 * C258 + C50630 * C272) * C121) *
               C10623 +
           ((C10625 * C265 + C50630 * C285) * C50822 +
            (C10625 * C255 + C50630 * C269) * C121) *
               C10622 +
           ((C10625 * C134 + C50630 * C144) * C50822 +
            (C10625 * C123 + C50630 * C130) * C121) *
               C10621) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C121 +
            (C10625 * C135 + C50630 * C145) * C50822) *
               C10621 +
           ((C10625 * C254 + C50630 * C268) * C121 +
            (C10625 * C264 + C50630 * C284) * C50822) *
               C10622 +
           ((C10625 * C259 + C50630 * C273) * C121 +
            (C10625 * C277 + C50630 * C289) * C50822) *
               C10623 +
           ((C10625 * C970 + C50630 * C978) * C121 +
            (C10625 * C974 + C50630 * C982) * C50822) *
               C10624) *
              C50696 * C50680 * C115 -
          (((C10625 * C973 + C50630 * C981) * C50822 +
            (C10625 * C969 + C50630 * C977) * C121) *
               C10624 +
           ((C10625 * C278 + C50630 * C290) * C50822 +
            (C10625 * C260 + C50630 * C274) * C121) *
               C10623 +
           ((C10625 * C263 + C50630 * C283) * C50822 +
            (C10625 * C253 + C50630 * C267) * C121) *
               C10622 +
           ((C10625 * C136 + C50630 * C146) * C50822 +
            (C10625 * C125 + C50630 * C132) * C121) *
               C10621) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C248 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C249 +
           (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            ((C10625 * C8957 + C50630 * C8961) * C121 +
             (C10625 * C8959 + C50630 * C8963) * C50822) *
                C10624) *
               C50696 * C250) *
              C251 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C249 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C248 -
           (((C10625 * C8958 + C50630 * C8962) * C50822 +
             (C10625 * C8956 + C50630 * C8960) * C121) *
                C10624 +
            (C10788 + C10787) * C10623 + C10791 * C10622 + C10792 * C10621) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C391 -
           (((C10625 * C4010 + C50630 * C4016) * C50822 +
             (C10625 * C4007 + C50630 * C4013) * C121) *
                C10624 +
            ((C10625 * C1437 + C50630 * C1445) * C50822 +
             (C10625 * C1433 + C50630 * C1441) * C121) *
                C10623 +
            ((C10625 * C784 + C50630 * C790) * C50822 +
             (C10625 * C775 + C50630 * C780) * C121) *
                C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C392 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            ((C10625 * C1086 + C50630 * C1094) * C121 +
             (C10625 * C1090 + C50630 * C1098) * C50822) *
                C10622 +
            ((C10625 * C3491 + C50630 * C3497) * C121 +
             (C10625 * C3494 + C50630 * C3500) * C50822) *
                C10623 +
            ((C10625 * C9128 + C50630 * C9132) * C121 +
             (C10625 * C9130 + C50630 * C9134) * C50822) *
                C10624) *
               C393) *
              C50680 * C251 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            ((C10625 * C776 + C50630 * C781) * C121 +
             (C10625 * C785 + C50630 * C791) * C50822) *
                C10622 +
            ((C10625 * C1432 + C50630 * C1440) * C121 +
             (C10625 * C1436 + C50630 * C1444) * C50822) *
                C10623 +
            ((C10625 * C4006 + C50630 * C4012) * C121 +
             (C10625 * C4009 + C50630 * C4015) * C50822) *
                C10624) *
               C392 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C391 -
           (((C10625 * C9129 + C50630 * C9133) * C50822 +
             (C10625 * C9127 + C50630 * C9131) * C121) *
                C10624 +
            ((C10625 * C3493 + C50630 * C3499) * C50822 +
             (C10625 * C3490 + C50630 * C3496) * C121) *
                C10623 +
            ((C10625 * C1089 + C50630 * C1097) * C50822 +
             (C10625 * C1085 + C50630 * C1093) * C121) *
                C10622 +
            ((C10625 * C417 + C50630 * C429) * C50822 +
             (C10625 * C399 + C50630 * C413) * C121) *
                C10621) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C15409 +
            (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
            C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
               C50939 +
           (C10757 * C15409 + C10758 * C15406 + C11270 * C15410 +
            C11269 * C15407 + C11581 * C15411 + C11582 * C15408) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C12978 * C15408 + C12977 * C15411 + C11272 * C15407 +
            C11271 * C15410 + C10766 * C15406 + C10765 * C15409) *
               C50810 +
           (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
            C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
            (C10625 * C123 + C50630 * C130) * C15409) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C15409 +
            (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
            C13298 * C15407 + (C10625 * C400 + C50630 * C414) * C15411 +
            (C10625 * C418 + C50630 * C430) * C15408) *
               C50939 +
           (C11001 * C15409 + C11002 * C15406 + C13139 * C15410 +
            C13140 * C15407 + (C10625 * C1084 + C50630 * C1092) * C15411 +
            (C10625 * C1088 + C50630 * C1096) * C15408) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C10625 * C1087 + C50630 * C1095) * C15408 +
            (C10625 * C1083 + C50630 * C1091) * C15411 +
            (C10625 * C787 + C50630 * C793) * C15407 +
            (C10625 * C778 + C50630 * C783) * C15410 +
            (C10625 * C263 + C50630 * C283) * C15406 +
            (C10625 * C253 + C50630 * C267) * C15409) *
               C50810 +
           ((C10625 * C419 + C50630 * C431) * C15408 +
            (C10625 * C401 + C50630 * C415) * C15411 +
            (C10625 * C404 + C50630 * C424) * C15407 +
            (C10625 * C394 + C50630 * C408) * C15410 +
            (C10625 * C136 + C50630 * C146) * C15406 +
            (C10625 * C125 + C50630 * C132) * C15409) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50696 * C248 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50696 * C249 +
           ((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
            (C10761 * C15409 + C10762 * C15406 + C11266 * C15410 +
             C11265 * C15407 + C11585 * C15411 + C11586 * C15408) *
                C50810) *
               C50696 * C250) *
              C251 +
          (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
            (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
               C50696 * C249 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50696 * C248 -
           (((C10625 * C9129 + C50630 * C9133) * C15408 +
             (C10625 * C9127 + C50630 * C9131) * C15411 + C11276 * C15407 +
             C11275 * C15410 + C10770 * C15406 + C10769 * C15409) *
                C50810 +
            (C18362 + C18361 + C18360 + C18359 + C18358 + C18357) * C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C391 -
           ((C13919 * C15408 + C13918 * C15411 + C11582 * C15407 +
             C11581 * C15410 + C11269 * C15406 + C11270 * C15409) *
                C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C392 +
           ((C12972 * C15409 + C12971 * C15406 + C14821 * C15410 +
             C14822 * C15407 + (C10625 * C7161 + C50630 * C7167) * C15411 +
             (C10625 * C7164 + C50630 * C7170) * C15408) *
                C50939 +
            (C11581 * C15409 + C11582 * C15406 + C13918 * C15410 +
             C13919 * C15407 + (C10625 * C14809 + C50630 * C14813) * C15411 +
             (C10625 * C14812 + C50630 * C14815) * C15408) *
                C50810) *
               C393) *
              C50680 * C251 +
          (((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
             C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                C50939 +
            (C11271 * C15409 + C11272 * C15406 + C12977 * C15410 +
             C12978 * C15407 + C18519 * C15411 + C18520 * C15408) *
                C50810) *
               C392 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C391 -
           (((C10625 * C16693 + C50630 * C16695) * C15408 +
             (C10625 * C16692 + C50630 * C16694) * C15411 + C18520 * C15407 +
             C18519 * C15410 + C12978 * C15406 + C12977 * C15409) *
                C50810 +
            ((C10625 * C7163 + C50630 * C7169) * C15408 +
             (C10625 * C7160 + C50630 * C7166) * C15411 + C18518 * C15407 +
             C18517 * C15410 + C12976 * C15406 + C12975 * C15409) *
                C50939) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50929 -
           (((C10625 * C4010 + C50630 * C4016) * C50822 +
             (C10625 * C4007 + C50630 * C4013) * C121) *
                C10624 +
            ((C10625 * C1437 + C50630 * C1445) * C50822 +
             (C10625 * C1433 + C50630 * C1441) * C121) *
                C10623 +
            ((C10625 * C784 + C50630 * C790) * C50822 +
             (C10625 * C775 + C50630 * C780) * C121) *
                C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50680 * C50970 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            ((C10625 * C776 + C50630 * C781) * C121 +
             (C10625 * C785 + C50630 * C791) * C50822) *
                C10622 +
            ((C10625 * C1432 + C50630 * C1440) * C121 +
             (C10625 * C1436 + C50630 * C1444) * C50822) *
                C10623 +
            ((C10625 * C4006 + C50630 * C4012) * C121 +
             (C10625 * C4009 + C50630 * C4015) * C50822) *
                C10624) *
               C50760 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50929 -
           (((C10625 * C4008 + C50630 * C4014) * C50822 +
             (C10625 * C4005 + C50630 * C4011) * C121) *
                C10624 +
            ((C10625 * C1435 + C50630 * C1443) * C50822 +
             (C10625 * C1431 + C50630 * C1439) * C121) *
                C10623 +
            ((C10625 * C786 + C50630 * C792) * C50822 +
             (C10625 * C777 + C50630 * C782) * C121) *
                C10622 +
            ((C10625 * C405 + C50630 * C425) * C50822 +
             (C10625 * C395 + C50630 * C409) * C121) *
                C10621) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50929 -
           (((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
              C2162 * C784 + C2157 * C790) *
                 C50822 +
             (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
              C2162 * C775 + C2157 * C780) *
                 C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
              C2164 * C778 + C2159 * C783) *
                 C121 +
             (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
              C2164 * C787 + C2159 * C793) *
                 C50822) *
                C50810) *
               C50760 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50929 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50822 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50810 +
            ((C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
              C2162 * C405 + C2157 * C425) *
                 C50822 +
             (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
              C2162 * C395 + C2157 * C409) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50929 -
           ((C13919 * C15408 + C13918 * C15411 + C11582 * C15407 +
             C11581 * C15410 + C11269 * C15406 + C11270 * C15409) *
                C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          (((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
             C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                C50939 +
            (C11271 * C15409 + C11272 * C15406 + C12977 * C15410 +
             C12978 * C15407 + C18519 * C15411 + C18520 * C15408) *
                C50810) *
               C50760 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C15409 +
             (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
             C13298 * C15407 + C18829 * C15411 + C18830 * C15408) *
                C50939 +
            (C18667 + C18668 + C18669 + C18670 + C18677 + C18678) * C50810) *
               C50929 -
           (((C10625 * C4428 + C50630 * C4434) * C15408 +
             (C10625 * C4425 + C50630 * C4431) * C15411 + C18676 * C15407 +
             C18675 * C15410 + C13140 * C15406 + C13139 * C15409) *
                C50810 +
            ((C10625 * C1719 + C50630 * C1727) * C15408 +
             (C10625 * C1715 + C50630 * C1723) * C15411 + C18830 * C15407 +
             C18829 * C15410 + C13298 * C15406 + C13297 * C15409) *
                C50939) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C248 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C249 +
           (((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
              C2164 * C970 + C2159 * C978) *
                 C121 +
             (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
              C2164 * C974 + C2159 * C982) *
                 C50822) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C249 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C248 -
           (((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
              C2162 * C975 + C2157 * C983) *
                 C50822 +
             (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
              C2162 * C971 + C2157 * C979) *
                 C121) *
                C50810 +
            ((C2383 + C2382 + C2381) * C50822 +
             (C2380 + C2379 + C2378) * C121) *
                C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
             C2164 * C254 + C2159 * C268) *
                C121 +
            (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
             C2164 * C264 + C2159 * C284) *
                C50822) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
             C2162 * C265 + C2157 * C285) *
                C50822 +
            (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
             C2162 * C255 + C2157 * C269) *
                C121) *
               C50810 +
           ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50822 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C121) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50822) *
               C50939 +
           ((C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
             C2164 * C261 + C2159 * C279) *
                C121 +
            (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
             C2164 * C280 + C2159 * C291) *
                C50822) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
             C2162 * C263 + C2157 * C283) *
                C50822 +
            (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
             C2162 * C253 + C2157 * C267) *
                C121) *
               C50810 +
           ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
             C2162 * C136 + C2157 * C146) *
                C50822 +
            (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
             C2162 * C125 + C2157 * C132) *
                C121) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           ((C10625 * C256 + C50630 * C270) * C121 +
            (C10625 * C266 + C50630 * C286) * C50822) *
               C10622 +
           ((C10625 * C257 + C50630 * C271) * C121 +
            (C10625 * C275 + C50630 * C287) * C50822) *
               C10623 +
           ((C10625 * C972 + C50630 * C980) * C121 +
            (C10625 * C976 + C50630 * C984) * C50822) *
               C10624) *
              C50696 * C50680 * C113 -
          (((C10625 * C975 + C50630 * C983) * C50822 +
            (C10625 * C971 + C50630 * C979) * C121) *
               C10624 +
           ((C10625 * C276 + C50630 * C288) * C50822 +
            (C10625 * C258 + C50630 * C272) * C121) *
               C10623 +
           ((C10625 * C265 + C50630 * C285) * C50822 +
            (C10625 * C255 + C50630 * C269) * C121) *
               C10622 +
           ((C10625 * C134 + C50630 * C144) * C50822 +
            (C10625 * C123 + C50630 * C130) * C121) *
               C10621) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C121 +
            (C10625 * C135 + C50630 * C145) * C50822) *
               C10621 +
           ((C10625 * C254 + C50630 * C268) * C121 +
            (C10625 * C264 + C50630 * C284) * C50822) *
               C10622 +
           ((C10625 * C259 + C50630 * C273) * C121 +
            (C10625 * C277 + C50630 * C289) * C50822) *
               C10623 +
           ((C10625 * C970 + C50630 * C978) * C121 +
            (C10625 * C974 + C50630 * C982) * C50822) *
               C10624) *
              C50696 * C50680 * C115 -
          (((C10625 * C973 + C50630 * C981) * C50822 +
            (C10625 * C969 + C50630 * C977) * C121) *
               C10624 +
           ((C10625 * C278 + C50630 * C290) * C50822 +
            (C10625 * C260 + C50630 * C274) * C121) *
               C10623 +
           ((C10625 * C263 + C50630 * C283) * C50822 +
            (C10625 * C253 + C50630 * C267) * C121) *
               C10622 +
           ((C10625 * C136 + C50630 * C146) * C50822 +
            (C10625 * C125 + C50630 * C132) * C121) *
               C10621) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C248 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C249 +
           (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            ((C10625 * C8957 + C50630 * C8961) * C121 +
             (C10625 * C8959 + C50630 * C8963) * C50822) *
                C10624) *
               C50696 * C250) *
              C251 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C249 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C248 -
           (((C10625 * C8958 + C50630 * C8962) * C50822 +
             (C10625 * C8956 + C50630 * C8960) * C121) *
                C10624 +
            (C10788 + C10787) * C10623 + C10791 * C10622 + C10792 * C10621) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C15409 +
            (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
            C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
               C50939 +
           (C10757 * C15409 + C10758 * C15406 + C11270 * C15410 +
            C11269 * C15407 + C11581 * C15411 + C11582 * C15408) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C12978 * C15408 + C12977 * C15411 + C11272 * C15407 +
            C11271 * C15410 + C10766 * C15406 + C10765 * C15409) *
               C50810 +
           (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
            C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
            (C10625 * C123 + C50630 * C130) * C15409) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C15409 +
            (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
            C13298 * C15407 + (C10625 * C400 + C50630 * C414) * C15411 +
            (C10625 * C418 + C50630 * C430) * C15408) *
               C50939 +
           (C11001 * C15409 + C11002 * C15406 + C13139 * C15410 +
            C13140 * C15407 + (C10625 * C1084 + C50630 * C1092) * C15411 +
            (C10625 * C1088 + C50630 * C1096) * C15408) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C10625 * C1087 + C50630 * C1095) * C15408 +
            (C10625 * C1083 + C50630 * C1091) * C15411 +
            (C10625 * C787 + C50630 * C793) * C15407 +
            (C10625 * C778 + C50630 * C783) * C15410 +
            (C10625 * C263 + C50630 * C283) * C15406 +
            (C10625 * C253 + C50630 * C267) * C15409) *
               C50810 +
           ((C10625 * C419 + C50630 * C431) * C15408 +
            (C10625 * C401 + C50630 * C415) * C15411 +
            (C10625 * C404 + C50630 * C424) * C15407 +
            (C10625 * C394 + C50630 * C408) * C15410 +
            (C10625 * C136 + C50630 * C146) * C15406 +
            (C10625 * C125 + C50630 * C132) * C15409) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50696 * C248 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50696 * C249 +
           ((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
            (C10761 * C15409 + C10762 * C15406 + C11266 * C15410 +
             C11265 * C15407 + C11585 * C15411 + C11586 * C15408) *
                C50810) *
               C50696 * C250) *
              C251 +
          (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
            (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
               C50696 * C249 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50696 * C248 -
           (((C10625 * C9129 + C50630 * C9133) * C15408 +
             (C10625 * C9127 + C50630 * C9131) * C15411 + C11276 * C15407 +
             C11275 * C15410 + C10770 * C15406 + C10769 * C15409) *
                C50810 +
            (C18362 + C18361 + C18360 + C18359 + C18358 + C18357) * C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C50972 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C50696 * C50973 +
           (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C50696 * C1199) *
              C50920 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50973 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C50972 -
           (((C10625 * C8958 + C50630 * C8962) * C50822 +
             (C10625 * C8956 + C50630 * C8960) * C121) *
                C10624 +
            (C10788 + C10787) * C10623 + C10791 * C10622 + C10792 * C10621) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C50972 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50973 +
           (((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C50696 * C1199) *
              C50920 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50973 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C50972 -
           (((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
              C2162 * C975 + C2157 * C983) *
                 C50822 +
             (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
              C2162 * C971 + C2157 * C979) *
                 C121) *
                C50810 +
            ((C2383 + C2382 + C2381) * C50822 +
             (C2380 + C2379 + C2378) * C121) *
                C50939) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50696 * C50972 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50696 * C50973 +
           ((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
            (C19281 + C19282 + C19283 + C19284 + C19285 + C19286) * C50810) *
               C50696 * C1199) *
              C50920 +
          (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
            (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
               C50696 * C50973 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50696 * C50972 -
           (((C10625 * C9129 + C50630 * C9133) * C15408 +
             (C10625 * C9127 + C50630 * C9131) * C15411 + C11276 * C15407 +
             C11275 * C15410 + C10770 * C15406 + C10769 * C15409) *
                C50810 +
            (C18362 + C18361 + C18360 + C18359 + C18358 + C18357) * C50939) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50929 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50972 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50760 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C50929) *
              C50973 +
          ((C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C50929 -
           (((C10625 * C11919 + C50630 * C11921) * C50822 +
             (C10625 * C11918 + C50630 * C11920) * C121) *
                C10624 +
            (C11932 + C11931) * C10623 + C11923 * C10622 + C11924 * C10621) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50929 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50972 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50760 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50929) *
              C50973 +
          ((((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C50929 -
           (((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
              C2162 * C4010 + C2157 * C4016) *
                 C50822 +
             (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
              C2162 * C4007 + C2157 * C4013) *
                 C121) *
                C50810 +
            ((C4035 + C4034 + C4033) * C50822 +
             (C4032 + C4031 + C4030) * C121) *
                C50939) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50929 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50760) *
              C50972 +
          (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
            (C19931 + C19932 + C19933 + C19934 + C19935 + C19936) * C50810) *
               C50760 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50929) *
              C50973 +
          (((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
            (C19281 + C19282 + C19283 + C19284 + C19285 + C19286) * C50810) *
               C50929 -
           (((C10625 * C12195 + C50630 * C12197) * C15408 +
             (C10625 * C12194 + C50630 * C12196) * C15411 + C11586 * C15407 +
             C11585 * C15410 + C11265 * C15406 + C11266 * C15409) *
                C50810 +
            (C19936 + C19935 + C19934 + C19933 + C19932 + C19931) * C50939) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50822) *
                    C50939 +
                ((C2360 + C2361 + C2362) * C121 +
                 (C2363 + C2364 + C2365) * C50822) *
                    C50810) *
                   C50696 * C893 -
               (((C2366 + C2367 + C2368) * C50822 +
                 (C2369 + C2370 + C2371) * C121) *
                    C50810 +
                ((C2365 + C2364 + C2363) * C50822 +
                 (C2362 + C2361 + C2360) * C121) *
                    C50939) *
                   C50696 * C50732) *
                  C895 +
              ((((C2372 + C2373 + C2374) * C121 +
                 (C2375 + C2376 + C2377) * C50822) *
                    C50939 +
                ((C2378 + C2379 + C2380) * C121 +
                 (C2381 + C2382 + C2383) * C50822) *
                    C50810) *
                   C50696 * C50732 -
               (((C2377 + C2376 + C2375) * C50822 +
                 (C2374 + C2373 + C2372) * C121) *
                    C50810 +
                ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                  C2162 * C134 + C2157 * C144) *
                     C50822 +
                 (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                  C2162 * C123 + C2157 * C130) *
                     C121) *
                    C50939) *
                   C50696 * C893) *
                  C896 +
              ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                  C2164 * C126 + C2159 * C138) *
                     C121 +
                 (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                  C2164 * C137 + C2159 * C147) *
                     C50822) *
                    C50939 +
                ((C2688 + C2689 + C2690) * C121 +
                 (C2691 + C2692 + C2693) * C50822) *
                    C50810) *
                   C50696 * C893 -
               (((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
                  C2162 * C277 + C2157 * C289) *
                     C50822 +
                 (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
                  C2162 * C259 + C2157 * C273) *
                     C121) *
                    C50810 +
                ((C2693 + C2692 + C2691) * C50822 +
                 (C2690 + C2689 + C2688) * C121) *
                    C50939) *
                   C50696 * C50732) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C121 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50822) *
                   C50939 +
               ((C2360 + C2361 + C2362) * C121 +
                (C2363 + C2364 + C2365) * C50822) *
                   C50810) *
                  C50696 * C964 -
              (((C2366 + C2367 + C2368) * C50822 +
                (C2369 + C2370 + C2371) * C121) *
                   C50810 +
               ((C2365 + C2364 + C2363) * C50822 +
                (C2362 + C2361 + C2360) * C121) *
                   C50939) *
                  C50696 * C965 +
              (((C2371 + C2370 + C2369) * C121 +
                (C2368 + C2367 + C2366) * C50822) *
                   C50939 +
               ((C3338 + C3339 + C3340) * C121 +
                (C3341 + C3342 + C3343) * C50822) *
                   C50810) *
                  C50696 * C966 -
              (((C2164 * C3316 + C2159 * C3322 + C2163 * C3317 + C2158 * C3323 +
                 C2162 * C3318 + C2157 * C3324) *
                    C50822 +
                (C2164 * C3313 + C2159 * C3319 + C2163 * C3314 + C2158 * C3320 +
                 C2162 * C3315 + C2157 * C3321) *
                    C121) *
                   C50810 +
               ((C3343 + C3342 + C3341) * C50822 +
                (C3340 + C3339 + C3338) * C121) *
                   C50939) *
                  C50696 * C967) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C391 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C392 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C3514 + C3515 + C3516) * C121 +
             (C3517 + C3518 + C3519) * C50822) *
                C50810) *
               C393) *
              C893 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
              C2164 * C1431 + C2159 * C1439) *
                 C121 +
             (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
              C2164 * C1435 + C2159 * C1443) *
                 C50822) *
                C50810) *
               C392 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C391 -
           (((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
              C2162 * C3494 + C2157 * C3500) *
                 C50822 +
             (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
              C2162 * C3491 + C2157 * C3497) *
                 C121) *
                C50810 +
            ((C3519 + C3518 + C3517) * C50822 +
             (C3516 + C3515 + C3514) * C121) *
                C50939) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C893 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C50732) *
              C895 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50732 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50696 * C893 -
           (((C10625 * C3316 + C50630 * C3322) * C50822 +
             (C10625 * C3313 + C50630 * C3319) * C121) *
                C10624 +
            (C11012 + C11011) * C10623 + (C11010 + C11009) * C10622 +
            (C11008 + C11007) * C10621) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
              C50696 * C964 -
          (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
           (C10774 + C10773) * C10621) *
              C50696 * C965 +
          (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
           (C11465 + C11466) * C10624) *
              C50696 * C966 -
          (((C10625 * C11453 + C50630 * C11455) * C50822 +
            (C10625 * C11452 + C50630 * C11454) * C121) *
               C10624 +
           (C11466 + C11465) * C10623 + C11457 * C10622 + C11458 * C10621) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C391 -
           ((C11277 + C11278) * C10624 + (C11279 + C11280) * C10623 +
            (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C392 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
            (C11591 + C11592) * C10624) *
               C393) *
              C893 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 +
            ((C10625 * C9646 + C50630 * C9650) * C121 +
             (C10625 * C9648 + C50630 * C9652) * C50822) *
                C10624) *
               C392 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C391 -
           (((C10625 * C11565 + C50630 * C11567) * C50822 +
             (C10625 * C11564 + C50630 * C11566) * C121) *
                C10624 +
            (C11592 + C11591) * C10623 + (C11590 + C11589) * C10622 +
            (C11588 + C11587) * C10621) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50696 * C893 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50696 * C50732) *
              C895 +
          (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
            (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
               C50696 * C50732 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C15409 +
             (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
             C13298 * C15407 + C18829 * C15411 + C18830 * C15408) *
                C50939 +
            (C18667 + C18668 + C18669 + C18670 + C18677 + C18678) * C50810) *
               C50696 * C893 -
           (((C10625 * C3492 + C50630 * C3498) * C15408 +
             (C10625 * C3489 + C50630 * C3495) * C15411 + C13142 * C15407 +
             C13141 * C15410 + C11004 * C15406 + C11003 * C15409) *
                C50810 +
            (C18678 + C18677 + C18670 + C18669 + C18668 + C18667) * C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C15409 +
            (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
            C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
               C50939 +
           (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
              C50696 * C964 -
          ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
           (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
              C50696 * C965 +
          ((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
           (C19281 + C19282 + C19283 + C19284 + C19285 + C19286) * C50810) *
              C50696 * C966 -
          (((C10625 * C11565 + C50630 * C11567) * C15408 +
            (C10625 * C11564 + C50630 * C11566) * C15411 + C11930 * C15407 +
            C11929 * C15410 + C10763 * C15406 + C10764 * C15409) *
               C50810 +
           (C19286 + C19285 + C19284 + C19283 + C19282 + C19281) * C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C391 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C392 +
           ((C12972 * C15409 + C12971 * C15406 + C14821 * C15410 +
             C14822 * C15407 + (C10625 * C7161 + C50630 * C7167) * C15411 +
             (C10625 * C7164 + C50630 * C7170) * C15408) *
                C50939 +
            (C19433 + C19434 + C19435 + C19436 + C19443 + C19444) * C50810) *
               C393) *
              C893 +
          (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
            (C11268 * C15409 + C11267 * C15406 + C11583 * C15410 +
             C11584 * C15407 + C13920 * C15411 + C13921 * C15408) *
                C50810) *
               C392 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C391 -
           (((C10625 * C14810 + C50630 * C14814) * C15408 +
             (C10625 * C14808 + C50630 * C14811) * C15411 + C13921 * C15407 +
             C13920 * C15410 + C11584 * C15406 + C11583 * C15409) *
                C50810 +
            (C19444 + C19443 + C19436 + C19435 + C19434 + C19433) * C50939) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C121 +
              (C10625 * C133 + C50630 * C143) * C50822) *
                 C10621 +
             (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
                C50929 -
            ((C11277 + C11278) * C10624 + (C11279 + C11280) * C10623 +
             (C11281 + C11282) * C10622 +
             ((C10625 * C407 + C50630 * C427) * C50822 +
              (C10625 * C397 + C50630 * C411) * C121) *
                 C10621) *
                C50760) *
               C893 +
           (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
             (C11278 + C11277) * C10623 +
             ((C10625 * C9646 + C50630 * C9650) * C121 +
              (C10625 * C9648 + C50630 * C9652) * C50822) *
                 C10624) *
                C50760 -
            (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
             (C10774 + C10773) * C10621) *
                C50929) *
               C50732) *
              C50920 +
          (((((C10625 * C396 + C50630 * C410) * C121 +
              (C10625 * C406 + C50630 * C426) * C50822) *
                 C10621 +
             (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
             (C11287 + C11288) * C10624) *
                C50760 -
            (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
             ((C10625 * C134 + C50630 * C144) * C50822 +
              (C10625 * C123 + C50630 * C130) * C121) *
                 C10621) *
                C50929) *
               C893 +
           (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
             (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
                C50929 -
            (((C10625 * C9647 + C50630 * C9651) * C50822 +
              (C10625 * C9645 + C50630 * C9649) * C121) *
                 C10624 +
             (C11288 + C11287) * C10623 + (C11286 + C11285) * C10622 +
             (C11284 + C11283) * C10621) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50822) *
                 C50939 +
             ((C2360 + C2361 + C2362) * C121 +
              (C2363 + C2364 + C2365) * C50822) *
                 C50810) *
                C50929 -
            (((C3058 + C3059 + C3060) * C50822 +
              (C3061 + C3062 + C3063) * C121) *
                 C50810 +
             ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
               C2162 * C407 + C2157 * C427) *
                  C50822 +
              (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
               C2162 * C397 + C2157 * C411) *
                  C121) *
                 C50939) *
                C50760) *
               C893 +
           ((((C3063 + C3062 + C3061) * C121 +
              (C3060 + C3059 + C3058) * C50822) *
                 C50939 +
             ((C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
               C2164 * C1431 + C2159 * C1439) *
                  C121 +
              (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
               C2164 * C1435 + C2159 * C1443) *
                  C50822) *
                 C50810) *
                C50760 -
            (((C2366 + C2367 + C2368) * C50822 +
              (C2369 + C2370 + C2371) * C121) *
                 C50810 +
             ((C2365 + C2364 + C2363) * C50822 +
              (C2362 + C2361 + C2360) * C121) *
                 C50939) *
                C50929) *
               C50732) *
              C50920 +
          (((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
               C2164 * C394 + C2159 * C408) *
                  C121 +
              (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
               C2164 * C404 + C2159 * C424) *
                  C50822) *
                 C50939 +
             ((C3064 + C3065 + C3066) * C121 +
              (C3067 + C3068 + C3069) * C50822) *
                 C50810) *
                C50760 -
            (((C2377 + C2376 + C2375) * C50822 +
              (C2374 + C2373 + C2372) * C121) *
                 C50810 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50822 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50939) *
                C50929) *
               C893 +
           ((((C2372 + C2373 + C2374) * C121 +
              (C2375 + C2376 + C2377) * C50822) *
                 C50939 +
             ((C2378 + C2379 + C2380) * C121 +
              (C2381 + C2382 + C2383) * C50822) *
                 C50810) *
                C50929 -
            (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
               C2162 * C1436 + C2157 * C1444) *
                  C50822 +
              (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
               C2162 * C1432 + C2157 * C1440) *
                  C121) *
                 C50810 +
             ((C3069 + C3068 + C3067) * C50822 +
              (C3066 + C3065 + C3064) * C121) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C15409 +
              (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
              C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                 C50939 +
             (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
                C50929 -
            ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
             (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
              C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                 C50939) *
                C50760) *
               C893 +
           (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
             (C11268 * C15409 + C11267 * C15406 + C11583 * C15410 +
              C11584 * C15407 + C13920 * C15411 + C13921 * C15408) *
                 C50810) *
                C50760 -
            ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
             (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
                C50929) *
               C50732) *
              C50920 +
          ((((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
              C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                 C50939 +
             (C19031 + C19032 + C19033 + C19034 + C19035 + C19036) * C50810) *
                C50760 -
            ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
             (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
              C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
              (C10625 * C123 + C50630 * C130) * C15409) *
                 C50939) *
                C50929) *
               C893 +
           (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
             (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
                C50929 -
            (((C10625 * C10062 + C50630 * C10066) * C15408 +
              (C10625 * C10060 + C50630 * C10064) * C15411 + C12980 * C15407 +
              C12979 * C15410 + C11274 * C15406 + C11273 * C15409) *
                 C50810 +
             (C19036 + C19035 + C19034 + C19033 + C19032 + C19031) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2360 + C2361 + C2362) * C121 + (C2363 + C2364 + C2365) * C50822) *
               C50810) *
              C50696 * C964 -
          (((C2366 + C2367 + C2368) * C50822 + (C2369 + C2370 + C2371) * C121) *
               C50810 +
           ((C2365 + C2364 + C2363) * C50822 + (C2362 + C2361 + C2360) * C121) *
               C50939) *
              C50696 * C965 +
          (((C2371 + C2370 + C2369) * C121 + (C2368 + C2367 + C2366) * C50822) *
               C50939 +
           ((C3338 + C3339 + C3340) * C121 + (C3341 + C3342 + C3343) * C50822) *
               C50810) *
              C50696 * C966 -
          (((C2164 * C3316 + C2159 * C3322 + C2163 * C3317 + C2158 * C3323 +
             C2162 * C3318 + C2157 * C3324) *
                C50822 +
            (C2164 * C3313 + C2159 * C3319 + C2163 * C3314 + C2158 * C3320 +
             C2162 * C3315 + C2157 * C3321) *
                C121) *
               C50810 +
           ((C3343 + C3342 + C3341) * C50822 + (C3340 + C3339 + C3338) * C121) *
               C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C893 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50732) *
              C895 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50732 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50696 * C893 -
           (((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
              C2162 * C277 + C2157 * C289) *
                 C50822 +
             (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
              C2162 * C259 + C2157 * C273) *
                 C121) *
                C50810 +
            ((C2693 + C2692 + C2691) * C50822 +
             (C2690 + C2689 + C2688) * C121) *
                C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C893 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C50732) *
              C895 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50732 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50696 * C893 -
           (((C10625 * C3316 + C50630 * C3322) * C50822 +
             (C10625 * C3313 + C50630 * C3319) * C121) *
                C10624 +
            (C11012 + C11011) * C10623 + (C11010 + C11009) * C10622 +
            (C11008 + C11007) * C10621) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
              C50696 * C964 -
          (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
           (C10774 + C10773) * C10621) *
              C50696 * C965 +
          (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
           (C11465 + C11466) * C10624) *
              C50696 * C966 -
          (((C10625 * C11453 + C50630 * C11455) * C50822 +
            (C10625 * C11452 + C50630 * C11454) * C121) *
               C10624 +
           (C11466 + C11465) * C10623 + C11457 * C10622 + C11458 * C10621) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50696 * C893 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50696 * C50732) *
              C895 +
          (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
            (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
               C50696 * C50732 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C15409 +
             (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
             C13298 * C15407 + C18829 * C15411 + C18830 * C15408) *
                C50939 +
            (C18667 + C18668 + C18669 + C18670 + C18677 + C18678) * C50810) *
               C50696 * C893 -
           (((C10625 * C3492 + C50630 * C3498) * C15408 +
             (C10625 * C3489 + C50630 * C3495) * C15411 + C13142 * C15407 +
             C13141 * C15410 + C11004 * C15406 + C11003 * C15409) *
                C50810 +
            (C18678 + C18677 + C18670 + C18669 + C18668 + C18667) * C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C15409 +
            (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
            C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
               C50939 +
           (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
              C50696 * C964 -
          ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
           (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
              C50696 * C965 +
          ((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
           (C19281 + C19282 + C19283 + C19284 + C19285 + C19286) * C50810) *
              C50696 * C966 -
          (((C10625 * C11565 + C50630 * C11567) * C15408 +
            (C10625 * C11564 + C50630 * C11566) * C15411 + C11930 * C15407 +
            C11929 * C15410 + C10763 * C15406 + C10764 * C15409) *
               C50810 +
           (C19286 + C19285 + C19284 + C19283 + C19282 + C19281) * C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C121 +
              (C10625 * C133 + C50630 * C143) * C50822) *
                 C10621 +
             (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
                C1544 -
            (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
             ((C10625 * C407 + C50630 * C427) * C50822 +
              (C10625 * C397 + C50630 * C411) * C121) *
                 C10621) *
                C50760) *
               C50928 +
           (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
             (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
                C50760 -
            (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
             (C10774 + C10773) * C10621) *
                C1544) *
               C50732) *
              C50920 +
          (((((C10625 * C396 + C50630 * C410) * C121 +
              (C10625 * C406 + C50630 * C426) * C50822) *
                 C10621 +
             (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
             (C11287 + C11288) * C10624) *
                C50760 -
            (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
             ((C10625 * C134 + C50630 * C144) * C50822 +
              (C10625 * C123 + C50630 * C130) * C121) *
                 C10621) *
                C1544) *
               C50928 +
           (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
             (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
                C1544 -
            (((C10625 * C9647 + C50630 * C9651) * C50822 +
              (C10625 * C9645 + C50630 * C9649) * C121) *
                 C10624 +
             (C11288 + C11287) * C10623 + (C11286 + C11285) * C10622 +
             (C11284 + C11283) * C10621) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50822) *
                 C50939 +
             ((C2360 + C2361 + C2362) * C121 +
              (C2363 + C2364 + C2365) * C50822) *
                 C50810) *
                C1544 -
            (((C3058 + C3059 + C3060) * C50822 +
              (C3061 + C3062 + C3063) * C121) *
                 C50810 +
             ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
               C2162 * C407 + C2157 * C427) *
                  C50822 +
              (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
               C2162 * C397 + C2157 * C411) *
                  C121) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C3063 + C3062 + C3061) * C121 +
              (C3060 + C3059 + C3058) * C50822) *
                 C50939 +
             ((C4030 + C4031 + C4032) * C121 +
              (C4033 + C4034 + C4035) * C50822) *
                 C50810) *
                C50760 -
            (((C2366 + C2367 + C2368) * C50822 +
              (C2369 + C2370 + C2371) * C121) *
                 C50810 +
             ((C2365 + C2364 + C2363) * C50822 +
              (C2362 + C2361 + C2360) * C121) *
                 C50939) *
                C1544) *
               C50732) *
              C50920 +
          (((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
               C2164 * C394 + C2159 * C408) *
                  C121 +
              (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
               C2164 * C404 + C2159 * C424) *
                  C50822) *
                 C50939 +
             ((C3064 + C3065 + C3066) * C121 +
              (C3067 + C3068 + C3069) * C50822) *
                 C50810) *
                C50760 -
            (((C2377 + C2376 + C2375) * C50822 +
              (C2374 + C2373 + C2372) * C121) *
                 C50810 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50822 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50939) *
                C1544) *
               C50928 +
           ((((C2372 + C2373 + C2374) * C121 +
              (C2375 + C2376 + C2377) * C50822) *
                 C50939 +
             ((C2378 + C2379 + C2380) * C121 +
              (C2381 + C2382 + C2383) * C50822) *
                 C50810) *
                C1544 -
            (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
               C2162 * C1436 + C2157 * C1444) *
                  C50822 +
              (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
               C2162 * C1432 + C2157 * C1440) *
                  C121) *
                 C50810 +
             ((C3069 + C3068 + C3067) * C50822 +
              (C3066 + C3065 + C3064) * C121) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C15409 +
              (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
              C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                 C50939 +
             (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
                C1544 -
            ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
             (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
              C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                 C50939) *
                C50760) *
               C50928 +
           (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
             (C19931 + C19932 + C19933 + C19934 + C19935 + C19936) * C50810) *
                C50760 -
            ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
             (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
                C1544) *
               C50732) *
              C50920 +
          ((((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
              C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                 C50939 +
             (C19031 + C19032 + C19033 + C19034 + C19035 + C19036) * C50810) *
                C50760 -
            ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
             (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
              C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
              (C10625 * C123 + C50630 * C130) * C15409) *
                 C50939) *
                C1544) *
               C50928 +
           (((C18351 + C18352 + C18353 + C18354 + C18355 + C18356) * C50939 +
             (C18357 + C18358 + C18359 + C18360 + C18361 + C18362) * C50810) *
                C1544 -
            (((C10625 * C10062 + C50630 * C10066) * C15408 +
              (C10625 * C10060 + C50630 * C10064) * C15411 + C12980 * C15407 +
              C12979 * C15410 + C11274 * C15406 + C11273 * C15409) *
                 C50810 +
             (C19036 + C19035 + C19034 + C19033 + C19032 + C19031) * C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50974 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50975 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
            (C11591 + C11592) * C10624) *
               C1960) *
              C50928 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50975 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C50974 -
           (((C10625 * C11565 + C50630 * C11567) * C50822 +
             (C10625 * C11564 + C50630 * C11566) * C121) *
                C10624 +
            (C11592 + C11591) * C10623 + (C11590 + C11589) * C10622 +
            (C11588 + C11587) * C10621) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50974 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50975 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C3514 + C3515 + C3516) * C121 +
             (C3517 + C3518 + C3519) * C50822) *
                C50810) *
               C1960) *
              C50928 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50975 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50974 -
           (((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
              C2162 * C3494 + C2157 * C3500) *
                 C50822 +
             (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
              C2162 * C3491 + C2157 * C3497) *
                 C121) *
                C50810 +
            ((C3519 + C3518 + C3517) * C50822 +
             (C3516 + C3515 + C3514) * C121) *
                C50939) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50974 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50975 +
           ((C12972 * C15409 + C12971 * C15406 + C14821 * C15410 +
             C14822 * C15407 + C20335 * C15411 + C20336 * C15408) *
                C50939 +
            (C19433 + C19434 + C19435 + C19436 + C19443 + C19444) * C50810) *
               C1960) *
              C50928 +
          (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
            (C19931 + C19932 + C19933 + C19934 + C19935 + C19936) * C50810) *
               C50975 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C50974 -
           (((C10625 * C14810 + C50630 * C14814) * C15408 +
             (C10625 * C14808 + C50630 * C14811) * C15411 + C13921 * C15407 +
             C13920 * C15410 + C11584 * C15406 + C11583 * C15409) *
                C50810 +
            (C19444 + C19443 + C19436 + C19435 + C19434 + C19433) * C50939) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50822) *
                    C50939 +
                ((C2360 + C2361 + C2362) * C121 +
                 (C2363 + C2364 + C2365) * C50822) *
                    C50810) *
                   C1544 -
               (((C3058 + C3059 + C3060) * C50822 +
                 (C3061 + C3062 + C3063) * C121) *
                    C50810 +
                ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
                  C2162 * C407 + C2157 * C427) *
                     C50822 +
                 (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
                  C2162 * C397 + C2157 * C411) *
                     C121) *
                    C50939) *
                   C50760) *
                  C50680 * C895 +
              ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
                  C2164 * C394 + C2159 * C408) *
                     C121 +
                 (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
                  C2164 * C404 + C2159 * C424) *
                     C50822) *
                    C50939 +
                ((C3064 + C3065 + C3066) * C121 +
                 (C3067 + C3068 + C3069) * C50822) *
                    C50810) *
                   C50760 -
               (((C2377 + C2376 + C2375) * C50822 +
                 (C2374 + C2373 + C2372) * C121) *
                    C50810 +
                ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                  C2162 * C134 + C2157 * C144) *
                     C50822 +
                 (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                  C2162 * C123 + C2157 * C130) *
                     C121) *
                    C50939) *
                   C1544) *
                  C50680 * C896 +
              ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                  C2164 * C126 + C2159 * C138) *
                     C121 +
                 (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                  C2164 * C137 + C2159 * C147) *
                     C50822) *
                    C50939 +
                ((C2688 + C2689 + C2690) * C121 +
                 (C2691 + C2692 + C2693) * C50822) *
                    C50810) *
                   C1544 -
               (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
                  C2162 * C786 + C2157 * C792) *
                     C50822 +
                 (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
                  C2162 * C777 + C2157 * C782) *
                     C121) *
                    C50810 +
                ((C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
                  C2162 * C405 + C2157 * C425) *
                     C50822 +
                 (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
                  C2162 * C395 + C2157 * C409) *
                     C121) *
                    C50939) *
                   C50760) *
                  C50680 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                  C2164 * C124 + C2159 * C131) *
                     C121 +
                 (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                  C2164 * C135 + C2159 * C145) *
                     C50822) *
                    C50939 +
                ((C2360 + C2361 + C2362) * C121 +
                 (C2363 + C2364 + C2365) * C50822) *
                    C50810) *
                   C1544 -
               (((C3058 + C3059 + C3060) * C50822 +
                 (C3061 + C3062 + C3063) * C121) *
                    C50810 +
                ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
                  C2162 * C407 + C2157 * C427) *
                     C50822 +
                 (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
                  C2162 * C397 + C2157 * C411) *
                     C121) *
                    C50939) *
                   C50760) *
                  C248 +
              ((((C3063 + C3062 + C3061) * C121 +
                 (C3060 + C3059 + C3058) * C50822) *
                    C50939 +
                ((C4030 + C4031 + C4032) * C121 +
                 (C4033 + C4034 + C4035) * C50822) *
                    C50810) *
                   C50760 -
               (((C2366 + C2367 + C2368) * C50822 +
                 (C2369 + C2370 + C2371) * C121) *
                    C50810 +
                ((C2365 + C2364 + C2363) * C50822 +
                 (C2362 + C2361 + C2360) * C121) *
                    C50939) *
                   C1544) *
                  C249 +
              ((((C2371 + C2370 + C2369) * C121 +
                 (C2368 + C2367 + C2366) * C50822) *
                    C50939 +
                ((C3338 + C3339 + C3340) * C121 +
                 (C3341 + C3342 + C3343) * C50822) *
                    C50810) *
                   C1544 -
               (((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 +
                  C2158 * C4015 + C2162 * C4010 + C2157 * C4016) *
                     C50822 +
                 (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 +
                  C2158 * C4012 + C2162 * C4007 + C2157 * C4013) *
                     C121) *
                    C50810 +
                ((C4035 + C4034 + C4033) * C50822 +
                 (C4032 + C4031 + C4030) * C121) *
                    C50939) *
                   C50760) *
                  C250) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2360 + C2361 + C2362) * C121 + (C2363 + C2364 + C2365) * C50822) *
               C50810) *
              C1710 -
          (((C3058 + C3059 + C3060) * C50822 + (C3061 + C3062 + C3063) * C121) *
               C50810 +
           ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50822 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C121) *
               C50939) *
              C1711 +
          (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C121 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50822) *
               C50939 +
           ((C3514 + C3515 + C3516) * C121 + (C3517 + C3518 + C3519) * C50822) *
               C50810) *
              C1712 -
          (((C2164 * C4428 + C2159 * C4434 + C2163 * C4429 + C2158 * C4435 +
             C2162 * C4430 + C2157 * C4436) *
                C50822 +
            (C2164 * C4425 + C2159 * C4431 + C2163 * C4426 + C2158 * C4432 +
             C2162 * C4427 + C2157 * C4433) *
                C121) *
               C50810 +
           ((C2164 * C1719 + C2159 * C1727 + C2163 * C1720 + C2158 * C1728 +
             C2162 * C1721 + C2157 * C1729) *
                C50822 +
            (C2164 * C1715 + C2159 * C1723 + C2163 * C1716 + C2158 * C1724 +
             C2162 * C1717 + C2157 * C1725) *
                C121) *
               C50939) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50680 * C895 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
            (C11287 + C11288) * C10624) *
               C50760 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C1544 -
           (((C10625 * C4008 + C50630 * C4014) * C50822 +
             (C10625 * C4005 + C50630 * C4011) * C121) *
                C10624 +
            ((C10625 * C1435 + C50630 * C1443) * C50822 +
             (C10625 * C1431 + C50630 * C1439) * C121) *
                C10623 +
            ((C10625 * C786 + C50630 * C792) * C50822 +
             (C10625 * C777 + C50630 * C782) * C121) *
                C10622 +
            ((C10625 * C405 + C50630 * C425) * C50822 +
             (C10625 * C395 + C50630 * C409) * C121) *
                C10621) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C248 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50760 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C1544) *
              C249 +
          ((C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C1544 -
           (((C10625 * C11919 + C50630 * C11921) * C50822 +
             (C10625 * C11918 + C50630 * C11920) * C121) *
                C10624 +
            (C11932 + C11931) * C10623 + C11923 * C10622 + C11924 * C10621) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
              C1710 -
          (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
           ((C10625 * C407 + C50630 * C427) * C50822 +
            (C10625 * C397 + C50630 * C411) * C121) *
               C10621) *
              C1711 +
          (((C10625 * C398 + C50630 * C412) * C121 +
            (C10625 * C416 + C50630 * C428) * C50822) *
               C10621 +
           (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
           (C11591 + C11592) * C10624) *
              C1712 -
          (((C10625 * C12195 + C50630 * C12197) * C50822 +
            (C10625 * C12194 + C50630 * C12196) * C121) *
               C10624 +
           ((C10625 * C10063 + C50630 * C10067) * C50822 +
            (C10625 * C10061 + C50630 * C10065) * C121) *
               C10623 +
           ((C10625 * C4430 + C50630 * C4436) * C50822 +
            (C10625 * C4427 + C50630 * C4433) * C121) *
               C10622 +
           ((C10625 * C1721 + C50630 * C1729) * C50822 +
            (C10625 * C1717 + C50630 * C1725) * C121) *
               C10621) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C1544 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
             C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                C50939 +
            (C19031 + C19032 + C19033 + C19034 + C19035 + C19036) * C50810) *
               C50760 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C15409 +
             (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
             C13298 * C15407 + C18829 * C15411 + C18830 * C15408) *
                C50939 +
            (C18667 + C18668 + C18669 + C18670 + C18677 + C18678) * C50810) *
               C1544 -
           (((C10625 * C4428 + C50630 * C4434) * C15408 +
             (C10625 * C4425 + C50630 * C4431) * C15411 + C18676 * C15407 +
             C18675 * C15410 + C13140 * C15406 + C13139 * C15409) *
                C50810 +
            ((C10625 * C1719 + C50630 * C1727) * C15408 +
             (C10625 * C1715 + C50630 * C1723) * C15411 + C18830 * C15407 +
             C18829 * C15410 + C13298 * C15406 + C13297 * C15409) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C1544 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50760) *
              C248 +
          (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
            (C19931 + C19932 + C19933 + C19934 + C19935 + C19936) * C50810) *
               C50760 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C1544) *
              C249 +
          (((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
            (C19281 + C19282 + C19283 + C19284 + C19285 + C19286) * C50810) *
               C1544 -
           (((C10625 * C12195 + C50630 * C12197) * C15408 +
             (C10625 * C12194 + C50630 * C12196) * C15411 + C11586 * C15407 +
             C11585 * C15410 + C11265 * C15406 + C11266 * C15409) *
                C50810 +
            (C19936 + C19935 + C19934 + C19933 + C19932 + C19931) * C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C15409 +
            (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
            C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
               C50939 +
           (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
              C1710 -
          ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
           (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
            C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
               C50939) *
              C1711 +
          ((C12972 * C15409 + C12971 * C15406 + C14821 * C15410 +
            C14822 * C15407 + C20335 * C15411 + C20336 * C15408) *
               C50939 +
           (C19433 + C19434 + C19435 + C19436 + C19443 + C19444) * C50810) *
              C1712 -
          (((C10625 * C20327 + C50630 * C20329) * C15408 +
            (C10625 * C20326 + C50630 * C20328) * C15411 + C19442 * C15407 +
            C19441 * C15410 + C13919 * C15406 + C13918 * C15409) *
               C50810 +
           ((C10625 * C17589 + C50630 * C17593) * C15408 +
            (C10625 * C17587 + C50630 * C17591) * C15411 + C20336 * C15407 +
            C20335 * C15410 + C14822 * C15406 + C14821 * C15409) *
               C50939) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50974 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50975 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
            (C11591 + C11592) * C10624) *
               C1960) *
              C50680 * C50920 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
            (C11287 + C11288) * C10624) *
               C50975 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50974 -
           (((C10625 * C9129 + C50630 * C9133) * C50822 +
             (C10625 * C9127 + C50630 * C9131) * C121) *
                C10624 +
            ((C10625 * C3493 + C50630 * C3499) * C50822 +
             (C10625 * C3490 + C50630 * C3496) * C121) *
                C10623 +
            ((C10625 * C1089 + C50630 * C1097) * C50822 +
             (C10625 * C1085 + C50630 * C1093) * C121) *
                C10622 +
            ((C10625 * C417 + C50630 * C429) * C50822 +
             (C10625 * C399 + C50630 * C413) * C121) *
                C10621) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50974 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50975 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C3514 + C3515 + C3516) * C121 +
             (C3517 + C3518 + C3519) * C50822) *
                C50810) *
               C1960) *
              C50680 * C50920 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C3064 + C3065 + C3066) * C121 +
             (C3067 + C3068 + C3069) * C50822) *
                C50810) *
               C50975 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50974 -
           (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50822 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C121) *
                C50810 +
            ((C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
              C2162 * C417 + C2157 * C429) *
                 C50822 +
             (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
              C2162 * C399 + C2157 * C413) *
                 C121) *
                C50939) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C50974 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50975 +
           ((C12972 * C15409 + C12971 * C15406 + C14821 * C15410 +
             C14822 * C15407 + C20335 * C15411 + C20336 * C15408) *
                C50939 +
            (C19433 + C19434 + C19435 + C19436 + C19443 + C19444) * C50810) *
               C1960) *
              C50680 * C50920 +
          (((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
             C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                C50939 +
            (C19031 + C19032 + C19033 + C19034 + C19035 + C19036) * C50810) *
               C50975 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C50974 -
           (((C10625 * C16693 + C50630 * C16695) * C15408 +
             (C10625 * C16692 + C50630 * C16694) * C15411 + C18520 * C15407 +
             C18519 * C15410 + C12978 * C15406 + C12977 * C15409) *
                C50810 +
            ((C10625 * C7163 + C50630 * C7169) * C15408 +
             (C10625 * C7160 + C50630 * C7166) * C15411 + C18518 * C15407 +
             C18517 * C15410 + C12976 * C15406 + C12975 * C15409) *
                C50939) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C1544 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C248 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50760 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C1544) *
              C249 +
          ((((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C1544 -
           (((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
              C2162 * C4010 + C2157 * C4016) *
                 C50822 +
             (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
              C2162 * C4007 + C2157 * C4013) *
                 C121) *
                C50810 +
            ((C4035 + C4034 + C4033) * C50822 +
             (C4032 + C4031 + C4030) * C121) *
                C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C1544 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C895 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C3064 + C3065 + C3066) * C121 +
             (C3067 + C3068 + C3069) * C50822) *
                C50810) *
               C50760 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C1544 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50822 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50810 +
            ((C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
              C2162 * C405 + C2157 * C425) *
                 C50822 +
             (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
              C2162 * C395 + C2157 * C409) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50680 * C895 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
            (C11287 + C11288) * C10624) *
               C50760 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C1544 -
           (((C10625 * C4008 + C50630 * C4014) * C50822 +
             (C10625 * C4005 + C50630 * C4011) * C121) *
                C10624 +
            ((C10625 * C1435 + C50630 * C1443) * C50822 +
             (C10625 * C1431 + C50630 * C1439) * C121) *
                C10623 +
            ((C10625 * C786 + C50630 * C792) * C50822 +
             (C10625 * C777 + C50630 * C782) * C121) *
                C10622 +
            ((C10625 * C405 + C50630 * C425) * C50822 +
             (C10625 * C395 + C50630 * C409) * C121) *
                C10621) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C248 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50760 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C1544) *
              C249 +
          ((C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C1544 -
           (((C10625 * C11919 + C50630 * C11921) * C50822 +
             (C10625 * C11918 + C50630 * C11920) * C121) *
                C10624 +
            (C11932 + C11931) * C10623 + C11923 * C10622 + C11924 * C10621) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C1544 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C15409 + C12974 * C15406 + C12975 * C15410 +
             C12976 * C15407 + C18517 * C15411 + C18518 * C15408) *
                C50939 +
            (C19031 + C19032 + C19033 + C19034 + C19035 + C19036) * C50810) *
               C50760 -
           ((C18356 + C18355 + C18354 + C18353 + C18352 + C18351) * C50810 +
            (C12976 * C15408 + C12975 * C15411 + C12974 * C15407 +
             C12973 * C15410 + (C10625 * C134 + C50630 * C144) * C15406 +
             (C10625 * C123 + C50630 * C130) * C15409) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C15409 +
             (C10625 * C135 + C50630 * C145) * C15406 + C13297 * C15410 +
             C13298 * C15407 + C18829 * C15411 + C18830 * C15408) *
                C50939 +
            (C18667 + C18668 + C18669 + C18670 + C18677 + C18678) * C50810) *
               C1544 -
           (((C10625 * C4428 + C50630 * C4434) * C15408 +
             (C10625 * C4425 + C50630 * C4431) * C15411 + C18676 * C15407 +
             C18675 * C15410 + C13140 * C15406 + C13139 * C15409) *
                C50810 +
            ((C10625 * C1719 + C50630 * C1727) * C15408 +
             (C10625 * C1715 + C50630 * C1723) * C15411 + C18830 * C15407 +
             C18829 * C15410 + C13298 * C15406 + C13297 * C15409) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C15409 +
             (C10625 * C133 + C50630 * C143) * C15406 + C12969 * C15410 +
             C12970 * C15407 + C12972 * C15411 + C12971 * C15408) *
                C50939 +
            (C18339 + C18340 + C18341 + C18342 + C18343 + C18344) * C50810) *
               C1544 -
           ((C19025 + C19026 + C19027 + C19028 + C19029 + C19030) * C50810 +
            (C14822 * C15408 + C14821 * C15411 + C12971 * C15407 +
             C12972 * C15410 + C12970 * C15406 + C12969 * C15409) *
                C50939) *
               C50760) *
              C248 +
          (((C19030 + C19029 + C19028 + C19027 + C19026 + C19025) * C50939 +
            (C19931 + C19932 + C19933 + C19934 + C19935 + C19936) * C50810) *
               C50760 -
           ((C18345 + C18346 + C18347 + C18348 + C18349 + C18350) * C50810 +
            (C18344 + C18343 + C18342 + C18341 + C18340 + C18339) * C50939) *
               C1544) *
              C249 +
          (((C18350 + C18349 + C18348 + C18347 + C18346 + C18345) * C50939 +
            (C19281 + C19282 + C19283 + C19284 + C19285 + C19286) * C50810) *
               C1544 -
           (((C10625 * C12195 + C50630 * C12197) * C15408 +
             (C10625 * C12194 + C50630 * C12196) * C15411 + C11586 * C15407 +
             C11585 * C15410 + C11265 * C15406 + C11266 * C15409) *
                C50810 +
            (C19936 + C19935 + C19934 + C19933 + C19932 + C19931) * C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C50928 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50732) *
              C50970 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50732 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 +
             (C10625 * C395 + C50630 * C409) * C5024 +
             (C10625 * C405 + C50630 * C425) * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50696 * C50928 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C5024 + C11006 * C50940 +
             C11005 * C5023) *
                C7777 +
            (C13146 + C13145 + C13134 + C13133) * C7776 +
            (C13144 + C13143 + C13128 + C13127) * C7775) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C50928 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50732 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
             C2164 * C402 + C2159 * C420) *
                C5024 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
             C2164 * C421 + C2159 * C432) *
                C50834) *
               C50796 * C50696 * C50928 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50834 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C5024 +
            (C2693 + C2692 + C2691) * C50940 +
            (C2690 + C2689 + C2688) * C5023) *
               C50796 * C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50696 * C50928 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50696 * C50732) *
              C50970 +
          ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
            C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
            C18519 * C20895 + C18520 * C20891) *
               C50796 * C50696 * C50732 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C10625 * C124 + C50630 * C131) * C20892 +
            (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
            C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
            (C10625 * C1715 + C50630 * C1723) * C20895 +
            (C10625 * C1719 + C50630 * C1727) * C20891) *
               C50796 * C50696 * C50928 -
           ((C10625 * C4428 + C50630 * C4434) * C20891 +
            (C10625 * C4425 + C50630 * C4431) * C20895 + C18676 * C20890 +
            C18675 * C20894 + C13140 * C20889 + C13139 * C20893 +
            C11002 * C20888 + C11001 * C20892) *
               C50796 * C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C5023 +
              (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
              C12970 * C50834) *
                 C7775 +
             (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
                C50929 -
            ((C13493 + C13494 + C13495 + C13496) * C7777 +
             (C13497 + C13498 + C13499 + C13500) * C7776 +
             (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
              C12969 * C5023) *
                 C7775) *
                C50760) *
               C50928 +
           (((C13500 + C13499 + C13498 + C13497) * C7775 +
             (C13496 + C13495 + C13494 + C13493) * C7776 +
             (C11266 * C5023 + C11265 * C50940 + C11585 * C5024 +
              C11586 * C50834) *
                 C7777) *
                C50760 -
            ((C12777 + C12778 + C12779 + C12780) * C7777 +
             (C12776 + C12775 + C12774 + C12773) * C7776 +
             (C12772 + C12771 + C12770 + C12769) * C7775) *
                C50929) *
               C50732) *
              C251 +
          ((((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
              C12976 * C50834) *
                 C7775 +
             (C13501 + C13502 + C13503 + C13504) * C7776 +
             (C13505 + C13506 + C13507 + C13508) * C7777) *
                C50760 -
            (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
             (C12974 * C50834 + C12973 * C5024 +
              (C10625 * C134 + C50630 * C144) * C50940 +
              (C10625 * C123 + C50630 * C130) * C5023) *
                 C7775) *
                C50929) *
               C50928 +
           (((C12781 + C12782 + C12783 + C12784) * C7775 +
             (C12785 + C12786 + C12787 + C12788) * C7776 +
             (C12789 + C12790 + C12791 + C12792) * C7777) *
                C50929 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C5024 + C11276 * C50940 +
              C11275 * C5023) *
                 C7777 +
             (C13508 + C13507 + C13506 + C13505) * C7776 +
             (C13504 + C13503 + C13502 + C13501) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C5023 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50940 +
             (C5366 + C5367 + C5368) * C5024 +
             (C5369 + C5370 + C5371) * C50834) *
                C50796 * C50929 -
            ((C5372 + C5373 + C5374) * C50834 +
             (C5375 + C5376 + C5377) * C5024 +
             (C5371 + C5370 + C5369) * C50940 +
             (C5368 + C5367 + C5366) * C5023) *
                C50796 * C50760) *
               C50928 +
           (((C3063 + C3062 + C3061) * C5023 +
             (C3060 + C3059 + C3058) * C50940 +
             (C3514 + C3515 + C3516) * C5024 +
             (C3517 + C3518 + C3519) * C50834) *
                C50796 * C50760 -
            ((C3058 + C3059 + C3060) * C50834 +
             (C3061 + C3062 + C3063) * C5024 +
             (C2365 + C2364 + C2363) * C50940 +
             (C2362 + C2361 + C2360) * C5023) *
                C50796 * C50929) *
               C50732) *
              C251 +
          ((((C5378 + C5379 + C5380) * C5023 +
             (C5381 + C5382 + C5383) * C50940 +
             (C5384 + C5385 + C5386) * C5024 +
             (C5387 + C5388 + C5389) * C50834) *
                C50796 * C50760 -
            ((C5383 + C5382 + C5381) * C50834 +
             (C5380 + C5379 + C5378) * C5024 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50940 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C5023) *
                C50796 * C50929) *
               C50928 +
           (((C2372 + C2373 + C2374) * C5023 +
             (C2375 + C2376 + C2377) * C50940 +
             (C3064 + C3065 + C3066) * C5024 +
             (C3067 + C3068 + C3069) * C50834) *
                C50796 * C50929 -
            ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50834 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C5024 +
             (C3069 + C3068 + C3067) * C50940 +
             (C3066 + C3065 + C3064) * C5023) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C20892 +
             (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
             C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
             C14821 * C20895 + C14822 * C20891) *
                C50796 * C50929 -
            (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
             C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
             C12970 * C20888 + C12969 * C20892) *
                C50796 * C50760) *
               C50928 +
           ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
             C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
             C19441 * C20895 + C19442 * C20891) *
                C50796 * C50760 -
            (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
             C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
             C10758 * C20888 + C10757 * C20892) *
                C50796 * C50929) *
               C50732) *
              C251 +
          (((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
             C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
             C21097 * C20895 + C21098 * C20891) *
                C50796 * C50760 -
            (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
             C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
             (C10625 * C134 + C50630 * C144) * C20888 +
             (C10625 * C123 + C50630 * C130) * C20892) *
                C50796 * C50929) *
               C50928 +
           ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
             C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
             C18519 * C20895 + C18520 * C20891) *
                C50796 * C50929 -
            ((C10625 * C16693 + C50630 * C16695) * C20891 +
             (C10625 * C16692 + C50630 * C16694) * C20895 + C18520 * C20890 +
             C18519 * C20894 + C12978 * C20889 + C12977 * C20893 +
             C11272 * C20888 + C11271 * C20892) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                C2164 * C124 + C2159 * C131) *
                   C5023 +
               (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                C2164 * C135 + C2159 * C145) *
                   C50940 +
               (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
                C2164 * C395 + C2159 * C409) *
                   C5024 +
               (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
                C2164 * C405 + C2159 * C425) *
                   C50834) *
                  C50796 * C50696 * C50680 * C113 -
              ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
                C2162 * C406 + C2157 * C426) *
                   C50834 +
               (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
                C2162 * C396 + C2157 * C410) *
                   C5024 +
               (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                C2162 * C134 + C2157 * C144) *
                   C50940 +
               (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                C2162 * C123 + C2157 * C130) *
                   C5023) *
                  C50796 * C50696 * C50680 * C114 +
              ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                C2164 * C126 + C2159 * C138) *
                   C5023 +
               (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                C2164 * C137 + C2159 * C147) *
                   C50940 +
               (C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
                C2164 * C402 + C2159 * C420) *
                   C5024 +
               (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
                C2164 * C421 + C2159 * C432) *
                   C50834) *
                  C50796 * C50696 * C50680 * C115 -
              ((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
                C2162 * C404 + C2157 * C424) *
                   C50834 +
               (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
                C2162 * C394 + C2157 * C408) *
                   C5024 +
               (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
                C2162 * C136 + C2157 * C146) *
                   C50940 +
               (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
                C2162 * C125 + C2157 * C132) *
                   C5023) *
                  C50796 * C50696 * C50680 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C5023 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50940 +
                (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
                 C2164 * C395 + C2159 * C409) *
                    C5024 +
                (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
                 C2164 * C405 + C2159 * C425) *
                    C50834) *
                   C50796 * C50696 * C248 -
               ((C3058 + C3059 + C3060) * C50834 +
                (C3061 + C3062 + C3063) * C5024 +
                (C2365 + C2364 + C2363) * C50940 +
                (C2362 + C2361 + C2360) * C5023) *
                   C50796 * C50696 * C249 +
               ((C2371 + C2370 + C2369) * C5023 +
                (C2368 + C2367 + C2366) * C50940 +
                (C4030 + C4031 + C4032) * C5024 +
                (C4033 + C4034 + C4035) * C50834) *
                   C50796 * C50696 * C250) *
                  C251 +
              (((C2372 + C2373 + C2374) * C5023 +
                (C2375 + C2376 + C2377) * C50940 +
                (C3064 + C3065 + C3066) * C5024 +
                (C3067 + C3068 + C3069) * C50834) *
                   C50796 * C50696 * C249 -
               ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
                 C2162 * C406 + C2157 * C426) *
                    C50834 +
                (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
                 C2162 * C396 + C2157 * C410) *
                    C5024 +
                (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50940 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C5023) *
                   C50796 * C50696 * C248 -
               ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
                 C2162 * C1436 + C2157 * C1444) *
                    C50834 +
                (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
                 C2162 * C1432 + C2157 * C1440) *
                    C5024 +
                (C2383 + C2382 + C2381) * C50940 +
                (C2380 + C2379 + C2378) * C5023) *
                   C50796 * C50696 * C250) *
                  C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C391 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C392 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
             C2164 * C1715 + C2159 * C1723) *
                C5024 +
            (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
             C2164 * C1719 + C2159 * C1727) *
                C50834) *
               C50796 * C393) *
              C50680 * C251 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C392 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C391 -
           ((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
             C2162 * C1720 + C2157 * C1728) *
                C50834 +
            (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
             C2162 * C1716 + C2157 * C1724) *
                C5024 +
            (C5389 + C5388 + C5387) * C50940 +
            (C5386 + C5385 + C5384) * C5023) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 +
            (C10625 * C397 + C50630 * C411) * C5024 +
            (C10625 * C407 + C50630 * C427) * C50834) *
               C7775 +
           (C10757 * C5023 + C10758 * C50940 + C11270 * C5024 +
            C11269 * C50834) *
               C7776 +
           (C10759 * C5023 + C10760 * C50940 + C11268 * C5024 +
            C11267 * C50834) *
               C7777) *
              C50696 * C50680 * C113 -
          ((C11274 * C50834 + C11273 * C5024 + C10768 * C50940 +
            C10767 * C5023) *
               C7777 +
           (C11272 * C50834 + C11271 * C5024 + C10766 * C50940 +
            C10765 * C5023) *
               C7776 +
           ((C10625 * C406 + C50630 * C426) * C50834 +
            (C10625 * C396 + C50630 * C410) * C5024 +
            (C10625 * C134 + C50630 * C144) * C50940 +
            (C10625 * C123 + C50630 * C130) * C5023) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C5023 +
            (C10625 * C135 + C50630 * C145) * C50940 +
            (C10625 * C395 + C50630 * C409) * C5024 +
            (C10625 * C405 + C50630 * C425) * C50834) *
               C7775 +
           (C11001 * C5023 + C11002 * C50940 +
            (C10625 * C777 + C50630 * C782) * C5024 +
            (C10625 * C786 + C50630 * C792) * C50834) *
               C7776 +
           (C11003 * C5023 + C11004 * C50940 +
            (C10625 * C1431 + C50630 * C1439) * C5024 +
            (C10625 * C1435 + C50630 * C1443) * C50834) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C10625 * C1434 + C50630 * C1442) * C50834 +
            (C10625 * C1430 + C50630 * C1438) * C5024 +
            (C10625 * C278 + C50630 * C290) * C50940 +
            (C10625 * C260 + C50630 * C274) * C5023) *
               C7777 +
           ((C10625 * C787 + C50630 * C793) * C50834 +
            (C10625 * C778 + C50630 * C783) * C5024 +
            (C10625 * C263 + C50630 * C283) * C50940 +
            (C10625 * C253 + C50630 * C267) * C5023) *
               C7776 +
           ((C10625 * C404 + C50630 * C424) * C50834 +
            (C10625 * C394 + C50630 * C408) * C5024 +
            (C10625 * C136 + C50630 * C146) * C50940 +
            (C10625 * C125 + C50630 * C132) * C5023) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 +
             (C10625 * C397 + C50630 * C411) * C5024 +
             (C10625 * C407 + C50630 * C427) * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C248 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C249 +
           (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C10764 * C5023 + C10763 * C50940 + C11929 * C5024 +
             C11930 * C50834) *
                C7777) *
               C50696 * C250) *
              C251 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C249 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            ((C10625 * C406 + C50630 * C426) * C50834 +
             (C10625 * C396 + C50630 * C410) * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C248 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C5024 + C10772 * C50940 +
             C10771 * C5023) *
                C7777 +
            (C12792 + C12791 + C12790 + C12789) * C7776 + C12798 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C391 -
           ((C11584 * C50834 + C11583 * C5024 + C11267 * C50940 +
             C11268 * C5023) *
                C7777 +
            (C11582 * C50834 + C11581 * C5024 + C11269 * C50940 +
             C11270 * C5023) *
                C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C392 +
           ((C12972 * C5023 + C12971 * C50940 +
             (C10625 * C1717 + C50630 * C1725) * C5024 +
             (C10625 * C1721 + C50630 * C1729) * C50834) *
                C7775 +
            (C11581 * C5023 + C11582 * C50940 +
             (C10625 * C4427 + C50630 * C4433) * C5024 +
             (C10625 * C4430 + C50630 * C4436) * C50834) *
                C7776 +
            (C11583 * C5023 + C11584 * C50940 +
             (C10625 * C10061 + C50630 * C10065) * C5024 +
             (C10625 * C10063 + C50630 * C10067) * C50834) *
                C7777) *
               C393) *
              C50680 * C251 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C11271 * C5023 + C11272 * C50940 + C12977 * C5024 +
             C12978 * C50834) *
                C7776 +
            (C11273 * C5023 + C11274 * C50940 + C12979 * C5024 +
             C12980 * C50834) *
                C7777) *
               C392 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C391 -
           (((C10625 * C10062 + C50630 * C10066) * C50834 +
             (C10625 * C10060 + C50630 * C10064) * C5024 + C12980 * C50940 +
             C12979 * C5023) *
                C7777 +
            ((C10625 * C4429 + C50630 * C4435) * C50834 +
             (C10625 * C4426 + C50630 * C4432) * C5024 + C12978 * C50940 +
             C12977 * C5023) *
                C7776 +
            ((C10625 * C1720 + C50630 * C1728) * C50834 +
             (C10625 * C1716 + C50630 * C1724) * C5024 + C12976 * C50940 +
             C12975 * C5023) *
                C7775) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10625 * C122 + C50630 * C129) * C20892 +
           (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
           C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
           C14821 * C20895 + C14822 * C20891) *
              C50796 * C50696 * C50680 * C113 -
          (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
           C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
           (C10625 * C134 + C50630 * C144) * C20888 +
           (C10625 * C123 + C50630 * C130) * C20892) *
              C50796 * C50696 * C50680 * C114 +
          ((C10625 * C124 + C50630 * C131) * C20892 +
           (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
           C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
           (C10625 * C1715 + C50630 * C1723) * C20895 +
           (C10625 * C1719 + C50630 * C1727) * C20891) *
              C50796 * C50696 * C50680 * C115 -
          ((C10625 * C1718 + C50630 * C1726) * C20891 +
           (C10625 * C1714 + C50630 * C1722) * C20895 +
           (C10625 * C419 + C50630 * C431) * C20890 +
           (C10625 * C401 + C50630 * C415) * C20894 +
           (C10625 * C404 + C50630 * C424) * C20889 +
           (C10625 * C394 + C50630 * C408) * C20893 +
           (C10625 * C136 + C50630 * C146) * C20888 +
           (C10625 * C125 + C50630 * C132) * C20892) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50696 * C248 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50696 * C249 +
           (C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
            C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
            C13920 * C20895 + C13921 * C20891) *
               C50796 * C50696 * C250) *
              C251 +
          ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
            C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
            C18519 * C20895 + C18520 * C20891) *
               C50796 * C50696 * C249 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50696 * C248 -
           ((C10625 * C10062 + C50630 * C10066) * C20891 +
            (C10625 * C10060 + C50630 * C10064) * C20895 + C12980 * C20890 +
            C12979 * C20894 + C11274 * C20889 + C11273 * C20893 +
            C10768 * C20888 + C10767 * C20892) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C391 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C392 +
           (C12972 * C20892 + C12971 * C20888 + C14821 * C20893 +
            C14822 * C20889 + C20335 * C20894 + C20336 * C20890 +
            (C10625 * C17587 + C50630 * C17591) * C20895 +
            (C10625 * C17589 + C50630 * C17593) * C20891) *
               C50796 * C393) *
              C50680 * C251 +
          ((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
            C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
            C21097 * C20895 + C21098 * C20891) *
               C50796 * C392 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C391 -
           ((C10625 * C17588 + C50630 * C17592) * C20891 +
            (C10625 * C17586 + C50630 * C17590) * C20895 + C21098 * C20890 +
            C21097 * C20894 + C18518 * C20889 + C18517 * C20893 +
            C12976 * C20888 + C12975 * C20892) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50929 -
           ((C11584 * C50834 + C11583 * C5024 + C11267 * C50940 +
             C11268 * C5023) *
                C7777 +
            (C11582 * C50834 + C11581 * C5024 + C11269 * C50940 +
             C11270 * C5023) *
                C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50680 * C50970 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C11271 * C5023 + C11272 * C50940 + C12977 * C5024 +
             C12978 * C50834) *
                C7776 +
            (C11273 * C5023 + C11274 * C50940 + C12979 * C5024 +
             C12980 * C50834) *
                C7777) *
               C50760 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50929 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C5024 + C13142 * C50940 +
             C13141 * C5023) *
                C7777 +
            ((C10625 * C1088 + C50630 * C1096) * C50834 +
             (C10625 * C1084 + C50630 * C1092) * C5024 + C13140 * C50940 +
             C13139 * C5023) *
                C7776 +
            ((C10625 * C418 + C50630 * C430) * C50834 +
             (C10625 * C400 + C50630 * C414) * C5024 + C13298 * C50940 +
             C13297 * C5023) *
                C7775) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50929 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50760 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C50929 -
           ((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
             C2162 * C418 + C2157 * C430) *
                C50834 +
            (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
             C2162 * C400 + C2157 * C414) *
                C5024 +
            (C5699 + C5698 + C5697) * C50940 +
            (C5696 + C5695 + C5694) * C5023) *
               C50796 * C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50929 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50760) *
              C50680 * C50970 +
          ((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
            C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
            C21097 * C20895 + C21098 * C20891) *
               C50796 * C50760 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C10625 * C124 + C50630 * C131) * C20892 +
            (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
            C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
            C21299 * C20895 + C21300 * C20891) *
               C50796 * C50929 -
           ((C10625 * C7162 + C50630 * C7168) * C20891 +
            (C10625 * C7159 + C50630 * C7165) * C20895 + C21300 * C20890 +
            C21299 * C20894 + C18830 * C20889 + C18829 * C20893 +
            C13298 * C20888 + C13297 * C20892) *
               C50796 * C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
             C2164 * C395 + C2159 * C409) *
                C5024 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
             C2164 * C405 + C2159 * C425) *
                C50834) *
               C50796 * C50696 * C248 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C249 +
           ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50696 * C250) *
              C251 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C249 -
           ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
             C2162 * C406 + C2157 * C426) *
                C50834 +
            (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
             C2162 * C396 + C2157 * C410) *
                C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C248 -
           ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
             C2162 * C1436 + C2157 * C1444) *
                C50834 +
            (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
             C2162 * C1432 + C2157 * C1440) *
                C5024 +
            (C2383 + C2382 + C2381) * C50940 +
            (C2380 + C2379 + C2378) * C5023) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
            C2164 * C395 + C2159 * C409) *
               C5024 +
           (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
            C2164 * C405 + C2159 * C425) *
               C50834) *
              C50796 * C50696 * C50680 * C113 -
          ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
            C2162 * C406 + C2157 * C426) *
               C50834 +
           (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
            C2162 * C396 + C2157 * C410) *
               C5024 +
           (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
            C2162 * C134 + C2157 * C144) *
               C50940 +
           (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
            C2162 * C123 + C2157 * C130) *
               C5023) *
              C50796 * C50696 * C50680 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
            C2164 * C126 + C2159 * C138) *
               C5023 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
            C2164 * C137 + C2159 * C147) *
               C50940 +
           (C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
            C2164 * C402 + C2159 * C420) *
               C5024 +
           (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
            C2164 * C421 + C2159 * C432) *
               C50834) *
              C50796 * C50696 * C50680 * C115 -
          ((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
            C2162 * C404 + C2157 * C424) *
               C50834 +
           (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
            C2162 * C394 + C2157 * C408) *
               C5024 +
           (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
            C2162 * C136 + C2157 * C146) *
               C50940 +
           (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
            C2162 * C125 + C2157 * C132) *
               C5023) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 +
            (C10625 * C397 + C50630 * C411) * C5024 +
            (C10625 * C407 + C50630 * C427) * C50834) *
               C7775 +
           (C10757 * C5023 + C10758 * C50940 + C11270 * C5024 +
            C11269 * C50834) *
               C7776 +
           (C10759 * C5023 + C10760 * C50940 + C11268 * C5024 +
            C11267 * C50834) *
               C7777) *
              C50696 * C50680 * C113 -
          ((C11274 * C50834 + C11273 * C5024 + C10768 * C50940 +
            C10767 * C5023) *
               C7777 +
           (C11272 * C50834 + C11271 * C5024 + C10766 * C50940 +
            C10765 * C5023) *
               C7776 +
           ((C10625 * C406 + C50630 * C426) * C50834 +
            (C10625 * C396 + C50630 * C410) * C5024 +
            (C10625 * C134 + C50630 * C144) * C50940 +
            (C10625 * C123 + C50630 * C130) * C5023) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C5023 +
            (C10625 * C135 + C50630 * C145) * C50940 +
            (C10625 * C395 + C50630 * C409) * C5024 +
            (C10625 * C405 + C50630 * C425) * C50834) *
               C7775 +
           (C11001 * C5023 + C11002 * C50940 +
            (C10625 * C777 + C50630 * C782) * C5024 +
            (C10625 * C786 + C50630 * C792) * C50834) *
               C7776 +
           (C11003 * C5023 + C11004 * C50940 +
            (C10625 * C1431 + C50630 * C1439) * C5024 +
            (C10625 * C1435 + C50630 * C1443) * C50834) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C10625 * C1434 + C50630 * C1442) * C50834 +
            (C10625 * C1430 + C50630 * C1438) * C5024 +
            (C10625 * C278 + C50630 * C290) * C50940 +
            (C10625 * C260 + C50630 * C274) * C5023) *
               C7777 +
           ((C10625 * C787 + C50630 * C793) * C50834 +
            (C10625 * C778 + C50630 * C783) * C5024 +
            (C10625 * C263 + C50630 * C283) * C50940 +
            (C10625 * C253 + C50630 * C267) * C5023) *
               C7776 +
           ((C10625 * C404 + C50630 * C424) * C50834 +
            (C10625 * C394 + C50630 * C408) * C5024 +
            (C10625 * C136 + C50630 * C146) * C50940 +
            (C10625 * C125 + C50630 * C132) * C5023) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 +
             (C10625 * C397 + C50630 * C411) * C5024 +
             (C10625 * C407 + C50630 * C427) * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C248 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C249 +
           (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C10764 * C5023 + C10763 * C50940 + C11929 * C5024 +
             C11930 * C50834) *
                C7777) *
               C50696 * C250) *
              C251 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C249 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            ((C10625 * C406 + C50630 * C426) * C50834 +
             (C10625 * C396 + C50630 * C410) * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C248 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C5024 + C10772 * C50940 +
             C10771 * C5023) *
                C7777 +
            (C12792 + C12791 + C12790 + C12789) * C7776 + C12798 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10625 * C122 + C50630 * C129) * C20892 +
           (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
           C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
           C14821 * C20895 + C14822 * C20891) *
              C50796 * C50696 * C50680 * C113 -
          (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
           C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
           (C10625 * C134 + C50630 * C144) * C20888 +
           (C10625 * C123 + C50630 * C130) * C20892) *
              C50796 * C50696 * C50680 * C114 +
          ((C10625 * C124 + C50630 * C131) * C20892 +
           (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
           C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
           (C10625 * C1715 + C50630 * C1723) * C20895 +
           (C10625 * C1719 + C50630 * C1727) * C20891) *
              C50796 * C50696 * C50680 * C115 -
          ((C10625 * C1718 + C50630 * C1726) * C20891 +
           (C10625 * C1714 + C50630 * C1722) * C20895 +
           (C10625 * C419 + C50630 * C431) * C20890 +
           (C10625 * C401 + C50630 * C415) * C20894 +
           (C10625 * C404 + C50630 * C424) * C20889 +
           (C10625 * C394 + C50630 * C408) * C20893 +
           (C10625 * C136 + C50630 * C146) * C20888 +
           (C10625 * C125 + C50630 * C132) * C20892) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50696 * C248 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50696 * C249 +
           (C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
            C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
            C13920 * C20895 + C13921 * C20891) *
               C50796 * C50696 * C250) *
              C251 +
          ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
            C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
            C18519 * C20895 + C18520 * C20891) *
               C50796 * C50696 * C249 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50696 * C248 -
           ((C10625 * C10062 + C50630 * C10066) * C20891 +
            (C10625 * C10060 + C50630 * C10064) * C20895 + C12980 * C20890 +
            C12979 * C20894 + C11274 * C20889 + C11273 * C20893 +
            C10768 * C20888 + C10767 * C20892) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C50972 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50973 +
           (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C50696 * C1199) *
              C50920 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50973 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C50972 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C5024 + C10772 * C50940 +
             C10771 * C5023) *
                C7777 +
            (C12792 + C12791 + C12790 + C12789) * C7776 + C12798 * C7775) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C50972 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50973 +
           ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50696 * C1199) *
              C50920 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50973 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C50972 -
           ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
             C2162 * C1436 + C2157 * C1444) *
                C50834 +
            (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
             C2162 * C1432 + C2157 * C1440) *
                C5024 +
            (C2383 + C2382 + C2381) * C50940 +
            (C2380 + C2379 + C2378) * C5023) *
               C50796 * C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50696 * C50972 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50696 * C50973 +
           (C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
            C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
            C13920 * C20895 + C13921 * C20891) *
               C50796 * C50696 * C1199) *
              C50920 +
          ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
            C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
            C18519 * C20895 + C18520 * C20891) *
               C50796 * C50696 * C50973 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50696 * C50972 -
           ((C10625 * C10062 + C50630 * C10066) * C20891 +
            (C10625 * C10060 + C50630 * C10064) * C20895 + C12980 * C20890 +
            C12979 * C20894 + C11274 * C20889 + C11273 * C20893 +
            C10768 * C20888 + C10767 * C20892) *
               C50796 * C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50929 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50972 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50760 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50929) *
              C50973 +
          ((C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C50929 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C5024 + C11930 * C50940 +
             C11929 * C5023) *
                C7777 +
            (C14416 + C14415 + C14414 + C14413) * C7776 + C14418 * C7775) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50929 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50972 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50760 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50929) *
              C50973 +
          (((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50929 -
           ((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
             C2162 * C3494 + C2157 * C3500) *
                C50834 +
            (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
             C2162 * C3491 + C2157 * C3497) *
                C5024 +
            (C4035 + C4034 + C4033) * C50940 +
            (C4032 + C4031 + C4030) * C5023) *
               C50796 * C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50929 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50760) *
              C50972 +
          ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
            C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
            C19441 * C20895 + C19442 * C20891) *
               C50796 * C50760 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50929) *
              C50973 +
          ((C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
            C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
            C13920 * C20895 + C13921 * C20891) *
               C50796 * C50929 -
           ((C10625 * C14810 + C50630 * C14814) * C20891 +
            (C10625 * C14808 + C50630 * C14811) * C20895 + C13921 * C20890 +
            C13920 * C20894 + C11584 * C20889 + C11583 * C20893 +
            C11267 * C20888 + C11268 * C20892) *
               C50796 * C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C5023 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50940 +
                (C5366 + C5367 + C5368) * C5024 +
                (C5369 + C5370 + C5371) * C50834) *
                   C50796 * C50696 * C893 -
               ((C3058 + C3059 + C3060) * C50834 +
                (C3061 + C3062 + C3063) * C5024 +
                (C2365 + C2364 + C2363) * C50940 +
                (C2362 + C2361 + C2360) * C5023) *
                   C50796 * C50696 * C50732) *
                  C895 +
              (((C2372 + C2373 + C2374) * C5023 +
                (C2375 + C2376 + C2377) * C50940 +
                (C3064 + C3065 + C3066) * C5024 +
                (C3067 + C3068 + C3069) * C50834) *
                   C50796 * C50696 * C50732 -
               ((C5383 + C5382 + C5381) * C50834 +
                (C5380 + C5379 + C5378) * C5024 +
                (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50940 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C5023) *
                   C50796 * C50696 * C893) *
                  C896 +
              (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                 C2164 * C126 + C2159 * C138) *
                    C5023 +
                (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                 C2164 * C137 + C2159 * C147) *
                    C50940 +
                (C5694 + C5695 + C5696) * C5024 +
                (C5697 + C5698 + C5699) * C50834) *
                   C50796 * C50696 * C893 -
               ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
                 C2162 * C786 + C2157 * C792) *
                    C50834 +
                (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
                 C2162 * C777 + C2157 * C782) *
                    C5024 +
                (C2693 + C2692 + C2691) * C50940 +
                (C2690 + C2689 + C2688) * C5023) *
                   C50796 * C50696 * C50732) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                C2164 * C124 + C2159 * C131) *
                   C5023 +
               (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                C2164 * C135 + C2159 * C145) *
                   C50940 +
               (C5366 + C5367 + C5368) * C5024 +
               (C5369 + C5370 + C5371) * C50834) *
                  C50796 * C50696 * C964 -
              ((C3058 + C3059 + C3060) * C50834 +
               (C3061 + C3062 + C3063) * C5024 +
               (C2365 + C2364 + C2363) * C50940 +
               (C2362 + C2361 + C2360) * C5023) *
                  C50796 * C50696 * C965 +
              ((C2371 + C2370 + C2369) * C5023 +
               (C2368 + C2367 + C2366) * C50940 +
               (C4030 + C4031 + C4032) * C5024 +
               (C4033 + C4034 + C4035) * C50834) *
                  C50796 * C50696 * C966 -
              ((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
                C2162 * C4010 + C2157 * C4016) *
                   C50834 +
               (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
                C2162 * C4007 + C2157 * C4013) *
                   C5024 +
               (C3343 + C3342 + C3341) * C50940 +
               (C3340 + C3339 + C3338) * C5023) *
                  C50796 * C50696 * C967) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C391 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C392 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
             C2164 * C1715 + C2159 * C1723) *
                C5024 +
            (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
             C2164 * C1719 + C2159 * C1727) *
                C50834) *
               C50796 * C393) *
              C893 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C392 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C391 -
           ((C2164 * C4428 + C2159 * C4434 + C2163 * C4429 + C2158 * C4435 +
             C2162 * C4430 + C2157 * C4436) *
                C50834 +
            (C2164 * C4425 + C2159 * C4431 + C2163 * C4426 + C2158 * C4432 +
             C2162 * C4427 + C2157 * C4433) *
                C5024 +
            (C3519 + C3518 + C3517) * C50940 +
            (C3516 + C3515 + C3514) * C5023) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C893 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50732) *
              C895 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50732 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50696 * C893 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C5024 + C11006 * C50940 +
             C11005 * C5023) *
                C7777 +
            (C13146 + C13145 + C13134 + C13133) * C7776 +
            (C13144 + C13143 + C13128 + C13127) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
            C12970 * C50834) *
               C7775 +
           (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
              C50696 * C964 -
          (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
           (C12772 + C12771 + C12770 + C12769) * C7775) *
              C50696 * C965 +
          (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
           (C13754 + C13755 + C13756 + C13757) * C7777) *
              C50696 * C966 -
          (((C10625 * C11919 + C50630 * C11921) * C50834 +
            (C10625 * C11918 + C50630 * C11920) * C5024 + C11464 * C50940 +
            C11463 * C5023) *
               C7777 +
           (C13757 + C13756 + C13755 + C13754) * C7776 + C13759 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C391 -
           ((C13493 + C13494 + C13495 + C13496) * C7777 +
            (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C392 +
           ((C12972 * C5023 + C12971 * C50940 +
             (C10625 * C1717 + C50630 * C1725) * C5024 +
             (C10625 * C1721 + C50630 * C1729) * C50834) *
                C7775 +
            (C13906 + C13907 + C13922 + C13923) * C7776 +
            (C13912 + C13913 + C13924 + C13925) * C7777) *
               C393) *
              C893 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C11266 * C5023 + C11265 * C50940 + C11585 * C5024 +
             C11586 * C50834) *
                C7777) *
               C392 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C391 -
           (((C10625 * C12195 + C50630 * C12197) * C50834 +
             (C10625 * C12194 + C50630 * C12196) * C5024 + C11586 * C50940 +
             C11585 * C5023) *
                C7777 +
            (C13925 + C13924 + C13913 + C13912) * C7776 +
            (C13923 + C13922 + C13907 + C13906) * C7775) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50696 * C893 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50696 * C50732) *
              C895 +
          ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
            C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
            C18519 * C20895 + C18520 * C20891) *
               C50796 * C50696 * C50732 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50696 * C893) *
              C896 +
          (((C10625 * C124 + C50630 * C131) * C20892 +
            (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
            C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
            C21299 * C20895 + C21300 * C20891) *
               C50796 * C50696 * C893 -
           ((C10625 * C4428 + C50630 * C4434) * C20891 +
            (C10625 * C4425 + C50630 * C4431) * C20895 + C18676 * C20890 +
            C18675 * C20894 + C13140 * C20889 + C13139 * C20893 +
            C11002 * C20888 + C11001 * C20892) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10625 * C122 + C50630 * C129) * C20892 +
           (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
           C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
           C14821 * C20895 + C14822 * C20891) *
              C50796 * C50696 * C964 -
          (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
           C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
           C10758 * C20888 + C10757 * C20892) *
              C50796 * C50696 * C965 +
          (C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
           C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
           C13920 * C20895 + C13921 * C20891) *
              C50796 * C50696 * C966 -
          ((C10625 * C12195 + C50630 * C12197) * C20891 +
           (C10625 * C12194 + C50630 * C12196) * C20895 + C11586 * C20890 +
           C11585 * C20894 + C11265 * C20889 + C11266 * C20893 +
           C10762 * C20888 + C10761 * C20892) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C391 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C392 +
           (C12972 * C20892 + C12971 * C20888 + C14821 * C20893 +
            C14822 * C20889 + C20335 * C20894 + C20336 * C20890 +
            (C10625 * C17587 + C50630 * C17591) * C20895 +
            (C10625 * C17589 + C50630 * C17593) * C20891) *
               C50796 * C393) *
              C893 +
          ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
            C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
            C19441 * C20895 + C19442 * C20891) *
               C50796 * C392 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C391 -
           ((C10625 * C20327 + C50630 * C20329) * C20891 +
            (C10625 * C20326 + C50630 * C20328) * C20895 + C19442 * C20890 +
            C19441 * C20894 + C13919 * C20889 + C13918 * C20893 +
            C11582 * C20888 + C11581 * C20892) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C5023 +
              (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
              C12970 * C50834) *
                 C7775 +
             (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
                C50929 -
            ((C13493 + C13494 + C13495 + C13496) * C7777 +
             (C13497 + C13498 + C13499 + C13500) * C7776 +
             (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
              C12969 * C5023) *
                 C7775) *
                C50760) *
               C893 +
           (((C13500 + C13499 + C13498 + C13497) * C7775 +
             (C13496 + C13495 + C13494 + C13493) * C7776 +
             (C11266 * C5023 + C11265 * C50940 + C11585 * C5024 +
              C11586 * C50834) *
                 C7777) *
                C50760 -
            (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
             (C12772 + C12771 + C12770 + C12769) * C7775) *
                C50929) *
               C50732) *
              C50920 +
          ((((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
              C12976 * C50834) *
                 C7775 +
             (C13501 + C13502 + C13503 + C13504) * C7776 +
             (C13505 + C13506 + C13507 + C13508) * C7777) *
                C50760 -
            (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
             (C12974 * C50834 + C12973 * C5024 +
              (C10625 * C134 + C50630 * C144) * C50940 +
              (C10625 * C123 + C50630 * C130) * C5023) *
                 C7775) *
                C50929) *
               C893 +
           (((C12781 + C12782 + C12783 + C12784) * C7775 +
             (C12785 + C12786 + C12787 + C12788) * C7776 +
             (C12789 + C12790 + C12791 + C12792) * C7777) *
                C50929 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C5024 + C11276 * C50940 +
              C11275 * C5023) *
                 C7777 +
             (C13508 + C13507 + C13506 + C13505) * C7776 +
             (C13504 + C13503 + C13502 + C13501) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C5023 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50940 +
             (C5366 + C5367 + C5368) * C5024 +
             (C5369 + C5370 + C5371) * C50834) *
                C50796 * C50929 -
            ((C5372 + C5373 + C5374) * C50834 +
             (C5375 + C5376 + C5377) * C5024 +
             (C5371 + C5370 + C5369) * C50940 +
             (C5368 + C5367 + C5366) * C5023) *
                C50796 * C50760) *
               C893 +
           (((C3063 + C3062 + C3061) * C5023 +
             (C3060 + C3059 + C3058) * C50940 +
             (C3514 + C3515 + C3516) * C5024 +
             (C3517 + C3518 + C3519) * C50834) *
                C50796 * C50760 -
            ((C3058 + C3059 + C3060) * C50834 +
             (C3061 + C3062 + C3063) * C5024 +
             (C2365 + C2364 + C2363) * C50940 +
             (C2362 + C2361 + C2360) * C5023) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C5378 + C5379 + C5380) * C5023 +
             (C5381 + C5382 + C5383) * C50940 +
             (C5384 + C5385 + C5386) * C5024 +
             (C5387 + C5388 + C5389) * C50834) *
                C50796 * C50760 -
            ((C5383 + C5382 + C5381) * C50834 +
             (C5380 + C5379 + C5378) * C5024 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50940 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C5023) *
                C50796 * C50929) *
               C893 +
           (((C2372 + C2373 + C2374) * C5023 +
             (C2375 + C2376 + C2377) * C50940 +
             (C3064 + C3065 + C3066) * C5024 +
             (C3067 + C3068 + C3069) * C50834) *
                C50796 * C50929 -
            ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50834 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C5024 +
             (C3069 + C3068 + C3067) * C50940 +
             (C3066 + C3065 + C3064) * C5023) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C20892 +
             (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
             C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
             C14821 * C20895 + C14822 * C20891) *
                C50796 * C50929 -
            (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
             C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
             C12970 * C20888 + C12969 * C20892) *
                C50796 * C50760) *
               C893 +
           ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
             C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
             C19441 * C20895 + C19442 * C20891) *
                C50796 * C50760 -
            (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
             C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
             C10758 * C20888 + C10757 * C20892) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          (((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
             C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
             C21097 * C20895 + C21098 * C20891) *
                C50796 * C50760 -
            (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
             C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
             (C10625 * C134 + C50630 * C144) * C20888 +
             (C10625 * C123 + C50630 * C130) * C20892) *
                C50796 * C50929) *
               C893 +
           ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
             C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
             C18519 * C20895 + C18520 * C20891) *
                C50796 * C50929 -
            ((C10625 * C16693 + C50630 * C16695) * C20891 +
             (C10625 * C16692 + C50630 * C16694) * C20895 + C18520 * C20890 +
             C18519 * C20894 + C12978 * C20889 + C12977 * C20893 +
             C11272 * C20888 + C11271 * C20892) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C5366 + C5367 + C5368) * C5024 + (C5369 + C5370 + C5371) * C50834) *
              C50796 * C50696 * C964 -
          ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
           (C2365 + C2364 + C2363) * C50940 + (C2362 + C2361 + C2360) * C5023) *
              C50796 * C50696 * C965 +
          ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
           (C4030 + C4031 + C4032) * C5024 + (C4033 + C4034 + C4035) * C50834) *
              C50796 * C50696 * C966 -
          ((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
            C2162 * C4010 + C2157 * C4016) *
               C50834 +
           (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
            C2162 * C4007 + C2157 * C4013) *
               C5024 +
           (C3343 + C3342 + C3341) * C50940 + (C3340 + C3339 + C3338) * C5023) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C893 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50732 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C50696 * C893 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50834 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C5024 +
            (C2693 + C2692 + C2691) * C50940 +
            (C2690 + C2689 + C2688) * C5023) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C893 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50732) *
              C895 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50732 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50696 * C893 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C5024 + C11006 * C50940 +
             C11005 * C5023) *
                C7777 +
            (C13146 + C13145 + C13134 + C13133) * C7776 +
            (C13144 + C13143 + C13128 + C13127) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
            C12970 * C50834) *
               C7775 +
           (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
              C50696 * C964 -
          (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
           (C12772 + C12771 + C12770 + C12769) * C7775) *
              C50696 * C965 +
          (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
           (C13754 + C13755 + C13756 + C13757) * C7777) *
              C50696 * C966 -
          (((C10625 * C11919 + C50630 * C11921) * C50834 +
            (C10625 * C11918 + C50630 * C11920) * C5024 + C11464 * C50940 +
            C11463 * C5023) *
               C7777 +
           (C13757 + C13756 + C13755 + C13754) * C7776 + C13759 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50696 * C893 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50696 * C50732) *
              C895 +
          ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
            C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
            C18519 * C20895 + C18520 * C20891) *
               C50796 * C50696 * C50732 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50696 * C893) *
              C896 +
          (((C10625 * C124 + C50630 * C131) * C20892 +
            (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
            C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
            C21299 * C20895 + C21300 * C20891) *
               C50796 * C50696 * C893 -
           ((C10625 * C4428 + C50630 * C4434) * C20891 +
            (C10625 * C4425 + C50630 * C4431) * C20895 + C18676 * C20890 +
            C18675 * C20894 + C13140 * C20889 + C13139 * C20893 +
            C11002 * C20888 + C11001 * C20892) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10625 * C122 + C50630 * C129) * C20892 +
           (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
           C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
           C14821 * C20895 + C14822 * C20891) *
              C50796 * C50696 * C964 -
          (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
           C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
           C10758 * C20888 + C10757 * C20892) *
              C50796 * C50696 * C965 +
          (C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
           C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
           C13920 * C20895 + C13921 * C20891) *
              C50796 * C50696 * C966 -
          ((C10625 * C12195 + C50630 * C12197) * C20891 +
           (C10625 * C12194 + C50630 * C12196) * C20895 + C11586 * C20890 +
           C11585 * C20894 + C11265 * C20889 + C11266 * C20893 +
           C10762 * C20888 + C10761 * C20892) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C5023 +
              (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
              C12970 * C50834) *
                 C7775 +
             (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
                C1544 -
            (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
             (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
              C12969 * C5023) *
                 C7775) *
                C50760) *
               C50928 +
           (((C13500 + C13499 + C13498 + C13497) * C7775 +
             (C13496 + C13495 + C13494 + C13493) * C7776 +
             (C14413 + C14414 + C14415 + C14416) * C7777) *
                C50760 -
            (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
             (C12772 + C12771 + C12770 + C12769) * C7775) *
                C1544) *
               C50732) *
              C50920 +
          ((((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
              C12976 * C50834) *
                 C7775 +
             (C13501 + C13502 + C13503 + C13504) * C7776 +
             (C13505 + C13506 + C13507 + C13508) * C7777) *
                C50760 -
            (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
             (C12974 * C50834 + C12973 * C5024 +
              (C10625 * C134 + C50630 * C144) * C50940 +
              (C10625 * C123 + C50630 * C130) * C5023) *
                 C7775) *
                C1544) *
               C50928 +
           (((C12781 + C12782 + C12783 + C12784) * C7775 +
             (C12785 + C12786 + C12787 + C12788) * C7776 +
             (C12789 + C12790 + C12791 + C12792) * C7777) *
                C1544 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C5024 + C11276 * C50940 +
              C11275 * C5023) *
                 C7777 +
             (C13508 + C13507 + C13506 + C13505) * C7776 +
             (C13504 + C13503 + C13502 + C13501) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C5023 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50940 +
             (C5366 + C5367 + C5368) * C5024 +
             (C5369 + C5370 + C5371) * C50834) *
                C50796 * C1544 -
            ((C5372 + C5373 + C5374) * C50834 +
             (C5375 + C5376 + C5377) * C5024 +
             (C5371 + C5370 + C5369) * C50940 +
             (C5368 + C5367 + C5366) * C5023) *
                C50796 * C50760) *
               C50928 +
           (((C3063 + C3062 + C3061) * C5023 +
             (C3060 + C3059 + C3058) * C50940 +
             (C3514 + C3515 + C3516) * C5024 +
             (C3517 + C3518 + C3519) * C50834) *
                C50796 * C50760 -
            ((C3058 + C3059 + C3060) * C50834 +
             (C3061 + C3062 + C3063) * C5024 +
             (C2365 + C2364 + C2363) * C50940 +
             (C2362 + C2361 + C2360) * C5023) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          ((((C5378 + C5379 + C5380) * C5023 +
             (C5381 + C5382 + C5383) * C50940 +
             (C5384 + C5385 + C5386) * C5024 +
             (C5387 + C5388 + C5389) * C50834) *
                C50796 * C50760 -
            ((C5383 + C5382 + C5381) * C50834 +
             (C5380 + C5379 + C5378) * C5024 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50940 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C5023) *
                C50796 * C1544) *
               C50928 +
           (((C2372 + C2373 + C2374) * C5023 +
             (C2375 + C2376 + C2377) * C50940 +
             (C3064 + C3065 + C3066) * C5024 +
             (C3067 + C3068 + C3069) * C50834) *
                C50796 * C1544 -
            ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50834 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C5024 +
             (C3069 + C3068 + C3067) * C50940 +
             (C3066 + C3065 + C3064) * C5023) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C20892 +
             (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
             C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
             C14821 * C20895 + C14822 * C20891) *
                C50796 * C1544 -
            (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
             C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
             C12970 * C20888 + C12969 * C20892) *
                C50796 * C50760) *
               C50928 +
           ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
             C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
             C19441 * C20895 + C19442 * C20891) *
                C50796 * C50760 -
            (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
             C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
             C10758 * C20888 + C10757 * C20892) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          (((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
             C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
             C21097 * C20895 + C21098 * C20891) *
                C50796 * C50760 -
            (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
             C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
             (C10625 * C134 + C50630 * C144) * C20888 +
             (C10625 * C123 + C50630 * C130) * C20892) *
                C50796 * C1544) *
               C50928 +
           ((C10765 * C20892 + C10766 * C20888 + C11271 * C20893 +
             C11272 * C20889 + C12977 * C20894 + C12978 * C20890 +
             C18519 * C20895 + C18520 * C20891) *
                C50796 * C1544 -
            ((C10625 * C16693 + C50630 * C16695) * C20891 +
             (C10625 * C16692 + C50630 * C16694) * C20895 + C18520 * C20890 +
             C18519 * C20894 + C12978 * C20889 + C12977 * C20893 +
             C11272 * C20888 + C11271 * C20892) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50974 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50975 +
           ((C12972 * C5023 + C12971 * C50940 + C14821 * C5024 +
             C14822 * C50834) *
                C7775 +
            (C13906 + C13907 + C13922 + C13923) * C7776 +
            (C13912 + C13913 + C13924 + C13925) * C7777) *
               C1960) *
              C50928 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50975 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50974 -
           (((C10625 * C12195 + C50630 * C12197) * C50834 +
             (C10625 * C12194 + C50630 * C12196) * C5024 + C11586 * C50940 +
             C11585 * C5023) *
                C7777 +
            (C13925 + C13924 + C13913 + C13912) * C7776 +
            (C13923 + C13922 + C13907 + C13906) * C7775) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50974 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50975 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C7184 + C7185 + C7186) * C5024 +
            (C7187 + C7188 + C7189) * C50834) *
               C50796 * C1960) *
              C50928 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50975 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50974 -
           ((C2164 * C4428 + C2159 * C4434 + C2163 * C4429 + C2158 * C4435 +
             C2162 * C4430 + C2157 * C4436) *
                C50834 +
            (C2164 * C4425 + C2159 * C4431 + C2163 * C4426 + C2158 * C4432 +
             C2162 * C4427 + C2157 * C4433) *
                C5024 +
            (C3519 + C3518 + C3517) * C50940 +
            (C3516 + C3515 + C3514) * C5023) *
               C50796 * C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50974 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50975 +
           (C12972 * C20892 + C12971 * C20888 + C14821 * C20893 +
            C14822 * C20889 + C20335 * C20894 + C20336 * C20890 +
            C22289 * C20895 + C22290 * C20891) *
               C50796 * C1960) *
              C50928 +
          ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
            C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
            C19441 * C20895 + C19442 * C20891) *
               C50796 * C50975 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C50974 -
           ((C10625 * C20327 + C50630 * C20329) * C20891 +
            (C10625 * C20326 + C50630 * C20328) * C20895 + C19442 * C20890 +
            C19441 * C20894 + C13919 * C20889 + C13918 * C20893 +
            C11582 * C20888 + C11581 * C20892) *
               C50796 * C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C5023 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50940 +
                (C5366 + C5367 + C5368) * C5024 +
                (C5369 + C5370 + C5371) * C50834) *
                   C50796 * C1544 -
               ((C5372 + C5373 + C5374) * C50834 +
                (C5375 + C5376 + C5377) * C5024 +
                (C5371 + C5370 + C5369) * C50940 +
                (C5368 + C5367 + C5366) * C5023) *
                   C50796 * C50760) *
                  C50680 * C895 +
              (((C5378 + C5379 + C5380) * C5023 +
                (C5381 + C5382 + C5383) * C50940 +
                (C5384 + C5385 + C5386) * C5024 +
                (C5387 + C5388 + C5389) * C50834) *
                   C50796 * C50760 -
               ((C5383 + C5382 + C5381) * C50834 +
                (C5380 + C5379 + C5378) * C5024 +
                (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
                 C2162 * C134 + C2157 * C144) *
                    C50940 +
                (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
                 C2162 * C123 + C2157 * C130) *
                    C5023) *
                   C50796 * C1544) *
                  C50680 * C896 +
              (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
                 C2164 * C126 + C2159 * C138) *
                    C5023 +
                (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
                 C2164 * C137 + C2159 * C147) *
                    C50940 +
                (C5694 + C5695 + C5696) * C5024 +
                (C5697 + C5698 + C5699) * C50834) *
                   C50796 * C1544 -
               ((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
                 C2162 * C418 + C2157 * C430) *
                    C50834 +
                (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
                 C2162 * C400 + C2157 * C414) *
                    C5024 +
                (C5699 + C5698 + C5697) * C50940 +
                (C5696 + C5695 + C5694) * C5023) *
                   C50796 * C50760) *
                  C50680 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
                 C2164 * C124 + C2159 * C131) *
                    C5023 +
                (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
                 C2164 * C135 + C2159 * C145) *
                    C50940 +
                (C5366 + C5367 + C5368) * C5024 +
                (C5369 + C5370 + C5371) * C50834) *
                   C50796 * C1544 -
               ((C5372 + C5373 + C5374) * C50834 +
                (C5375 + C5376 + C5377) * C5024 +
                (C5371 + C5370 + C5369) * C50940 +
                (C5368 + C5367 + C5366) * C5023) *
                   C50796 * C50760) *
                  C248 +
              (((C3063 + C3062 + C3061) * C5023 +
                (C3060 + C3059 + C3058) * C50940 +
                (C3514 + C3515 + C3516) * C5024 +
                (C3517 + C3518 + C3519) * C50834) *
                   C50796 * C50760 -
               ((C3058 + C3059 + C3060) * C50834 +
                (C3061 + C3062 + C3063) * C5024 +
                (C2365 + C2364 + C2363) * C50940 +
                (C2362 + C2361 + C2360) * C5023) *
                   C50796 * C1544) *
                  C249 +
              (((C2371 + C2370 + C2369) * C5023 +
                (C2368 + C2367 + C2366) * C50940 +
                (C4030 + C4031 + C4032) * C5024 +
                (C4033 + C4034 + C4035) * C50834) *
                   C50796 * C1544 -
               ((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
                 C2162 * C3494 + C2157 * C3500) *
                    C50834 +
                (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
                 C2162 * C3491 + C2157 * C3497) *
                    C5024 +
                (C4035 + C4034 + C4033) * C50940 +
                (C4032 + C4031 + C4030) * C5023) *
                   C50796 * C50760) *
                  C250) *
             C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C5366 + C5367 + C5368) * C5024 + (C5369 + C5370 + C5371) * C50834) *
              C50796 * C1710 -
          ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
           (C5371 + C5370 + C5369) * C50940 + (C5368 + C5367 + C5366) * C5023) *
              C50796 * C1711 +
          ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
           (C7184 + C7185 + C7186) * C5024 + (C7187 + C7188 + C7189) * C50834) *
              C50796 * C1712 -
          ((C2164 * C7162 + C2159 * C7168 + C2163 * C7163 + C2158 * C7169 +
            C2162 * C7164 + C2157 * C7170) *
               C50834 +
           (C2164 * C7159 + C2159 * C7165 + C2163 * C7160 + C2158 * C7166 +
            C2162 * C7161 + C2157 * C7167) *
               C5024 +
           (C7189 + C7188 + C7187) * C50940 + (C7186 + C7185 + C7184) * C5023) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C13501 + C13502 + C13503 + C13504) * C7776 +
            (C13505 + C13506 + C13507 + C13508) * C7777) *
               C50760 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C1544 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C5024 + C13142 * C50940 +
             C13141 * C5023) *
                C7777 +
            ((C10625 * C1088 + C50630 * C1096) * C50834 +
             (C10625 * C1084 + C50630 * C1092) * C5024 + C13140 * C50940 +
             C13139 * C5023) *
                C7776 +
            ((C10625 * C418 + C50630 * C430) * C50834 +
             (C10625 * C400 + C50630 * C414) * C5024 + C13298 * C50940 +
             C13297 * C5023) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C248 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50760 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C1544) *
              C249 +
          ((C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C1544 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C5024 + C11930 * C50940 +
             C11929 * C5023) *
                C7777 +
            (C14416 + C14415 + C14414 + C14413) * C7776 + C14418 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
            C12970 * C50834) *
               C7775 +
           (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
              C1710 -
          (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
           (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
            C12969 * C5023) *
               C7775) *
              C1711 +
          ((C12972 * C5023 + C12971 * C50940 + C14821 * C5024 +
            C14822 * C50834) *
               C7775 +
           (C13906 + C13907 + C13922 + C13923) * C7776 +
           (C13912 + C13913 + C13924 + C13925) * C7777) *
              C1712 -
          (((C10625 * C14810 + C50630 * C14814) * C50834 +
            (C10625 * C14808 + C50630 * C14811) * C5024 + C13921 * C50940 +
            C13920 * C5023) *
               C7777 +
           ((C10625 * C14812 + C50630 * C14815) * C50834 +
            (C10625 * C14809 + C50630 * C14813) * C5024 + C13919 * C50940 +
            C13918 * C5023) *
               C7776 +
           ((C10625 * C7164 + C50630 * C7170) * C50834 +
            (C10625 * C7161 + C50630 * C7167) * C5024 + C14822 * C50940 +
            C14821 * C5023) *
               C7775) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C1544 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50760) *
              C50680 * C895 +
          ((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
            C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
            C21097 * C20895 + C21098 * C20891) *
               C50796 * C50760 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C10625 * C124 + C50630 * C131) * C20892 +
            (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
            C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
            C21299 * C20895 + C21300 * C20891) *
               C50796 * C1544 -
           ((C10625 * C7162 + C50630 * C7168) * C20891 +
            (C10625 * C7159 + C50630 * C7165) * C20895 + C21300 * C20890 +
            C21299 * C20894 + C18830 * C20889 + C18829 * C20893 +
            C13298 * C20888 + C13297 * C20892) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C1544 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50760) *
              C248 +
          ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
            C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
            C19441 * C20895 + C19442 * C20891) *
               C50796 * C50760 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C1544) *
              C249 +
          ((C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
            C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
            C13920 * C20895 + C13921 * C20891) *
               C50796 * C1544 -
           ((C10625 * C14810 + C50630 * C14814) * C20891 +
            (C10625 * C14808 + C50630 * C14811) * C20895 + C13921 * C20890 +
            C13920 * C20894 + C11584 * C20889 + C11583 * C20893 +
            C11267 * C20888 + C11268 * C20892) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10625 * C122 + C50630 * C129) * C20892 +
           (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
           C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
           C14821 * C20895 + C14822 * C20891) *
              C50796 * C1710 -
          (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
           C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
           C12970 * C20888 + C12969 * C20892) *
              C50796 * C1711 +
          (C12972 * C20892 + C12971 * C20888 + C14821 * C20893 +
           C14822 * C20889 + C20335 * C20894 + C20336 * C20890 +
           C22289 * C20895 + C22290 * C20891) *
              C50796 * C1712 -
          ((C10625 * C22281 + C50630 * C22283) * C20891 +
           (C10625 * C22280 + C50630 * C22282) * C20895 + C22290 * C20890 +
           C22289 * C20894 + C20336 * C20889 + C20335 * C20893 +
           C14822 * C20888 + C14821 * C20892) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50974 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50975 +
           ((C12972 * C5023 + C12971 * C50940 + C14821 * C5024 +
             C14822 * C50834) *
                C7775 +
            (C13906 + C13907 + C13922 + C13923) * C7776 +
            (C13912 + C13913 + C13924 + C13925) * C7777) *
               C1960) *
              C50680 * C50920 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C13501 + C13502 + C13503 + C13504) * C7776 +
            (C13505 + C13506 + C13507 + C13508) * C7777) *
               C50975 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50974 -
           (((C10625 * C10062 + C50630 * C10066) * C50834 +
             (C10625 * C10060 + C50630 * C10064) * C5024 + C12980 * C50940 +
             C12979 * C5023) *
                C7777 +
            ((C10625 * C4429 + C50630 * C4435) * C50834 +
             (C10625 * C4426 + C50630 * C4432) * C5024 + C12978 * C50940 +
             C12977 * C5023) *
                C7776 +
            ((C10625 * C1720 + C50630 * C1728) * C50834 +
             (C10625 * C1716 + C50630 * C1724) * C5024 + C12976 * C50940 +
             C12975 * C5023) *
                C7775) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50974 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50975 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C7184 + C7185 + C7186) * C5024 +
            (C7187 + C7188 + C7189) * C50834) *
               C50796 * C1960) *
              C50680 * C50920 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50975 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50974 -
           ((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
             C2162 * C1720 + C2157 * C1728) *
                C50834 +
            (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
             C2162 * C1716 + C2157 * C1724) *
                C5024 +
            (C5389 + C5388 + C5387) * C50940 +
            (C5386 + C5385 + C5384) * C5023) *
               C50796 * C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C50974 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50975 +
           (C12972 * C20892 + C12971 * C20888 + C14821 * C20893 +
            C14822 * C20889 + C20335 * C20894 + C20336 * C20890 +
            C22289 * C20895 + C22290 * C20891) *
               C50796 * C1960) *
              C50680 * C50920 +
          ((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
            C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
            C21097 * C20895 + C21098 * C20891) *
               C50796 * C50975 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C50974 -
           ((C10625 * C17588 + C50630 * C17592) * C20891 +
            (C10625 * C17586 + C50630 * C17590) * C20895 + C21098 * C20890 +
            C21097 * C20894 + C18518 * C20889 + C18517 * C20893 +
            C12976 * C20888 + C12975 * C20892) *
               C50796 * C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C1544 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C248 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50760 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C1544) *
              C249 +
          (((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C1544 -
           ((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
             C2162 * C3494 + C2157 * C3500) *
                C50834 +
            (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
             C2162 * C3491 + C2157 * C3497) *
                C5024 +
            (C4035 + C4034 + C4033) * C50940 +
            (C4032 + C4031 + C4030) * C5023) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C1544 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50760 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C1544 -
           ((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
             C2162 * C418 + C2157 * C430) *
                C50834 +
            (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
             C2162 * C400 + C2157 * C414) *
                C5024 +
            (C5699 + C5698 + C5697) * C50940 +
            (C5696 + C5695 + C5694) * C5023) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C13501 + C13502 + C13503 + C13504) * C7776 +
            (C13505 + C13506 + C13507 + C13508) * C7777) *
               C50760 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C1544 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C5024 + C13142 * C50940 +
             C13141 * C5023) *
                C7777 +
            ((C10625 * C1088 + C50630 * C1096) * C50834 +
             (C10625 * C1084 + C50630 * C1092) * C5024 + C13140 * C50940 +
             C13139 * C5023) *
                C7776 +
            ((C10625 * C418 + C50630 * C430) * C50834 +
             (C10625 * C400 + C50630 * C414) * C5024 + C13298 * C50940 +
             C13297 * C5023) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C248 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50760 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C1544) *
              C249 +
          ((C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C1544 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C5024 + C11930 * C50940 +
             C11929 * C5023) *
                C7777 +
            (C14416 + C14415 + C14414 + C14413) * C7776 + C14418 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C1544 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50760) *
              C50680 * C895 +
          ((C12973 * C20892 + C12974 * C20888 + C12975 * C20893 +
            C12976 * C20889 + C18517 * C20894 + C18518 * C20890 +
            C21097 * C20895 + C21098 * C20891) *
               C50796 * C50760 -
           (C18518 * C20891 + C18517 * C20895 + C12976 * C20890 +
            C12975 * C20894 + C12974 * C20889 + C12973 * C20893 +
            (C10625 * C134 + C50630 * C144) * C20888 +
            (C10625 * C123 + C50630 * C130) * C20892) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C10625 * C124 + C50630 * C131) * C20892 +
            (C10625 * C135 + C50630 * C145) * C20888 + C13297 * C20893 +
            C13298 * C20889 + C18829 * C20894 + C18830 * C20890 +
            C21299 * C20895 + C21300 * C20891) *
               C50796 * C1544 -
           ((C10625 * C7162 + C50630 * C7168) * C20891 +
            (C10625 * C7159 + C50630 * C7165) * C20895 + C21300 * C20890 +
            C21299 * C20894 + C18830 * C20889 + C18829 * C20893 +
            C13298 * C20888 + C13297 * C20892) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C20892 +
            (C10625 * C133 + C50630 * C143) * C20888 + C12969 * C20893 +
            C12970 * C20889 + C12972 * C20894 + C12971 * C20890 +
            C14821 * C20895 + C14822 * C20891) *
               C50796 * C1544 -
           (C20336 * C20891 + C20335 * C20895 + C14822 * C20890 +
            C14821 * C20894 + C12971 * C20889 + C12972 * C20893 +
            C12970 * C20888 + C12969 * C20892) *
               C50796 * C50760) *
              C248 +
          ((C11270 * C20892 + C11269 * C20888 + C11581 * C20893 +
            C11582 * C20889 + C13918 * C20894 + C13919 * C20890 +
            C19441 * C20895 + C19442 * C20891) *
               C50796 * C50760 -
           (C13919 * C20891 + C13918 * C20895 + C11582 * C20890 +
            C11581 * C20894 + C11269 * C20889 + C11270 * C20893 +
            C10758 * C20888 + C10757 * C20892) *
               C50796 * C1544) *
              C249 +
          ((C10759 * C20892 + C10760 * C20888 + C11268 * C20893 +
            C11267 * C20889 + C11583 * C20894 + C11584 * C20890 +
            C13920 * C20895 + C13921 * C20891) *
               C50796 * C1544 -
           ((C10625 * C14810 + C50630 * C14814) * C20891 +
            (C10625 * C14808 + C50630 * C14811) * C20895 + C13921 * C20890 +
            C13920 * C20894 + C11584 * C20889 + C11583 * C20893 +
            C11267 * C20888 + C11268 * C20892) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50696 * C50928 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50696 * C50732) *
                       C50970 +
                   (((C22929 + C22930 + C22931) * C31993 +
                     (C22932 + C22933 + C22934) * C31991 +
                     (C23621 + C23622 + C23623) * C31994 +
                     (C23624 + C23625 + C23626) * C50834) *
                        C50796 * C50696 * C50732 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50696 * C50928) *
                       C50971 +
                   (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C31993 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C31991 +
                     (C22719 * C395 + C50969 * C409 + C22720 * C394 +
                      C50953 * C408 + C22721 * C402 + C22716 * C420) *
                         C31994 +
                     (C22719 * C405 + C50969 * C425 + C22720 * C404 +
                      C50953 * C424 + C22721 * C421 + C22716 * C432) *
                         C50834) *
                        C50796 * C50696 * C50928 -
                    ((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                      C50953 * C793 + C22719 * C786 + C50969 * C792) *
                         C50834 +
                     (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                      C50953 * C783 + C22719 * C777 + C50969 * C782) *
                         C31994 +
                     (C23250 + C23249 + C23248) * C31991 +
                     (C23247 + C23246 + C23245) * C31993) *
                        C50796 * C50696 * C50732) *
                       C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                       C50953 * C130 + C22721 * C124 + C22716 * C131) *
                          C31993 +
                      (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                       C50953 * C144 + C22721 * C135 + C22716 * C145) *
                          C31991 +
                      (C32336 + C32337 + C32338) * C31994 +
                      (C32339 + C32340 + C32341) * C50834) *
                         C50796 * C50929 -
                     ((C32342 + C32343 + C32344) * C50834 +
                      (C32345 + C32346 + C32347) * C31994 +
                      (C32341 + C32340 + C32339) * C31991 +
                      (C32338 + C32337 + C32336) * C31993) *
                         C50796 * C50760) *
                        C50928 +
                    (((C23620 + C23619 + C23618) * C31993 +
                      (C23617 + C23616 + C23615) * C31991 +
                      (C24047 + C24048 + C24049) * C31994 +
                      (C24050 + C24051 + C24052) * C50834) *
                         C50796 * C50760 -
                     ((C23615 + C23616 + C23617) * C50834 +
                      (C23618 + C23619 + C23620) * C31994 +
                      (C22922 + C22921 + C22920) * C31991 +
                      (C22919 + C22918 + C22917) * C31993) *
                         C50796 * C50929) *
                        C50732) *
                       C251 +
                   ((((C32348 + C32349 + C32350) * C31993 +
                      (C32351 + C32352 + C32353) * C31991 +
                      (C32354 + C32355 + C32356) * C31994 +
                      (C32357 + C32358 + C32359) * C50834) *
                         C50796 * C50760 -
                     ((C32353 + C32352 + C32351) * C50834 +
                      (C32350 + C32349 + C32348) * C31994 +
                      (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50953 * C145 + C22719 * C134 + C50969 * C144) *
                          C31991 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50953 * C131 + C22719 * C123 + C50969 * C130) *
                          C31993) *
                         C50796 * C50929) *
                        C50928 +
                    (((C22929 + C22930 + C22931) * C31993 +
                      (C22932 + C22933 + C22934) * C31991 +
                      (C23621 + C23622 + C23623) * C31994 +
                      (C23624 + C23625 + C23626) * C50834) *
                         C50796 * C50929 -
                     ((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                       C50953 * C1096 + C22719 * C1089 + C50969 * C1097) *
                          C50834 +
                      (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                       C50953 * C1092 + C22719 * C1085 + C50969 * C1093) *
                          C31994 +
                      (C23626 + C23625 + C23624) * C31991 +
                      (C23623 + C23622 + C23621) * C31993) *
                         C50796 * C50760) *
                        C50732) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[137] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C22719 * C397 + C50969 * C411 + C22720 * C396 +
                      C50953 * C410 + C22721 * C395 + C22716 * C409) *
                         C31994 +
                     (C22719 * C407 + C50969 * C427 + C22720 * C406 +
                      C50953 * C426 + C22721 * C405 + C22716 * C425) *
                         C50834) *
                        C50796 * C50696 * C248 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50696 * C249 +
                    ((C22928 + C22927 + C22926) * C31993 +
                     (C22925 + C22924 + C22923) * C31991 +
                     (C24551 + C24552 + C24553) * C31994 +
                     (C24554 + C24555 + C24556) * C50834) *
                        C50796 * C50696 * C250) *
                       C251 +
                   (((C22929 + C22930 + C22931) * C31993 +
                     (C22932 + C22933 + C22934) * C31991 +
                     (C23621 + C23622 + C23623) * C31994 +
                     (C23624 + C23625 + C23626) * C50834) *
                        C50796 * C50696 * C249 -
                    ((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                      C50953 * C425 + C22719 * C406 + C50969 * C426) *
                         C50834 +
                     (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                      C50953 * C409 + C22719 * C396 + C50969 * C410) *
                         C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50696 * C248 -
                    ((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                      C50953 * C1443 + C22719 * C1436 + C50969 * C1444) *
                         C50834 +
                     (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                      C50953 * C1439 + C22719 * C1432 + C50969 * C1440) *
                         C31994 +
                     (C22940 + C22939 + C22938) * C31991 +
                     (C22937 + C22936 + C22935) * C31993) *
                        C50796 * C50696 * C250) *
                       C50667)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C31993 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C31991 +
                    (C22719 * C397 + C50969 * C411 + C22720 * C396 +
                     C50953 * C410 + C22721 * C395 + C22716 * C409) *
                        C31994 +
                    (C22719 * C407 + C50969 * C427 + C22720 * C406 +
                     C50953 * C426 + C22721 * C405 + C22716 * C425) *
                        C50834) *
                       C50796 * C50696 * C50680 * C113 -
                   ((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                     C50953 * C425 + C22719 * C406 + C50969 * C426) *
                        C50834 +
                    (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                     C50953 * C409 + C22719 * C396 + C50969 * C410) *
                        C31994 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C31991 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C31993) *
                       C50796 * C50696 * C50680 * C114 +
                   ((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                     C50953 * C132 + C22721 * C126 + C22716 * C138) *
                        C31993 +
                    (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                     C50953 * C146 + C22721 * C137 + C22716 * C147) *
                        C31991 +
                    (C22719 * C395 + C50969 * C409 + C22720 * C394 +
                     C50953 * C408 + C22721 * C402 + C22716 * C420) *
                        C31994 +
                    (C22719 * C405 + C50969 * C425 + C22720 * C404 +
                     C50953 * C424 + C22721 * C421 + C22716 * C432) *
                        C50834) *
                       C50796 * C50696 * C50680 * C115 -
                   ((C22721 * C642 + C22716 * C644 + C22720 * C421 +
                     C50953 * C432 + C22719 * C404 + C50969 * C424) *
                        C50834 +
                    (C22721 * C641 + C22716 * C643 + C22720 * C402 +
                     C50953 * C420 + C22719 * C394 + C50969 * C408) *
                        C31994 +
                    (C22721 * C140 + C22716 * C148 + C22720 * C137 +
                     C50953 * C147 + C22719 * C136 + C50969 * C146) *
                        C31991 +
                    (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                     C50953 * C138 + C22719 * C125 + C50969 * C132) *
                        C31993) *
                       C50796 * C50696 * C50680 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C391 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C392 +
                    ((C32347 + C32346 + C32345) * C31993 +
                     (C32344 + C32343 + C32342) * C31991 +
                     (C22719 * C1717 + C50969 * C1725 + C22720 * C1716 +
                      C50953 * C1724 + C22721 * C1715 + C22716 * C1723) *
                         C31994 +
                     (C22719 * C1721 + C50969 * C1729 + C22720 * C1720 +
                      C50953 * C1728 + C22721 * C1719 + C22716 * C1727) *
                         C50834) *
                        C50796 * C393) *
                       C50680 * C251 +
                   (((C32348 + C32349 + C32350) * C31993 +
                     (C32351 + C32352 + C32353) * C31991 +
                     (C32354 + C32355 + C32356) * C31994 +
                     (C32357 + C32358 + C32359) * C50834) *
                        C50796 * C392 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C391 -
                    ((C22721 * C1718 + C22716 * C1726 + C22720 * C1719 +
                      C50953 * C1727 + C22719 * C1720 + C50969 * C1728) *
                         C50834 +
                     (C22721 * C1714 + C22716 * C1722 + C22720 * C1715 +
                      C50953 * C1723 + C22719 * C1716 + C50969 * C1724) *
                         C31994 +
                     (C32359 + C32358 + C32357) * C31991 +
                     (C32356 + C32355 + C32354) * C31993) *
                        C50796 * C393) *
                       C50680 * C50667)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50929 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50760) *
                       C50680 * C50970 +
                   (((C32348 + C32349 + C32350) * C31993 +
                     (C32351 + C32352 + C32353) * C31991 +
                     (C32354 + C32355 + C32356) * C31994 +
                     (C32357 + C32358 + C32359) * C50834) *
                        C50796 * C50760 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50929) *
                       C50680 * C50971 +
                   (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C31993 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C31991 +
                     (C32664 + C32665 + C32666) * C31994 +
                     (C32667 + C32668 + C32669) * C50834) *
                        C50796 * C50929 -
                    ((C22721 * C422 + C22716 * C433 + C22720 * C419 +
                      C50953 * C431 + C22719 * C418 + C50969 * C430) *
                         C50834 +
                     (C22721 * C403 + C22716 * C423 + C22720 * C401 +
                      C50953 * C415 + C22719 * C400 + C50969 * C414) *
                         C31994 +
                     (C32669 + C32668 + C32667) * C31991 +
                     (C32666 + C32665 + C32664) * C31993) *
                        C50796 * C50760) *
                       C50680 * C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C31993 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C31991 +
                    (C22719 * C397 + C50969 * C411 + C22720 * C396 +
                     C50953 * C410 + C22721 * C395 + C22716 * C409) *
                        C31994 +
                    (C22719 * C407 + C50969 * C427 + C22720 * C406 +
                     C50953 * C426 + C22721 * C405 + C22716 * C425) *
                        C50834) *
                       C50796 * C50696 * C50680 * C113 -
                   ((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                     C50953 * C425 + C22719 * C406 + C50969 * C426) *
                        C50834 +
                    (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                     C50953 * C409 + C22719 * C396 + C50969 * C410) *
                        C31994 +
                    (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                     C50953 * C145 + C22719 * C134 + C50969 * C144) *
                        C31991 +
                    (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                     C50953 * C131 + C22719 * C123 + C50969 * C130) *
                        C31993) *
                       C50796 * C50696 * C50680 * C114 +
                   ((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                     C50953 * C132 + C22721 * C126 + C22716 * C138) *
                        C31993 +
                    (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                     C50953 * C146 + C22721 * C137 + C22716 * C147) *
                        C31991 +
                    (C22719 * C395 + C50969 * C409 + C22720 * C394 +
                     C50953 * C408 + C22721 * C402 + C22716 * C420) *
                        C31994 +
                    (C22719 * C405 + C50969 * C425 + C22720 * C404 +
                     C50953 * C424 + C22721 * C421 + C22716 * C432) *
                        C50834) *
                       C50796 * C50696 * C50680 * C115 -
                   ((C22721 * C642 + C22716 * C644 + C22720 * C421 +
                     C50953 * C432 + C22719 * C404 + C50969 * C424) *
                        C50834 +
                    (C22721 * C641 + C22716 * C643 + C22720 * C402 +
                     C50953 * C420 + C22719 * C394 + C50969 * C408) *
                        C31994 +
                    (C22721 * C140 + C22716 * C148 + C22720 * C137 +
                     C50953 * C147 + C22719 * C136 + C50969 * C146) *
                        C31991 +
                    (C22721 * C127 + C22716 * C139 + C22720 * C126 +
                     C50953 * C138 + C22719 * C125 + C50969 * C132) *
                        C31993) *
                       C50796 * C50696 * C50680 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C22719 * C397 + C50969 * C411 + C22720 * C396 +
                      C50953 * C410 + C22721 * C395 + C22716 * C409) *
                         C31994 +
                     (C22719 * C407 + C50969 * C427 + C22720 * C406 +
                      C50953 * C426 + C22721 * C405 + C22716 * C425) *
                         C50834) *
                        C50796 * C50696 * C248 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50696 * C249 +
                    ((C22928 + C22927 + C22926) * C31993 +
                     (C22925 + C22924 + C22923) * C31991 +
                     (C24551 + C24552 + C24553) * C31994 +
                     (C24554 + C24555 + C24556) * C50834) *
                        C50796 * C50696 * C250) *
                       C251 +
                   (((C22929 + C22930 + C22931) * C31993 +
                     (C22932 + C22933 + C22934) * C31991 +
                     (C23621 + C23622 + C23623) * C31994 +
                     (C23624 + C23625 + C23626) * C50834) *
                        C50796 * C50696 * C249 -
                    ((C22721 * C404 + C22716 * C424 + C22720 * C405 +
                      C50953 * C425 + C22719 * C406 + C50969 * C426) *
                         C50834 +
                     (C22721 * C394 + C22716 * C408 + C22720 * C395 +
                      C50953 * C409 + C22719 * C396 + C50969 * C410) *
                         C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50696 * C248 -
                    ((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                      C50953 * C1443 + C22719 * C1436 + C50969 * C1444) *
                         C50834 +
                     (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                      C50953 * C1439 + C22719 * C1432 + C50969 * C1440) *
                         C31994 +
                     (C22940 + C22939 + C22938) * C31991 +
                     (C22937 + C22936 + C22935) * C31993) *
                        C50796 * C50696 * C250) *
                       C50667)) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50696 * C50972 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50696 * C50973 +
                    ((C22928 + C22927 + C22926) * C31993 +
                     (C22925 + C22924 + C22923) * C31991 +
                     (C24551 + C24552 + C24553) * C31994 +
                     (C24554 + C24555 + C24556) * C50834) *
                        C50796 * C50696 * C1199) *
                       C50920 +
                   (((C22929 + C22930 + C22931) * C31993 +
                     (C22932 + C22933 + C22934) * C31991 +
                     (C23621 + C23622 + C23623) * C31994 +
                     (C23624 + C23625 + C23626) * C50834) *
                        C50796 * C50696 * C50973 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50696 * C50972 -
                    ((C22721 * C1434 + C22716 * C1442 + C22720 * C1435 +
                      C50953 * C1443 + C22719 * C1436 + C50969 * C1444) *
                         C50834 +
                     (C22721 * C1430 + C22716 * C1438 + C22720 * C1431 +
                      C50953 * C1439 + C22719 * C1432 + C50969 * C1440) *
                         C31994 +
                     (C22940 + C22939 + C22938) * C31991 +
                     (C22937 + C22936 + C22935) * C31993) *
                        C50796 * C50696 * C1199) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50929 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50760) *
                       C50972 +
                   (((C23620 + C23619 + C23618) * C31993 +
                     (C23617 + C23616 + C23615) * C31991 +
                     (C24047 + C24048 + C24049) * C31994 +
                     (C24050 + C24051 + C24052) * C50834) *
                        C50796 * C50760 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50929) *
                       C50973 +
                   (((C22928 + C22927 + C22926) * C31993 +
                     (C22925 + C22924 + C22923) * C31991 +
                     (C24551 + C24552 + C24553) * C31994 +
                     (C24554 + C24555 + C24556) * C50834) *
                        C50796 * C50929 -
                    ((C22721 * C3492 + C22716 * C3498 + C22720 * C3493 +
                      C50953 * C3499 + C22719 * C3494 + C50969 * C3500) *
                         C50834 +
                     (C22721 * C3489 + C22716 * C3495 + C22720 * C3490 +
                      C50953 * C3496 + C22719 * C3491 + C50969 * C3497) *
                         C31994 +
                     (C24556 + C24555 + C24554) * C31991 +
                     (C24553 + C24552 + C24551) * C31993) *
                        C50796 * C50760) *
                       C1199) *
                  C50661) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C31993 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C31991 +
                    (C32336 + C32337 + C32338) * C31994 +
                    (C32339 + C32340 + C32341) * C50834) *
                       C50796 * C50696 * C964 -
                   ((C23615 + C23616 + C23617) * C50834 +
                    (C23618 + C23619 + C23620) * C31994 +
                    (C22922 + C22921 + C22920) * C31991 +
                    (C22919 + C22918 + C22917) * C31993) *
                       C50796 * C50696 * C965 +
                   ((C22928 + C22927 + C22926) * C31993 +
                    (C22925 + C22924 + C22923) * C31991 +
                    (C24551 + C24552 + C24553) * C31994 +
                    (C24554 + C24555 + C24556) * C50834) *
                       C50796 * C50696 * C966 -
                   ((C22721 * C4008 + C22716 * C4014 + C22720 * C4009 +
                     C50953 * C4015 + C22719 * C4010 + C50969 * C4016) *
                        C50834 +
                    (C22721 * C4005 + C22716 * C4011 + C22720 * C4006 +
                     C50953 * C4012 + C22719 * C4007 + C50969 * C4013) *
                        C31994 +
                    (C23888 + C23887 + C23886) * C31991 +
                    (C23885 + C23884 + C23883) * C31993) *
                       C50796 * C50696 * C967) *
                  C50661) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50696 * C893 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50696 * C50732) *
                       C895 +
                   (((C22929 + C22930 + C22931) * C31993 +
                     (C22932 + C22933 + C22934) * C31991 +
                     (C23621 + C23622 + C23623) * C31994 +
                     (C23624 + C23625 + C23626) * C50834) *
                        C50796 * C50696 * C50732 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50696 * C893) *
                       C896 +
                   (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C31993 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C31991 +
                     (C32664 + C32665 + C32666) * C31994 +
                     (C32667 + C32668 + C32669) * C50834) *
                        C50796 * C50696 * C893 -
                    ((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                      C50953 * C793 + C22719 * C786 + C50969 * C792) *
                         C50834 +
                     (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                      C50953 * C783 + C22719 * C777 + C50969 * C782) *
                         C31994 +
                     (C23250 + C23249 + C23248) * C31991 +
                     (C23247 + C23246 + C23245) * C31993) *
                        C50796 * C50696 * C50732) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C391 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C392 +
                    ((C32347 + C32346 + C32345) * C31993 +
                     (C32344 + C32343 + C32342) * C31991 +
                     (C22719 * C1717 + C50969 * C1725 + C22720 * C1716 +
                      C50953 * C1724 + C22721 * C1715 + C22716 * C1723) *
                         C31994 +
                     (C22719 * C1721 + C50969 * C1729 + C22720 * C1720 +
                      C50953 * C1728 + C22721 * C1719 + C22716 * C1727) *
                         C50834) *
                        C50796 * C393) *
                       C893 +
                   (((C23620 + C23619 + C23618) * C31993 +
                     (C23617 + C23616 + C23615) * C31991 +
                     (C24047 + C24048 + C24049) * C31994 +
                     (C24050 + C24051 + C24052) * C50834) *
                        C50796 * C392 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C391 -
                    ((C22721 * C4428 + C22716 * C4434 + C22720 * C4429 +
                      C50953 * C4435 + C22719 * C4430 + C50969 * C4436) *
                         C50834 +
                     (C22721 * C4425 + C22716 * C4431 + C22720 * C4426 +
                      C50953 * C4432 + C22719 * C4427 + C50969 * C4433) *
                         C31994 +
                     (C24052 + C24051 + C24050) * C31991 +
                     (C24049 + C24048 + C24047) * C31993) *
                        C50796 * C393) *
                       C50732) *
                  C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                       C50953 * C130 + C22721 * C124 + C22716 * C131) *
                          C31993 +
                      (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                       C50953 * C144 + C22721 * C135 + C22716 * C145) *
                          C31991 +
                      (C32336 + C32337 + C32338) * C31994 +
                      (C32339 + C32340 + C32341) * C50834) *
                         C50796 * C50929 -
                     ((C32342 + C32343 + C32344) * C50834 +
                      (C32345 + C32346 + C32347) * C31994 +
                      (C32341 + C32340 + C32339) * C31991 +
                      (C32338 + C32337 + C32336) * C31993) *
                         C50796 * C50760) *
                        C893 +
                    (((C23620 + C23619 + C23618) * C31993 +
                      (C23617 + C23616 + C23615) * C31991 +
                      (C24047 + C24048 + C24049) * C31994 +
                      (C24050 + C24051 + C24052) * C50834) *
                         C50796 * C50760 -
                     ((C23615 + C23616 + C23617) * C50834 +
                      (C23618 + C23619 + C23620) * C31994 +
                      (C22922 + C22921 + C22920) * C31991 +
                      (C22919 + C22918 + C22917) * C31993) *
                         C50796 * C50929) *
                        C50732) *
                       C50920 +
                   ((((C32348 + C32349 + C32350) * C31993 +
                      (C32351 + C32352 + C32353) * C31991 +
                      (C32354 + C32355 + C32356) * C31994 +
                      (C32357 + C32358 + C32359) * C50834) *
                         C50796 * C50760 -
                     ((C32353 + C32352 + C32351) * C50834 +
                      (C32350 + C32349 + C32348) * C31994 +
                      (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50953 * C145 + C22719 * C134 + C50969 * C144) *
                          C31991 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50953 * C131 + C22719 * C123 + C50969 * C130) *
                          C31993) *
                         C50796 * C50929) *
                        C893 +
                    (((C22929 + C22930 + C22931) * C31993 +
                      (C22932 + C22933 + C22934) * C31991 +
                      (C23621 + C23622 + C23623) * C31994 +
                      (C23624 + C23625 + C23626) * C50834) *
                         C50796 * C50929 -
                     ((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                       C50953 * C1096 + C22719 * C1089 + C50969 * C1097) *
                          C50834 +
                      (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                       C50953 * C1092 + C22719 * C1085 + C50969 * C1093) *
                          C31994 +
                      (C23626 + C23625 + C23624) * C31991 +
                      (C23623 + C23622 + C23621) * C31993) *
                         C50796 * C50760) *
                        C50732) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50696 * C893 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50696 * C50732) *
                       C895 +
                   (((C22929 + C22930 + C22931) * C31993 +
                     (C22932 + C22933 + C22934) * C31991 +
                     (C23621 + C23622 + C23623) * C31994 +
                     (C23624 + C23625 + C23626) * C50834) *
                        C50796 * C50696 * C50732 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50696 * C893) *
                       C896 +
                   (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C31993 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C31991 +
                     (C32664 + C32665 + C32666) * C31994 +
                     (C32667 + C32668 + C32669) * C50834) *
                        C50796 * C50696 * C893 -
                    ((C22721 * C788 + C22716 * C794 + C22720 * C787 +
                      C50953 * C793 + C22719 * C786 + C50969 * C792) *
                         C50834 +
                     (C22721 * C779 + C22716 * C789 + C22720 * C778 +
                      C50953 * C783 + C22719 * C777 + C50969 * C782) *
                         C31994 +
                     (C23250 + C23249 + C23248) * C31991 +
                     (C23247 + C23246 + C23245) * C31993) *
                        C50796 * C50696 * C50732) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C31993 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C31991 +
                    (C32336 + C32337 + C32338) * C31994 +
                    (C32339 + C32340 + C32341) * C50834) *
                       C50796 * C50696 * C964 -
                   ((C23615 + C23616 + C23617) * C50834 +
                    (C23618 + C23619 + C23620) * C31994 +
                    (C22922 + C22921 + C22920) * C31991 +
                    (C22919 + C22918 + C22917) * C31993) *
                       C50796 * C50696 * C965 +
                   ((C22928 + C22927 + C22926) * C31993 +
                    (C22925 + C22924 + C22923) * C31991 +
                    (C24551 + C24552 + C24553) * C31994 +
                    (C24554 + C24555 + C24556) * C50834) *
                       C50796 * C50696 * C966 -
                   ((C22721 * C4008 + C22716 * C4014 + C22720 * C4009 +
                     C50953 * C4015 + C22719 * C4010 + C50969 * C4016) *
                        C50834 +
                    (C22721 * C4005 + C22716 * C4011 + C22720 * C4006 +
                     C50953 * C4012 + C22719 * C4007 + C50969 * C4013) *
                        C31994 +
                    (C23888 + C23887 + C23886) * C31991 +
                    (C23885 + C23884 + C23883) * C31993) *
                       C50796 * C50696 * C967) *
                  C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                       C50953 * C130 + C22721 * C124 + C22716 * C131) *
                          C31993 +
                      (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                       C50953 * C144 + C22721 * C135 + C22716 * C145) *
                          C31991 +
                      (C32336 + C32337 + C32338) * C31994 +
                      (C32339 + C32340 + C32341) * C50834) *
                         C50796 * C1544 -
                     ((C32342 + C32343 + C32344) * C50834 +
                      (C32345 + C32346 + C32347) * C31994 +
                      (C32341 + C32340 + C32339) * C31991 +
                      (C32338 + C32337 + C32336) * C31993) *
                         C50796 * C50760) *
                        C50928 +
                    (((C23620 + C23619 + C23618) * C31993 +
                      (C23617 + C23616 + C23615) * C31991 +
                      (C24047 + C24048 + C24049) * C31994 +
                      (C24050 + C24051 + C24052) * C50834) *
                         C50796 * C50760 -
                     ((C23615 + C23616 + C23617) * C50834 +
                      (C23618 + C23619 + C23620) * C31994 +
                      (C22922 + C22921 + C22920) * C31991 +
                      (C22919 + C22918 + C22917) * C31993) *
                         C50796 * C1544) *
                        C50732) *
                       C50920 +
                   ((((C32348 + C32349 + C32350) * C31993 +
                      (C32351 + C32352 + C32353) * C31991 +
                      (C32354 + C32355 + C32356) * C31994 +
                      (C32357 + C32358 + C32359) * C50834) *
                         C50796 * C50760 -
                     ((C32353 + C32352 + C32351) * C50834 +
                      (C32350 + C32349 + C32348) * C31994 +
                      (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                       C50953 * C145 + C22719 * C134 + C50969 * C144) *
                          C31991 +
                      (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                       C50953 * C131 + C22719 * C123 + C50969 * C130) *
                          C31993) *
                         C50796 * C1544) *
                        C50928 +
                    (((C22929 + C22930 + C22931) * C31993 +
                      (C22932 + C22933 + C22934) * C31991 +
                      (C23621 + C23622 + C23623) * C31994 +
                      (C23624 + C23625 + C23626) * C50834) *
                         C50796 * C1544 -
                     ((C22721 * C1087 + C22716 * C1095 + C22720 * C1088 +
                       C50953 * C1096 + C22719 * C1089 + C50969 * C1097) *
                          C50834 +
                      (C22721 * C1083 + C22716 * C1091 + C22720 * C1084 +
                       C50953 * C1092 + C22719 * C1085 + C50969 * C1093) *
                          C31994 +
                      (C23626 + C23625 + C23624) * C31991 +
                      (C23623 + C23622 + C23621) * C31993) *
                         C50796 * C50760) *
                        C50732) *
                       C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50974 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50975 +
                    ((C32347 + C32346 + C32345) * C31993 +
                     (C32344 + C32343 + C32342) * C31991 +
                     (C34142 + C34143 + C34144) * C31994 +
                     (C34145 + C34146 + C34147) * C50834) *
                        C50796 * C1960) *
                       C50928 +
                   (((C23620 + C23619 + C23618) * C31993 +
                     (C23617 + C23616 + C23615) * C31991 +
                     (C24047 + C24048 + C24049) * C31994 +
                     (C24050 + C24051 + C24052) * C50834) *
                        C50796 * C50975 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C50974 -
                    ((C22721 * C4428 + C22716 * C4434 + C22720 * C4429 +
                      C50953 * C4435 + C22719 * C4430 + C50969 * C4436) *
                         C50834 +
                     (C22721 * C4425 + C22716 * C4431 + C22720 * C4426 +
                      C50953 * C4432 + C22719 * C4427 + C50969 * C4433) *
                         C31994 +
                     (C24052 + C24051 + C24050) * C31991 +
                     (C24049 + C24048 + C24047) * C31993) *
                        C50796 * C1960) *
                       C50732) *
                  C50661) /
                 (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C1544 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50760) *
                       C248 +
                   (((C23620 + C23619 + C23618) * C31993 +
                     (C23617 + C23616 + C23615) * C31991 +
                     (C24047 + C24048 + C24049) * C31994 +
                     (C24050 + C24051 + C24052) * C50834) *
                        C50796 * C50760 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C1544) *
                       C249 +
                   (((C22928 + C22927 + C22926) * C31993 +
                     (C22925 + C22924 + C22923) * C31991 +
                     (C24551 + C24552 + C24553) * C31994 +
                     (C24554 + C24555 + C24556) * C50834) *
                        C50796 * C1544 -
                    ((C22721 * C3492 + C22716 * C3498 + C22720 * C3493 +
                      C50953 * C3499 + C22719 * C3494 + C50969 * C3500) *
                         C50834 +
                     (C22721 * C3489 + C22716 * C3495 + C22720 * C3490 +
                      C50953 * C3496 + C22719 * C3491 + C50969 * C3497) *
                         C31994 +
                     (C24556 + C24555 + C24554) * C31991 +
                     (C24553 + C24552 + C24551) * C31993) *
                        C50796 * C50760) *
                       C250) *
                  C50661) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C1544 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50760) *
                       C50680 * C895 +
                   (((C32348 + C32349 + C32350) * C31993 +
                     (C32351 + C32352 + C32353) * C31991 +
                     (C32354 + C32355 + C32356) * C31994 +
                     (C32357 + C32358 + C32359) * C50834) *
                        C50796 * C50760 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C1544) *
                       C50680 * C896 +
                   (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C31993 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C31991 +
                     (C32664 + C32665 + C32666) * C31994 +
                     (C32667 + C32668 + C32669) * C50834) *
                        C50796 * C1544 -
                    ((C22721 * C422 + C22716 * C433 + C22720 * C419 +
                      C50953 * C431 + C22719 * C418 + C50969 * C430) *
                         C50834 +
                     (C22721 * C403 + C22716 * C423 + C22720 * C401 +
                      C50953 * C415 + C22719 * C400 + C50969 * C414) *
                         C31994 +
                     (C32669 + C32668 + C32667) * C31991 +
                     (C32666 + C32665 + C32664) * C31993) *
                        C50796 * C50760) *
                       C50680 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                     C50953 * C130 + C22721 * C124 + C22716 * C131) *
                        C31993 +
                    (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                     C50953 * C144 + C22721 * C135 + C22716 * C145) *
                        C31991 +
                    (C32336 + C32337 + C32338) * C31994 +
                    (C32339 + C32340 + C32341) * C50834) *
                       C50796 * C1710 -
                   ((C32342 + C32343 + C32344) * C50834 +
                    (C32345 + C32346 + C32347) * C31994 +
                    (C32341 + C32340 + C32339) * C31991 +
                    (C32338 + C32337 + C32336) * C31993) *
                       C50796 * C1711 +
                   ((C32347 + C32346 + C32345) * C31993 +
                    (C32344 + C32343 + C32342) * C31991 +
                    (C34142 + C34143 + C34144) * C31994 +
                    (C34145 + C34146 + C34147) * C50834) *
                       C50796 * C1712 -
                   ((C22721 * C7162 + C22716 * C7168 + C22720 * C7163 +
                     C50953 * C7169 + C22719 * C7164 + C50969 * C7170) *
                        C50834 +
                    (C22721 * C7159 + C22716 * C7165 + C22720 * C7160 +
                     C50953 * C7166 + C22719 * C7161 + C50969 * C7167) *
                        C31994 +
                    (C34147 + C34146 + C34145) * C31991 +
                    (C34144 + C34143 + C34142) * C31993) *
                       C50796 * C1713) *
                  C50680 * C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C50974 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50975 +
                    ((C32347 + C32346 + C32345) * C31993 +
                     (C32344 + C32343 + C32342) * C31991 +
                     (C34142 + C34143 + C34144) * C31994 +
                     (C34145 + C34146 + C34147) * C50834) *
                        C50796 * C1960) *
                       C50680 * C50920 +
                   (((C32348 + C32349 + C32350) * C31993 +
                     (C32351 + C32352 + C32353) * C31991 +
                     (C32354 + C32355 + C32356) * C31994 +
                     (C32357 + C32358 + C32359) * C50834) *
                        C50796 * C50975 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C50974 -
                    ((C22721 * C1718 + C22716 * C1726 + C22720 * C1719 +
                      C50953 * C1727 + C22719 * C1720 + C50969 * C1728) *
                         C50834 +
                     (C22721 * C1714 + C22716 * C1722 + C22720 * C1715 +
                      C50953 * C1723 + C22719 * C1716 + C50969 * C1724) *
                         C31994 +
                     (C32359 + C32358 + C32357) * C31991 +
                     (C32356 + C32355 + C32354) * C31993) *
                        C50796 * C1960) *
                       C50680 * C50667)) /
                 (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C1544 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50760) *
                       C50680 * C895 +
                   (((C32348 + C32349 + C32350) * C31993 +
                     (C32351 + C32352 + C32353) * C31991 +
                     (C32354 + C32355 + C32356) * C31994 +
                     (C32357 + C32358 + C32359) * C50834) *
                        C50796 * C50760 -
                    ((C32353 + C32352 + C32351) * C50834 +
                     (C32350 + C32349 + C32348) * C31994 +
                     (C22721 * C136 + C22716 * C146 + C22720 * C135 +
                      C50953 * C145 + C22719 * C134 + C50969 * C144) *
                         C31991 +
                     (C22721 * C125 + C22716 * C132 + C22720 * C124 +
                      C50953 * C131 + C22719 * C123 + C50969 * C130) *
                         C31993) *
                        C50796 * C1544) *
                       C50680 * C896 +
                   (((C22719 * C124 + C50969 * C131 + C22720 * C125 +
                      C50953 * C132 + C22721 * C126 + C22716 * C138) *
                         C31993 +
                     (C22719 * C135 + C50969 * C145 + C22720 * C136 +
                      C50953 * C146 + C22721 * C137 + C22716 * C147) *
                         C31991 +
                     (C32664 + C32665 + C32666) * C31994 +
                     (C32667 + C32668 + C32669) * C50834) *
                        C50796 * C1544 -
                    ((C22721 * C422 + C22716 * C433 + C22720 * C419 +
                      C50953 * C431 + C22719 * C418 + C50969 * C430) *
                         C50834 +
                     (C22721 * C403 + C22716 * C423 + C22720 * C401 +
                      C50953 * C415 + C22719 * C400 + C50969 * C414) *
                         C31994 +
                     (C32669 + C32668 + C32667) * C31991 +
                     (C32666 + C32665 + C32664) * C31993) *
                        C50796 * C50760) *
                       C50680 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22719 * C122 + C50969 * C129 + C22720 * C123 +
                      C50953 * C130 + C22721 * C124 + C22716 * C131) *
                         C31993 +
                     (C22719 * C133 + C50969 * C143 + C22720 * C134 +
                      C50953 * C144 + C22721 * C135 + C22716 * C145) *
                         C31991 +
                     (C32336 + C32337 + C32338) * C31994 +
                     (C32339 + C32340 + C32341) * C50834) *
                        C50796 * C1544 -
                    ((C32342 + C32343 + C32344) * C50834 +
                     (C32345 + C32346 + C32347) * C31994 +
                     (C32341 + C32340 + C32339) * C31991 +
                     (C32338 + C32337 + C32336) * C31993) *
                        C50796 * C50760) *
                       C248 +
                   (((C23620 + C23619 + C23618) * C31993 +
                     (C23617 + C23616 + C23615) * C31991 +
                     (C24047 + C24048 + C24049) * C31994 +
                     (C24050 + C24051 + C24052) * C50834) *
                        C50796 * C50760 -
                    ((C23615 + C23616 + C23617) * C50834 +
                     (C23618 + C23619 + C23620) * C31994 +
                     (C22922 + C22921 + C22920) * C31991 +
                     (C22919 + C22918 + C22917) * C31993) *
                        C50796 * C1544) *
                       C249 +
                   (((C22928 + C22927 + C22926) * C31993 +
                     (C22925 + C22924 + C22923) * C31991 +
                     (C24551 + C24552 + C24553) * C31994 +
                     (C24554 + C24555 + C24556) * C50834) *
                        C50796 * C1544 -
                    ((C22721 * C3492 + C22716 * C3498 + C22720 * C3493 +
                      C50953 * C3499 + C22719 * C3494 + C50969 * C3500) *
                         C50834 +
                     (C22721 * C3489 + C22716 * C3495 + C22720 * C3490 +
                      C50953 * C3496 + C22719 * C3491 + C50969 * C3497) *
                         C31994 +
                     (C24556 + C24555 + C24554) * C31991 +
                     (C24553 + C24552 + C24551) * C31993) *
                        C50796 * C50760) *
                       C250) *
                  C50661) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50696 * C50928 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50696 * C50732) *
              C50970 +
          ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
             C29532 * C31994 + C29533 * C50834) *
                C50939 +
            ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
             (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C31993 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C31991 +
             (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
                C50939 +
            ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
             (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
                C50810) *
               C50696 * C50928 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50834 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C31994 +
             (C26081 + C26080) * C31991 + (C26079 + C26078) * C31993) *
                C50810 +
            ((C29063 + C29062) * C50834 + (C29061 + C29060) * C31994 +
             (C26077 + C26076) * C31991 + (C26075 + C26074) * C31993) *
                C50939) *
               C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C31993 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C31991 +
              (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                 C50939 +
             ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
              C29528 * C31994 + C29529 * C50834) *
                 C50810) *
                C50929 -
            ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
              C29531 * C31993) *
                 C50810 +
             ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
              (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                 C50939) *
                C50760) *
               C50928 +
           (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
              C30057 * C50834) *
                 C50939 +
             (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
              (C26899 + C26900) * C50834) *
                 C50810) *
                C50760 -
            ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
              (C25737 + C25736) * C31993) *
                 C50810 +
             (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
              (C25733 + C25732) * C31993) *
                 C50939) *
                C50929) *
               C50732) *
              C251 +
          (((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
              (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                 C50939 +
             (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
              (C28856 + C28857) * C50834) *
                 C50810) *
                C50760 -
            ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
              (C25745 + C25744) * C31993) *
                 C50810 +
             ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
              (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C31991 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C31993) *
                 C50939) *
                C50929) *
               C50928 +
           ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
              C29532 * C31994 + C29533 * C50834) *
                 C50939 +
             ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
              (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                 C50810) *
                C50929 -
            (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
               C25530 * C3499) *
                  C50834 +
              (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
               C25530 * C3496) *
                  C31994 +
              (C26469 + C26468) * C31991 + (C26467 + C26466) * C31993) *
                 C50810 +
             ((C28857 + C28856) * C50834 + (C28855 + C28854) * C31994 +
              C29534 * C31991 + C29535 * C31993) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50696 * C248 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50696 * C249 +
           ((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
             C30717 * C50834) *
                C50939 +
            ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
             (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
             C29532 * C31994 + C29533 * C50834) *
                C50939 +
            ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
             (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C249 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50696 * C248 -
           (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
              C25530 * C4015) *
                 C50834 +
             (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
              C25530 * C4012) *
                 C31994 +
             (C25755 + C25754) * C31991 + (C25753 + C25752) * C31993) *
                C50810 +
            ((C26469 + C26468) * C50834 + (C26467 + C26466) * C31994 +
             C25758 * C31991 + C25759 * C31993) *
                C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C31993 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C31991 +
            (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
               C50939 +
           ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
            C29528 * C31994 + C29529 * C50834) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
            (C25745 + C25744) * C31993) *
               C50810 +
           ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C31991 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C31993) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C31993 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C31991 +
            (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
               C50939 +
           ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
            (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C25536 * C788 + C50635 * C794 + C25535 * C787 + C25530 * C793) *
                C50834 +
            (C25536 * C779 + C50635 * C789 + C25535 * C778 + C25530 * C783) *
                C31994 +
            (C25536 * C280 + C50635 * C291 + C25535 * C263 + C25530 * C283) *
                C31991 +
            (C25536 * C261 + C50635 * C279 + C25535 * C253 + C25530 * C267) *
                C31993) *
               C50810 +
           ((C25536 * C421 + C50635 * C432 + C25535 * C404 + C25530 * C424) *
                C50834 +
            (C25536 * C402 + C50635 * C420 + C25535 * C394 + C25530 * C408) *
                C31994 +
            (C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
                C31991 +
            (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
                C31993) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C391 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C392 +
           (((C28845 + C28844) * C31993 + (C28843 + C28842) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50834) *
                C50939 +
            (C30056 * C31993 + C30057 * C31991 + (C30066 + C30067) * C31994 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C393) *
              C50680 * C251 +
          ((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
             (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                C50939 +
            (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C392 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C391 -
           (((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C50834 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C31994 +
             (C28857 + C28856) * C31991 + (C28855 + C28854) * C31993) *
                C50810 +
            ((C25536 * C1719 + C50635 * C1727 + C25535 * C1720 +
              C25530 * C1728) *
                 C50834 +
             (C25536 * C1715 + C50635 * C1723 + C25535 * C1716 +
              C25530 * C1724) *
                 C31994 +
             (C28853 + C28852) * C31991 + (C28851 + C28850) * C31993) *
                C50939) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50929 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          ((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
             (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                C50939 +
            (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50760 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C31993 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C31991 +
             (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
                C50939 +
            ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
             (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
                C50810) *
               C50929 -
           (((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
              C25530 * C1096) *
                 C50834 +
             (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
              C25530 * C1092) *
                 C31994 +
             (C29063 + C29062) * C31991 + (C29061 + C29060) * C31993) *
                C50810 +
            ((C25536 * C419 + C50635 * C431 + C25535 * C418 + C25530 * C430) *
                 C50834 +
             (C25536 * C401 + C50635 * C415 + C25535 * C400 + C25530 * C414) *
                 C31994 +
             (C29269 + C29268) * C31991 + (C29267 + C29266) * C31993) *
                C50939) *
               C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C31993 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C31991 +
            (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
               C50939 +
           ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
            C29528 * C31994 + C29529 * C50834) *
               C50810) *
              C50696 * C50680 * C113 -
          ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
            (C25745 + C25744) * C31993) *
               C50810 +
           ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C31991 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C31993) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C31993 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C31991 +
            (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
               C50939 +
           ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
            (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C25536 * C788 + C50635 * C794 + C25535 * C787 + C25530 * C793) *
                C50834 +
            (C25536 * C779 + C50635 * C789 + C25535 * C778 + C25530 * C783) *
                C31994 +
            (C25536 * C280 + C50635 * C291 + C25535 * C263 + C25530 * C283) *
                C31991 +
            (C25536 * C261 + C50635 * C279 + C25535 * C253 + C25530 * C267) *
                C31993) *
               C50810 +
           ((C25536 * C421 + C50635 * C432 + C25535 * C404 + C25530 * C424) *
                C50834 +
            (C25536 * C402 + C50635 * C420 + C25535 * C394 + C25530 * C408) *
                C31994 +
            (C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
                C31991 +
            (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
                C31993) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50696 * C248 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50696 * C249 +
           ((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
             C30717 * C50834) *
                C50939 +
            ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
             (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
             C29532 * C31994 + C29533 * C50834) *
                C50939 +
            ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
             (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C249 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50696 * C248 -
           (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
              C25530 * C4015) *
                 C50834 +
             (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
              C25530 * C4012) *
                 C31994 +
             (C25755 + C25754) * C31991 + (C25753 + C25752) * C31993) *
                C50810 +
            ((C26469 + C26468) * C50834 + (C26467 + C26466) * C31994 +
             C25758 * C31991 + C25759 * C31993) *
                C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50696 * C50972 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50696 * C50973 +
           ((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
             C30717 * C50834) *
                C50939 +
            ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
             (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
                C50810) *
               C50696 * C1199) *
              C50920 +
          ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
             C29532 * C31994 + C29533 * C50834) *
                C50939 +
            ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
             (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50973 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50696 * C50972 -
           (((C25536 * C4008 + C50635 * C4014 + C25535 * C4009 +
              C25530 * C4015) *
                 C50834 +
             (C25536 * C4005 + C50635 * C4011 + C25535 * C4006 +
              C25530 * C4012) *
                 C31994 +
             (C25755 + C25754) * C31991 + (C25753 + C25752) * C31993) *
                C50810 +
            ((C26469 + C26468) * C50834 + (C26467 + C26466) * C31994 +
             C25758 * C31991 + C25759 * C31993) *
                C50939) *
               C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50929 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50760) *
              C50972 +
          (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
             C30057 * C50834) *
                C50939 +
            (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50760 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50929) *
              C50973 +
          (((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
             C30717 * C50834) *
                C50939 +
            ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
             (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
                C50810) *
               C50929 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50834 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C31994 +
             (C27402 + C27401) * C31991 + (C27400 + C27399) * C31993) *
                C50810 +
            ((C26900 + C26899) * C50834 + (C26898 + C26897) * C31994 +
             C27387 * C31991 + C27388 * C31993) *
                C50939) *
               C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C31993 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C31991 +
            (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
               C50939 +
           ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
            C29528 * C31994 + C29529 * C50834) *
               C50810) *
              C50696 * C964 -
          ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
            (C25737 + C25736) * C31993) *
               C50810 +
           (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
            (C25733 + C25732) * C31993) *
               C50939) *
              C50696 * C965 +
          ((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
            C30717 * C50834) *
               C50939 +
           ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
            (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
               C50810) *
              C50696 * C966 -
          (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
             C25530 * C9652) *
                C50834 +
            (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
             C25530 * C9650) *
                C31994 +
            (C26729 + C26728) * C31991 + (C26727 + C26726) * C31993) *
               C50810 +
           ((C27402 + C27401) * C50834 + (C27400 + C27399) * C31994 +
            C26714 * C31991 + C26715 * C31993) *
               C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50696 * C893 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50696 * C50732) *
              C895 +
          ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
             C29532 * C31994 + C29533 * C50834) *
                C50939 +
            ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
             (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C31993 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C31991 +
             (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
                C50939 +
            ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
             (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
                C50810) *
               C50696 * C893 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50834 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C31994 +
             (C26081 + C26080) * C31991 + (C26079 + C26078) * C31993) *
                C50810 +
            ((C29063 + C29062) * C50834 + (C29061 + C29060) * C31994 +
             (C26077 + C26076) * C31991 + (C26075 + C26074) * C31993) *
                C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C391 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C392 +
           (((C28845 + C28844) * C31993 + (C28843 + C28842) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50834) *
                C50939 +
            (C30056 * C31993 + C30057 * C31991 + (C30066 + C30067) * C31994 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C393) *
              C893 +
          (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
             C30057 * C50834) *
                C50939 +
            (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C392 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C391 -
           (((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
              C25530 * C10067) *
                 C50834 +
             (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
              C25530 * C10065) *
                 C31994 +
             (C26900 + C26899) * C31991 + (C26898 + C26897) * C31993) *
                C50810 +
            ((C30069 + C30068) * C50834 + (C30067 + C30066) * C31994 +
             C30054 * C31991 + C30055 * C31993) *
                C50939) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C31993 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C31991 +
              (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                 C50939 +
             ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
              C29528 * C31994 + C29529 * C50834) *
                 C50810) *
                C50929 -
            ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
              C29531 * C31993) *
                 C50810 +
             ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
              (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                 C50939) *
                C50760) *
               C893 +
           (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
              C30057 * C50834) *
                 C50939 +
             (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
              (C26899 + C26900) * C50834) *
                 C50810) *
                C50760 -
            ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
              (C25737 + C25736) * C31993) *
                 C50810 +
             (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
              (C25733 + C25732) * C31993) *
                 C50939) *
                C50929) *
               C50732) *
              C50920 +
          (((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
              (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                 C50939 +
             (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
              (C28856 + C28857) * C50834) *
                 C50810) *
                C50760 -
            ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
              (C25745 + C25744) * C31993) *
                 C50810 +
             ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
              (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C31991 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C31993) *
                 C50939) *
                C50929) *
               C893 +
           ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
              C29532 * C31994 + C29533 * C50834) *
                 C50939 +
             ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
              (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                 C50810) *
                C50929 -
            (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
               C25530 * C3499) *
                  C50834 +
              (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
               C25530 * C3496) *
                  C31994 +
              (C26469 + C26468) * C31991 + (C26467 + C26466) * C31993) *
                 C50810 +
             ((C28857 + C28856) * C50834 + (C28855 + C28854) * C31994 +
              C29534 * C31991 + C29535 * C31993) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50696 * C893 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50696 * C50732) *
              C895 +
          ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
             C29532 * C31994 + C29533 * C50834) *
                C50939 +
            ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
             (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                C50810) *
               C50696 * C50732 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C31993 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C31991 +
             (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
                C50939 +
            ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
             (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
                C50810) *
               C50696 * C893 -
           (((C25536 * C1434 + C50635 * C1442 + C25535 * C1435 +
              C25530 * C1443) *
                 C50834 +
             (C25536 * C1430 + C50635 * C1438 + C25535 * C1431 +
              C25530 * C1439) *
                 C31994 +
             (C26081 + C26080) * C31991 + (C26079 + C26078) * C31993) *
                C50810 +
            ((C29063 + C29062) * C50834 + (C29061 + C29060) * C31994 +
             (C26077 + C26076) * C31991 + (C26075 + C26074) * C31993) *
                C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C31993 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C31991 +
            (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
               C50939 +
           ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
            C29528 * C31994 + C29529 * C50834) *
               C50810) *
              C50696 * C964 -
          ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
            (C25737 + C25736) * C31993) *
               C50810 +
           (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
            (C25733 + C25732) * C31993) *
               C50939) *
              C50696 * C965 +
          ((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
            C30717 * C50834) *
               C50939 +
           ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
            (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
               C50810) *
              C50696 * C966 -
          (((C25536 * C9647 + C50635 * C9651 + C25535 * C9648 +
             C25530 * C9652) *
                C50834 +
            (C25536 * C9645 + C50635 * C9649 + C25535 * C9646 +
             C25530 * C9650) *
                C31994 +
            (C26729 + C26728) * C31991 + (C26727 + C26726) * C31993) *
               C50810 +
           ((C27402 + C27401) * C50834 + (C27400 + C27399) * C31994 +
            C26714 * C31991 + C26715 * C31993) *
               C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                  C31993 +
              (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                  C31991 +
              (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                 C50939 +
             ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
              C29528 * C31994 + C29529 * C50834) *
                 C50810) *
                C1544 -
            ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
              C29531 * C31993) *
                 C50810 +
             ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
              (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                 C50939) *
                C50760) *
               C50928 +
           (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
              C30057 * C50834) *
                 C50939 +
             (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
              (C26899 + C26900) * C50834) *
                 C50810) *
                C50760 -
            ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
              (C25737 + C25736) * C31993) *
                 C50810 +
             (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
              (C25733 + C25732) * C31993) *
                 C50939) *
                C1544) *
               C50732) *
              C50920 +
          (((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
              (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                 C50939 +
             (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
              (C28856 + C28857) * C50834) *
                 C50810) *
                C50760 -
            ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
              (C25745 + C25744) * C31993) *
                 C50810 +
             ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
              (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                  C31991 +
              (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                  C31993) *
                 C50939) *
                C1544) *
               C50928 +
           ((((C25744 + C25745) * C31993 + (C25746 + C25747) * C31991 +
              C29532 * C31994 + C29533 * C50834) *
                 C50939 +
             ((C25748 + C25749) * C31993 + (C25750 + C25751) * C31991 +
              (C26466 + C26467) * C31994 + (C26468 + C26469) * C50834) *
                 C50810) *
                C1544 -
            (((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
               C25530 * C3499) *
                  C50834 +
              (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
               C25530 * C3496) *
                  C31994 +
              (C26469 + C26468) * C31991 + (C26467 + C26466) * C31993) *
                 C50810 +
             ((C28857 + C28856) * C50834 + (C28855 + C28854) * C31994 +
              C29534 * C31991 + C29535 * C31993) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50974 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50975 +
           (((C28845 + C28844) * C31993 + (C28843 + C28842) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50834) *
                C50939 +
            (C30056 * C31993 + C30057 * C31991 + (C30066 + C30067) * C31994 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C1960) *
              C50928 +
          (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
             C30057 * C50834) *
                C50939 +
            (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50975 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C50974 -
           (((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
              C25530 * C10067) *
                 C50834 +
             (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
              C25530 * C10065) *
                 C31994 +
             (C26900 + C26899) * C31991 + (C26898 + C26897) * C31993) *
                C50810 +
            ((C30069 + C30068) * C50834 + (C30067 + C30066) * C31994 +
             C30054 * C31991 + C30055 * C31993) *
                C50939) *
               C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50760) *
              C248 +
          (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
             C30057 * C50834) *
                C50939 +
            (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50760 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C1544) *
              C249 +
          (((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
             C30717 * C50834) *
                C50939 +
            ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
             (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50834 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C31994 +
             (C27402 + C27401) * C31991 + (C27400 + C27399) * C31993) *
                C50810 +
            ((C26900 + C26899) * C50834 + (C26898 + C26897) * C31994 +
             C27387 * C31991 + C27388 * C31993) *
                C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50760) *
              C50680 * C895 +
          ((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
             (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                C50939 +
            (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50760 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C31993 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C31991 +
             (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
                C50939 +
            ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
             (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
              C25530 * C1096) *
                 C50834 +
             (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
              C25530 * C1092) *
                 C31994 +
             (C29063 + C29062) * C31991 + (C29061 + C29060) * C31993) *
                C50810 +
            ((C25536 * C419 + C50635 * C431 + C25535 * C418 + C25530 * C430) *
                 C50834 +
             (C25536 * C401 + C50635 * C415 + C25535 * C400 + C25530 * C414) *
                 C31994 +
             (C29269 + C29268) * C31991 + (C29267 + C29266) * C31993) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C31993 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C31991 +
            (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
               C50939 +
           ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
            C29528 * C31994 + C29529 * C50834) *
               C50810) *
              C1710 -
          ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
            C29531 * C31993) *
               C50810 +
           ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
            (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
               C50939) *
              C1711 +
          (((C28845 + C28844) * C31993 + (C28843 + C28842) * C31991 +
            (C31244 + C31245) * C31994 + (C31246 + C31247) * C50834) *
               C50939 +
           (C30056 * C31993 + C30057 * C31991 + (C30066 + C30067) * C31994 +
            (C30068 + C30069) * C50834) *
               C50810) *
              C1712 -
          (((C25536 * C16693 + C50635 * C16695 + C25535 * C14812 +
             C25530 * C14815) *
                C50834 +
            (C25536 * C16692 + C50635 * C16694 + C25535 * C14809 +
             C25530 * C14813) *
                C31994 +
            (C30069 + C30068) * C31991 + (C30067 + C30066) * C31993) *
               C50810 +
           ((C25536 * C7163 + C50635 * C7169 + C25535 * C7164 +
             C25530 * C7170) *
                C50834 +
            (C25536 * C7160 + C50635 * C7166 + C25535 * C7161 +
             C25530 * C7167) *
                C31994 +
            (C31247 + C31246) * C31991 + (C31245 + C31244) * C31993) *
               C50939) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C50974 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50975 +
           (((C28845 + C28844) * C31993 + (C28843 + C28842) * C31991 +
             (C31244 + C31245) * C31994 + (C31246 + C31247) * C50834) *
                C50939 +
            (C30056 * C31993 + C30057 * C31991 + (C30066 + C30067) * C31994 +
             (C30068 + C30069) * C50834) *
                C50810) *
               C1960) *
              C50680 * C50920 +
          ((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
             (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                C50939 +
            (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50975 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C50974 -
           (((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C50834 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C31994 +
             (C28857 + C28856) * C31991 + (C28855 + C28854) * C31993) *
                C50810 +
            ((C25536 * C1719 + C50635 * C1727 + C25535 * C1720 +
              C25530 * C1728) *
                 C50834 +
             (C25536 * C1715 + C50635 * C1723 + C25535 * C1716 +
              C25530 * C1724) *
                 C31994 +
             (C28853 + C28852) * C31991 + (C28851 + C28850) * C31993) *
                C50939) *
               C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50760) *
              C50680 * C895 +
          ((((C28846 + C28847) * C31993 + (C28848 + C28849) * C31991 +
             (C28850 + C28851) * C31994 + (C28852 + C28853) * C50834) *
                C50939 +
            (C29532 * C31993 + C29533 * C31991 + (C28854 + C28855) * C31994 +
             (C28856 + C28857) * C50834) *
                C50810) *
               C50760 -
           ((C29534 * C50834 + C29535 * C31994 + (C25747 + C25746) * C31991 +
             (C25745 + C25744) * C31993) *
                C50810 +
            ((C28849 + C28848) * C50834 + (C28847 + C28846) * C31994 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C31991 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C31993) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                 C31993 +
             (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                 C31991 +
             (C29266 + C29267) * C31994 + (C29268 + C29269) * C50834) *
                C50939 +
            ((C26074 + C26075) * C31993 + (C26076 + C26077) * C31991 +
             (C29060 + C29061) * C31994 + (C29062 + C29063) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
              C25530 * C1096) *
                 C50834 +
             (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
              C25530 * C1092) *
                 C31994 +
             (C29063 + C29062) * C31991 + (C29061 + C29060) * C31993) *
                C50810 +
            ((C25536 * C419 + C50635 * C431 + C25535 * C418 + C25530 * C430) *
                 C50834 +
             (C25536 * C401 + C50635 * C415 + C25535 * C400 + C25530 * C414) *
                 C31994 +
             (C29269 + C29268) * C31991 + (C29267 + C29266) * C31993) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C31993 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C31991 +
             (C28838 + C28839) * C31994 + (C28840 + C28841) * C50834) *
                C50939 +
            ((C25732 + C25733) * C31993 + (C25734 + C25735) * C31991 +
             C29528 * C31994 + C29529 * C50834) *
                C50810) *
               C1544 -
           ((C30054 * C50834 + C30055 * C31994 + C29530 * C31991 +
             C29531 * C31993) *
                C50810 +
            ((C28842 + C28843) * C50834 + (C28844 + C28845) * C31994 +
             (C28841 + C28840) * C31991 + (C28839 + C28838) * C31993) *
                C50939) *
               C50760) *
              C248 +
          (((C29528 * C31993 + C29529 * C31991 + C30056 * C31994 +
             C30057 * C50834) *
                C50939 +
            (C30716 * C31993 + C30717 * C31991 + (C26897 + C26898) * C31994 +
             (C26899 + C26900) * C50834) *
                C50810) *
               C50760 -
           ((C27387 * C50834 + C27388 * C31994 + (C25739 + C25738) * C31991 +
             (C25737 + C25736) * C31993) *
                C50810 +
            (C29530 * C50834 + C29531 * C31994 + (C25735 + C25734) * C31991 +
             (C25733 + C25732) * C31993) *
                C50939) *
               C1544) *
              C249 +
          (((C25756 * C31993 + C25757 * C31991 + C30716 * C31994 +
             C30717 * C50834) *
                C50939 +
            ((C25743 + C25742) * C31993 + (C25741 + C25740) * C31991 +
             (C27399 + C27400) * C31994 + (C27401 + C27402) * C50834) *
                C50810) *
               C1544 -
           (((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 +
              C25530 * C9134) *
                 C50834 +
             (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 +
              C25530 * C9132) *
                 C31994 +
             (C27402 + C27401) * C31991 + (C27400 + C27399) * C31993) *
                C50810 +
            ((C26900 + C26899) * C50834 + (C26898 + C26897) * C31994 +
             C27387 * C31991 + C27388 * C31993) *
                C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50696 * C50928 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
            C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
            (C28856 + C28857) * C38225) *
               C50796 * C50696 * C50732 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C38226 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50977 +
            (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
            (C25535 * C400 + C25530 * C414 + C25536 * C401 + C50635 * C415) *
                C38228 +
            (C25535 * C418 + C25530 * C430 + C25536 * C419 + C50635 * C431) *
                C38225) *
               C50796 * C50696 * C50928 -
           ((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
             C25530 * C1096) *
                C38225 +
            (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
             C25530 * C1092) *
                C38228 +
            (C29063 + C29062) * C50968 + (C29061 + C29060) * C38227 +
            (C26077 + C26076) * C50977 + (C26075 + C26074) * C38226) *
               C50796 * C50696 * C50732) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C38226 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50977 +
             (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
             C38522 * C38228 + C38523 * C38225) *
                C50796 * C50929 -
            ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
             (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
             (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
                C50796 * C50760) *
               C50928 +
           ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
             C30057 * C50968 + (C30066 + C30067) * C38228 +
             (C30068 + C30069) * C38225) *
                C50796 * C50760 -
            (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
             C29531 * C38227 + (C25735 + C25734) * C50977 +
             (C25733 + C25732) * C38226) *
                C50796 * C50929) *
               C50732) *
              C251 +
          ((((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
             (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
             (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
                C50796 * C50760 -
            (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
             (C28847 + C28846) * C38227 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50977 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C38226) *
                C50796 * C50929) *
               C50928 +
           (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
             C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
             (C28856 + C28857) * C38225) *
                C50796 * C50929 -
            ((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C38225 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C38228 +
             (C28857 + C28856) * C50968 + (C28855 + C28854) * C38227 +
             C29534 * C50977 + C29535 * C38226) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            (C28845 + C28844) * C38228 + (C28843 + C28842) * C38225) *
               C50796 * C50696 * C248 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50696 * C249 +
           (C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
            C30717 * C50968 + (C26897 + C26898) * C38228 +
            (C26899 + C26900) * C38225) *
               C50796 * C50696 * C250) *
              C251 +
          (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
            C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
            (C28856 + C28857) * C38225) *
               C50796 * C50696 * C249 -
           ((C28853 + C28852) * C38225 + (C28851 + C28850) * C38228 +
            (C28849 + C28848) * C50968 + (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50696 * C248 -
           ((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
             C25530 * C3499) *
                C38225 +
            (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
             C25530 * C3496) *
                C38228 +
            (C26469 + C26468) * C50968 + (C26467 + C26466) * C38227 +
            C25758 * C50977 + C25759 * C38226) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
               C38226 +
           (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
               C50977 +
           (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
           (C28845 + C28844) * C38228 + (C28843 + C28842) * C38225) *
              C50796 * C50696 * C50680 * C113 -
          ((C28853 + C28852) * C38225 + (C28851 + C28850) * C38228 +
           (C28849 + C28848) * C50968 + (C28847 + C28846) * C38227 +
           (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
               C50977 +
           (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
               C38226) *
              C50796 * C50696 * C50680 * C114 +
          ((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
               C38226 +
           (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
               C50977 +
           (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
           (C25535 * C400 + C25530 * C414 + C25536 * C401 + C50635 * C415) *
               C38228 +
           (C25535 * C418 + C25530 * C430 + C25536 * C419 + C50635 * C431) *
               C38225) *
              C50796 * C50696 * C50680 * C115 -
          ((C25536 * C422 + C50635 * C433 + C25535 * C419 + C25530 * C431) *
               C38225 +
           (C25536 * C403 + C50635 * C423 + C25535 * C401 + C25530 * C415) *
               C38228 +
           (C25536 * C421 + C50635 * C432 + C25535 * C404 + C25530 * C424) *
               C50968 +
           (C25536 * C402 + C50635 * C420 + C25535 * C394 + C25530 * C408) *
               C38227 +
           (C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
               C50977 +
           (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
               C38226) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C391 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C392 +
           (C38522 * C38226 + C38523 * C50977 + (C31244 + C31245) * C38227 +
            (C31246 + C31247) * C50968 +
            (C25535 * C7161 + C25530 * C7167 + C25536 * C7160 +
             C50635 * C7166) *
                C38228 +
            (C25535 * C7164 + C25530 * C7170 + C25536 * C7163 +
             C50635 * C7169) *
                C38225) *
               C50796 * C393) *
              C50680 * C251 +
          (((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
            (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
            (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
               C50796 * C392 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C391 -
           ((C25536 * C7162 + C50635 * C7168 + C25535 * C7163 +
             C25530 * C7169) *
                C38225 +
            (C25536 * C7159 + C50635 * C7165 + C25535 * C7160 +
             C25530 * C7166) *
                C38228 +
            (C38537 + C38536) * C50968 + (C38535 + C38534) * C38227 +
            C38532 * C50977 + C38533 * C38226) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50929 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
            (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
            (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
               C50796 * C50760 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C38226 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50977 +
            (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
            (C38838 + C38839) * C38228 + (C38840 + C38841) * C38225) *
               C50796 * C50929 -
           ((C25536 * C1718 + C50635 * C1726 + C25535 * C1719 +
             C25530 * C1727) *
                C38225 +
            (C25536 * C1714 + C50635 * C1722 + C25535 * C1715 +
             C25530 * C1723) *
                C38228 +
            (C38841 + C38840) * C50968 + (C38839 + C38838) * C38227 +
            (C29269 + C29268) * C50977 + (C29267 + C29266) * C38226) *
               C50796 * C50760) *
              C50680 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
               C38226 +
           (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
               C50977 +
           (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
           (C28845 + C28844) * C38228 + (C28843 + C28842) * C38225) *
              C50796 * C50696 * C50680 * C113 -
          ((C28853 + C28852) * C38225 + (C28851 + C28850) * C38228 +
           (C28849 + C28848) * C50968 + (C28847 + C28846) * C38227 +
           (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
               C50977 +
           (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
               C38226) *
              C50796 * C50696 * C50680 * C114 +
          ((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
               C38226 +
           (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
               C50977 +
           (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
           (C25535 * C400 + C25530 * C414 + C25536 * C401 + C50635 * C415) *
               C38228 +
           (C25535 * C418 + C25530 * C430 + C25536 * C419 + C50635 * C431) *
               C38225) *
              C50796 * C50696 * C50680 * C115 -
          ((C25536 * C422 + C50635 * C433 + C25535 * C419 + C25530 * C431) *
               C38225 +
           (C25536 * C403 + C50635 * C423 + C25535 * C401 + C25530 * C415) *
               C38228 +
           (C25536 * C421 + C50635 * C432 + C25535 * C404 + C25530 * C424) *
               C50968 +
           (C25536 * C402 + C50635 * C420 + C25535 * C394 + C25530 * C408) *
               C38227 +
           (C25536 * C137 + C50635 * C147 + C25535 * C136 + C25530 * C146) *
               C50977 +
           (C25536 * C126 + C50635 * C138 + C25535 * C125 + C25530 * C132) *
               C38226) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            (C28845 + C28844) * C38228 + (C28843 + C28842) * C38225) *
               C50796 * C50696 * C248 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50696 * C249 +
           (C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
            C30717 * C50968 + (C26897 + C26898) * C38228 +
            (C26899 + C26900) * C38225) *
               C50796 * C50696 * C250) *
              C251 +
          (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
            C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
            (C28856 + C28857) * C38225) *
               C50796 * C50696 * C249 -
           ((C28853 + C28852) * C38225 + (C28851 + C28850) * C38228 +
            (C28849 + C28848) * C50968 + (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50696 * C248 -
           ((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
             C25530 * C3499) *
                C38225 +
            (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
             C25530 * C3496) *
                C38228 +
            (C26469 + C26468) * C50968 + (C26467 + C26466) * C38227 +
            C25758 * C50977 + C25759 * C38226) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50696 * C50972 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50696 * C50973 +
           (C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
            C30717 * C50968 + (C26897 + C26898) * C38228 +
            (C26899 + C26900) * C38225) *
               C50796 * C50696 * C1199) *
              C50920 +
          (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
            C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
            (C28856 + C28857) * C38225) *
               C50796 * C50696 * C50973 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50696 * C50972 -
           ((C25536 * C3492 + C50635 * C3498 + C25535 * C3493 +
             C25530 * C3499) *
                C38225 +
            (C25536 * C3489 + C50635 * C3495 + C25535 * C3490 +
             C25530 * C3496) *
                C38228 +
            (C26469 + C26468) * C50968 + (C26467 + C26466) * C38227 +
            C25758 * C50977 + C25759 * C38226) *
               C50796 * C50696 * C1199) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50929 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C50760) *
              C50972 +
          ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
            C30057 * C50968 + (C30066 + C30067) * C38228 +
            (C30068 + C30069) * C38225) *
               C50796 * C50760 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50929) *
              C50973 +
          ((C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
            C30717 * C50968 + (C26897 + C26898) * C38228 +
            (C26899 + C26900) * C38225) *
               C50796 * C50929 -
           ((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
             C25530 * C10067) *
                C38225 +
            (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
             C25530 * C10065) *
                C38228 +
            (C26900 + C26899) * C50968 + (C26898 + C26897) * C38227 +
            C27387 * C50977 + C27388 * C38226) *
               C50796 * C50760) *
              C1199) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
               C38226 +
           (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
               C50977 +
           (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
           C38522 * C38228 + C38523 * C38225) *
              C50796 * C50696 * C964 -
          (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
           C29531 * C38227 + (C25735 + C25734) * C50977 +
           (C25733 + C25732) * C38226) *
              C50796 * C50696 * C965 +
          (C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
           C30717 * C50968 + (C26897 + C26898) * C38228 +
           (C26899 + C26900) * C38225) *
              C50796 * C50696 * C966 -
          ((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 + C25530 * C9134) *
               C38225 +
           (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 + C25530 * C9132) *
               C38228 +
           (C27402 + C27401) * C50968 + (C27400 + C27399) * C38227 +
           C26714 * C50977 + C26715 * C38226) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50696 * C893 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
            C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
            (C28856 + C28857) * C38225) *
               C50796 * C50696 * C50732 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50696 * C893) *
              C896 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C38226 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50977 +
            (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
            (C38838 + C38839) * C38228 + (C38840 + C38841) * C38225) *
               C50796 * C50696 * C893 -
           ((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
             C25530 * C1096) *
                C38225 +
            (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
             C25530 * C1092) *
                C38228 +
            (C29063 + C29062) * C50968 + (C29061 + C29060) * C38227 +
            (C26077 + C26076) * C50977 + (C26075 + C26074) * C38226) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C391 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C392 +
           (C38522 * C38226 + C38523 * C50977 + (C31244 + C31245) * C38227 +
            (C31246 + C31247) * C50968 +
            (C25535 * C7161 + C25530 * C7167 + C25536 * C7160 +
             C50635 * C7166) *
                C38228 +
            (C25535 * C7164 + C25530 * C7170 + C25536 * C7163 +
             C50635 * C7169) *
                C38225) *
               C50796 * C393) *
              C893 +
          ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
            C30057 * C50968 + (C30066 + C30067) * C38228 +
            (C30068 + C30069) * C38225) *
               C50796 * C392 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C391 -
           ((C25536 * C16693 + C50635 * C16695 + C25535 * C14812 +
             C25530 * C14815) *
                C38225 +
            (C25536 * C16692 + C50635 * C16694 + C25535 * C14809 +
             C25530 * C14813) *
                C38228 +
            (C30069 + C30068) * C50968 + (C30067 + C30066) * C38227 +
            C30054 * C50977 + C30055 * C38226) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C38226 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50977 +
             (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
             C38522 * C38228 + C38523 * C38225) *
                C50796 * C50929 -
            ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
             (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
             (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
                C50796 * C50760) *
               C893 +
           ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
             C30057 * C50968 + (C30066 + C30067) * C38228 +
             (C30068 + C30069) * C38225) *
                C50796 * C50760 -
            (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
             C29531 * C38227 + (C25735 + C25734) * C50977 +
             (C25733 + C25732) * C38226) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
             (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
             (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
                C50796 * C50760 -
            (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
             (C28847 + C28846) * C38227 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50977 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C38226) *
                C50796 * C50929) *
               C893 +
           (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
             C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
             (C28856 + C28857) * C38225) *
                C50796 * C50929 -
            ((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C38225 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C38228 +
             (C28857 + C28856) * C50968 + (C28855 + C28854) * C38227 +
             C29534 * C50977 + C29535 * C38226) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50696 * C893 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
            C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
            (C28856 + C28857) * C38225) *
               C50796 * C50696 * C50732 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50696 * C893) *
              C896 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C38226 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50977 +
            (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
            (C38838 + C38839) * C38228 + (C38840 + C38841) * C38225) *
               C50796 * C50696 * C893 -
           ((C25536 * C1087 + C50635 * C1095 + C25535 * C1088 +
             C25530 * C1096) *
                C38225 +
            (C25536 * C1083 + C50635 * C1091 + C25535 * C1084 +
             C25530 * C1092) *
                C38228 +
            (C29063 + C29062) * C50968 + (C29061 + C29060) * C38227 +
            (C26077 + C26076) * C50977 + (C26075 + C26074) * C38226) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
               C38226 +
           (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
               C50977 +
           (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
           C38522 * C38228 + C38523 * C38225) *
              C50796 * C50696 * C964 -
          (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
           C29531 * C38227 + (C25735 + C25734) * C50977 +
           (C25733 + C25732) * C38226) *
              C50796 * C50696 * C965 +
          (C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
           C30717 * C50968 + (C26897 + C26898) * C38228 +
           (C26899 + C26900) * C38225) *
              C50796 * C50696 * C966 -
          ((C25536 * C9129 + C50635 * C9133 + C25535 * C9130 + C25530 * C9134) *
               C38225 +
           (C25536 * C9127 + C50635 * C9131 + C25535 * C9128 + C25530 * C9132) *
               C38228 +
           (C27402 + C27401) * C50968 + (C27400 + C27399) * C38227 +
           C26714 * C50977 + C26715 * C38226) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                 C38226 +
             (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                 C50977 +
             (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
             C38522 * C38228 + C38523 * C38225) *
                C50796 * C1544 -
            (C40302 * C38225 + C40303 * C38228 + (C28842 + C28843) * C50968 +
             (C28844 + C28845) * C38227 + (C28841 + C28840) * C50977 +
             (C28839 + C28838) * C38226) *
                C50796 * C50760) *
               C50928 +
           ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
             C30057 * C50968 + (C30066 + C30067) * C38228 +
             (C30068 + C30069) * C38225) *
                C50796 * C50760 -
            (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
             C29531 * C38227 + (C25735 + C25734) * C50977 +
             (C25733 + C25732) * C38226) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          ((((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
             (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
             (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
                C50796 * C50760 -
            (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
             (C28847 + C28846) * C38227 +
             (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                 C50977 +
             (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                 C38226) *
                C50796 * C1544) *
               C50928 +
           (((C25744 + C25745) * C38226 + (C25746 + C25747) * C50977 +
             C29532 * C38227 + C29533 * C50968 + (C28854 + C28855) * C38228 +
             (C28856 + C28857) * C38225) *
                C50796 * C1544 -
            ((C25536 * C4428 + C50635 * C4434 + C25535 * C4429 +
              C25530 * C4435) *
                 C38225 +
             (C25536 * C4425 + C50635 * C4431 + C25535 * C4426 +
              C25530 * C4432) *
                 C38228 +
             (C28857 + C28856) * C50968 + (C28855 + C28854) * C38227 +
             C29534 * C50977 + C29535 * C38226) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50974 -
           (C40302 * C38225 + C40303 * C38228 + (C28842 + C28843) * C50968 +
            (C28844 + C28845) * C38227 + (C28841 + C28840) * C50977 +
            (C28839 + C28838) * C38226) *
               C50796 * C50975 +
           (C38522 * C38226 + C38523 * C50977 + (C31244 + C31245) * C38227 +
            (C31246 + C31247) * C50968 + (C40312 + C40313) * C38228 +
            (C40314 + C40315) * C38225) *
               C50796 * C1960) *
              C50928 +
          ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
            C30057 * C50968 + (C30066 + C30067) * C38228 +
            (C30068 + C30069) * C38225) *
               C50796 * C50975 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C50974 -
           ((C25536 * C16693 + C50635 * C16695 + C25535 * C14812 +
             C25530 * C14815) *
                C38225 +
            (C25536 * C16692 + C50635 * C16694 + C25535 * C14809 +
             C25530 * C14813) *
                C38228 +
            (C30069 + C30068) * C50968 + (C30067 + C30066) * C38227 +
            C30054 * C50977 + C30055 * C38226) *
               C50796 * C1960) *
              C50732) *
         C50661) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C1544 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C50760) *
              C248 +
          ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
            C30057 * C50968 + (C30066 + C30067) * C38228 +
            (C30068 + C30069) * C38225) *
               C50796 * C50760 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C1544) *
              C249 +
          ((C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
            C30717 * C50968 + (C26897 + C26898) * C38228 +
            (C26899 + C26900) * C38225) *
               C50796 * C1544 -
           ((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
             C25530 * C10067) *
                C38225 +
            (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
             C25530 * C10065) *
                C38228 +
            (C26900 + C26899) * C50968 + (C26898 + C26897) * C38227 +
            C27387 * C50977 + C27388 * C38226) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C1544 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
            (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
            (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
               C50796 * C50760 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C38226 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50977 +
            (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
            (C38838 + C38839) * C38228 + (C38840 + C38841) * C38225) *
               C50796 * C1544 -
           ((C25536 * C1718 + C50635 * C1726 + C25535 * C1719 +
             C25530 * C1727) *
                C38225 +
            (C25536 * C1714 + C50635 * C1722 + C25535 * C1715 +
             C25530 * C1723) *
                C38228 +
            (C38841 + C38840) * C50968 + (C38839 + C38838) * C38227 +
            (C29269 + C29268) * C50977 + (C29267 + C29266) * C38226) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
               C38226 +
           (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
               C50977 +
           (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
           C38522 * C38228 + C38523 * C38225) *
              C50796 * C1710 -
          (C40302 * C38225 + C40303 * C38228 + (C28842 + C28843) * C50968 +
           (C28844 + C28845) * C38227 + (C28841 + C28840) * C50977 +
           (C28839 + C28838) * C38226) *
              C50796 * C1711 +
          (C38522 * C38226 + C38523 * C50977 + (C31244 + C31245) * C38227 +
           (C31246 + C31247) * C50968 + (C40312 + C40313) * C38228 +
           (C40314 + C40315) * C38225) *
              C50796 * C1712 -
          ((C25536 * C17588 + C50635 * C17592 + C25535 * C17589 +
            C25530 * C17593) *
               C38225 +
           (C25536 * C17586 + C50635 * C17590 + C25535 * C17587 +
            C25530 * C17591) *
               C38228 +
           (C40315 + C40314) * C50968 + (C40313 + C40312) * C38227 +
           C40302 * C50977 + C40303 * C38226) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C50974 -
           (C40302 * C38225 + C40303 * C38228 + (C28842 + C28843) * C50968 +
            (C28844 + C28845) * C38227 + (C28841 + C28840) * C50977 +
            (C28839 + C28838) * C38226) *
               C50796 * C50975 +
           (C38522 * C38226 + C38523 * C50977 + (C31244 + C31245) * C38227 +
            (C31246 + C31247) * C50968 + (C40312 + C40313) * C38228 +
            (C40314 + C40315) * C38225) *
               C50796 * C1960) *
              C50680 * C50920 +
          (((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
            (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
            (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
               C50796 * C50975 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C50974 -
           ((C25536 * C7162 + C50635 * C7168 + C25535 * C7163 +
             C25530 * C7169) *
                C38225 +
            (C25536 * C7159 + C50635 * C7165 + C25535 * C7160 +
             C25530 * C7166) *
                C38228 +
            (C38537 + C38536) * C50968 + (C38535 + C38534) * C38227 +
            C38532 * C50977 + C38533 * C38226) *
               C50796 * C1960) *
              C50680 * C50667)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C1544 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C28846 + C28847) * C38226 + (C28848 + C28849) * C50977 +
            (C28850 + C28851) * C38227 + (C28852 + C28853) * C50968 +
            (C38534 + C38535) * C38228 + (C38536 + C38537) * C38225) *
               C50796 * C50760 -
           (C38532 * C38225 + C38533 * C38228 + (C28849 + C28848) * C50968 +
            (C28847 + C28846) * C38227 +
            (C25536 * C135 + C50635 * C145 + C25535 * C134 + C25530 * C144) *
                C50977 +
            (C25536 * C124 + C50635 * C131 + C25535 * C123 + C25530 * C130) *
                C38226) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C25535 * C124 + C25530 * C131 + C25536 * C125 + C50635 * C132) *
                C38226 +
            (C25535 * C135 + C25530 * C145 + C25536 * C136 + C50635 * C146) *
                C50977 +
            (C29266 + C29267) * C38227 + (C29268 + C29269) * C50968 +
            (C38838 + C38839) * C38228 + (C38840 + C38841) * C38225) *
               C50796 * C1544 -
           ((C25536 * C1718 + C50635 * C1726 + C25535 * C1719 +
             C25530 * C1727) *
                C38225 +
            (C25536 * C1714 + C50635 * C1722 + C25535 * C1715 +
             C25530 * C1723) *
                C38228 +
            (C38841 + C38840) * C50968 + (C38839 + C38838) * C38227 +
            (C29269 + C29268) * C50977 + (C29267 + C29266) * C38226) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25535 * C122 + C25530 * C129 + C25536 * C123 + C50635 * C130) *
                C38226 +
            (C25535 * C133 + C25530 * C143 + C25536 * C134 + C50635 * C144) *
                C50977 +
            (C28838 + C28839) * C38227 + (C28840 + C28841) * C50968 +
            C38522 * C38228 + C38523 * C38225) *
               C50796 * C1544 -
           ((C31247 + C31246) * C38225 + (C31245 + C31244) * C38228 +
            (C28842 + C28843) * C50968 + (C28844 + C28845) * C38227 +
            (C28841 + C28840) * C50977 + (C28839 + C28838) * C38226) *
               C50796 * C50760) *
              C248 +
          ((C29528 * C38226 + C29529 * C50977 + C30056 * C38227 +
            C30057 * C50968 + (C30066 + C30067) * C38228 +
            (C30068 + C30069) * C38225) *
               C50796 * C50760 -
           (C30054 * C38225 + C30055 * C38228 + C29530 * C50968 +
            C29531 * C38227 + (C25735 + C25734) * C50977 +
            (C25733 + C25732) * C38226) *
               C50796 * C1544) *
              C249 +
          ((C25756 * C38226 + C25757 * C50977 + C30716 * C38227 +
            C30717 * C50968 + (C26897 + C26898) * C38228 +
            (C26899 + C26900) * C38225) *
               C50796 * C1544 -
           ((C25536 * C10062 + C50635 * C10066 + C25535 * C10063 +
             C25530 * C10067) *
                C38225 +
            (C25536 * C10060 + C50635 * C10064 + C25535 * C10061 +
             C25530 * C10065) *
                C38228 +
            (C26900 + C26899) * C50968 + (C26898 + C26897) * C38227 +
            C27387 * C50977 + C27388 * C38226) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C50928 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50732 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50696 * C50928 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50822 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50796 * C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C50928 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50732) *
              C50970 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50732 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C50928) *
              C50971 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50696 * C50928 -
           (((C49740 * C973 + C50635 * C981 + C49747 * C974 + C50911 * C982) *
                 C50822 +
             (C49740 * C969 + C50635 * C977 + C49747 * C970 + C50911 * C978) *
                 C121) *
                C7777 +
            ((C8324 + C8323) * C50822 + (C8322 + C8321) * C121) * C7776 +
            ((C8320 + C8319) * C50822 + (C8318 + C8317) * C121) * C7775) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50822 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50822 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50796 * C50929) *
               C50732) *
              C251 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50822 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50796 * C50929) *
               C50928 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50822 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C121 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C50822) *
                 C7775 +
             ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
             C8007 * C7777) *
                C50929 -
            (((C8697 + C8698) * C50822 + (C8699 + C8700) * C121) * C7777 +
             ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
             ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                  C50822 +
              (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                  C121) *
                 C7775) *
                C50760) *
               C50928 +
           ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
             ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
             ((C49747 * C4007 + C50911 * C4013 + C49740 * C4006 +
               C50635 * C4012) *
                  C121 +
              (C49747 * C4010 + C50911 * C4016 + C49740 * C4009 +
               C50635 * C4015) *
                  C50822) *
                 C7777) *
                C50760 -
            (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
             ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
             ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
                C50929) *
               C50732) *
              C251 +
          (((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                  C121 +
              (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                  C50822) *
                 C7775 +
             ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
             ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
                C50760 -
            (C8008 * C7777 +
             ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
             ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C50822 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C121) *
                 C7775) *
                C50929) *
               C50928 +
           ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
             ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
             ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
                C50929 -
            (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
               C50911 * C4015) *
                  C50822 +
              (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
               C50911 * C4012) *
                  C121) *
                 C7777 +
             ((C8712 + C8711) * C50822 + (C8710 + C8709) * C121) * C7776 +
             ((C8708 + C8707) * C50822 + (C8706 + C8705) * C121) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50696 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50822 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C50696 * C50680 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50822 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50796 * C50696 * C50680 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50822) *
              C50796 * C50696 * C50680 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50822 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C393) *
              C50680 * C251 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C392 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C391 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50822 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C49747 * C256 + C50911 * C270 + C49740 * C255 + C50635 * C269) *
                C121 +
            (C49747 * C266 + C50911 * C286 + C49740 * C265 + C50635 * C285) *
                C50822) *
               C7776 +
           ((C49747 * C257 + C50911 * C271 + C49740 * C258 + C50635 * C272) *
                C121 +
            (C49747 * C275 + C50911 * C287 + C49740 * C276 + C50635 * C288) *
                C50822) *
               C7777) *
              C50696 * C50680 * C113 -
          (((C49740 * C277 + C50635 * C289 + C49747 * C276 + C50911 * C288) *
                C50822 +
            (C49740 * C259 + C50635 * C273 + C49747 * C258 + C50911 * C272) *
                C121) *
               C7777 +
           ((C49740 * C264 + C50635 * C284 + C49747 * C265 + C50911 * C285) *
                C50822 +
            (C49740 * C254 + C50635 * C268 + C49747 * C255 + C50911 * C269) *
                C121) *
               C7776 +
           ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C50822 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C121) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C121 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C50822) *
               C7775 +
           ((C49747 * C254 + C50911 * C268 + C49740 * C253 + C50635 * C267) *
                C121 +
            (C49747 * C264 + C50911 * C284 + C49740 * C263 + C50635 * C283) *
                C50822) *
               C7776 +
           ((C49747 * C259 + C50911 * C273 + C49740 * C260 + C50635 * C274) *
                C121 +
            (C49747 * C277 + C50911 * C289 + C49740 * C278 + C50635 * C290) *
                C50822) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C49740 * C281 + C50635 * C292 + C49747 * C278 + C50911 * C290) *
                C50822 +
            (C49740 * C262 + C50635 * C282 + C49747 * C260 + C50911 * C274) *
                C121) *
               C7777 +
           ((C49740 * C280 + C50635 * C291 + C49747 * C263 + C50911 * C283) *
                C50822 +
            (C49740 * C261 + C50635 * C279 + C49747 * C253 + C50911 * C267) *
                C121) *
               C7776 +
           ((C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
                C50822 +
            (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
                C121) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C248 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C249 +
           (C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C49747 * C3315 + C50911 * C3321 + C49740 * C3314 +
              C50635 * C3320) *
                 C121 +
             (C49747 * C3318 + C50911 * C3324 + C49740 * C3317 +
              C50635 * C3323) *
                 C50822) *
                C7777) *
               C50696 * C250) *
              C251 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C249 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C248 -
           (((C49740 * C3316 + C50635 * C3322 + C49747 * C3317 +
              C50911 * C3323) *
                 C50822 +
             (C49740 * C3313 + C50635 * C3319 + C49747 * C3314 +
              C50911 * C3320) *
                 C121) *
                C7777 +
            ((C7998 + C7997) * C50822 + (C7996 + C7995) * C121) * C7776 +
            C8008 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C391 -
           (((C49740 * C1436 + C50635 * C1444 + C49747 * C1437 +
              C50911 * C1445) *
                 C50822 +
             (C49740 * C1432 + C50635 * C1440 + C49747 * C1433 +
              C50911 * C1441) *
                 C121) *
                C7777 +
            ((C49740 * C785 + C50635 * C791 + C49747 * C784 + C50911 * C790) *
                 C50822 +
             (C49740 * C776 + C50635 * C781 + C49747 * C775 + C50911 * C780) *
                 C121) *
                C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C392 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C49747 * C1086 + C50911 * C1094 + C49740 * C1085 +
              C50635 * C1093) *
                 C121 +
             (C49747 * C1090 + C50911 * C1098 + C49740 * C1089 +
              C50635 * C1097) *
                 C50822) *
                C7776 +
            ((C49747 * C3491 + C50911 * C3497 + C49740 * C3490 +
              C50635 * C3496) *
                 C121 +
             (C49747 * C3494 + C50911 * C3500 + C49740 * C3493 +
              C50635 * C3499) *
                 C50822) *
                C7777) *
               C393) *
              C50680 * C251 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C49747 * C776 + C50911 * C781 + C49740 * C777 + C50635 * C782) *
                 C121 +
             (C49747 * C785 + C50911 * C791 + C49740 * C786 + C50635 * C792) *
                 C50822) *
                C7776 +
            ((C49747 * C1432 + C50911 * C1440 + C49740 * C1431 +
              C50635 * C1439) *
                 C121 +
             (C49747 * C1436 + C50911 * C1444 + C49740 * C1435 +
              C50635 * C1443) *
                 C50822) *
                C7777) *
               C392 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C391 -
           (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
              C50911 * C3499) *
                 C50822 +
             (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
              C50911 * C3496) *
                 C121) *
                C7777 +
            ((C49740 * C1088 + C50635 * C1096 + C49747 * C1089 +
              C50911 * C1097) *
                 C50822 +
             (C49740 * C1084 + C50635 * C1092 + C49747 * C1085 +
              C50911 * C1093) *
                 C121) *
                C7776 +
            ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
                 C50822 +
             (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
                 C121) *
                C7775) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50822 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50796 * C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50929 -
           (((C49740 * C1436 + C50635 * C1444 + C49747 * C1437 +
              C50911 * C1445) *
                 C50822 +
             (C49740 * C1432 + C50635 * C1440 + C49747 * C1433 +
              C50911 * C1441) *
                 C121) *
                C7777 +
            ((C49740 * C785 + C50635 * C791 + C49747 * C784 + C50911 * C790) *
                 C50822 +
             (C49740 * C776 + C50635 * C781 + C49747 * C775 + C50911 * C780) *
                 C121) *
                C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C50970 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C49747 * C776 + C50911 * C781 + C49740 * C777 + C50635 * C782) *
                 C121 +
             (C49747 * C785 + C50911 * C791 + C49740 * C786 + C50635 * C792) *
                 C50822) *
                C7776 +
            ((C49747 * C1432 + C50911 * C1440 + C49740 * C1431 +
              C50635 * C1439) *
                 C121 +
             (C49747 * C1436 + C50911 * C1444 + C49740 * C1435 +
              C50635 * C1443) *
                 C50822) *
                C7777) *
               C50760 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50929) *
              C50680 * C50971 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50929 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50822 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C121) *
                C7777 +
            ((C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                 C50822 +
             (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                 C121) *
                C7776 +
            ((C49740 * C404 + C50635 * C424 + C49747 * C405 + C50911 * C425) *
                 C50822 +
             (C49740 * C394 + C50635 * C408 + C49747 * C395 + C50911 * C409) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C50696 * C50680 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50822 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50796 * C50696 * C50680 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50822) *
              C50796 * C50696 * C50680 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50822 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50696 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50822 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C49747 * C256 + C50911 * C270 + C49740 * C255 + C50635 * C269) *
                C121 +
            (C49747 * C266 + C50911 * C286 + C49740 * C265 + C50635 * C285) *
                C50822) *
               C7776 +
           ((C49747 * C257 + C50911 * C271 + C49740 * C258 + C50635 * C272) *
                C121 +
            (C49747 * C275 + C50911 * C287 + C49740 * C276 + C50635 * C288) *
                C50822) *
               C7777) *
              C50696 * C50680 * C113 -
          (((C49740 * C277 + C50635 * C289 + C49747 * C276 + C50911 * C288) *
                C50822 +
            (C49740 * C259 + C50635 * C273 + C49747 * C258 + C50911 * C272) *
                C121) *
               C7777 +
           ((C49740 * C264 + C50635 * C284 + C49747 * C265 + C50911 * C285) *
                C50822 +
            (C49740 * C254 + C50635 * C268 + C49747 * C255 + C50911 * C269) *
                C121) *
               C7776 +
           ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                C50822 +
            (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                C121) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                C121 +
            (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                C50822) *
               C7775 +
           ((C49747 * C254 + C50911 * C268 + C49740 * C253 + C50635 * C267) *
                C121 +
            (C49747 * C264 + C50911 * C284 + C49740 * C263 + C50635 * C283) *
                C50822) *
               C7776 +
           ((C49747 * C259 + C50911 * C273 + C49740 * C260 + C50635 * C274) *
                C121 +
            (C49747 * C277 + C50911 * C289 + C49740 * C278 + C50635 * C290) *
                C50822) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C49740 * C281 + C50635 * C292 + C49747 * C278 + C50911 * C290) *
                C50822 +
            (C49740 * C262 + C50635 * C282 + C49747 * C260 + C50911 * C274) *
                C121) *
               C7777 +
           ((C49740 * C280 + C50635 * C291 + C49747 * C263 + C50911 * C283) *
                C50822 +
            (C49740 * C261 + C50635 * C279 + C49747 * C253 + C50911 * C267) *
                C121) *
               C7776 +
           ((C49740 * C137 + C50635 * C147 + C49747 * C136 + C50911 * C146) *
                C50822 +
            (C49740 * C126 + C50635 * C138 + C49747 * C125 + C50911 * C132) *
                C121) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C248 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C249 +
           (C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C49747 * C3315 + C50911 * C3321 + C49740 * C3314 +
              C50635 * C3320) *
                 C121 +
             (C49747 * C3318 + C50911 * C3324 + C49740 * C3317 +
              C50635 * C3323) *
                 C50822) *
                C7777) *
               C50696 * C250) *
              C251 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C249 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C248 -
           (((C49740 * C3316 + C50635 * C3322 + C49747 * C3317 +
              C50911 * C3323) *
                 C50822 +
             (C49740 * C3313 + C50635 * C3319 + C49747 * C3314 +
              C50911 * C3320) *
                 C121) *
                C7777 +
            ((C7998 + C7997) * C50822 + (C7996 + C7995) * C121) * C7776 +
            C8008 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C50972 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50973 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50696 * C1199) *
              C50920 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50973 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C50972 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50822 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50796 * C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C50972 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50973 +
           (C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C50696 * C1199) *
              C50920 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50973 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C50972 -
           (((C49740 * C3316 + C50635 * C3322 + C49747 * C3317 +
              C50911 * C3323) *
                 C50822 +
             (C49740 * C3313 + C50635 * C3319 + C49747 * C3314 +
              C50911 * C3320) *
                 C121) *
                C7777 +
            ((C7998 + C7997) * C50822 + (C7996 + C7995) * C121) * C7776 +
            C8008 * C7775) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50972 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50929) *
              C50973 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C50929 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50822 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50796 * C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50929 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50972 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50760 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50929) *
              C50973 +
          ((C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C50929 -
           (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
              C50911 * C9652) *
                 C50822 +
             (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
              C50911 * C9650) *
                 C121) *
                C7777 +
            ((C9669 + C9668) * C50822 + (C9667 + C9666) * C121) * C7776 +
            C9670 * C7775) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C50696 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50822 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50796 * C50696 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50822) *
              C50796 * C50696 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50822 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50732 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50696 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50822 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C393) *
              C893 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C392 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C391 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50822 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C893 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50732) *
              C895 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50732 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50696 * C893 -
           (((C49740 * C973 + C50635 * C981 + C49747 * C974 + C50911 * C982) *
                 C50822 +
             (C49740 * C969 + C50635 * C977 + C49747 * C970 + C50911 * C978) *
                 C121) *
                C7777 +
            ((C8324 + C8323) * C50822 + (C8322 + C8321) * C121) * C7776 +
            ((C8320 + C8319) * C50822 + (C8318 + C8317) * C121) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
           C8007 * C7777) *
              C50696 * C964 -
          (C8981 * C7777 +
           ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
           ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
              C50696 * C965 +
          (C8007 * C7775 +
           ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
           ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
              C50696 * C966 -
          (((C49740 * C8958 + C50635 * C8962 + C49747 * C8959 +
             C50911 * C8963) *
                C50822 +
            (C49740 * C8956 + C50635 * C8960 + C49747 * C8957 +
             C50911 * C8961) *
                C121) *
               C7777 +
           ((C8980 + C8979) * C50822 + (C8978 + C8977) * C121) * C7776 +
           C8981 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C391 -
           (((C8697 + C8698) * C50822 + (C8699 + C8700) * C121) * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C392 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
            ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
               C393) *
              C893 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C49747 * C4007 + C50911 * C4013 + C49740 * C4006 +
              C50635 * C4012) *
                 C121 +
             (C49747 * C4010 + C50911 * C4016 + C49740 * C4009 +
              C50635 * C4015) *
                 C50822) *
                C7777) *
               C392 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C391 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50822 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C121) *
                C7777 +
            ((C9159 + C9158) * C50822 + (C9157 + C9156) * C121) * C7776 +
            ((C9155 + C9154) * C50822 + (C9153 + C9152) * C121) * C7775) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50822 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50796 * C50760) *
               C893 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50822 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50822 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50796 * C50929) *
               C893 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50822) *
                C50796 * C50929 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50822 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C121 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C50822) *
                 C7775 +
             ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
             C8007 * C7777) *
                C50929 -
            (((C8697 + C8698) * C50822 + (C8699 + C8700) * C121) * C7777 +
             ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
             ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                  C50822 +
              (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                  C121) *
                 C7775) *
                C50760) *
               C893 +
           ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
             ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
             ((C49747 * C4007 + C50911 * C4013 + C49740 * C4006 +
               C50635 * C4012) *
                  C121 +
              (C49747 * C4010 + C50911 * C4016 + C49740 * C4009 +
               C50635 * C4015) *
                  C50822) *
                 C7777) *
                C50760 -
            (C8981 * C7777 +
             ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
             ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
                C50929) *
               C50732) *
              C50920 +
          (((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                  C121 +
              (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                  C50822) *
                 C7775 +
             ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
             ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
                C50760 -
            (C8008 * C7777 +
             ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
             ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C50822 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C121) *
                 C7775) *
                C50929) *
               C893 +
           ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
             ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
             ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
                C50929 -
            (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
               C50911 * C4015) *
                  C50822 +
              (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
               C50911 * C4012) *
                  C121) *
                 C7777 +
             ((C8712 + C8711) * C50822 + (C8710 + C8709) * C121) * C7776 +
             ((C8708 + C8707) * C50822 + (C8706 + C8705) * C121) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50696 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50822) *
               C50796 * C50696 * C50732 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50696 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C50696 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50822 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C50696 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50822 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50796 * C50696 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50822) *
              C50796 * C50696 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50822 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50696 * C893 -
           (((C7983 + C7984) * C50822 + (C7985 + C7986) * C121) * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50696 * C50732) *
              C895 +
          ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
            ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
            ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
               C50696 * C50732 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C50696 * C893 -
           (((C49740 * C973 + C50635 * C981 + C49747 * C974 + C50911 * C982) *
                 C50822 +
             (C49740 * C969 + C50635 * C977 + C49747 * C970 + C50911 * C978) *
                 C121) *
                C7777 +
            ((C8324 + C8323) * C50822 + (C8322 + C8321) * C121) * C7776 +
            ((C8320 + C8319) * C50822 + (C8318 + C8317) * C121) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
           C8007 * C7777) *
              C50696 * C964 -
          (C8981 * C7777 +
           ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
           ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
              C50696 * C965 +
          (C8007 * C7775 +
           ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
           ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
              C50696 * C966 -
          (((C49740 * C8958 + C50635 * C8962 + C49747 * C8959 +
             C50911 * C8963) *
                C50822 +
            (C49740 * C8956 + C50635 * C8960 + C49747 * C8957 +
             C50911 * C8961) *
                C121) *
               C7777 +
           ((C8980 + C8979) * C50822 + (C8978 + C8977) * C121) * C7776 +
           C8981 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50822) *
                C50796 * C1544 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50822 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50796 * C50760) *
               C50928 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50822 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50822) *
                C50796 * C50760 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50822 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50796 * C1544) *
               C50928 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50822) *
                C50796 * C1544 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50822 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                  C121 +
              (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                  C50822) *
                 C7775 +
             ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
             C8007 * C7777) *
                C1544 -
            (C9670 * C7777 +
             ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
             ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                  C50822 +
              (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                  C121) *
                 C7775) *
                C50760) *
               C50928 +
           ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
             ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
             ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
                C50760 -
            (C8981 * C7777 +
             ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
             ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
                C1544) *
               C50732) *
              C50920 +
          (((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                  C121 +
              (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                  C50822) *
                 C7775 +
             ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
             ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
                C50760 -
            (C8008 * C7777 +
             ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
             ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                  C50822 +
              (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                  C121) *
                 C7775) *
                C1544) *
               C50928 +
           ((((C7987 + C7988) * C121 + (C7989 + C7990) * C50822) * C7775 +
             ((C7991 + C7992) * C121 + (C7993 + C7994) * C50822) * C7776 +
             ((C7995 + C7996) * C121 + (C7997 + C7998) * C50822) * C7777) *
                C1544 -
            (((C49740 * C4008 + C50635 * C4014 + C49747 * C4009 +
               C50911 * C4015) *
                  C50822 +
              (C49740 * C4005 + C50635 * C4011 + C49747 * C4006 +
               C50911 * C4012) *
                  C121) *
                 C7777 +
             ((C8712 + C8711) * C50822 + (C8710 + C8709) * C121) * C7776 +
             ((C8708 + C8707) * C50822 + (C8706 + C8705) * C121) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50974 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50975 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C1960) *
              C50928 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50975 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C50974 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50822 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50796 * C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50974 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50975 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
            ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
               C1960) *
              C50928 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50975 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C50974 -
           (((C49740 * C9129 + C50635 * C9133 + C49747 * C9130 +
              C50911 * C9134) *
                 C50822 +
             (C49740 * C9127 + C50635 * C9131 + C49747 * C9128 +
              C50911 * C9132) *
                 C121) *
                C7777 +
            ((C9159 + C9158) * C50822 + (C9157 + C9156) * C121) * C7776 +
            ((C9155 + C9154) * C50822 + (C9153 + C9152) * C121) * C7775) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50822 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50822 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50822) *
              C50796 * C1710 -
          ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
            C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
               C50822 +
           (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
            C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
               C121) *
              C50796 * C1711 +
          ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
            C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
               C121 +
           (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
            C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
               C50822) *
              C50796 * C1712 -
          ((C120 * C1718 + C108 * C1726 + C119 * C1719 + C107 * C1727 +
            C118 * C1720 + C106 * C1728 + C117 * C1721 + C105 * C1729) *
               C50822 +
           (C120 * C1714 + C108 * C1722 + C119 * C1715 + C107 * C1723 +
            C118 * C1716 + C106 * C1724 + C117 * C1717 + C105 * C1725) *
               C121) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C895 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
            ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
               C50760 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C1544 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50822 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C121) *
                C7777 +
            ((C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                 C50822 +
             (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                 C121) *
                C7776 +
            ((C49740 * C404 + C50635 * C424 + C49747 * C405 + C50911 * C425) *
                 C50822 +
             (C49740 * C394 + C50635 * C408 + C49747 * C395 + C50911 * C409) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C248 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50760 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C1544) *
              C249 +
          ((C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C1544 -
           (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
              C50911 * C9652) *
                 C50822 +
             (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
              C50911 * C9650) *
                 C121) *
                C7777 +
            ((C9669 + C9668) * C50822 + (C9667 + C9666) * C121) * C7776 +
            C9670 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                C121 +
            (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                C50822) *
               C7775 +
           ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
           C8007 * C7777) *
              C1710 -
          (C9670 * C7777 +
           ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
           ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                C50822 +
            (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                C121) *
               C7775) *
              C1711 +
          (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                C121 +
            (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                C50822) *
               C7775 +
           ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
           ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
              C1712 -
          (((C49740 * C10062 + C50635 * C10066 + C49747 * C10063 +
             C50911 * C10067) *
                C50822 +
            (C49740 * C10060 + C50635 * C10064 + C49747 * C10061 +
             C50911 * C10065) *
                C121) *
               C7777 +
           ((C49740 * C4429 + C50635 * C4435 + C49747 * C4430 +
             C50911 * C4436) *
                C50822 +
            (C49740 * C4426 + C50635 * C4432 + C49747 * C4427 +
             C50911 * C4433) *
                C121) *
               C7776 +
           ((C49740 * C1720 + C50635 * C1728 + C49747 * C1721 +
             C50911 * C1729) *
                C50822 +
            (C49740 * C1716 + C50635 * C1724 + C49747 * C1717 +
             C50911 * C1725) *
                C121) *
               C7775) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C50974 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50975 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50822) *
               C50796 * C1960) *
              C50680 * C50920 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50975 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C50974 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50822 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50796 * C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C50974 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50975 +
           (((C49747 * C398 + C50911 * C412 + C49740 * C399 + C50635 * C413) *
                 C121 +
             (C49747 * C416 + C50911 * C428 + C49740 * C417 + C50635 * C429) *
                 C50822) *
                C7775 +
            ((C9152 + C9153) * C121 + (C9154 + C9155) * C50822) * C7776 +
            ((C9156 + C9157) * C121 + (C9158 + C9159) * C50822) * C7777) *
               C1960) *
              C50680 * C50920 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
            ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
               C50975 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C50974 -
           (((C49740 * C3492 + C50635 * C3498 + C49747 * C3493 +
              C50911 * C3499) *
                 C50822 +
             (C49740 * C3489 + C50635 * C3495 + C49747 * C3490 +
              C50911 * C3496) *
                 C121) *
                C7777 +
            ((C49740 * C1088 + C50635 * C1096 + C49747 * C1089 +
              C50911 * C1097) *
                 C50822 +
             (C49740 * C1084 + C50635 * C1092 + C49747 * C1085 +
              C50911 * C1093) *
                 C121) *
                C7776 +
            ((C49740 * C418 + C50635 * C430 + C49747 * C417 + C50911 * C429) *
                 C50822 +
             (C49740 * C400 + C50635 * C414 + C49747 * C399 + C50911 * C413) *
                 C121) *
                C7775) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50822 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50822 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50822 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50796 * C50760) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50822) *
               C50796 * C50760 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50822 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50796 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50822) *
               C50796 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50822 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C895 +
          ((((C49747 * C396 + C50911 * C410 + C49740 * C395 + C50635 * C409) *
                 C121 +
             (C49747 * C406 + C50911 * C426 + C49740 * C405 + C50635 * C425) *
                 C50822) *
                C7775 +
            ((C8705 + C8706) * C121 + (C8707 + C8708) * C50822) * C7776 +
            ((C8709 + C8710) * C121 + (C8711 + C8712) * C50822) * C7777) *
               C50760 -
           (C8008 * C7777 +
            ((C7990 + C7989) * C50822 + (C7988 + C7987) * C121) * C7776 +
            ((C49740 * C135 + C50635 * C145 + C49747 * C134 + C50911 * C144) *
                 C50822 +
             (C49740 * C124 + C50635 * C131 + C49747 * C123 + C50911 * C130) *
                 C121) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C49747 * C124 + C50911 * C131 + C49740 * C125 + C50635 * C132) *
                 C121 +
             (C49747 * C135 + C50911 * C145 + C49740 * C136 + C50635 * C146) *
                 C50822) *
                C7775 +
            ((C8317 + C8318) * C121 + (C8319 + C8320) * C50822) * C7776 +
            ((C8321 + C8322) * C121 + (C8323 + C8324) * C50822) * C7777) *
               C1544 -
           (((C49740 * C1434 + C50635 * C1442 + C49747 * C1435 +
              C50911 * C1443) *
                 C50822 +
             (C49740 * C1430 + C50635 * C1438 + C49747 * C1431 +
              C50911 * C1439) *
                 C121) *
                C7777 +
            ((C49740 * C787 + C50635 * C793 + C49747 * C786 + C50911 * C792) *
                 C50822 +
             (C49740 * C778 + C50635 * C783 + C49747 * C777 + C50911 * C782) *
                 C121) *
                C7776 +
            ((C49740 * C404 + C50635 * C424 + C49747 * C405 + C50911 * C425) *
                 C50822 +
             (C49740 * C394 + C50635 * C408 + C49747 * C395 + C50911 * C409) *
                 C121) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50911 * C129 + C49740 * C123 + C50635 * C130) *
                 C121 +
             (C49747 * C133 + C50911 * C143 + C49740 * C134 + C50635 * C144) *
                 C50822) *
                C7775 +
            ((C7975 + C7976) * C121 + (C7977 + C7978) * C50822) * C7776 +
            C8007 * C7777) *
               C1544 -
           (C9670 * C7777 +
            ((C8701 + C8702) * C50822 + (C8703 + C8704) * C121) * C7776 +
            ((C49740 * C406 + C50635 * C426 + C49747 * C407 + C50911 * C427) *
                 C50822 +
             (C49740 * C396 + C50635 * C410 + C49747 * C397 + C50911 * C411) *
                 C121) *
                C7775) *
               C50760) *
              C248 +
          ((((C8704 + C8703) * C121 + (C8702 + C8701) * C50822) * C7775 +
            ((C8700 + C8699) * C121 + (C8698 + C8697) * C50822) * C7776 +
            ((C9666 + C9667) * C121 + (C9668 + C9669) * C50822) * C7777) *
               C50760 -
           (C8981 * C7777 +
            ((C7982 + C7981) * C50822 + (C7980 + C7979) * C121) * C7776 +
            ((C7978 + C7977) * C50822 + (C7976 + C7975) * C121) * C7775) *
               C1544) *
              C249 +
          ((C8007 * C7775 +
            ((C7986 + C7985) * C121 + (C7984 + C7983) * C50822) * C7776 +
            ((C8977 + C8978) * C121 + (C8979 + C8980) * C50822) * C7777) *
               C1544 -
           (((C49740 * C9647 + C50635 * C9651 + C49747 * C9648 +
              C50911 * C9652) *
                 C50822 +
             (C49740 * C9645 + C50635 * C9649 + C49747 * C9646 +
              C50911 * C9650) *
                 C121) *
                C7777 +
            ((C9669 + C9668) * C50822 + (C9667 + C9666) * C121) * C7776 +
            C9670 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C50928 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50732) *
              C50970 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50732 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C50928) *
              C50971 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50696 * C50928 -
           (((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
              C2162 * C277 + C2157 * C289) *
                 C50822 +
             (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
              C2162 * C259 + C2157 * C273) *
                 C121) *
                C50810 +
            ((C2693 + C2692 + C2691) * C50822 +
             (C2690 + C2689 + C2688) * C121) *
                C50939) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C50928 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C50732) *
              C50970 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50732 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50696 * C50928 -
           (((C10625 * C3316 + C50630 * C3322) * C50822 +
             (C10625 * C3313 + C50630 * C3319) * C121) *
                C10624 +
            (C11012 + C11011) * C10623 + (C11010 + C11009) * C10622 +
            (C11008 + C11007) * C10621) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50822) *
                 C50939 +
             ((C2360 + C2361 + C2362) * C121 +
              (C2363 + C2364 + C2365) * C50822) *
                 C50810) *
                C50929 -
            (((C3058 + C3059 + C3060) * C50822 +
              (C3061 + C3062 + C3063) * C121) *
                 C50810 +
             ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
               C2162 * C407 + C2157 * C427) *
                  C50822 +
              (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
               C2162 * C397 + C2157 * C411) *
                  C121) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C3063 + C3062 + C3061) * C121 +
              (C3060 + C3059 + C3058) * C50822) *
                 C50939 +
             ((C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
               C2164 * C1431 + C2159 * C1439) *
                  C121 +
              (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
               C2164 * C1435 + C2159 * C1443) *
                  C50822) *
                 C50810) *
                C50760 -
            (((C2366 + C2367 + C2368) * C50822 +
              (C2369 + C2370 + C2371) * C121) *
                 C50810 +
             ((C2365 + C2364 + C2363) * C50822 +
              (C2362 + C2361 + C2360) * C121) *
                 C50939) *
                C50929) *
               C50732) *
              C251 +
          (((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
               C2164 * C394 + C2159 * C408) *
                  C121 +
              (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
               C2164 * C404 + C2159 * C424) *
                  C50822) *
                 C50939 +
             ((C3064 + C3065 + C3066) * C121 +
              (C3067 + C3068 + C3069) * C50822) *
                 C50810) *
                C50760 -
            (((C2377 + C2376 + C2375) * C50822 +
              (C2374 + C2373 + C2372) * C121) *
                 C50810 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50822 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50939) *
                C50929) *
               C50928 +
           ((((C2372 + C2373 + C2374) * C121 +
              (C2375 + C2376 + C2377) * C50822) *
                 C50939 +
             ((C2378 + C2379 + C2380) * C121 +
              (C2381 + C2382 + C2383) * C50822) *
                 C50810) *
                C50929 -
            (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
               C2162 * C1436 + C2157 * C1444) *
                  C50822 +
              (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
               C2162 * C1432 + C2157 * C1440) *
                  C121) *
                 C50810 +
             ((C3069 + C3068 + C3067) * C50822 +
              (C3066 + C3065 + C3064) * C121) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C121 +
              (C10625 * C133 + C50630 * C143) * C50822) *
                 C10621 +
             (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
                C50929 -
            ((C11277 + C11278) * C10624 + (C11279 + C11280) * C10623 +
             (C11281 + C11282) * C10622 +
             ((C10625 * C407 + C50630 * C427) * C50822 +
              (C10625 * C397 + C50630 * C411) * C121) *
                 C10621) *
                C50760) *
               C50928 +
           (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
             (C11278 + C11277) * C10623 +
             ((C10625 * C9646 + C50630 * C9650) * C121 +
              (C10625 * C9648 + C50630 * C9652) * C50822) *
                 C10624) *
                C50760 -
            ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
             (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
                C50929) *
               C50732) *
              C251 +
          (((((C10625 * C396 + C50630 * C410) * C121 +
              (C10625 * C406 + C50630 * C426) * C50822) *
                 C10621 +
             (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
             (C11287 + C11288) * C10624) *
                C50760 -
            (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
             ((C10625 * C134 + C50630 * C144) * C50822 +
              (C10625 * C123 + C50630 * C130) * C121) *
                 C10621) *
                C50929) *
               C50928 +
           (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
             (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
                C50929 -
            (((C10625 * C9647 + C50630 * C9651) * C50822 +
              (C10625 * C9645 + C50630 * C9649) * C121) *
                 C10624 +
             (C11288 + C11287) * C10623 + (C11286 + C11285) * C10622 +
             (C11284 + C11283) * C10621) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C248 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C249 +
           (((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
              C2164 * C970 + C2159 * C978) *
                 C121 +
             (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
              C2164 * C974 + C2159 * C982) *
                 C50822) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C249 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C248 -
           (((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
              C2162 * C975 + C2157 * C983) *
                 C50822 +
             (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
              C2162 * C971 + C2157 * C979) *
                 C121) *
                C50810 +
            ((C2383 + C2382 + C2381) * C50822 +
             (C2380 + C2379 + C2378) * C121) *
                C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
             C2164 * C254 + C2159 * C268) *
                C121 +
            (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
             C2164 * C264 + C2159 * C284) *
                C50822) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
             C2162 * C265 + C2157 * C285) *
                C50822 +
            (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
             C2162 * C255 + C2157 * C269) *
                C121) *
               C50810 +
           ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50822 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C121) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50822) *
               C50939 +
           ((C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
             C2164 * C261 + C2159 * C279) *
                C121 +
            (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
             C2164 * C280 + C2159 * C291) *
                C50822) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
             C2162 * C263 + C2157 * C283) *
                C50822 +
            (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
             C2162 * C253 + C2157 * C267) *
                C121) *
               C50810 +
           ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
             C2162 * C136 + C2157 * C146) *
                C50822 +
            (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
             C2162 * C125 + C2157 * C132) *
                C121) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C391 -
           (((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
              C2162 * C784 + C2157 * C790) *
                 C50822 +
             (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
              C2162 * C775 + C2157 * C780) *
                 C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C392 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C2162 * C1086 + C2157 * C1094 + C2163 * C1085 + C2158 * C1093 +
              C2164 * C1084 + C2159 * C1092) *
                 C121 +
             (C2162 * C1090 + C2157 * C1098 + C2163 * C1089 + C2158 * C1097 +
              C2164 * C1088 + C2159 * C1096) *
                 C50822) *
                C50810) *
               C393) *
              C50680 * C251 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
              C2164 * C778 + C2159 * C783) *
                 C121 +
             (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
              C2164 * C787 + C2159 * C793) *
                 C50822) *
                C50810) *
               C392 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C391 -
           (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50822 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C121) *
                C50810 +
            ((C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
              C2162 * C417 + C2157 * C429) *
                 C50822 +
             (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
              C2162 * C399 + C2157 * C413) *
                 C121) *
                C50939) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           ((C10625 * C256 + C50630 * C270) * C121 +
            (C10625 * C266 + C50630 * C286) * C50822) *
               C10622 +
           ((C10625 * C257 + C50630 * C271) * C121 +
            (C10625 * C275 + C50630 * C287) * C50822) *
               C10623 +
           ((C10625 * C972 + C50630 * C980) * C121 +
            (C10625 * C976 + C50630 * C984) * C50822) *
               C10624) *
              C50696 * C50680 * C113 -
          (((C10625 * C975 + C50630 * C983) * C50822 +
            (C10625 * C971 + C50630 * C979) * C121) *
               C10624 +
           ((C10625 * C276 + C50630 * C288) * C50822 +
            (C10625 * C258 + C50630 * C272) * C121) *
               C10623 +
           ((C10625 * C265 + C50630 * C285) * C50822 +
            (C10625 * C255 + C50630 * C269) * C121) *
               C10622 +
           ((C10625 * C134 + C50630 * C144) * C50822 +
            (C10625 * C123 + C50630 * C130) * C121) *
               C10621) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C121 +
            (C10625 * C135 + C50630 * C145) * C50822) *
               C10621 +
           ((C10625 * C254 + C50630 * C268) * C121 +
            (C10625 * C264 + C50630 * C284) * C50822) *
               C10622 +
           ((C10625 * C259 + C50630 * C273) * C121 +
            (C10625 * C277 + C50630 * C289) * C50822) *
               C10623 +
           ((C10625 * C970 + C50630 * C978) * C121 +
            (C10625 * C974 + C50630 * C982) * C50822) *
               C10624) *
              C50696 * C50680 * C115 -
          (((C10625 * C973 + C50630 * C981) * C50822 +
            (C10625 * C969 + C50630 * C977) * C121) *
               C10624 +
           ((C10625 * C278 + C50630 * C290) * C50822 +
            (C10625 * C260 + C50630 * C274) * C121) *
               C10623 +
           ((C10625 * C263 + C50630 * C283) * C50822 +
            (C10625 * C253 + C50630 * C267) * C121) *
               C10622 +
           ((C10625 * C136 + C50630 * C146) * C50822 +
            (C10625 * C125 + C50630 * C132) * C121) *
               C10621) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C248 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C249 +
           (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            ((C10625 * C8957 + C50630 * C8961) * C121 +
             (C10625 * C8959 + C50630 * C8963) * C50822) *
                C10624) *
               C50696 * C250) *
              C251 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C249 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C248 -
           (((C10625 * C8958 + C50630 * C8962) * C50822 +
             (C10625 * C8956 + C50630 * C8960) * C121) *
                C10624 +
            (C10788 + C10787) * C10623 + C10791 * C10622 + C10792 * C10621) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C391 -
           (((C10625 * C4010 + C50630 * C4016) * C50822 +
             (C10625 * C4007 + C50630 * C4013) * C121) *
                C10624 +
            ((C10625 * C1437 + C50630 * C1445) * C50822 +
             (C10625 * C1433 + C50630 * C1441) * C121) *
                C10623 +
            ((C10625 * C784 + C50630 * C790) * C50822 +
             (C10625 * C775 + C50630 * C780) * C121) *
                C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C392 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            ((C10625 * C1086 + C50630 * C1094) * C121 +
             (C10625 * C1090 + C50630 * C1098) * C50822) *
                C10622 +
            ((C10625 * C3491 + C50630 * C3497) * C121 +
             (C10625 * C3494 + C50630 * C3500) * C50822) *
                C10623 +
            ((C10625 * C9128 + C50630 * C9132) * C121 +
             (C10625 * C9130 + C50630 * C9134) * C50822) *
                C10624) *
               C393) *
              C50680 * C251 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            ((C10625 * C776 + C50630 * C781) * C121 +
             (C10625 * C785 + C50630 * C791) * C50822) *
                C10622 +
            ((C10625 * C1432 + C50630 * C1440) * C121 +
             (C10625 * C1436 + C50630 * C1444) * C50822) *
                C10623 +
            ((C10625 * C4006 + C50630 * C4012) * C121 +
             (C10625 * C4009 + C50630 * C4015) * C50822) *
                C10624) *
               C392 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C391 -
           (((C10625 * C9129 + C50630 * C9133) * C50822 +
             (C10625 * C9127 + C50630 * C9131) * C121) *
                C10624 +
            ((C10625 * C3493 + C50630 * C3499) * C50822 +
             (C10625 * C3490 + C50630 * C3496) * C121) *
                C10623 +
            ((C10625 * C1089 + C50630 * C1097) * C50822 +
             (C10625 * C1085 + C50630 * C1093) * C121) *
                C10622 +
            ((C10625 * C417 + C50630 * C429) * C50822 +
             (C10625 * C399 + C50630 * C413) * C121) *
                C10621) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50929 -
           (((C2164 * C786 + C2159 * C792 + C2163 * C785 + C2158 * C791 +
              C2162 * C784 + C2157 * C790) *
                 C50822 +
             (C2164 * C777 + C2159 * C782 + C2163 * C776 + C2158 * C781 +
              C2162 * C775 + C2157 * C780) *
                 C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C50970 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C2162 * C776 + C2157 * C781 + C2163 * C777 + C2158 * C782 +
              C2164 * C778 + C2159 * C783) *
                 C121 +
             (C2162 * C785 + C2157 * C791 + C2163 * C786 + C2158 * C792 +
              C2164 * C787 + C2159 * C793) *
                 C50822) *
                C50810) *
               C50760 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50929) *
              C50680 * C50971 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50929 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50822 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50810 +
            ((C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
              C2162 * C405 + C2157 * C425) *
                 C50822 +
             (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
              C2162 * C395 + C2157 * C409) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50929 -
           (((C10625 * C4010 + C50630 * C4016) * C50822 +
             (C10625 * C4007 + C50630 * C4013) * C121) *
                C10624 +
            ((C10625 * C1437 + C50630 * C1445) * C50822 +
             (C10625 * C1433 + C50630 * C1441) * C121) *
                C10623 +
            ((C10625 * C784 + C50630 * C790) * C50822 +
             (C10625 * C775 + C50630 * C780) * C121) *
                C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50680 * C50970 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            ((C10625 * C776 + C50630 * C781) * C121 +
             (C10625 * C785 + C50630 * C791) * C50822) *
                C10622 +
            ((C10625 * C1432 + C50630 * C1440) * C121 +
             (C10625 * C1436 + C50630 * C1444) * C50822) *
                C10623 +
            ((C10625 * C4006 + C50630 * C4012) * C121 +
             (C10625 * C4009 + C50630 * C4015) * C50822) *
                C10624) *
               C50760 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50929 -
           (((C10625 * C4008 + C50630 * C4014) * C50822 +
             (C10625 * C4005 + C50630 * C4011) * C121) *
                C10624 +
            ((C10625 * C1435 + C50630 * C1443) * C50822 +
             (C10625 * C1431 + C50630 * C1439) * C121) *
                C10623 +
            ((C10625 * C786 + C50630 * C792) * C50822 +
             (C10625 * C777 + C50630 * C782) * C121) *
                C10622 +
            ((C10625 * C405 + C50630 * C425) * C50822 +
             (C10625 * C395 + C50630 * C409) * C121) *
                C10621) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2162 * C256 + C2157 * C270 + C2163 * C255 + C2158 * C269 +
             C2164 * C254 + C2159 * C268) *
                C121 +
            (C2162 * C266 + C2157 * C286 + C2163 * C265 + C2158 * C285 +
             C2164 * C264 + C2159 * C284) *
                C50822) *
               C50810) *
              C50696 * C50680 * C113 -
          (((C2164 * C263 + C2159 * C283 + C2163 * C264 + C2158 * C284 +
             C2162 * C265 + C2157 * C285) *
                C50822 +
            (C2164 * C253 + C2159 * C267 + C2163 * C254 + C2158 * C268 +
             C2162 * C255 + C2157 * C269) *
                C121) *
               C50810 +
           ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50822 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C121) *
               C50939) *
              C50696 * C50680 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50822) *
               C50939 +
           ((C2162 * C254 + C2157 * C268 + C2163 * C253 + C2158 * C267 +
             C2164 * C261 + C2159 * C279) *
                C121 +
            (C2162 * C264 + C2157 * C284 + C2163 * C263 + C2158 * C283 +
             C2164 * C280 + C2159 * C291) *
                C50822) *
               C50810) *
              C50696 * C50680 * C115 -
          (((C2164 * C538 + C2159 * C540 + C2163 * C280 + C2158 * C291 +
             C2162 * C263 + C2157 * C283) *
                C50822 +
            (C2164 * C537 + C2159 * C539 + C2163 * C261 + C2158 * C279 +
             C2162 * C253 + C2157 * C267) *
                C121) *
               C50810 +
           ((C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
             C2162 * C136 + C2157 * C146) *
                C50822 +
            (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
             C2162 * C125 + C2157 * C132) *
                C121) *
               C50939) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C248 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C249 +
           (((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C2162 * C972 + C2157 * C980 + C2163 * C971 + C2158 * C979 +
              C2164 * C970 + C2159 * C978) *
                 C121 +
             (C2162 * C976 + C2157 * C984 + C2163 * C975 + C2158 * C983 +
              C2164 * C974 + C2159 * C982) *
                 C50822) *
                C50810) *
               C50696 * C250) *
              C251 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C249 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C248 -
           (((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
              C2162 * C975 + C2157 * C983) *
                 C50822 +
             (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
              C2162 * C971 + C2157 * C979) *
                 C121) *
                C50810 +
            ((C2383 + C2382 + C2381) * C50822 +
             (C2380 + C2379 + C2378) * C121) *
                C50939) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           ((C10625 * C256 + C50630 * C270) * C121 +
            (C10625 * C266 + C50630 * C286) * C50822) *
               C10622 +
           ((C10625 * C257 + C50630 * C271) * C121 +
            (C10625 * C275 + C50630 * C287) * C50822) *
               C10623 +
           ((C10625 * C972 + C50630 * C980) * C121 +
            (C10625 * C976 + C50630 * C984) * C50822) *
               C10624) *
              C50696 * C50680 * C113 -
          (((C10625 * C975 + C50630 * C983) * C50822 +
            (C10625 * C971 + C50630 * C979) * C121) *
               C10624 +
           ((C10625 * C276 + C50630 * C288) * C50822 +
            (C10625 * C258 + C50630 * C272) * C121) *
               C10623 +
           ((C10625 * C265 + C50630 * C285) * C50822 +
            (C10625 * C255 + C50630 * C269) * C121) *
               C10622 +
           ((C10625 * C134 + C50630 * C144) * C50822 +
            (C10625 * C123 + C50630 * C130) * C121) *
               C10621) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C121 +
            (C10625 * C135 + C50630 * C145) * C50822) *
               C10621 +
           ((C10625 * C254 + C50630 * C268) * C121 +
            (C10625 * C264 + C50630 * C284) * C50822) *
               C10622 +
           ((C10625 * C259 + C50630 * C273) * C121 +
            (C10625 * C277 + C50630 * C289) * C50822) *
               C10623 +
           ((C10625 * C970 + C50630 * C978) * C121 +
            (C10625 * C974 + C50630 * C982) * C50822) *
               C10624) *
              C50696 * C50680 * C115 -
          (((C10625 * C973 + C50630 * C981) * C50822 +
            (C10625 * C969 + C50630 * C977) * C121) *
               C10624 +
           ((C10625 * C278 + C50630 * C290) * C50822 +
            (C10625 * C260 + C50630 * C274) * C121) *
               C10623 +
           ((C10625 * C263 + C50630 * C283) * C50822 +
            (C10625 * C253 + C50630 * C267) * C121) *
               C10622 +
           ((C10625 * C136 + C50630 * C146) * C50822 +
            (C10625 * C125 + C50630 * C132) * C121) *
               C10621) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C248 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C249 +
           (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            ((C10625 * C8957 + C50630 * C8961) * C121 +
             (C10625 * C8959 + C50630 * C8963) * C50822) *
                C10624) *
               C50696 * C250) *
              C251 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C249 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C248 -
           (((C10625 * C8958 + C50630 * C8962) * C50822 +
             (C10625 * C8956 + C50630 * C8960) * C121) *
                C10624 +
            (C10788 + C10787) * C10623 + C10791 * C10622 + C10792 * C10621) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C50972 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50973 +
           (((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C50696 * C1199) *
              C50920 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50973 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C50972 -
           (((C2164 * C973 + C2159 * C981 + C2163 * C974 + C2158 * C982 +
              C2162 * C975 + C2157 * C983) *
                 C50822 +
             (C2164 * C969 + C2159 * C977 + C2163 * C970 + C2158 * C978 +
              C2162 * C971 + C2157 * C979) *
                 C121) *
                C50810 +
            ((C2383 + C2382 + C2381) * C50822 +
             (C2380 + C2379 + C2378) * C121) *
                C50939) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C50972 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C50696 * C50973 +
           (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C50696 * C1199) *
              C50920 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50973 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C50972 -
           (((C10625 * C8958 + C50630 * C8962) * C50822 +
             (C10625 * C8956 + C50630 * C8960) * C121) *
                C10624 +
            (C10788 + C10787) * C10623 + C10791 * C10622 + C10792 * C10621) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50929 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50972 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50760 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50929) *
              C50973 +
          ((((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C50929 -
           (((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
              C2162 * C4010 + C2157 * C4016) *
                 C50822 +
             (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
              C2162 * C4007 + C2157 * C4013) *
                 C121) *
                C50810 +
            ((C4035 + C4034 + C4033) * C50822 +
             (C4032 + C4031 + C4030) * C121) *
                C50939) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50929 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50972 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50760 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C50929) *
              C50973 +
          ((C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C50929 -
           (((C10625 * C11919 + C50630 * C11921) * C50822 +
             (C10625 * C11918 + C50630 * C11920) * C121) *
                C10624 +
            (C11932 + C11931) * C10623 + C11923 * C10622 + C11924 * C10621) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2360 + C2361 + C2362) * C121 + (C2363 + C2364 + C2365) * C50822) *
               C50810) *
              C50696 * C964 -
          (((C2366 + C2367 + C2368) * C50822 + (C2369 + C2370 + C2371) * C121) *
               C50810 +
           ((C2365 + C2364 + C2363) * C50822 + (C2362 + C2361 + C2360) * C121) *
               C50939) *
              C50696 * C965 +
          (((C2371 + C2370 + C2369) * C121 + (C2368 + C2367 + C2366) * C50822) *
               C50939 +
           ((C3338 + C3339 + C3340) * C121 + (C3341 + C3342 + C3343) * C50822) *
               C50810) *
              C50696 * C966 -
          (((C2164 * C3316 + C2159 * C3322 + C2163 * C3317 + C2158 * C3323 +
             C2162 * C3318 + C2157 * C3324) *
                C50822 +
            (C2164 * C3313 + C2159 * C3319 + C2163 * C3314 + C2158 * C3320 +
             C2162 * C3315 + C2157 * C3321) *
                C121) *
               C50810 +
           ((C3343 + C3342 + C3341) * C50822 + (C3340 + C3339 + C3338) * C121) *
               C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C893 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50732) *
              C895 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50732 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50696 * C893 -
           (((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
              C2162 * C277 + C2157 * C289) *
                 C50822 +
             (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
              C2162 * C259 + C2157 * C273) *
                 C121) *
                C50810 +
            ((C2693 + C2692 + C2691) * C50822 +
             (C2690 + C2689 + C2688) * C121) *
                C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C391 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C392 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C3514 + C3515 + C3516) * C121 +
             (C3517 + C3518 + C3519) * C50822) *
                C50810) *
               C393) *
              C893 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
              C2164 * C1431 + C2159 * C1439) *
                 C121 +
             (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
              C2164 * C1435 + C2159 * C1443) *
                 C50822) *
                C50810) *
               C392 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C391 -
           (((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
              C2162 * C3494 + C2157 * C3500) *
                 C50822 +
             (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
              C2162 * C3491 + C2157 * C3497) *
                 C121) *
                C50810 +
            ((C3519 + C3518 + C3517) * C50822 +
             (C3516 + C3515 + C3514) * C121) *
                C50939) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C893 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C50732) *
              C895 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50732 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50696 * C893 -
           (((C10625 * C3316 + C50630 * C3322) * C50822 +
             (C10625 * C3313 + C50630 * C3319) * C121) *
                C10624 +
            (C11012 + C11011) * C10623 + (C11010 + C11009) * C10622 +
            (C11008 + C11007) * C10621) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
              C50696 * C964 -
          (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
           (C10774 + C10773) * C10621) *
              C50696 * C965 +
          (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
           (C11465 + C11466) * C10624) *
              C50696 * C966 -
          (((C10625 * C11453 + C50630 * C11455) * C50822 +
            (C10625 * C11452 + C50630 * C11454) * C121) *
               C10624 +
           (C11466 + C11465) * C10623 + C11457 * C10622 + C11458 * C10621) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C391 -
           ((C11277 + C11278) * C10624 + (C11279 + C11280) * C10623 +
            (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C392 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
            (C11591 + C11592) * C10624) *
               C393) *
              C893 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 +
            ((C10625 * C9646 + C50630 * C9650) * C121 +
             (C10625 * C9648 + C50630 * C9652) * C50822) *
                C10624) *
               C392 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C391 -
           (((C10625 * C11565 + C50630 * C11567) * C50822 +
             (C10625 * C11564 + C50630 * C11566) * C121) *
                C10624 +
            (C11592 + C11591) * C10623 + (C11590 + C11589) * C10622 +
            (C11588 + C11587) * C10621) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50822) *
                 C50939 +
             ((C2360 + C2361 + C2362) * C121 +
              (C2363 + C2364 + C2365) * C50822) *
                 C50810) *
                C50929 -
            (((C3058 + C3059 + C3060) * C50822 +
              (C3061 + C3062 + C3063) * C121) *
                 C50810 +
             ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
               C2162 * C407 + C2157 * C427) *
                  C50822 +
              (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
               C2162 * C397 + C2157 * C411) *
                  C121) *
                 C50939) *
                C50760) *
               C893 +
           ((((C3063 + C3062 + C3061) * C121 +
              (C3060 + C3059 + C3058) * C50822) *
                 C50939 +
             ((C2162 * C1433 + C2157 * C1441 + C2163 * C1432 + C2158 * C1440 +
               C2164 * C1431 + C2159 * C1439) *
                  C121 +
              (C2162 * C1437 + C2157 * C1445 + C2163 * C1436 + C2158 * C1444 +
               C2164 * C1435 + C2159 * C1443) *
                  C50822) *
                 C50810) *
                C50760 -
            (((C2366 + C2367 + C2368) * C50822 +
              (C2369 + C2370 + C2371) * C121) *
                 C50810 +
             ((C2365 + C2364 + C2363) * C50822 +
              (C2362 + C2361 + C2360) * C121) *
                 C50939) *
                C50929) *
               C50732) *
              C50920 +
          (((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
               C2164 * C394 + C2159 * C408) *
                  C121 +
              (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
               C2164 * C404 + C2159 * C424) *
                  C50822) *
                 C50939 +
             ((C3064 + C3065 + C3066) * C121 +
              (C3067 + C3068 + C3069) * C50822) *
                 C50810) *
                C50760 -
            (((C2377 + C2376 + C2375) * C50822 +
              (C2374 + C2373 + C2372) * C121) *
                 C50810 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50822 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50939) *
                C50929) *
               C893 +
           ((((C2372 + C2373 + C2374) * C121 +
              (C2375 + C2376 + C2377) * C50822) *
                 C50939 +
             ((C2378 + C2379 + C2380) * C121 +
              (C2381 + C2382 + C2383) * C50822) *
                 C50810) *
                C50929 -
            (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
               C2162 * C1436 + C2157 * C1444) *
                  C50822 +
              (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
               C2162 * C1432 + C2157 * C1440) *
                  C121) *
                 C50810 +
             ((C3069 + C3068 + C3067) * C50822 +
              (C3066 + C3065 + C3064) * C121) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C121 +
              (C10625 * C133 + C50630 * C143) * C50822) *
                 C10621 +
             (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
                C50929 -
            ((C11277 + C11278) * C10624 + (C11279 + C11280) * C10623 +
             (C11281 + C11282) * C10622 +
             ((C10625 * C407 + C50630 * C427) * C50822 +
              (C10625 * C397 + C50630 * C411) * C121) *
                 C10621) *
                C50760) *
               C893 +
           (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
             (C11278 + C11277) * C10623 +
             ((C10625 * C9646 + C50630 * C9650) * C121 +
              (C10625 * C9648 + C50630 * C9652) * C50822) *
                 C10624) *
                C50760 -
            (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
             (C10774 + C10773) * C10621) *
                C50929) *
               C50732) *
              C50920 +
          (((((C10625 * C396 + C50630 * C410) * C121 +
              (C10625 * C406 + C50630 * C426) * C50822) *
                 C10621 +
             (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
             (C11287 + C11288) * C10624) *
                C50760 -
            (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
             ((C10625 * C134 + C50630 * C144) * C50822 +
              (C10625 * C123 + C50630 * C130) * C121) *
                 C10621) *
                C50929) *
               C893 +
           (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
             (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
                C50929 -
            (((C10625 * C9647 + C50630 * C9651) * C50822 +
              (C10625 * C9645 + C50630 * C9649) * C121) *
                 C10624 +
             (C11288 + C11287) * C10623 + (C11286 + C11285) * C10622 +
             (C11284 + C11283) * C10621) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50696 * C893 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50696 * C50732) *
              C895 +
          ((((C2372 + C2373 + C2374) * C121 +
             (C2375 + C2376 + C2377) * C50822) *
                C50939 +
            ((C2378 + C2379 + C2380) * C121 +
             (C2381 + C2382 + C2383) * C50822) *
                C50810) *
               C50696 * C50732 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50696 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C50696 * C893 -
           (((C2164 * C281 + C2159 * C292 + C2163 * C278 + C2158 * C290 +
              C2162 * C277 + C2157 * C289) *
                 C50822 +
             (C2164 * C262 + C2159 * C282 + C2163 * C260 + C2158 * C274 +
              C2162 * C259 + C2157 * C273) *
                 C121) *
                C50810 +
            ((C2693 + C2692 + C2691) * C50822 +
             (C2690 + C2689 + C2688) * C121) *
                C50939) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2360 + C2361 + C2362) * C121 + (C2363 + C2364 + C2365) * C50822) *
               C50810) *
              C50696 * C964 -
          (((C2366 + C2367 + C2368) * C50822 + (C2369 + C2370 + C2371) * C121) *
               C50810 +
           ((C2365 + C2364 + C2363) * C50822 + (C2362 + C2361 + C2360) * C121) *
               C50939) *
              C50696 * C965 +
          (((C2371 + C2370 + C2369) * C121 + (C2368 + C2367 + C2366) * C50822) *
               C50939 +
           ((C3338 + C3339 + C3340) * C121 + (C3341 + C3342 + C3343) * C50822) *
               C50810) *
              C50696 * C966 -
          (((C2164 * C3316 + C2159 * C3322 + C2163 * C3317 + C2158 * C3323 +
             C2162 * C3318 + C2157 * C3324) *
                C50822 +
            (C2164 * C3313 + C2159 * C3319 + C2163 * C3314 + C2158 * C3320 +
             C2162 * C3315 + C2157 * C3321) *
                C121) *
               C50810 +
           ((C3343 + C3342 + C3341) * C50822 + (C3340 + C3339 + C3338) * C121) *
               C50939) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50696 * C893 -
           ((C10779 + C10780) * C10624 + (C10778 + C10777) * C10623 +
            (C10776 + C10775) * C10622 + (C10774 + C10773) * C10621) *
               C50696 * C50732) *
              C895 +
          (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
            (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
               C50696 * C50732 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C50696 * C893 -
           (((C10625 * C3316 + C50630 * C3322) * C50822 +
             (C10625 * C3313 + C50630 * C3319) * C121) *
                C10624 +
            (C11012 + C11011) * C10623 + (C11010 + C11009) * C10622 +
            (C11008 + C11007) * C10621) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
              C50696 * C964 -
          (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
           (C10774 + C10773) * C10621) *
              C50696 * C965 +
          (C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
           (C11465 + C11466) * C10624) *
              C50696 * C966 -
          (((C10625 * C11453 + C50630 * C11455) * C50822 +
            (C10625 * C11452 + C50630 * C11454) * C121) *
               C10624 +
           (C11466 + C11465) * C10623 + C11457 * C10622 + C11458 * C10621) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
               C2164 * C124 + C2159 * C131) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
               C2164 * C135 + C2159 * C145) *
                  C50822) *
                 C50939 +
             ((C2360 + C2361 + C2362) * C121 +
              (C2363 + C2364 + C2365) * C50822) *
                 C50810) *
                C1544 -
            (((C3058 + C3059 + C3060) * C50822 +
              (C3061 + C3062 + C3063) * C121) *
                 C50810 +
             ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
               C2162 * C407 + C2157 * C427) *
                  C50822 +
              (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
               C2162 * C397 + C2157 * C411) *
                  C121) *
                 C50939) *
                C50760) *
               C50928 +
           ((((C3063 + C3062 + C3061) * C121 +
              (C3060 + C3059 + C3058) * C50822) *
                 C50939 +
             ((C4030 + C4031 + C4032) * C121 +
              (C4033 + C4034 + C4035) * C50822) *
                 C50810) *
                C50760 -
            (((C2366 + C2367 + C2368) * C50822 +
              (C2369 + C2370 + C2371) * C121) *
                 C50810 +
             ((C2365 + C2364 + C2363) * C50822 +
              (C2362 + C2361 + C2360) * C121) *
                 C50939) *
                C1544) *
               C50732) *
              C50920 +
          (((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
               C2164 * C394 + C2159 * C408) *
                  C121 +
              (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
               C2164 * C404 + C2159 * C424) *
                  C50822) *
                 C50939 +
             ((C3064 + C3065 + C3066) * C121 +
              (C3067 + C3068 + C3069) * C50822) *
                 C50810) *
                C50760 -
            (((C2377 + C2376 + C2375) * C50822 +
              (C2374 + C2373 + C2372) * C121) *
                 C50810 +
             ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
               C2162 * C134 + C2157 * C144) *
                  C50822 +
              (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
               C2162 * C123 + C2157 * C130) *
                  C121) *
                 C50939) *
                C1544) *
               C50928 +
           ((((C2372 + C2373 + C2374) * C121 +
              (C2375 + C2376 + C2377) * C50822) *
                 C50939 +
             ((C2378 + C2379 + C2380) * C121 +
              (C2381 + C2382 + C2383) * C50822) *
                 C50810) *
                C1544 -
            (((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
               C2162 * C1436 + C2157 * C1444) *
                  C50822 +
              (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
               C2162 * C1432 + C2157 * C1440) *
                  C121) *
                 C50810 +
             ((C3069 + C3068 + C3067) * C50822 +
              (C3066 + C3065 + C3064) * C121) *
                 C50939) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C121 +
              (C10625 * C133 + C50630 * C143) * C50822) *
                 C10621 +
             (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
                C1544 -
            (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
             ((C10625 * C407 + C50630 * C427) * C50822 +
              (C10625 * C397 + C50630 * C411) * C121) *
                 C10621) *
                C50760) *
               C50928 +
           (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
             (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
                C50760 -
            (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
             (C10774 + C10773) * C10621) *
                C1544) *
               C50732) *
              C50920 +
          (((((C10625 * C396 + C50630 * C410) * C121 +
              (C10625 * C406 + C50630 * C426) * C50822) *
                 C10621 +
             (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
             (C11287 + C11288) * C10624) *
                C50760 -
            (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
             ((C10625 * C134 + C50630 * C144) * C50822 +
              (C10625 * C123 + C50630 * C130) * C121) *
                 C10621) *
                C1544) *
               C50928 +
           (((C10781 + C10782) * C10621 + (C10783 + C10784) * C10622 +
             (C10785 + C10786) * C10623 + (C10787 + C10788) * C10624) *
                C1544 -
            (((C10625 * C9647 + C50630 * C9651) * C50822 +
              (C10625 * C9645 + C50630 * C9649) * C121) *
                 C10624 +
             (C11288 + C11287) * C10623 + (C11286 + C11285) * C10622 +
             (C11284 + C11283) * C10621) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50974 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50975 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C3514 + C3515 + C3516) * C121 +
             (C3517 + C3518 + C3519) * C50822) *
                C50810) *
               C1960) *
              C50928 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50975 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C50974 -
           (((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
              C2162 * C3494 + C2157 * C3500) *
                 C50822 +
             (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
              C2162 * C3491 + C2157 * C3497) *
                 C121) *
                C50810 +
            ((C3519 + C3518 + C3517) * C50822 +
             (C3516 + C3515 + C3514) * C121) *
                C50939) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50974 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50975 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
            (C11591 + C11592) * C10624) *
               C1960) *
              C50928 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50975 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C50974 -
           (((C10625 * C11565 + C50630 * C11567) * C50822 +
             (C10625 * C11564 + C50630 * C11566) * C121) *
                C10624 +
            (C11592 + C11591) * C10623 + (C11590 + C11589) * C10622 +
            (C11588 + C11587) * C10621) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C1544 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C248 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50760 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C1544) *
              C249 +
          ((((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C1544 -
           (((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
              C2162 * C4010 + C2157 * C4016) *
                 C50822 +
             (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
              C2162 * C4007 + C2157 * C4013) *
                 C121) *
                C50810 +
            ((C4035 + C4034 + C4033) * C50822 +
             (C4032 + C4031 + C4030) * C121) *
                C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C1544 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C895 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C3064 + C3065 + C3066) * C121 +
             (C3067 + C3068 + C3069) * C50822) *
                C50810) *
               C50760 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C1544 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50822 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50810 +
            ((C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
              C2162 * C405 + C2157 * C425) *
                 C50822 +
             (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
              C2162 * C395 + C2157 * C409) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50822) *
               C50939 +
           ((C2360 + C2361 + C2362) * C121 + (C2363 + C2364 + C2365) * C50822) *
               C50810) *
              C1710 -
          (((C3058 + C3059 + C3060) * C50822 + (C3061 + C3062 + C3063) * C121) *
               C50810 +
           ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
             C2162 * C407 + C2157 * C427) *
                C50822 +
            (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
             C2162 * C397 + C2157 * C411) *
                C121) *
               C50939) *
              C1711 +
          (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
             C2164 * C400 + C2159 * C414) *
                C121 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
             C2164 * C418 + C2159 * C430) *
                C50822) *
               C50939 +
           ((C3514 + C3515 + C3516) * C121 + (C3517 + C3518 + C3519) * C50822) *
               C50810) *
              C1712 -
          (((C2164 * C4428 + C2159 * C4434 + C2163 * C4429 + C2158 * C4435 +
             C2162 * C4430 + C2157 * C4436) *
                C50822 +
            (C2164 * C4425 + C2159 * C4431 + C2163 * C4426 + C2158 * C4432 +
             C2162 * C4427 + C2157 * C4433) *
                C121) *
               C50810 +
           ((C2164 * C1719 + C2159 * C1727 + C2163 * C1720 + C2158 * C1728 +
             C2162 * C1721 + C2157 * C1729) *
                C50822 +
            (C2164 * C1715 + C2159 * C1723 + C2163 * C1716 + C2158 * C1724 +
             C2162 * C1717 + C2157 * C1725) *
                C121) *
               C50939) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50680 * C895 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
            (C11287 + C11288) * C10624) *
               C50760 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C1544 -
           (((C10625 * C4008 + C50630 * C4014) * C50822 +
             (C10625 * C4005 + C50630 * C4011) * C121) *
                C10624 +
            ((C10625 * C1435 + C50630 * C1443) * C50822 +
             (C10625 * C1431 + C50630 * C1439) * C121) *
                C10623 +
            ((C10625 * C786 + C50630 * C792) * C50822 +
             (C10625 * C777 + C50630 * C782) * C121) *
                C10622 +
            ((C10625 * C405 + C50630 * C425) * C50822 +
             (C10625 * C395 + C50630 * C409) * C121) *
                C10621) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C248 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50760 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C1544) *
              C249 +
          ((C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C1544 -
           (((C10625 * C11919 + C50630 * C11921) * C50822 +
             (C10625 * C11918 + C50630 * C11920) * C121) *
                C10624 +
            (C11932 + C11931) * C10623 + C11923 * C10622 + C11924 * C10621) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C121 +
            (C10625 * C133 + C50630 * C143) * C50822) *
               C10621 +
           (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
              C1710 -
          (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
           ((C10625 * C407 + C50630 * C427) * C50822 +
            (C10625 * C397 + C50630 * C411) * C121) *
               C10621) *
              C1711 +
          (((C10625 * C398 + C50630 * C412) * C121 +
            (C10625 * C416 + C50630 * C428) * C50822) *
               C10621 +
           (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
           (C11591 + C11592) * C10624) *
              C1712 -
          (((C10625 * C12195 + C50630 * C12197) * C50822 +
            (C10625 * C12194 + C50630 * C12196) * C121) *
               C10624 +
           ((C10625 * C10063 + C50630 * C10067) * C50822 +
            (C10625 * C10061 + C50630 * C10065) * C121) *
               C10623 +
           ((C10625 * C4430 + C50630 * C4436) * C50822 +
            (C10625 * C4427 + C50630 * C4433) * C121) *
               C10622 +
           ((C10625 * C1721 + C50630 * C1729) * C50822 +
            (C10625 * C1717 + C50630 * C1725) * C121) *
               C10621) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C50974 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50975 +
           (((C2162 * C398 + C2157 * C412 + C2163 * C399 + C2158 * C413 +
              C2164 * C400 + C2159 * C414) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C2158 * C429 +
              C2164 * C418 + C2159 * C430) *
                 C50822) *
                C50939 +
            ((C3514 + C3515 + C3516) * C121 +
             (C3517 + C3518 + C3519) * C50822) *
                C50810) *
               C1960) *
              C50680 * C50920 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C3064 + C3065 + C3066) * C121 +
             (C3067 + C3068 + C3069) * C50822) *
                C50810) *
               C50975 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C50974 -
           (((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50822 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C121) *
                C50810 +
            ((C2164 * C419 + C2159 * C431 + C2163 * C418 + C2158 * C430 +
              C2162 * C417 + C2157 * C429) *
                 C50822 +
             (C2164 * C401 + C2159 * C415 + C2163 * C400 + C2158 * C414 +
              C2162 * C399 + C2157 * C413) *
                 C121) *
                C50939) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C50974 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50975 +
           (((C10625 * C398 + C50630 * C412) * C121 +
             (C10625 * C416 + C50630 * C428) * C50822) *
                C10621 +
            (C11587 + C11588) * C10622 + (C11589 + C11590) * C10623 +
            (C11591 + C11592) * C10624) *
               C1960) *
              C50680 * C50920 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
            (C11287 + C11288) * C10624) *
               C50975 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C50974 -
           (((C10625 * C9129 + C50630 * C9133) * C50822 +
             (C10625 * C9127 + C50630 * C9131) * C121) *
                C10624 +
            ((C10625 * C3493 + C50630 * C3499) * C50822 +
             (C10625 * C3490 + C50630 * C3496) * C121) *
                C10623 +
            ((C10625 * C1089 + C50630 * C1097) * C50822 +
             (C10625 * C1085 + C50630 * C1093) * C121) *
                C10622 +
            ((C10625 * C417 + C50630 * C429) * C50822 +
             (C10625 * C399 + C50630 * C413) * C121) *
                C10621) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C1544 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C895 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C2158 * C409 +
              C2164 * C394 + C2159 * C408) *
                 C121 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C2158 * C425 +
              C2164 * C404 + C2159 * C424) *
                 C50822) *
                C50939 +
            ((C3064 + C3065 + C3066) * C121 +
             (C3067 + C3068 + C3069) * C50822) *
                C50810) *
               C50760 -
           (((C2377 + C2376 + C2375) * C50822 +
             (C2374 + C2373 + C2372) * C121) *
                C50810 +
            ((C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50822 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C121) *
                C50939) *
               C1544) *
              C50680 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
              C2164 * C126 + C2159 * C138) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
              C2164 * C137 + C2159 * C147) *
                 C50822) *
                C50939 +
            ((C2688 + C2689 + C2690) * C121 +
             (C2691 + C2692 + C2693) * C50822) *
                C50810) *
               C1544 -
           (((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
              C2162 * C786 + C2157 * C792) *
                 C50822 +
             (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
              C2162 * C777 + C2157 * C782) *
                 C121) *
                C50810 +
            ((C2164 * C421 + C2159 * C432 + C2163 * C404 + C2158 * C424 +
              C2162 * C405 + C2157 * C425) *
                 C50822 +
             (C2164 * C402 + C2159 * C420 + C2163 * C394 + C2158 * C408 +
              C2162 * C395 + C2157 * C409) *
                 C121) *
                C50939) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50822) *
                C50939 +
            ((C2360 + C2361 + C2362) * C121 +
             (C2363 + C2364 + C2365) * C50822) *
                C50810) *
               C1544 -
           (((C3058 + C3059 + C3060) * C50822 +
             (C3061 + C3062 + C3063) * C121) *
                C50810 +
            ((C2164 * C405 + C2159 * C425 + C2163 * C406 + C2158 * C426 +
              C2162 * C407 + C2157 * C427) *
                 C50822 +
             (C2164 * C395 + C2159 * C409 + C2163 * C396 + C2158 * C410 +
              C2162 * C397 + C2157 * C411) *
                 C121) *
                C50939) *
               C50760) *
              C248 +
          ((((C3063 + C3062 + C3061) * C121 +
             (C3060 + C3059 + C3058) * C50822) *
                C50939 +
            ((C4030 + C4031 + C4032) * C121 +
             (C4033 + C4034 + C4035) * C50822) *
                C50810) *
               C50760 -
           (((C2366 + C2367 + C2368) * C50822 +
             (C2369 + C2370 + C2371) * C121) *
                C50810 +
            ((C2365 + C2364 + C2363) * C50822 +
             (C2362 + C2361 + C2360) * C121) *
                C50939) *
               C1544) *
              C249 +
          ((((C2371 + C2370 + C2369) * C121 +
             (C2368 + C2367 + C2366) * C50822) *
                C50939 +
            ((C3338 + C3339 + C3340) * C121 +
             (C3341 + C3342 + C3343) * C50822) *
                C50810) *
               C1544 -
           (((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
              C2162 * C4010 + C2157 * C4016) *
                 C50822 +
             (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
              C2162 * C4007 + C2157 * C4013) *
                 C121) *
                C50810 +
            ((C4035 + C4034 + C4033) * C50822 +
             (C4032 + C4031 + C4030) * C121) *
                C50939) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C50680 * C895 +
          ((((C10625 * C396 + C50630 * C410) * C121 +
             (C10625 * C406 + C50630 * C426) * C50822) *
                C10621 +
            (C11283 + C11284) * C10622 + (C11285 + C11286) * C10623 +
            (C11287 + C11288) * C10624) *
               C50760 -
           (C10791 * C10624 + C10792 * C10623 + (C10782 + C10781) * C10622 +
            ((C10625 * C134 + C50630 * C144) * C50822 +
             (C10625 * C123 + C50630 * C130) * C121) *
                C10621) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C121 +
             (C10625 * C135 + C50630 * C145) * C50822) *
                C10621 +
            (C11007 + C11008) * C10622 + (C11009 + C11010) * C10623 +
            (C11011 + C11012) * C10624) *
               C1544 -
           (((C10625 * C4008 + C50630 * C4014) * C50822 +
             (C10625 * C4005 + C50630 * C4011) * C121) *
                C10624 +
            ((C10625 * C1435 + C50630 * C1443) * C50822 +
             (C10625 * C1431 + C50630 * C1439) * C121) *
                C10623 +
            ((C10625 * C786 + C50630 * C792) * C50822 +
             (C10625 * C777 + C50630 * C782) * C121) *
                C10622 +
            ((C10625 * C405 + C50630 * C425) * C50822 +
             (C10625 * C395 + C50630 * C409) * C121) *
                C10621) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C121 +
             (C10625 * C133 + C50630 * C143) * C50822) *
                C10621 +
            (C10773 + C10774) * C10622 + C10789 * C10623 + C10790 * C10624) *
               C1544 -
           (C11923 * C10624 + C11924 * C10623 + (C11281 + C11282) * C10622 +
            ((C10625 * C407 + C50630 * C427) * C50822 +
             (C10625 * C397 + C50630 * C411) * C121) *
                C10621) *
               C50760) *
              C248 +
          (((C11282 + C11281) * C10621 + (C11280 + C11279) * C10622 +
            (C11278 + C11277) * C10623 + (C11931 + C11932) * C10624) *
               C50760 -
           (C11457 * C10624 + C11458 * C10623 + (C10776 + C10775) * C10622 +
            (C10774 + C10773) * C10621) *
               C1544) *
              C249 +
          ((C10789 * C10621 + C10790 * C10622 + (C10780 + C10779) * C10623 +
            (C11465 + C11466) * C10624) *
               C1544 -
           (((C10625 * C11919 + C50630 * C11921) * C50822 +
             (C10625 * C11918 + C50630 * C11920) * C121) *
                C10624 +
            (C11932 + C11931) * C10623 + C11923 * C10622 + C11924 * C10621) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C50928 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50732) *
              C50970 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50732 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C50928) *
              C50971 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
             C2164 * C402 + C2159 * C420) *
                C5024 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
             C2164 * C421 + C2159 * C432) *
                C50834) *
               C50796 * C50696 * C50928 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50834 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C5024 +
            (C2693 + C2692 + C2691) * C50940 +
            (C2690 + C2689 + C2688) * C5023) *
               C50796 * C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C50928 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50732) *
              C50970 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50732 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C50928) *
              C50971 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 +
             (C10625 * C395 + C50630 * C409) * C5024 +
             (C10625 * C405 + C50630 * C425) * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50696 * C50928 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C5024 + C11006 * C50940 +
             C11005 * C5023) *
                C7777 +
            (C13146 + C13145 + C13134 + C13133) * C7776 +
            (C13144 + C13143 + C13128 + C13127) * C7775) *
               C50696 * C50732) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C5023 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50940 +
             (C5366 + C5367 + C5368) * C5024 +
             (C5369 + C5370 + C5371) * C50834) *
                C50796 * C50929 -
            ((C5372 + C5373 + C5374) * C50834 +
             (C5375 + C5376 + C5377) * C5024 +
             (C5371 + C5370 + C5369) * C50940 +
             (C5368 + C5367 + C5366) * C5023) *
                C50796 * C50760) *
               C50928 +
           (((C3063 + C3062 + C3061) * C5023 +
             (C3060 + C3059 + C3058) * C50940 +
             (C3514 + C3515 + C3516) * C5024 +
             (C3517 + C3518 + C3519) * C50834) *
                C50796 * C50760 -
            ((C3058 + C3059 + C3060) * C50834 +
             (C3061 + C3062 + C3063) * C5024 +
             (C2365 + C2364 + C2363) * C50940 +
             (C2362 + C2361 + C2360) * C5023) *
                C50796 * C50929) *
               C50732) *
              C251 +
          ((((C5378 + C5379 + C5380) * C5023 +
             (C5381 + C5382 + C5383) * C50940 +
             (C5384 + C5385 + C5386) * C5024 +
             (C5387 + C5388 + C5389) * C50834) *
                C50796 * C50760 -
            ((C5383 + C5382 + C5381) * C50834 +
             (C5380 + C5379 + C5378) * C5024 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50940 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C5023) *
                C50796 * C50929) *
               C50928 +
           (((C2372 + C2373 + C2374) * C5023 +
             (C2375 + C2376 + C2377) * C50940 +
             (C3064 + C3065 + C3066) * C5024 +
             (C3067 + C3068 + C3069) * C50834) *
                C50796 * C50929 -
            ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50834 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C5024 +
             (C3069 + C3068 + C3067) * C50940 +
             (C3066 + C3065 + C3064) * C5023) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C5023 +
              (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
              C12970 * C50834) *
                 C7775 +
             (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
                C50929 -
            ((C13493 + C13494 + C13495 + C13496) * C7777 +
             (C13497 + C13498 + C13499 + C13500) * C7776 +
             (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
              C12969 * C5023) *
                 C7775) *
                C50760) *
               C50928 +
           (((C13500 + C13499 + C13498 + C13497) * C7775 +
             (C13496 + C13495 + C13494 + C13493) * C7776 +
             (C11266 * C5023 + C11265 * C50940 + C11585 * C5024 +
              C11586 * C50834) *
                 C7777) *
                C50760 -
            ((C12777 + C12778 + C12779 + C12780) * C7777 +
             (C12776 + C12775 + C12774 + C12773) * C7776 +
             (C12772 + C12771 + C12770 + C12769) * C7775) *
                C50929) *
               C50732) *
              C251 +
          ((((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
              C12976 * C50834) *
                 C7775 +
             (C13501 + C13502 + C13503 + C13504) * C7776 +
             (C13505 + C13506 + C13507 + C13508) * C7777) *
                C50760 -
            (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
             (C12974 * C50834 + C12973 * C5024 +
              (C10625 * C134 + C50630 * C144) * C50940 +
              (C10625 * C123 + C50630 * C130) * C5023) *
                 C7775) *
                C50929) *
               C50928 +
           (((C12781 + C12782 + C12783 + C12784) * C7775 +
             (C12785 + C12786 + C12787 + C12788) * C7776 +
             (C12789 + C12790 + C12791 + C12792) * C7777) *
                C50929 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C5024 + C11276 * C50940 +
              C11275 * C5023) *
                 C7777 +
             (C13508 + C13507 + C13506 + C13505) * C7776 +
             (C13504 + C13503 + C13502 + C13501) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
             C2164 * C395 + C2159 * C409) *
                C5024 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
             C2164 * C405 + C2159 * C425) *
                C50834) *
               C50796 * C50696 * C248 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C249 +
           ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50696 * C250) *
              C251 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C249 -
           ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
             C2162 * C406 + C2157 * C426) *
                C50834 +
            (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
             C2162 * C396 + C2157 * C410) *
                C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C248 -
           ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
             C2162 * C1436 + C2157 * C1444) *
                C50834 +
            (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
             C2162 * C1432 + C2157 * C1440) *
                C5024 +
            (C2383 + C2382 + C2381) * C50940 +
            (C2380 + C2379 + C2378) * C5023) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
            C2164 * C395 + C2159 * C409) *
               C5024 +
           (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
            C2164 * C405 + C2159 * C425) *
               C50834) *
              C50796 * C50696 * C50680 * C113 -
          ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
            C2162 * C406 + C2157 * C426) *
               C50834 +
           (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
            C2162 * C396 + C2157 * C410) *
               C5024 +
           (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
            C2162 * C134 + C2157 * C144) *
               C50940 +
           (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
            C2162 * C123 + C2157 * C130) *
               C5023) *
              C50796 * C50696 * C50680 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
            C2164 * C126 + C2159 * C138) *
               C5023 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
            C2164 * C137 + C2159 * C147) *
               C50940 +
           (C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
            C2164 * C402 + C2159 * C420) *
               C5024 +
           (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
            C2164 * C421 + C2159 * C432) *
               C50834) *
              C50796 * C50696 * C50680 * C115 -
          ((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
            C2162 * C404 + C2157 * C424) *
               C50834 +
           (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
            C2162 * C394 + C2157 * C408) *
               C5024 +
           (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
            C2162 * C136 + C2157 * C146) *
               C50940 +
           (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
            C2162 * C125 + C2157 * C132) *
               C5023) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C391 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C392 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
             C2164 * C1715 + C2159 * C1723) *
                C5024 +
            (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
             C2164 * C1719 + C2159 * C1727) *
                C50834) *
               C50796 * C393) *
              C50680 * C251 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C392 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C391 -
           ((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
             C2162 * C1720 + C2157 * C1728) *
                C50834 +
            (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
             C2162 * C1716 + C2157 * C1724) *
                C5024 +
            (C5389 + C5388 + C5387) * C50940 +
            (C5386 + C5385 + C5384) * C5023) *
               C50796 * C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 +
            (C10625 * C397 + C50630 * C411) * C5024 +
            (C10625 * C407 + C50630 * C427) * C50834) *
               C7775 +
           (C10757 * C5023 + C10758 * C50940 + C11270 * C5024 +
            C11269 * C50834) *
               C7776 +
           (C10759 * C5023 + C10760 * C50940 + C11268 * C5024 +
            C11267 * C50834) *
               C7777) *
              C50696 * C50680 * C113 -
          ((C11274 * C50834 + C11273 * C5024 + C10768 * C50940 +
            C10767 * C5023) *
               C7777 +
           (C11272 * C50834 + C11271 * C5024 + C10766 * C50940 +
            C10765 * C5023) *
               C7776 +
           ((C10625 * C406 + C50630 * C426) * C50834 +
            (C10625 * C396 + C50630 * C410) * C5024 +
            (C10625 * C134 + C50630 * C144) * C50940 +
            (C10625 * C123 + C50630 * C130) * C5023) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C5023 +
            (C10625 * C135 + C50630 * C145) * C50940 +
            (C10625 * C395 + C50630 * C409) * C5024 +
            (C10625 * C405 + C50630 * C425) * C50834) *
               C7775 +
           (C11001 * C5023 + C11002 * C50940 +
            (C10625 * C777 + C50630 * C782) * C5024 +
            (C10625 * C786 + C50630 * C792) * C50834) *
               C7776 +
           (C11003 * C5023 + C11004 * C50940 +
            (C10625 * C1431 + C50630 * C1439) * C5024 +
            (C10625 * C1435 + C50630 * C1443) * C50834) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C10625 * C1434 + C50630 * C1442) * C50834 +
            (C10625 * C1430 + C50630 * C1438) * C5024 +
            (C10625 * C278 + C50630 * C290) * C50940 +
            (C10625 * C260 + C50630 * C274) * C5023) *
               C7777 +
           ((C10625 * C787 + C50630 * C793) * C50834 +
            (C10625 * C778 + C50630 * C783) * C5024 +
            (C10625 * C263 + C50630 * C283) * C50940 +
            (C10625 * C253 + C50630 * C267) * C5023) *
               C7776 +
           ((C10625 * C404 + C50630 * C424) * C50834 +
            (C10625 * C394 + C50630 * C408) * C5024 +
            (C10625 * C136 + C50630 * C146) * C50940 +
            (C10625 * C125 + C50630 * C132) * C5023) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 +
             (C10625 * C397 + C50630 * C411) * C5024 +
             (C10625 * C407 + C50630 * C427) * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C248 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C249 +
           (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C10764 * C5023 + C10763 * C50940 + C11929 * C5024 +
             C11930 * C50834) *
                C7777) *
               C50696 * C250) *
              C251 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C249 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            ((C10625 * C406 + C50630 * C426) * C50834 +
             (C10625 * C396 + C50630 * C410) * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C248 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C5024 + C10772 * C50940 +
             C10771 * C5023) *
                C7777 +
            (C12792 + C12791 + C12790 + C12789) * C7776 + C12798 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C391 -
           ((C11584 * C50834 + C11583 * C5024 + C11267 * C50940 +
             C11268 * C5023) *
                C7777 +
            (C11582 * C50834 + C11581 * C5024 + C11269 * C50940 +
             C11270 * C5023) *
                C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C392 +
           ((C12972 * C5023 + C12971 * C50940 +
             (C10625 * C1717 + C50630 * C1725) * C5024 +
             (C10625 * C1721 + C50630 * C1729) * C50834) *
                C7775 +
            (C11581 * C5023 + C11582 * C50940 +
             (C10625 * C4427 + C50630 * C4433) * C5024 +
             (C10625 * C4430 + C50630 * C4436) * C50834) *
                C7776 +
            (C11583 * C5023 + C11584 * C50940 +
             (C10625 * C10061 + C50630 * C10065) * C5024 +
             (C10625 * C10063 + C50630 * C10067) * C50834) *
                C7777) *
               C393) *
              C50680 * C251 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C11271 * C5023 + C11272 * C50940 + C12977 * C5024 +
             C12978 * C50834) *
                C7776 +
            (C11273 * C5023 + C11274 * C50940 + C12979 * C5024 +
             C12980 * C50834) *
                C7777) *
               C392 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C391 -
           (((C10625 * C10062 + C50630 * C10066) * C50834 +
             (C10625 * C10060 + C50630 * C10064) * C5024 + C12980 * C50940 +
             C12979 * C5023) *
                C7777 +
            ((C10625 * C4429 + C50630 * C4435) * C50834 +
             (C10625 * C4426 + C50630 * C4432) * C5024 + C12978 * C50940 +
             C12977 * C5023) *
                C7776 +
            ((C10625 * C1720 + C50630 * C1728) * C50834 +
             (C10625 * C1716 + C50630 * C1724) * C5024 + C12976 * C50940 +
             C12975 * C5023) *
                C7775) *
               C393) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50929 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50680 * C50970 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50760 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50929) *
              C50680 * C50971 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C50929 -
           ((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
             C2162 * C418 + C2157 * C430) *
                C50834 +
            (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
             C2162 * C400 + C2157 * C414) *
                C5024 +
            (C5699 + C5698 + C5697) * C50940 +
            (C5696 + C5695 + C5694) * C5023) *
               C50796 * C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50929 -
           ((C11584 * C50834 + C11583 * C5024 + C11267 * C50940 +
             C11268 * C5023) *
                C7777 +
            (C11582 * C50834 + C11581 * C5024 + C11269 * C50940 +
             C11270 * C5023) *
                C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50680 * C50970 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C11271 * C5023 + C11272 * C50940 + C12977 * C5024 +
             C12978 * C50834) *
                C7776 +
            (C11273 * C5023 + C11274 * C50940 + C12979 * C5024 +
             C12980 * C50834) *
                C7777) *
               C50760 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50929) *
              C50680 * C50971 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50929 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C5024 + C13142 * C50940 +
             C13141 * C5023) *
                C7777 +
            ((C10625 * C1088 + C50630 * C1096) * C50834 +
             (C10625 * C1084 + C50630 * C1092) * C5024 + C13140 * C50940 +
             C13139 * C5023) *
                C7776 +
            ((C10625 * C418 + C50630 * C430) * C50834 +
             (C10625 * C400 + C50630 * C414) * C5024 + C13298 * C50940 +
             C13297 * C5023) *
                C7775) *
               C50760) *
              C50680 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
            C2164 * C395 + C2159 * C409) *
               C5024 +
           (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
            C2164 * C405 + C2159 * C425) *
               C50834) *
              C50796 * C50696 * C50680 * C113 -
          ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
            C2162 * C406 + C2157 * C426) *
               C50834 +
           (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
            C2162 * C396 + C2157 * C410) *
               C5024 +
           (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
            C2162 * C134 + C2157 * C144) *
               C50940 +
           (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
            C2162 * C123 + C2157 * C130) *
               C5023) *
              C50796 * C50696 * C50680 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
            C2164 * C126 + C2159 * C138) *
               C5023 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
            C2164 * C137 + C2159 * C147) *
               C50940 +
           (C2162 * C395 + C2157 * C409 + C2163 * C394 + C2158 * C408 +
            C2164 * C402 + C2159 * C420) *
               C5024 +
           (C2162 * C405 + C2157 * C425 + C2163 * C404 + C2158 * C424 +
            C2164 * C421 + C2159 * C432) *
               C50834) *
              C50796 * C50696 * C50680 * C115 -
          ((C2164 * C642 + C2159 * C644 + C2163 * C421 + C2158 * C432 +
            C2162 * C404 + C2157 * C424) *
               C50834 +
           (C2164 * C641 + C2159 * C643 + C2163 * C402 + C2158 * C420 +
            C2162 * C394 + C2157 * C408) *
               C5024 +
           (C2164 * C140 + C2159 * C148 + C2163 * C137 + C2158 * C147 +
            C2162 * C136 + C2157 * C146) *
               C50940 +
           (C2164 * C127 + C2159 * C139 + C2163 * C126 + C2158 * C138 +
            C2162 * C125 + C2157 * C132) *
               C5023) *
              C50796 * C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C2162 * C397 + C2157 * C411 + C2163 * C396 + C2158 * C410 +
             C2164 * C395 + C2159 * C409) *
                C5024 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C2158 * C426 +
             C2164 * C405 + C2159 * C425) *
                C50834) *
               C50796 * C50696 * C248 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C249 +
           ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50696 * C250) *
              C251 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C249 -
           ((C2164 * C404 + C2159 * C424 + C2163 * C405 + C2158 * C425 +
             C2162 * C406 + C2157 * C426) *
                C50834 +
            (C2164 * C394 + C2159 * C408 + C2163 * C395 + C2158 * C409 +
             C2162 * C396 + C2157 * C410) *
                C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C248 -
           ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
             C2162 * C1436 + C2157 * C1444) *
                C50834 +
            (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
             C2162 * C1432 + C2157 * C1440) *
                C5024 +
            (C2383 + C2382 + C2381) * C50940 +
            (C2380 + C2379 + C2378) * C5023) *
               C50796 * C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 +
            (C10625 * C397 + C50630 * C411) * C5024 +
            (C10625 * C407 + C50630 * C427) * C50834) *
               C7775 +
           (C10757 * C5023 + C10758 * C50940 + C11270 * C5024 +
            C11269 * C50834) *
               C7776 +
           (C10759 * C5023 + C10760 * C50940 + C11268 * C5024 +
            C11267 * C50834) *
               C7777) *
              C50696 * C50680 * C113 -
          ((C11274 * C50834 + C11273 * C5024 + C10768 * C50940 +
            C10767 * C5023) *
               C7777 +
           (C11272 * C50834 + C11271 * C5024 + C10766 * C50940 +
            C10765 * C5023) *
               C7776 +
           ((C10625 * C406 + C50630 * C426) * C50834 +
            (C10625 * C396 + C50630 * C410) * C5024 +
            (C10625 * C134 + C50630 * C144) * C50940 +
            (C10625 * C123 + C50630 * C130) * C5023) *
               C7775) *
              C50696 * C50680 * C114 +
          (((C10625 * C124 + C50630 * C131) * C5023 +
            (C10625 * C135 + C50630 * C145) * C50940 +
            (C10625 * C395 + C50630 * C409) * C5024 +
            (C10625 * C405 + C50630 * C425) * C50834) *
               C7775 +
           (C11001 * C5023 + C11002 * C50940 +
            (C10625 * C777 + C50630 * C782) * C5024 +
            (C10625 * C786 + C50630 * C792) * C50834) *
               C7776 +
           (C11003 * C5023 + C11004 * C50940 +
            (C10625 * C1431 + C50630 * C1439) * C5024 +
            (C10625 * C1435 + C50630 * C1443) * C50834) *
               C7777) *
              C50696 * C50680 * C115 -
          (((C10625 * C1434 + C50630 * C1442) * C50834 +
            (C10625 * C1430 + C50630 * C1438) * C5024 +
            (C10625 * C278 + C50630 * C290) * C50940 +
            (C10625 * C260 + C50630 * C274) * C5023) *
               C7777 +
           ((C10625 * C787 + C50630 * C793) * C50834 +
            (C10625 * C778 + C50630 * C783) * C5024 +
            (C10625 * C263 + C50630 * C283) * C50940 +
            (C10625 * C253 + C50630 * C267) * C5023) *
               C7776 +
           ((C10625 * C404 + C50630 * C424) * C50834 +
            (C10625 * C394 + C50630 * C408) * C5024 +
            (C10625 * C136 + C50630 * C146) * C50940 +
            (C10625 * C125 + C50630 * C132) * C5023) *
               C7775) *
              C50696 * C50680 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 +
             (C10625 * C397 + C50630 * C411) * C5024 +
             (C10625 * C407 + C50630 * C427) * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C248 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C249 +
           (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C10764 * C5023 + C10763 * C50940 + C11929 * C5024 +
             C11930 * C50834) *
                C7777) *
               C50696 * C250) *
              C251 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C249 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            ((C10625 * C406 + C50630 * C426) * C50834 +
             (C10625 * C396 + C50630 * C410) * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C248 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C5024 + C10772 * C50940 +
             C10771 * C5023) *
                C7777 +
            (C12792 + C12791 + C12790 + C12789) * C7776 + C12798 * C7775) *
               C50696 * C250) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C50972 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50973 +
           ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50696 * C1199) *
              C50920 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50973 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C50972 -
           ((C2164 * C1434 + C2159 * C1442 + C2163 * C1435 + C2158 * C1443 +
             C2162 * C1436 + C2157 * C1444) *
                C50834 +
            (C2164 * C1430 + C2159 * C1438 + C2163 * C1431 + C2158 * C1439 +
             C2162 * C1432 + C2157 * C1440) *
                C5024 +
            (C2383 + C2382 + C2381) * C50940 +
            (C2380 + C2379 + C2378) * C5023) *
               C50796 * C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C50972 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50973 +
           (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C50696 * C1199) *
              C50920 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50973 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C50972 -
           (((C10625 * C9647 + C50630 * C9651) * C50834 +
             (C10625 * C9645 + C50630 * C9649) * C5024 + C10772 * C50940 +
             C10771 * C5023) *
                C7777 +
            (C12792 + C12791 + C12790 + C12789) * C7776 + C12798 * C7775) *
               C50696 * C1199) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50929 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50972 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50760 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50929) *
              C50973 +
          (((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C50929 -
           ((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
             C2162 * C3494 + C2157 * C3500) *
                C50834 +
            (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
             C2162 * C3491 + C2157 * C3497) *
                C5024 +
            (C4035 + C4034 + C4033) * C50940 +
            (C4032 + C4031 + C4030) * C5023) *
               C50796 * C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50929 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50972 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50760 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50929) *
              C50973 +
          ((C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C50929 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C5024 + C11930 * C50940 +
             C11929 * C5023) *
                C7777 +
            (C14416 + C14415 + C14414 + C14413) * C7776 + C14418 * C7775) *
               C50760) *
              C1199) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C5366 + C5367 + C5368) * C5024 + (C5369 + C5370 + C5371) * C50834) *
              C50796 * C50696 * C964 -
          ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
           (C2365 + C2364 + C2363) * C50940 + (C2362 + C2361 + C2360) * C5023) *
              C50796 * C50696 * C965 +
          ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
           (C4030 + C4031 + C4032) * C5024 + (C4033 + C4034 + C4035) * C50834) *
              C50796 * C50696 * C966 -
          ((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
            C2162 * C4010 + C2157 * C4016) *
               C50834 +
           (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
            C2162 * C4007 + C2157 * C4013) *
               C5024 +
           (C3343 + C3342 + C3341) * C50940 + (C3340 + C3339 + C3338) * C5023) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C893 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50732 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C50696 * C893 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50834 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C5024 +
            (C2693 + C2692 + C2691) * C50940 +
            (C2690 + C2689 + C2688) * C5023) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C391 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C392 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C2162 * C1717 + C2157 * C1725 + C2163 * C1716 + C2158 * C1724 +
             C2164 * C1715 + C2159 * C1723) *
                C5024 +
            (C2162 * C1721 + C2157 * C1729 + C2163 * C1720 + C2158 * C1728 +
             C2164 * C1719 + C2159 * C1727) *
                C50834) *
               C50796 * C393) *
              C893 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C392 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C391 -
           ((C2164 * C4428 + C2159 * C4434 + C2163 * C4429 + C2158 * C4435 +
             C2162 * C4430 + C2157 * C4436) *
                C50834 +
            (C2164 * C4425 + C2159 * C4431 + C2163 * C4426 + C2158 * C4432 +
             C2162 * C4427 + C2157 * C4433) *
                C5024 +
            (C3519 + C3518 + C3517) * C50940 +
            (C3516 + C3515 + C3514) * C5023) *
               C50796 * C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C893 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50732) *
              C895 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50732 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50696 * C893 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C5024 + C11006 * C50940 +
             C11005 * C5023) *
                C7777 +
            (C13146 + C13145 + C13134 + C13133) * C7776 +
            (C13144 + C13143 + C13128 + C13127) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
            C12970 * C50834) *
               C7775 +
           (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
              C50696 * C964 -
          (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
           (C12772 + C12771 + C12770 + C12769) * C7775) *
              C50696 * C965 +
          (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
           (C13754 + C13755 + C13756 + C13757) * C7777) *
              C50696 * C966 -
          (((C10625 * C11919 + C50630 * C11921) * C50834 +
            (C10625 * C11918 + C50630 * C11920) * C5024 + C11464 * C50940 +
            C11463 * C5023) *
               C7777 +
           (C13757 + C13756 + C13755 + C13754) * C7776 + C13759 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C391 -
           ((C13493 + C13494 + C13495 + C13496) * C7777 +
            (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C392 +
           ((C12972 * C5023 + C12971 * C50940 +
             (C10625 * C1717 + C50630 * C1725) * C5024 +
             (C10625 * C1721 + C50630 * C1729) * C50834) *
                C7775 +
            (C13906 + C13907 + C13922 + C13923) * C7776 +
            (C13912 + C13913 + C13924 + C13925) * C7777) *
               C393) *
              C893 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C11266 * C5023 + C11265 * C50940 + C11585 * C5024 +
             C11586 * C50834) *
                C7777) *
               C392 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C391 -
           (((C10625 * C12195 + C50630 * C12197) * C50834 +
             (C10625 * C12194 + C50630 * C12196) * C5024 + C11586 * C50940 +
             C11585 * C5023) *
                C7777 +
            (C13925 + C13924 + C13913 + C13912) * C7776 +
            (C13923 + C13922 + C13907 + C13906) * C7775) *
               C393) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C5023 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50940 +
             (C5366 + C5367 + C5368) * C5024 +
             (C5369 + C5370 + C5371) * C50834) *
                C50796 * C50929 -
            ((C5372 + C5373 + C5374) * C50834 +
             (C5375 + C5376 + C5377) * C5024 +
             (C5371 + C5370 + C5369) * C50940 +
             (C5368 + C5367 + C5366) * C5023) *
                C50796 * C50760) *
               C893 +
           (((C3063 + C3062 + C3061) * C5023 +
             (C3060 + C3059 + C3058) * C50940 +
             (C3514 + C3515 + C3516) * C5024 +
             (C3517 + C3518 + C3519) * C50834) *
                C50796 * C50760 -
            ((C3058 + C3059 + C3060) * C50834 +
             (C3061 + C3062 + C3063) * C5024 +
             (C2365 + C2364 + C2363) * C50940 +
             (C2362 + C2361 + C2360) * C5023) *
                C50796 * C50929) *
               C50732) *
              C50920 +
          ((((C5378 + C5379 + C5380) * C5023 +
             (C5381 + C5382 + C5383) * C50940 +
             (C5384 + C5385 + C5386) * C5024 +
             (C5387 + C5388 + C5389) * C50834) *
                C50796 * C50760 -
            ((C5383 + C5382 + C5381) * C50834 +
             (C5380 + C5379 + C5378) * C5024 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50940 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C5023) *
                C50796 * C50929) *
               C893 +
           (((C2372 + C2373 + C2374) * C5023 +
             (C2375 + C2376 + C2377) * C50940 +
             (C3064 + C3065 + C3066) * C5024 +
             (C3067 + C3068 + C3069) * C50834) *
                C50796 * C50929 -
            ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50834 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C5024 +
             (C3069 + C3068 + C3067) * C50940 +
             (C3066 + C3065 + C3064) * C5023) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C5023 +
              (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
              C12970 * C50834) *
                 C7775 +
             (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
                C50929 -
            ((C13493 + C13494 + C13495 + C13496) * C7777 +
             (C13497 + C13498 + C13499 + C13500) * C7776 +
             (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
              C12969 * C5023) *
                 C7775) *
                C50760) *
               C893 +
           (((C13500 + C13499 + C13498 + C13497) * C7775 +
             (C13496 + C13495 + C13494 + C13493) * C7776 +
             (C11266 * C5023 + C11265 * C50940 + C11585 * C5024 +
              C11586 * C50834) *
                 C7777) *
                C50760 -
            (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
             (C12772 + C12771 + C12770 + C12769) * C7775) *
                C50929) *
               C50732) *
              C50920 +
          ((((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
              C12976 * C50834) *
                 C7775 +
             (C13501 + C13502 + C13503 + C13504) * C7776 +
             (C13505 + C13506 + C13507 + C13508) * C7777) *
                C50760 -
            (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
             (C12974 * C50834 + C12973 * C5024 +
              (C10625 * C134 + C50630 * C144) * C50940 +
              (C10625 * C123 + C50630 * C130) * C5023) *
                 C7775) *
                C50929) *
               C893 +
           (((C12781 + C12782 + C12783 + C12784) * C7775 +
             (C12785 + C12786 + C12787 + C12788) * C7776 +
             (C12789 + C12790 + C12791 + C12792) * C7777) *
                C50929 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C5024 + C11276 * C50940 +
              C11275 * C5023) *
                 C7777 +
             (C13508 + C13507 + C13506 + C13505) * C7776 +
             (C13504 + C13503 + C13502 + C13501) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50696 * C893 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50696 * C50732) *
              C895 +
          (((C2372 + C2373 + C2374) * C5023 + (C2375 + C2376 + C2377) * C50940 +
            (C3064 + C3065 + C3066) * C5024 +
            (C3067 + C3068 + C3069) * C50834) *
               C50796 * C50696 * C50732 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50696 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C50696 * C893 -
           ((C2164 * C788 + C2159 * C794 + C2163 * C787 + C2158 * C793 +
             C2162 * C786 + C2157 * C792) *
                C50834 +
            (C2164 * C779 + C2159 * C789 + C2163 * C778 + C2158 * C783 +
             C2162 * C777 + C2157 * C782) *
                C5024 +
            (C2693 + C2692 + C2691) * C50940 +
            (C2690 + C2689 + C2688) * C5023) *
               C50796 * C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C5366 + C5367 + C5368) * C5024 + (C5369 + C5370 + C5371) * C50834) *
              C50796 * C50696 * C964 -
          ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
           (C2365 + C2364 + C2363) * C50940 + (C2362 + C2361 + C2360) * C5023) *
              C50796 * C50696 * C965 +
          ((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
           (C4030 + C4031 + C4032) * C5024 + (C4033 + C4034 + C4035) * C50834) *
              C50796 * C50696 * C966 -
          ((C2164 * C4008 + C2159 * C4014 + C2163 * C4009 + C2158 * C4015 +
            C2162 * C4010 + C2157 * C4016) *
               C50834 +
           (C2164 * C4005 + C2159 * C4011 + C2163 * C4006 + C2158 * C4012 +
            C2162 * C4007 + C2157 * C4013) *
               C5024 +
           (C3343 + C3342 + C3341) * C50940 + (C3340 + C3339 + C3338) * C5023) *
              C50796 * C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50696 * C893 -
           ((C12777 + C12778 + C12779 + C12780) * C7777 +
            (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50696 * C50732) *
              C895 +
          (((C12781 + C12782 + C12783 + C12784) * C7775 +
            (C12785 + C12786 + C12787 + C12788) * C7776 +
            (C12789 + C12790 + C12791 + C12792) * C7777) *
               C50696 * C50732 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50696 * C893) *
              C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C50696 * C893 -
           (((C10625 * C4008 + C50630 * C4014) * C50834 +
             (C10625 * C4005 + C50630 * C4011) * C5024 + C11006 * C50940 +
             C11005 * C5023) *
                C7777 +
            (C13146 + C13145 + C13134 + C13133) * C7776 +
            (C13144 + C13143 + C13128 + C13127) * C7775) *
               C50696 * C50732) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
            C12970 * C50834) *
               C7775 +
           (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
              C50696 * C964 -
          (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
           (C12772 + C12771 + C12770 + C12769) * C7775) *
              C50696 * C965 +
          (C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
           (C13754 + C13755 + C13756 + C13757) * C7777) *
              C50696 * C966 -
          (((C10625 * C11919 + C50630 * C11921) * C50834 +
            (C10625 * C11918 + C50630 * C11920) * C5024 + C11464 * C50940 +
            C11463 * C5023) *
               C7777 +
           (C13757 + C13756 + C13755 + C13754) * C7776 + C13759 * C7775) *
              C50696 * C967) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
              C2164 * C124 + C2159 * C131) *
                 C5023 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
              C2164 * C135 + C2159 * C145) *
                 C50940 +
             (C5366 + C5367 + C5368) * C5024 +
             (C5369 + C5370 + C5371) * C50834) *
                C50796 * C1544 -
            ((C5372 + C5373 + C5374) * C50834 +
             (C5375 + C5376 + C5377) * C5024 +
             (C5371 + C5370 + C5369) * C50940 +
             (C5368 + C5367 + C5366) * C5023) *
                C50796 * C50760) *
               C50928 +
           (((C3063 + C3062 + C3061) * C5023 +
             (C3060 + C3059 + C3058) * C50940 +
             (C3514 + C3515 + C3516) * C5024 +
             (C3517 + C3518 + C3519) * C50834) *
                C50796 * C50760 -
            ((C3058 + C3059 + C3060) * C50834 +
             (C3061 + C3062 + C3063) * C5024 +
             (C2365 + C2364 + C2363) * C50940 +
             (C2362 + C2361 + C2360) * C5023) *
                C50796 * C1544) *
               C50732) *
              C50920 +
          ((((C5378 + C5379 + C5380) * C5023 +
             (C5381 + C5382 + C5383) * C50940 +
             (C5384 + C5385 + C5386) * C5024 +
             (C5387 + C5388 + C5389) * C50834) *
                C50796 * C50760 -
            ((C5383 + C5382 + C5381) * C50834 +
             (C5380 + C5379 + C5378) * C5024 +
             (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
              C2162 * C134 + C2157 * C144) *
                 C50940 +
             (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
              C2162 * C123 + C2157 * C130) *
                 C5023) *
                C50796 * C1544) *
               C50928 +
           (((C2372 + C2373 + C2374) * C5023 +
             (C2375 + C2376 + C2377) * C50940 +
             (C3064 + C3065 + C3066) * C5024 +
             (C3067 + C3068 + C3069) * C50834) *
                C50796 * C1544 -
            ((C2164 * C1087 + C2159 * C1095 + C2163 * C1088 + C2158 * C1096 +
              C2162 * C1089 + C2157 * C1097) *
                 C50834 +
             (C2164 * C1083 + C2159 * C1091 + C2163 * C1084 + C2158 * C1092 +
              C2162 * C1085 + C2157 * C1093) *
                 C5024 +
             (C3069 + C3068 + C3067) * C50940 +
             (C3066 + C3065 + C3064) * C5023) *
                C50796 * C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10625 * C122 + C50630 * C129) * C5023 +
              (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
              C12970 * C50834) *
                 C7775 +
             (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
                C1544 -
            (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
             (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
              C12969 * C5023) *
                 C7775) *
                C50760) *
               C50928 +
           (((C13500 + C13499 + C13498 + C13497) * C7775 +
             (C13496 + C13495 + C13494 + C13493) * C7776 +
             (C14413 + C14414 + C14415 + C14416) * C7777) *
                C50760 -
            (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
             (C12772 + C12771 + C12770 + C12769) * C7775) *
                C1544) *
               C50732) *
              C50920 +
          ((((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
              C12976 * C50834) *
                 C7775 +
             (C13501 + C13502 + C13503 + C13504) * C7776 +
             (C13505 + C13506 + C13507 + C13508) * C7777) *
                C50760 -
            (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
             (C12974 * C50834 + C12973 * C5024 +
              (C10625 * C134 + C50630 * C144) * C50940 +
              (C10625 * C123 + C50630 * C130) * C5023) *
                 C7775) *
                C1544) *
               C50928 +
           (((C12781 + C12782 + C12783 + C12784) * C7775 +
             (C12785 + C12786 + C12787 + C12788) * C7776 +
             (C12789 + C12790 + C12791 + C12792) * C7777) *
                C1544 -
            (((C10625 * C9129 + C50630 * C9133) * C50834 +
              (C10625 * C9127 + C50630 * C9131) * C5024 + C11276 * C50940 +
              C11275 * C5023) *
                 C7777 +
             (C13508 + C13507 + C13506 + C13505) * C7776 +
             (C13504 + C13503 + C13502 + C13501) * C7775) *
                C50760) *
               C50732) *
              C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50974 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50975 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C7184 + C7185 + C7186) * C5024 +
            (C7187 + C7188 + C7189) * C50834) *
               C50796 * C1960) *
              C50928 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50975 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C50974 -
           ((C2164 * C4428 + C2159 * C4434 + C2163 * C4429 + C2158 * C4435 +
             C2162 * C4430 + C2157 * C4436) *
                C50834 +
            (C2164 * C4425 + C2159 * C4431 + C2163 * C4426 + C2158 * C4432 +
             C2162 * C4427 + C2157 * C4433) *
                C5024 +
            (C3519 + C3518 + C3517) * C50940 +
            (C3516 + C3515 + C3514) * C5023) *
               C50796 * C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50974 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50975 +
           ((C12972 * C5023 + C12971 * C50940 + C14821 * C5024 +
             C14822 * C50834) *
                C7775 +
            (C13906 + C13907 + C13922 + C13923) * C7776 +
            (C13912 + C13913 + C13924 + C13925) * C7777) *
               C1960) *
              C50928 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50975 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C50974 -
           (((C10625 * C12195 + C50630 * C12197) * C50834 +
             (C10625 * C12194 + C50630 * C12196) * C5024 + C11586 * C50940 +
             C11585 * C5023) *
                C7777 +
            (C13925 + C13924 + C13913 + C13912) * C7776 +
            (C13923 + C13922 + C13907 + C13906) * C7775) *
               C1960) *
              C50732) *
         C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C1544 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C248 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50760 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C1544) *
              C249 +
          (((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C1544 -
           ((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
             C2162 * C3494 + C2157 * C3500) *
                C50834 +
            (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
             C2162 * C3491 + C2157 * C3497) *
                C5024 +
            (C4035 + C4034 + C4033) * C50940 +
            (C4032 + C4031 + C4030) * C5023) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C1544 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50760 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C1544 -
           ((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
             C2162 * C418 + C2157 * C430) *
                C50834 +
            (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
             C2162 * C400 + C2157 * C414) *
                C5024 +
            (C5699 + C5698 + C5697) * C50940 +
            (C5696 + C5695 + C5694) * C5023) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
            C2164 * C124 + C2159 * C131) *
               C5023 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
            C2164 * C135 + C2159 * C145) *
               C50940 +
           (C5366 + C5367 + C5368) * C5024 + (C5369 + C5370 + C5371) * C50834) *
              C50796 * C1710 -
          ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
           (C5371 + C5370 + C5369) * C50940 + (C5368 + C5367 + C5366) * C5023) *
              C50796 * C1711 +
          ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
           (C7184 + C7185 + C7186) * C5024 + (C7187 + C7188 + C7189) * C50834) *
              C50796 * C1712 -
          ((C2164 * C7162 + C2159 * C7168 + C2163 * C7163 + C2158 * C7169 +
            C2162 * C7164 + C2157 * C7170) *
               C50834 +
           (C2164 * C7159 + C2159 * C7165 + C2163 * C7160 + C2158 * C7166 +
            C2162 * C7161 + C2157 * C7167) *
               C5024 +
           (C7189 + C7188 + C7187) * C50940 + (C7186 + C7185 + C7184) * C5023) *
              C50796 * C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C13501 + C13502 + C13503 + C13504) * C7776 +
            (C13505 + C13506 + C13507 + C13508) * C7777) *
               C50760 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C1544 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C5024 + C13142 * C50940 +
             C13141 * C5023) *
                C7777 +
            ((C10625 * C1088 + C50630 * C1096) * C50834 +
             (C10625 * C1084 + C50630 * C1092) * C5024 + C13140 * C50940 +
             C13139 * C5023) *
                C7776 +
            ((C10625 * C418 + C50630 * C430) * C50834 +
             (C10625 * C400 + C50630 * C414) * C5024 + C13298 * C50940 +
             C13297 * C5023) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C248 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50760 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C1544) *
              C249 +
          ((C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C1544 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C5024 + C11930 * C50940 +
             C11929 * C5023) *
                C7777 +
            (C14416 + C14415 + C14414 + C14413) * C7776 + C14418 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10625 * C122 + C50630 * C129) * C5023 +
            (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
            C12970 * C50834) *
               C7775 +
           (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
              C1710 -
          (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
           (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
            C12969 * C5023) *
               C7775) *
              C1711 +
          ((C12972 * C5023 + C12971 * C50940 + C14821 * C5024 +
            C14822 * C50834) *
               C7775 +
           (C13906 + C13907 + C13922 + C13923) * C7776 +
           (C13912 + C13913 + C13924 + C13925) * C7777) *
              C1712 -
          (((C10625 * C14810 + C50630 * C14814) * C50834 +
            (C10625 * C14808 + C50630 * C14811) * C5024 + C13921 * C50940 +
            C13920 * C5023) *
               C7777 +
           ((C10625 * C14812 + C50630 * C14815) * C50834 +
            (C10625 * C14809 + C50630 * C14813) * C5024 + C13919 * C50940 +
            C13918 * C5023) *
               C7776 +
           ((C10625 * C7164 + C50630 * C7170) * C50834 +
            (C10625 * C7161 + C50630 * C7167) * C5024 + C14822 * C50940 +
            C14821 * C5023) *
               C7775) *
              C1713) *
         C50680 * C50661) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C50974 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50975 +
           ((C5377 + C5376 + C5375) * C5023 + (C5374 + C5373 + C5372) * C50940 +
            (C7184 + C7185 + C7186) * C5024 +
            (C7187 + C7188 + C7189) * C50834) *
               C50796 * C1960) *
              C50680 * C50920 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50975 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C50974 -
           ((C2164 * C1718 + C2159 * C1726 + C2163 * C1719 + C2158 * C1727 +
             C2162 * C1720 + C2157 * C1728) *
                C50834 +
            (C2164 * C1714 + C2159 * C1722 + C2163 * C1715 + C2158 * C1723 +
             C2162 * C1716 + C2157 * C1724) *
                C5024 +
            (C5389 + C5388 + C5387) * C50940 +
            (C5386 + C5385 + C5384) * C5023) *
               C50796 * C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C50974 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50975 +
           ((C12972 * C5023 + C12971 * C50940 + C14821 * C5024 +
             C14822 * C50834) *
                C7775 +
            (C13906 + C13907 + C13922 + C13923) * C7776 +
            (C13912 + C13913 + C13924 + C13925) * C7777) *
               C1960) *
              C50680 * C50920 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C13501 + C13502 + C13503 + C13504) * C7776 +
            (C13505 + C13506 + C13507 + C13508) * C7777) *
               C50975 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C50974 -
           (((C10625 * C10062 + C50630 * C10066) * C50834 +
             (C10625 * C10060 + C50630 * C10064) * C5024 + C12980 * C50940 +
             C12979 * C5023) *
                C7777 +
            ((C10625 * C4429 + C50630 * C4435) * C50834 +
             (C10625 * C4426 + C50630 * C4432) * C5024 + C12978 * C50940 +
             C12977 * C5023) *
                C7776 +
            ((C10625 * C1720 + C50630 * C1728) * C50834 +
             (C10625 * C1716 + C50630 * C1724) * C5024 + C12976 * C50940 +
             C12975 * C5023) *
                C7775) *
               C1960) *
              C50680 * C50667)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C1544 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C50680 * C895 +
          (((C5378 + C5379 + C5380) * C5023 + (C5381 + C5382 + C5383) * C50940 +
            (C5384 + C5385 + C5386) * C5024 +
            (C5387 + C5388 + C5389) * C50834) *
               C50796 * C50760 -
           ((C5383 + C5382 + C5381) * C50834 + (C5380 + C5379 + C5378) * C5024 +
            (C2164 * C136 + C2159 * C146 + C2163 * C135 + C2158 * C145 +
             C2162 * C134 + C2157 * C144) *
                C50940 +
            (C2164 * C125 + C2159 * C132 + C2163 * C124 + C2158 * C131 +
             C2162 * C123 + C2157 * C130) *
                C5023) *
               C50796 * C1544) *
              C50680 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C2158 * C132 +
             C2164 * C126 + C2159 * C138) *
                C5023 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C2158 * C146 +
             C2164 * C137 + C2159 * C147) *
                C50940 +
            (C5694 + C5695 + C5696) * C5024 +
            (C5697 + C5698 + C5699) * C50834) *
               C50796 * C1544 -
           ((C2164 * C422 + C2159 * C433 + C2163 * C419 + C2158 * C431 +
             C2162 * C418 + C2157 * C430) *
                C50834 +
            (C2164 * C403 + C2159 * C423 + C2163 * C401 + C2158 * C415 +
             C2162 * C400 + C2157 * C414) *
                C5024 +
            (C5699 + C5698 + C5697) * C50940 +
            (C5696 + C5695 + C5694) * C5023) *
               C50796 * C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C2158 * C130 +
             C2164 * C124 + C2159 * C131) *
                C5023 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C2158 * C144 +
             C2164 * C135 + C2159 * C145) *
                C50940 +
            (C5366 + C5367 + C5368) * C5024 +
            (C5369 + C5370 + C5371) * C50834) *
               C50796 * C1544 -
           ((C5372 + C5373 + C5374) * C50834 + (C5375 + C5376 + C5377) * C5024 +
            (C5371 + C5370 + C5369) * C50940 +
            (C5368 + C5367 + C5366) * C5023) *
               C50796 * C50760) *
              C248 +
          (((C3063 + C3062 + C3061) * C5023 + (C3060 + C3059 + C3058) * C50940 +
            (C3514 + C3515 + C3516) * C5024 +
            (C3517 + C3518 + C3519) * C50834) *
               C50796 * C50760 -
           ((C3058 + C3059 + C3060) * C50834 + (C3061 + C3062 + C3063) * C5024 +
            (C2365 + C2364 + C2363) * C50940 +
            (C2362 + C2361 + C2360) * C5023) *
               C50796 * C1544) *
              C249 +
          (((C2371 + C2370 + C2369) * C5023 + (C2368 + C2367 + C2366) * C50940 +
            (C4030 + C4031 + C4032) * C5024 +
            (C4033 + C4034 + C4035) * C50834) *
               C50796 * C1544 -
           ((C2164 * C3492 + C2159 * C3498 + C2163 * C3493 + C2158 * C3499 +
             C2162 * C3494 + C2157 * C3500) *
                C50834 +
            (C2164 * C3489 + C2159 * C3495 + C2163 * C3490 + C2158 * C3496 +
             C2162 * C3491 + C2157 * C3497) *
                C5024 +
            (C4035 + C4034 + C4033) * C50940 +
            (C4032 + C4031 + C4030) * C5023) *
               C50796 * C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C50680 * C895 +
          (((C12973 * C5023 + C12974 * C50940 + C12975 * C5024 +
             C12976 * C50834) *
                C7775 +
            (C13501 + C13502 + C13503 + C13504) * C7776 +
            (C13505 + C13506 + C13507 + C13508) * C7777) *
               C50760 -
           (C12798 * C7777 + (C12784 + C12783 + C12782 + C12781) * C7776 +
            (C12974 * C50834 + C12973 * C5024 +
             (C10625 * C134 + C50630 * C144) * C50940 +
             (C10625 * C123 + C50630 * C130) * C5023) *
                C7775) *
               C1544) *
              C50680 * C896 +
          ((((C10625 * C124 + C50630 * C131) * C5023 +
             (C10625 * C135 + C50630 * C145) * C50940 + C13297 * C5024 +
             C13298 * C50834) *
                C7775 +
            (C13127 + C13128 + C13143 + C13144) * C7776 +
            (C13133 + C13134 + C13145 + C13146) * C7777) *
               C1544 -
           (((C10625 * C3492 + C50630 * C3498) * C50834 +
             (C10625 * C3489 + C50630 * C3495) * C5024 + C13142 * C50940 +
             C13141 * C5023) *
                C7777 +
            ((C10625 * C1088 + C50630 * C1096) * C50834 +
             (C10625 * C1084 + C50630 * C1092) * C5024 + C13140 * C50940 +
             C13139 * C5023) *
                C7776 +
            ((C10625 * C418 + C50630 * C430) * C50834 +
             (C10625 * C400 + C50630 * C414) * C5024 + C13298 * C50940 +
             C13297 * C5023) *
                C7775) *
               C50760) *
              C50680 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10625 * C122 + C50630 * C129) * C5023 +
             (C10625 * C133 + C50630 * C143) * C50940 + C12969 * C5024 +
             C12970 * C50834) *
                C7775 +
            (C12769 + C12770 + C12771 + C12772) * C7776 + C12797 * C7777) *
               C1544 -
           (C14418 * C7777 + (C13497 + C13498 + C13499 + C13500) * C7776 +
            (C12971 * C50834 + C12972 * C5024 + C12970 * C50940 +
             C12969 * C5023) *
                C7775) *
               C50760) *
              C248 +
          (((C13500 + C13499 + C13498 + C13497) * C7775 +
            (C13496 + C13495 + C13494 + C13493) * C7776 +
            (C14413 + C14414 + C14415 + C14416) * C7777) *
               C50760 -
           (C13759 * C7777 + (C12776 + C12775 + C12774 + C12773) * C7776 +
            (C12772 + C12771 + C12770 + C12769) * C7775) *
               C1544) *
              C249 +
          ((C12797 * C7775 + (C12780 + C12779 + C12778 + C12777) * C7776 +
            (C13754 + C13755 + C13756 + C13757) * C7777) *
               C1544 -
           (((C10625 * C11565 + C50630 * C11567) * C50834 +
             (C10625 * C11564 + C50630 * C11566) * C5024 + C11930 * C50940 +
             C11929 * C5023) *
                C7777 +
            (C14416 + C14415 + C14414 + C14413) * C7776 + C14418 * C7775) *
               C50760) *
              C250) *
         C50661) /
            (p * q * std::sqrt(p + q));
}
